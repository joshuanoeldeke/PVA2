commit_index,author_name,author_email,date,commit_hash,commit_link,commit_message,files_changed,are_we_interested,has_test_file,unittest_in_code,unittest_in_added_diffs,unittest_in_removed_diffs,pytest_in_code,pytest_in_added_diffs,pytest_in_removed_diffs,Mig: assert,Mig: fixture,Mig: import,Mig: skip,Mig: failure,Mig: testcase,Mig: add Param,tags,u_added_count_testcase_subclass,u_added_count_self_assert,u_added_count_setup,u_added_count_setupClass,u_added_count_teardown,u_added_count_teardownClass,u_added_count_unittest_skip,u_added_count_unittest_self_skip,u_added_count_unittest_expected_failure,u_added_count_unittest_mock_pattern,u_added_count_import_unittest,u_removed_count_testcase_subclass,u_removed_count_self_assert,u_removed_count_setup,u_removed_count_setupClass,u_removed_count_teardown,u_removed_count_teardownClass,u_removed_count_unittest_skip,u_removed_count_unittest_self_skip,u_removed_count_unittest_expected_failure,u_removed_count_unittest_mock_pattern,u_removed_count_import_unittest,p_added_count_native_assert,p_added_count_pytest_raises,p_added_count_simple_skip,p_added_count_mark_skip,p_added_count_pytest_expected_failure,p_added_count_fixture,p_added_count_usefixtures,p_added_count_parametrize,p_added_count_generic_mark,p_added_count_generic_pytest,p_added_count_monkeypatch,p_added_count_pytest_mock,p_added_count_import_pytest,p_removed_count_native_assert,p_removed_count_pytest_raises,p_removed_count_simple_skip,p_removed_count_mark_skip,p_removed_count_pytest_expected_failure,p_removed_count_fixture,p_removed_count_usefixtures,p_removed_count_parametrize,p_removed_count_generic_mark,p_removed_count_generic_pytest,p_removed_count_monkeypatch,p_removed_count_pytest_mock,p_removed_count_import_pytest,u_added_matches_testcase_subclass,u_added_matches_self_assert,u_added_matches_setup,u_added_matches_setupClass,u_added_matches_teardown,u_added_matches_teardownClass,u_added_matches_unittest_skip,u_added_matches_unittest_self_skip,u_added_matches_unittest_expected_failure,u_added_matches_unittest_mock_pattern,u_added_matches_import_unittest,u_removed_matches_testcase_subclass,u_removed_matches_self_assert,u_removed_matches_setup,u_removed_matches_setupClass,u_removed_matches_teardown,u_removed_matches_teardownClass,u_removed_matches_unittest_skip,u_removed_matches_unittest_self_skip,u_removed_matches_unittest_expected_failure,u_removed_matches_unittest_mock_pattern,u_removed_matches_import_unittest,p_added_matches_native_assert,p_added_matches_pytest_raises,p_added_matches_simple_skip,p_added_matches_mark_skip,p_added_matches_pytest_expected_failure,p_added_matches_fixture,p_added_matches_usefixtures,p_added_matches_parametrize,p_added_matches_generic_mark,p_added_matches_generic_pytest,p_added_matches_monkeypatch,p_added_matches_pytest_mock,p_added_matches_import_pytest,p_removed_matches_native_assert,p_removed_matches_pytest_raises,p_removed_matches_simple_skip,p_removed_matches_mark_skip,p_removed_matches_pytest_expected_failure,p_removed_matches_fixture,p_removed_matches_usefixtures,p_removed_matches_parametrize,p_removed_matches_generic_mark,p_removed_matches_generic_pytest,p_removed_matches_monkeypatch,p_removed_matches_pytest_mock,p_removed_matches_import_pytest
0,aleju,kontakt@ajung.name,2015-07-10 22:31:34+02:00,c8299bf60af97dbd4d04019b7c224522b80455cf,https://github.com/aleju/imgaug/commit/c8299bf60af97dbd4d04019b7c224522b80455cf,Initial commit,3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1,aleju,kontakt@ajung.name,2015-07-10 22:59:32+02:00,d6bb7325c0070d540456ea15346bc3a9da2710ca,https://github.com/aleju/imgaug/commit/d6bb7325c0070d540456ea15346bc3a9da2710ca,Initial commit,2,False,False,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2,aleju,kontakt@ajung.name,2015-07-11 00:09:30+02:00,1408b93e1615270242db7c92b8a7a2ab8289f787,https://github.com/aleju/imgaug/commit/1408b93e1615270242db7c92b8a7a2ab8289f787,"Improved tests, maybe fixed scaling",3,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
3,aleju,kontakt@ajung.name,2015-07-15 23:58:18+02:00,b8ad8c7267aba824232b45444e3cd475d33b0512,https://github.com/aleju/imgaug/commit/b8ad8c7267aba824232b45444e3cd475d33b0512,Fixed some tests.,2,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
4,aleju,kontakt@ajung.name,2015-07-16 23:51:40+02:00,f22c4ebf74fd00bb8e2ec136ea9cf0f7177ebf61,https://github.com/aleju/imgaug/commit/f22c4ebf74fd00bb8e2ec136ea9cf0f7177ebf61,"Fixed Tests, bugs; Added Tests; Added horizontal and vertical flipping; Changed x-axis to second index, y to first",2,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
5,aleju,kontakt@ajung.name,2015-07-18 02:05:05+02:00,547ceaa92c9806d19a8d4399e4825d7dfa2be039,https://github.com/aleju/imgaug/commit/547ceaa92c9806d19a8d4399e4825d7dfa2be039,"documentation, styling",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
6,aleju,kontakt@ajung.name,2015-07-19 01:42:25+02:00,2e1c28b3825a0016f1fa295c12f0e270ad0fa907,https://github.com/aleju/imgaug/commit/2e1c28b3825a0016f1fa295c12f0e270ad0fa907,"Add function to plot example augmentations, Fix: vlip+hflip doubling image count",2,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
7,aleju,kontakt@ajung.name,2015-07-20 00:09:01+02:00,b720dcb1c701241df36fbd716f568ccbd4fad6c8,https://github.com/aleju/imgaug/commit/b720dcb1c701241df36fbd716f568ccbd4fad6c8,"Add: Performance-Test, Add: Plot-Test, Change: Improved Plotting, Change: Added pregeneration of matrices, Add: More tests, Fix: various bugs with flipping, Change: Performance flipping",4,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
8,aleju,kontakt@ajung.name,2015-07-20 00:29:55+02:00,60596d80e98c1ba623a3c1035c0da9c9a2efc08e,https://github.com/aleju/imgaug/commit/60596d80e98c1ba623a3c1035c0da9c9a2efc08e,"Add comments, styling",2,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
9,aleju,kontakt@ajung.name,2015-07-20 00:30:42+02:00,43ab4aa6a2574f3554e64fddd266396ac301fb73,https://github.com/aleju/imgaug/commit/43ab4aa6a2574f3554e64fddd266396ac301fb73,minor fix,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
10,aleju,kontakt@ajung.name,2015-07-21 01:23:04+02:00,babc04e89a1b4ceffcd90ea2c62febe7c98189e5,https://github.com/aleju/imgaug/commit/babc04e89a1b4ceffcd90ea2c62febe7c98189e5,"Styling, Readme/documentation, extended checks",8,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,3,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(nb_similar_channel_0 > 0.40*nb_augment'), ('True', '(nb_similar_channel_1 > 0.40*nb_augment'), ('True', '(nb_equally_transformed > 0.40*nb_augment')]",[],[],[],[],[],[],[],[],[],[],"[('True', '(nb_similar_channel_0 > 0.40*nb_augment and nb_similar_channel_0 < 0.60*nb_augment)'), ('True', '(nb_similar_channel_1 > 0.40*nb_augment and nb_similar_channel_1 < 0.60*nb_augment)'), ('True', '(nb_equally_transformed > 0.40*nb_augment and nb_equally_transformed < 0.60*nb_augment)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
11,aleju,kontakt@ajung.name,2015-07-21 22:21:46+02:00,c00b33dd40f39b7a1d272d36cc7720d94cf6eea7,https://github.com/aleju/imgaug/commit/c00b33dd40f39b7a1d272d36cc7720d94cf6eea7,Change: performance optimization,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
12,aleju,kontakt@ajung.name,2015-07-21 22:52:49+02:00,3423534c9e44a71f0ff4344f3b12e93bbf89b40b,https://github.com/aleju/imgaug/commit/3423534c9e44a71f0ff4344f3b12e93bbf89b40b,"Extended readme, Added example image",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
13,aleju,kontakt@ajung.name,2015-07-21 23:03:55+02:00,616c94cbeb27c8021b937338795c0f6b650c0093,https://github.com/aleju/imgaug/commit/616c94cbeb27c8021b937338795c0f6b650c0093,readme fixes,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
14,aleju,kontakt@ajung.name,2015-07-21 23:16:52+02:00,4b462e43483242cdfbe994df4a63b407e1c5970a,https://github.com/aleju/imgaug/commit/4b462e43483242cdfbe994df4a63b407e1c5970a,extended readme,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
15,aleju,kontakt@ajung.name,2015-07-21 23:18:47+02:00,41da1de14dc73968843d4dcec47349233730c729,https://github.com/aleju/imgaug/commit/41da1de14dc73968843d4dcec47349233730c729,fix readme,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
16,aleju,kontakt@ajung.name,2015-07-22 22:04:55+02:00,8939d31565c168f2194b08b78519faa30d2e0bcf,https://github.com/aleju/imgaug/commit/8939d31565c168f2194b08b78519faa30d2e0bcf,Add: comments,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
17,aleju,kontakt@ajung.name,2015-08-11 20:21:46+02:00,e86481de4c6b93890749e301c3fcbfe39b129550,https://github.com/aleju/imgaug/commit/e86481de4c6b93890749e301c3fcbfe39b129550,Modified: seed should now affact all random-functions in augment_batch; early stopping in augment_batch for performance; Add: fig parameter in show_images,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
18,aleju,kontakt@ajung.name,2016-10-22 15:47:24+02:00,cd1004363d853881237f24f8d2fe52c03f7d0d8f,https://github.com/aleju/imgaug/commit/cd1004363d853881237f24f8d2fe52c03f7d0d8f,Add basic files of next version,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
19,aleju,kontakt@ajung.name,2016-10-23 20:49:30+02:00,22775a2658678cb4602bc1fa8675516290d1a40d,https://github.com/aleju/imgaug/commit/22775a2658678cb4602bc1fa8675516290d1a40d,"Improve architecture, add augmenters",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
20,aleju,kontakt@ajung.name,2016-10-24 18:38:21+02:00,d7d5b38de2f9bbfa297e034cf238e29593802970,https://github.com/aleju/imgaug/commit/d7d5b38de2f9bbfa297e034cf238e29593802970,"Add affine transformation, add discrete uniform",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
21,aleju,kontakt@ajung.name,2016-10-25 22:08:26+02:00,b11788ae269e2e3038257c0b96b9050a268aa1f1,https://github.com/aleju/imgaug/commit/b11788ae269e2e3038257c0b96b9050a268aa1f1,"Add normal dist, add clip param",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
22,aleju,kontakt@ajung.name,2016-10-30 15:51:26+01:00,e64e306c9a54fde016d911319b132416d28d4917,https://github.com/aleju/imgaug/commit/e64e306c9a54fde016d911319b132416d28d4917,"Add GaussianNoise, fix errors, start background augmenter, refactor files",3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
23,aleju,kontakt@ajung.name,2016-11-02 18:11:34+01:00,86e7d1e229b0718c83c741c35379a14380b8f1e4,https://github.com/aleju/imgaug/commit/86e7d1e229b0718c83c741c35379a14380b8f1e4,Add new augmenters,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
24,aleju,kontakt@ajung.name,2016-11-08 22:44:02+01:00,bef207d04225d23125d21f809c39bb38c5b1805a,https://github.com/aleju/imgaug/commit/bef207d04225d23125d21f809c39bb38c5b1805a,"Refactor to new determinism technique, add planned augmenters dummies",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
25,aleju,kontakt@ajung.name,2016-11-09 22:16:26+01:00,786b6e4e984a63208364ad1c19b4582d8f4c1866,https://github.com/aleju/imgaug/commit/786b6e4e984a63208364ad1c19b4582d8f4c1866,"Fix errors, improve performance, add placeholder classes",3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
26,aleju,kontakt@ajung.name,2016-11-09 22:16:51+01:00,d009c998007fe3bd4a8d3134499e3fde99513381,https://github.com/aleju/imgaug/commit/d009c998007fe3bd4a8d3134499e3fde99513381,Refactor tests for current version,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
27,aleju,kontakt@ajung.name,2016-11-10 22:33:17+01:00,2ee7ee03dd71cf59f7977beb0ed53738e2ac8349,https://github.com/aleju/imgaug/commit/2ee7ee03dd71cf59f7977beb0ed53738e2ac8349,Allow parameters as arguments of parameter constructors,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
28,aleju,kontakt@ajung.name,2016-11-11 20:49:26+01:00,836387ac370ea9cf131ba0449cb70e9d29c68fcd,https://github.com/aleju/imgaug/commit/836387ac370ea9cf131ba0449cb70e9d29c68fcd,Add sequential find/remove; add deactivation; start augjob; refactor/fix various smaller things,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
29,aleju,kontakt@ajung.name,2016-11-12 22:21:54+01:00,97cdbadf18df044a03865e9834d312a1daacb02e,https://github.com/aleju/imgaug/commit/97cdbadf18df044a03865e9834d312a1daacb02e,Allow lists of images; rename deactivated -> activated; rename transform() -> augment_images(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
30,aleju,kontakt@ajung.name,2016-11-13 20:12:02+01:00,c15c92491bcb80977c0af877e2c0455374786e6a,https://github.com/aleju/imgaug/commit/c15c92491bcb80977c0af877e2c0455374786e6a,"Add hooks, add keypoint augmentation, fix Sometimes, fix Affine",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
31,aleju,kontakt@ajung.name,2016-11-15 23:31:07+01:00,03335f0bbb33af6438c6b30d3172f12a3a49f6be,https://github.com/aleju/imgaug/commit/03335f0bbb33af6438c6b30d3172f12a3a49f6be,Add new tests,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'errored', 'errored', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'errored', 'errored', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'errored', 'errored', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'errored', 'errored', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'int(nb_iterations * 0.3) <= nb_images_flipped <= int(nb_iterations * 0.7)', 'int(nb_iterations * 0.3) <= nb_keypoints_flipped <= int(nb_iterations * 0.7)', 'nb_images_flipped_det in [0, nb_iterations]', 'nb_keypoints_flipped_det in [0, nb_iterations]', 'int(nb_iterations * 0.3) <= val <= int(nb_iterations * 0.7)', 'val in [0, nb_iterations]', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'int(nb_iterations * 0.3) <= nb_images_flipped <= int(nb_iterations * 0.7)', 'int(nb_iterations * 0.3) <= nb_keypoints_flipped <= int(nb_iterations * 0.7)', 'nb_images_flipped_det in [0, nb_iterations]', 'nb_keypoints_flipped_det in [0, nb_iterations]', 'int(nb_iterations * 0.3) <= val <= int(nb_iterations * 0.7)', 'val in [0, nb_iterations]', 'isinstance(list1, list)', 'isinstance(list2, list)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
32,aleju,kontakt@ajung.name,2016-11-15 23:31:17+01:00,4837a367a987bd82c3c2df7e6fa7d7b89da465e3,https://github.com/aleju/imgaug/commit/4837a367a987bd82c3c2df7e6fa7d7b89da465e3,Fix various bugs,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
33,aleju,kontakt@ajung.name,2016-11-18 23:03:12+01:00,49c2f21a6899f2fcb6445abc05707ee29db9f066,https://github.com/aleju/imgaug/commit/49c2f21a6899f2fcb6445abc05707ee29db9f066,"Add tests, fix various bugs",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['array_equal_lists(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'np.array_equal(observed, expected)', 'errored', 'np.array_equal(observed, expected)', 'errored', 'array_equal_lists(observed, expected)', 'errored', 'array_equal_lists(observed, expected)', 'errored', 'keypoints_equal(observed, expected)', 'errored', 'keypoints_equal(observed, expected)', 'errored', 'np.array_equal(observed, expected)', '100 < observed[0][1, 1] < 255', '(observed[0][outer_pixels[0], outer_pixels[1]] > 0).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 50).all()', '100 < observed[0][1, 1] < 255', '(observed[0][outer_pixels[0], outer_pixels[1]] > 0).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 50).all()', '100 < observed[0][1, 1] < 255', '(observed[0][outer_pixels[0], outer_pixels[1]] > 0).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 50).all()', '100 < observed[0][1, 1] < 255', '(observed[0][outer_pixels[0], outer_pixels[1]] > 0).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 50).all()', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'nb_changed_aug >= int(nb_iterations * 0.8)', 'nb_changed_aug_det == 0', 'np.array_equal(observed, expected)', 'not np.array_equal(observed, images)', 'not np.array_equal(observed, images)', 'not array_equal_lists(observed, images_list)', 'not array_equal_lists(observed, images_list)', 'keypoints_equal(observed, keypoints)', 'keypoints_equal(observed, keypoints)', 'np.min(values) == 0', '0.1 < np.std(values) / 255.0 < 0.4', '54 < np.average(values) < 74 # loc=0.25 should be around 255*0.25=64 average', 'nb_changed_aug >= int(nb_iterations * 0.95)', 'nb_changed_aug_det == 0', 'nb_changed_aug >= int(nb_iterations * 0.95)', 'nb_changed_aug_det == 0']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
34,aleju,kontakt@ajung.name,2016-11-19 22:47:37+01:00,4d4fbe97b1342706e6126ac4764da496f93de09d,https://github.com/aleju/imgaug/commit/4d4fbe97b1342706e6126ac4764da496f93de09d,"Add tests, fix bugs, split translate into px/percent, make DiscreteUniform a<=x<=b",3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,186,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['ia.is_single_integer() == False', 'ia.is_single_integer(None) == False', 'ia.is_single_integer(1.2) == False', 'ia.is_single_integer(1.0) == False', 'ia.is_single_integer(np.ones((1,), dtype=np.float32)[0]) == False', 'ia.is_single_integer(1) == True', 'ia.is_single_integer(1234) == True', 'ia.is_single_integer(np.ones((1,), dtype=np.uint8)[0]) == True', 'ia.is_single_integer(np.ones((1,), dtype=np.int32)[0]) == True', 'ia.is_single_float() == False', 'ia.is_single_float(None) == False', 'ia.is_single_float(1.2) == True', 'ia.is_single_float(1.0) == True', 'ia.is_single_float(np.ones((1,), dtype=np.float32)[0]) == True', 'ia.is_single_float(1) == False', 'ia.is_single_float(1234) == False', 'ia.is_single_float(np.ones((1,), dtype=np.uint8)[0]) == False', 'ia.is_single_float(np.ones((1,), dtype=np.int32)[0]) == False', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'not np.array_equal(observed, images)', '0.35 <= (1 - percent_nonzero) <= 0.65', 'not np.array_equal(observed, images)', '0.35 <= (1 - percent_nonzero) <= 0.65', 'not array_equal_lists(observed, images_list)', '0.35 <= (1 - percent_nonzero) <= 0.65', 'not array_equal_lists(observed, images_list)', '0.35 <= (1 - percent_nonzero) <= 0.65', 'keypoints_equal(observed, keypoints)', 'keypoints_equal(observed, keypoints)', 'nb_changed_aug >= int(nb_iterations * 0.95)', 'nb_changed_aug_det == 0', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'nb_changed_aug >= int(nb_iterations * 0.95)', 'nb_changed_aug_det == 0', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'array_equal_lists(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y > 2', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y > 2', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y == 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y == 2', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y == 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y == 2', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0].keypoints[0].x == 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x == 2', 'observed[0].keypoints[2].y > 2', 'observed[0].keypoints[0].x == 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x == 2', 'observed[0].keypoints[2].y > 2', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'nb_changed_aug >= int(nb_iterations * 0.8)', 'nb_changed_aug_det == 0', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'len(observed_aug[0].nonzero()[0]) == 1', 'len(observed_aug_det[0].nonzero()[0]) == 1', 'nb_changed_aug >= int(nb_iterations * 0.7)', 'nb_changed_aug_det == 0', '(centers_aug > int(nb_iterations * (1/9 * 0.6))).all()', '(centers_aug < int(nb_iterations * (1/9 * 1.4))).all()']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
35,aleju,kontakt@ajung.name,2016-11-20 19:25:25+01:00,dcc7400d869958e0ada1d22c156b3b90ff4cf319,https://github.com/aleju/imgaug/commit/dcc7400d869958e0ada1d22c156b3b90ff4cf319,"Add tests, fix bugs, add missing aug commit, improve Affine cval/mode/order, add Choice",3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'nb_changed_aug >= int(nb_iterations * 0.9)', 'nb_changed_aug_det == 0', 'pixels_sums_aug[1, 1] > (nb_iterations * 0.98)', 'pixels_sums_aug[1, 1] < (nb_iterations * 1.02)', '(pixels_sums_aug[outer_pixels] > int(nb_iterations * (2/8 * 0.4))).all()', '(pixels_sums_aug[outer_pixels] < int(nb_iterations * (2/8 * 2.0))).all()', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', 'nb_changed_aug >= int(nb_iterations * 0.9)', 'nb_changed_aug_det == 0', 'pixels_sums_aug[1, 1] > (nb_iterations * 0.98)', 'pixels_sums_aug[1, 1] < (nb_iterations * 1.02)', 'len(set(averages)) > 200', 'np.array_equal(observed, images_lr_ud)', 'np.array_equal(observed, images_lr_ud)', 'array_equal_lists(observed, images_lr_ud_list)', 'array_equal_lists(observed, images_lr_ud_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'np.array_equal(observed_aug, images) or np.array_equal(observed_aug, images_lr) or np.array_equal(observed_aug, images_ud) or np.array_equal(observed_aug, images_lr_ud)', 'np.array_equal(observed_aug_det, images) or np.array_equal(observed_aug_det, images_lr) or np.array_equal(observed_aug_det, images_ud) or np.array_equal(observed_aug_det, images_lr_ud)', '(0.25 - 0.05) <= (1 - (nb_changed_aug / nb_iterations)) <= (0.25 + 0.05) # should be the same in roughly 25% of all cases', 'nb_changed_aug_det == 0', 'nb_changed_aug == 0', 'nb_changed_aug_det == 0', 'nb_images_first_second_unrandom == nb_iterations', 'nb_images_second_first_unrandom == 0', 'nb_keypoints_first_second_unrandom == nb_iterations', 'nb_keypoints_second_first_unrandom == 0', '(0.50 - 0.1) <= nb_images_first_second_random / nb_iterations <= (0.50 + 0.1)', '(0.50 - 0.1) <= nb_images_second_first_random / nb_iterations <= (0.50 + 0.1)', '(0.50 - 0.1) <= nb_keypoints_first_second_random / nb_iterations <= (0.50 + 0.1)', '(0.50 - 0.1) <= nb_keypoints_second_first_random / nb_iterations <= (0.50 + 0.1)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
36,aleju,kontakt@ajung.name,2016-11-20 19:26:05+01:00,a1ffcada5b90540eb10187f632f1947eae0849a2,https://github.com/aleju/imgaug/commit/a1ffcada5b90540eb10187f632f1947eae0849a2,"Add tests, fix bugs, add missing aug commit, improve Affine cval/mode/order, add Choice",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
37,aleju,kontakt@ajung.name,2016-11-20 23:04:37+01:00,6565bf5f48e51ccd3c29c66f88d316e8a4cda031,https://github.com/aleju/imgaug/commit/6565bf5f48e51ccd3c29c66f88d316e8a4cda031,"Add tests, fix bugs, add draw grid function",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['(0.25 - 0.10) <= (1 - (nb_changed_aug / nb_iterations)) <= (0.25 + 0.10) # should be the same in roughly 25% of all cases', 'np.array_equal(observed, images_lr)', 'np.array_equal(observed, images_lr)', 'array_equal_lists(observed, images_lr_list)', 'array_equal_lists(observed, images_lr_list)', 'keypoints_equal(observed, keypoints_lr)', 'keypoints_equal(observed, keypoints_lr)', 'np.array_equal(observed, images_ud)', 'np.array_equal(observed, images_ud)', 'array_equal_lists(observed, images_ud_list)', 'array_equal_lists(observed, images_ud_list)', 'keypoints_equal(observed, keypoints_ud)', 'keypoints_equal(observed, keypoints_ud)', '(0.50 - 0.10) <= nb_images_if_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= nb_images_else_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= nb_keypoints_if_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= nb_keypoints_else_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= (1 - (nb_changed_aug / nb_iterations)) <= (0.50 + 0.10) # should be the same in roughly 50% of all cases', 'nb_changed_aug_det == 0', '(0.50 - 0.10) <= nb_images_if_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= nb_images_else_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= nb_keypoints_if_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= nb_keypoints_else_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= (1 - (nb_changed_aug / nb_iterations)) <= (0.50 + 0.10) # should be the same in roughly 50% of all cases', 'nb_changed_aug_det == 0']",[],[],[],[],[],[],[],[],[],[],[],[],['(0.25 - 0.05) <= (1 - (nb_changed_aug / nb_iterations)) <= (0.25 + 0.05) # should be the same in roughly 25% of all cases'],[],[],[],[],[],[],[],[],[],[],[],[]
38,aleju,kontakt@ajung.name,2016-11-20 23:05:02+01:00,6083b182737efcce4270e14f434b1a79c290da08,https://github.com/aleju/imgaug/commit/6083b182737efcce4270e14f434b1a79c290da08,Add file to check augmenters visually,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
39,aleju,kontakt@ajung.name,2016-11-21 21:42:52+01:00,37f2295395cbb8bbb0c0c555fbef09cd262bab64,https://github.com/aleju/imgaug/commit/37f2295395cbb8bbb0c0c555fbef09cd262bab64,"Add Crop, add ElasticTransformation, add per_channel to dropout/AddGaussNoise, add tests, add checks, fix bugs/problems",4,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(augs) == 1', 'augs[0] == seq1', 'len(augs) == 1', 'augs[0] == seq2', 'len(augs) == 2', 'augs[0] == seq1', 'augs[1] == seq2', 'len(augs) == 2', 'augs[0] == seq1', 'augs[1] == seq2', 'len(augs) == 2', 'augs[0] == seq1', 'augs[1] == seq2', 'len(augs) == 1', 'augs[0] == seq2', 'len(augs) == 2', 'augs[0] == seq1', 'augs[1] == [seq2]', 'len(seqs) == 1', 'seqs[0].name == ', 'len(seqs) == 2', 'seqs[0].name == ', 'seqs[1].name == ', 'augs is not None', 'isinstance(augs, iaa.Noop)', 'augs is None', 'np.array_equal(observed, np.array([base_img_cropped]))', 'array_equal_lists(observed, [base_img_cropped])', 'keypoints_equal(observed, keypoints_moved)', 'any([val == 1 for val in matches])', 'any([val == 1 for val in matches])', 'any([array_equal_lists(observed, [base_img_cropped]) for base_img_cropped in images_cropped])', 'any([keypoints_equal(observed, [kp]) for kp in keypoints_cropped])', 'len(set(movements)) == 3', 'len(set(movements_det)) == 1', 'any([val == 1 for val in matches])', 'any([val == 1 for val in matches])', 'any([array_equal_lists(observed, [base_img_cropped]) for base_img_cropped in images_cropped])', 'any([keypoints_equal(observed, [kp]) for kp in keypoints_cropped])', 'len(set(movements)) == 2', 'len(set(movements_det)) == 1']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
40,aleju,kontakt@ajung.name,2016-11-22 21:31:55+01:00,5618b32c22d250af800eb030e8df983a5916078f,https://github.com/aleju/imgaug/commit/5618b32c22d250af800eb030e8df983a5916078f,"Add reseed function, fix bugs, minor improvements",3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
41,aleju,kontakt@ajung.name,2016-11-22 21:32:06+01:00,f66a62555aaee01b7aaf298067e12737ed2a8b3d,https://github.com/aleju/imgaug/commit/f66a62555aaee01b7aaf298067e12737ed2a8b3d,Start readme,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
42,aleju,kontakt@ajung.name,2016-11-23 16:58:15+01:00,48ef143c846198b1b49129e4ca46cc9603e4724a,https://github.com/aleju/imgaug/commit/48ef143c846198b1b49129e4ca46cc9603e4724a,"Test and improve hooks, add augment_image(), validate input images better",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(images_aug[0], expected)', 'np.array_equal(images_aug[0], expected)', 'np.array_equal(images_aug[0], image)', 'np.array_equal(images_aug[0], image_lr)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
43,aleju,kontakt@ajung.name,2016-11-23 16:59:24+01:00,61274b11f6117fb7b8cafe9457ce01aef975c865,https://github.com/aleju/imgaug/commit/61274b11f6117fb7b8cafe9457ce01aef975c865,Improve hooks,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
44,aleju,kontakt@ajung.name,2016-11-23 16:59:56+01:00,2fb4c7953384a5460de5232fdb5685c1eb2500eb,https://github.com/aleju/imgaug/commit/2fb4c7953384a5460de5232fdb5685c1eb2500eb,Add example images and script to generate them,3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
45,aleju,kontakt@ajung.name,2016-11-23 17:00:15+01:00,92b9cb004d89c4499690993f6b2855c4f9ee9864,https://github.com/aleju/imgaug/commit/92b9cb004d89c4499690993f6b2855c4f9ee9864,Extend readme,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
46,aleju,kontakt@ajung.name,2016-11-23 17:00:41+01:00,589ebed5a43fc52a4464cfe68f8a9808854e31a5,https://github.com/aleju/imgaug/commit/589ebed5a43fc52a4464cfe68f8a9808854e31a5,Save outdated stuff,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
47,aleju,kontakt@ajung.name,2016-11-23 17:01:17+01:00,ed75f2deba81d82c4d9b465fbdae1fee010e219a,https://github.com/aleju/imgaug/commit/ed75f2deba81d82c4d9b465fbdae1fee010e219a,Remove outdated files,3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
48,aleju,kontakt@ajung.name,2016-11-23 17:04:31+01:00,1cbae93545fdc65b0ff691a20a8eb531375023bd,https://github.com/aleju/imgaug/commit/1cbae93545fdc65b0ff691a20a8eb531375023bd,Rename files,4,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
49,aleju,kontakt@ajung.name,2016-11-23 17:04:42+01:00,5b6c80eda4a87861db3ab29fd9497c29662b0c79,https://github.com/aleju/imgaug/commit/5b6c80eda4a87861db3ab29fd9497c29662b0c79,Rename files,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
50,aleju,kontakt@ajung.name,2016-11-23 17:46:47+01:00,79fcb44697d5373965d9f3222c9f343d21cc7c0a,https://github.com/aleju/imgaug/commit/79fcb44697d5373965d9f3222c9f343d21cc7c0a,Fix some bugs and other problems,3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
51,aleju,kontakt@ajung.name,2016-11-23 18:02:00+01:00,f8c0bb282581e5c5117f2241e2955c5dc78e6582,https://github.com/aleju/imgaug/commit/f8c0bb282581e5c5117f2241e2955c5dc78e6582,Move old version to subdirectory,7,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
52,aleju,kontakt@ajung.name,2016-11-23 18:04:31+01:00,fa4902321e3b4550fa7de6c28c9c383268b82c28,https://github.com/aleju/imgaug/commit/fa4902321e3b4550fa7de6c28c9c383268b82c28,Move new version from subdirectory to main directory,10,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
53,aleju,kontakt@ajung.name,2016-11-23 22:03:43+01:00,a61334afe79bbb98abcf4d286ea83d81e17b24fc,https://github.com/aleju/imgaug/commit/a61334afe79bbb98abcf4d286ea83d81e17b24fc,"Add ContrastNormalization, MultiplyElementwise, Add, AddElementwise; make per_channel stochastic; remove old code; fix bugs",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
54,aleju,kontakt@ajung.name,2016-11-23 22:05:25+01:00,ac2c651b83955d87c989c3d4648c4612f0f30c00,https://github.com/aleju/imgaug/commit/ac2c651b83955d87c989c3d4648c4612f0f30c00,"Add draw_on_image(), remove old code",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
55,aleju,kontakt@ajung.name,2016-11-23 22:06:06+01:00,0b1c39d928028683023cbecd573f3852d0672a5a,https://github.com/aleju/imgaug/commit/0b1c39d928028683023cbecd573f3852d0672a5a,"Add example keypoints, add new augmenters, improve design",3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
56,aleju,kontakt@ajung.name,2016-11-23 22:09:39+01:00,950e747be3df1fc33a0cadac89aee094578147ce,https://github.com/aleju/imgaug/commit/950e747be3df1fc33a0cadac89aee094578147ce,"Improve validation, allow zero-scale for Normal",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
57,aleju,kontakt@ajung.name,2016-11-23 22:10:17+01:00,c484c65675808f999a9e76a9690188abb532a457,https://github.com/aleju/imgaug/commit/c484c65675808f999a9e76a9690188abb532a457,Update to new function interfaces,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
58,aleju,kontakt@ajung.name,2016-11-23 22:11:31+01:00,c55ea7bf2ebed04761296d28f8a136675ae40039,https://github.com/aleju/imgaug/commit/c55ea7bf2ebed04761296d28f8a136675ae40039,"Add ContrastNormalization, update imports",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
59,aleju,kontakt@ajung.name,2016-11-23 22:11:45+01:00,4e6cb877568da80ae976971f971a69b807763e63,https://github.com/aleju/imgaug/commit/4e6cb877568da80ae976971f971a69b807763e63,"Extend content, update example",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
60,aleju,kontakt@ajung.name,2016-11-24 11:44:23+01:00,7ab5ad8f2ac64e0a9ac5229b6f133b466b3ea13c,https://github.com/aleju/imgaug/commit/7ab5ad8f2ac64e0a9ac5229b6f133b466b3ea13c,"Move tests to subdirectory, add comments",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
61,aleju,kontakt@ajung.name,2016-11-24 11:45:21+01:00,6a17bc2a3585cd09f6ae30878866984e1e1ef428,https://github.com/aleju/imgaug/commit/6a17bc2a3585cd09f6ae30878866984e1e1ef428,"Add tests for readme examples, extend readme",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['not np.array_equal(images, images_aug)', 'not np.array_equal(images, images_aug)', 'not np.array_equal(images, images_aug)', 'not np.array_equal(images, images_aug)', 'not np.array_equal(heatmaps, heatmaps_aug)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
62,aleju,kontakt@ajung.name,2016-11-24 11:45:55+01:00,f5f5a65a12ab81be73c356de14c58b3dc5cb77c0,https://github.com/aleju/imgaug/commit/f5f5a65a12ab81be73c356de14c58b3dc5cb77c0,Add draw_grid function in imgaug,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
63,aleju,kontakt@ajung.name,2016-11-24 11:46:10+01:00,76621599f94747890450c203a7231299d4c97ed0,https://github.com/aleju/imgaug/commit/76621599f94747890450c203a7231299d4c97ed0,Add init file,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
64,aleju,kontakt@ajung.name,2016-11-24 13:29:52+01:00,d117274b8aaa629e98eb10491bba931c3c82e31a,https://github.com/aleju/imgaug/commit/d117274b8aaa629e98eb10491bba931c3c82e31a,Extend readme,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
65,aleju,kontakt@ajung.name,2016-11-25 22:23:33+01:00,c6f8e8cec11530ffb47f169349be34508c9983ac,https://github.com/aleju/imgaug/commit/c6f8e8cec11530ffb47f169349be34508c9983ac,Add grayscale augmenter,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
66,aleju,kontakt@ajung.name,2016-11-25 22:23:49+01:00,db3fd709ea106351eee543e054a712b99d95788e,https://github.com/aleju/imgaug/commit/db3fd709ea106351eee543e054a712b99d95788e,Add script to check performance,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
67,aleju,kontakt@ajung.name,2016-11-27 23:22:28+01:00,3edea315be0bd56cc20f26442001cdd3327128b7,https://github.com/aleju/imgaug/commit/3edea315be0bd56cc20f26442001cdd3327128b7,Improve performance of keypoint augmentation; add checks for keypoint aug performance,3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
68,aleju,kontakt@ajung.name,2016-12-09 14:45:41+01:00,b4e48bdacf8fbf289f6d014efa4caffabfb2121e,https://github.com/aleju/imgaug/commit/b4e48bdacf8fbf289f6d014efa4caffabfb2121e,Add grayscale to checks/images; fix noise scale in examples; improve order in examples; add sys path to checks/tests,8,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
69,SarthakYadav,sarthak.yadav3@gmail.com,2016-12-11 16:39:35+05:18,2148a47f1ba559c1de139e5804620a15f1197422,https://github.com/aleju/imgaug/commit/2148a47f1ba559c1de139e5804620a15f1197422,Minor pep8 compliance fixes,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
70,SarthakYadav,sarthak.yadav3@gmail.com,2016-12-11 17:35:01+05:18,c13ebbeceec0e3613246a1c40c8accaf03f02dd1,https://github.com/aleju/imgaug/commit/c13ebbeceec0e3613246a1c40c8accaf03f02dd1,Added Documentation for Augmenter Base Class and Noop,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
71,SarthakYadav,sarthak.yadav3@gmail.com,2016-12-16 23:45:41+05:18,cd30f46fb22ca04ad839302612b454f8d8302eee,https://github.com/aleju/imgaug/commit/cd30f46fb22ca04ad839302612b454f8d8302eee,Added Documentation for augmenters.py,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
72,aleju,kontakt@ajung.name,2016-12-20 22:21:33+01:00,160ee27db9dd93f5d1c618fee3ef1a65a15ab84e,https://github.com/aleju/imgaug/commit/160ee27db9dd93f5d1c618fee3ef1a65a15ab84e,Add nearest neighbour to resize,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
73,aleju,kontakt@ajung.name,2016-12-20 22:23:46+01:00,d125d6d24412ba60fe2b687fbcf226e7e752e63f,https://github.com/aleju/imgaug/commit/d125d6d24412ba60fe2b687fbcf226e7e752e63f,Add FromLowerResolution parameter,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
74,aleju,kontakt@ajung.name,2016-12-20 22:28:13+01:00,6c3e7448e96393e8841643a1530fa5d546c70387,https://github.com/aleju/imgaug/commit/6c3e7448e96393e8841643a1530fa5d546c70387,Change import statements in examples to 'no installer' version,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
75,aleju,kontakt@ajung.name,2016-12-24 15:50:05+01:00,8d8792f03135514e73b686213d0e0ac333f65ebd,https://github.com/aleju/imgaug/commit/8d8792f03135514e73b686213d0e0ac333f65ebd,Improve python3 compatibility; change superclass init call style; minor fixes in checks/tests,8,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
76,aleju,kontakt@ajung.name,2016-12-31 23:16:49+01:00,558f0017773b228df915c5cf66d2a9d63478f35d,https://github.com/aleju/imgaug/commit/558f0017773b228df915c5cf66d2a9d63478f35d,Add setup script; Reorganize repository/paths,10,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
77,Kentaro Wada,www.kentaro.wada@gmail.com,2017-03-06 23:28:45+09:00,869862317c76906fbcda50491b4b6f4103e74a52,https://github.com/aleju/imgaug/commit/869862317c76906fbcda50491b4b6f4103e74a52,Specify image channels to add values,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
78,Kentaro Wada,www.kentaro.wada@gmail.com,2017-03-06 23:53:06+09:00,82f1f33890aa464c7dc5d26a9bc7c587a0d5e767,https://github.com/aleju/imgaug/commit/82f1f33890aa464c7dc5d26a9bc7c587a0d5e767,Add capability to change color HSV2RGB,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
79,aleju,kontakt@ajung.name,2017-03-17 22:57:04+01:00,3c882db1f425462e40300cbbf7c28bb6e13129a3,https://github.com/aleju/imgaug/commit/3c882db1f425462e40300cbbf7c28bb6e13129a3,"Add Convolve, Sharpen, Emboss, EdgeDetect, DirectedEdgeDetect",8,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
80,aleju,kontakt@ajung.name,2017-03-18 02:16:01+01:00,5bf4689eee28b032f48e659e710d80536bbe8658,https://github.com/aleju/imgaug/commit/5bf4689eee28b032f48e659e710d80536bbe8658,"Add Superpixels, fix missing font",7,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
81,aleju,kontakt@ajung.name,2017-03-18 14:46:57+01:00,79396fd60be87a7c4a4d0078d3e7589efc2c9e9b,https://github.com/aleju/imgaug/commit/79396fd60be87a7c4a4d0078d3e7589efc2c9e9b,Add Invert augmenter,6,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
82,aleju,kontakt@ajung.name,2017-03-18 15:00:27+01:00,041d94a801e244259dd8b65109db81990df0d9a1,https://github.com/aleju/imgaug/commit/041d94a801e244259dd8b65109db81990df0d9a1,Fix typos,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
83,Kentaro Wada,www.kentaro.wada@gmail.com,2017-03-13 19:27:37+09:00,df420a6ea6dd2bbbf21b11c1ce9c14ae8126d26b,https://github.com/aleju/imgaug/commit/df420a6ea6dd2bbbf21b11c1ce9c14ae8126d26b,Add capability of transformaing non uint8 images,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
84,aleju,kontakt@ajung.name,2017-03-23 13:51:52+01:00,bc90efc9198a976d838b7a8045965f41c42bf1bd,https://github.com/aleju/imgaug/commit/bc90efc9198a976d838b7a8045965f41c42bf1bd,Add code for PyPI version,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
85,aleju,kontakt@ajung.name,2017-03-23 14:10:10+01:00,60d3dd475258125a654380eb48dff803251453df,https://github.com/aleju/imgaug/commit/60d3dd475258125a654380eb48dff803251453df,Update install method,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
86,Kentaro Wada,www.kentaro.wada@gmail.com,2017-03-25 19:03:06+09:00,9aae7fc1662aee90c7ebe0d989a57811e370dd57,https://github.com/aleju/imgaug/commit/9aae7fc1662aee90c7ebe0d989a57811e370dd57,Check dimension of images,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
87,Kentaro Wada,www.kentaro.wada@gmail.com,2017-03-26 04:32:13+09:00,c4ca153d3a595702795a9bcb0409260a199e07b4,https://github.com/aleju/imgaug/commit/c4ca153d3a595702795a9bcb0409260a199e07b4,Add channels arg for Multiply augmenter,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
88,aleju,kontakt@ajung.name,2017-03-26 23:10:13+02:00,2e7d0e043aaaf0b3cd1a55bafb4ac5276e1ef745,https://github.com/aleju/imgaug/commit/2e7d0e043aaaf0b3cd1a55bafb4ac5276e1ef745,Fix Affine errors; add automatic 2d/3d image handling,8,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, images_flipped)', 'np.array_equal(observed, images)', 'array_equal_lists(observed, images_flipped_list)', 'array_equal_lists(observed, images_list)', 'array_equal_lists(observed, images_flipped_list2d3d)', 'array_equal_lists(observed, images_list2d3d)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
89,aleju,kontakt@ajung.name,2017-04-04 15:44:36+02:00,04eaa26d95e56c0d2466f8e683cbb9752bb7119a,https://github.com/aleju/imgaug/commit/04eaa26d95e56c0d2466f8e683cbb9752bb7119a,Add WithChannels augmenter; fix dtype error in Affine,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
90,aleju,kontakt@ajung.name,2017-04-04 15:50:23+02:00,a1679c222dfc9a5a57113f579d54982f89be9e9a,https://github.com/aleju/imgaug/commit/a1679c222dfc9a5a57113f579d54982f89be9e9a,Remove channels parameter from Add/Multiply,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
91,aleju,kontakt@ajung.name,2017-04-04 15:59:26+02:00,a4a9775617c635584dcedd5d707a3dcc545ddfd6,https://github.com/aleju/imgaug/commit/a4a9775617c635584dcedd5d707a3dcc545ddfd6,Add WithChannels example to readme,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
92,aleju,kontakt@ajung.name,2017-04-05 18:21:01+02:00,6fb666bc813f11dbc3cd7efbab44d74e71a44196,https://github.com/aleju/imgaug/commit/6fb666bc813f11dbc3cd7efbab44d74e71a44196,Add seed function,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
93,aleju,kontakt@ajung.name,2017-04-05 19:56:24+02:00,b64cb5a84e6d061b696eca7c54efee57a53e510f,https://github.com/aleju/imgaug/commit/b64cb5a84e6d061b696eca7c54efee57a53e510f,Add/Change documentation,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
94,aleju,kontakt@ajung.name,2017-04-05 21:59:19+02:00,41457ca3fa05ebf24702f7cd54ed07f995cb5b74,https://github.com/aleju/imgaug/commit/41457ca3fa05ebf24702f7cd54ed07f995cb5b74,Add documentation,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
95,aleju,kontakt@ajung.name,2017-04-06 14:15:49+02:00,d26ed9384053c5dfa41ebd9d495cf320ccafa251,https://github.com/aleju/imgaug/commit/d26ed9384053c5dfa41ebd9d495cf320ccafa251,Add documentation,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
96,aleju,kontakt@ajung.name,2017-04-06 16:23:35+02:00,f359c5fb209df221139e130807027018548bae7f,https://github.com/aleju/imgaug/commit/f359c5fb209df221139e130807027018548bae7f,Add documentation; rename in Sharpen strength to lightness; change Convolve callback interface,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
97,aleju,kontakt@ajung.name,2017-04-06 19:49:28+02:00,75187e0c2aa7adbae4bb3104c914c9892195b201,https://github.com/aleju/imgaug/commit/75187e0c2aa7adbae4bb3104c914c9892195b201,Add documentation; reorder classes in the code,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
98,aleju,kontakt@ajung.name,2017-04-06 20:44:38+02:00,b106b280f71764847ee2bede15d47b9a346b8696,https://github.com/aleju/imgaug/commit/b106b280f71764847ee2bede15d47b9a346b8696,Add documentation,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
99,aleju,kontakt@ajung.name,2017-04-06 21:01:31+02:00,0a882a6706125acbe1d2aad990a7cf85cec709b6,https://github.com/aleju/imgaug/commit/0a882a6706125acbe1d2aad990a7cf85cec709b6,Rename Sharpen parameter 'strength' to 'lightness',6,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
100,aleju,kontakt@ajung.name,2017-04-06 21:02:43+02:00,5321ce79bf357c1c3a6bb656ed3cae851c299941,https://github.com/aleju/imgaug/commit/5321ce79bf357c1c3a6bb656ed3cae851c299941,Increase version number from 0.2.0 to 0.2.1,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
101,Kentaro Wada,www.kentaro.wada@gmail.com,2017-04-07 22:16:08+09:00,3ad79cf6137c7394b9b8992028908d2430ca0ab3,https://github.com/aleju/imgaug/commit/3ad79cf6137c7394b9b8992028908d2430ca0ab3,Add augumenter to select colorspace,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
102,aleju,kontakt@ajung.name,2017-06-04 20:33:36+02:00,2eaf369e27b3b9fe59bd78dd730d9fda5da01c41,https://github.com/aleju/imgaug/commit/2eaf369e27b3b9fe59bd78dd730d9fda5da01c41,Fix bugs in draw_grid,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
103,aleju,kontakt@ajung.name,2017-06-04 20:34:47+02:00,e74f63bf3f482d2be4b592b45e3396f3adc54658,https://github.com/aleju/imgaug/commit/e74f63bf3f482d2be4b592b45e3396f3adc54658,Add CoarseDropout,5,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
104,aleju,kontakt@ajung.name,2017-06-04 22:22:39+02:00,45cbe4f25738838ca2ab11e917ac4491e4d5f593,https://github.com/aleju/imgaug/commit/45cbe4f25738838ca2ab11e917ac4491e4d5f593,Add AverageBlur augmenter; Add MedianBlur augmenter,5,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
105,aleju,kontakt@ajung.name,2017-06-05 19:07:40+02:00,51860ffb1f3654b22c82b15180fbb77bca6bf0bc,https://github.com/aleju/imgaug/commit/51860ffb1f3654b22c82b15180fbb77bca6bf0bc,Fix missing random_state,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
106,aleju,kontakt@ajung.name,2017-06-05 19:08:15+02:00,c3db12026f73130184479d027f0a242ede4e6881,https://github.com/aleju/imgaug/commit/c3db12026f73130184479d027f0a242ede4e6881,Add missing blur check files,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
107,aleju,kontakt@ajung.name,2017-06-05 19:33:00+02:00,d700c29fc5f003d4ed069342b5c00ad7778949c0,https://github.com/aleju/imgaug/commit/d700c29fc5f003d4ed069342b5c00ad7778949c0,Add SomeOf; Add OneOf,7,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
108,aleju,kontakt@ajung.name,2017-06-05 21:00:44+02:00,95a54d322d77e00243b5f3db0a0fc243bb10fd38,https://github.com/aleju/imgaug/commit/95a54d322d77e00243b5f3db0a0fc243bb10fd38,increase version number,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
109,aleju,kontakt@ajung.name,2017-06-05 21:02:13+02:00,8c7b1a895c7120a1aa204807664cb18cb78b2c3a,https://github.com/aleju/imgaug/commit/8c7b1a895c7120a1aa204807664cb18cb78b2c3a,increase version number,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
110,aleju,kontakt@ajung.name,2017-06-05 21:07:27+02:00,76d7dc05301dd86e3dff9458ec557922bfbc960c,https://github.com/aleju/imgaug/commit/76d7dc05301dd86e3dff9458ec557922bfbc960c,increase version number,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
111,aleju,kontakt@ajung.name,2017-06-06 22:13:03+02:00,153c4a9588d26b88495dfbce6996852f29058cf8,https://github.com/aleju/imgaug/commit/153c4a9588d26b88495dfbce6996852f29058cf8,"Add PiecewiseAffine, fix wrong error messages",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
112,aleju,kontakt@ajung.name,2017-06-06 23:39:45+02:00,267799253f8d2dc3c73b49b4f2da7a1d7cbdd283,https://github.com/aleju/imgaug/commit/267799253f8d2dc3c73b49b4f2da7a1d7cbdd283,"add PiecewiseAffine, improve example image generation plotting",4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
113,aleju,kontakt@ajung.name,2017-06-06 23:40:08+02:00,9629c49aa6b7da0890f1836894f0f7dbd40b4434,https://github.com/aleju/imgaug/commit/9629c49aa6b7da0890f1836894f0f7dbd40b4434,improve reseed parameters order,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
114,aleju,kontakt@ajung.name,2017-06-06 23:40:29+02:00,b7451f9e9f96e0d4915618f007146e15f543a878,https://github.com/aleju/imgaug/commit/b7451f9e9f96e0d4915618f007146e15f543a878,add background augmentation classes,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
115,aleju,kontakt@ajung.name,2017-06-07 00:08:35+02:00,e9ee251629dfb35c3211401eb0ce088fde4bba0a,https://github.com/aleju/imgaug/commit/e9ee251629dfb35c3211401eb0ce088fde4bba0a,fix wrong py3 check,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
116,aleju,kontakt@ajung.name,2017-06-07 00:16:00+02:00,51261a495207262eb5574c6df717ebe32190111b,https://github.com/aleju/imgaug/commit/51261a495207262eb5574c6df717ebe32190111b,increase version number,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
117,aleju,kontakt@ajung.name,2017-06-08 20:31:51+02:00,9cfbf490f89324f500230fb4961f5ead697cdae6,https://github.com/aleju/imgaug/commit/9cfbf490f89324f500230fb4961f5ead697cdae6,Add background parameter to augment_batches; add README description for background aug; add tests for background aug,5,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
118,aleju,kontakt@ajung.name,2017-06-08 21:20:34+02:00,95283f3703da3e7d3e7daa0e3e5e57259a85c43f,https://github.com/aleju/imgaug/commit/95283f3703da3e7d3e7daa0e3e5e57259a85c43f,Add overview list of augmenters,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
119,aleju,kontakt@ajung.name,2017-06-08 21:26:14+02:00,76acff0a92ac2b25c7e5499f12e6f353198a467a,https://github.com/aleju/imgaug/commit/76acff0a92ac2b25c7e5499f12e6f353198a467a,Improve readme,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
120,aleju,kontakt@ajung.name,2017-06-30 15:31:45+02:00,7a07996e8acd0e12a1bdc0eec025d85d1d7f8e03,https://github.com/aleju/imgaug/commit/7a07996e8acd0e12a1bdc0eec025d85d1d7f8e03,Fix cval,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
121,aleju,kontakt@ajung.name,2017-06-30 17:47:58+02:00,711a8944de5110ebc9388da313e49f48d5a1c3dd,https://github.com/aleju/imgaug/commit/711a8944de5110ebc9388da313e49f48d5a1c3dd,Add warning when using augment_images() with input that looks like a single image,3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
122,aleju,kontakt@ajung.name,2017-07-29 21:28:44+02:00,8330d9b5fea34407aca614e311df160f7eb2636f,https://github.com/aleju/imgaug/commit/8330d9b5fea34407aca614e311df160f7eb2636f,Rename InColorspace to WithColorspace; add check for WithColorspace,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
123,aleju,kontakt@ajung.name,2017-07-29 23:20:35+02:00,b5c81b2bea8704a00416a0b09a7deb387ed15d01,https://github.com/aleju/imgaug/commit/b5c81b2bea8704a00416a0b09a7deb387ed15d01,Add Scale augmenter; fix show_grid() image sizes,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
124,aleju,kontakt@ajung.name,2017-07-30 16:32:21+02:00,6b0bb4b759221e51687be42670e1c095397be972,https://github.com/aleju/imgaug/commit/6b0bb4b759221e51687be42670e1c095397be972,Add quokka image functions,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
125,aleju,kontakt@ajung.name,2017-07-30 16:33:12+02:00,c22e416442ac11ac72323a87e15fdab443bafeca,https://github.com/aleju/imgaug/commit/c22e416442ac11ac72323a87e15fdab443bafeca,Improve interface of Scale,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
126,aleju,kontakt@ajung.name,2017-07-30 17:55:29+02:00,b69b6184f6a4678a1601316f07f3faf2293767e6,https://github.com/aleju/imgaug/commit/b69b6184f6a4678a1601316f07f3faf2293767e6,"Change documentation, fix minor stuff",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
127,aleju,kontakt@ajung.name,2017-07-30 20:54:54+02:00,1204a324f254000c7b3d3148c897e0080fb11452,https://github.com/aleju/imgaug/commit/1204a324f254000c7b3d3148c897e0080fb11452,Add CropAndPad augmenter,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
128,aleju,kontakt@ajung.name,2017-07-30 22:01:29+02:00,d4ebe0e518bdb490f4600b76ff9573e689ff41ff,https://github.com/aleju/imgaug/commit/d4ebe0e518bdb490f4600b76ff9573e689ff41ff,Add Pad Augmenter; Add new Crop augmenter; Add missing documentation,3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
129,aleju,kontakt@ajung.name,2017-07-30 22:02:38+02:00,24e5ae1dd7082797e0eeaeab89958a56258127a4,https://github.com/aleju/imgaug/commit/24e5ae1dd7082797e0eeaeab89958a56258127a4,Remove outdated Crop augmenter; fix missing parameters,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
130,aleju,kontakt@ajung.name,2017-07-31 12:34:13+02:00,83d1cf304705afcb718e8d9e11aa0bbfd0c705ab,https://github.com/aleju/imgaug/commit/83d1cf304705afcb718e8d9e11aa0bbfd0c705ab,"Add descriptions for Scale, Pad, CropAndPad",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
131,aleju,kontakt@ajung.name,2017-07-31 12:34:32+02:00,4355c949792fa9ebb4fd39abb492325bba69944f,https://github.com/aleju/imgaug/commit/4355c949792fa9ebb4fd39abb492325bba69944f,Add more checks for Scale,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
132,aleju,kontakt@ajung.name,2017-07-31 12:41:15+02:00,29fb22e19a82d63349cb0d78d437692d024df29b,https://github.com/aleju/imgaug/commit/29fb22e19a82d63349cb0d78d437692d024df29b,Rename InColorspace to WithColorspace,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
133,Kentaro Wada,www.kentaro.wada@gmail.com,2017-08-15 05:49:32+09:00,e2bbaa77dcaa087aa01d24e7b5357d16b35cab7b,https://github.com/aleju/imgaug/commit/e2bbaa77dcaa087aa01d24e7b5357d16b35cab7b,Show DeprecationWarning for renamed InColorspace to WithColorspace,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
134,aleju,kontakt@ajung.name,2017-08-14 23:20:45+02:00,39f067be4baa187d02556d98c1bd8c80394790d9,https://github.com/aleju/imgaug/commit/39f067be4baa187d02556d98c1bd8c80394790d9,Fix typo,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
135,Kentaro Wada,www.kentaro.wada@gmail.com,2017-08-15 08:30:56+09:00,71b087b6c677452060b56f31581de4376d175aa7,https://github.com/aleju/imgaug/commit/71b087b6c677452060b56f31581de4376d175aa7,Add .travis.yml,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
136,Kentaro Wada,www.kentaro.wada@gmail.com,2017-08-15 08:43:29+09:00,424a2660dedeef545668b9848be2d24d2945723b,https://github.com/aleju/imgaug/commit/424a2660dedeef545668b9848be2d24d2945723b,Add travis status badge to README,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
137,Kentaro Wada,www.kentaro.wada@gmail.com,2017-08-15 08:51:46+09:00,d1298c2541ca037428d302d8e98306cadfe172c7,https://github.com/aleju/imgaug/commit/d1298c2541ca037428d302d8e98306cadfe172c7,Organize README.md,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
138,Kentaro Wada,www.kentaro.wada@gmail.com,2017-08-15 09:03:28+09:00,87fa5010bc40a8c388de490f7e5309b2d121b2b9,https://github.com/aleju/imgaug/commit/87fa5010bc40a8c388de490f7e5309b2d121b2b9,Refactor .travis.yml by spliting the sections,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
139,aleju,kontakt@ajung.name,2017-08-15 21:11:23+02:00,059efaedada8e7d4f81c3215355efb537a59c738,https://github.com/aleju/imgaug/commit/059efaedada8e7d4f81c3215355efb537a59c738,Merge 'imgaug' and 'About' chapters in README,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
140,aleju,kontakt@ajung.name,2017-08-21 13:14:16+02:00,62048775c4f75b91bcebac608796980ee0d6602f,https://github.com/aleju/imgaug/commit/62048775c4f75b91bcebac608796980ee0d6602f,Rewrite documentation for Sphinx/numpydoc; add some missing documentation,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
141,aleju,kontakt@ajung.name,2017-08-21 13:15:19+02:00,8213d56037940633a0df60c6e1178e566d8fd9dd,https://github.com/aleju/imgaug/commit/8213d56037940633a0df60c6e1178e566d8fd9dd,Add sphinx/readthedocs documentation,98,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
142,aleju,kontakt@ajung.name,2017-08-21 13:41:22+02:00,6ab121a3506b6573c6a98ece384aa17440e2274f,https://github.com/aleju/imgaug/commit/6ab121a3506b6573c6a98ece384aa17440e2274f,Add requirements.txt for readthedocs,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
143,aleju,kontakt@ajung.name,2017-08-21 14:01:11+02:00,a10290b9e5d68499c1cf46d53ba2cdfd8aef8f69,https://github.com/aleju/imgaug/commit/a10290b9e5d68499c1cf46d53ba2cdfd8aef8f69,"Add mocking to documentation, reduce requirements",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
144,aleju,kontakt@ajung.name,2017-08-21 14:11:24+02:00,4399caa9ee1aabf41ecd96b35bdef012810e352b,https://github.com/aleju/imgaug/commit/4399caa9ee1aabf41ecd96b35bdef012810e352b,Remove cv2 check for readthedocs,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
145,aleju,kontakt@ajung.name,2017-08-21 14:28:19+02:00,d22f5ecae0e309171549f819fc6d4044c7f3385b,https://github.com/aleju/imgaug/commit/d22f5ecae0e309171549f819fc6d4044c7f3385b,Add documentation links to readme,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
146,Abner Ayala-Acevedo,ayala.acevedo@gmail.com,2017-08-24 15:14:54-07:00,2d3f24222ba8c3330e800bbe055465d449da34b3,https://github.com/aleju/imgaug/commit/2d3f24222ba8c3330e800bbe055465d449da34b3,"Fix unicode Python3 error

Use six.string_types instead of unicode to have both Python2 & Python3 compatibility.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
147,aleju,kontakt@ajung.name,2017-08-26 15:11:00+02:00,b72df66dbda7ce0cd534d20fd7d0f284f33b9eb8,https://github.com/aleju/imgaug/commit/b72df66dbda7ce0cd534d20fd7d0f284f33b9eb8,Fix bg aug errors; add bg aug tests; fix image not installed; change some docu,6,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(image_aug, image) or np.array_equal(image_aug, image_flipped)', '(keypoint_aug.x == keypoint.x and keypoint_aug.y == keypoint.y) \\', '0.4*nb_iterations <= nb_flipped_images <= 0.6*nb_iterations', 'nb_flipped_images == nb_flipped_keypoints', 'np.array_equal(image_aug, image) or np.array_equal(image_aug, image_flipped)', '(keypoint_aug.x == keypoint.x and keypoint_aug.y == keypoint.y) \\', '0.4*nb_iterations <= nb_flipped_images <= 0.6*nb_iterations', 'nb_flipped_images == nb_flipped_keypoints', 'np.array_equal(image_aug, image) or np.array_equal(image_aug, image_flipped)', '0.4*nb_iterations <= nb_flipped_images <= 0.6*nb_iterations', 'np.array_equal(image_aug, image) or np.array_equal(image_aug, image_flipped)', '0.4*nb_iterations <= nb_flipped_images <= 0.6*nb_iterations', '(keypoint_aug.x == keypoint.x and keypoint_aug.y == keypoint.y) \\', '0.4*nb_iterations <= nb_flipped_keypoints <= 0.6*nb_iterations', 'nb_changed > 0', 'nb_changed == 0']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
148,aleju,kontakt@ajung.name,2017-08-26 17:03:23+02:00,2898606d13c2197e713d94a81f0ac263a57c3c08,https://github.com/aleju/imgaug/commit/2898606d13c2197e713d94a81f0ac263a57c3c08,Add AddHueAndSaturation; fix docu errors,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
149,aleju,kontakt@ajung.name,2017-08-26 19:03:08+02:00,b2fbe95456cd48130f9cd4953fec5630b653a762,https://github.com/aleju/imgaug/commit/b2fbe95456cd48130f9cd4953fec5630b653a762,Add bilateral blur,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
150,aleju,kontakt@ajung.name,2017-08-26 19:03:45+02:00,c4a8a4721398b6231bbfbee651092e43a7e476e3,https://github.com/aleju/imgaug/commit/c4a8a4721398b6231bbfbee651092e43a7e476e3,Remove mode from MedianBlur,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
151,aleju,kontakt@ajung.name,2017-08-26 20:55:51+02:00,b8da68d02713a60acd13fdfbde5c9c0404b0ee4c,https://github.com/aleju/imgaug/commit/b8da68d02713a60acd13fdfbde5c9c0404b0ee4c,Rename AddHueAndSaturation to AddToHueAndSaturation,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
152,aleju,kontakt@ajung.name,2017-08-30 16:54:45+02:00,ace5de1f8db780ee7affab85a09ccb604d942a57,https://github.com/aleju/imgaug/commit/ace5de1f8db780ee7affab85a09ccb604d942a57,Fix list handling of Convolve,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
153,aleju,kontakt@ajung.name,2017-08-30 16:55:12+02:00,81c5a581a765e2d737018f2b52cbaa59c84012f5,https://github.com/aleju/imgaug/commit/81c5a581a765e2d737018f2b52cbaa59c84012f5,Add tests for determinism,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['array_equal_lists(images_aug1, images_aug2),  % (aug.name,)', 'keypoints_equal(kps_aug1, kps_aug2),  % (aug.name,)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
154,aleju,kontakt@ajung.name,2017-08-31 10:33:53+02:00,ecbcfea8bd121deb73499b8c6cea660aee527ce3,https://github.com/aleju/imgaug/commit/ecbcfea8bd121deb73499b8c6cea660aee527ce3,Add PerspectiveTransform,3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
155,aleju,kontakt@ajung.name,2017-08-31 14:29:37+02:00,7286679e0a40d06d47f6bacc2e264b2cc80a5b49,https://github.com/aleju/imgaug/commit/7286679e0a40d06d47f6bacc2e264b2cc80a5b49,Make font filepath a proper constant,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
156,aleju,kontakt@ajung.name,2017-08-31 14:29:54+02:00,a93d5b2f45f7ebc5164bbe0bd922c8e154624905,https://github.com/aleju/imgaug/commit/a93d5b2f45f7ebc5164bbe0bd922c8e154624905,Fix documentation of PerspectiveTransform,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
157,aleju,kontakt@ajung.name,2017-08-31 14:32:00+02:00,d8f2247aad35bd2362e79ad6cc44403aef161ab7,https://github.com/aleju/imgaug/commit/d8f2247aad35bd2362e79ad6cc44403aef161ab7,Switch README to many small example images instead of one big,5,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
158,aleju,kontakt@ajung.name,2017-08-31 14:33:48+02:00,bea30a8aa7e2a6dbdece1d5559c8cbc8fb39a7b5,https://github.com/aleju/imgaug/commit/bea30a8aa7e2a6dbdece1d5559c8cbc8fb39a7b5,Add missing example images; fix readme typo,39,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
159,aleju,kontakt@ajung.name,2017-09-06 15:25:11+02:00,f5ba659515750585f149d5eaa18693fb8746e9ea,https://github.com/aleju/imgaug/commit/f5ba659515750585f149d5eaa18693fb8746e9ea,Fix wrong version number,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
160,aleju,kontakt@ajung.name,2017-09-16 10:18:42+02:00,ec46c7e629d9fc233f89f12cc51df00409697bd3,https://github.com/aleju/imgaug/commit/ec46c7e629d9fc233f89f12cc51df00409697bd3,Refactor augmenters.py to multiple files,12,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
161,aleju,kontakt@ajung.name,2017-09-16 15:22:20+02:00,41fd2583ee0dc3473528c4ff0b12758547395e5a,https://github.com/aleju/imgaug/commit/41fd2583ee0dc3473528c4ff0b12758547395e5a,Fix per_channel documentation,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
162,aleju,kontakt@ajung.name,2017-09-16 15:23:03+02:00,603fad3ddb0df7519efb20993f6ed95c4367b175,https://github.com/aleju/imgaug/commit/603fad3ddb0df7519efb20993f6ed95c4367b175,Add Alpha augmenter,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
163,aleju,kontakt@ajung.name,2017-09-16 15:25:05+02:00,8886d91dce10b3005612852552f8ec216399ea62,https://github.com/aleju/imgaug/commit/8886d91dce10b3005612852552f8ec216399ea62,Add Alpha augmenter; add keypoint aug to check_visually.py,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
164,aleju,kontakt@ajung.name,2017-09-16 17:24:53+02:00,442edf9b1645a23122f035188f46f71ffbf89ba3,https://github.com/aleju/imgaug/commit/442edf9b1645a23122f035188f46f71ffbf89ba3,Add AlphaElementwise; fix some documentation,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
165,aleju,kontakt@ajung.name,2017-09-16 22:08:20+02:00,665b9afe79f7fc05f5cb6229ba940f723fb67933,https://github.com/aleju/imgaug/commit/665b9afe79f7fc05f5cb6229ba940f723fb67933,"Add SimplexNoise, Add SimplexAlpha",4,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
166,aleju,kontakt@ajung.name,2017-09-16 22:10:31+02:00,07540c38b1710c37f2ea9cbffd657bb1ce64553e,https://github.com/aleju/imgaug/commit/07540c38b1710c37f2ea9cbffd657bb1ce64553e,Rename SimplexAlpha to SimplexNoiseAlpha,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
167,aleju,kontakt@ajung.name,2017-09-16 22:43:40+02:00,ec2e3c4ffd63947884c7d7b431582a897ebf65b2,https://github.com/aleju/imgaug/commit/ec2e3c4ffd63947884c7d7b431582a897ebf65b2,Add requirements for RTD,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
168,aleju,kontakt@ajung.name,2017-09-16 23:08:43+02:00,9050044e25ea6885ae3e574f2d2cbdebd6f0a1a3,https://github.com/aleju/imgaug/commit/9050044e25ea6885ae3e574f2d2cbdebd6f0a1a3,Fix missing augmenter documentation,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
169,aleju,kontakt@ajung.name,2017-09-17 13:33:00+02:00,b6b6e6b88d3b2f9ee980e3bc87b80a7e64ad9d8d,https://github.com/aleju/imgaug/commit/b6b6e6b88d3b2f9ee980e3bc87b80a7e64ad9d8d,Fix docu error,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
170,aleju,kontakt@ajung.name,2017-09-17 13:44:10+02:00,c74bb6c9f76f8e6bb0a5b1520302849cddf6830d,https://github.com/aleju/imgaug/commit/c74bb6c9f76f8e6bb0a5b1520302849cddf6830d,Move opensimplex to library folder,3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
171,aleju,kontakt@ajung.name,2017-09-17 23:01:45+02:00,1c97c366e022ba064c527fdd63236c19fe9b0b47,https://github.com/aleju/imgaug/commit/1c97c366e022ba064c527fdd63236c19fe9b0b47,"Add FrequencyNoise, Add FrequencyNoiseAlpha, Add (Noise)Sigmoid, Add IterativeNoiseAggregator, Refactor SimplexNoise and SimplexNoiseAlpha to use Sigmoid+INAgg",4,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
172,aleju,kontakt@ajung.name,2017-09-18 00:06:08+02:00,32e8aa7935e187492fc98951bce493244211fbdd,https://github.com/aleju/imgaug/commit/32e8aa7935e187492fc98951bce493244211fbdd,Fix docu typos,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
173,aleju,kontakt@ajung.name,2017-09-18 14:30:23+02:00,ff6151d4885439c8d02d6b05e92c10e24446e8ab,https://github.com/aleju/imgaug/commit/ff6151d4885439c8d02d6b05e92c10e24446e8ab,Reorder parameters,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
174,aleju,kontakt@ajung.name,2017-09-18 14:31:45+02:00,6a7039f9eb32f09a1f44ddb7d9f72b7f73edf055,https://github.com/aleju/imgaug/commit/6a7039f9eb32f09a1f44ddb7d9f72b7f73edf055,Add new augmenters to readme,7,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
175,aleju,kontakt@ajung.name,2017-09-18 16:14:55+02:00,5d2ca8a97208274f50ea16eed6c888e99485f94c,https://github.com/aleju/imgaug/commit/5d2ca8a97208274f50ea16eed6c888e99485f94c,Fix grayscale condition,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
176,aleju,kontakt@ajung.name,2017-09-18 16:25:37+02:00,31ca91a2bb559530b2b99249a93c886f9fc05b92,https://github.com/aleju/imgaug/commit/31ca91a2bb559530b2b99249a93c886f9fc05b92,Fix per_channel in AlphaElementwise,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
177,aleju,kontakt@ajung.name,2017-09-18 16:28:27+02:00,fef260b09cea8749f534cfa4bfd5090e06651d23,https://github.com/aleju/imgaug/commit/fef260b09cea8749f534cfa4bfd5090e06651d23,Fix FrequencyNoise exponent being discrete instead of continuous,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
178,aleju,kontakt@ajung.name,2017-09-18 16:29:14+02:00,7e4505b533f45746c9c373cc331a9fb79414f5a5,https://github.com/aleju/imgaug/commit/7e4505b533f45746c9c373cc331a9fb79414f5a5,Fix FrequencyNoise exponent being discrete instead of continuous,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
179,aleju,kontakt@ajung.name,2017-09-18 17:33:12+02:00,23a9cacb6c07d0daf0d1a9892dd1b38e8dfdea49,https://github.com/aleju/imgaug/commit/23a9cacb6c07d0daf0d1a9892dd1b38e8dfdea49,Add create_for_noise function to Sigmoid,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
180,Pavel Taufer,pavel.taufer@cz.ibm.com,2017-09-18 17:40:08+02:00,6b68d3bd2e31ec0873112395546876de4cfb7687,https://github.com/aleju/imgaug/commit/6b68d3bd2e31ec0873112395546876de4cfb7687,Augmenter.draw_grid works with a list of grayscale images,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
181,aleju,kontakt@ajung.name,2017-09-18 20:05:36+02:00,f4a76970c7d93ee22e3084c91b54a923ccf19986,https://github.com/aleju/imgaug/commit/f4a76970c7d93ee22e3084c91b54a923ccf19986,Add documentation for alpha augmenters,22,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
182,aleju,kontakt@ajung.name,2017-09-22 14:28:56+02:00,7fe14456db854348474d549e15b462688b416e03,https://github.com/aleju/imgaug/commit/7fe14456db854348474d549e15b462688b416e03,Fix #64 (incorrect shift in Affine),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
183,aleju,kontakt@ajung.name,2017-09-22 18:48:46+02:00,477b293bff9aaf85cdc5574819532dd4dc801e77,https://github.com/aleju/imgaug/commit/477b293bff9aaf85cdc5574819532dd4dc801e77,Fix x/y coordinates inverted in PiecewiseAffine,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
184,aleju,kontakt@ajung.name,2017-09-22 22:04:23+02:00,5e378279e1872042b3f267fe04e5cdce8b6bc4a0,https://github.com/aleju/imgaug/commit/5e378279e1872042b3f267fe04e5cdce8b6bc4a0,Fix PiecewiseAffine keypoint aug and contraint regular grid ; Fix #63,3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
185,aleju,kontakt@ajung.name,2017-09-28 21:09:25+02:00,f94022d10a19148e67a1152cf20fe9614dcb357e,https://github.com/aleju/imgaug/commit/f94022d10a19148e67a1152cf20fe9614dcb357e,Add localize_random_state() and copy_random_state(),2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(images_aug_source, images_aug_target)', 'np.array_equal(images_aug_source, images_aug_target)', 'np.array_equal(images_aug_source1, images_aug_source2)', 'np.array_equal(images_aug_target1, images_aug_target2)', 'np.array_equal(images_aug_source1, images_aug_target1)', 'np.array_equal(images_aug_source2, images_aug_target2)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
186,aleju,kontakt@ajung.name,2017-09-28 21:14:56+02:00,1031bc1221a58f12c56536c71300834c85cf5312,https://github.com/aleju/imgaug/commit/1031bc1221a58f12c56536c71300834c85cf5312,Improve documentation formatting,10,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
187,aleju,kontakt@ajung.name,2017-09-28 23:41:12+02:00,c37d1dd164a64f59ff97a8698347a68b12d49846,https://github.com/aleju/imgaug/commit/c37d1dd164a64f59ff97a8698347a68b12d49846,Fix keypoint aug in PiecewiseAffine; fix wrong param in get_parameters in PiecewiseAffine; add assert to PerspectiveTransform,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
188,aleju,kontakt@ajung.name,2017-09-28 23:41:45+02:00,808fe92950eee8a09e2f00865e455cae3e9cdf2a,https://github.com/aleju/imgaug/commit/808fe92950eee8a09e2f00865e455cae3e9cdf2a,Add assert to BilateralBlur,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
189,aleju,kontakt@ajung.name,2017-09-28 23:43:39+02:00,544f46948744064deb45e97be4768246e042b768,https://github.com/aleju/imgaug/commit/544f46948744064deb45e97be4768246e042b768,Add channel-assert for keypoint aug to AlphaElementwise; Fix doc for FrequencyNoiseAlpha,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
190,aleju,kontakt@ajung.name,2017-09-28 23:44:10+02:00,558fe4bfa8aef1d582d1db2f27034cab9c8ca9d0,https://github.com/aleju/imgaug/commit/558fe4bfa8aef1d582d1db2f27034cab9c8ca9d0,Fix documentation errors,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
191,aleju,kontakt@ajung.name,2017-09-28 23:44:46+02:00,2c57c716b70b551d98da39fe0e9a6e82920b59de,https://github.com/aleju/imgaug/commit/2c57c716b70b551d98da39fe0e9a6e82920b59de,Fix type errors in str method in Deterministic(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
192,aleju,kontakt@ajung.name,2017-09-28 23:45:32+02:00,08c8651f62c0451e5aa90d7518f27bd87adaab33,https://github.com/aleju/imgaug/commit/08c8651f62c0451e5aa90d7518f27bd87adaab33,Add general test for keypoint augmentation,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(kp_image_aug_rev.keypoints) == len(kp_aug.keypoints),  % (aug.name, len(kp_aug.keypoints), len(kp_image_aug_rev.keypoints))', 'np.average(dss) < 5.0,  % (np.average(dss), str(dss))']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
193,aleju,kontakt@ajung.name,2017-09-29 14:24:13+02:00,d869dca8e4f812bb9555a36a19df5f532d8638c6,https://github.com/aleju/imgaug/commit/d869dca8e4f812bb9555a36a19df5f532d8638c6,Improve and add documentation,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
194,aleju,kontakt@ajung.name,2017-09-29 17:24:29+02:00,d2de620c37abbc111226e1eea183caee9970b874,https://github.com/aleju/imgaug/commit/d2de620c37abbc111226e1eea183caee9970b874,Improve/add documentation; fix a wrong iterable check,3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
195,aleju,kontakt@ajung.name,2017-09-29 18:41:27+02:00,aee28fd09c54d08b1de2cb4ff4a178a88de9dc45,https://github.com/aleju/imgaug/commit/aee28fd09c54d08b1de2cb4ff4a178a88de9dc45,Add poisson distribution parameter,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
196,aleju,kontakt@ajung.name,2017-09-29 19:50:40+02:00,5360c347808e3d582082e7e6470cdaeebed15856,https://github.com/aleju/imgaug/commit/5360c347808e3d582082e7e6470cdaeebed15856,Add beta distribution,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
197,aleju,kontakt@ajung.name,2017-09-29 20:22:47+02:00,a84f393931c08073c4f87eae8c5be5acc73b89da,https://github.com/aleju/imgaug/commit/a84f393931c08073c4f87eae8c5be5acc73b89da,Add parameter 'Add',1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
198,aleju,kontakt@ajung.name,2017-09-29 20:39:46+02:00,bb91225cd494b16040d34ea876f9dc5eb312330e,https://github.com/aleju/imgaug/commit/bb91225cd494b16040d34ea876f9dc5eb312330e,Add Absolute and RandomSign parameters,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
199,aleju,kontakt@ajung.name,2017-09-29 22:23:36+02:00,8011f855364f6819a534ff1b6c2b3b9de2771c7b,https://github.com/aleju/imgaug/commit/8011f855364f6819a534ff1b6c2b3b9de2771c7b,Add ChiSquare parameter,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
200,aleju,kontakt@ajung.name,2017-09-29 22:31:14+02:00,0b0eae4bb7c787ba4dff3177520602dd6a76702e,https://github.com/aleju/imgaug/commit/0b0eae4bb7c787ba4dff3177520602dd6a76702e,Add is_callable(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
201,aleju,kontakt@ajung.name,2017-09-29 22:31:29+02:00,5a7a2371467f761787fa5350861a681ba0ca9d0a,https://github.com/aleju/imgaug/commit/5a7a2371467f761787fa5350861a681ba0ca9d0a,Add Weibull parameter,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
202,aleju,kontakt@ajung.name,2017-09-29 22:42:56+02:00,11ad686fbc7178fe4cbdf436b1a07a66e94bc57d,https://github.com/aleju/imgaug/commit/11ad686fbc7178fe4cbdf436b1a07a66e94bc57d,Add Laplace parameter,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
203,aleju,kontakt@ajung.name,2017-09-30 09:59:00+02:00,5e321d3f81bf4100d0db4f246d393b3ca89b2c6c,https://github.com/aleju/imgaug/commit/5e321d3f81bf4100d0db4f246d393b3ca89b2c6c,Fix wrong variable names in Weibull; Fix param graph plotting; Add documentation; Add missing repr/str functions for params,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
204,aleju,kontakt@ajung.name,2017-09-30 10:51:09+02:00,7606428fe25b25f7e73bbb4a7b5121cc058c7b26,https://github.com/aleju/imgaug/commit/7606428fe25b25f7e73bbb4a7b5121cc058c7b26,"Add Divide/Subtract/Power params, add elemtwise mode to Add/Multiply",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
205,aleju,kontakt@ajung.name,2017-09-30 11:09:34+02:00,5b6a4d839f78a55326007f1a0df23889c6a20728,https://github.com/aleju/imgaug/commit/5b6a4d839f78a55326007f1a0df23889c6a20728,Add overloaded operators to StochasticParameter; fix missing elementwise; fix seeds; fix float_power,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
206,aleju,kontakt@ajung.name,2017-09-30 11:23:07+02:00,e00d1bc84332ec9ef207e5f53fc56078fcafbcb9,https://github.com/aleju/imgaug/commit/e00d1bc84332ec9ef207e5f53fc56078fcafbcb9,Add Discretize,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
207,aleju,kontakt@ajung.name,2017-09-30 14:44:31+02:00,94536be3ce7ba523f63a8386a0360ad0ecbf210e,https://github.com/aleju/imgaug/commit/94536be3ce7ba523f63a8386a0360ad0ecbf210e,"Add ForceSign, Positive, Negative",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
208,aleju,kontakt@ajung.name,2017-09-30 14:48:34+02:00,5d3b709c51439991ba228ba202fbe42c32d9c1cd,https://github.com/aleju/imgaug/commit/5d3b709c51439991ba228ba202fbe42c32d9c1cd,Add documentation to Discretize,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
209,aleju,kontakt@ajung.name,2017-09-30 15:10:05+02:00,e88ef2d809514214942b8bfb77cbe96f18745c7b,https://github.com/aleju/imgaug/commit/e88ef2d809514214942b8bfb77cbe96f18745c7b,Fix parameter plots to be prob mass functions,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
210,aleju,kontakt@ajung.name,2017-09-30 15:12:38+02:00,d8680e3fafbdad2a1fa6ebbf01367d6ac7ba9337,https://github.com/aleju/imgaug/commit/d8680e3fafbdad2a1fa6ebbf01367d6ac7ba9337,Add parameters check,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
211,aleju,kontakt@ajung.name,2017-09-30 22:59:05+02:00,ab29519e1a39444a0e2ab2697ddfb31dba72ffc1,https://github.com/aleju/imgaug/commit/ab29519e1a39444a0e2ab2697ddfb31dba72ffc1,Fix scalar error in is_np_array(); Add forward_random_state(); Add derive_random_states(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
212,aleju,kontakt@ajung.name,2017-09-30 23:06:09+02:00,fc9122db09b392671d1937b0cf53ce52b11d51dd,https://github.com/aleju/imgaug/commit/fc9122db09b392671d1937b0cf53ce52b11d51dd,Add param distribution graph functions; Add param handling to Choice; Fix Power; Refactor to handle_*_param(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
213,aleju,kontakt@ajung.name,2017-09-30 23:07:13+02:00,5c88787795c2ce499c302ca37bf768b56de63966,https://github.com/aleju/imgaug/commit/5c88787795c2ce499c302ca37bf768b56de63966,Add documentation for stochastic parameters,23,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
214,aleju,kontakt@ajung.name,2017-09-30 23:18:35+02:00,e653f4158a393b7e9d8a87d25938610911da51d8,https://github.com/aleju/imgaug/commit/e653f4158a393b7e9d8a87d25938610911da51d8,Add Clip to Power in docu,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
215,aleju,kontakt@ajung.name,2017-10-01 16:04:00+02:00,196d1a1a5f56649fc309cea156c864b5f9eedadc,https://github.com/aleju/imgaug/commit/196d1a1a5f56649fc309cea156c864b5f9eedadc,"Add SaltAndPepper, Salt, Pepper, CoarseSaltAndPepper, CoarseSalt, CoarsePepper",10,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
216,aleju,kontakt@ajung.name,2017-10-01 22:19:04+02:00,7a2a35da5f27143c1cb0e77d923f1790b3856e15,https://github.com/aleju/imgaug/commit/7a2a35da5f27143c1cb0e77d923f1790b3856e15,Add bounding box augmentation,3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
217,aleju,kontakt@ajung.name,2017-10-04 19:42:51+02:00,516b58dfcb82a85e7d26640a3a5d7d0d37fd0df3,https://github.com/aleju/imgaug/commit/516b58dfcb82a85e7d26640a3a5d7d0d37fd0df3,Fix #68 (bad handling of list augmenters in Sequential/SomeOf),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
218,Pavel Taufer,pavel.taufer@cz.ibm.com,2017-10-12 22:21:20+02:00,71480525cb38451b54130c39dc633e25155c1a43,https://github.com/aleju/imgaug/commit/71480525cb38451b54130c39dc633e25155c1a43,"Fix #61, preserve third dimension for grayscale images after cv2.warpPerspective

cv2.warpPerspective apparentely does not preserve third dimension when
the image is grayscale (single channel). This code should fix the
warped image afterwards.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
219,aleju,kontakt@ajung.name,2017-10-14 10:09:31+02:00,e945e93d7885a28456507c78235dbaee61d3edc6,https://github.com/aleju/imgaug/commit/e945e93d7885a28456507c78235dbaee61d3edc6,Fix AverageBlur dropping single channels,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
220,aleju,kontakt@ajung.name,2017-10-14 10:13:03+02:00,84c35a5e6d2cc8c047c56320f36f946ade4deb0e,https://github.com/aleju/imgaug/commit/84c35a5e6d2cc8c047c56320f36f946ade4deb0e,Fix MedianBlur dropping single channels,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
221,aleju,kontakt@ajung.name,2017-10-14 10:27:45+02:00,92efcf54d5fb4accf97db9f391f88af62c313d05,https://github.com/aleju/imgaug/commit/92efcf54d5fb4accf97db9f391f88af62c313d05,Fix PerspectiveTransform only handling <=4 channels,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
222,aleju,kontakt@ajung.name,2017-10-14 10:28:07+02:00,67ef3b127e8f956755e22714ac1a3adc193cec01,https://github.com/aleju/imgaug/commit/67ef3b127e8f956755e22714ac1a3adc193cec01,Add tests for unusual channel numbers,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['images_aug.shape == images_c.shape', 'image_aug.shape == images_c[0].shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
223,aleju,kontakt@ajung.name,2017-10-14 10:35:01+02:00,27785f4c8d8d4083349e980c75571e4e1c54ff98,https://github.com/aleju/imgaug/commit/27785f4c8d8d4083349e980c75571e4e1c54ff98,Add Scale to test for unusual channel numbers,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['images_aug.shape == images_c.shape', 'image_aug.shape == images_c[0].shape', 'images_aug.shape == (4, 4, 4)', 'image_aug.shape == (4, 4)', 'images_aug.shape == (4, 4, 4, images_c.shape[3])', 'image_aug.shape == (4, 4, images_c.shape[3])']",[],[],[],[],[],[],[],[],[],[],[],[],"['images_aug.shape == images_c.shape', 'image_aug.shape == images_c[0].shape']",[],[],[],[],[],[],[],[],[],[],[],[]
224,J. Duane Northcutt,duane.northcutt@gmail.com,2017-10-20 15:16:01-07:00,111289523512a309244778d659e5ae89cd2fbcdf,https://github.com/aleju/imgaug/commit/111289523512a309244778d659e5ae89cd2fbcdf,"Fixed typo

  * was causing:
    AttributeError: 'BatchLoader' object has no attribute 'finished_signal'",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
225,aleju,kontakt@ajung.name,2017-10-24 16:09:45+02:00,60229dbbcf1d30743b59173077b6473424cf8d88,https://github.com/aleju/imgaug/commit/60229dbbcf1d30743b59173077b6473424cf8d88,Increase version number to 0.2.5,5,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
226,aleju,kontakt@ajung.name,2017-10-27 14:01:51+02:00,dbf9c9d7c30f4d76fe6c8350c2e9db79e1d781cd,https://github.com/aleju/imgaug/commit/dbf9c9d7c30f4d76fe6c8350c2e9db79e1d781cd,Add nb_channels parameter to KeypointsOnImage.from_keypoint_image(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
227,aleju,kontakt@ajung.name,2017-10-27 14:03:45+02:00,411907497e318eadc05aa06f196b359e2f5450e8,https://github.com/aleju/imgaug/commit/411907497e318eadc05aa06f196b359e2f5450e8,Fix wrong output shape of keypoints in CropAndPad,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
228,aleju,kontakt@ajung.name,2017-10-27 14:04:50+02:00,667cf434dd8b546fcd215e9532704990892ed820,https://github.com/aleju/imgaug/commit/667cf434dd8b546fcd215e9532704990892ed820,"Fix wrong output shape of keypoints in PiecewiseAffine, PerspectiveTransform",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
229,aleju,kontakt@ajung.name,2017-10-27 14:05:58+02:00,8df3d058a45bf7426496665a79885995ab13fccd,https://github.com/aleju/imgaug/commit/8df3d058a45bf7426496665a79885995ab13fccd,Fix Alpha unable to handle single augmenters as first/second arguments,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
230,aleju,kontakt@ajung.name,2017-10-27 14:06:27+02:00,e62274346bbf30eeab52c40bbf2a7ea883011866,https://github.com/aleju/imgaug/commit/e62274346bbf30eeab52c40bbf2a7ea883011866,Fix bad keypoint shapes in tests,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
231,aleju,kontakt@ajung.name,2017-11-14 17:45:11+01:00,c02d59f47528a34b7f3555c52f8ada0e911d66e5,https://github.com/aleju/imgaug/commit/c02d59f47528a34b7f3555c52f8ada0e911d66e5,"Fix IoU, Add extend(), Add shift() to BBsOnImage, Improve is_out_of_image()/remove_out_of_image()/cut_out_of_image()",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
232,aleju,kontakt@ajung.name,2017-11-14 17:52:51+01:00,4c269f6c629a5987f0af63cf5cddd2e4c98a2ff2,https://github.com/aleju/imgaug/commit/4c269f6c629a5987f0af63cf5cddd2e4c98a2ff2,Add bounding box documentation,9,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
233,aleju,kontakt@ajung.name,2017-11-19 16:14:23+01:00,776d03dc8faa63a037ae1d559ded371ddd33b0b2,https://github.com/aleju/imgaug/commit/776d03dc8faa63a037ae1d559ded371ddd33b0b2,Add #76 (radd/rsub/rmul/rpow/rdiv for params),2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
234,Semen Zhydenko,simeon.zhidenko@gmail.com,2017-12-24 22:20:11+01:00,781897350a7ef067510b22a311829f0f7c16e4bb,https://github.com/aleju/imgaug/commit/781897350a7ef067510b22a311829f0f7c16e4bb,Fixed typos,5,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
235,Jirka,jirka.borovec@seznam.cz,2017-12-24 10:54:32+01:00,26f9c26a7999ab3bc7763898a671342af77a1edc,https://github.com/aleju/imgaug/commit/26f9c26a7999ab3bc7763898a671342af77a1edc,add CI,6,False,True,False,False,False,True,True,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['any([array_equal_lists(observed, [base_img_cropped])', 'any([array_equal_lists(observed, [base_img_cropped])', 'np.array_equal(observed_aug, images) \\', 'np.array_equal(observed_aug_det, images) \\', 'array_equal_lists(images_aug1, images_aug2), \\', 'keypoints_equal(kps_aug1, kps_aug2), \\', 'len(kp_image_aug_rev.keypoints) == len(kp_aug.keypoints),\\', 'np.average(dss) < 5.0, \\']",[],[],[],[],[],[],[],[],[],[],[],[],"['any([array_equal_lists(observed, [base_img_cropped]) for base_img_cropped in images_cropped])', 'any([array_equal_lists(observed, [base_img_cropped]) for base_img_cropped in images_cropped])', 'np.array_equal(observed_aug, images) or np.array_equal(observed_aug, images_lr) or np.array_equal(observed_aug, images_ud) or np.array_equal(observed_aug, images_lr_ud)', 'np.array_equal(observed_aug_det, images) or np.array_equal(observed_aug_det, images_lr) or np.array_equal(observed_aug_det, images_ud) or np.array_equal(observed_aug_det, images_lr_ud)', 'array_equal_lists(images_aug1, images_aug2),  % (aug.name,)', 'keypoints_equal(kps_aug1, kps_aug2),  % (aug.name,)', 'len(kp_image_aug_rev.keypoints) == len(kp_aug.keypoints),  % (aug.name, len(kp_aug.keypoints), len(kp_image_aug_rev.keypoints))', 'np.average(dss) < 5.0,  % (np.average(dss), str(dss))']",[],[],[],[],[],[],[],[],[],[],[],[]
236,Jirka,jirka.borovec@seznam.cz,2017-12-26 22:27:30+01:00,f4db6c1685fcb6313a94e1f11b52be1c238aa503,https://github.com/aleju/imgaug/commit/f4db6c1685fcb6313a94e1f11b52be1c238aa503,update CI,1,False,False,False,False,False,True,True,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
237,aleju,kontakt@ajung.name,2018-01-12 18:07:10+01:00,41a91f5242e93e76ecb6e20a6cb5f0cd57bc582a,https://github.com/aleju/imgaug/commit/41a91f5242e93e76ecb6e20a6cb5f0cd57bc582a,Fix #84 (preserve dtypes in MultiplyElementwise),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
238,aleju,kontakt@ajung.name,2018-01-12 18:15:35+01:00,f6d464ee2406d34e1dd87a42ae13c29c0e931974,https://github.com/aleju/imgaug/commit/f6d464ee2406d34e1dd87a42ae13c29c0e931974,Fix #85 ('Sometimes' always casting to uint8),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
239,aleju,kontakt@ajung.name,2018-01-12 22:43:42+01:00,32b1313d00f1a7000532fd191ad497aaac7bf8c4,https://github.com/aleju/imgaug/commit/32b1313d00f1a7000532fd191ad497aaac7bf8c4,"Fix dtypes being changed by augmenters, add test case for that",4,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['images_aug.dtype == images_i.dtype'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
240,aleju,kontakt@ajung.name,2018-01-13 17:12:53+01:00,3a29d7db7cacd82b9f3889c98ac35b3341978a17,https://github.com/aleju/imgaug/commit/3a29d7db7cacd82b9f3889c98ac35b3341978a17,Move checks to their own directory,19,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
241,aleju,kontakt@ajung.name,2018-01-13 17:13:27+01:00,4fde0cf2f1cabde9e64575e1c7f6b6b0f9fbdf88,https://github.com/aleju/imgaug/commit/4fde0cf2f1cabde9e64575e1c7f6b6b0f9fbdf88,Remove old version code,7,False,True,False,False,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,1,24,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],['class TestImageAugmenter(unittest.TestCase):'],"[('True', '(np.allclose(image_target, image_after))'), ('Equals', '(nb_similar, 100)'), ('True', '(np.sum(image_after) > np.sum(image_before)/255)'), ('True', '(nb_different > nb_augment*0.9)'), ('True', '(np.allclose(image_target, image_after))'), ('True', '(np.allclose(image_target, image_after))'), ('True', '(np.allclose(image_target, image_after))'), ('True', '(np.allclose(image_target, image_after))'), ('True', '(nb_similar > (nb_augment*0.4) and nb_similar < (nb_augment*0.6))'), ('True', '(nb_similar > (nb_augment*0.4) and nb_similar < (nb_augment*0.6))'), ('True', '(nb_similar_channel_0 > 0.40*nb_augment'), ('True', '(nb_similar_channel_1 > 0.40*nb_augment'), ('True', '(nb_equally_transformed > 0.40*nb_augment'), ('Equal', '(nb_black, 0)'), ('Equal', '(nb_augment, nb_similar)'), ('True', '(np.array_equal(image_before, image_before_copy))'), ('Equal', '(nb_similar, 0)'), ('True', '(nb_similar > nb_augment*0.4 and nb_similar < nb_augment*0.6)'), ('True', '(nb_similar > nb_augment*0.8 and nb_similar <= nb_augment*1.0)'), ('True', '(nb_similar > nb_augment*0.9 and nb_similar <= nb_augment*1.0)'), ('Equal', '(nb_similar, 0)'), ('True', '(nb_similar > nb_augment*0.4 and nb_similar < nb_augment*0.6)'), ('True', '(nb_similar > nb_augment*0.8 and nb_similar <= nb_augment*1.0)'), ('True', '(nb_similar > nb_augment*0.9 and nb_similar <= nb_augment*1.0)')]",[],[],[],[],[],[],[],[],['import unittest'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
242,aleju,kontakt@ajung.name,2018-01-13 17:36:59+01:00,06e9a9194749c9e8947724f63b00f798a30f6e8a,https://github.com/aleju/imgaug/commit/06e9a9194749c9e8947724f63b00f798a30f6e8a,Remove unnecessary print statements,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
243,aleju,kontakt@ajung.name,2018-01-13 17:46:01+01:00,c8bd1dcf9cdabd330a1f4714a0fe3282f02c3b6d,https://github.com/aleju/imgaug/commit/c8bd1dcf9cdabd330a1f4714a0fe3282f02c3b6d,Merge changes from PR #88 ('ss18' branch 'typos'),4,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
244,aleju,kontakt@ajung.name,2018-01-13 17:57:45+01:00,899266125ad29038817c61473ddc080dbbf422a2,https://github.com/aleju/imgaug/commit/899266125ad29038817c61473ddc080dbbf422a2,Revert some changes so that github can register merge of PR #88,5,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
245,aleju,kontakt@ajung.name,2018-01-13 18:00:36+01:00,6da8cefbe001acda8132c736b8c821568aebdf72,https://github.com/aleju/imgaug/commit/6da8cefbe001acda8132c736b8c821568aebdf72,Remove old version code,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
246,aleju,kontakt@ajung.name,2018-01-13 19:43:26+01:00,732e91ad3bef5432103e77eccd9a4f4265944a24,https://github.com/aleju/imgaug/commit/732e91ad3bef5432103e77eccd9a4f4265944a24,Fix errors mentioned in PR #87 by cclauss,4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
247,aleju,kontakt@ajung.name,2018-01-13 20:01:54+01:00,b9f7f2cd4fd5e99cfd1413255f0ef8b205836af8,https://github.com/aleju/imgaug/commit/b9f7f2cd4fd5e99cfd1413255f0ef8b205836af8,Change codecov and codacy links/tokens,2,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
248,aleju,kontakt@ajung.name,2018-01-13 20:16:05+01:00,dcf6e74f6efedbad490243078a12350846276565,https://github.com/aleju/imgaug/commit/dcf6e74f6efedbad490243078a12350846276565,Fix mixed up variable name,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
249,aleju,kontakt@ajung.name,2018-01-13 20:19:23+01:00,f80346bb54bfa72ac7497fd6acbb609a50e2fa95,https://github.com/aleju/imgaug/commit/f80346bb54bfa72ac7497fd6acbb609a50e2fa95,Add flake8 to travis (see PR #87),1,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
250,aleju,kontakt@ajung.name,2018-01-14 12:14:03+01:00,977b8c8dc5b8faae757f845f84eb9f1212c87cc7,https://github.com/aleju/imgaug/commit/977b8c8dc5b8faae757f845f84eb9f1212c87cc7,Add check for bb augmentation,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
251,aleju,kontakt@ajung.name,2018-01-14 14:47:18+01:00,54b097f17efc5ee0a545b9183eadea0b9323e5ee,https://github.com/aleju/imgaug/commit/54b097f17efc5ee0a545b9183eadea0b9323e5ee,Add AffineOpenCV,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
252,aleju,kontakt@ajung.name,2018-01-24 20:23:15+01:00,7da70dd8502b2a45bcc5b1f07abe08501b005f6e,https://github.com/aleju/imgaug/commit/7da70dd8502b2a45bcc5b1f07abe08501b005f6e,Add backend parameter to Affine,4,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
253,aleju,kontakt@ajung.name,2018-01-24 21:09:42+01:00,3f16352aafdaf0a3c1932f81a22577927eba553d,https://github.com/aleju/imgaug/commit/3f16352aafdaf0a3c1932f81a22577927eba553d,"Add #93 (order, mode, cval for ElasticTransformation)",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
254,aleju,kontakt@ajung.name,2018-01-24 21:10:54+01:00,a96c7ad59efb1d867bc30872891b0f8961f7c2dd,https://github.com/aleju/imgaug/commit/a96c7ad59efb1d867bc30872891b0f8961f7c2dd,Delete outdated check,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
255,aleju,kontakt@ajung.name,2018-01-24 21:35:54+01:00,0bc8f5f0882bd7147f2a52d7c86a2f09e10b2ab5,https://github.com/aleju/imgaug/commit/0bc8f5f0882bd7147f2a52d7c86a2f09e10b2ab5,Fix cv2 warp errors in py3,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
256,aleju,kontakt@ajung.name,2018-01-24 21:49:03+01:00,97cd607aaf87eedb0498a6d3ff533b19629d3e08,https://github.com/aleju/imgaug/commit/97cd607aaf87eedb0498a6d3ff533b19629d3e08,Fix cv2 warp errors in py3 again,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
257,aleju,kontakt@ajung.name,2018-01-25 20:08:45+01:00,fc874ec522e3425909d1686101b6d1f757c052a1,https://github.com/aleju/imgaug/commit/fc874ec522e3425909d1686101b6d1f757c052a1,"Enable RGB cvals in cv2-Affine, enable float32 for cv2-Affine",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
258,aleju,kontakt@ajung.name,2018-01-25 21:35:01+01:00,2535d85b8e50b78951efc2eda8c3376b6eaee83e,https://github.com/aleju/imgaug/commit/2535d85b8e50b78951efc2eda8c3376b6eaee83e,Add #77 (float keypoints),4,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
259,aleju,kontakt@ajung.name,2018-01-25 21:48:55+01:00,50e1104043cf038408aede0b6e57686b893bfc3f,https://github.com/aleju/imgaug/commit/50e1104043cf038408aede0b6e57686b893bfc3f,Update BB docs from int to floats,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
260,aleju,kontakt@ajung.name,2018-01-29 20:20:35+01:00,7ab92a12fed4d7b535e8f1cbd699a14d6bbd69f1,https://github.com/aleju/imgaug/commit/7ab92a12fed4d7b535e8f1cbd699a14d6bbd69f1,Ignore opensimplex lib in codecov,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
261,aleju,kontakt@ajung.name,2018-01-29 20:28:04+01:00,9791030282833c4d42a6becb779cef2603da9745,https://github.com/aleju/imgaug/commit/9791030282833c4d42a6becb779cef2603da9745,Add test for Add(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'nb_changed_aug >= int(nb_iterations * 0.7)', 'nb_changed_aug_det == 0']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
262,aleju,kontakt@ajung.name,2018-01-29 20:30:07+01:00,53219d8e07b6c451ad517b0b8079d62ded5cfe4d,https://github.com/aleju/imgaug/commit/53219d8e07b6c451ad517b0b8079d62ded5cfe4d,Add test for AddElementwise,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'nb_changed_aug >= int(nb_iterations * 0.7)', 'nb_changed_aug_det == 0']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
263,aleju,kontakt@ajung.name,2018-01-29 20:40:49+01:00,23d76c45df50f377866af5c11245a7a6a975def7,https://github.com/aleju/imgaug/commit/23d76c45df50f377866af5c11245a7a6a975def7,Add test for MultiplyElementwise,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'nb_changed_aug >= int(nb_iterations * 0.95)', 'nb_changed_aug_det == 0', 'nb_different > 0.95 * (nb_different + nb_same)', 'nb_different > 0.9 * (nb_different + nb_same)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
264,aleju,kontakt@ajung.name,2018-01-29 21:03:24+01:00,283cebb4438bb6f4aa06f86e4b481bd2604224a6,https://github.com/aleju/imgaug/commit/283cebb4438bb6f4aa06f86e4b481bd2604224a6,Add test for ReplaceElementwise,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', '0.45 <= p <= 0.55', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', '0.45 <= p100 <= 0.55', '0.45 <= p200 <= 0.55']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
265,aleju,kontakt@ajung.name,2018-01-29 21:13:54+01:00,f708a46142759771c3cc044175e054f53fca8242,https://github.com/aleju/imgaug/commit/f708a46142759771c3cc044175e054f53fca8242,Add test for Invert,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', '0.4 <= pinv <= 0.6', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
266,aleju,kontakt@ajung.name,2018-01-30 21:07:10+01:00,2201455bdd9e81be6f19b48aa85e1b8ae2ee112c,https://github.com/aleju/imgaug/commit/2201455bdd9e81be6f19b48aa85e1b8ae2ee112c,Add test for ContrastNormalization,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected1) or np.array_equal(observed, expected2)', 'pinv > 0.5', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
267,aleju,kontakt@ajung.name,2018-01-30 21:39:48+01:00,420fb6ee8f2804335b4faa3b380aca25c6027b81,https://github.com/aleju/imgaug/commit/420fb6ee8f2804335b4faa3b380aca25c6027b81,Reorder tests,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
268,aleju,kontakt@ajung.name,2018-01-30 21:40:20+01:00,3a9e563b5b9d494034c44d6a377fbf3f3619ec05,https://github.com/aleju/imgaug/commit/3a9e563b5b9d494034c44d6a377fbf3f3619ec05,Add test for SomeOf,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, zeros)', 'np.array_equal(observed, zeros)', 'np.array_equal(observed, zeros)', 'np.sum(observed) in [9*1, 9*2, 9*3]', 'np.sum(observed) in [9*1+9*2, 9*1+9*3, 9*2+9*3]', 'np.sum(observed) in [9*1+9*2+9*3]', 'np.sum(observed) in [9*1+9*2+9*3]', '0.33-0.1 <= p_observed[0] 0.33+0.1', '0.33-0.1 <= p_observed[1] 0.33+0.1', '0.33-0.1 <= p_observed[2] 0.33+0.1', 'np.sum(observed) == 9*100', '0.5-0.1 <= p_observed[0] 0.5+0.1', '0.5-0.1 <= p_observed[1] 0.5+0.1']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
269,aleju,kontakt@ajung.name,2018-02-02 21:39:14+01:00,5c97c278d55fc0ec911a562a38c533edccd0cca8,https://github.com/aleju/imgaug/commit/5c97c278d55fc0ec911a562a38c533edccd0cca8,"Fix errors in tests, remove messages",1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['p_changed > 0.5', '0.25-0.1 <= p_observed[0] <= 0.25+0.1', '0.5-0.1 <= p_observed[1] <= 0.5+0.1', '0.5-0.1 <= p_observed[2] <= 0.5+0.1', '0.5-0.1 <= p_observed[3] <= 0.5+0.1', '0.5-0.1 <= p_observed[0] <= 0.5+0.1', '0.5-0.1 <= p_observed[1] <= 0.5+0.1']",[],[],[],[],[],[],[],[],[],[],[],[],"['pinv > 0.5', '0.33-0.1 <= p_observed[0] 0.33+0.1', '0.33-0.1 <= p_observed[1] 0.33+0.1', '0.33-0.1 <= p_observed[2] 0.33+0.1', '0.5-0.1 <= p_observed[0] 0.5+0.1', '0.5-0.1 <= p_observed[1] 0.5+0.1']",[],[],[],[],[],[],[],[],[],[],[],[]
270,aleju,kontakt@ajung.name,2018-02-03 14:12:25+01:00,dc33d011c332723348848f4e1e05ef050188f2f7,https://github.com/aleju/imgaug/commit/dc33d011c332723348848f4e1e05ef050188f2f7,Add readme for checks,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
271,aleju,kontakt@ajung.name,2018-02-03 14:17:09+01:00,fe450884beb03618ac69f84601568d112272655d,https://github.com/aleju/imgaug/commit/fe450884beb03618ac69f84601568d112272655d,Fix gif warning during install,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
272,aleju,kontakt@ajung.name,2018-02-03 14:18:40+01:00,5a1a4028b4a9bc5c9bd92f819b3a844177f61728,https://github.com/aleju/imgaug/commit/5a1a4028b4a9bc5c9bd92f819b3a844177f61728,Add readme in docs,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
273,aleju,kontakt@ajung.name,2018-02-03 14:25:34+01:00,cf5e8689445a7547703c88ec64821bd59bf95077,https://github.com/aleju/imgaug/commit/cf5e8689445a7547703c88ec64821bd59bf95077,Allow float64 in Affine cv2 backend,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
274,aleju,kontakt@ajung.name,2018-02-03 15:27:52+01:00,8b6439a22e54dd2b6d7130c3c1d55c2bf89e9ee2,https://github.com/aleju/imgaug/commit/8b6439a22e54dd2b6d7130c3c1d55c2bf89e9ee2,Add test for AverageBlur,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, base_img)', 'np.array_equal(observed, blur3x3)', 'np.array_equal(observed, blur5x5)', '0.4 <= p_seen[0] <= 0.6', '0.4 <= p_seen[1] <= 0.6', '0.23 <= p_seen[0] <= 0.43', '0.23 <= p_seen[1] <= 0.43', '0.23 <= p_seen[2] <= 0.43', '0.4 <= p_seen[0] <= 0.6', '0.4 <= p_seen[1] <= 0.6', 'all([v > 0 for v in nb_seen.values()])', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
275,aleju,kontakt@ajung.name,2018-02-03 15:28:21+01:00,f1a34f14fa59f626b58d7c2ac23d6b85a99f89a9,https://github.com/aleju/imgaug/commit/f1a34f14fa59f626b58d7c2ac23d6b85a99f89a9,Fix kernel size 0 in AverageBlur,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
276,aleju,kontakt@ajung.name,2018-02-03 15:34:53+01:00,34755234674c91f5b4c96adf8a486a5b60463ed8,https://github.com/aleju/imgaug/commit/34755234674c91f5b4c96adf8a486a5b60463ed8,Fix wrong parent init,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
277,aleju,kontakt@ajung.name,2018-02-03 15:36:10+01:00,a02a792a184ea6f63098b452e34d77c5834aeac7,https://github.com/aleju/imgaug/commit/a02a792a184ea6f63098b452e34d77c5834aeac7,Fix not enough arguments in format string,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
278,aleju,kontakt@ajung.name,2018-02-03 15:37:56+01:00,8a4a91d1baf2a58a8de2f35cc04c3e10e19753e3,https://github.com/aleju/imgaug/commit/8a4a91d1baf2a58a8de2f35cc04c3e10e19753e3,Fix duplicated function,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
279,aleju,kontakt@ajung.name,2018-02-04 10:27:01+01:00,1eeb2d13e86756360050ce32385606932651bfe2,https://github.com/aleju/imgaug/commit/1eeb2d13e86756360050ce32385606932651bfe2,Replace assert by ia.do_assert(),11,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
280,aleju,kontakt@ajung.name,2018-02-04 11:24:50+01:00,7bcea8c942ec410b9fc90d60d03c021dde6aea1b,https://github.com/aleju/imgaug/commit/7bcea8c942ec410b9fc90d60d03c021dde6aea1b,Remove unnecessary imports,30,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
281,aleju,kontakt@ajung.name,2018-02-04 11:33:20+01:00,12b680fc005b79fc1ee5dc6402924cdf06c39d81,https://github.com/aleju/imgaug/commit/12b680fc005b79fc1ee5dc6402924cdf06c39d81,Add missing import,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
282,aleju,kontakt@ajung.name,2018-02-04 11:45:41+01:00,b8fa0b51e99eb4d37de818dd70e4d0ac9b7aa4b9,https://github.com/aleju/imgaug/commit/b8fa0b51e99eb4d37de818dd70e4d0ac9b7aa4b9,Exclude paths from codacy analysis,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
283,Matias Laporte,matiaslaporte@gmail.com,2018-02-07 14:33:04-03:00,d0d27685526e89933f80bdc556293c9b9bc9da1c,https://github.com/aleju/imgaug/commit/d0d27685526e89933f80bdc556293c9b9bc9da1c,"Update examples_basics.rst

Missing numpy import",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
284,aleju,kontakt@ajung.name,2018-02-11 10:29:29+01:00,5a40ec00e30c85b2f2d0980c441cabb325c5ff7b,https://github.com/aleju/imgaug/commit/5a40ec00e30c85b2f2d0980c441cabb325c5ff7b,Exclude generate_* paths from codacy,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
285,aleju,kontakt@ajung.name,2018-02-11 10:41:14+01:00,873c3789070110f62cde44813ccd88fc39480440,https://github.com/aleju/imgaug/commit/873c3789070110f62cde44813ccd88fc39480440,Mark/Remove unused variables,5,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
286,aleju,kontakt@ajung.name,2018-02-11 10:50:39+01:00,476696d827236c3ab26047e590ead615c5a819a2,https://github.com/aleju/imgaug/commit/476696d827236c3ab26047e590ead615c5a819a2,Remove unused imports,7,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
287,aleju,kontakt@ajung.name,2018-02-11 11:01:07+01:00,219440ecd53945a2e28ebac44a2b3c67aba652f2,https://github.com/aleju/imgaug/commit/219440ecd53945a2e28ebac44a2b3c67aba652f2,Fix documentation Emboss vary strength image,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
288,aleju,kontakt@ajung.name,2018-02-11 11:29:03+01:00,71b9c0b36c80021b458e4fb33115dd183baf3a02,https://github.com/aleju/imgaug/commit/71b9c0b36c80021b458e4fb33115dd183baf3a02,Try deactivating pylint warnings for unused class and list as default value,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
289,aleju,kontakt@ajung.name,2018-02-11 11:50:23+01:00,135527f9ad2b77a5dffe5782f9fc2166d7b3c186,https://github.com/aleju/imgaug/commit/135527f9ad2b77a5dffe5782f9fc2166d7b3c186,"Deactivate some warnings for unused class, dangerous default value",4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
290,aleju,kontakt@ajung.name,2018-02-11 11:55:39+01:00,002c7f306479c523020a250d77e7208ecb9dc7d3,https://github.com/aleju/imgaug/commit/002c7f306479c523020a250d77e7208ecb9dc7d3,"Mark/Remove unused variables, deactivate unused import info",3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
291,aleju,kontakt@ajung.name,2018-02-11 12:33:09+01:00,95248fb8204b25af884d3321f0fae0aa7a3d445a,https://github.com/aleju/imgaug/commit/95248fb8204b25af884d3321f0fae0aa7a3d445a,Deactivate default value warnings,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
292,aleju,kontakt@ajung.name,2018-02-11 12:34:20+01:00,90f03e0c9478c9ef024520adc83446563d27a39d,https://github.com/aleju/imgaug/commit/90f03e0c9478c9ef024520adc83446563d27a39d,Mark variables as unused,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
293,aleju,kontakt@ajung.name,2018-02-11 12:36:26+01:00,6431def21c4eae72228b89bc9d5724393c057fcd,https://github.com/aleju/imgaug/commit/6431def21c4eae72228b89bc9d5724393c057fcd,Deactivate unused variable warnings,3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
294,austin.doolittle,austin.doolittle@gentex.com,2018-03-07 11:17:09-05:00,4dbe189227be5306fa0716180d6419a5117d4894,https://github.com/aleju/imgaug/commit/4dbe189227be5306fa0716180d6419a5117d4894,Close queues in BatchLoader and BackgroundAugmenter so the process doesn't hang,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
295,aleju,kontakt@ajung.name,2018-03-08 18:02:48+01:00,8bff6bfe9f7efa6728ba06dc1f4466cf5f558551,https://github.com/aleju/imgaug/commit/8bff6bfe9f7efa6728ba06dc1f4466cf5f558551,Fix #99 (allow size>1.0 in Resize),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
296,aleju,kontakt@ajung.name,2018-03-08 18:07:30+01:00,838551808240b14cd702b1ace58e3e4dd218cd31,https://github.com/aleju/imgaug/commit/838551808240b14cd702b1ace58e3e4dd218cd31,Remove outdated documentation,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
297,aleju,kontakt@ajung.name,2018-03-08 18:19:58+01:00,adb9685eca4a42652b3db520ab39d9293aafe704,https://github.com/aleju/imgaug/commit/adb9685eca4a42652b3db520ab39d9293aafe704,Fix #101 (missing deepcopy in BoundingBoxesOnImage),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
298,aleju,kontakt@ajung.name,2018-03-08 18:20:39+01:00,cc98cb041531e38196c6d11f6e470e055eee1945,https://github.com/aleju/imgaug/commit/cc98cb041531e38196c6d11f6e470e055eee1945,Add __repr__ and __str__ to BoundingBoxesOnImage,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
299,aleju,kontakt@ajung.name,2018-03-08 18:22:36+01:00,9d668d0928ec9dcb2f56cdda80f540a3642d2cdc,https://github.com/aleju/imgaug/commit/9d668d0928ec9dcb2f56cdda80f540a3642d2cdc,Add __repr__ and __str__ to BoundingBox,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
300,aleju,kontakt@ajung.name,2018-03-08 18:25:40+01:00,c336c403c36943815cb3ab2b7fa67093010ee05f,https://github.com/aleju/imgaug/commit/c336c403c36943815cb3ab2b7fa67093010ee05f,Add deepcopy() to BoundingBox,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
301,aleju,kontakt@ajung.name,2018-03-08 19:11:01+01:00,8bdee2eb948e7c41a2df4532ea009c661d6bd3ac,https://github.com/aleju/imgaug/commit/8bdee2eb948e7c41a2df4532ea009c661d6bd3ac,Fix #105 (possible overflow problem due to late clipping); Fix possible inplace dtype change bug,4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
302,gregchu,gchu@gumgum.com,2018-03-28 18:24:26-07:00,50a3859970b40d8082cfcc7af5d1b3f6950ca95f,https://github.com/aleju/imgaug/commit/50a3859970b40d8082cfcc7af5d1b3f6950ca95f,add optional label attribute to BoundingBox,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
303,gregchu,gchu@gumgum.com,2018-03-29 08:58:50-07:00,24cc8a08d53ab724900abe7792b80b6eba1d1d3c,https://github.com/aleju/imgaug/commit/24cc8a08d53ab724900abe7792b80b6eba1d1d3c,removed getter,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
304,gregchu,gchu@gumgum.com,2018-03-29 09:42:58-07:00,870dc40acd34be04875e7a4173fffe6e1d589eea,https://github.com/aleju/imgaug/commit/870dc40acd34be04875e7a4173fffe6e1d589eea,remove trailing newline,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
305,Chi-Hung Weng,chi-hung.weng@gmx.de,2018-04-23 03:03:19+08:00,33fc6b00d44377c7736b44e00f763f85276514ec,https://github.com/aleju/imgaug/commit/33fc6b00d44377c7736b44e00f763f85276514ec,Data Loader can now be terminated gracefully.,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
306,aleju,kontakt@ajung.name,2018-05-12 10:43:26+02:00,628ac526d1037508c48951868189255b129fab1f,https://github.com/aleju/imgaug/commit/628ac526d1037508c48951868189255b129fab1f,Add test for OneOf,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, zeros)', 'np.array_equal(observed, zeros)', 'expected - expected_tolerance < val < expected + expected_tolerance']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
307,aleju,kontakt@ajung.name,2018-05-12 10:58:07+02:00,4f94db4dc676eb57c1ee0a21087008c7b117907b,https://github.com/aleju/imgaug/commit/4f94db4dc676eb57c1ee0a21087008c7b117907b,Add test for Alpha,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'expected - expected_tolerance < val < expected + expected_tolerance']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
308,aleju,kontakt@ajung.name,2018-05-12 11:07:58+02:00,ed0769025196a2f135f151c8581caf8266cf1249,https://github.com/aleju/imgaug/commit/ed0769025196a2f135f151c8581caf8266cf1249,Add test for WithChannels,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
309,aleju,kontakt@ajung.name,2018-05-12 11:44:04+02:00,dab979660f88116de18d7eae5c831b4ce3204bb3,https://github.com/aleju/imgaug/commit/dab979660f88116de18d7eae5c831b4ce3204bb3,Add test for Grayscale,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', '0 - 1e-4 < min(distances) < 0.1', '0.9 < max(distances) < 1.0 + 1e-4', 'density_expected - density_tolerance < density < density_expected + density_tolerance']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
310,aleju,kontakt@ajung.name,2018-05-12 12:34:48+02:00,c4588a8bd234be7865d1986870648ce9eb4a927e,https://github.com/aleju/imgaug/commit/c4588a8bd234be7865d1986870648ce9eb4a927e,Fix various errors in tests,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['density_expected - density_tolerance < density < density_expected + density_tolerance', 'np.allclose(observed, expected.astype(np.uint8))', 'np.allclose(observed, expected.astype(np.uint8))', '0.4 < np.average(distances) < 0.6', 'np.array_equal(observed, zeros + 1)', 'np.array_equal(observed, zeros + 1)', 'np.array_equal(observed, zeros + 1)']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(observed, expected)', 'expected - expected_tolerance < val < expected + expected_tolerance', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.array_equal(observed, zeros)', 'np.array_equal(observed, zeros)']",[],[],[],[],[],[],[],[],[],[],[],[]
311,aleju,kontakt@ajung.name,2018-05-12 12:47:00+02:00,e94c999ff76ad633e20c2e8b94a802789628688e,https://github.com/aleju/imgaug/commit/e94c999ff76ad633e20c2e8b94a802789628688e,Add test for Pad,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, np.array([base_img_padded]))', 'array_equal_lists(observed, [base_img_padded])', 'keypoints_equal(observed, keypoints_moved)', 'any([val == 1 for val in matches])', 'any([val == 1 for val in matches])', 'any([array_equal_lists(observed, [base_img_padded])', 'any([keypoints_equal(observed, [kp]) for kp in keypoints_padded])', 'len(set(movements)) == 3', 'len(set(movements_det)) == 1', 'any([val == 1 for val in matches])', 'any([val == 1 for val in matches])', 'any([array_equal_lists(observed, [base_img_padded])', 'any([keypoints_equal(observed, [kp]) for kp in keypoints_padded])', 'len(set(movements)) == 2', 'len(set(movements_det)) == 1']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
312,aleju,kontakt@ajung.name,2018-05-12 14:32:17+02:00,b28b92ebf5fc64b5299def0c8ea486c324bb3e84,https://github.com/aleju/imgaug/commit/b28b92ebf5fc64b5299def0c8ea486c324bb3e84,Add test for Sharpen,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected.astype(np.uint8))', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', '0 - 1e-4 < min(distances) < 0.1', '0.4 < np.average(distances) < 0.6', '0.9 < max(distances) < 1.0 + 1e-4', 'density_expected - density_tolerance < density < density_expected + density_tolerance', '0 - 1e-4 < min(distances) < 0.1', '0.4 < np.average(distances) < 0.6', '0.9 < max(distances) < 1.0 + 1e-4', 'density_expected - density_tolerance < density < density_expected + density_tolerance']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
313,aleju,kontakt@ajung.name,2018-05-13 16:24:29+02:00,1811c1a86eaf8304ed87f94450762e8d72fa0bc4,https://github.com/aleju/imgaug/commit/1811c1a86eaf8304ed87f94450762e8d72fa0bc4,Add test for AddToHueAndSaturation,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(observed, expected)', 'np.all(diff <= 3)', 'not np.array_equal(expected_imgs[0], expected_imgs[1])', 'not np.array_equal(expected_imgs[1], expected_imgs[2])', 'not np.array_equal(expected_imgs[0], expected_imgs[2])', 'np.sum(seen.values()) == nb_iterations', 'all([n_exp - n_exp_tol < v < n_exp + n_exp_tol for v in seen.values()])']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
314,aleju,kontakt@ajung.name,2018-05-13 17:22:07+02:00,956e9b6c7c61662cea35255616109659ba570500,https://github.com/aleju/imgaug/commit/956e9b6c7c61662cea35255616109659ba570500,Add missing intensity rounding to superpixels,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
315,aleju,kontakt@ajung.name,2018-05-13 17:22:49+02:00,e109f273847080544690d17c10c15476d24a0bd9,https://github.com/aleju/imgaug/commit/e109f273847080544690d17c10c15476d24a0bd9,Add test for Superpixels,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(observed, expected)', '_array_equals_tolerant(observed, expected, 2)', 'all(seen.values())']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
316,aleju,kontakt@ajung.name,2018-05-13 18:47:33+02:00,d1a4c6e46121a4fb1a383eb6d75d5f07524f59dd,https://github.com/aleju/imgaug/commit/d1a4c6e46121a4fb1a383eb6d75d5f07524f59dd,Improve float handling in Scale,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
317,aleju,kontakt@ajung.name,2018-05-13 18:47:43+02:00,bc95e6fd99edcd218d7d8cfd91106d499b41d9a5,https://github.com/aleju/imgaug/commit/bc95e6fd99edcd218d7d8cfd91106d499b41d9a5,Add test for Scale,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed2d.shape == (12, 12)', 'observed3d.shape == (12, 12, 3)', '50 < np.average(observed2d) < 205', '50 < np.average(observed3d) < 205', 'observed2d.shape in [(12, 12), (14, 14)]', 'observed3d.shape in [(12, 12, 3), (14, 14, 3)]', 'all(seen2d)', 'all(seen3d)', 'observed2d.shape in [(12, 12), (13, 13), (14, 14)]', 'observed3d.shape in [(12, 12, 3), (13, 13, 3), (14, 14, 3)]', 'all(seen2d)', 'all(seen3d)', 'observed2d.shape == (12, 13)', 'observed3d.shape == (12, 13, 3)', 'observed2d.shape == (12, base_img2d.shape[1])', 'observed3d.shape == (12, base_img3d.shape[1], 3)', 'observed2d.shape == (base_img2d.shape[0], 12)', 'observed3d.shape == (base_img3d.shape[0], 12, 3)', 'observed2d.shape == (12, int(12 * aspect_ratio2d))', 'observed3d.shape == (12, int(12 * aspect_ratio3d), 3)', 'observed2d.shape == (int(12 * (1/aspect_ratio2d)), 12)', 'observed3d.shape == (int(12 * (1/aspect_ratio3d)), 12, 3)', 'observed2d.shape in [(12, 12), (14, 12)]', 'observed3d.shape in [(12, 12, 3), (14, 12, 3)]', 'all(seen2d)', 'all(seen3d)', 'observed2d.shape in [(12, 12), (12, 14)]', 'observed3d.shape in [(12, 12, 3), (12, 14, 3)]', 'all(seen2d)', 'all(seen3d)', 'observed2d.shape in [(12, 12), (13, 12), (14, 12)]', 'observed3d.shape in [(12, 12, 3), (13, 12, 3), (14, 12, 3)]', 'all(seen2d)', 'all(seen3d)', 'observed2d.shape == (base_img2d.shape[0]*2, base_img2d.shape[1]*2)', 'observed3d.shape == (base_img3d.shape[0]*2, base_img3d.shape[1]*2, 3)', 'intensity_low < np.average(observed2d) < intensity_high', 'intensity_low < np.average(observed3d) < intensity_high', 'observed2d.shape in [(base_img2d.shape[0]*2, base_img2d.shape[1]*2), (base_img2d.shape[0]*4, base_img2d.shape[1]*4)]', 'observed3d.shape in [(base_img3d.shape[0]*2, base_img3d.shape[1]*2, 3), (base_img3d.shape[0]*4, base_img3d.shape[1]*4, 3)]', 'all(seen2d)', 'all(seen3d)', 'observed2d.shape in possible2d', 'observed3d.shape in possible3d', 'not not_seen2d', 'not not_seen3d', 'observed2d.shape in possible2d', 'observed3d.shape in possible3d', 'not not_seen2d', 'not not_seen3d']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
318,aleju,kontakt@ajung.name,2018-05-14 17:28:39+02:00,2f614fb0cd5fd27694ca5aa0219657c9eead1cf7,https://github.com/aleju/imgaug/commit/2f614fb0cd5fd27694ca5aa0219657c9eead1cf7,Add test for CoarseDropout,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'all([v in [0, 100] for v in averages])', '50 - 20 < np.average(averages) < 50 + 20', 'all([v in [0, 100] for v in averages])', '50 - 20 < np.average(averages) < 50 + 20', 'found']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
319,aleju,kontakt@ajung.name,2018-05-14 17:52:51+02:00,2a99e4f40a6d047214f35a23c5e3a3cea61171b6,https://github.com/aleju/imgaug/commit/2a99e4f40a6d047214f35a23c5e3a3cea61171b6,Add test for AlphaElementwise,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'density_expected - density_tolerance < density < density_expected + density_tolerance', 'len(set(observed.flatten())) > 1']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
320,aleju,kontakt@ajung.name,2018-05-15 16:59:47+02:00,899512bf220a5fec439747091ddf16cc090ed55d,https://github.com/aleju/imgaug/commit/899512bf220a5fec439747091ddf16cc090ed55d,Add test for MedianBlur,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, base_img)', 'np.array_equal(observed, blur3x3)', 'np.array_equal(observed, blur5x5)', 'all(seen)', 'all(seen)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
321,aleju,kontakt@ajung.name,2018-05-15 18:03:47+02:00,6d9fe97897b31f101d9d05e6e29be6629ede5d6b,https://github.com/aleju/imgaug/commit/6d9fe97897b31f101d9d05e6e29be6629ede5d6b,Improve performance of tests,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
322,aleju,kontakt@ajung.name,2018-05-15 18:18:56+02:00,8548620c5987b258e29570d06ce60a4738f7874b,https://github.com/aleju/imgaug/commit/8548620c5987b258e29570d06ce60a4738f7874b,Fix python3 error,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['np.sum(list(seen.values())) == nb_iterations'],[],[],[],[],[],[],[],[],[],[],[],[],['np.sum(seen.values()) == nb_iterations'],[],[],[],[],[],[],[],[],[],[],[],[]
323,aleju,kontakt@ajung.name,2018-05-15 18:34:31+02:00,624df8fbdf0e60ec6aedc577c44aebc40b8846c2,https://github.com/aleju/imgaug/commit/624df8fbdf0e60ec6aedc577c44aebc40b8846c2,Fix #131 (float stoch. params not working with Add/AddElementwise),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
324,aleju,kontakt@ajung.name,2018-05-15 18:35:07+02:00,6fcd5d387cb15cd0cc3cf53260becbebca6b504d,https://github.com/aleju/imgaug/commit/6fcd5d387cb15cd0cc3cf53260becbebca6b504d,"Add tests for #131, Fix scale in AddAdditiveGaussianNoise test",1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['100 + 1 <= np.average(observed) <= 100 + 10', '100 + 1 <= np.average(observed) <= 100 + 10', '100 - 3 <= np.average(observed) <= 100 + 3', '100 - 3 <= np.average(observed) <= 100 + 3', 'np.min(observed) >= 100 + 1', 'np.max(observed) <= 100 + 10', 'np.min(observed) >= 100 + 1', 'np.max(observed) <= 100 + 10', 'np.min(observed) >= 100 - 3', 'np.max(observed) <= 100 + 3', 'np.min(observed) >= 100 - 3', 'np.max(observed) <= 100 + 3']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
325,aleju,kontakt@ajung.name,2018-05-16 17:52:35+02:00,37b98fc36e1b1e6e04ff1e4c8a77f6dc547b65a3,https://github.com/aleju/imgaug/commit/37b98fc36e1b1e6e04ff1e4c8a77f6dc547b65a3,Add test for Deterministic,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample1.shape == tuple()', 'sample1 == sample2', 'samples1.shape == (10,)', 'samples2.shape == (10,)', 'samples3.shape == (5, 3)', 'samples4.shape == (5, 3)', 'samples5.shape == (4, 5, 3)', 'samples6.shape == (4, 5, 3)', 'len(samples1_unique) == 1 and samples1_unique[0] == value', 'len(samples2_unique) == 1 and samples2_unique[0] == value', 'len(samples3_unique) == 1 and samples3_unique[0] == value', 'len(samples4_unique) == 1 and samples4_unique[0] == value', 'len(samples5_unique) == 1 and samples5_unique[0] == value', 'len(samples6_unique) == 1 and samples6_unique[0] == value', 'np.array_equal(', 'sample1.shape == tuple()', 'sample1 - eps < sample2 < sample1 + eps', 'samples1.shape == (10,)', 'samples2.shape == (10,)', 'samples3.shape == (5, 3)', 'samples4.shape == (5, 3)', 'samples5.shape == (4, 5, 3)', 'samples6.shape == (4, 5, 3)', 'samples1_sorted[0] - eps < samples1_sorted[-1] < samples1_sorted[0] + eps', 'samples2_sorted[0] - eps < samples2_sorted[-1] < samples2_sorted[0] + eps', 'samples3_sorted[0] - eps < samples3_sorted[-1] < samples3_sorted[0] + eps', 'samples4_sorted[0] - eps < samples4_sorted[-1] < samples4_sorted[0] + eps', 'samples5_sorted[0] - eps < samples5_sorted[-1] < samples5_sorted[0] + eps', 'samples6_sorted[0] - eps < samples6_sorted[-1] < samples6_sorted[0] + eps', 'np.allclose(']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
326,aleju,kontakt@ajung.name,2018-05-16 18:08:47+02:00,48642230eb6758f75470bec3f7901891121377ad,https://github.com/aleju/imgaug/commit/48642230eb6758f75470bec3f7901891121377ad,Add test for iap.Add,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['p.draw_sample() == v1 + v2', 'samples.dtype == np.int64', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.int64) + v1 + v2)', 'p.draw_sample() == v1 + v2', 'samples.dtype == np.int64', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.int64) + v1 + v2)', 'v1 + v2 - eps < p.draw_sample() < v1 + v2 + eps', 'samples.dtype == np.float64', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 + v2)', 'v1 + v2 - eps < p.draw_sample() < v1 + v2 + eps', 'samples.dtype == np.float64', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 + v2)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 + 1.0 - eps)', 'np.all(samples < 1.0 + 2.0 + eps)', 'samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 + 1.0 - eps)', 'np.all(samples < 1.0 + 2.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 + 1.0 - eps)', 'np.all(samples < 1.0 + 2.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 + 1.0 - eps)', 'np.all(samples < 1.0 + 2.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
327,aleju,kontakt@ajung.name,2018-05-16 18:15:24+02:00,bfda17e0561be1847b6a91da2d6c393b57471ae4,https://github.com/aleju/imgaug/commit/bfda17e0561be1847b6a91da2d6c393b57471ae4,Add test for iap.Subtract,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(samples < 2.0 + 1.0 + eps)', 'np.all(samples < 2.0 + 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'p.draw_sample() == v1 - v2', 'samples.dtype == np.int64', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.int64) + v1 - v2)', 'p.draw_sample() == v1 - v2', 'samples.dtype == np.int64', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.int64) + v1 - v2)', 'v1 - v2 - eps < p.draw_sample() < v1 - v2 + eps', 'samples.dtype == np.float64', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 - v2)', 'v1 - v2 - eps < p.draw_sample() < v1 - v2 + eps', 'samples.dtype == np.float64', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 - v2)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 - 2.0 - eps)', 'np.all(samples < 1.0 - 1.0 + eps)', 'samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 - 2.0 - eps)', 'np.all(samples < 1.0 - 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 - 1.0 - eps)', 'np.all(samples < 2.0 - 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 - 1.0 - eps)', 'np.all(samples < 2.0 - 1.0 + eps)']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(samples < 1.0 + 2.0 + eps)', 'np.all(samples < 1.0 + 2.0 + eps)']",[],[],[],[],[],[],[],[],[],[],[],[]
328,aleju,kontakt@ajung.name,2018-05-16 18:20:46+02:00,7ce19c68ea737673073a5499d2a685470555e71a,https://github.com/aleju/imgaug/commit/7ce19c68ea737673073a5499d2a685470555e71a,Add test for iap.Multiply,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['p.draw_sample() == v1 * v2', 'samples.dtype == np.int64', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.int64) + v1 * v2)', 'p.draw_sample() == v1 * v2', 'samples.dtype == np.int64', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.int64) + v1 * v2)', 'v1 * v2 - eps < p.draw_sample() < v1 * v2 + eps', 'samples.dtype == np.float64', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 * v2)', 'v1 * v2 - eps < p.draw_sample() < v1 * v2 + eps', 'samples.dtype == np.float64', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 * v2)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 * 1.0 - eps)', 'np.all(samples < 1.0 * 2.0 + eps)', 'samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 * 1.0 - eps)', 'np.all(samples < 1.0 * 2.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 * 1.0 - eps)', 'np.all(samples < 2.0 * 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 * 1.0 - eps)', 'np.all(samples < 2.0 * 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
329,aleju,kontakt@ajung.name,2018-05-16 18:54:11+02:00,676bfb0005bec8a70ff657b0bc8f3a2cedd5d9f6,https://github.com/aleju/imgaug/commit/676bfb0005bec8a70ff657b0bc8f3a2cedd5d9f6,Switch from float32 to float64 default dtype,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
330,aleju,kontakt@ajung.name,2018-05-16 18:55:48+02:00,77b2ead8254055cd96ac59751413b8f4aea0e8a3,https://github.com/aleju/imgaug/commit/77b2ead8254055cd96ac59751413b8f4aea0e8a3,Fix iap.Divide multiplying instead of dividing,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
331,aleju,kontakt@ajung.name,2018-05-16 18:56:19+02:00,877858fd4aa27bab3019f7b525df7a15da2945ac,https://github.com/aleju/imgaug/commit/877858fd4aa27bab3019f7b525df7a15da2945ac,Add test for iap.Divide,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['p.draw_sample() == v1 / v2', 'samples.dtype == np.float64', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.float64) + v1 / v2)', 'p.draw_sample() == v1 / v2', 'samples.dtype == np.float64', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.float64) + v1 / v2)', 'v1 / v2 - eps < p.draw_sample() < v1 / v2 + eps', 'samples.dtype == np.float64', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 / v2)', 'v1 / v2 - eps < p.draw_sample() < v1 / v2 + eps', 'samples.dtype == np.float64', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 / v2)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 / 2.0 - eps)', 'np.all(samples < 1.0 / 1.0 + eps)', 'samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 / 2.0 - eps)', 'np.all(samples < 1.0 / 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 / 1.0 - eps)', 'np.all(samples < 2.0 / 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 / 1.0 - eps)', 'np.all(samples < 2.0 / 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'samples_unique[0] == 1 and samples_unique[1] == 2']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
332,aleju,kontakt@ajung.name,2018-05-16 19:07:49+02:00,031169b80384934d5d873ed6635fd826a6e95cfd,https://github.com/aleju/imgaug/commit/031169b80384934d5d873ed6635fd826a6e95cfd,Add test for iap.Power,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['v1 ** v2 - eps < p.draw_sample() < v1 ** v2 + eps', 'samples.dtype == np.float64', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 ** v2)', 'v1 ** v2 - eps < p.draw_sample() < v1 ** v2 + eps', 'samples.dtype == np.float64', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 ** v2)', 'samples.shape == (10, 20)', 'np.all(samples > 1.5 ** 1.0 - eps)', 'np.all(samples < 1.5 ** 2.0 + eps)', 'samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps', 'samples.shape == (10, 20)', 'np.all(samples > 1.5 ** 1.0 - eps)', 'np.all(samples < 1.5 ** 2.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 ** 1.0 - eps)', 'np.all(samples < 2.0 ** 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 ** 1.0 - eps)', 'np.all(samples < 2.0 ** 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
333,aleju,kontakt@ajung.name,2018-05-16 19:19:16+02:00,46bd700fb605783097efe40cb4760e83be80a2c5,https://github.com/aleju/imgaug/commit/46bd700fb605783097efe40cb4760e83be80a2c5,Add test for iap.Absolute,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample.shape == tuple()', 'samples.shape == (10, 5)', 'abs(value) - eps < sample < abs(value) + eps', 'np.all(abs(value) - eps < samples)', 'np.all(samples < abs(value) + eps)', 'sample == abs(value)', 'np.all(samples == abs(value))', 'sample.shape == tuple()', 'sample in [3, 1]', 'samples.shape == (10, 10)', 'len(samples_uq) == 2', 'samples_uq[0] == 1 and samples_uq[1] == 3']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
334,aleju,kontakt@ajung.name,2018-05-17 19:00:36+02:00,4ba369fc14aebf0f9a64aa9248c70c81ba1c495a,https://github.com/aleju/imgaug/commit/4ba369fc14aebf0f9a64aa9248c70c81ba1c495a,Add test for iap.RandomSign,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['samples.shape == (1000,)', 'n_positive + n_negative == 1000', '350 < n_positive < 750', 'sample.shape == tuple()', 'n_positive + n_negative == 1000', '350 < n_positive < 750', 'np.sum(seen) == 4000', 'all([700 < v < 1300 for v in seen])', 'samples1.shape == (100, 10)', 'samples2.shape == (100, 10)', 'np.array_equal(samples1, samples2)', 'np.sum(samples == -2) > 50', 'np.sum(samples == -1) > 50', 'np.sum(samples == 1) > 50', 'np.sum(samples == 2) > 50']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
335,aleju,kontakt@ajung.name,2018-05-17 19:11:34+02:00,49727b699025557566927896ebabd9659e8c8a1b,https://github.com/aleju/imgaug/commit/49727b699025557566927896ebabd9659e8c8a1b,Add test for iap.ForceSign,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample.shape == tuple()', 'sample == 1', 'sample.shape == tuple()', 'sample == -1', 'samples.shape == (100,)', 'np.all(samples == 1)', 'samples.shape == (100,)', 'np.all(samples == -1)', 'samples.shape == (100,)', 'np.all(samples == 1)', 'samples.shape == (100,)', 'np.all(samples == -1)', 'samples.shape == (1000,)', 'n_twos + n_ones == 1000', '200 < n_twos < 700', '200 < n_ones < 700', 'samples.shape == (1000,)', 'n_twos + n_ones == 1000', 'n_twos > 0', 'n_ones > 0', 'samples.shape == (100,)', 'n_twos + n_ones == 100', 'n_twos < 5', 'samples1.shape == (100, 10)', 'samples2.shape == (100, 10)', 'np.array_equal(samples1, samples2)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
336,aleju,kontakt@ajung.name,2018-05-17 19:14:37+02:00,ad2955eb6b01fbab40cb50cc85d04b89193e1910,https://github.com/aleju/imgaug/commit/ad2955eb6b01fbab40cb50cc85d04b89193e1910,Add test for iap.Positive,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['samples.shape == (100,)', 'np.all(samples == 1)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
337,aleju,kontakt@ajung.name,2018-05-17 19:15:58+02:00,ba2e314aecfdcdc428ec55a38cb561c67d89ff41,https://github.com/aleju/imgaug/commit/ba2e314aecfdcdc428ec55a38cb561c67d89ff41,Add test for iap.Negative,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['samples.shape == (100,)', 'np.all(samples == -1)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
338,aleju,kontakt@ajung.name,2018-05-17 19:26:01+02:00,fbd6779ba3e00de1eddfc4c44ce45e1d1accbb52,https://github.com/aleju/imgaug/commit/fbd6779ba3e00de1eddfc4c44ce45e1d1accbb52,Add tests for stochastic parameter operators,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,55,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(param3, iap.Multiply)', 'param3.other_param == param1', 'param3.val == param2', 'isinstance(param3, iap.Multiply)', 'param3.other_param == param1', 'isinstance(param3.val, iap.Deterministic)', 'param3.val.value == 2', 'isinstance(param3, iap.Multiply)', 'isinstance(param3.other_param, iap.Deterministic)', 'param3.other_param.value == 2', 'param3.val == param1', 'isinstance(param3, iap.Divide)', 'param3.other_param == param1', 'param3.val == param2', 'isinstance(param3, iap.Divide)', 'param3.other_param == param1', 'isinstance(param3.val, iap.Deterministic)', 'param3.val.value == 2', 'isinstance(param3, iap.Divide)', 'isinstance(param3.other_param, iap.Deterministic)', 'param3.other_param.value == 2', 'param3.val == param1', 'isinstance(param3, iap.Add)', 'param3.other_param == param1', 'param3.val == param2', 'isinstance(param3, iap.Add)', 'param3.other_param == param1', 'isinstance(param3.val, iap.Deterministic)', 'param3.val.value == 2', 'isinstance(param3, iap.Add)', 'isinstance(param3.other_param, iap.Deterministic)', 'param3.other_param.value == 2', 'param3.val == param1', 'isinstance(param3, iap.Subtract)', 'param3.other_param == param1', 'param3.val == param2', 'isinstance(param3, iap.Subtract)', 'param3.other_param == param1', 'isinstance(param3.val, iap.Deterministic)', 'param3.val.value == 2', 'isinstance(param3, iap.Subtract)', 'isinstance(param3.other_param, iap.Deterministic)', 'param3.other_param.value == 2', 'param3.val == param1', 'isinstance(param3, iap.Power)', 'param3.other_param == param1', 'param3.val == param2', 'isinstance(param3, iap.Power)', 'param3.other_param == param1', 'isinstance(param3.val, iap.Deterministic)', 'param3.val.value == 2', 'isinstance(param3, iap.Power)', 'isinstance(param3.other_param, iap.Deterministic)', 'param3.other_param.value == 2', 'param3.val == param1']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
339,aleju,kontakt@ajung.name,2018-05-19 12:36:07+02:00,56090dd165d676303df22d40f10a5f3423894245,https://github.com/aleju/imgaug/commit/56090dd165d676303df22d40f10a5f3423894245,Add test for iap.Clip,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == 0', 'np.all(samples == 0)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == 1', 'np.all(samples == 1)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == -1', 'np.all(samples == -1)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '0.5 - eps < sample < 0.5 + eps', 'np.all(np.logical_or(0.5 - eps < samples, samples < 0.5 + eps))', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == 1', 'np.all(samples == 1)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == -1', 'np.all(samples == -1)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [0, 1]', 'np.all(np.logical_or(samples == 0, samples == 1))', 'np.array_equal(samples1, samples2)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
340,aleju,kontakt@ajung.name,2018-05-19 12:47:33+02:00,595c96e0f84c83164d52fd6ad44270f9772665b0,https://github.com/aleju/imgaug/commit/595c96e0f84c83164d52fd6ad44270f9772665b0,Add test for iap.Discretize,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == value_expected', 'np.all(samples == value_expected)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [0, 1]', 'np.all(np.logical_or(samples == 0, samples == 1))', 'np.all(np.abs(samples1 - samples2) < 0.2*(10000/3))', 'np.array_equal(samples1, samples2)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
341,aleju,kontakt@ajung.name,2018-05-19 13:03:35+02:00,26c3ff9dbf4307df7b9e0d1e82e9dea981e79023,https://github.com/aleju/imgaug/commit/26c3ff9dbf4307df7b9e0d1e82e9dea981e79023,Add test for iap.Uniform,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample.shape == tuple()', 'samples.shape == (10, 5)', '0 - eps < sample < 1.0 + eps', 'np.all(np.logical_or(0 - eps < samples, samples < 1.0 + eps))', 'density_expected - density_tolerance < density < density_expected + density_tolerance', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '-1.0 - eps < sample < 1.0 + eps', 'np.all(np.logical_or(-1.0 - eps < samples, samples < 1.0 + eps))', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '-1.0 - eps < sample < 1.0 + eps', 'np.all(np.logical_or(-1.0 - eps < samples, samples < 1.0 + eps))', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '-1.0 - eps < sample < 1.0 + eps', 'np.all(np.logical_or(0 - eps < samples, samples < 1.0 + eps))', 'np.allclose(samples1, samples2)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
342,aleju,kontakt@ajung.name,2018-05-19 13:14:42+02:00,bde0ca550e6a10d5ea29c813a52a086af0b58040,https://github.com/aleju/imgaug/commit/bde0ca550e6a10d5ea29c813a52a086af0b58040,Add test for iap.DiscreteUniform,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [0, 1, 2]', 'np.all(np.logical_or(np.logical_or(samples == 0, samples == 1), samples==2))', 'expected - expected_tolerance < count < expected + expected_tolerance', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [-1, 0, 1]', 'np.all(np.logical_or(np.logical_or(samples == -1, samples == 0), samples==1))', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [-1, 0, 1]', 'np.all(np.logical_or(np.logical_or(samples == -1, samples == 0), samples==1))', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [-1, 0, 1]', 'np.all(np.logical_or(np.logical_or(samples == -1, samples == 0), samples==1))', 'np.array_equal(samples1, samples2)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
343,aleju,kontakt@ajung.name,2018-05-19 13:32:28+02:00,22d3d21cce0d7b325ae31a50058298f6526c2fac,https://github.com/aleju/imgaug/commit/22d3d21cce0d7b325ae31a50058298f6526c2fac,Add test for iap.Choice,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [0, 1, 2]', 'np.all(np.logical_or(np.logical_or(samples == 0, samples == 1), samples==2))', 'expected - expected_tolerance < count < expected + expected_tolerance', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [-1, 1]', 'np.all(np.logical_or(samples == -1, samples == 1))', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '-1.2 - eps < sample < -1.2 + eps or 1.7 - eps < sample < 1.7 + eps', 'np.all(', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in []', 'np.all(', 'all([count in [0, 1] for count in seen])', 'len(unique) == 2', '2500 - 500 < count < 2500 + 500', '7500 - 500 < count < 7500 + 500', 'False', 'len(unique) == 3', '2500 - 500 < count < 2500 + 500', '5000 - 500 < count < 5000 + 500', 'False', 'np.array_equal(samples1, samples2)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
344,aleju,kontakt@ajung.name,2018-05-19 13:55:01+02:00,8c77aa1056283e76993f56aaef28fd3322cebcb1,https://github.com/aleju/imgaug/commit/8c77aa1056283e76993f56aaef28fd3322cebcb1,Add test for iap.Binomial,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == 0', 'np.all(samples == 0)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == 1', 'np.all(samples == 1)', 'sample.shape == tuple()', 'samples.shape == (10000,)', 'sample in [0, 1]', 'len(unique) == 2', '5000 - 500 < count < 5000 + 500', '5000 - 500 < count < 5000 + 500', 'False', '(0.25 - 0.05 < p < 0.25 + 0.05) or (0.75 - 0.05 < p < 0.75 + 0.05)', 'nb_p_changed > 15', 'np.array_equal(samples1, samples2)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
345,aleju,kontakt@ajung.name,2018-05-19 14:15:35+02:00,04d4848c714155f926617ae2e3910a0e0f19161b,https://github.com/aleju/imgaug/commit/04d4848c714155f926617ae2e3910a0e0f19161b,Add test for iap.Poisson,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample.shape == tuple()', 'samples.shape == (100, 1000)', '0 < sample', 'count_direct - tolerance < count < count_direct + tolerance', 'np.array_equal(samples1, samples2)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
346,aleju,kontakt@ajung.name,2018-05-20 10:41:50+02:00,5ac3af1d7a97b9147f74419857a037da60270ea9,https://github.com/aleju/imgaug/commit/5ac3af1d7a97b9147f74419857a037da60270ea9,Add test for iap.Normal,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample.shape == tuple()', 'samples.shape == (100, 1000)', '0 < sample', 'density_direct - tolerance < density < density_direct + tolerance', 'False', '500 - 100 < seen[0] < 500 + 100', '500 - 100 < seen[1] < 500 + 100', 'np.std(samples1) < np.std(samples2)', '100 - 10 < np.std(samples2) < 100 + 10', 'np.allclose(samples1, samples2)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
347,aleju,kontakt@ajung.name,2018-05-20 10:51:02+02:00,86071bfc9a547da5881097c7f3fadf72e23407b2,https://github.com/aleju/imgaug/commit/86071bfc9a547da5881097c7f3fadf72e23407b2,Add test for iap.Laplace,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample.shape == tuple()', 'samples.shape == (100, 1000)', '0 < sample', 'density_direct - tolerance < density < density_direct + tolerance', 'False', '500 - 100 < seen[0] < 500 + 100', '500 - 100 < seen[1] < 500 + 100', 'np.var(samples1) < np.var(samples2)', 'np.allclose(samples1, samples2)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
348,aleju,kontakt@ajung.name,2018-05-20 11:07:34+02:00,833529c7261a85db77166ba605268b889e590c9e,https://github.com/aleju/imgaug/commit/833529c7261a85db77166ba605268b889e590c9e,Add test for iap.ChiSquare,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample.shape == tuple()', 'samples.shape == (100, 1000)', '0 <= sample', 'np.all(0 <= samples)', 'density_direct - tolerance < density < density_direct + tolerance', 'False', '500 - 100 < seen[0] < 500 + 100', '500 - 100 < seen[1] < 500 + 100', 'np.var(samples1) < np.var(samples2)', '2*1 - 1.0 < np.var(samples1) < 2*1 + 1.0', '2*10 - 5.0 < np.var(samples2) < 2*10 + 5.0', 'np.allclose(samples1, samples2)']",[],[],[],[],[],[],[],[],[],[],[],[],"['0 < sample', '0 < sample']",[],[],[],[],[],[],[],[],[],[],[],[]
349,aleju,kontakt@ajung.name,2018-05-20 11:29:07+02:00,27b08958ec7f950326b566614881e0e105ec74bc,https://github.com/aleju/imgaug/commit/27b08958ec7f950326b566614881e0e105ec74bc,Add test for iap.Weibull,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample.shape == tuple()', 'samples.shape == (100, 1000)', '0 <= sample', 'np.all(0 <= samples)', 'density_direct - tolerance < density < density_direct + tolerance', 'False', '50 - 25 < seen[0] < 50 + 25', '50 - 25 < seen[1] < 50 + 25', 'np.var(samples1) < np.var(samples2)', 'expected_first - 0.2 * expected_first < np.var(samples1) < expected_first + 0.2 * expected_first', 'expected_second - 0.2 * expected_second < np.var(samples2) < expected_second + 0.2 * expected_second', 'np.allclose(samples1, samples2)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
350,aleju,kontakt@ajung.name,2018-05-20 11:44:01+02:00,503b158e15ed565b3392acaef5a518359aa7a290,https://github.com/aleju/imgaug/commit/503b158e15ed565b3392acaef5a518359aa7a290,Add test for iap.Beta,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample.shape == tuple()', 'samples.shape == (100, 1000)', '0 - eps < sample < 1.0 + eps', 'np.all(np.logical_or(0 - eps <= samples, samples <= 1.0 + eps))', 'density_direct - tolerance < density < density_direct + tolerance', 'False', '50 - 25 < seen[0] < 50 + 25', '50 - 25 < seen[1] < 50 + 25', 'np.var(samples1) < np.var(samples2)', 'expected_first - 0.1 * expected_first < np.var(samples1) < expected_first + 0.1 * expected_first', 'expected_second - 0.1 * expected_second < np.var(samples2) < expected_second + 0.1 * expected_second', 'np.allclose(samples1, samples2)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
351,aleju,kontakt@ajung.name,2018-05-20 13:48:39+02:00,fb5f2208d2941d3af2c1e74b7ebe549b505c9d34,https://github.com/aleju/imgaug/commit/fb5f2208d2941d3af2c1e74b7ebe549b505c9d34,Add test for iap.Sigmoid,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample.shape == tuple()', 'samples.shape == (5, 10)', 'expected - eps < sample < expected + eps', 'np.all(np.logical_or(expected - eps < samples, samples < expected + eps))', 'sample.shape == tuple()', 'samples.shape == (5, 10)', 'expected - eps < sample < expected + eps', 'np.all(np.logical_or(expected - eps < samples, samples < expected + eps))', 'False', '500 - 150 < seen[0] < 500 + 150', '500 - 150 < seen[1] < 500 + 150', 'False', '500 - 150 < seen[0] < 500 + 150', '500 - 150 < seen[1] < 500 + 150', 'sample.shape == tuple()', 'samples.shape == (2, 3)', 'expected - eps < sample < expected + eps', 'np.all(np.logical_or(expected - eps < samples, samples < expected + eps))', 'samples1.shape == (100, 10)', 'samples2.shape == (100, 10)', 'np.array_equal(samples1, samples2)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
352,aleju,kontakt@ajung.name,2018-05-20 14:34:05+02:00,201a614255b47ea531a1a508eae25bef9264d133,https://github.com/aleju/imgaug/commit/201a614255b47ea531a1a508eae25bef9264d133,Allow non-2D sample sizes in IterativeNoiseAggregator,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
353,aleju,kontakt@ajung.name,2018-05-20 14:34:35+02:00,5458e8bdfc3ae168c0caa91a508cd860e964a085,https://github.com/aleju/imgaug/commit/5458e8bdfc3ae168c0caa91a508cd860e964a085,Add test for iap.IterativeNoiseAggregator,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample.shape == tuple()', 'samples.shape == (2, 4)', 'sample == 1', 'np.all(samples == 1)', 'sample.shape == tuple()', 'samples.shape == (2, 4)', '25 - 5 < sample < 25 + 5', 'np.all(np.logical_or(25 - 5 < samples, samples < 25 + 5))', 'sample.shape == tuple()', 'samples.shape == (2, 4)', 'sample == 50', 'np.all(samples == 50)', 'sample.shape == tuple()', 'samples.shape == (2, 4)', 'sample == 0', 'np.all(samples == 0)', 'False', 'seen[2] < 5', '50 - 20 < seen[0] < 50 + 20', '50 - 20 < seen[1] < 50 + 20', 'nb_0 + nb_50 == 2 * 1000', '0.25 - 0.05 < nb_0 / (2 * 1000) < 0.25 + 0.05', 'samples1.shape == (100, 10)', 'samples2.shape == (100, 10)', 'np.allclose(samples1, samples2)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
354,aleju,kontakt@ajung.name,2018-05-20 16:38:00+02:00,18f15b0bee3636364fc8008df7a44889390584f6,https://github.com/aleju/imgaug/commit/18f15b0bee3636364fc8008df7a44889390584f6,Add test for iap.FromLowerResolution,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['samples.shape == (8, 8, 1)', 'len(uq) == 2 and (0 in uq or 1 in uq)', 'samples.shape == (8, 8, 3)', 'len(uq) == 2 and (0 in uq or 1 in uq)', 'seen_components[0] < seen_components[1]', 'seen_pixels[0] / seen_components[0] > seen_pixels[1] / seen_components[1]', 'seen_components[0] < seen_components[1]', 'seen_pixels[0] / seen_components[0] > seen_pixels[1] / seen_components[1]', 'seen_components[0] < seen_components[1]', 'seen_pixels[0] / seen_components[0] > seen_pixels[1] / seen_components[1]', 'np.allclose(samples1, samples2)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
355,aleju,kontakt@ajung.name,2018-05-21 09:31:56+02:00,6e3061c4f8909c248bae2302ef4407ee8d6a99c8,https://github.com/aleju/imgaug/commit/6e3061c4f8909c248bae2302ef4407ee8d6a99c8,Fix is_integer and is_float reacting to bool,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
356,aleju,kontakt@ajung.name,2018-05-21 09:34:37+02:00,b60f189c712a45d9a490d7948048e2b580d602cc,https://github.com/aleju/imgaug/commit/b60f189c712a45d9a490d7948048e2b580d602cc,Make is_iterable more abstract,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
357,aleju,kontakt@ajung.name,2018-05-21 09:39:21+02:00,0e800b7905f223bbefe7b482d9e2f7354a85d522,https://github.com/aleju/imgaug/commit/0e800b7905f223bbefe7b482d9e2f7354a85d522,Add tests for datatype checks and random state functions,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['ia.is_np_array(value) == True', 'ia.is_np_array(value) == False', 'ia.is_single_number(value) == True', 'ia.is_single_number(value) == False', 'ia.is_iterable(value) == True, value', 'ia.is_iterable(value) == False', 'ia.is_string(value) == True', 'ia.is_string(value) == False', 'ia.is_integer_array(value) == True', 'ia.is_integer_array(value) == False', 'ia.is_callable(value) == True', 'ia.is_callable(value) == False', 'ia.CURRENT_RANDOM_STATE.randint(0, 1000*1000) == rs.randint(0, 1000*1000)', 'ia.current_random_state() == ia.CURRENT_RANDOM_STATE', 'rs_observed.randint(0, 10**6) == rs_expected.randint(0, 10**6)', 'rs_observed1.randint(0, 10**6) != rs_observed2.randint(0, 10**6)', 'rs_observed.randint(0, 10**6) != rs_not_expected.randint(0, 10**6)', 'rs_observed1.randint(0, 10**6) != rs_observed2.randint(0, 10**6)', 'rs_observed1.randint(0, 10**6) == rs_observed2.randint(0, 10**6) == rs_expected.randint(0, 10**6)', 'ia.dummy_random_state().randint(0, 10**6) == np.random.RandomState(1).randint(0, 10**6)', 'rs != rs_copy', 'rs.randint(0, 10**6) == rs_copy.randint(0, 10**6)', 'ia.copy_random_state(np.random) == np.random', 'ia.copy_random_state(np.random, force_copy=True) != np.random', 'rs_observed.randint(0, 10**6) == rs_expected.randint(0, 10**6)', 'rs_observed1.randint(0, 10**6) == rs_expected1.randint(0, 10**6)', 'rs_observed2.randint(0, 10**6) == rs_expected2.randint(0, 10**6)', 'rs1.randint(0, 10**6) == rs2.randint(0, 10**6)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
358,aleju,kontakt@ajung.name,2018-05-21 11:35:21+02:00,3deca224a5d53003486d72cfa20d1240eb4815ff,https://github.com/aleju/imgaug/commit/3deca224a5d53003486d72cfa20d1240eb4815ff,Fix label argument ignored in BoundingBox.copy(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
359,aleju,kontakt@ajung.name,2018-05-21 11:53:55+02:00,87c4a394ed35ab2c2859e3c19c328593ff5cd218,https://github.com/aleju/imgaug/commit/87c4a394ed35ab2c2859e3c19c328593ff5cd218,"Allow single ints in BB.draw_on_image(), fix list multiplication in BB.draw_on_image()",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
360,aleju,kontakt@ajung.name,2018-05-21 11:54:44+02:00,8191aada895c2b5cd61a9c34310e3d029e0584de,https://github.com/aleju/imgaug/commit/8191aada895c2b5cd61a9c34310e3d029e0584de,Remove dead code,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
361,aleju,kontakt@ajung.name,2018-05-21 13:15:02+02:00,a34d151242a3f400b7f21180a385b62fd880c092,https://github.com/aleju/imgaug/commit/a34d151242a3f400b7f21180a385b62fd880c092,Add tests for ia.BoundingBox,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,201,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['bb.y1_int == 10', 'bb.x1_int == 20', 'bb.y2_int == 30', 'bb.x2_int == 40', 'bb.width == 40 - 20', 'bb.height == 30 - 10', 'center_x - eps < bb.center_x < center_x + eps', 'center_y - eps < bb.center_y < center_y + eps', 'bb.y1_int == 10', 'bb.x1_int == 20', 'bb.y2_int == 31', 'bb.x2_int == 41', 'bb.width == 40.9 - 20.1', 'bb.height == 30.9 - 10.1', 'center_x - eps < bb.center_x < center_x + eps', 'center_y - eps < bb.center_y < center_y + eps', 'bb.area == (30-10) * (40-20)', '10*2 - eps < bb2.y1 < 10*2 + eps', '20*2 - eps < bb2.x1 < 20*2 + eps', '30*2 - eps < bb2.y2 < 30*2 + eps', '40*2 - eps < bb2.x2 < 40*2 + eps', '10*0.5 - eps < bb2.y1 < 10*0.5 + eps', '20*0.5 - eps < bb2.x1 < 20*0.5 + eps', '30*0.5 - eps < bb2.y2 < 30*0.5 + eps', '40*0.5 - eps < bb2.x2 < 40*0.5 + eps', '10*1 - eps < bb2.y1 < 10*1 + eps', '20*2 - eps < bb2.x1 < 20*2 + eps', '30*1 - eps < bb2.y2 < 30*1 + eps', '40*2 - eps < bb2.x2 < 40*2 + eps', '10*2 - eps < bb2.y1 < 10*2 + eps', '20*1 - eps < bb2.x1 < 20*1 + eps', '30*2 - eps < bb2.y2 < 30*2 + eps', '40*1 - eps < bb2.x2 < 40*1 + eps', 'bb2.y1 == 10-1', 'bb2.y2 == 30+1', 'bb2.x1 == 20-1', 'bb2.x2 == 40+1', 'bb2.y1 == 10-(-1)', 'bb2.y2 == 30+(-1)', 'bb2.x1 == 20-(-1)', 'bb2.x2 == 40+(-1)', 'bb2.y1 == 10-1', 'bb2.y2 == 30+0', 'bb2.x1 == 20-0', 'bb2.x2 == 40+0', 'bb2.y1 == 10-0', 'bb2.y2 == 30+0', 'bb2.x1 == 20-0', 'bb2.x2 == 40+1', 'bb2.y1 == 10-0', 'bb2.y2 == 30+1', 'bb2.x1 == 20-0', 'bb2.x2 == 40+0', 'bb2.y1 == 10-0', 'bb2.y2 == 30+0', 'bb2.x1 == 20-1', 'bb2.x2 == 40+0', 'bb_inter.x1 == 39', 'bb_inter.x2 == 40', 'bb_inter.y1 == 10', 'bb_inter.y2 == 30', 'bb_inter == False', 'bb_union.x1 == 20', 'bb_union.x2 == 59', 'bb_union.y1 == 10', 'bb_union.y2 == 30', '1.0 - eps < iou < 1.0 + eps', '0.0 - eps < iou < 0.0 + eps', 'iou_expected - eps < iou < iou_expected + eps', 'bb.is_fully_within_image((100, 100, 3)) == True', 'bb.is_fully_within_image((20, 100, 3)) == False', 'bb.is_fully_within_image((100, 30, 3)) == False', 'bb.is_fully_within_image((1, 1, 3)) == False', 'bb.is_partly_within_image((100, 100, 3)) == True', 'bb.is_partly_within_image((20, 100, 3)) == True', 'bb.is_partly_within_image((100, 30, 3)) == True', 'bb.is_partly_within_image((1, 1, 3)) == False', 'bb.is_out_of_image((100, 100, 3), partly=True, fully=True) == False', 'bb.is_out_of_image((100, 100, 3), partly=False, fully=True) == False', 'bb.is_out_of_image((100, 100, 3), partly=True, fully=False) == False', 'bb.is_out_of_image((20, 100, 3), partly=True, fully=True) == True', 'bb.is_out_of_image((20, 100, 3), partly=False, fully=True) == False', 'bb.is_out_of_image((20, 100, 3), partly=True, fully=False) == True', 'bb.is_out_of_image((100, 30, 3), partly=True, fully=True) == True', 'bb.is_out_of_image((100, 30, 3), partly=False, fully=True) == False', 'bb.is_out_of_image((100, 30, 3), partly=True, fully=False) == True', 'bb.is_out_of_image((1, 1, 3), partly=True, fully=True) == True', 'bb.is_out_of_image((1, 1, 3), partly=False, fully=True) == True', 'bb.is_out_of_image((1, 1, 3), partly=True, fully=False) == False', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', 'bb_cut.y2 == 30', 'bb_cut.x2 == 40', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', 'bb_cut.y2 == 20', 'bb_cut.x2 == 40', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', 'bb_cut.y2 == 30', 'bb_cut.x2 == 30', 'bb_top.y1 == 10', 'bb_top.x1 == 20', 'bb_top.y2 == 30', 'bb_top.x2 == 40', 'bb_right.y1 == 10', 'bb_right.x1 == 20', 'bb_right.y2 == 30', 'bb_right.x2 == 40', 'bb_bottom.y1 == 10', 'bb_bottom.x1 == 20', 'bb_bottom.y2 == 30', 'bb_bottom.x2 == 40', 'bb_left.y1 == 10', 'bb_left.x1 == 20', 'bb_left.y2 == 30', 'bb_left.x2 == 40', 'bb_top.y1 == 10+1', 'bb_top.x1 == 20', 'bb_top.y2 == 30+1', 'bb_top.x2 == 40', 'bb_right.y1 == 10', 'bb_right.x1 == 20-1', 'bb_right.y2 == 30', 'bb_right.x2 == 40-1', 'bb_bottom.y1 == 10-1', 'bb_bottom.x1 == 20', 'bb_bottom.y2 == 30-1', 'bb_bottom.x2 == 40', 'bb_left.y1 == 10', 'bb_left.x1 == 20+1', 'bb_left.y2 == 30', 'bb_left.x2 == 40+1', 'bb_top.y1 == 10-1', 'bb_top.x1 == 20', 'bb_top.y2 == 30-1', 'bb_top.x2 == 40', 'bb_right.y1 == 10', 'bb_right.x1 == 20+1', 'bb_right.y2 == 30', 'bb_right.x2 == 40+1', 'bb_bottom.y1 == 10+1', 'bb_bottom.x1 == 20', 'bb_bottom.y2 == 30+1', 'bb_bottom.x2 == 40', 'bb_left.y1 == 10', 'bb_left.x1 == 20-1', 'bb_left.y2 == 30', 'bb_left.x2 == 40-1', 'bb_mix.y1 == 10+1-2', 'bb_mix.x1 == 20+3-4', 'bb_mix.y2 == 30+3-4', 'bb_mix.x2 == 40+1-2', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image == 0)', 'np.all(image_bb[bb_mask] == [255, 0, 0])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [128, 128, 128])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [150, 150, 150])', 'np.all(image_bb[~bb_mask] == [100, 100, 100])', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image[bb_mask] == [255, 255, 255])', 'np.all(image[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'got_exception == False', 'got_exception == True', 'np.array_equal(image_sub, image[1:3, 1:3, :])', 'np.array_equal(image_sub, image_pad[8:11, 8:11, :])', 'kps[0].y == 1', 'kps[0].x == 1', 'kps[1].y == 1', 'kps[1].x == 3', 'kps[2].y == 3', 'kps[2].x == 3', 'kps[3].y == 3', 'kps[3].x == 1', 'bb2.y1 == 1', 'bb2.y2 == 3', 'bb2.x1 == 1', 'bb2.x2 == 3', 'bb2.label == ', 'bb2.y1 == 10', 'bb2.x1 == 20', 'bb2.y2 == 30', 'bb2.x2 == 40', 'bb2.label == ', 'bb2.y1 == 1', 'bb2.y2 == 3', 'bb2.x1 == 1', 'bb2.x2 == 3', 'bb2.label[0] == ', 'bb.__repr__() == ', 'bb.__str__() == ']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
362,aleju,kontakt@ajung.name,2018-05-22 17:50:13+02:00,3e40b1c270ce221c3ef5481b3e69a9a48cf4415b,https://github.com/aleju/imgaug/commit/3e40b1c270ce221c3ef5481b3e69a9a48cf4415b,Add test for ia.draw_grid(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(grid, image)', 'np.array_equal(grid, expected)', 'np.array_equal(grid, expected)', 'np.array_equal(grid, expected)', 'np.array_equal(grid, expected)', 'np.array_equal(grid, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
363,aleju,kontakt@ajung.name,2018-05-22 18:01:03+02:00,075870c69fcbe68589eea3595ba85b51b60dba89,https://github.com/aleju/imgaug/commit/075870c69fcbe68589eea3595ba85b51b60dba89,Add default values for Keypoint.shift() arguments,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
364,aleju,kontakt@ajung.name,2018-05-22 18:01:44+02:00,17a7dbe24b90255375792e6da79b91bc25dbb256,https://github.com/aleju/imgaug/commit/17a7dbe24b90255375792e6da79b91bc25dbb256,Add tests for ia.Keypoint,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['kp.y == 1', 'kp.x == 2', 'kp.y_int == 1', 'kp.x_int == 2', '1.1 - eps < kp.y < 1.1 + eps', '2.7 - eps < kp.x < 2.7 + eps', 'kp.y_int == 1', 'kp.x_int == 3', 'kp2.y == 1', 'kp2.x == 2', 'kp2.y == 2', 'kp2.x == 2', 'kp2.y == 1', 'kp2.x == 4', 'kp2.y == 2', 'kp2.x == 4', 'kp2.y == 2', 'kp2.x == 2', 'kp2.y == 0', 'kp2.x == 2', 'kp2.y == 1', 'kp2.x == 3', 'kp2.y == 1', 'kp2.x == 1', 'kp2.y == 2', 'kp2.x == 4', 'kp.__repr__() == kp.__str__() == ', 'kp.__repr__() == kp.__str__() == ']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
365,aleju,kontakt@ajung.name,2018-05-22 18:52:35+02:00,ec85d595a66e7face0b3a7cb2ec59db2fad638fa,https://github.com/aleju/imgaug/commit/ec85d595a66e7face0b3a7cb2ec59db2fad638fa,Fix off by one upper bound error in KeypointsOnImage.draw_on_image(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
366,aleju,kontakt@ajung.name,2018-05-22 18:56:26+02:00,e8f07e627d5ab186adc062c324c0f13cc97c2a27,https://github.com/aleju/imgaug/commit/e8f07e627d5ab186adc062c324c0f13cc97c2a27,Add default values for KeypointsOnImage.shift() arguments,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
367,aleju,kontakt@ajung.name,2018-05-22 19:04:49+02:00,6bcbef52fb9e95ce621ff91c845c199305befbaa,https://github.com/aleju/imgaug/commit/6bcbef52fb9e95ce621ff91c845c199305befbaa,Fix off by one upper bound error in KeypointsOnImage.to_keypoint_image(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
368,aleju,kontakt@ajung.name,2018-05-22 19:07:20+02:00,438e7538fbd869f38f93c72cb7be8289b0ee7b68,https://github.com/aleju/imgaug/commit/438e7538fbd869f38f93c72cb7be8289b0ee7b68,Add tests for ia.KeypointsOnImage,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,102,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['kpi.height == 10', 'kpi.width == 20', 'all([kp_i.x == kp_j.x and kp_i.y == kp_j.y for kp_i, kp_j in zip(kpi.keypoints, kpi2.keypoints)])', 'kpi2.keypoints[0].x == 2', 'kpi2.keypoints[0].y == 4', 'kpi2.keypoints[1].x == 6', 'kpi2.keypoints[1].y == 8', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask_size3] == [0, 255, 0])', 'np.all(image_kps[~kps_mask_size3] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [0, 0, 255])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [255, 255, 255])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image2 == image_kps)', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image2[kps_mask] == [0, 255, 0])', 'np.all(image2[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'got_exception', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'got_exception', 'kpi2.keypoints[0].x == kpi.keypoints[0].x', 'kpi2.keypoints[0].y == kpi.keypoints[0].y', 'kpi2.keypoints[1].x == kpi.keypoints[1].x', 'kpi2.keypoints[1].y == kpi.keypoints[1].y', 'kpi2.keypoints[0].x == kpi.keypoints[0].x + 1', 'kpi2.keypoints[0].y == kpi.keypoints[0].y', 'kpi2.keypoints[1].x == kpi.keypoints[1].x + 1', 'kpi2.keypoints[1].y == kpi.keypoints[1].y', 'kpi2.keypoints[0].x == kpi.keypoints[0].x - 1', 'kpi2.keypoints[0].y == kpi.keypoints[0].y', 'kpi2.keypoints[1].x == kpi.keypoints[1].x - 1', 'kpi2.keypoints[1].y == kpi.keypoints[1].y', 'kpi2.keypoints[0].x == kpi.keypoints[0].x', 'kpi2.keypoints[0].y == kpi.keypoints[0].y + 1', 'kpi2.keypoints[1].x == kpi.keypoints[1].x', 'kpi2.keypoints[1].y == kpi.keypoints[1].y + 1', 'kpi2.keypoints[0].x == kpi.keypoints[0].x', 'kpi2.keypoints[0].y == kpi.keypoints[0].y - 1', 'kpi2.keypoints[1].x == kpi.keypoints[1].x', 'kpi2.keypoints[1].y == kpi.keypoints[1].y - 1', 'kpi2.keypoints[0].x == kpi.keypoints[0].x + 1', 'kpi2.keypoints[0].y == kpi.keypoints[0].y + 2', 'kpi2.keypoints[1].x == kpi.keypoints[1].x + 1', 'kpi2.keypoints[1].y == kpi.keypoints[1].y + 2', 'np.allclose(observed, expected)', '1 - eps < kpi.keypoints[0].x < 1 + eps', '2 - eps < kpi.keypoints[0].y < 2 + eps', '3 - eps < kpi.keypoints[1].x < 3 + eps', '4 - eps < kpi.keypoints[1].y < 4 + eps', 'np.all(image[kps_mask] == 255)', 'np.all(image[~kps_mask] == 0)', 'np.all(image_size3[kps_mask] == 255)', 'np.all(image_size3[kps_mask_size3] >= 128)', 'np.all(image_size3[~kps_mask_size3] == 0)', 'kpi2.shape == (5, 5, 3)', 'len(kpi2.keypoints) == 2', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[1].x == 3', 'kpi2.shape == (5, 5, 3)', 'len(kpi2.keypoints) == 2', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[1].y == -2', 'kpi2.keypoints[1].x == -1', 'kpi2.shape == (5, 5, 3)', 'len(kpi2.keypoints) == 2', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[1].y == -2', 'kpi2.keypoints[1].x == -1', 'kpi2.shape == (5, 5, 3)', 'len(kpi2.keypoints) == 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[0].x == 100', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[1].y == 4']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
369,aleju,kontakt@ajung.name,2018-05-23 18:48:51+02:00,0ff1b4384c3f63a447d3fe303c3a3bdb7174b38d,https://github.com/aleju/imgaug/commit/0ff1b4384c3f63a447d3fe303c3a3bdb7174b38d,Fix tuple being accepted as list,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
370,aleju,kontakt@ajung.name,2018-05-23 18:49:41+02:00,a81ab7f9d08014ae66f29fa44acf401ca491d6cf,https://github.com/aleju/imgaug/commit/a81ab7f9d08014ae66f29fa44acf401ca491d6cf,Add test for iap.handle_continuous_param(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Uniform)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Uniform)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Uniform)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Uniform)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Uniform)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception == True']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
371,aleju,kontakt@ajung.name,2018-05-23 18:55:29+02:00,fba0bd0d1eb06f7e81371bf66a278f13f6671139,https://github.com/aleju/imgaug/commit/fba0bd0d1eb06f7e81371bf66a278f13f6671139,Fix tuple being accepted as list,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
372,aleju,kontakt@ajung.name,2018-05-23 18:56:06+02:00,431decbcd5066e172b15a3f155c3e001d32d703b,https://github.com/aleju/imgaug/commit/431decbcd5066e172b15a3f155c3e001d32d703b,Add test for iap.handle_discrete_param(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.DiscreteUniform)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.DiscreteUniform)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.DiscreteUniform)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.DiscreteUniform)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.DiscreteUniform)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception == True']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
373,aleju,kontakt@ajung.name,2018-05-23 19:09:25+02:00,87e4f4cf60bbf6da6f9ac7499a09080fa7cbfc71,https://github.com/aleju/imgaug/commit/87e4f4cf60bbf6da6f9ac7499a09080fa7cbfc71,Fix iap.force_np_float_dtype() converting all dtypes to float64,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
374,aleju,kontakt@ajung.name,2018-05-23 19:10:23+02:00,2f31e7f686a7ec1f315a33fe0a17b97bbd906bce,https://github.com/aleju/imgaug/commit/2f31e7f686a7ec1f315a33fe0a17b97bbd906bce,Add test for iap.force_np_float_dtype(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['iap.force_np_float_dtype(np.zeros((1,), dtype=dtype_in)).dtype == dtype_out,\\']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
375,aleju,kontakt@ajung.name,2018-05-23 19:20:01+02:00,56eab3dfe2a0ff5d3a9763d94d222ef71949a7a4,https://github.com/aleju/imgaug/commit/56eab3dfe2a0ff5d3a9763d94d222ef71949a7a4,Fix iap.both_np_float_if_one_is_float() always converting to float64,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
376,aleju,kontakt@ajung.name,2018-05-23 19:20:38+02:00,ea6b4e3c23643059c6dfdbf5b34f0a24c2b81b73,https://github.com/aleju/imgaug/commit/ea6b4e3c23643059c6dfdbf5b34f0a24c2b81b73,Add test for iap.both_np_float_if_one_is_float(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['a2.dtype.type == np.float16, a2.dtype.type', 'b2.dtype.type == np.float32, b2.dtype.type', 'a2.dtype.type == np.float16, a2.dtype.type', 'b2.dtype.type == np.float64, b2.dtype.type', 'a2.dtype.type == np.float64, a2.dtype.type', 'b2.dtype.type == np.float16, b2.dtype.type', 'a2.dtype.type == np.float64, a2.dtype.type', 'b2.dtype.type == np.float64, b2.dtype.type']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
377,aleju,kontakt@ajung.name,2018-05-23 19:55:42+02:00,ae7973b2ea84afd454fe3381c6cb8c20d61aa67b,https://github.com/aleju/imgaug/commit/ae7973b2ea84afd454fe3381c6cb8c20d61aa67b,Add tests for parameter to string conversion,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
378,aleju,kontakt@ajung.name,2018-05-24 18:46:51+02:00,46811248abc7bbcedb2a3c55f4ec9c2b21176e44,https://github.com/aleju/imgaug/commit/46811248abc7bbcedb2a3c55f4ec9c2b21176e44,Improve tests for Affine,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'isinstance(aug.rotate, iap.Uniform)', 'isinstance(aug.rotate.a, iap.Deterministic)', 'aug.rotate.a.value == 10', 'isinstance(aug.rotate.b, iap.Deterministic)', 'aug.rotate.b.value == 20', 'got_exception', 'isinstance(aug.shear, iap.Uniform)', 'isinstance(aug.shear.a, iap.Deterministic)', 'aug.shear.a.value == 10', 'isinstance(aug.shear.b, iap.Deterministic)', 'aug.shear.b.value == 20', 'got_exception', 'isinstance(aug.cval, iap.Uniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 0', 'aug.cval.b.value == 255', 'got_exception', 'isinstance(aug.mode, iap.Choice)', 'isinstance(aug.mode, iap.Deterministic)', 'aug.mode.value == ', 'isinstance(aug.mode, iap.Choice)', 'len(aug.mode.a) == 2 and  in aug.mode.a', 'isinstance(aug.mode, iap.Choice)', 'len(aug.mode.a) == 2 and  in aug.mode.a', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
379,aleju,kontakt@ajung.name,2018-05-26 10:45:44+02:00,3b4fa0a0c87d7d56b99ccce4e49e82aacd410c5f,https://github.com/aleju/imgaug/commit/3b4fa0a0c87d7d56b99ccce4e49e82aacd410c5f,Improve test for Add,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['0 in uq', '1 in uq', 'len(uq) == 2', '150 < seen[0] < 250', '150 < seen[1] < 250']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
380,aleju,kontakt@ajung.name,2018-05-26 10:51:32+02:00,52538edd80c0f4935923553679e35e35baa98809,https://github.com/aleju/imgaug/commit/52538edd80c0f4935923553679e35e35baa98809,Fix get_parameters() in Add,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
381,aleju,kontakt@ajung.name,2018-05-26 10:51:49+02:00,87b018fd28a10998c0d4bd5240913e26b7b1912c,https://github.com/aleju/imgaug/commit/87b018fd28a10998c0d4bd5240913e26b7b1912c,Improve tests for Add,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['got_exception', 'got_exception', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'params[0].value == 1', 'params[1].value == 0']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
382,aleju,kontakt@ajung.name,2018-05-26 10:56:53+02:00,bdfefcfb7d839550885e8777ce4b398f52409644,https://github.com/aleju/imgaug/commit/bdfefcfb7d839550885e8777ce4b398f52409644,Fix get_parameters() in AddElementwise,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
383,aleju,kontakt@ajung.name,2018-05-26 10:57:14+02:00,99c6e1d99cdd3f1194395d50057e743404544c96,https://github.com/aleju/imgaug/commit/99c6e1d99cdd3f1194395d50057e743404544c96,Improve test for AddElementwise,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['all([(value in values) for value in [0, 1, 2, 3]])', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'params[0].value == 1', 'params[1].value == 0']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
384,aleju,kontakt@ajung.name,2018-05-26 11:09:17+02:00,db6fc022ac721277dd8f6d058c39617aea9b1549,https://github.com/aleju/imgaug/commit/db6fc022ac721277dd8f6d058c39617aea9b1549,Improve test for AdditiveGaussianNoise,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['False', '75 < seen[0] < 125', '75 < seen[1] < 125', 'seen[2] <= 5', '75 < seen[0] < 125', '75 < seen[1] < 125', 'got_exception', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
385,aleju,kontakt@ajung.name,2018-05-26 11:15:15+02:00,dd09e6deb982d1edaed2d63faa8cf81c9d955bc8,https://github.com/aleju/imgaug/commit/dd09e6deb982d1edaed2d63faa8cf81c9d955bc8,Fix get_parameters() in Multiply,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
386,aleju,kontakt@ajung.name,2018-05-26 11:17:51+02:00,6f8427e1602ccc91ed71aca9d8f291038de83aab,https://github.com/aleju/imgaug/commit/6f8427e1602ccc91ed71aca9d8f291038de83aab,Improve test for Multiply,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['0 in uq', '2 in uq', 'len(uq) == 2', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'params[0].value == 1', 'params[1].value == 0']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
387,aleju,kontakt@ajung.name,2018-05-26 11:23:46+02:00,aec6fd11bdfd437d6581bb976af7166916d0d8f3,https://github.com/aleju/imgaug/commit/aec6fd11bdfd437d6581bb976af7166916d0d8f3,Improve test for MultiplyElementwise,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['all([(value in values) for value in [0, 1, 2, 3]])', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'params[0].value == 1', 'params[1].value == 0']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
388,aleju,kontakt@ajung.name,2018-05-26 11:38:07+02:00,5403fc0f5604a75f48a3430762279f46bafcb230,https://github.com/aleju/imgaug/commit/5403fc0f5604a75f48a3430762279f46bafcb230,Improve documentation of Dropout,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
389,aleju,kontakt@ajung.name,2018-05-26 11:39:21+02:00,a0910d4115938c861cdae84156a9070c295fcb34,https://github.com/aleju/imgaug/commit/a0910d4115938c861cdae84156a9070c295fcb34,Improve test for Dropout,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['seen[2] <= 10', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
390,aleju,kontakt@ajung.name,2018-05-26 11:42:36+02:00,e6b070c62b4ef9d6ed53cf9fd129740f063c6bf6,https://github.com/aleju/imgaug/commit/e6b070c62b4ef9d6ed53cf9fd129740f063c6bf6,Improve test for CoarseDropout,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['seen[2] <= 10', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
391,aleju,kontakt@ajung.name,2018-05-26 11:55:31+02:00,72c008f1ce06e59aa8b7c118750245fd2166ba54,https://github.com/aleju/imgaug/commit/72c008f1ce06e59aa8b7c118750245fd2166ba54,Fix get_parameters() in ReplaceElementwise,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
392,aleju,kontakt@ajung.name,2018-05-26 12:01:01+02:00,7b3cbeb29ac3dac66f3ec93035f8113656572936,https://github.com/aleju/imgaug/commit/7b3cbeb29ac3dac66f3ec93035f8113656572936,Fix missing Binomial in ReplaceElementwise mask as list,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
393,aleju,kontakt@ajung.name,2018-05-26 12:02:01+02:00,9068bdc416f8105f6f7e42b837e755c3b4b8b9c7,https://github.com/aleju/imgaug/commit/9068bdc416f8105f6f7e42b837e755c3b4b8b9c7,Improve test for ReplaceElementwise,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['seen[2] <= 10', '150 < seen[0] < 250', '150 < seen[1] < 250', 'all([(value in values) for value in [0, 1, 2, 3]])', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[1], iap.Deterministic)', 'isinstance(params[2], iap.Deterministic)', 'params[0].p >= 1 - 1e-8', 'params[1].value == 2', 'params[2].value == 0']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
394,aleju,kontakt@ajung.name,2018-05-26 13:06:09+02:00,391abcef8de760a43cdc21714d0daf210ed96eaf,https://github.com/aleju/imgaug/commit/391abcef8de760a43cdc21714d0daf210ed96eaf,Add test for SaltAndPepper,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['0.4 < p < 0.6', 'nb_pepper > 200', 'nb_salt > 200']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
395,aleju,kontakt@ajung.name,2018-05-26 13:42:37+02:00,73653ef94ca11a4832ab113b1035c35321877228,https://github.com/aleju/imgaug/commit/73653ef94ca11a4832ab113b1035c35321877228,Fix CoarseSaltAndPepper missing Binomial if p given as list,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
396,aleju,kontakt@ajung.name,2018-05-26 13:43:43+02:00,1525a40bff59f0968e9dcb211d2162410c1b8a22,https://github.com/aleju/imgaug/commit/1525a40bff59f0968e9dcb211d2162410c1b8a22,Add test for CoarseSaltAndPepper,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['0.4 < p < 0.6', '0.4 < np.mean(ps2) < 0.6', 'np.std(ps1)*1.5 < np.std(ps2)', 'seen[2] < 10', '75 < seen[0] < 125', '75 < seen[1] < 125', 'density - tolerance < density < density + tolerance', 'got_exception', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
397,aleju,kontakt@ajung.name,2018-05-26 13:49:05+02:00,93c93edce95cb3a3d37be2080a80a12d90558ed2,https://github.com/aleju/imgaug/commit/93c93edce95cb3a3d37be2080a80a12d90558ed2,Add test for Salt,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['0.4 < p < 0.6', 'np.all(observed >= 127)  # Salt() occasionally replaces with 127,', 'nb_pepper == 0', 'nb_salt > 200']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
398,aleju,kontakt@ajung.name,2018-05-26 13:52:41+02:00,eb6b5835ebb81adee3f9fe8182d509168d129175,https://github.com/aleju/imgaug/commit/eb6b5835ebb81adee3f9fe8182d509168d129175,Fix CoarseSalt missing Binomial if p given as list,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
399,aleju,kontakt@ajung.name,2018-05-26 13:53:11+02:00,97cd0f4302c9ec4aa274d2d7a96e5bb6449c9808,https://github.com/aleju/imgaug/commit/97cd0f4302c9ec4aa274d2d7a96e5bb6449c9808,Fix CoarsePepper missing Binomial if p given as list,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
400,aleju,kontakt@ajung.name,2018-05-26 13:54:26+02:00,1fd2180cc262996ff6aa7501d92666994004871d,https://github.com/aleju/imgaug/commit/1fd2180cc262996ff6aa7501d92666994004871d,Add test for CoarseSalt,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['0.4 < p < 0.6', '0.4 < np.mean(ps2) < 0.6', 'np.std(ps1)*1.5 < np.std(ps2)', 'seen[2] < 10', '75 < seen[0] < 125', '75 < seen[1] < 125', 'density - tolerance < density < density + tolerance', 'got_exception', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
401,aleju,kontakt@ajung.name,2018-05-26 13:59:40+02:00,908e44508a203a5e7b7b8eb53e3094fcae54692d,https://github.com/aleju/imgaug/commit/908e44508a203a5e7b7b8eb53e3094fcae54692d,"Add test for Pepper, fix test for SaltAndPepper, fix test for Salt",1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['0.4 < p < 0.6', 'np.all(observed <= 128)', 'nb_pepper > 200', 'nb_salt == 0']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
402,aleju,kontakt@ajung.name,2018-05-26 14:02:37+02:00,068d044eebecbb4bdd36844b98067397a6b76f63,https://github.com/aleju/imgaug/commit/068d044eebecbb4bdd36844b98067397a6b76f63,Add test for CoarsePepper,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['0.4 < p < 0.6', '0.4 < np.mean(ps2) < 0.6', 'np.std(ps1)*1.5 < np.std(ps2)', 'seen[2] < 10', '75 < seen[0] < 125', '75 < seen[1] < 125', 'density - tolerance < density < density + tolerance', 'got_exception', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
403,aleju,kontakt@ajung.name,2018-05-27 09:08:25+02:00,e29c89179cb4a5484e2ee7e4758d1afadc10e5ab,https://github.com/aleju/imgaug/commit/e29c89179cb4a5484e2ee7e4758d1afadc10e5ab,Improve doc of Invert,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
404,aleju,kontakt@ajung.name,2018-05-27 09:08:39+02:00,efe5154e8704636fd811196ea57950e1f66bcb7c,https://github.com/aleju/imgaug/commit/efe5154e8704636fd811196ea57950e1f66bcb7c,Improve tests for Invert,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['0.75 <= pinv <= 0.85', '0.75 <= pinv <= 0.85', 'len(np.unique(observed)) == 2', 'False', '300 - 75 < seen[0] < 300 + 75', '700 - 75 < seen[1] < 700 + 75', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'params[0].p.value == 1', 'params[1].value == 0', 'params[2] == 10', 'params[3] == 20']",[],[],[],[],[],[],[],[],[],[],[],[],['0.4 <= pinv <= 0.6'],[],[],[],[],[],[],[],[],[],[],[],[]
405,aleju,kontakt@ajung.name,2018-05-27 09:18:00+02:00,0f70e195bc3e6b87c23219fded5dfa691ff222d9,https://github.com/aleju/imgaug/commit/0f70e195bc3e6b87c23219fded5dfa691ff222d9,Fix get_parameters() in Invert,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
406,aleju,kontakt@ajung.name,2018-05-27 09:19:09+02:00,0d0346116fd7bacc9530b998e9d2c8812beca014,https://github.com/aleju/imgaug/commit/0d0346116fd7bacc9530b998e9d2c8812beca014,Improve test for Invert,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(uq) > 5', '300 - 75 < seen[0] < 300 + 75', '700 - 75 < seen[1] < 700 + 75', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'params[0].value == 1', 'params[1].value == 0']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
407,aleju,kontakt@ajung.name,2018-05-27 09:40:55+02:00,07fa122e9126b1ec042e3b188286cd68adbe4c82,https://github.com/aleju/imgaug/commit/07fa122e9126b1ec042e3b188286cd68adbe4c82,Fix get_parameters() in Superpixels; Improve doc of Superpixels,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
408,aleju,kontakt@ajung.name,2018-05-27 09:41:19+02:00,8735a0587d7f0ace959d29a3a73ce8b5af2513eb,https://github.com/aleju/imgaug/commit/8735a0587d7f0ace959d29a3a73ce8b5af2513eb,Improve test for Superpixels,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['_array_equals_tolerant(observed, expected, 2)', 'np.allclose(observed, base_img) or _array_equals_tolerant(observed, base_img_superpixels, 2)', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'params[0].p.value == 1', 'params[1].value == 2', 'params[2] == 100', 'params[3] == ']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
409,aleju,kontakt@ajung.name,2018-05-27 09:47:53+02:00,a5d90f3804ed6f3edcaa4c485fcd9616e7c809c9,https://github.com/aleju/imgaug/commit/a5d90f3804ed6f3edcaa4c485fcd9616e7c809c9,Improve test for Fliplr,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['False', '700 - 75 < seen[0] < 700 + 75', '300 - 75 < seen[1] < 300 + 75', 'got_exception', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', 'params[0].p.value == 1']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
410,aleju,kontakt@ajung.name,2018-05-27 09:49:29+02:00,897e171fc0aa858d8a25c46c9884723b11d27742,https://github.com/aleju/imgaug/commit/897e171fc0aa858d8a25c46c9884723b11d27742,Improve test for Flipud,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['False', '700 - 75 < seen[0] < 700 + 75', '300 - 75 < seen[1] < 300 + 75', 'got_exception', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', 'params[0].p.value == 1']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
411,aleju,kontakt@ajung.name,2018-05-27 10:22:05+02:00,c83ff1614f6cb25a813c3b31985ea98a5b423a8b,https://github.com/aleju/imgaug/commit/c83ff1614f6cb25a813c3b31985ea98a5b423a8b,Improve test for Affine,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug.scale, iap.Uniform)', 'isinstance(aug.scale.a, iap.Deterministic)', 'isinstance(aug.scale.b, iap.Deterministic)', '0.7 - 1e-8 < aug.scale.a.value < 0.7 + 1e-8', '0.9 - 1e-8 < aug.scale.b.value < 0.9 + 1e-8', 'isinstance(aug.translate, iap.Uniform)', 'isinstance(aug.translate.a, iap.Deterministic)', 'isinstance(aug.translate.b, iap.Deterministic)', '0.7 - 1e-8 < aug.translate.a.value < 0.7 + 1e-8', '0.9 - 1e-8 < aug.translate.b.value < 0.9 + 1e-8', 'isinstance(aug.translate, iap.DiscreteUniform)', 'isinstance(aug.translate.a, iap.Deterministic)', 'isinstance(aug.translate.b, iap.Deterministic)', 'aug.translate.a.value == 1', 'aug.translate.b.value == 10', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 1', 'aug.cval.b.value == 5', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Deterministic)  # scale', 'isinstance(params[1], iap.Deterministic)  # translate', 'isinstance(params[2], iap.Deterministic)  # rotate', 'isinstance(params[3], iap.Deterministic)  # shear', 'params[0].value == 1  # scale', 'params[1].value == 2  # translate', 'params[2].value == 3  # rotate', 'params[3].value == 4  # shear', 'params[4].value == 1  # order', 'params[5].value == 0  # cval', 'params[6].value ==   # mode', 'params[7] ==   # backend']",[],[],[],[],[],[],[],[],[],[],[],[],"['got_exception', 'got_exception', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[]
412,aleju,kontakt@ajung.name,2018-05-27 10:33:13+02:00,8009bb2220e647ca2d8b40bc1b61cdd727acae67,https://github.com/aleju/imgaug/commit/8009bb2220e647ca2d8b40bc1b61cdd727acae67,Fix get_parameters() in AffineCv2; Improve doc of AffineCv2,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
413,aleju,kontakt@ajung.name,2018-05-27 10:45:46+02:00,ce99f4a0851643a26f5b5c5bf6d59ea7322a9e9a,https://github.com/aleju/imgaug/commit/ce99f4a0851643a26f5b5c5bf6d59ea7322a9e9a,Fix dropped channels in AffineCv2,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
414,aleju,kontakt@ajung.name,2018-05-27 10:46:01+02:00,3ebbc387c99995f7af4fc5df0bba3b9ce16bf843,https://github.com/aleju/imgaug/commit/3ebbc387c99995f7af4fc5df0bba3b9ce16bf843,Add test for AffineCv2,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,228,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'array_equal_lists(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y > 2', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y > 2', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y == 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y == 2', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y == 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y == 2', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0].keypoints[0].x == 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x == 2', 'observed[0].keypoints[2].y > 2', 'observed[0].keypoints[0].x == 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x == 2', 'observed[0].keypoints[2].y > 2', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'nb_changed_aug >= int(nb_iterations * 0.8)', 'nb_changed_aug_det == 0', 'isinstance(aug.scale, iap.Uniform)', 'isinstance(aug.scale.a, iap.Deterministic)', 'isinstance(aug.scale.b, iap.Deterministic)', '0.7 - 1e-8 < aug.scale.a.value < 0.7 + 1e-8', '0.9 - 1e-8 < aug.scale.b.value < 0.9 + 1e-8', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'len(observed_aug[0].nonzero()[0]) == 1', 'len(observed_aug_det[0].nonzero()[0]) == 1', 'nb_changed_aug >= int(nb_iterations * 0.7)', 'nb_changed_aug_det == 0', '(centers_aug > int(nb_iterations * (1/9 * 0.6))).all()', '(centers_aug < int(nb_iterations * (1/9 * 1.4))).all()', 'isinstance(aug.translate, iap.Uniform)', 'isinstance(aug.translate.a, iap.Deterministic)', 'isinstance(aug.translate.b, iap.Deterministic)', '0.7 - 1e-8 < aug.translate.a.value < 0.7 + 1e-8', '0.9 - 1e-8 < aug.translate.b.value < 0.9 + 1e-8', 'isinstance(aug.translate, iap.DiscreteUniform)', 'isinstance(aug.translate.a, iap.Deterministic)', 'isinstance(aug.translate.b, iap.Deterministic)', 'aug.translate.a.value == 1', 'aug.translate.b.value == 10', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'isinstance(aug.rotate, iap.Uniform)', 'isinstance(aug.rotate.a, iap.Deterministic)', 'aug.rotate.a.value == 10', 'isinstance(aug.rotate.b, iap.Deterministic)', 'aug.rotate.b.value == 20', 'nb_changed_aug >= int(nb_iterations * 0.9)', 'nb_changed_aug_det == 0', 'pixels_sums_aug[1, 1] > (nb_iterations * 0.98)', 'pixels_sums_aug[1, 1] < (nb_iterations * 1.02)', '(pixels_sums_aug[outer_pixels] > int(nb_iterations * (2/8 * 0.4))).all()', '(pixels_sums_aug[outer_pixels] < int(nb_iterations * (2/8 * 2.0))).all()', 'isinstance(aug.shear, iap.Uniform)', 'isinstance(aug.shear.a, iap.Deterministic)', 'aug.shear.a.value == 10', 'isinstance(aug.shear.b, iap.Deterministic)', 'aug.shear.b.value == 20', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', 'nb_changed_aug >= int(nb_iterations * 0.9)', 'nb_changed_aug_det == 0', 'pixels_sums_aug[1, 1] > (nb_iterations * 0.98)', 'pixels_sums_aug[1, 1] < (nb_iterations * 1.02)', 'len(set(averages)) > 200', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 0', 'aug.cval.b.value == 255', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 1', 'aug.cval.b.value == 5', 'isinstance(aug.mode, iap.Choice)', 'isinstance(aug.mode, iap.Deterministic)', 'aug.mode.value == ', 'isinstance(aug.mode, iap.Choice)', 'len(aug.mode.a) == 2 and  in aug.mode.a', 'isinstance(aug.mode, iap.Choice)', 'len(aug.mode.a) == 2 and  in aug.mode.a', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Deterministic)  # scale', 'isinstance(params[1], iap.Deterministic)  # translate', 'isinstance(params[2], iap.Deterministic)  # rotate', 'isinstance(params[3], iap.Deterministic)  # shear', 'params[0].value == 1  # scale', 'params[1].value == 2  # translate', 'params[2].value == 3  # rotate', 'params[3].value == 4  # shear', 'params[4].value == 1  # order', 'params[5].value == 0  # cval', 'params[6].value ==   # mode']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
415,aleju,kontakt@ajung.name,2018-05-27 11:46:19+02:00,bcbcccfcce9f3c2102b0201ce6d353ee3e3bd3c7,https://github.com/aleju/imgaug/commit/bcbcccfcce9f3c2102b0201ce6d353ee3e3bd3c7,Add test for copy_dtypes_for_restore(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['all([dtype_i.type == dtype_j for dtype_i, dtype_j in zip(dtypes_copy, [np.uint8, np.float32, np.int32])])', 'isinstance(dtypes_copy, np.dtype)', 'dtypes_copy.type == dt', 'isinstance(dtypes_copy, list)', 'all([dtype_i.type == dt for dtype_i in dtypes_copy])']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
416,aleju,kontakt@ajung.name,2018-05-27 11:51:06+02:00,43d401169b540385a445a249b3d8dee37ed109e0,https://github.com/aleju/imgaug/commit/43d401169b540385a445a249b3d8dee37ed109e0,Add restore_augmented_image_dtype(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
417,aleju,kontakt@ajung.name,2018-05-27 12:04:03+02:00,fb2c47237596a2304cba1b41d9f8219f15bcf42c,https://github.com/aleju/imgaug/commit/fb2c47237596a2304cba1b41d9f8219f15bcf42c,Add tests for dtype restoring,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_result.dtype.type == np.int32', 'image_result.dtype.type == np.int32', 'images.dtype.type == np.uint8', 'images_result.dtype.type == np.int32', 'all([image.dtype.type == np.uint8 for image in images])', 'all([image_result.dtype.type == np.int32 for image_result in images_result])', 'images.dtype.type == np.uint8', 'images_restored.dtype.type == np.int32', 'all([image.dtype.type == np.uint8 for image in images])', 'all([image_restored.dtype.type == np.int32 for image_restored in images_restored])']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
418,aleju,kontakt@ajung.name,2018-05-27 12:14:47+02:00,05533e56db0882f9a58df3e790acac78b8902f37,https://github.com/aleju/imgaug/commit/05533e56db0882f9a58df3e790acac78b8902f37,Add clip_augmented_image(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
419,aleju,kontakt@ajung.name,2018-05-27 12:16:08+02:00,59554a6f3c58244815edaccf9de465387eff2b7c,https://github.com/aleju/imgaug/commit/59554a6f3c58244815edaccf9de465387eff2b7c,Add tests for clipping of augmented images,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_clipped[0, 0] == 15', 'image_clipped[0, 1] == 20', 'image_clipped[0, 2] == 25', 'image_clipped[0, 0] == 15', 'image_clipped[0, 1] == 20', 'image_clipped[0, 2] == 25', 'np.all(images_clipped[:, 0, 0] == 15)', 'np.all(images_clipped[:, 0, 1] == 20)', 'np.all(images_clipped[:, 0, 2] == 25)', 'isinstance(images_clipped, list)', 'all([images_clipped[i][0, 0] == 15 for i in sm.xrange(len(images))])', 'all([images_clipped[i][0, 1] == 20 for i in sm.xrange(len(images))])', 'all([images_clipped[i][0, 2] == 25 for i in sm.xrange(len(images))])', 'np.all(images_clipped[:, 0, 0] == 15)', 'np.all(images_clipped[:, 0, 1] == 20)', 'np.all(images_clipped[:, 0, 2] == 25)', 'isinstance(images_clipped, list)', 'all([images_clipped[i][0, 0] == 15 for i in sm.xrange(len(images))])', 'all([images_clipped[i][0, 1] == 20 for i in sm.xrange(len(images))])', 'all([images_clipped[i][0, 2] == 25 for i in sm.xrange(len(images))])']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
420,aleju,kontakt@ajung.name,2018-05-27 12:19:09+02:00,c47781325b279add9e6a8b18896435d24586b9f9,https://github.com/aleju/imgaug/commit/c47781325b279add9e6a8b18896435d24586b9f9,Rename test_(find|remove|hooks) to test_Augmenter_; reorder tests,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(augs) == 1', 'augs[0] == seq1', 'len(augs) == 1', 'augs[0] == seq2', 'len(augs) == 2', 'augs[0] == seq1', 'augs[1] == seq2', 'len(augs) == 2', 'augs[0] == seq1', 'augs[1] == seq2', 'len(augs) == 2', 'augs[0] == seq1', 'augs[1] == seq2', 'len(augs) == 1', 'augs[0] == seq2', 'len(augs) == 2', 'augs[0] == seq1', 'augs[1] == [seq2]', 'len(seqs) == 1', 'seqs[0].name == ', 'len(seqs) == 2', 'seqs[0].name == ', 'seqs[1].name == ', 'augs is not None', 'isinstance(augs, iaa.Noop)', 'augs is None', 'np.array_equal(images_aug[0], expected)', 'np.array_equal(images_aug[0], expected)', 'np.array_equal(images_aug[0], image)', 'np.array_equal(images_aug[0], image_lr)']",[],[],[],[],[],[],[],[],[],[],[],[],"['len(augs) == 1', 'augs[0] == seq1', 'len(augs) == 1', 'augs[0] == seq2', 'len(augs) == 2', 'augs[0] == seq1', 'augs[1] == seq2', 'len(augs) == 2', 'augs[0] == seq1', 'augs[1] == seq2', 'len(augs) == 2', 'augs[0] == seq1', 'augs[1] == seq2', 'len(augs) == 1', 'augs[0] == seq2', 'len(augs) == 2', 'augs[0] == seq1', 'augs[1] == [seq2]', 'len(seqs) == 1', 'seqs[0].name == ', 'len(seqs) == 2', 'seqs[0].name == ', 'seqs[1].name == ', 'augs is not None', 'isinstance(augs, iaa.Noop)', 'augs is None', 'np.array_equal(images_aug[0], expected)', 'np.array_equal(images_aug[0], expected)', 'np.array_equal(images_aug[0], image)', 'np.array_equal(images_aug[0], image_lr)']",[],[],[],[],[],[],[],[],[],[],[],[]
421,aleju,kontakt@ajung.name,2018-05-27 13:21:29+02:00,c73b3baed8024c04c1d987744294df1687f797a6,https://github.com/aleju/imgaug/commit/c73b3baed8024c04c1d987744294df1687f797a6,Fix handling of list of empty lists in Augmenter.augment_batches(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
422,aleju,kontakt@ajung.name,2018-05-27 13:41:19+02:00,8173fd7fea61d00625822a93cebf75cc41a2eb4e,https://github.com/aleju/imgaug/commit/8173fd7fea61d00625822a93cebf75cc41a2eb4e,Fix empty lists in Augmenter.get_children(flat=True),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
423,aleju,kontakt@ajung.name,2018-05-27 14:14:53+02:00,889456b8709ff9d2a4d5bc693f3822ac00175c47,https://github.com/aleju/imgaug/commit/889456b8709ff9d2a4d5bc693f3822ac00175c47,Add and improve tests for Augmenter,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['aug.random_state == ia.CURRENT_RANDOM_STATE', 'aug.random_state != ia.CURRENT_RANDOM_STATE', 'aug.random_state == rs', 'aug.random_state.randint(0, 10**6) == np.random.RandomState(123).randint(0, 10**6)', 'isinstance(batches_aug, list)', 'len(batches_aug) == 1', 'isinstance(batches_aug[0], list)', 'isinstance(batches_aug, list)', 'len(batches_aug) == 1', 'array_equal_lists(batches_aug, image_batches)', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'bb_aug.x1 == 1+1', 'bb_aug.y1 == 4', 'bb_aug.x2 == 2+1', 'bb_aug.y2 == 5', 'np.array_equal(grid, grid_expected)', 'np.array_equal(grid, grid_expected)', 'got_exception', 'np.array_equal(grid, grid_expected)', 'np.array_equal(grid, grid_expected)', 'np.array_equal(grid, grid_expected)', 'got_exception', '_same_rs(aug0.random_state, aug0_copy.random_state)', '_same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', 'not _same_rs(aug0.random_state, aug0_copy.random_state)', 'not _same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', '_same_rs(aug0.random_state, aug0_copy.random_state)', '_same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', 'not _same_rs(aug0.random_state, aug0_copy.random_state)', 'not _same_rs(aug0[0].random_state, aug0_copy[0].random_state)', 'not _same_rs(aug0[1].random_state, aug0_copy[1].random_state)', '_same_rs(aug0.random_state, aug0_copy.random_state)', '_same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', 'not _same_rs(aug0.random_state, aug0_copy.random_state)', 'not _same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', 'aug0_copy.random_state.randint(0, 10**6) == np.random.RandomState(np.random.RandomState(123).randint(0, 10**6)).randint(0, 10**6)', '_same_rs(aug0.random_state, aug0_copy.random_state)', '_same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', 'not _same_rs(aug0.random_state, aug0_copy.random_state)', 'not _same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', 'aug0_copy.random_state.randint(0, 10**6) == np.random.RandomState(np.random.RandomState(123).randint(0, 10**6)).randint(0, 10**6)', 'got_exception', 'isinstance(children, list)', 'children[0] == aug1', 'children[1] == aug2', 'children[2] == aug21', 'isinstance(children, list)', 'children[0] == aug1', 'children[1] == aug2', 'isinstance(children[2], list)', 'children[2][0] == aug21', 'aug.__repr__() == aug.__str__() == ', 'aug.__repr__() == aug.__str__() == ', 'np.array_equal(images_aug_source, images_aug_target)', 'target_cprs[0].deterministic == True', 'np.array_equal(images_aug_source, images_aug_target)', 'np.array_equal(images_aug_source, images_aug_target)', 'np.array_equal(images_aug_source1, images_aug_source2)', 'np.array_equal(images_aug_target1, images_aug_target2)', 'np.array_equal(images_aug_source1, images_aug_target1)', 'np.array_equal(images_aug_source2, images_aug_target2)', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(images_aug_source, images_aug_target)', 'np.array_equal(images_aug_source, images_aug_target)', 'np.array_equal(images_aug_source1, images_aug_source2)', 'np.array_equal(images_aug_target1, images_aug_target2)', 'np.array_equal(images_aug_source1, images_aug_target1)', 'np.array_equal(images_aug_source2, images_aug_target2)']",[],[],[],[],[],[],[],[],[],[],[],[]
424,aleju,kontakt@ajung.name,2018-05-27 14:18:36+02:00,f1474cab4b33db45942d1b650abdf13889ab579d,https://github.com/aleju/imgaug/commit/f1474cab4b33db45942d1b650abdf13889ab579d,Improve test for Augmenter.remove_augmenters(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['in str(exc)', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
425,aleju,kontakt@ajung.name,2018-05-27 14:42:20+02:00,97d26b7c0e76495ccf91464dd00b66ac71a38273,https://github.com/aleju/imgaug/commit/97d26b7c0e76495ccf91464dd00b66ac71a38273,Fix bad comparison in test for ReplaceElementwise,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(params[0].p, iap.Deterministic)', 'params[0].p.value >= 1 - 1e-8']",[],[],[],[],[],[],[],[],[],[],[],[],['params[0].p >= 1 - 1e-8'],[],[],[],[],[],[],[],[],[],[],[],[]
426,aleju,kontakt@ajung.name,2018-05-27 14:48:41+02:00,d1b65c9cce683f70d9c7d1241971f4790d105aa4,https://github.com/aleju/imgaug/commit/d1b65c9cce683f70d9c7d1241971f4790d105aa4,Fix numeric error in AffineCv2 for python3+,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
427,aleju,kontakt@ajung.name,2018-05-28 18:27:14+02:00,c6c095d8457223555375ea21dc6bb3d24947a5f1,https://github.com/aleju/imgaug/commit/c6c095d8457223555375ea21dc6bb3d24947a5f1,Fix bad error message,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
428,aleju,kontakt@ajung.name,2018-05-28 18:33:54+02:00,adc0b5e1ba114d4a1023dc8c7da68b0f30b3ebec,https://github.com/aleju/imgaug/commit/adc0b5e1ba114d4a1023dc8c7da68b0f30b3ebec,Make if/else statement fully testable,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
429,aleju,kontakt@ajung.name,2018-05-28 18:41:03+02:00,12a35a1b7c439a07288a35b6d8dbac876f7911eb,https://github.com/aleju/imgaug/commit/12a35a1b7c439a07288a35b6d8dbac876f7911eb,Improve tests for Augmenter.augment_batches(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(batches_aug, list)', 'len(batches_aug) == 1', 'array_equal_lists(batches_aug[0], image_batches[0])', 'in str(exc)', 'got_exception', 'in str(exc)', 'np.array_equal(image_aug, image) or np.array_equal(image_aug, image_flipped)', '(keypoint_aug.x == keypoint.x and keypoint_aug.y == keypoint.y) \\', '0.4*nb_iterations <= nb_flipped_images <= 0.6*nb_iterations', 'nb_flipped_images == nb_flipped_keypoints', 'np.array_equal(image_aug, image) or np.array_equal(image_aug, image_flipped)', '0.4*nb_iterations <= nb_flipped_images <= 0.6*nb_iterations', 'np.array_equal(image_aug, image) or np.array_equal(image_aug, image_flipped)', '0.4*nb_iterations <= nb_flipped_images <= 0.6*nb_iterations', '(keypoint_aug.x == keypoint.x and keypoint_aug.y == keypoint.y) \\', '0.4*nb_iterations <= nb_flipped_keypoints <= 0.6*nb_iterations']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(image_aug, image) or np.array_equal(image_aug, image_flipped)', '(keypoint_aug.x == keypoint.x and keypoint_aug.y == keypoint.y) \\', '0.4*nb_iterations <= nb_flipped_images <= 0.6*nb_iterations', 'nb_flipped_images == nb_flipped_keypoints', 'np.array_equal(image_aug, image) or np.array_equal(image_aug, image_flipped)', '0.4*nb_iterations <= nb_flipped_images <= 0.6*nb_iterations', 'np.array_equal(image_aug, image) or np.array_equal(image_aug, image_flipped)', '0.4*nb_iterations <= nb_flipped_images <= 0.6*nb_iterations', '(keypoint_aug.x == keypoint.x and keypoint_aug.y == keypoint.y) \\', '0.4*nb_iterations <= nb_flipped_keypoints <= 0.6*nb_iterations']",[],[],[],[],[],[],[],[],[],[],[],[]
430,aleju,kontakt@ajung.name,2018-05-28 18:56:49+02:00,05e81c90ae19444b10a635a4dbd473972e248039,https://github.com/aleju/imgaug/commit/05e81c90ae19444b10a635a4dbd473972e248039,Improve tests for Augmenter,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['got_exception', 'got_exception', 'got_exception', 'keypoints_equal(keypoints_aug, keypoints)']",[],[],[],[],[],[],[],[],[],[],[],[],"['got_exception', 'got_exception', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[]
431,aleju,kontakt@ajung.name,2018-05-28 19:10:44+02:00,93768df981942596ca52c9cfb0f8dc066ac1b130,https://github.com/aleju/imgaug/commit/93768df981942596ca52c9cfb0f8dc066ac1b130,Improve tests for Augmenter,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)', 'aug.random_state == ia.CURRENT_RANDOM_STATE', 'aug_localized.random_state != ia.CURRENT_RANDOM_STATE', 'in str(exc)', 'got_exception', 'len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
432,aleju,kontakt@ajung.name,2018-06-02 10:28:25+02:00,af8edc84188667494294309be8be9c6f111685b3,https://github.com/aleju/imgaug/commit/af8edc84188667494294309be8be9c6f111685b3,Remove unnecessary if/else,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
433,aleju,kontakt@ajung.name,2018-06-02 10:33:50+02:00,8848effc0e1c0014cba65ed45cb53c58b15b4097,https://github.com/aleju/imgaug/commit/8848effc0e1c0014cba65ed45cb53c58b15b4097,Test parameter operator exceptions,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
434,aleju,kontakt@ajung.name,2018-06-02 10:38:56+02:00,49f4000dd214b6576f174667856540c8a72f977f,https://github.com/aleju/imgaug/commit/49f4000dd214b6576f174667856540c8a72f977f,Add tests for parameter's __div__ and __rdiv__,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(param3, iap.Divide)', 'param3.other_param == param1', 'param3.val == param2', 'isinstance(param3, iap.Divide)', 'param3.other_param == param1', 'isinstance(param3.val, iap.Deterministic)', 'param3.val.value == 2', 'in str(exc)', 'got_exception', 'isinstance(param3, iap.Divide)', 'isinstance(param3.other_param, iap.Deterministic)', 'param3.other_param.value == 2', 'param3.val == param1', 'in str(exc)', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
435,aleju,kontakt@ajung.name,2018-06-02 10:57:38+02:00,885f45fb76203d31082026e6ed24f4058490e6ca,https://github.com/aleju/imgaug/commit/885f45fb76203d31082026e6ed24f4058490e6ca,Add floordiv to parameter operators,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
436,aleju,kontakt@ajung.name,2018-06-02 10:57:56+02:00,e95c609353a841e4b6308032acd09ed3b6dd60e8,https://github.com/aleju/imgaug/commit/e95c609353a841e4b6308032acd09ed3b6dd60e8,Add tests for floordiv,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(param3, iap.Discretize)', 'isinstance(param3.other_param, iap.Divide)', 'param3.other_param.other_param == param1_int', 'param3.other_param.val == param2_int', 'isinstance(param3, iap.Discretize)', 'isinstance(param3.other_param, iap.Divide)', 'param3.other_param.other_param == param1_int', 'isinstance(param3.other_param.val, iap.Deterministic)', 'param3.other_param.val.value == 2', 'isinstance(param3, iap.Discretize)', 'isinstance(param3.other_param, iap.Divide)', 'isinstance(param3.other_param.other_param, iap.Deterministic)', 'param3.other_param.other_param.value == 2', 'param3.other_param.val == param1_int', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
437,aleju,kontakt@ajung.name,2018-06-02 11:00:04+02:00,2b92b843f6db6826a92c0b808d3dde4f284fda6f,https://github.com/aleju/imgaug/commit/2b92b843f6db6826a92c0b808d3dde4f284fda6f,Rename tests for parameters,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
438,aleju,kontakt@ajung.name,2018-06-02 11:05:37+02:00,d40454826facf1ec18227a766f8848366d5779ea,https://github.com/aleju/imgaug/commit/d40454826facf1ec18227a766f8848366d5779ea,Add test copy() and deepcopy() in parameters,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(param_copy, iap.Discretize)', 'isinstance(param_copy.other_param, iap.Uniform)', 'param_copy.other_param.a[0] == param.other_param.a[0]', 'isinstance(param_copy, iap.Discretize)', 'isinstance(param_copy.other_param, iap.Uniform)', 'param_copy.other_param.a[0] != param.other_param.a[0]']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
439,aleju,kontakt@ajung.name,2018-06-02 11:09:34+02:00,0734b2809e36335bb46ab6048013c204a3ae719a,https://github.com/aleju/imgaug/commit/0734b2809e36335bb46ab6048013c204a3ae719a,Refactor iap.Poisson to use handle_continuous_param(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
440,aleju,kontakt@ajung.name,2018-06-02 11:12:06+02:00,64cedf7650bd27e9f3a7ed916a0132088f787bfb,https://github.com/aleju/imgaug/commit/64cedf7650bd27e9f3a7ed916a0132088f787bfb,Refactor iap.Normal to use handle_continuous_param(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
441,aleju,kontakt@ajung.name,2018-06-02 11:14:05+02:00,2f394337b49b626dc98b5f996e92f2b7aa4b81f7,https://github.com/aleju/imgaug/commit/2f394337b49b626dc98b5f996e92f2b7aa4b81f7,Add value range to scale in iap.Normal and iap.Laplace,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
442,aleju,kontakt@ajung.name,2018-06-02 11:18:15+02:00,358604ac0668478e63aa4b7f1e41030c1d61bd24,https://github.com/aleju/imgaug/commit/358604ac0668478e63aa4b7f1e41030c1d61bd24,Add asserts to iap.Choice constructor,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
443,aleju,kontakt@ajung.name,2018-06-02 11:21:34+02:00,10b3230a863a64925f6d8bf9d02e029638317632,https://github.com/aleju/imgaug/commit/10b3230a863a64925f6d8bf9d02e029638317632,Add tests for iap.Choice constructor asserts,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
444,aleju,kontakt@ajung.name,2018-06-02 11:28:45+02:00,f680b37fd2ded4401b37f07ea0ba172e899376ce,https://github.com/aleju/imgaug/commit/f680b37fd2ded4401b37f07ea0ba172e899376ce,Add test for Laplace with scale=0,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['np.all(np.logical_and('],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
445,aleju,kontakt@ajung.name,2018-06-02 11:37:39+02:00,602311ca856931967528d29ec47f94bf80c4182c,https://github.com/aleju/imgaug/commit/602311ca856931967528d29ec47f94bf80c4182c,Fix logical ORs to ANDs in tests,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(np.logical_and(0 - eps < samples, samples < 1.0 + eps))', 'np.all(np.logical_and(-1.0 - eps < samples, samples < 1.0 + eps))', 'np.all(np.logical_and(-1.0 - eps < samples, samples < 1.0 + eps))', 'np.all(np.logical_and(-1.0 - eps < samples, samples < 1.0 + eps))', 'np.all(np.logical_and(0 - eps <= samples, samples <= 1.0 + eps))', 'np.all(np.logical_and(0.5 - eps < samples, samples < 0.5 + eps))', '25 - 10 < sample < 25 + 10', 'np.all(np.logical_and(25 - 10 < samples, samples < 25 + 10))', 'np.all(np.logical_and(expected - eps < samples, samples < expected + eps))', 'np.all(np.logical_and(expected - eps < samples, samples < expected + eps))', 'np.all(np.logical_and(expected - eps < samples, samples < expected + eps))']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(np.logical_or(0 - eps < samples, samples < 1.0 + eps))', 'np.all(np.logical_or(-1.0 - eps < samples, samples < 1.0 + eps))', 'np.all(np.logical_or(-1.0 - eps < samples, samples < 1.0 + eps))', 'np.all(np.logical_or(0 - eps < samples, samples < 1.0 + eps))', 'np.all(np.logical_or(0 - eps <= samples, samples <= 1.0 + eps))', 'np.all(np.logical_or(0.5 - eps < samples, samples < 0.5 + eps))', '25 - 5 < sample < 25 + 5', 'np.all(np.logical_or(25 - 5 < samples, samples < 25 + 5))', 'np.all(np.logical_or(expected - eps < samples, samples < expected + eps))', 'np.all(np.logical_or(expected - eps < samples, samples < expected + eps))', 'np.all(np.logical_or(expected - eps < samples, samples < expected + eps))']",[],[],[],[],[],[],[],[],[],[],[],[]
446,aleju,kontakt@ajung.name,2018-06-02 11:40:14+02:00,39b9d018d4775322d940551a0625877d93256c8f,https://github.com/aleju/imgaug/commit/39b9d018d4775322d940551a0625877d93256c8f,Add test for iap.Uniform with a == b,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample.shape == tuple()', 'samples.shape == (10, 5)', '1.0 - eps < sample < 1.0 + eps', 'np.all(np.logical_and(1.0 - eps < samples, samples < 1.0 + eps))']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
447,aleju,kontakt@ajung.name,2018-06-02 11:42:47+02:00,32fe12807f1fda956b632aa66a45177f3e22e253,https://github.com/aleju/imgaug/commit/32fe12807f1fda956b632aa66a45177f3e22e253,Refactor iap.Beta to use handle_continuous_param(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
448,aleju,kontakt@ajung.name,2018-06-02 11:47:09+02:00,e84381bcb89d64336d879bbd67f9cd606c48ee24,https://github.com/aleju/imgaug/commit/e84381bcb89d64336d879bbd67f9cd606c48ee24,Add tests for iap.Deterministic,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', 'in str(exc)', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
449,aleju,kontakt@ajung.name,2018-06-02 11:50:07+02:00,7d1b356abeaad9aa8357d673d512209ed24a2e6d,https://github.com/aleju/imgaug/commit/7d1b356abeaad9aa8357d673d512209ed24a2e6d,Add tests for iap.Clip,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample == 0', 'sample == 0', 'sample == 0']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
450,aleju,kontakt@ajung.name,2018-06-02 11:55:08+02:00,53e31af034e577b72ed062bfe4fbafc17b7a101e,https://github.com/aleju/imgaug/commit/53e31af034e577b72ed062bfe4fbafc17b7a101e,Fix integer test in iap.Discretize,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
451,aleju,kontakt@ajung.name,2018-06-02 11:58:26+02:00,0bd5e92d5b09a535766211195e7d5f1e335ad857,https://github.com/aleju/imgaug/commit/0bd5e92d5b09a535766211195e7d5f1e335ad857,Add test for divide by zero fix in iap.Divide,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['sample == 1'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
452,aleju,kontakt@ajung.name,2018-06-02 12:11:34+02:00,a8dc8877c8e72aa07a3bca53af8fe77ca24b21f9,https://github.com/aleju/imgaug/commit/a8dc8877c8e72aa07a3bca53af8fe77ca24b21f9,Refactor Sigmoid threshold to handle_continuous_param(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
453,aleju,kontakt@ajung.name,2018-06-02 12:16:43+02:00,1cd92f0c25985e34be8548c0e86b6d32f4b2d7c3,https://github.com/aleju/imgaug/commit/1cd92f0c25985e34be8548c0e86b6d32f4b2d7c3,Add iap.handle_probability_param(); Refactor iap.Sigmoid.activated to handle_probability_param(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
454,aleju,kontakt@ajung.name,2018-06-02 12:23:57+02:00,99dee7bcb657acd2e127a037dfd46f9883deb25a,https://github.com/aleju/imgaug/commit/99dee7bcb657acd2e127a037dfd46f9883deb25a,Refactor iap.SimplexNoise size_px_max to handle_discrete_param(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
455,aleju,kontakt@ajung.name,2018-06-02 12:28:42+02:00,f162837747e57a73b9f36ac5b40afbc530fdcfdd,https://github.com/aleju/imgaug/commit/f162837747e57a73b9f36ac5b40afbc530fdcfdd,Refactor iap.FrequencyNoise to use handle_*_param(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
456,aleju,kontakt@ajung.name,2018-06-02 13:18:11+02:00,6c065a5d8eae37fd9f225c3abc59eaa9bf42bafb,https://github.com/aleju/imgaug/commit/6c065a5d8eae37fd9f225c3abc59eaa9bf42bafb,Remove unnecessary Exception,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
457,aleju,kontakt@ajung.name,2018-06-02 13:18:26+02:00,58a28278df1db5b3770020e31a024ba1c5d37e4f,https://github.com/aleju/imgaug/commit/58a28278df1db5b3770020e31a024ba1c5d37e4f,Add tests for ia.imresize_many_images(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.sum(diff) == 0', 'diff_fraction < 0.5', 'diff_fraction < 0.5']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
458,aleju,kontakt@ajung.name,2018-06-02 13:28:19+02:00,81f34dd94249adcba3766f9a21cd4d28be6fd2b2,https://github.com/aleju/imgaug/commit/81f34dd94249adcba3766f9a21cd4d28be6fd2b2,Add test for ia.imresize_single_image(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.sum(diff) == 0', 'diff_fraction < 0.5', 'diff_fraction < 0.5']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
459,aleju,kontakt@ajung.name,2018-06-02 13:36:50+02:00,90cb91e266ce155a3b49cdb07435581354505856,https://github.com/aleju/imgaug/commit/90cb91e266ce155a3b49cdb07435581354505856,Extend test for ia.draw_grid(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(grid, image)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
460,aleju,kontakt@ajung.name,2018-06-02 13:38:33+02:00,111a3ab9b004fa96c78ed4b4755714e260de873e,https://github.com/aleju/imgaug/commit/111a3ab9b004fa96c78ed4b4755714e260de873e,Rename test_KeypointOnImage() to test_KeypointsOnImage(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
461,aleju,kontakt@ajung.name,2018-06-02 13:45:24+02:00,c2e9582bd06669985884e949c96484baeb0ed037,https://github.com/aleju/imgaug/commit/c2e9582bd06669985884e949c96484baeb0ed037,Extend tests for ia.KeypointsOnImage,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['kpi.shape == (10, 20, 3)', 'kpi2.keypoints[0].x == 2', 'kpi2.keypoints[0].y == 4', 'kpi2.keypoints[1].x == 6', 'kpi2.keypoints[1].y == 8', 'in str(exc)', 'got_exception', 'kpi.__repr__() == kpi.__str__() == expected']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
462,aleju,kontakt@ajung.name,2018-06-02 14:03:01+02:00,1b77e1cd7772644f30226f842a612705cc4a07aa,https://github.com/aleju/imgaug/commit/1b77e1cd7772644f30226f842a612705cc4a07aa,Simplify BoundingBox.project() and .cut_out_of_image(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
463,aleju,kontakt@ajung.name,2018-06-02 14:15:45+02:00,1c28035588b0fd366c7786575d4aaa3b0a1d9bd6,https://github.com/aleju/imgaug/commit/1c28035588b0fd366c7786575d4aaa3b0a1d9bd6,Extend tests for ia.BoundingBox,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['bb.y1_int == 10', 'bb.x1_int == 20', 'bb.y2_int == 30', 'bb.x2_int == 40', '10 - eps < bb2.y1 < 10 + eps', '20 - eps < bb2.x1 < 20 + eps', '30 - eps < bb2.y2 < 30 + eps', '40 - eps < bb2.x2 < 40 + eps', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', 'bb_cut.y2 == 30', 'bb_cut.x2 == 40', 'np.sum(np.abs((image_bb - [150, 150, 150])[bb_mask])) < 0.1', 'np.sum(np.abs((image_bb - [100, 100, 100])[~bb_mask])) < 0.1', 'np.array_equal(image_sub, image[1:3, 1:3])', 'np.array_equal(image_sub, image_pad[0:4, 0:5, :])']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
464,aleju,kontakt@ajung.name,2018-06-03 11:13:34+02:00,f187b99ef78cdaf5f005020076cbea4278ffc11b,https://github.com/aleju/imgaug/commit/f187b99ef78cdaf5f005020076cbea4278ffc11b,Add tests for BoundingBoxesOnImage,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['bbsoi.height == 40', 'bbsoi.width == 50', 'bbsoi.height == 40', 'bbsoi.width == 50', 'bbsoi_projected.bounding_boxes[0].y1 == 10', 'bbsoi_projected.bounding_boxes[0].x1 == 20', 'bbsoi_projected.bounding_boxes[0].y2 == 30', 'bbsoi_projected.bounding_boxes[0].x2 == 40', 'bbsoi_projected.bounding_boxes[1].y1 == 15', 'bbsoi_projected.bounding_boxes[1].x1 == 25', 'bbsoi_projected.bounding_boxes[1].y2 == 35', 'bbsoi_projected.bounding_boxes[1].x2 == 45', 'bbsoi_projected.bounding_boxes[0].y1 == 10*2', 'bbsoi_projected.bounding_boxes[0].x1 == 20*2', 'bbsoi_projected.bounding_boxes[0].y2 == 30*2', 'bbsoi_projected.bounding_boxes[0].x2 == 40*2', 'bbsoi_projected.bounding_boxes[1].y1 == 15*2', 'bbsoi_projected.bounding_boxes[1].x1 == 25*2', 'bbsoi_projected.bounding_boxes[1].y2 == 35*2', 'bbsoi_projected.bounding_boxes[1].x2 == 45*2', 'bbsoi_projected.bounding_boxes[0].y1 == 10*2', 'bbsoi_projected.bounding_boxes[0].x1 == 20*2', 'bbsoi_projected.bounding_boxes[0].y2 == 30*2', 'bbsoi_projected.bounding_boxes[0].x2 == 40*2', 'bbsoi_projected.bounding_boxes[1].y1 == 15*2', 'bbsoi_projected.bounding_boxes[1].x1 == 25*2', 'bbsoi_projected.bounding_boxes[1].y2 == 35*2', 'bbsoi_projected.bounding_boxes[1].x2 == 45*2', 'np.all(image[10-1, 20-1, :] == [0, 0, 0])', 'np.all(image[10-1, 20-0, :] == [0, 0, 0])', 'np.all(image[10-0, 20-1, :] == [0, 0, 0])', 'np.all(image[10-0, 20-0, :] == [0, 255, 0])', 'np.all(image[10+1, 20+1, :] == [0, 0, 0])', 'np.all(image[30-1, 40-1, :] == [0, 0, 0])', 'np.all(image[30+1, 40-0, :] == [0, 0, 0])', 'np.all(image[30+0, 40+1, :] == [0, 0, 0])', 'np.all(image[30+0, 40+0, :] == [0, 255, 0])', 'np.all(image[30+1, 40+1, :] == [0, 0, 0])', 'np.all(image[15-1, 25-1, :] == [0, 0, 0])', 'np.all(image[15-1, 25-0, :] == [0, 0, 0])', 'np.all(image[15-0, 25-1, :] == [0, 0, 0])', 'np.all(image[15-0, 25-0, :] == [0, 255, 0])', 'np.all(image[15+1, 25+1, :] == [0, 0, 0])', 'np.all(image[35-1, 45-1, :] == [0, 0, 0])', 'np.all(image[35+1, 45+0, :] == [0, 0, 0])', 'np.all(image[35+0, 45+1, :] == [0, 0, 0])', 'np.all(image[35+0, 45+0, :] == [0, 255, 0])', 'np.all(image[35+1, 45+1, :] == [0, 0, 0])', 'len(bbsoi_slim.bounding_boxes) == 1', 'bbsoi_slim.bounding_boxes[0] == bb1', 'len(bbsoi_cut.bounding_boxes) == 2', 'bbsoi_cut.bounding_boxes[0].y1 == 10', 'bbsoi_cut.bounding_boxes[0].x1 == 20', 'bbsoi_cut.bounding_boxes[0].y2 == 30', 'bbsoi_cut.bounding_boxes[0].x2 == 40', 'bbsoi_cut.bounding_boxes[1].y1 == 15', 'bbsoi_cut.bounding_boxes[1].x1 == 25', 'bbsoi_cut.bounding_boxes[1].y2 == 35', 'bbsoi_cut.bounding_boxes[1].x2 == 50', 'len(bbsoi_cut.bounding_boxes) == 2', 'bbsoi_shifted.bounding_boxes[0].y1 == 10', 'bbsoi_shifted.bounding_boxes[0].x1 == 20 - 1', 'bbsoi_shifted.bounding_boxes[0].y2 == 30', 'bbsoi_shifted.bounding_boxes[0].x2 == 40 - 1', 'bbsoi_shifted.bounding_boxes[1].y1 == 15', 'bbsoi_shifted.bounding_boxes[1].x1 == 25 - 1', 'bbsoi_shifted.bounding_boxes[1].y2 == 35', 'bbsoi_shifted.bounding_boxes[1].x2 == 51 - 1', 'len(bbsoi.bounding_boxes) == 2', 'bbsoi_copy.bounding_boxes[0].y1 == 10', 'bbsoi_copy.bounding_boxes[0].x1 == 20', 'bbsoi_copy.bounding_boxes[0].y2 == 30', 'bbsoi_copy.bounding_boxes[0].x2 == 40', 'bbsoi_copy.bounding_boxes[1].y1 == 15', 'bbsoi_copy.bounding_boxes[1].x1 == 25', 'bbsoi_copy.bounding_boxes[1].y2 == 35', 'bbsoi_copy.bounding_boxes[1].x2 == 51', 'bbsoi_copy.bounding_boxes[0].y1 == 0', 'len(bbsoi.bounding_boxes) == 2', 'bbsoi_copy.bounding_boxes[0].y1 == 10', 'bbsoi_copy.bounding_boxes[0].x1 == 20', 'bbsoi_copy.bounding_boxes[0].y2 == 30', 'bbsoi_copy.bounding_boxes[0].x2 == 40', 'bbsoi_copy.bounding_boxes[1].y1 == 15', 'bbsoi_copy.bounding_boxes[1].x1 == 25', 'bbsoi_copy.bounding_boxes[1].y2 == 35', 'bbsoi_copy.bounding_boxes[1].x2 == 51', 'bbsoi_copy.bounding_boxes[0].y1 == 10', 'bbsoi.__repr__() == bbsoi.__str__() == expected']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
465,aleju,kontakt@ajung.name,2018-06-03 11:48:24+02:00,52e013aed0b4da5db33b0c64d2f798d86236f2c0,https://github.com/aleju/imgaug/commit/52e013aed0b4da5db33b0c64d2f798d86236f2c0,Fix BatchLoader hanging on exception; Add is_float_array(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
466,aleju,kontakt@ajung.name,2018-06-03 11:48:43+02:00,25c3013e6f044b831f9b93c8b484e28448fe387f,https://github.com/aleju/imgaug/commit/25c3013e6f044b831f9b93c8b484e28448fe387f,Add test for ia.BatchLoader,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(loaded) == 20*nb_workers', 'loader.all_finished', 'len(loaded) == 20*nb_workers', 'loader.all_finished']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
467,aleju,kontakt@ajung.name,2018-06-03 11:57:11+02:00,5fb8e5f126ee00bcb324629366a3f3724a473fc8,https://github.com/aleju/imgaug/commit/5fb8e5f126ee00bcb324629366a3f3724a473fc8,Add assert failure messages,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(loaded) == 20*nb_workers,  % (20*nb_workers, len(loaded), nb_workers)', 'len(loaded) == 20*nb_workers,  % (20*nb_workers, len(loaded), nb_workers)']",[],[],[],[],[],[],[],[],[],[],[],[],"['len(loaded) == 20*nb_workers', 'len(loaded) == 20*nb_workers']",[],[],[],[],[],[],[],[],[],[],[],[]
468,aleju,kontakt@ajung.name,2018-06-03 12:03:51+02:00,681dfb67be6af5bd354c017aca27335bf44c72d1,https://github.com/aleju/imgaug/commit/681dfb67be6af5bd354c017aca27335bf44c72d1,Improve assert failure messages,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(loaded) == 20*nb_workers,  % (20*nb_workers, len(loaded), nb_workers, counter)', 'len(loaded) == 20*nb_workers,  % (20*nb_workers, len(loaded), nb_workers, counter)']",[],[],[],[],[],[],[],[],[],[],[],[],"['len(loaded) == 20*nb_workers,  % (20*nb_workers, len(loaded), nb_workers)', 'len(loaded) == 20*nb_workers,  % (20*nb_workers, len(loaded), nb_workers)']",[],[],[],[],[],[],[],[],[],[],[],[]
469,aleju,kontakt@ajung.name,2018-06-03 12:18:44+02:00,830af4a8a8d50e4c8b9549b4ccabbc605d9ae6d4,https://github.com/aleju/imgaug/commit/830af4a8a8d50e4c8b9549b4ccabbc605d9ae6d4,Add queue.close to test_BatchLoader(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
470,aleju,kontakt@ajung.name,2018-06-03 12:27:32+02:00,18f2fe7d7c9933db52f09bc9f2049066a5eead01,https://github.com/aleju/imgaug/commit/18f2fe7d7c9933db52f09bc9f2049066a5eead01,Fix test_BatchLoader() on Travis,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
471,kshramt,kshramt@example.com,2018-06-07 23:03:02+09:00,98bed0b70f561ca86625cbb00753661c749cb1a3,https://github.com/aleju/imgaug/commit/98bed0b70f561ca86625cbb00753661c749cb1a3,"Add `absolute_scale` for `PiecewiseAffine`

Absolute jitter scale may be useful for augmentation of text images.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
472,aleju,kontakt@ajung.name,2018-06-04 19:51:45+02:00,95bc527abb6c1a367e2a7049c44cb65343a3e99b,https://github.com/aleju/imgaug/commit/95bc527abb6c1a367e2a7049c44cb65343a3e99b,"Change size parameter in Scale to work if only height or width is provided, not both",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
473,aleju,kontakt@ajung.name,2018-06-04 19:53:06+02:00,d1e5d062a7d1f0985b8f6083e5bd6bd38e690ea7,https://github.com/aleju/imgaug/commit/d1e5d062a7d1f0985b8f6083e5bd6bd38e690ea7,"Revert last commit, was already correct",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
474,aleju,kontakt@ajung.name,2018-06-04 21:47:57+02:00,6ee47f4f93941672f6c3a8c68f11640963bafa66,https://github.com/aleju/imgaug/commit/6ee47f4f93941672f6c3a8c68f11640963bafa66,Improve tests for Scale and BatchLoader,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(loaded) == 20*nb_workers,  % (20*nb_workers, len(loaded), nb_workers, counter)', 'loader.all_finished', 'len(loaded) == 20*nb_workers,  % (20*nb_workers, len(loaded), nb_workers, counter)', 'loader.all_finished', 'observed2d.shape == base_img2d.shape', 'observed3d.shape == base_img3d.shape', 'observed2d.shape == base_img2d.shape', 'observed3d.shape == base_img3d.shape', 'observed2d.shape == base_img2d.shape', 'observed3d.shape == base_img3d.shape', 'observed2d.shape == (11, base_img2d.shape[1])', 'observed3d.shape == (11, base_img3d.shape[1], 3)', 'observed2d.shape == (base_img2d.shape[0], 13)', 'observed3d.shape == (base_img3d.shape[0], 13, 3)', 'observed2d.shape in [(12, 12), (12, 14)]', 'observed3d.shape in [(12, 12, 3), (12, 14, 3)]', 'all(seen2d)', 'all(seen3d)', 'observed2d.shape in [(base_img2d.shape[0]*2, base_img2d.shape[1]*2), (base_img2d.shape[0]*4, base_img2d.shape[1]*4)]', 'observed3d.shape in [(base_img3d.shape[0]*2, base_img3d.shape[1]*2, 3), (base_img3d.shape[0]*4, base_img3d.shape[1]*4, 3)]', 'all(seen2d)', 'all(seen3d)', 'in str(exc)', 'got_exception', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'params[0].value == 1', 'params[1].value == ']",[],[],[],[],[],[],[],[],[],[],[],[],"['len(loaded) == 20*nb_workers,  % (20*nb_workers, len(loaded), nb_workers, counter)', 'loader.all_finished', 'len(loaded) == 20*nb_workers,  % (20*nb_workers, len(loaded), nb_workers, counter)', 'loader.all_finished']",[],[],[],[],[],[],[],[],[],[],[],[]
475,aleju,kontakt@ajung.name,2018-06-04 21:48:56+02:00,d549674a19765f703603d6cbe2869a8ecf14b428,https://github.com/aleju/imgaug/commit/d549674a19765f703603d6cbe2869a8ecf14b428,Fix deadlocks in BatchLoader,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
476,aleju,kontakt@ajung.name,2018-06-04 21:49:22+02:00,65bcb9a6aa0aa8b141171d0ba74899e48ef4edb2,https://github.com/aleju/imgaug/commit/65bcb9a6aa0aa8b141171d0ba74899e48ef4edb2,Improve error message in Scale,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
477,aleju,kontakt@ajung.name,2018-06-05 19:22:04+02:00,3d0d03e970157feb359971666a3d0f08e6a61144,https://github.com/aleju/imgaug/commit/3d0d03e970157feb359971666a3d0f08e6a61144,Add rounding to CropAndPad/Pad/Crop percentage to pixel conversion,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
478,aleju,kontakt@ajung.name,2018-06-05 20:52:56+02:00,e807f53397e9ed2a9583be9ec2132f62d842335b,https://github.com/aleju/imgaug/commit/e807f53397e9ed2a9583be9ec2132f62d842335b,Improve test for Pad,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['False', 'all([100 - 50 < v < 100 + 50 for v in seen])', 'isinstance(aug.pad_mode, iap.Choice)', 'len(aug.pad_mode.a) == len(expected)', 'all([v in aug.pad_mode.a for v in expected])', 'isinstance(aug.pad_mode, iap.Choice)', 'len(aug.pad_mode.a) == len(expected)', 'all([v in aug.pad_mode.a for v in expected])', 'in str(exc)', 'got_exception', 'observed[0, 0] == 0', 'observed[0, 1] == 100', 'False', 'all([100 - 50 < v < 100 + 50 for v in seen])', 'isinstance(aug.pad_cval, iap.Choice)', 'len(aug.pad_cval.a) == len(expected)', 'all([v in aug.pad_cval.a for v in expected])', 'False', 'all([100 - 50 < v < 100 + 50 for v in seen])', 'in str(exc)', 'got_exception', 'observed.shape == (4+4+4, 4+4+4)', 'np.sum(observed[4:-4, 4:-4]) == 4*4', 'np.sum(observed) == 4*4', 'observed.shape == (4+4+4, 4+4+4)', 'np.sum(observed[4:-4, 4:-4]) == 4*4', 'np.sum(observed) == 4*4', 'np.sum(observed) == 4*4', '(observed.shape[0] - 4) % 2 == 0', '(observed.shape[1] - 4) % 2 == 0', 'in str(exc)', 'got_exception', 'np.array_equal(observed, image_padded)', 'keypoints_equal(observed, keypoints_moved)', 'all([v > 30 for v in seen])', 'all([v > 30 for v in seen])', '250 - 50 < seen[0] < 250 + 50', 'seen[1] == 0', 'seen[2] == 0', 'seen[3] == 0', '250 - 50 < seen[4] < 250 + 50', '250 - 50 < seen[0] < 250 + 50', 'seen[1] == 0', 'seen[2] == 0', 'seen[3] == 0', '250 - 50 < seen[4] < 250 + 50']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
479,aleju,kontakt@ajung.name,2018-06-05 21:47:53+02:00,0928fe4fe946b4537eba80d9268457cfdba7ba1a,https://github.com/aleju/imgaug/commit/0928fe4fe946b4537eba80d9268457cfdba7ba1a,Improve test for Crop,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed.shape == (40, 40)', 'np.all(observed == image[5:-5, 5:-5])', 'observed.shape == (40, 40)', 'np.all(observed == image[5:-5, 5:-5])', '30 <= observed.shape[0] <= 40', '30 <= observed.shape[1] <= 40', 'in str(exc)', 'got_exception', 'np.array_equal(observed, image_cropped)', 'keypoints_equal(observed, keypoints_moved)', 'all([v > 30 for v in seen])', 'all([v > 30 for v in seen])', '250 - 50 < seen[0] < 250 + 50', 'seen[1] == 0', 'seen[2] == 0', 'seen[3] == 0', '250 - 50 < seen[4] < 250 + 50', '250 - 50 < seen[0] < 250 + 50', 'seen[1] == 0', 'seen[2] == 0', 'seen[3] == 0', '250 - 50 < seen[4] < 250 + 50']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
480,aleju,kontakt@ajung.name,2018-06-06 20:38:23+02:00,16f3e2ea52a324f507dc537f30c0805f9aa69f79,https://github.com/aleju/imgaug/commit/16f3e2ea52a324f507dc537f30c0805f9aa69f79,Improve test for Sharpen,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(observed, expected1) or np.allclose(observed, expected2)', 'in str(exc)', 'got_exception', 'np.allclose(observed, expected1) or np.allclose(observed, expected2)', 'in str(exc)', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
481,aleju,kontakt@ajung.name,2018-06-06 20:54:30+02:00,d3f06a161b7c4e036c4f62aafa15405ae28e7070,https://github.com/aleju/imgaug/commit/d3f06a161b7c4e036c4f62aafa15405ae28e7070,Add random_order to Sequential.get_parameters() output,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
482,aleju,kontakt@ajung.name,2018-06-06 21:10:31+02:00,f867afa107bff730e9ca8e32a80cd0642ee85410,https://github.com/aleju/imgaug/commit/f867afa107bff730e9ca8e32a80cd0642ee85410,Improve Sequential str/repr functions,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
483,aleju,kontakt@ajung.name,2018-06-06 21:10:48+02:00,9579a9cf2fdb8706e98427f362b1a340b55378a5,https://github.com/aleju/imgaug/commit/9579a9cf2fdb8706e98427f362b1a340b55378a5,Improve test for Sequential,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, image)', 'np.array_equal(observed, image)', 'np.array_equal(observed, np.fliplr(image))', 'np.array_equal(observed, np.fliplr(image))', 'np.array_equal(observed, np.fliplr(np.flipud(image)))', 'np.array_equal(observed, np.fliplr(image))', 'np.array_equal(observed, np.fliplr(np.flipud(image)))', 'aug.get_parameters() == [False]', 'aug.get_parameters() == [True]', 'aug.get_children_lists() == [aug]', 'aug.__str__() == aug.__repr__() == expected']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
484,aleju,kontakt@ajung.name,2018-06-06 21:52:46+02:00,5fd61741449ff7b2ae67d1e02a6b0101fb105f3b,https://github.com/aleju/imgaug/commit/5fd61741449ff7b2ae67d1e02a6b0101fb105f3b,Add checks that iterables only contain augmenters,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
485,aleju,kontakt@ajung.name,2018-06-07 19:59:09+02:00,fd3489bcfa5943ceec94cdf74367f464e9e688ea,https://github.com/aleju/imgaug/commit/fd3489bcfa5943ceec94cdf74367f464e9e688ea,Improve test for Sometimes,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['in str(exc)', 'got_exception', 'np.array_equal(observed, np.flipud(np.fliplr(image)))', 'found == 1', '200 - 50 < seen[0] < 200 + 50', '200 - 50 < seen[1] + seen[2] + seen[3] < 200 + 50', 'in str(exc)', 'got_exception', 'False', 'seen[0] > 10', 'seen[1] > 10', 'in str(exc)', 'got_exception', 'len(uq) == 1', 'False', 'seen[0] > 20', 'seen[1] > 20', 'in str(exc)', 'got_exception', 'np.array_equal(observed, image)', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'np.array_equal(observed1, image + 10)', 'np.array_equal(observed2, image)', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', '0.75 - 1e-8 < params[0].p.value < 0.75 + 1e-8', 'aug.__repr__() == aug.__str__() == expected', 'aug.__repr__() == aug.__str__() == expected']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
486,aleju,kontakt@ajung.name,2018-06-07 20:50:25+02:00,57e2bafd469d3673a68ee3ca2b098e5342e6af25,https://github.com/aleju/imgaug/commit/57e2bafd469d3673a68ee3ca2b098e5342e6af25,Evade double Sequentials in list-like augmenters; Fix some __str__ functions,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
487,aleju,kontakt@ajung.name,2018-06-07 20:50:47+02:00,9f25c33cc65a7b2e5e4deb6814c9df0d7fde3ecd,https://github.com/aleju/imgaug/commit/9f25c33cc65a7b2e5e4deb6814c9df0d7fde3ecd,"Improve test for WithChannels, Fix test for Sometimes",1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'len(params) == 1', 'params[0] == [1]', 'aug.get_children_lists() == [children]', 'aug.__repr__() == aug.__str__() == expected']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
488,aleju,kontakt@ajung.name,2018-06-07 20:52:42+02:00,c5610e9f00915a20b26445ede743dcc846d0392c,https://github.com/aleju/imgaug/commit/c5610e9f00915a20b26445ede743dcc846d0392c,Improve test for Noop,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['iaa.Noop().get_parameters() == []'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
489,aleju,kontakt@ajung.name,2018-06-07 21:00:25+02:00,8886f1c22061fb5958cea0b4ab1f5388a8675203,https://github.com/aleju/imgaug/commit/8886f1c22061fb5958cea0b4ab1f5388a8675203,Improve test for AssertShape,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['in str(exc)', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
490,aleju,kontakt@ajung.name,2018-06-09 08:29:12+02:00,d2343b78bebff18967f9c11a70922f1a4c078c19,https://github.com/aleju/imgaug/commit/d2343b78bebff18967f9c11a70922f1a4c078c19,Improve test for handle_continuous_param,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'in str(e)', 'got_exception == False', 'in str(e)', 'got_exception == True']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
491,aleju,kontakt@ajung.name,2018-06-09 08:35:12+02:00,138cf90f48b5d8818c737f63d4c913a62222268f,https://github.com/aleju/imgaug/commit/138cf90f48b5d8818c737f63d4c913a62222268f,Improve test for handle_discrete_param,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.DiscreteUniform)', 'in str(e)', 'got_exception == False', 'in str(e)', 'got_exception == False', 'in str(e)', 'got_exception == True']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
492,aleju,kontakt@ajung.name,2018-06-09 08:49:33+02:00,f6a6c4d9a97133575ddf92c88442d983c8fbb3f6,https://github.com/aleju/imgaug/commit/f6a6c4d9a97133575ddf92c88442d983c8fbb3f6,Make handling of 0.0 and 1.0 more explicit in handle_probability_param(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
493,aleju,kontakt@ajung.name,2018-06-09 08:51:41+02:00,d597186dac9649cc151fcdceb432dd6761c2d100,https://github.com/aleju/imgaug/commit/d597186dac9649cc151fcdceb432dd6761c2d100,Add test for handle_probability_param(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(p, iap.Deterministic)', 'p.value == int(val)', 'isinstance(p, iap.Binomial)', 'isinstance(p.p, iap.Deterministic)', 'val-1e-8 < p.p.value < val+1e-8', 'p == det', 'in str(exc)', 'got_exception', 'got_exception', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
494,aleju,kontakt@ajung.name,2018-06-09 11:42:56+02:00,2fb1d32185d0ddb4e470ace47bf99c778552f651,https://github.com/aleju/imgaug/commit/2fb1d32185d0ddb4e470ace47bf99c778552f651,Add test for StochasticParameter.draw_distribution_graph(),2,False,True,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['graph_img.ndim == 3', 'graph_img.shape[2] == 3', 'nb_white > 0.1 * nb_all', 'graph_img_title.ndim == 3', 'graph_img_title.shape[2] == 3', 'not np.array_equal(graph_img_title, graph_img)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
495,aleju,kontakt@ajung.name,2018-06-09 11:45:12+02:00,274f3f72ca310ef6be5929bc84576b2119890aca,https://github.com/aleju/imgaug/commit/274f3f72ca310ef6be5929bc84576b2119890aca,Improve test for DiscreteUniform,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample == 1', 'np.all(samples == 1)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
496,aleju,kontakt@ajung.name,2018-06-09 13:05:39+02:00,351866fe5f06cc607b2331ed178883146ea736e1,https://github.com/aleju/imgaug/commit/351866fe5f06cc607b2331ed178883146ea736e1,Preserve dtype in imresize_many_images(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
497,aleju,kontakt@ajung.name,2018-06-09 13:06:18+02:00,e3ab38214f687e6a8b837220df00103d2296f0ce,https://github.com/aleju/imgaug/commit/e3ab38214f687e6a8b837220df00103d2296f0ce,Improve behaviour of FromLowerResolution when interpolation!=nearest,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
498,aleju,kontakt@ajung.name,2018-06-09 13:07:22+02:00,14b6683bfa5621b015d6c4fce819c7b553f4983f,https://github.com/aleju/imgaug/commit/14b6683bfa5621b015d6c4fce819c7b553f4983f,Improve test for FromLowerResolution,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['samples_nhwc.shape == (1, 8, 8, 1)', 'len(uq) == 2 and (0 in uq or 1 in uq)', 'in str(exc)', 'got_exception', 'seen_components[0] < seen_components[1]', 'seen_pixels[0] / seen_components[0] > seen_pixels[1] / seen_components[1]', 'seen_components[0] < seen_components[1]', 'seen_pixels[0] / seen_components[0] > seen_pixels[1] / seen_components[1]', 'in str(exc)', 'got_exception', 'seen_components[0] < seen_components[1]', 'seen_pixels[0] / seen_components[0] > seen_pixels[1] / seen_components[1]', 'in str(exc)', 'got_exception', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', 'in str(exc)', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
499,aleju,kontakt@ajung.name,2018-06-09 14:38:53+02:00,79c59b5ae9fa0423ef410a2e561baca37f27fed9,https://github.com/aleju/imgaug/commit/79c59b5ae9fa0423ef410a2e561baca37f27fed9,Fix IterativeNoiseAggregator not recognizing lists for number of iterations,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
500,aleju,kontakt@ajung.name,2018-06-09 14:41:30+02:00,36031a108e0ab26da1920fb38ba14008e5a5582d,https://github.com/aleju/imgaug/commit/36031a108e0ab26da1920fb38ba14008e5a5582d,Improve test for IterativeNoiseAggregator,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['hist[1] > hist[0]', 'hist[1] > hist[2]', 'False', '300 - 50 < seen[0] < 300 + 50', '100 - 50 < seen[1] < 100 + 50', 'isinstance(param.aggregation_method, iap.Choice)', 'len(param.aggregation_method.a) == 3', '[v in param.aggregation_method.a for v in []]', 'isinstance(param.aggregation_method, iap.Deterministic)', 'param.aggregation_method.value == ', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
501,aleju,kontakt@ajung.name,2018-06-09 15:00:41+02:00,69875f70d6dbf7f5e4fbd07ac3b3eae43b13a189,https://github.com/aleju/imgaug/commit/69875f70d6dbf7f5e4fbd07ac3b3eae43b13a189,Add test for iap.draw_distribution_grid(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['np.average(diff) < 10'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
502,aleju,kontakt@ajung.name,2018-06-09 15:10:55+02:00,b3234afaf7237fb88116b4e421cfa587effa66a7,https://github.com/aleju/imgaug/commit/b3234afaf7237fb88116b4e421cfa587effa66a7,Fix matplotlib tests on Travis,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
503,aleju,kontakt@ajung.name,2018-06-10 10:28:14+02:00,c74932bb29b95b09ebfd3b6514a9010be97d4605,https://github.com/aleju/imgaug/commit/c74932bb29b95b09ebfd3b6514a9010be97d4605,Fix inconsistencies in get_children_lists(); Unify children handling,4,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
504,aleju,kontakt@ajung.name,2018-06-10 10:51:57+02:00,c702295a91304f863ccd6b8a1450b8ba7b743d26,https://github.com/aleju/imgaug/commit/c702295a91304f863ccd6b8a1450b8ba7b743d26,Fix is_float_array() using wrong parent class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
505,aleju,kontakt@ajung.name,2018-06-10 10:52:10+02:00,0578b56837dc023572990b4a6134c8bd64fd7be8,https://github.com/aleju/imgaug/commit/0578b56837dc023572990b4a6134c8bd64fd7be8,Add test for is_float_array(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['ia.is_float_array(value) == True', 'ia.is_float_array(value) == False']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
506,aleju,kontakt@ajung.name,2018-06-10 10:55:01+02:00,9733a7340acc5a182e0797668e29116705c34c60,https://github.com/aleju/imgaug/commit/9733a7340acc5a182e0797668e29116705c34c60,Cover missing test case in BoundingBox.extract_from_image(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(image_sub, image[1:3, 1:3])']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
507,aleju,kontakt@ajung.name,2018-06-10 12:03:50+02:00,a7c59425e304d201bb6d6004b3351a6316c9ec71,https://github.com/aleju/imgaug/commit/a7c59425e304d201bb6d6004b3351a6316c9ec71,Fix Alpha.get_parameters() to only return stoch. parameters,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
508,aleju,kontakt@ajung.name,2018-06-10 12:04:01+02:00,ebc228413f585eefc82465d0cf14f15e2b1a5dbe,https://github.com/aleju/imgaug/commit/ebc228413f585eefc82465d0cf14f15e2b1a5dbe,Improve test for Alpha,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['in str(exc)', 'got_exception', 'len(uq) > 1', 'np.max(observed) > 80', 'np.min(observed) < 20', 'len(uq) > 1', 'np.max(observed) > 80', 'np.min(observed) < 20', 'False', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', 'in str(exc)', 'got_exception', 'np.array_equal(observed, image)', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'False', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', 'keypoints_equal([observed], [kpsoi])', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', '0.65 - 1e-6 < params[0].value < 0.65 + 1e-6', 'params[1].value == 1', 'len(children_lsts) == 2', 'ia.is_iterable([lst for lst in children_lsts])', 'first in children_lsts[0]', 'second == children_lsts[1]']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
509,aleju,kontakt@ajung.name,2018-06-10 12:22:45+02:00,9612c9174ac287d5cb84eaeb17ebe5b0a752b0bf,https://github.com/aleju/imgaug/commit/9612c9174ac287d5cb84eaeb17ebe5b0a752b0bf,Fix missing range in AlphaElementwise; Add Fixme note to AlphaElementwise,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
510,aleju,kontakt@ajung.name,2018-06-10 12:22:59+02:00,a1cbe312bc16f4cc4752015be8df2cd1470f4e35,https://github.com/aleju/imgaug/commit/a1cbe312bc16f4cc4752015be8df2cd1470f4e35,Improve test for AlphaElementwise,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, image)', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'False', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', 'keypoints_equal([observed], [kpsoi])']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
511,aleju,kontakt@ajung.name,2018-06-10 12:25:00+02:00,e47f2361be513c83ea90fe27206c05b0c7a5d944,https://github.com/aleju/imgaug/commit/e47f2361be513c83ea90fe27206c05b0c7a5d944,Fix copy paste error in AlphaElementwise test,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
512,aleju,kontakt@ajung.name,2018-06-16 10:48:39+02:00,1aaa17e4ec9c87b53cb02ea333e2bc8e6074fc59,https://github.com/aleju/imgaug/commit/1aaa17e4ec9c87b53cb02ea333e2bc8e6074fc59,Improve parameter handling in ElasticTransformation,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
513,aleju,kontakt@ajung.name,2018-06-16 10:58:48+02:00,028ce987b4b32979ba63d5da9997617362a5cf61,https://github.com/aleju/imgaug/commit/028ce987b4b32979ba63d5da9997617362a5cf61,Add test for ElasticTransformation,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.sum(observed[mask]) < np.sum(img[mask])', 'np.sum(observed[~mask]) > np.sum(img[~mask])', 'np.sum(observed1[mask]) > np.sum(observed2[mask])', 'np.sum(observed1[~mask]) < np.sum(observed2[~mask])', 'observed1_std > observed2_std', 'seen[0] > 10', 'seen[1] > 10', 'isinstance(aug.alpha, iap.Uniform)', 'isinstance(aug.alpha.a, iap.Deterministic)', 'isinstance(aug.alpha.b, iap.Deterministic)', '1.0 - 1e-8 < aug.alpha.a.value < 1.0 + 1e-8', '2.0 - 1e-8 < aug.alpha.b.value < 2.0 + 1e-8', 'in str(exc)', 'got_exception', 'seen[0] > 10', 'seen[1] > 10', 'isinstance(aug.sigma, iap.Uniform)', 'isinstance(aug.sigma.a, iap.Deterministic)', 'isinstance(aug.sigma.b, iap.Deterministic)', '1.0 - 1e-8 < aug.sigma.a.value < 1.0 + 1e-8', '2.0 - 1e-8 < aug.sigma.b.value < 2.0 + 1e-8', 'in str(exc)', 'got_exception', 'isinstance(aug.order, iap.Choice)', 'all([order in aug.order.a for order in [0, 1, 2, 3, 4, 5]])', 'isinstance(aug.order, iap.Deterministic)', 'aug.order.value == 1', 'isinstance(aug.order, iap.Choice)', 'all([order in aug.order.a for order in [0, 1, 2]])', 'isinstance(aug.order, iap.Choice)', 'all([order in aug.order.a for order in [0, 1, 2, 3]])', 'in str(exc)', 'got_exception', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 0', 'aug.cval.b.value == 255', 'isinstance(aug.cval, iap.Deterministic)', 'aug.cval.value == 128', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 128', 'aug.cval.b.value == 255', 'isinstance(aug.cval, iap.Choice)', 'all([cval in aug.cval.a for cval in [16, 32, 64]])', 'isinstance(aug.cval, iap.Choice)', 'all([cval in aug.cval.a for cval in [16, 32, 64]])', 'np.sum(observed == 255) > 0', 'np.sum(observed == 255) == 0', 'in str(exc)', 'got_exception', 'isinstance(aug.mode, iap.Choice)', 'all([mode in aug.mode.a for mode in []])', 'isinstance(aug.mode, iap.Deterministic)', 'aug.mode.value == ', 'isinstance(aug.mode, iap.Choice)', 'all([mode in aug.mode.a for mode in []])', 'isinstance(aug.mode, iap.Choice)', 'all([mode in aug.mode.a for mode in []])', 'in str(exc)', 'got_exception', 'keypoints_equal([kpsoi], observed)', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'isinstance(params[2], iap.Deterministic)', 'isinstance(params[3], iap.Deterministic)', 'isinstance(params[4], iap.Deterministic)', '0.25 - 1e-8 < params[0].value < 0.25 + 1e-8', '1.0 - 1e-8 < params[1].value < 1.0 + 1e-8', 'params[2].value == 2', 'params[3].value == 10', 'params[4].value == ']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
514,aleju,kontakt@ajung.name,2018-06-16 13:31:01+02:00,fa8883d4ece02f9cb661e389c947a3108e216686,https://github.com/aleju/imgaug/commit/fa8883d4ece02f9cb661e389c947a3108e216686,Improve parameter handling in PerspectiveTransform,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
515,aleju,kontakt@ajung.name,2018-06-16 13:34:50+02:00,a8b001e2672aa904bdbab3232022198933522740,https://github.com/aleju/imgaug/commit/a8b001e2672aa904bdbab3232022198933522740,Fix get_parameters() in PerspectiveTransform,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
516,aleju,kontakt@ajung.name,2018-06-16 13:36:03+02:00,beabad25eb853a2960e86be0c60702b13621318c,https://github.com/aleju/imgaug/commit/beabad25eb853a2960e86be0c60702b13621318c,Add test for PerspectiveTransform,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['all([abs(s1-s2)<=1 for s1, s2 in zip(observed.shape, expected.shape)])', 'np.average(np.abs(observed.astype(np.int32) - expected.astype(np.int32))) < 30.0', 'observed.shape == img.shape', 'np.average(np.abs(observed.astype(np.int32) - expected.astype(np.int32))) < 30.0', 'observed_i.shape == imgs.shape[1:3]', 'np.average(np.abs(observed_i.astype(np.int32) - expected.astype(np.int32))) < 30.0', 'isinstance(aug.jitter.scale, iap.Uniform)', 'isinstance(aug.jitter.scale.a, iap.Deterministic)', 'isinstance(aug.jitter.scale.b, iap.Deterministic)', '0.1 - 1e-8 < aug.jitter.scale.a.value < 0.1 + 1e-8', '0.2 - 1e-8 < aug.jitter.scale.b.value < 0.2 + 1e-8', 'isinstance(aug.jitter.scale, iap.Choice)', 'len(aug.jitter.scale.a) == 3', '0.1 - 1e-8 < aug.jitter.scale.a[0] < 0.1 + 1e-8', '0.2 - 1e-8 < aug.jitter.scale.a[1] < 0.2 + 1e-8', '0.3 - 1e-8 < aug.jitter.scale.a[2] < 0.3 + 1e-8', 'isinstance(aug.jitter.scale, iap.Choice)', 'len(aug.jitter.scale.a) == 3', '0.1 - 1e-8 < aug.jitter.scale.a[0] < 0.1 + 1e-8', '0.2 - 1e-8 < aug.jitter.scale.a[1] < 0.2 + 1e-8', '0.3 - 1e-8 < aug.jitter.scale.a[2] < 0.3 + 1e-8', 'in str(exc)', 'got_exception', 'kp_expected.x - 1.5 < kp_observed.x < kp_expected.x + 1.5', 'kp_expected.y - 1.5 < kp_observed.y < kp_expected.y + 1.5', 'kp_expected.x - 1.5 < kp_observed.x < kp_expected.x + 1.5', 'kp_expected.y - 1.5 < kp_observed.y < kp_expected.y + 1.5', 'isinstance(params[0], iap.Normal)', 'isinstance(params[0].scale, iap.Deterministic)', '0.1 - 1e-8 < params[0].scale.value < 0.1 + 1e-8', 'params[1] == False']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
517,aleju,kontakt@ajung.name,2018-06-17 11:38:57+02:00,8fd18d57688e0e1583da2f4870b3b379645d6b0b,https://github.com/aleju/imgaug/commit/8fd18d57688e0e1583da2f4870b3b379645d6b0b,Improve parameter handling in PiecewiseAffine,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
518,aleju,kontakt@ajung.name,2018-06-17 11:50:08+02:00,9403a9e369f3770dcd0283804eba1198d372dec9,https://github.com/aleju/imgaug/commit/9403a9e369f3770dcd0283804eba1198d372dec9,Fix get_parameters() in PiecewiseAffine,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
519,aleju,kontakt@ajung.name,2018-06-17 15:38:11+02:00,faf2e7157df5ec4664d26ab8e17e097afa3994a2,https://github.com/aleju/imgaug/commit/faf2e7157df5ec4664d26ab8e17e097afa3994a2,Add test for PiecewiseAffine,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,117,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['100.0 < np.average(observed[mask]) < np.average(img[mask])', '75.0 > np.average(observed[~mask]) > np.average(img[~mask])', 'np.array_equal(observed, img)', 'np.average(observed1[~mask]) < np.average(observed2[~mask])', 'isinstance(aug.scale, iap.Choice)', '0.01 - 1e-8 < aug.scale.a[0] < 0.01 + 1e-8', '0.10 - 1e-8 < aug.scale.a[1] < 0.10 + 1e-8', 'seen[0] > 0', 'seen[1] > 0', 'isinstance(aug.jitter.scale, iap.Uniform)', 'isinstance(aug.jitter.scale.a, iap.Deterministic)', 'isinstance(aug.jitter.scale.b, iap.Deterministic)', '0.01 - 1e-8 < aug.jitter.scale.a.value < 0.01 + 1e-8', '0.10 - 1e-8 < aug.jitter.scale.b.value < 0.10 + 1e-8', 'isinstance(aug.jitter.scale, iap.Uniform)', 'isinstance(aug.jitter.scale.a, iap.Deterministic)', 'isinstance(aug.jitter.scale.b, iap.Deterministic)', '0.01 - 1e-8 < aug.jitter.scale.a.value < 0.01 + 1e-8', '0.10 - 1e-8 < aug.jitter.scale.b.value < 0.10 + 1e-8', 'in str(exc)', 'got_exception', 'std1 < std2', 'isinstance(aug.nb_rows, iap.Choice)', 'aug.nb_rows.a[0] == 4', 'aug.nb_rows.a[1] == 20', 'seen[0] > 0', 'seen[1] > 0', 'isinstance(aug.nb_rows, iap.DiscreteUniform)', 'isinstance(aug.nb_rows.a, iap.Deterministic)', 'isinstance(aug.nb_rows.b, iap.Deterministic)', 'aug.nb_rows.a.value == 4', 'aug.nb_rows.b.value == 20', 'isinstance(aug.nb_rows, iap.DiscreteUniform)', 'isinstance(aug.nb_rows.a, iap.Deterministic)', 'isinstance(aug.nb_rows.b, iap.Deterministic)', 'aug.nb_rows.a.value == 4', 'aug.nb_rows.b.value == 20', 'in str(exc)', 'got_exception', 'isinstance(aug.nb_cols, iap.Choice)', 'aug.nb_cols.a[0] == 4', 'aug.nb_cols.a[1] == 20', 'seen[0] > 0', 'seen[1] > 0', 'isinstance(aug.nb_cols, iap.DiscreteUniform)', 'isinstance(aug.nb_cols.a, iap.Deterministic)', 'isinstance(aug.nb_cols.b, iap.Deterministic)', 'aug.nb_cols.a.value == 4', 'aug.nb_cols.b.value == 20', 'isinstance(aug.nb_cols, iap.DiscreteUniform)', 'isinstance(aug.nb_cols.a, iap.Deterministic)', 'isinstance(aug.nb_cols.b, iap.Deterministic)', 'aug.nb_cols.a.value == 4', 'aug.nb_cols.b.value == 20', 'in str(exc)', 'got_exception', 'isinstance(aug.order, iap.Deterministic)', 'aug.order.value == 0', 'isinstance(aug.order, iap.Choice)', 'all([v in aug.order.a for v in [0, 1, 3]])', 'isinstance(aug.order, iap.Choice)', 'all([v in aug.order.a for v in [0, 1, 3]])', 'isinstance(aug.order, iap.Choice)', 'all([v in aug.order.a for v in [0, 1, 3, 4, 5]])', 'in str(exc)', 'got_exception', 'np.sum([observed[:, :] == [0, 0, 0]]) > 0', 'isinstance(aug.cval, iap.Choice)', 'aug.cval.a[0] == 0', 'aug.cval.a[1] == 10', 'seen[0] > 5', 'seen[1] > 5', 'seen[2] <= 4', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 0', 'aug.cval.b.value == 10', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 0', 'aug.cval.b.value == 10', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 0', 'aug.cval.b.value == 255', 'in str(exc)', 'got_exception', 'isinstance(aug.mode, iap.Deterministic)', 'aug.mode.value == ', 'isinstance(aug.mode, iap.Choice)', 'all([v in aug.mode.a for v in []])', 'isinstance(aug.mode, iap.Choice)', 'all([v in aug.mode.a for v in []])', 'isinstance(aug.mode, iap.Choice)', 'all([v in aug.mode.a for v in []])', 'in str(exc)', 'got_exception', 'not keypoints_equal([kpsoi], observed_kpsoi)', 'observed_img[int(kp.y), int(kp.x)] > 0', 'keypoints_equal([kpsoi], observed)', 'keypoints_equal([kpsoi], observed)', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'isinstance(params[2], iap.Deterministic)', 'isinstance(params[3], iap.Deterministic)', 'isinstance(params[4], iap.Deterministic)', 'isinstance(params[5], iap.Deterministic)', 'params[6] == False', '0.1 - 1e-8 < params[0].value < 0.1 + 1e-8', 'params[1].value == 8', 'params[2].value == 10', 'params[3].value == 1', 'params[4].value == 2', 'params[5].value == ']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
520,aleju,kontakt@ajung.name,2018-06-18 18:52:11+02:00,6b069826cd7617b44090a2ddd1642a11bbd06fb1,https://github.com/aleju/imgaug/commit/6b069826cd7617b44090a2ddd1642a11bbd06fb1,Add test for Emboss,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['_allclose(observed, expected)', '_allclose(observed, expected)', '_allclose(observed, expected.astype(np.uint8))', '_allclose(observed, expected)', '_allclose(observed, expected1) or np.allclose(observed, expected2)', 'in str(exc)', 'got_exception', '_allclose(observed, expected)', '_allclose(observed, expected)', '_allclose(observed, expected)', '_allclose(observed, expected1) or np.allclose(observed, expected2)', 'in str(exc)', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
521,aleju,kontakt@ajung.name,2018-06-19 17:17:32+02:00,ae7de1463dc0dc462f00608b9693915c3053936c,https://github.com/aleju/imgaug/commit/ae7de1463dc0dc462f00608b9693915c3053936c,Remove StochasticParameter option from Convolve,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
522,aleju,kontakt@ajung.name,2018-06-19 18:05:35+02:00,4ed4ecbf706f0b5e0f611dc9c746439d3d780e30,https://github.com/aleju/imgaug/commit/4ed4ecbf706f0b5e0f611dc9c746439d3d780e30,Fix handling of arrays in Convolve called with callable,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
523,aleju,kontakt@ajung.name,2018-06-19 18:10:09+02:00,a46e7074262a9a8d23fe5b40bf04598b15ae430d,https://github.com/aleju/imgaug/commit/a46e7074262a9a8d23fe5b40bf04598b15ae430d,Improve handling of dtypes and value ranges in Convolve,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
524,aleju,kontakt@ajung.name,2018-06-19 18:10:57+02:00,6da1af45453cef0784277792b540df94c4b0920c,https://github.com/aleju/imgaug/commit/6da1af45453cef0784277792b540df94c4b0920c,Add test for Convolve,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, img)', 'np.array_equal(observed, img)', 'np.array_equal(observed, img)', 'np.array_equal(observed, img)', 'np.array_equal(observed, img)', 'np.array_equal(observed, img)', 'np.array_equal(observed, 2*img)', 'np.array_equal(observed, 2*img)', 'np.array_equal(observed, 2*img3)', 'np.array_equal(observed, 2*img3)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'found', 'all(seen)', 'in str(exc)', 'got_exception', 'np.array_equal(params[0], matrix)', 'params[1] == ']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
525,aleju,kontakt@ajung.name,2018-06-20 19:12:50+02:00,55eabc9137b73ee5f9e2d9dbb5ee2698c79cd9d0,https://github.com/aleju/imgaug/commit/55eabc9137b73ee5f9e2d9dbb5ee2698c79cd9d0,Increase version number to 0.2.6,5,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
526,aleju,kontakt@ajung.name,2018-06-20 20:00:50+02:00,815a07a38d0d421a374b396ec3f897fcdbc03a8e,https://github.com/aleju/imgaug/commit/815a07a38d0d421a374b396ec3f897fcdbc03a8e,Add environment variable to avoid cv2 check during install,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
527,aleju,kontakt@ajung.name,2018-06-20 20:03:37+02:00,18ea2ce23383fc64ee137a906a9b2288c15955f6,https://github.com/aleju/imgaug/commit/18ea2ce23383fc64ee137a906a9b2288c15955f6,Update supported python versions,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
528,aleju,kontakt@ajung.name,2018-06-21 20:16:09+02:00,6946ac45c02e9de27b8465721ba15a6a95c3e583,https://github.com/aleju/imgaug/commit/6946ac45c02e9de27b8465721ba15a6a95c3e583,Fix #143 (SomeOf() crashing upon changes of shapes),2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(observed, list)', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'ia.is_np_array(image)', 'observed.shape in [(4, 8, 3), (6, 8, 3)]', 'ia.is_np_array(observed)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'ia.is_np_array(observed)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'ia.is_np_array(observed)', 'observed.shape in [(8, 8, 3)]']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
529,aleju,kontakt@ajung.name,2018-06-21 20:45:34+02:00,7fd69b8e80a90752d176e6ceca7ae2840b75477f,https://github.com/aleju/imgaug/commit/7fd69b8e80a90752d176e6ceca7ae2840b75477f,Fix #143 in Sometimes,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(observed, list) or (ia.is_np_array(observed) and len(set([img.shape for img in observed])) == 1)', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'isinstance(observed, list) or (ia.is_np_array(observed) and len(set([img.shape for img in observed])) == 1)', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'ia.is_np_array(image)', 'observed.shape in [(4, 8, 3), (6, 8, 3)]', 'isinstance(observed, list) or (ia.is_np_array(observed) and len(set([img.shape for img in observed])) == 1)', 'all([16 <= img.shape[0] <= 30 and img.shape[1:] == (32, 3) for img in observed])', 'isinstance(observed, list)', 'all([16 <= img.shape[0] <= 30 and img.shape[1:] == (32, 3) for img in observed])', 'isinstance(observed, list) or (ia.is_np_array(observed) and len(set([img.shape for img in observed])) == 1)', 'all([16 <= img.shape[0] <= 30 and img.shape[1:] == (32, 3) for img in observed])', 'isinstance(observed, list)', 'all([16 <= img.shape[0] <= 30 and img.shape[1:] == (32, 3) for img in observed])', 'ia.is_np_array(image)', '16 <= observed.shape[0] <= 30 and observed.shape[1:] == (32, 3)', 'ia.is_np_array(observed)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'ia.is_np_array(observed)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'ia.is_np_array(observed)', 'observed.shape in [(8, 8, 3)]', 'ia.is_np_array(observed)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'ia.is_np_array(observed)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'ia.is_np_array(observed)', 'observed.shape in [(8, 8, 3)]']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
530,aleju,kontakt@ajung.name,2018-06-21 20:51:53+02:00,03e9b99044dbc57e9cf7265102761a60753a04f9,https://github.com/aleju/imgaug/commit/03e9b99044dbc57e9cf7265102761a60753a04f9,Add check in WithChannels that heights/widths of images remain unchanged,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
531,aleju,kontakt@ajung.name,2018-06-23 10:29:50+02:00,fc5d30af9356556edafae5fb3e8da7fdd13b0b4c,https://github.com/aleju/imgaug/commit/fc5d30af9356556edafae5fb3e8da7fdd13b0b4c,Fix errors associated with 2D images changing in size during augmentation,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['all([image.ndim == 3 and 48 <= image.shape[0] <= 62 and 48 <= image.shape[1] <= 62 and image.shape[2] == 3 for image in observed])', 'seen[0] <= 3', 'seen[1] >= 17', 'all([image.ndim == 3 and 48 <= image.shape[0] <= 62 and 48 <= image.shape[1] <= 62  and image.shape[2] == 1 for image in observed])', 'seen[0] <= 3', 'seen[1] >= 17', 'all([image.ndim == 2 and 48 <= image.shape[0] <= 62 and 48 <= image.shape[1] <= 62 for image in observed])', 'seen[0] <= 3', 'seen[1] >= 17', 'image.ndim == 2', 'image.ndim == 3', 'image.shape[2] == c', '48 <= image.shape[0] <= 62', '48 <= image.shape[1] <= 62', 'seen[0] == 0', 'seen[1] == 20']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
532,aleju,kontakt@ajung.name,2018-07-08 20:44:31+02:00,3b04c24655c875be8cbcee5198c9f9aa285491b4,https://github.com/aleju/imgaug/commit/3b04c24655c875be8cbcee5198c9f9aa285491b4,Add heatmap augmentation,12,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,447,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['arr_pad.shape == (3, 3)', 'arr_pad.dtype.type == dtype', 'np.array_equal(arr_pad, arr)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype.type == dtype', 'np.all(arr_pad[0, :] == 0)', 'arr_pad.shape == (3, 4)', 'arr_pad.dtype.type == dtype', 'np.all(arr_pad[:, -1] == 0)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype.type == dtype', 'np.all(arr_pad[-1, :] == 0)', 'arr_pad.shape == (3, 4)', 'arr_pad.dtype.type == dtype', 'np.all(arr_pad[:, 0] == 0)', 'arr_pad.shape == (3+(1+3), 3+(2+4))', 'arr_pad.dtype.type == dtype', 'np.all(arr_pad[0, :] == 0)', 'np.all(arr_pad[:, -2:] == 0)', 'np.all(arr_pad[-3:, :] == 0)', 'np.all(arr_pad[:, :4] == 0)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype.type == dtype', 'np.all(arr_pad[0, :] == 10)', 'arr_pad.shape == (4, 3, 3)', 'arr_pad.dtype.type == dtype', 'np.all(arr_pad[0, :, 0] == 0)', 'np.all(arr_pad[0, :, 1] == 0)', 'np.all(arr_pad[0, :, 2] == 0)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype.type == dtype', 'arr_pad[0, 0] == 128', 'arr_pad[0, 1] == 200', 'arr_pad[0, 2] == 128', 'arr_pad.shape == (3, 3)', 'arr_pad.dtype.type == dtype', 'np.allclose(arr_pad, arr)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype.type == dtype', 'np.allclose(arr_pad[0, :], dtype([0, 0, 0]))', 'arr_pad.shape == (3, 4)', 'arr_pad.dtype.type == dtype', 'np.allclose(arr_pad[:, -1], dtype([0, 0, 0]))', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype.type == dtype', 'np.allclose(arr_pad[-1, :], dtype([0, 0, 0]))', 'arr_pad.shape == (3, 4)', 'arr_pad.dtype.type == dtype', 'np.allclose(arr_pad[:, 0], dtype([0, 0, 0]))', 'arr_pad.shape == (3+(1+3), 3+(2+4))', 'arr_pad.dtype.type == dtype', '0 - 1e-6 < np.max(arr_pad[0, :]) < 0 + 1e-6', '0 - 1e-6 < np.max(arr_pad[:, -2:]) < 0 + 1e-6', '0 - 1e-6 < np.max(arr_pad[-3, :]) < 0 + 1e-6', '0 - 1e-6 < np.max(arr_pad[:, :4]) < 0 + 1e-6', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype.type == dtype', 'np.allclose(arr_pad[0, :], dtype([0.2, 0.2, 0.2]))', 'arr_pad.shape == (4, 3, 3)', 'arr_pad.dtype.type == dtype', 'np.allclose(arr_pad[0, :, 0], dtype([0, 0, 0]))', 'np.allclose(arr_pad[0, :, 1], dtype([0, 0, 0]))', 'np.allclose(arr_pad[0, :, 2], dtype([0, 0, 0]))', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype.type == dtype', '0.50 - 1e-6 < arr_pad[0, 0] < 0.50 + 1e-6', '0.75 - 1e-6 < arr_pad[0, 1] < 0.75 + 1e-6', '0.50 - 1e-6 < arr_pad[0, 2] < 0.50 + 1e-6', 'top == 0', 'right == 0', 'bottom == 0', 'left == 0', 'top == 2', 'right == 0', 'bottom == 1', 'left == 0', 'top == 0', 'right == 2', 'bottom == 0', 'left == 1', 'top == 1', 'right == 0', 'bottom == 1', 'left == 0', 'top == 0', 'right == 1', 'bottom == 0', 'left == 1', 'top == 2', 'right == 0', 'bottom == 2', 'left == 0', 'top == 0', 'right == 2', 'bottom == 0', 'left == 2', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 4', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 4', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 4', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 4', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 4', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 8', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 8', 'arr_pad.shape[1] == 4', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 4', 'arr_pad.shape[2] == 3', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 8', 'np.max(arr_pad[:, 0:2]) == 0', 'np.max(arr_pad[:, -2:]) == 0', 'np.max(arr_pad[:, 2:-2]) == 128', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 8', 'np.max(arr_pad[:, 0:2]) == 10', 'np.max(arr_pad[:, -2:]) == 10', 'np.max(arr_pad[:, 2:-2]) == 128', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 8', '0 - 1e-6 <= np.max(arr_pad[:, 0:2]) <= 0 + 1e-6', '0 - 1e-6 <= np.max(arr_pad[:, -2:]) <= 0 + 1e-6', '0.5 - 1e-6 <= np.max(arr_pad[:, 2:-2]) <= 0.5 + 1e-6', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 8', '0.1 - 1e-6 <= np.max(arr_pad[:, 0:2]) <= 0.1 + 1e-6', '0.1 - 1e-6 <= np.max(arr_pad[:, -2:]) <= 0.1 + 1e-6', '0.5 - 1e-6 <= np.max(arr_pad[:, 2:-2]) <= 0.5 + 1e-6', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 8', 'np.max(arr_pad[0:1, 0:2]) == 128', 'np.max(arr_pad[1:3, 0:2]) == 200', 'np.max(arr_pad[3:, 0:2]) == 128', 'np.max(arr_pad[0:1, -2:]) == 128', 'np.max(arr_pad[1:3, -2:]) == 200', 'np.max(arr_pad[3:, -2:]) == 128', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.average([0, 1, 4, 5]))', 'arr_pooled[0, 1] == int(np.average([2, 3, 6, 7]))', 'arr_pooled[1, 0] == int(np.average([8, 9, 12, 13]))', 'arr_pooled[1, 1] == int(np.average([10, 11, 14, 15]))', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.average([0, 1, 4, 5]))', 'arr_pooled[0, 1] == int(np.average([2, 3, 6, 7]))', 'arr_pooled[1, 0] == int(np.average([8, 9, 12, 13]))', 'arr_pooled[1, 1] == int(np.average([10, 11, 14, 15]))', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'np.allclose(arr_pooled[0, 0], np.average([0, 1, 4, 5]))', 'np.allclose(arr_pooled[0, 1], np.average([2, 3, 6, 7]))', 'np.allclose(arr_pooled[1, 0], np.average([8, 9, 12, 13]))', 'np.allclose(arr_pooled[1, 1], np.average([10, 11, 14, 15]))', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == np.float64', 'np.allclose(arr_pooled[0, 0], np.average([0, 1, 4, 5]))', 'np.allclose(arr_pooled[0, 1], np.average([2, 3, 6, 7]))', 'np.allclose(arr_pooled[1, 0], np.average([8, 9, 12, 13]))', 'np.allclose(arr_pooled[1, 1], np.average([10, 11, 14, 15]))', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.max([0, 1, 4, 5]))', 'arr_pooled[0, 1] == int(np.max([2, 3, 6, 7]))', 'arr_pooled[1, 0] == int(np.max([8, 9, 12, 13]))', 'arr_pooled[1, 1] == int(np.max([10, 11, 14, 15]))', 'arr_pooled.shape == (2, 2, 3)', 'np.array_equal(arr_pooled[..., 0], arr_pooled[..., 1])', 'np.array_equal(arr_pooled[..., 1], arr_pooled[..., 2])', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.average([0, 1, 4, 5]))', 'arr_pooled[0, 1] == int(np.average([2, 3, 6, 7]))', 'arr_pooled[1, 0] == int(np.average([8, 9, 12, 13]))', 'arr_pooled[1, 1] == int(np.average([10, 11, 14, 15]))', 'arr_pooled.shape == (2, 4)', 'arr_pooled.dtype == arr.dtype.type', 'np.allclose(arr_pooled[0, 0], np.average([0, 4]))', 'np.allclose(arr_pooled[0, 1], np.average([1, 5]))', 'np.allclose(arr_pooled[0, 2], np.average([2, 6]))', 'np.allclose(arr_pooled[0, 3], np.average([3, 7]))', 'np.allclose(arr_pooled[1, 0], np.average([8, 12]))', 'np.allclose(arr_pooled[1, 1], np.average([9, 13]))', 'np.allclose(arr_pooled[1, 2], np.average([10, 14]))', 'np.allclose(arr_pooled[1, 3], np.average([11, 15]))', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.average([0, 1, 4, 5]))', 'arr_pooled[0, 1] == int(np.average([2, 0, 6, 0]))', 'arr_pooled[1, 0] == int(np.average([8, 9, 0, 0]))', 'arr_pooled[1, 1] == int(np.average([10, 0, 0, 0]))', 'arr_pooled.shape == (1, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.average([0, 4, 0, 0]))', 'arr_pooled[0, 1] == int(np.average([1, 5, 0, 0]))', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.average([0, 1, 4, 5]))', 'arr_pooled[0, 1] == int(np.average([2, 22, 6, 22]))', 'arr_pooled[1, 0] == int(np.average([8, 9, 22, 22]))', 'arr_pooled[1, 1] == int(np.average([10, 22, 22, 22]))', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.average([0, 1, 4, 5]))', 'arr_pooled[0, 1] == int(np.average([2, 3, 6, 7]))', 'arr_pooled[1, 0] == int(np.average([8, 9, 12, 13]))', 'arr_pooled[1, 1] == int(np.average([10, 11, 14, 15]))', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.max([0, 1, 4, 5]))', 'arr_pooled[0, 1] == int(np.max([2, 3, 6, 7]))', 'arr_pooled[1, 0] == int(np.max([8, 9, 12, 13]))', 'arr_pooled[1, 1] == int(np.max([10, 11, 14, 15]))', 'heatmaps_drawn.shape == (4, 4, 3)', 'np.allclose(heatmaps_drawn[y, x], v1)', 'np.allclose(heatmaps_drawn[y, x], v2)', 'np.allclose(heatmaps_drawn[y, x], v3)', 'heatmaps_drawn.shape == (4, 4, 3)', 'np.allclose(heatmaps_drawn[y, x], v1)', 'np.allclose(heatmaps_drawn[y, x], v2)', 'heatmaps_drawn.shape == (4, 4, 3)', 'np.all(heatmaps_drawn[0:4, 0:2, :] == 0)', 'np.all(heatmaps_drawn[0:4, 2:3, :] == 128) or np.all(heatmaps_drawn[0:4, 2:3, :] == 127)', 'np.all(heatmaps_drawn[0:4, 3:4, :] == 255) or np.all(heatmaps_drawn[0:4, 3:4, :] == 254)', 'heatmaps_drawn.shape == (2, 2, 3)', 'np.all(heatmaps_drawn[0:2, 0, :] == 0)', 'np.all(heatmaps_drawn[0:2, 1, :] == 128) or np.all(heatmaps_drawn[0:2, 1, :] == 127)', 'heatmaps_padded.arr_0to1.shape == (2+(1+3), 2+(4+2), 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (2+(1+3), 2+(4+2), 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (2+(1+3), 2+(4+2), 1)', 'np.allclose(', 'heatmaps_pooled.arr_0to1.shape == (2, 2, 1)', 'np.allclose(', 'heatmaps_pooled.arr_0to1.shape == (2, 2, 1)', 'np.allclose(', 'heatmaps_scaled.arr_0to1.shape == (4, 4, 1)', 'heatmaps_scaled.arr_0to1.dtype.type == np.float32', 'np.allclose(', 'heatmaps_scaled.arr_0to1.shape == (2, 4, 1)', 'heatmaps_scaled.arr_0to1.dtype.type == np.float32', 'np.allclose(', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_aug)', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_aug)', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'errored', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'errored', 'observed.shape == (3, 4, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'observed.shape == (3, 4, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'errored', 'observed.shape == (3, 4, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'observed.shape == (3, 4, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'errored', 'observed.shape == (3, 4, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'observed.shape == (3, 4, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'errored', 'observed.shape == (3, 4, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'observed.shape == (3, 4, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'errored', 'observed.shape == heatmaps.shape', '0 - 1e-6 < heatmaps.min_value < 0 + 1e-6', '1 - 1e-6 < heatmaps.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_r1)', 'observed.shape == heatmaps.shape', '0 - 1e-6 < heatmaps.min_value < 0 + 1e-6', '1 - 1e-6 < heatmaps.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_l1)', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_r1)', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_l1)', 'False', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_r1)', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_l1)', 'heatmaps_aug.shape == base_img3d.shape', '0 - 1e-6 < heatmaps_aug.min_value < 0 + 1e-6', '1 - 1e-6 < heatmaps_aug.max_value < 1 + 1e-6', 'np.average(heatmaps_aug.get_arr()[0, :]) < 0.05', 'np.average(heatmaps_aug.get_arr()[-1, :]) < 0.05', 'np.average(heatmaps_aug.get_arr()[:, 0]) < 0.05', '0.8 < np.average(heatmaps_aug.get_arr()[2:6, 2:10]) < 1 + 1e-6', 'observed.shape == base_img.shape', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.array_equal(observed.get_arr(), heatmaps_arr_padded)', 'np.sum(observed.get_arr() <= 1e-4) == 3', 'np.sum(observed.get_arr() > 1e-4) == 0', 'np.array_equal(observed.get_arr(), heatmaps_arr_cropped)', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), expected)', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), expected)', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), expected)', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), expected)', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', '100.0/255.0 < np.average(observed_arr[mask]) < np.average(heatmaps_arr[mask])', '75.0/255.0 > np.average(observed_arr[~mask]) > np.average(heatmaps_arr[~mask])', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed_arr, heatmaps_arr)', 'observed1.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed1.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed1.max_value < heatmaps.max_value + 1e-6', 'observed2.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed2.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed2.max_value < heatmaps.max_value + 1e-6', 'np.average(observed1_arr[~mask]) < np.average(observed2_arr[~mask])', 'np.sum([observed.get_arr()[:, :] >= 0.01]) == 0', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.average(np.abs(observed.get_arr() - expected)) < 30.0', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.sum(observed.get_arr()[mask]) < np.sum(heatmaps.get_arr()[mask])', 'np.sum(observed.get_arr()[~mask]) > np.sum(heatmaps.get_arr()[~mask])', 'observed1.shape == heatmaps.shape', 'observed2.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed1.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed1.max_value < heatmaps.max_value + 1e-6', 'heatmaps.min_value - 1e-6 < observed2.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed2.max_value < heatmaps.max_value + 1e-6', 'np.sum(observed1.get_arr()[mask]) > np.sum(observed2.get_arr()[mask])', 'np.sum(observed1.get_arr()[~mask]) < np.sum(observed2.get_arr()[~mask])', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.sum(observed.get_arr() > 0.01) == 0', 'got_exception', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1.0 - 1e-6 < observed.max_value < 1.0 + 1e-6', 'np.array_equal(observed.get_arr(), heatmaps_arr_expected)', 'nb_heatmaps_first_second_unrandom == nb_iterations', 'nb_heatmaps_second_first_unrandom == 0', 'False', 'all(seen)', 'all([obs.shape == (3, 3, 3) for obs in [observed0, observed1, observed2, observed3]])', 'all([0 - 1e-6 < obs.min_value < 0 + 1e-6 for obs in [observed0, observed1, observed2, observed3]])', 'all([1 - 1e-6 < obs.max_value < 1 + 1e-6 for obs in [observed0, observed1, observed2, observed3]])', 'np.array_equal(obs.get_arr(), exp)', 'observed.shape == heatmaps.shape', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.array_equal(observed.get_arr(), heatmaps_arr_lr)', 'observed.shape == heatmaps.shape', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.array_equal(observed.get_arr(), heatmaps_arr_ud)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
533,aleju,kontakt@ajung.name,2018-07-08 20:53:41+02:00,6fe3d9a15381cfffbfd41378b95f3f7d9116093d,https://github.com/aleju/imgaug/commit/6fe3d9a15381cfffbfd41378b95f3f7d9116093d,Fix outdated class name in type check,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
534,Jacob Graving,jgraving@gmail.com,2018-07-13 11:12:20+02:00,b1c3e254882da59785f219225ac2f17c16aab519,https://github.com/aleju/imgaug/commit/b1c3e254882da59785f219225ac2f17c16aab519,"Make names informative for function-style augmenters

Function-style augmenters would previously use the name of the class returned by the function, which made the name ambiguous for many of these augmenters.",5,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
535,Jacob Graving,jgraving@gmail.com,2018-07-13 11:58:26+02:00,ca5f32735b5160d12cedc07b5b23c35f236a0c8e,https://github.com/aleju/imgaug/commit/ca5f32735b5160d12cedc07b5b23c35f236a0c8e,Remove trailing whitespace,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
536,Jacob Graving,jgraving@gmail.com,2018-07-13 12:28:32+02:00,8d3215e38f05bfbf4fb2c97baaae4aa652165648,https://github.com/aleju/imgaug/commit/8d3215e38f05bfbf4fb2c97baaae4aa652165648,Automate naming from within function-style augmenters,7,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
537,Jacob Graving,jgraving@gmail.com,2018-07-13 12:59:01+02:00,3b39b64b25c9c66309def58aec621a1d9945c70d,https://github.com/aleju/imgaug/commit/3b39b64b25c9c66309def58aec621a1d9945c70d,Add test for caller_name,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['ia.caller_name() == '],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
538,aleju,kontakt@ajung.name,2018-07-15 16:17:44+02:00,6340236eb2d9c32e8b6f8a8e097f01fdfaa3a535,https://github.com/aleju/imgaug/commit/6340236eb2d9c32e8b6f8a8e097f01fdfaa3a535,"Add documentation, Fix IoU in BoundingBox",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
539,aleju,kontakt@ajung.name,2018-07-29 17:20:44+02:00,7377c6da8bbe4e02bda2f78bd4d0dc7ad32362c3,https://github.com/aleju/imgaug/commit/7377c6da8bbe4e02bda2f78bd4d0dc7ad32362c3,Add segmentation map augmentation,3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,87,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed.dtype.type == np.int32', 'np.array_equal(arr, observed)', 'observed.dtype.type == np.int32', 'np.array_equal(observed, expected)', 'observed.dtype.type == np.int32', 'np.array_equal(observed, expected)', 'observed.dtype.type == np.int32', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed_fg, expected_fg)', 'np.array_equal(observed, expected)', 'np.array_equal(observed_fg, expected_fg)', 'np.array_equal(observed, expected)', 'np.array_equal(observed_fg, expected_fg)', 'np.array_equal(observed, image)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'observed.shape == expected.shape', 'd_max <= 1.0 + 1e-4', 'observed.shape == expected.shape', 'd_max <= 1.0 + 1e-4', 'observed.shape == expected.shape', 'd_max <= 1.0 + 1e-4', 'observed.shape == expected.shape', 'd_max <= 1.0 + 1e-4', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'pad_amounts == (2, 0, 2, 0)', 'np.allclose(observed, expected)', 'np.array_equal(segmap_scaled.get_arr_int(), np.int32([', 'np.allclose(observed, expected)', 'np.array_equal(segmap_scaled.get_arr_int(), np.int32([', 'np.allclose(observed, expected)', 'np.array_equal(segmap_scaled.get_arr_int(), np.int32([', 'np.allclose(heatmaps.arr_0to1, expected)', 'np.allclose(heatmaps.arr_0to1, expected)', 'len(class_indices) == 3', '[idx in class_indices for idx in [0, 1, 2]]', 'np.allclose(heatmaps.arr_0to1, expected)', 'len(class_indices) == 2', '[idx in class_indices for idx in [0, 2]]', 'heatmaps is None', 'len(class_indices) == 0', 'np.allclose(heatmaps.arr_0to1, np.zeros((2, 2), dtype=np.float32))', 'len(class_indices) == 1', '[idx in class_indices for idx in [0]]', 'np.allclose(segmap.arr, arr)', 'np.allclose(segmap.arr, expected)', 'np.allclose(observed.arr, segmap.arr)', 'observed.shape == (2, 2)', 'observed.nb_classes == segmap.nb_classes', 'observed.input_was == segmap.input_was', 'np.array_equal(observed.get_arr_int(), arr)', 'observed.shape == (2, 2)', 'observed.nb_classes == 10', 'observed.input_was == segmap.input_was', 'np.allclose(observed.arr, segmap.arr)', 'observed.shape == (2, 2)', 'observed.nb_classes == segmap.nb_classes', 'observed.input_was == segmap.input_was', 'not np.allclose(observed.arr, segmap.arr)', 'np.array_equal(observed.get_arr_int(), segmap.get_arr_int())', 'observed.shape == (2, 2)', 'observed.nb_classes == 10', 'observed.input_was == segmap.input_was', 'not np.array_equal(observed.get_arr_int(), segmap.get_arr_int())', 'np.allclose(segmap_aug.arr, segmap.arr)', 'np.allclose(segmap_aug.arr, segmap.arr)', 'np.allclose(segmap_aug.arr, expected)', 'np.allclose(segmap_aug.arr, expected)', 'np.allclose(segmap_aug.arr, segmap.arr)', 'np.allclose(segmap_aug.arr, segmap.arr)', 'np.allclose(segmap_aug.arr, expected)', 'np.allclose(segmap_aug.arr, expected)', 'np.allclose(segmap_aug.arr, segmap.arr)', 'np.allclose(segmap_aug.arr, segmap.arr)', 'np.allclose(segmap_aug.arr, expected)', 'np.allclose(segmap_aug.arr, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
540,aleju,kontakt@ajung.name,2018-08-03 19:28:57+02:00,35456b36a42611360aed749ce5379c8b882372cd,https://github.com/aleju/imgaug/commit/35456b36a42611360aed749ce5379c8b882372cd,Fix sphinx errors when generating API docs,32,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
541,aleju,kontakt@ajung.name,2018-08-03 19:33:18+02:00,87af581be588879c801acf21ca9094e09ac4cd41,https://github.com/aleju/imgaug/commit/87af581be588879c801acf21ca9094e09ac4cd41,Add some files to gitignore,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
542,aleju,kontakt@ajung.name,2018-08-03 19:34:03+02:00,63ed304716711a31c92ecdbb7efb55bdf0fd656c,https://github.com/aleju/imgaug/commit/63ed304716711a31c92ecdbb7efb55bdf0fd656c,Add checks for heatmaps and segmentation maps,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
543,aleju,kontakt@ajung.name,2018-08-03 19:45:58+02:00,640e6c3a069aadfaf475547f71d37af0533cfbf1,https://github.com/aleju/imgaug/commit/640e6c3a069aadfaf475547f71d37af0533cfbf1,Fix invalid package name,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
544,Kacper Kania,kacper1095@gmail.com,2018-08-04 13:59:44+02:00,8e8622f5739064c8aa97441ab4deda84063a5dd4,https://github.com/aleju/imgaug/commit/8e8622f5739064c8aa97441ab4deda84063a5dd4,Added JpegCompression augmentation,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
545,aleju,kontakt@ajung.name,2018-08-03 20:34:47+02:00,5263b25918c38989ba3c2a13bf2248044534ca74,https://github.com/aleju/imgaug/commit/5263b25918c38989ba3c2a13bf2248044534ca74,Add warnings in ChangeColorspace for eg C!=3,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
546,aleju,kontakt@ajung.name,2018-08-07 17:39:18+02:00,c07dc1f3743cd151a72d8d9c350a275c08eadb04,https://github.com/aleju/imgaug/commit/c07dc1f3743cd151a72d8d9c350a275c08eadb04,Add/Improve methods to generate example data,3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
547,aleju,kontakt@ajung.name,2018-08-07 18:41:50+02:00,937e9669fba12fc302becf5b550794a7c6bdb429,https://github.com/aleju/imgaug/commit/937e9669fba12fc302becf5b550794a7c6bdb429,Allow augmentation of KeypointsOnImage with zero KPs,3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['kpsois_reduced == [kpsois[0], kpsois[1], kpsois[3]]', 'ids == [0, 1, 3]', 'kpsois_reduced == []', 'ids == []', 'kpsois_reduced == [kpsois[0]]', 'ids == [0]', 'kpsois_reduced == []', 'ids == []', 'kpsois_recovered == []', 'all([isinstance(kpsoi, ia.KeypointsOnImage) for kpsoi in kpsois]) # assert original list not changed', 'kpsois_recovered == [kpsois[0], , kpsois[2]]', 'kpsois_recovered == [kpsois[0], kpsois[1], kpsois[2]]', 'kpsois_recovered == []', 'kp_fully_empty_aug == []', 'len(kp_first_empty_aug.keypoints) == 0']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
548,aleju,kontakt@ajung.name,2018-08-07 18:44:47+02:00,0f1ce861c06b5ab0c7e45ace3aad1a945ead3a47,https://github.com/aleju/imgaug/commit/0f1ce861c06b5ab0c7e45ace3aad1a945ead3a47,Fix API link,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
549,aleju,kontakt@ajung.name,2018-08-07 18:59:33+02:00,79ad141fbd7da5fa71c53f97a433df49dcb70db0,https://github.com/aleju/imgaug/commit/79ad141fbd7da5fa71c53f97a433df49dcb70db0,Add tests for aug of empty BB lists,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(bbsois_aug) == 1', 'bbsois_aug[0].bounding_boxes == []', 'bbsois_aug == []']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
550,aleju,kontakt@ajung.name,2018-08-07 19:03:37+02:00,b11b7762c2dadeda53630b967e3b0c34101fc057,https://github.com/aleju/imgaug/commit/b11b7762c2dadeda53630b967e3b0c34101fc057,Add tests for aug of empty BB lists,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(bbsois_aug) == 1', 'bbsois_aug[0].bounding_boxes == []', 'bbsois_aug == []']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
551,aleju,kontakt@ajung.name,2018-08-11 09:44:22+02:00,d9db6101bb4c72047f193240525d3ff77a2b0ecd,https://github.com/aleju/imgaug/commit/d9db6101bb4c72047f193240525d3ff77a2b0ecd,"Add Heatmaps, SegMaps, BBs to ia.Batch and augment_batches()",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
552,aleju,kontakt@ajung.name,2018-08-11 10:19:49+02:00,149a39909411b76687fb4c9bb3d7810307bf6414,https://github.com/aleju/imgaug/commit/149a39909411b76687fb4c9bb3d7810307bf6414,Add invert() to HeatmapsOnImage,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(heatmaps.get_arr(), heatmaps_arr)', 'np.allclose(heatmaps.invert().get_arr(), expected)', 'np.allclose(heatmaps.get_arr(), heatmaps_arr[..., np.newaxis])', 'np.allclose(heatmaps.invert().get_arr(), expected[..., np.newaxis])']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
553,aleju,kontakt@ajung.name,2018-08-11 17:49:55+02:00,44cc7e283a5a6578761e1c7267f90f1bda46b928,https://github.com/aleju/imgaug/commit/44cc7e283a5a6578761e1c7267f90f1bda46b928,Fix quokka depth map filepath,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
554,aleju,kontakt@ajung.name,2018-08-11 17:53:03+02:00,b0e696aa1964667f6f988e6dd845365adadd64d9,https://github.com/aleju/imgaug/commit/b0e696aa1964667f6f988e6dd845365adadd64d9,Fix handling of floats/ints in _compute_resized_shape(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
555,aleju,kontakt@ajung.name,2018-08-11 17:54:16+02:00,6aa3fe5e6a1879b5bd5a09798ecc86b47b179c82,https://github.com/aleju/imgaug/commit/6aa3fe5e6a1879b5bd5a09798ecc86b47b179c82,Fix missing json import,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
556,aleju,kontakt@ajung.name,2018-08-11 18:12:03+02:00,ff199b168eaefd6aab4ef6edfe40f6b68ce12e2b,https://github.com/aleju/imgaug/commit/ff199b168eaefd6aab4ef6edfe40f6b68ce12e2b,Add/Refactor example data functions for Heatmaps+SegMaps,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
557,aleju,kontakt@ajung.name,2018-08-11 18:14:24+02:00,7dc98778a89e43c858b96bd943ce18071955e2b4,https://github.com/aleju/imgaug/commit/7dc98778a89e43c858b96bd943ce18071955e2b4,Fix/Refactor example data annotation json file,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
558,aleju,kontakt@ajung.name,2018-08-11 18:15:24+02:00,b4377f2e4d1dd083d810e104954aeb04a3a22e85,https://github.com/aleju/imgaug/commit/b4377f2e4d1dd083d810e104954aeb04a3a22e85,Fix segmentation maps attribute name in ia.Batch(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
559,aleju,kontakt@ajung.name,2018-08-11 18:18:20+02:00,dd6d89b02623e4f989d1879978fee7a71aa20856,https://github.com/aleju/imgaug/commit/dd6d89b02623e4f989d1879978fee7a71aa20856,Improve some documentation,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
560,aleju,kontakt@ajung.name,2018-08-11 18:20:35+02:00,56a283eafaf7fd107e69ebffeb338d798518e7f5,https://github.com/aleju/imgaug/commit/56a283eafaf7fd107e69ebffeb338d798518e7f5,Fix missing input_was transfer in SegmentationMapOnImage,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
561,aleju,kontakt@ajung.name,2018-08-11 18:21:57+02:00,ca54b29dfeeb1a3d36d365e3512521abb4ad2ff5,https://github.com/aleju/imgaug/commit/ca54b29dfeeb1a3d36d365e3512521abb4ad2ff5,"Fix handling of bg class id in SegmentationMapOnImage

Changed so that bool and float input arrays to
SegmentationMapOnImage implicitly mean that any spatial
location without a value >threshold in all array channels
is counted as background (i.e. all channels zero-like
at a pixel = background). For integer maps, the background
class is explicitly provided. It may be changed in
get_arr_int() and the drawing routines.",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['in str(exc)', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],"['observed.dtype.type == np.int32', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed_fg, expected_fg)']",[],[],[],[],[],[],[],[],[],[],[],[]
562,aleju,kontakt@ajung.name,2018-08-11 18:25:04+02:00,afdeb4e00e706116a2710bd695529c87264d9ae9,https://github.com/aleju/imgaug/commit/afdeb4e00e706116a2710bd695529c87264d9ae9,"Fix handling of heatmaps in CropAndPad

CropAndPad cropped correctly heatmaps, but calculated
padding amounts incorrectly. Fixed.",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
563,aleju,kontakt@ajung.name,2018-08-11 18:27:36+02:00,e50e7107ea0261efe14032e7d028294336495e89,https://github.com/aleju/imgaug/commit/e50e7107ea0261efe14032e7d028294336495e89,"Add function to generate example images for README

The new function is supposed to generate a handful
of overview images. These overview images showcase
the different augmentables: Images, Heatmaps,
Segmentation Maps, Keypoints, Bounding Boxes.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
564,aleju,kontakt@ajung.name,2018-08-11 20:59:07+02:00,e66a126580f326e9461c1ec83488ca30f5229f45,https://github.com/aleju/imgaug/commit/e66a126580f326e9461c1ec83488ca30f5229f45,"Change BB corners to fall inside BB area; beautify BB drawing and extraction

BB corners are now considered to be part of the BB area,
i.e. their value range is [0, H-eps] and [0, W-eps] for
BBs that are fully inside the image.
Drawing and extraction has been beautified for BBs that
have corners in the range [H-0.5, H) and [W-0.5, W)
by shifting their corners during drawing/extraction to
H-1 and W-1.
Otherwise the borders at the bottom and/or right might
have not been shown, even after calling cut_out_of_image(),
making drawn BBs ugly (similar for extraction).",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['20 - 2*eps < bb_cut.y2 < 20', '30 - 2*eps < bb_cut.x2 < 30', '50 - 2*eps < bbsoi_cut.bounding_boxes[1].x2 < 50']",[],[],[],[],[],[],[],[],[],[],[],[],"['bb_cut.y2 == 20', 'bb_cut.x2 == 30', 'bbsoi_cut.bounding_boxes[1].x2 == 50']",[],[],[],[],[],[],[],[],[],[],[],[]
565,aleju,kontakt@ajung.name,2018-08-11 22:40:58+02:00,5fa631b3bc6487a6422ab478357864d97b6bd5b1,https://github.com/aleju/imgaug/commit/5fa631b3bc6487a6422ab478357864d97b6bd5b1,Improve image generation,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
566,aleju,kontakt@ajung.name,2018-08-11 22:41:56+02:00,89c423cda37971848f422f88e55b871f6ebd77a0,https://github.com/aleju/imgaug/commit/89c423cda37971848f422f88e55b871f6ebd77a0,"Extend, reorder and reformulate README",26,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
567,aleju,kontakt@ajung.name,2018-08-11 23:06:29+02:00,2d59a6cf97388c7f480335ebb4f3a28d0cb53a47,https://github.com/aleju/imgaug/commit/2d59a6cf97388c7f480335ebb4f3a28d0cb53a47,Change table from html to github markdown,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
568,aleju,kontakt@ajung.name,2018-08-27 20:52:41+02:00,345dcef4d81aaaf83e2cb69f461d8bfe8f40ea4f,https://github.com/aleju/imgaug/commit/345dcef4d81aaaf83e2cb69f461d8bfe8f40ea4f,Improve some stuff in JpegCompression,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
569,aleju,kontakt@ajung.name,2018-08-27 21:09:31+02:00,b6b1310e00da07b042fe61678bb5096a8e801f0d,https://github.com/aleju/imgaug/commit/b6b1310e00da07b042fe61678bb5096a8e801f0d,Fix JpegCompression always using the same sample,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
570,aleju,kontakt@ajung.name,2018-08-27 21:09:54+02:00,2359594803fc47f50a4d78fe7eb7483b6a322161,https://github.com/aleju/imgaug/commit/2359594803fc47f50a4d78fe7eb7483b6a322161,Add check for JpegCompression,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
571,Raphael,raphael.meudec@gmail.com,2018-08-27 21:12:02+02:00,2468678b1797c944162326c0b017f4bd0074d4c8,https://github.com/aleju/imgaug/commit/2468678b1797c944162326c0b017f4bd0074d4c8,add HLS support for WithColorspace,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
572,aleju,kontakt@ajung.name,2018-08-27 21:19:43+02:00,6524c720896b3029d3a36e18344b015596cc3bb6,https://github.com/aleju/imgaug/commit/6524c720896b3029d3a36e18344b015596cc3bb6,"Fix/improve JpegCompression's compression to quality mapping

The mapping is now fully configurable.
The mapping ranged before from 0 to 100, now by default from
1 to 100. A quality of 1 is the lowest value allowed in PIL,
lower values deactivate the compression, hence a compression
of 100 before this patch would lead to a deactivation of the
jpeg compression -- the opposite of what was expected.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
573,aleju,kontakt@ajung.name,2018-08-27 21:59:31+02:00,c5f088eaba93baf59d90dc148d5bef15b0b3b505,https://github.com/aleju/imgaug/commit/c5f088eaba93baf59d90dc148d5bef15b0b3b505,"Replace scipy.misc.imread() by imageio.imread()

scipy's imread is deprecated, hence the calls are
replaced by the recommended new method.
Additionally, all calls of scipy.ndimage.imread()
are also replaced by imageio.imread().",5,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
574,aleju,kontakt@ajung.name,2018-08-27 22:10:57+02:00,ba42666306dd36d582fe8862086a8c7229159c9d,https://github.com/aleju/imgaug/commit/ba42666306dd36d582fe8862086a8c7229159c9d,"Replace scipy.misc.imsave() by imageio.imwrite()

misc.imsave() is deprecated, therefore it is here
replaced by imageio's recommended function.",5,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
575,aleju,kontakt@ajung.name,2018-08-27 22:16:27+02:00,2f92466d7827eb401fda0debe0a87fd2fa18906b,https://github.com/aleju/imgaug/commit/2f92466d7827eb401fda0debe0a87fd2fa18906b,"Replace misc.imresize() by imgaug's resize functions

misc.imresize() is deprecated, hence it is here
replaced by imgaug's own resize functions (i.e. by
OpenCV)",6,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
576,aleju,kontakt@ajung.name,2018-08-28 21:24:04+02:00,55d87e956cd1d8fbf3fa33726be2ba63c96b6290,https://github.com/aleju/imgaug/commit/55d87e956cd1d8fbf3fa33726be2ba63c96b6290,"Replace scipy.misc.imshow() with matplotlib

scipy.misc.imshow() is deprecated.
Hence, it is here replaced by matplotlib.pyplot.imshow().
To make it easier to change in the future, a function
imgaug.imshow() is introduced that wraps around
matplotlib.pyplot.imshow().",25,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
577,aleju,kontakt@ajung.name,2018-08-30 21:15:37+02:00,0dea0d6035a4623f46723379a9944ec50e4322ae,https://github.com/aleju/imgaug/commit/0dea0d6035a4623f46723379a9944ec50e4322ae,"Reduce code duplication in augmenter Add

This patch decreases code duplication in the
parameter parsing of augmenters.arithmetic.Add
by using the parameter handling functions in
parameters.py.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
578,aleju,kontakt@ajung.name,2018-08-30 21:22:43+02:00,f417d3d3d16d9d1f5c535be9baa5363913c4c09a,https://github.com/aleju/imgaug/commit/f417d3d3d16d9d1f5c535be9baa5363913c4c09a,"Reduce code duplication in AddElementwise

This patch decreases code duplication in the
parameter parsing of
augmenters.arithmetic.AddElementwise by using
the parameter handling functions
in parameters.py.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
579,aleju,kontakt@ajung.name,2018-08-30 21:47:53+02:00,7a32dccfabe0f8e728f87d461da84360a441d016,https://github.com/aleju/imgaug/commit/7a32dccfabe0f8e728f87d461da84360a441d016,"Improve handle_discrete/continuous_parameter()

This patch changes handle_discrete_parameter() and
handle_continuous_parameter() in parameters.py.
Both are changed in similar ways.
+ Add error messages to asserts.
+ Add type checks for elements in lists.
  This prevents strings from being interpreted as
  lists of int/numbers.
+ Fix error messages for bad input datatypes.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
580,aleju,kontakt@ajung.name,2018-08-30 21:53:07+02:00,9ec3e028461213386116fa2289c21c1cba6db49a,https://github.com/aleju/imgaug/commit/9ec3e028461213386116fa2289c21c1cba6db49a,"Reduce code duplication in AdditiveGaussianNoise

This patch decreases code duplication in the
parameter parsing of
augmenters.arithmetic.AdditiveGaussianNoise by using
the parameter handling functions
in parameters.py.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
581,aleju,kontakt@ajung.name,2018-08-31 19:24:10+02:00,9c5a32d33e6f78afcb3542b916c3b78f3198529b,https://github.com/aleju/imgaug/commit/9c5a32d33e6f78afcb3542b916c3b78f3198529b,"Reduce code duplication in augmenter Multiply

This patch decreases code duplication in the
parameter parsing of
augmenters.arithmetic.Multiply by using the
parameter handling functions in parameters.py.
It also enables the mul parameter to convert
a list of values to Choice.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
582,aleju,kontakt@ajung.name,2018-08-31 19:28:29+02:00,db5894382a572663b57ba504b04fafdfd62a4bf6,https://github.com/aleju/imgaug/commit/db5894382a572663b57ba504b04fafdfd62a4bf6,"Reduce code duplication in MultiplyElementwise

This patch decreases code duplication in the
parameter parsing of
augmenters.arithmetic.MultiplyElementwise by
using the parameter handling functions in
parameters.py.

It also enables the mul parameter to convert
a list of values to Choice.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
583,aleju,kontakt@ajung.name,2018-08-31 20:26:56+02:00,ef164fba850a54d2c503c361c4ccebdf8f61c55c,https://github.com/aleju/imgaug/commit/ef164fba850a54d2c503c361c4ccebdf8f61c55c,"Enable tuples and lists in handle_probability_param()

handle_probability_param() in parameters.py has so
far only supported single numbers, True, False and
StochasticParameter. Now it also supports tuples
of form (a, b), which are transformed to Uniform
and lists of form [a, b, c, ...], which are
transformed to Choice. These are useful for masks.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
584,aleju,kontakt@ajung.name,2018-08-31 20:33:50+02:00,b1d0a35bf4b381aeba253efd5eb1d18ad374a660,https://github.com/aleju/imgaug/commit/b1d0a35bf4b381aeba253efd5eb1d18ad374a660,"Reduce code duplication in ReplaceElementwise

This patch decreases code duplication in the
parameter parsing of
augmenters.arithmetic.ReplaceElementwise by
using the parameter handling functions in
parameters.py.",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['0.5 - 1e-6 < params[0].p.value < 0.5 + 1e-6'],[],[],[],[],[],[],[],[],[],[],[],[],['params[0].p.value >= 1 - 1e-8'],[],[],[],[],[],[],[],[],[],[],[],[]
585,aleju,kontakt@ajung.name,2018-08-31 21:16:42+02:00,5bf79c3528af47b7986161d1ce2dcdc0e2b2feee,https://github.com/aleju/imgaug/commit/5bf79c3528af47b7986161d1ce2dcdc0e2b2feee,"Reduce code duplication in CoarseSaltAndPepper

This patch decreases code duplication in the
parameter parsing of
augmenters.arithmetic.CoarseSaltAndPepper by
using the parameter handling functions in
parameters.py.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
586,aleju,kontakt@ajung.name,2018-08-31 21:19:21+02:00,a41c1ed49bcf7554eaf113d9302bca05342bbeb0,https://github.com/aleju/imgaug/commit/a41c1ed49bcf7554eaf113d9302bca05342bbeb0,"Reduce code duplication in CoarseSalt

This patch decreases code duplication in the
parameter parsing of
augmenters.arithmetic.CoarseSalt by using
the parameter handling functions in
parameters.py.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
587,aleju,kontakt@ajung.name,2018-08-31 21:22:19+02:00,1e43f817bba9812a2c3fac84c593b6f1dc9244b6,https://github.com/aleju/imgaug/commit/1e43f817bba9812a2c3fac84c593b6f1dc9244b6,"Reduce code duplication in CoarsePepper

This patch decreases code duplication in the
parameter parsing of
augmenters.arithmetic.CoarsePepper by using
the parameter handling functions in
parameters.py.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
588,aleju,kontakt@ajung.name,2018-08-31 21:27:02+02:00,a85e758eb640bc6d44696b8ad00ecf896a63b515,https://github.com/aleju/imgaug/commit/a85e758eb640bc6d44696b8ad00ecf896a63b515,"Reduce code duplication in Invert

This patch decreases code duplication in the
parameter parsing of
augmenters.arithmetic.Invert by using
the parameter handling functions in
parameters.py.",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['0.5 - 1e-4 < params[0].p.value < 0.5 + 1e-4'],[],[],[],[],[],[],[],[],[],[],[],[],['params[0].p.value == 1'],[],[],[],[],[],[],[],[],[],[],[],[]
589,aleju,kontakt@ajung.name,2018-08-31 21:30:58+02:00,0e40fa3a66647e43c91f69d48da496c97ac85865,https://github.com/aleju/imgaug/commit/0e40fa3a66647e43c91f69d48da496c97ac85865,"Reduce code duplication in ContrastNormalization

This patch decreases code duplication in the
parameter parsing of
augmenters.arithmetic.ContrastNormalization by
using the parameter handling functions in
parameters.py.

It also enables the alpha parameter to convert
a list of values to Choice.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
590,aleju,kontakt@ajung.name,2018-08-31 21:37:37+02:00,1a6965f89beeff99abbde39713ebd6a7ca0e2576,https://github.com/aleju/imgaug/commit/1a6965f89beeff99abbde39713ebd6a7ca0e2576,"Reduce code duplication in JpegCompression

This patch decreases code duplication in the
parameter parsing of
augmenters.arithmetic.JpegCompression by
using the parameter handling functions in
parameters.py.

It also enables the compression parameter to
convert a list of values to Choice.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
591,aleju,kontakt@ajung.name,2018-08-31 21:46:42+02:00,c6bc3d07f990a0a4c094fd0c096d96eeaf6e2032,https://github.com/aleju/imgaug/commit/c6bc3d07f990a0a4c094fd0c096d96eeaf6e2032,"Fix some documentation in arithmetic

Some documentation in arithmetic was wrong
or outdated with regards to the primary
arguments of augmenter constructors. These
errors are fixed in this patch.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
592,aleju,kontakt@ajung.name,2018-09-01 09:14:22+02:00,551601565c5927fc27a33b84c2f69ada3e523956,https://github.com/aleju/imgaug/commit/551601565c5927fc27a33b84c2f69ada3e523956,Update list of augmenters doc in arithmetic.py,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
593,aleju,kontakt@ajung.name,2018-09-01 09:19:26+02:00,ed2bf3318a286633bf64335932b2f73248443bd6,https://github.com/aleju/imgaug/commit/ed2bf3318a286633bf64335932b2f73248443bd6,"Reduce code duplication in GaussianBlur

This patch decreases code duplication in the
parameter parsing of
augmenters.blur.GaussianBlur by using the
parameter handling functions in parameters.py.

It also enables the sigma parameter to
convert a list of values to Choice.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
594,aleju,kontakt@ajung.name,2018-09-01 09:29:19+02:00,bd78a12c75a46957aebcf31ec9e78f5699f22d1f,https://github.com/aleju/imgaug/commit/bd78a12c75a46957aebcf31ec9e78f5699f22d1f,"Reduce code duplication in MedianBlur

This patch decreases code duplication in the
parameter parsing of
augmenters.blur.MedianBlur by using the
parameter handling functions in parameters.py.

It also enables the k parameter to convert a
list of values to Choice.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
595,aleju,kontakt@ajung.name,2018-09-01 09:46:02+02:00,7ed2707789d5c9f77a142dc3c5b1c94cf84a813f,https://github.com/aleju/imgaug/commit/7ed2707789d5c9f77a142dc3c5b1c94cf84a813f,"Reduce code duplication in BilateralBlur

This patch decreases code duplication in the
parameter parsing of
augmenters.blur.BilateralBlur by using the
parameter handling functions in parameters.py.

It also enables the parameters d, sigma_color
and sigma_space to convert lists of values to
Choices.

It also fixes some documentation errors for
that augmenter.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
596,aleju,kontakt@ajung.name,2018-09-01 09:53:03+02:00,b26e2ac8b74604a5be4aa59def073c3d8216e8fc,https://github.com/aleju/imgaug/commit/b26e2ac8b74604a5be4aa59def073c3d8216e8fc,"Reduce code duplication in Fliplr

This patch decreases code duplication in the
parameter parsing of augmenters.flip.Fliplr
by using the parameter handling functions in
parameters.py.",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['0.5 - 1e-4 < params[0].p.value < 0.5 + 1e-4'],[],[],[],[],[],[],[],[],[],[],[],[],['params[0].p.value == 1'],[],[],[],[],[],[],[],[],[],[],[],[]
597,aleju,kontakt@ajung.name,2018-09-01 09:56:51+02:00,785c9b9879f6ed59fd34f58fd291e4a6e3ba679e,https://github.com/aleju/imgaug/commit/785c9b9879f6ed59fd34f58fd291e4a6e3ba679e,"Reduce code duplication in Flipud

This patch decreases code duplication in the
parameter parsing of augmenters.flip.Flipud
by using the parameter handling functions in
parameters.py.",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['0.5 - 1e-4 < params[0].p.value < 0.5 + 1e-4'],[],[],[],[],[],[],[],[],[],[],[],[],['params[0].p.value == 1'],[],[],[],[],[],[],[],[],[],[],[],[]
598,aleju,kontakt@ajung.name,2018-09-01 11:19:26+02:00,022d4269b776cfae6c8602575a31e054a873f41d,https://github.com/aleju/imgaug/commit/022d4269b776cfae6c8602575a31e054a873f41d,"Reduce code duplication in Affine

This patch decreases code duplication in the
parameter parsing of augmenters.geometric.Affine
by using the parameter handling functions in
parameters.py.

Additionally, most of the arguments of Affine
can now be list and will automatically be
transformed to Choice.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
599,aleju,kontakt@ajung.name,2018-09-01 11:30:59+02:00,6c30a4851e87759934e23b81582a5fc323042a73,https://github.com/aleju/imgaug/commit/6c30a4851e87759934e23b81582a5fc323042a73,"Reduce code duplication in AffineCv2

This patch decreases code duplication in the
parameter parsing of
augmenters.geometric.AffineCv2 by using the
parameter handling functions in parameters.py.

Additionally, most of the arguments of
AffineCv2 can now be list and will
automatically be transformed to Choice.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
600,aleju,kontakt@ajung.name,2018-09-01 13:13:04+02:00,f61bc5c9b9a155ab17aab50e5f7af422155280bd,https://github.com/aleju/imgaug/commit/f61bc5c9b9a155ab17aab50e5f7af422155280bd,"Reduce code duplication in PiecewiseAffine

This commit decreases code duplication in the
parameter parsing of
augmenters.geometric.PiecewiseAffine by using
the parameter handling functions in
parameters.py.

It also changes the internal handling of cval
to float-likes, e.g. from DiscreteUniform to
Uniform.",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug.cval, iap.Uniform)', 'isinstance(aug.cval, iap.Uniform)']",[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval, iap.DiscreteUniform)']",[],[],[],[],[],[],[],[],[],[],[],[]
601,aleju,kontakt@ajung.name,2018-09-01 13:22:13+02:00,3693cf929a4c40a1ed795d7122484c08ca916d83,https://github.com/aleju/imgaug/commit/3693cf929a4c40a1ed795d7122484c08ca916d83,"Reduce code duplication in PerspectiveTransform

This commit decreases code duplication in the
parameter parsing of
augmenters.geometric.PerspectiveTransforme by
using the parameter handling functions in
parameters.py.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
602,aleju,kontakt@ajung.name,2018-09-01 13:31:54+02:00,99e9d993ff6babfc4fdab08be6c8f46abdc31bfd,https://github.com/aleju/imgaug/commit/99e9d993ff6babfc4fdab08be6c8f46abdc31bfd,"Reduce code duplication in ElasticTransformation

This commit decreases code duplication in the
parameter parsing of
augmenters.geometric.ElasticTransformation by
using the parameter handling functions in
parameters.py.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
603,aleju,kontakt@ajung.name,2018-09-01 13:38:54+02:00,ff97a1402877d0613158b37ca7fc781d1901f951,https://github.com/aleju/imgaug/commit/ff97a1402877d0613158b37ca7fc781d1901f951,"Reduce code duplication in Alpha

This commit decreases code duplication in the
parameter parsing of
augmenters.overlay.Alpha by using the parameter
handling functions in parameters.py.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
604,aleju,kontakt@ajung.name,2018-09-01 13:50:18+02:00,13c4c6e4806ef65e05b0af5b650e0d3b582ddd4a,https://github.com/aleju/imgaug/commit/13c4c6e4806ef65e05b0af5b650e0d3b582ddd4a,"Reduce code duplication in Superpixels

This commit decreases code duplication in the
parameter parsing of
augmenters.segmentation.Superpixels by using
the parameter handling functions in
parameters.py.

Additionally, n_segments can now be a list,
which will be interpreted as a Choice.",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['0.5 - 1e-4 < params[0].p.value < 0.5 + 1e-4'],[],[],[],[],[],[],[],[],[],[],[],[],['params[0].p.value == 1'],[],[],[],[],[],[],[],[],[],[],[],[]
605,aleju,kontakt@ajung.name,2018-09-01 14:15:10+02:00,fe4e8ad9ba8e1e9d44b972802a97d62997dddbf3,https://github.com/aleju/imgaug/commit/fe4e8ad9ba8e1e9d44b972802a97d62997dddbf3,"Reduce code duplication in PadAndCrop

This commit decreases code duplication in the
parameter parsing of
augmenters.size.PadAndCrop by using
the parameter handling functions in
parameters.py.",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['in str(exc)'],[],[],[],[],[],[],[],[],[],[],[],[],['in str(exc)'],[],[],[],[],[],[],[],[],[],[],[],[]
606,aleju,kontakt@ajung.name,2018-09-01 15:37:18+02:00,342f4ebec593fb7e0c76b022a1e4b9d35fb79053,https://github.com/aleju/imgaug/commit/342f4ebec593fb7e0c76b022a1e4b9d35fb79053,"Reduce code duplication in Sharpen

This commit decreases code duplication in the
parameter parsing of
augmenters.convolutional.Sharpen by using
the parameter handling functions in
parameters.py.

Additionally, alpha and lightness now support
lists, which are interpreted as Choices.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
607,aleju,kontakt@ajung.name,2018-09-01 15:40:56+02:00,e61cab87273085258cd1c806208b983fda5607b6,https://github.com/aleju/imgaug/commit/e61cab87273085258cd1c806208b983fda5607b6,"Reduce code duplication in Emboss

This commit decreases code duplication in the
parameter parsing of
augmenters.convolutional.Embos by using
the parameter handling functions in
parameters.py.

Additionally, alpha and strength now support
lists, which are interpreted as Choices.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
608,aleju,kontakt@ajung.name,2018-09-01 15:48:02+02:00,231ae194ccae827d3a7c46cf77fd8e8d86b32149,https://github.com/aleju/imgaug/commit/231ae194ccae827d3a7c46cf77fd8e8d86b32149,"Reduce code duplication in EdgeDetect

This commit decreases code duplication in the
parameter parsing of
augmenters.convolutional.EdgeDetect by using
the parameter handling functions in
parameters.py.

Additionally, alpha now supports lists, which
are interpreted as Choices.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
609,aleju,kontakt@ajung.name,2018-09-01 15:55:42+02:00,8b6dc3a38e9b7c53fb6c3f93dbd726b21c7785ef,https://github.com/aleju/imgaug/commit/8b6dc3a38e9b7c53fb6c3f93dbd726b21c7785ef,"Reduce code duplication in DirectedEdgeDetect

This commit decreases code duplication in the
parameter parsing of
augmenters.convolutional.DirectedEdgeDetect
by using the parameter handling function
in parameters.py.

Additionally, alpha and direction now supports
lists, which are interpreted as Choices.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
610,aleju,kontakt@ajung.name,2018-09-01 16:04:00+02:00,f293635faea75ce7cea41d5692b3abc3c6931ccb,https://github.com/aleju/imgaug/commit/f293635faea75ce7cea41d5692b3abc3c6931ccb,"Reduce code duplication in Sometimes

This commit decreases code duplication in the
parameter parsing of augmenters.meta.Sometimes
by using the parameter handling functions in
parameters.py.",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
611,aleju,kontakt@ajung.name,2018-09-01 16:09:46+02:00,a3e7bec31a1252db3e51657a9ca54effd78fffc7,https://github.com/aleju/imgaug/commit/a3e7bec31a1252db3e51657a9ca54effd78fffc7,Apply minor changes to doc of WithChannels,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
612,aleju,kontakt@ajung.name,2018-09-01 16:13:31+02:00,72ac6b1143d3976d71c2fdbf48bad6d6a04ee48a,https://github.com/aleju/imgaug/commit/72ac6b1143d3976d71c2fdbf48bad6d6a04ee48a,Apply minor changes to doc of AddToHueAndSaturation,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
613,aleju,kontakt@ajung.name,2018-09-01 16:20:00+02:00,cb36b37ffa83ddfa935893ef5e984bc904f839af,https://github.com/aleju/imgaug/commit/cb36b37ffa83ddfa935893ef5e984bc904f839af,"Reduce code duplication in ChangeColorspace

This commit decreases code duplication in the
parameter parsing of
augmenters.color.ChangeColorspace by using
the parameter handling functions in
parameters.py.

Additionally, the alpha parameter can now
be a list, which will be interpreted as a
Choice.

Additionally, the documentation of
Grayscale was updated in accordance to the
changes to ChangeColorspace.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
614,aleju,kontakt@ajung.name,2018-09-02 10:43:06+02:00,7e387d245177a9f1a6dc10cae03c4c4839a0ea23,https://github.com/aleju/imgaug/commit/7e387d245177a9f1a6dc10cae03c4c4839a0ea23,Add imageio to requirements,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
615,aleju,kontakt@ajung.name,2018-09-02 10:43:49+02:00,733c8f207b1b141c4cc906d640c9097d524185bd,https://github.com/aleju/imgaug/commit/733c8f207b1b141c4cc906d640c9097d524185bd,Make matplotlib non-optional requirement,2,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
616,aleju,kontakt@ajung.name,2018-09-02 11:09:10+02:00,4d94a18749d437eaada6be54f7b9b673a67569c7,https://github.com/aleju/imgaug/commit/4d94a18749d437eaada6be54f7b9b673a67569c7,"Replace asserts with imgaug.do_assert()

Codacy considers the use of asserts to be
insecure and complains about it. So the
remaining assert statements are replaced here
by imgaug.do_assert(), which throws exceptions
instead of using assert.",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
617,aleju,kontakt@ajung.name,2018-09-02 11:42:39+02:00,e719c8e58107b3ad5e43112e07bcbfc47e41b80a,https://github.com/aleju/imgaug/commit/e719c8e58107b3ad5e43112e07bcbfc47e41b80a,"Unify imports from parameters.py

The augmenter files so far used each two different
import styles for parameters.py simultaneously.
Some stochastic parameters were directly imported
(from parameters import Soandso), while also the
whole file was imported (import parameters). This
has now been simplified to a file import for all
augmenter files.",10,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
618,aleju,kontakt@ajung.name,2018-09-02 12:01:09+02:00,61acb2ce148bd9bc2d45bf4b12835823aad8a06c,https://github.com/aleju/imgaug/commit/61acb2ce148bd9bc2d45bf4b12835823aad8a06c,"Fix handling of empty KeypointsOnImage objects

KeypointsOnImage objects without any keypoints
associated with them (i.e. images without
keypoints) were handled in a buggy way, which
could lead to hard to predict results.
Such empty objects are now correctly
excluded from augmentation.
If no non-empty objects are in the batch,
keypoint augmentation is skipped.
A unittest covering both cases was added.",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(kpsoi_aug) == 2', 'len(kpsoi_aug[0].keypoints) == 0', 'len(kpsoi_aug[1].keypoints) == 1', 'kpsoi_aug[1].keypoints[0].x == 11', 'len(kpsoi_aug) == 2', 'len(kpsoi_aug[0].keypoints) == 0', 'len(kpsoi_aug[1].keypoints) == 0']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
619,aleju,kontakt@ajung.name,2018-09-02 12:06:28+02:00,4433cc46c083eeef85197f5c7c5ac9f83ee6916d,https://github.com/aleju/imgaug/commit/4433cc46c083eeef85197f5c7c5ac9f83ee6916d,Remove duplicate matplotlib import,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
620,aleju,kontakt@ajung.name,2018-09-02 12:08:47+02:00,42c40e76a5457fdb3c9848eb930f6fcb654189a8,https://github.com/aleju/imgaug/commit/42c40e76a5457fdb3c9848eb930f6fcb654189a8,Remove unused exception variable in try/except block,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
621,aleju,kontakt@ajung.name,2018-09-02 12:11:14+02:00,efd742642d048d005ff0cf03752afe764468955f,https://github.com/aleju/imgaug/commit/efd742642d048d005ff0cf03752afe764468955f,Remove dead code,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
622,aleju,kontakt@ajung.name,2018-09-02 13:01:08+02:00,feb13fa4ca1d2abbb4675151b4f95de0ef5db8b3,https://github.com/aleju/imgaug/commit/feb13fa4ca1d2abbb4675151b4f95de0ef5db8b3,"Fix BG-augmenter returning original batches

The BackgroundAugmenter had a bug that would
lead the original (unaugmented) batches to be
returned instead of the augmented ones.
This commit fixes that bug.
The bug did not cause problems due to a
seperate bug that led to batches not being
copied during augmentation, but instead being
changed in-place.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
623,aleju,kontakt@ajung.name,2018-09-02 13:05:44+02:00,e42c848365c41e983af6c9ebc3400cf038886707,https://github.com/aleju/imgaug/commit/e42c848365c41e983af6c9ebc3400cf038886707,"Fix augment_batches() changing batches in-place

This commit fixes a bug in
Augmenter.augment_batches() that would lead to
imgaug.Batch objects being changed in-place
instead of being first copied and then changed.",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
624,aleju,kontakt@ajung.name,2018-09-02 13:06:51+02:00,4b0650baff2040caa2c53413a50a01eb5db55b9e,https://github.com/aleju/imgaug/commit/4b0650baff2040caa2c53413a50a01eb5db55b9e,"Add tests for augment_batches()

This commit adds additional unittests for
Augmenter.augment_batches(). They test
basic functionality and whether input
batches are correctly copied before
augmentation.",1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(batches_aug[0].images_aug[0], image_flipped)', 'batches_aug[0].keypoints_aug[0].keypoints[0].x == kp_flipped.x', 'batches_aug[0].keypoints_aug[0].keypoints[0].y == kp_flipped.y', 'np.array_equal(batches_aug[0].images[0], image)', 'batches_aug[0].keypoints[0].keypoints[0].x == keypoint.x', 'batches_aug[0].keypoints[0].keypoints[0].y == keypoint.y', 'np.array_equal(batches_aug[0].images_aug, np.uint8([image_flipped]))', 'batches_aug[0].keypoints_aug[0].keypoints[0].x == kp_flipped.x', 'batches_aug[0].keypoints_aug[0].keypoints[0].y == kp_flipped.y', 'np.array_equal(batches_aug[0].images, np.uint8([image]))', 'batches_aug[0].keypoints[0].keypoints[0].x == keypoint.x', 'batches_aug[0].keypoints[0].keypoints[0].y == keypoint.y']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
625,aleju,kontakt@ajung.name,2018-09-02 13:09:52+02:00,be8315fbae0bf141e85c3a096c95c793798416af,https://github.com/aleju/imgaug/commit/be8315fbae0bf141e85c3a096c95c793798416af,Remove unused import from parameters.py,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
626,aleju,kontakt@ajung.name,2018-09-11 19:31:14+02:00,f58cfe4d6abe24e89202704e236f9ef475734e6f,https://github.com/aleju/imgaug/commit/f58cfe4d6abe24e89202704e236f9ef475734e6f,Fix imageio/matplotlib errors related to sphinx,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
627,Satoshi Tanaka,stnk20@gmail.com,2018-09-20 19:11:27+09:00,9eb9158033ba24aaa8dd4a004f60c9b25e2ffd9c,https://github.com/aleju/imgaug/commit/9eb9158033ba24aaa8dd4a004f60c9b25e2ffd9c,Add  PadUptoFixedSize and CropFixedSize,3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
628,aleju,kontakt@ajung.name,2018-09-22 10:28:53+02:00,a17f6d2e1568d635637fda4e49250e9772537056,https://github.com/aleju/imgaug/commit/a17f6d2e1568d635637fda4e49250e9772537056,"Fix #180 (use distance maps in PiecewiseAffine)

PiecewiseAffine is currently augmenting keypoints
by drawing them on images and then augmenting these
images. The drawing happens as simple squares of
size 3x3. Apparently this can in some cases lead
to the keypoint being lost during augmentation.
It is then replaced with (-1, -1). In the case
of bounding box augmentation this is an undesirable
effect.

To fix this problem, the drawing is switched from
squared 3x3 patches to inverted distance maps.
While the 3x3 patch can get lost during augmentation,
the distance map should essentially always contain
at least some close point that can be found.",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
629,aleju,kontakt@ajung.name,2018-09-22 10:53:13+02:00,bad3169eab6f23e2e6911ab4a111a90775c87b0f,https://github.com/aleju/imgaug/commit/bad3169eab6f23e2e6911ab4a111a90775c87b0f,"Replace assert with ia.do_assert()

This is done because codacy complains
about assert being a security problem.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
630,aleju,kontakt@ajung.name,2018-09-22 11:01:07+02:00,4acaa7dc48c6167c1716e39e9e78b1cea2067b4a,https://github.com/aleju/imgaug/commit/4acaa7dc48c6167c1716e39e9e78b1cea2067b4a,"Fix unused imports and unused variables

This fixes various issues reported by codacy.
Some imports were unused and removed.
In WithChannels the heatmap augmentation was
broken due to an unused heatmap variable.
In batch.deepcopy() the copying of BBs,
heatmaps and segmentation maps did not
work, the old instances of these were returned.",5,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
631,Kentaro Wada,www.kentaro.wada@gmail.com,2018-09-26 03:36:38+09:00,6c09db6f782c1913ede57c327e4fe53afd73a899,https://github.com/aleju/imgaug/commit/6c09db6f782c1913ede57c327e4fe53afd73a899,Support arbitrary dtypes in PerspectiveTransform,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
632,Kentaro Wada,www.kentaro.wada@gmail.com,2018-09-26 02:44:26+09:00,5020e636f6627f7b6036aa2a1332c33c9bbd3048,https://github.com/aleju/imgaug/commit/5020e636f6627f7b6036aa2a1332c33c9bbd3048,Add fit_output (False/True) option to Affine augmenters,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['aug.fit_output is True', 'params[8] is True  # fit_output']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
633,Kentaro Wada,www.kentaro.wada@gmail.com,2018-09-26 10:50:17+09:00,0c863a8c334b6f888b8de171f2ba848de88922e6,https://github.com/aleju/imgaug/commit/0c863a8c334b6f888b8de171f2ba848de88922e6,Add imageio to the install_requires,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
634,Satoshi Tanaka,stnk20@gmail.com,2018-10-01 10:27:52+09:00,bc8d053827f9cb708f719871c4ff32cf61bdc3ef,https://github.com/aleju/imgaug/commit/bc8d053827f9cb708f719871c4ff32cf61bdc3ef,"fix incorrect output shape of keypoints.
rename PadUptoFixedSize to PadToFixedSize.
rename CropFixedSize to CropToFixedSize.
remove CropToFixedSize's input assertion that rejects smaller images.
fix docstring comments.",3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
635,Satoshi Tanaka,stnk20@gmail.com,2018-10-01 11:22:14+09:00,f4238ae38fe4cdab4c9d9b51ac40cd8ad0b05c1c,https://github.com/aleju/imgaug/commit/f4238ae38fe4cdab4c9d9b51ac40cd8ad0b05c1c,"Revert ""fix incorrect output shape of keypoints.""

This reverts commit bc8d053827f9cb708f719871c4ff32cf61bdc3ef.",3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
636,Satoshi Tanaka,stnk20@gmail.com,2018-10-01 12:37:05+09:00,65f34571de8ace2587a67ba4bf74d0a773228457,https://github.com/aleju/imgaug/commit/65f34571de8ace2587a67ba4bf74d0a773228457,"fix incorrect output shape of keypoints.
rename PadUptoFixedSize to PadToFixedSize.
rename CropFixedSize to CropToFixedSize.
remove CropToFixedSize's input assertion that rejects smaller images.
fix docstring comments.",3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
637,aleju,kontakt@ajung.name,2018-10-02 10:09:07+02:00,cf723cadd3720a2a58d83fc19a13eb0f1a0963ce,https://github.com/aleju/imgaug/commit/cf723cadd3720a2a58d83fc19a13eb0f1a0963ce,Fix #189 (segmaps not accepting bool inputs),2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['arr.dtype.type == np.bool_', 'observed.dtype.type == np.int32', 'np.array_equal(arr, observed)', 'arr.dtype.type == np.bool_', 'observed.dtype.type == np.int32', 'np.array_equal(arr, observed)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
638,aleju,kontakt@ajung.name,2018-10-01 20:32:57+02:00,2afe1d14740ee37133183bf96c124ae051b10c6e,https://github.com/aleju/imgaug/commit/2afe1d14740ee37133183bf96c124ae051b10c6e,"Fix .shape not getting updated for non-images

When setting keep_size=False the shape attribute
(i.e. size of the underlying image) was not
updated in some augmenters, e.g. Scale.
This can cause issues as images augmented may
start to behave differently from e.g. heatmaps.
For instance, scaling a 10x10 to 100x100 and
then cropping by 10px only removes 10% of
the outer image area and hence a heatmap should
also only lose 10% of its outer heatmap area.",3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['heatmaps_aug.shape == (8, 12, 3)', 'observed.shape == base_img_padded.shape', 'observed.shape == base_img_cropped.shape']",[],[],[],[],[],[],[],[],[],[],[],[],"['heatmaps_aug.shape == base_img3d.shape', 'observed.shape == base_img.shape']",[],[],[],[],[],[],[],[],[],[],[],[]
639,aleju,kontakt@ajung.name,2018-10-02 10:50:29+02:00,b1fe289307b522bc8256bdbce1be2fa07d75d4c5,https://github.com/aleju/imgaug/commit/b1fe289307b522bc8256bdbce1be2fa07d75d4c5,"Improve manifest file

This patch improes the MANIFEST.in file so
that it includes png images (these were
previously missing), markdown files (md),
txt files and json files (used for annotations
in example functions) as well as the license.
The tests are now included too.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
640,aleju,kontakt@ajung.name,2018-08-27 20:38:17+02:00,78e3ff2439c9db341c7c3e7c0af21114909f456d,https://github.com/aleju/imgaug/commit/78e3ff2439c9db341c7c3e7c0af21114909f456d,"Improve ElasticTransformation

This commit improves various aspects about
ElasticTransformation. These cover (1) an
improved documentation, (2) various fixes for
issues related to how exactly pixels are moved
and (3) added keypoint augmentation.",4,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.sum(observed[mask_nonsquare]) < np.sum(img_nonsquare[mask_nonsquare])', 'np.sum(observed[~mask_nonsquare]) > np.sum(img_nonsquare[~mask_nonsquare])', 'd < 1e-8', 'd < 1e-8', 'd < 0.5']",[],[],[],[],[],[],[],[],[],[],[],[],"['keypoints_equal([kpsoi], observed)']",[],[],[],[],[],[],[],[],[],[],[],[]
641,aleju,kontakt@ajung.name,2018-10-02 21:04:22+02:00,f9f509d4a8153936d3c2eef06a75f2c80c389626,https://github.com/aleju/imgaug/commit/f9f509d4a8153936d3c2eef06a75f2c80c389626,"Switch imshow to cv2

This commit switches imgaug.imshow() from
matplotlib to cv2.imshow().
This is currently done because cv2 is faster
and hopefully causes less issues overall.",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
642,aleju,kontakt@ajung.name,2018-10-02 21:15:09+02:00,90f905e003c515a27c3012f08741cab480aa7b04,https://github.com/aleju/imgaug/commit/90f905e003c515a27c3012f08741cab480aa7b04,Fix errors from bad merge,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
643,aleju,kontakt@ajung.name,2018-10-02 21:18:40+02:00,6e7a66e8cfc5fa701c6f7422e0062655383544a4,https://github.com/aleju/imgaug/commit/6e7a66e8cfc5fa701c6f7422e0062655383544a4,Fix invalid variable name,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
644,aleju,kontakt@ajung.name,2018-10-02 21:19:01+02:00,f5a67c5d793a4be5c9fd96fe05a994729d8e6719,https://github.com/aleju/imgaug/commit/f5a67c5d793a4be5c9fd96fe05a994729d8e6719,Fix undefined variable,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
645,aleju,kontakt@ajung.name,2018-10-03 10:13:29+02:00,0ef318b9f4f2d84c363e8eb3208efa0ee9f715d3,https://github.com/aleju/imgaug/commit/0ef318b9f4f2d84c363e8eb3208efa0ee9f715d3,"Improve manifest

Change MANIFEST.in in the following ways:
+ Add setup.py
+ Add LICENSE
+ Add README.md
+ Add requirements.txt
+ Add MANIFEST.in
- Remove unneccessary imgaug/[*.md|*.txt]",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
646,aleju,kontakt@ajung.name,2018-10-03 20:05:39+02:00,69a4e4c054515d154ae087f0869b04105c6c801d,https://github.com/aleju/imgaug/commit/69a4e4c054515d154ae087f0869b04105c6c801d,Fix sphinx errors,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
647,aleju,kontakt@ajung.name,2018-10-03 20:08:20+02:00,70352d862ef44732ddd6b1afc04beee9a4ea1883,https://github.com/aleju/imgaug/commit/70352d862ef44732ddd6b1afc04beee9a4ea1883,Add heatmaps chapter to docs,8,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
648,aleju,kontakt@ajung.name,2018-10-03 20:09:02+02:00,dc49f458681f9e00184c1b4eb14e9bcdae8c90e3,https://github.com/aleju/imgaug/commit/dc49f458681f9e00184c1b4eb14e9bcdae8c90e3,"Fix heatmap aug in ElasticTransformation

Fix for two errors in ElasticTransformation,
both affecting augmentation for heatmaps with
different sizes than the underlying images.
* Fix heatmap shape being read out incorrectly;
  resulted in error.
* Fix generated heatmap arrays sometimes being
  slightly below/above 0.0/1.0; resulted in
  errors.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
649,aleju,kontakt@ajung.name,2018-10-04 14:12:19+02:00,5704ba5e9188a211de960c9dfc9720301a8c8619,https://github.com/aleju/imgaug/commit/5704ba5e9188a211de960c9dfc9720301a8c8619,Add doc examples for SegMaps,6,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
650,aleju,kontakt@ajung.name,2018-10-04 14:12:48+02:00,ac78b0a5afe0defb6350fb2ee06a7482d696a04d,https://github.com/aleju/imgaug/commit/ac78b0a5afe0defb6350fb2ee06a7482d696a04d,"Fix heatmap aug in ElasticTransformation

* Fix out of bounds error in ElasticTransformation
  for heatmap augmentation when heatmap height/width
  is the same as image height/width. Error came from
  interpolation.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
651,aleju,kontakt@ajung.name,2018-10-04 14:14:59+02:00,895308f1e239cbaeccde581f295bd082fc95bbad,https://github.com/aleju/imgaug/commit/895308f1e239cbaeccde581f295bd082fc95bbad,Set SegMap.draw_on_image() default alpha to 0.75,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
652,aleju,kontakt@ajung.name,2018-10-04 14:15:50+02:00,79ff74713491dcd7e6132eabbf60c05374863c48,https://github.com/aleju/imgaug/commit/79ff74713491dcd7e6132eabbf60c05374863c48,Improve styling of heatmaps doc,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
653,aleju,kontakt@ajung.name,2018-10-03 10:13:29+02:00,e838eb078146f3fc6e55e67bd4a0fa10dea84571,https://github.com/aleju/imgaug/commit/e838eb078146f3fc6e55e67bd4a0fa10dea84571,"Improve manifest

Change MANIFEST.in in the following ways:
+ Add setup.py
+ Add LICENSE
+ Add README.md
+ Add requirements.txt
+ Add MANIFEST.in
- Remove unneccessary imgaug/[*.md|*.txt]",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
654,aleju,kontakt@ajung.name,2018-10-04 21:52:26+02:00,4ac0ccb010e8a2d405bb502136bf7f603819998e,https://github.com/aleju/imgaug/commit/4ac0ccb010e8a2d405bb502136bf7f603819998e,"Add contrast adjustment augmenters

This commit adds four new augmenters for
contrast adjustments, with three of these
being based on scikit-image's functions.
+ Add GammaContrast: Changes contrast based
  on exponentiation of pixel intensities.
+ Add SigmoidContrast: Changes contrast
  based on applying a sigmoid function to
  pixel intensities.
+ Add LogContrast: Changes contrast based
  on applying a logarithn to pixel
  intensities.
+ Add LinearContrast: Changes contrast
  based on linearly stretching/contracting
  the difference between pixel intensities
  and 128. Same as ContrastNormalization
  and will replace that augmenter in the
  future.",3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
655,aleju,kontakt@ajung.name,2018-10-04 22:55:30+02:00,8e455ec586299254a4017a05bad490a03e99dbb3,https://github.com/aleju/imgaug/commit/8e455ec586299254a4017a05bad490a03e99dbb3,"Fix dtype bug in contrast aug

Contrast augmentation (not including
ContrastNormalization) suffered from a bug
that caused all input arrays to become float64
when per_channels was activated. Fixed.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
656,aleju,kontakt@ajung.name,2018-10-04 22:56:47+02:00,34fa7c95b69176e1b2e2235409ab9c1206db507f,https://github.com/aleju/imgaug/commit/34fa7c95b69176e1b2e2235409ab9c1206db507f,Add test for GammaContrast,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['img_aug.dtype.type == np.uint8', 'img3d_aug.dtype.type == np.uint8', 'np.array_equal(img_aug, skimage.exposure.adjust_gamma(img, gamma=gamma))', 'np.array_equal(img3d_aug, skimage.exposure.adjust_gamma(img3d, gamma=gamma))', 'isinstance(aug.params1d[0], iap.Uniform)', 'isinstance(aug.params1d[0].a, iap.Deterministic)', 'isinstance(aug.params1d[0].b, iap.Deterministic)', 'aug.params1d[0].a.value == 1', 'aug.params1d[0].b.value == 2', 'isinstance(aug.params1d[0], iap.Choice)', 'all([val in aug.params1d[0].a for val in [1, 2]])', 'img_aug.dtype.type == np.uint8', 'all(seen)', 'keypoints_equal([kpsoi], kpsoi_aug)', 'np.allclose(heatmaps.arr_0to1, heatmaps_aug.arr_0to1)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
657,aleju,kontakt@ajung.name,2018-10-05 10:46:36+02:00,75d062e5fcb000ac8223b92c3d534117e5c8f047,https://github.com/aleju/imgaug/commit/75d062e5fcb000ac8223b92c3d534117e5c8f047,Fix value ranges in contrast augmenters,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
658,aleju,kontakt@ajung.name,2018-10-05 10:46:49+02:00,d52ed184a4b8a933847f52746c31cff01a35b934,https://github.com/aleju/imgaug/commit/d52ed184a4b8a933847f52746c31cff01a35b934,Add test for SigmoidContrast,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['img_aug.dtype.type == np.uint8', 'img3d_aug.dtype.type == np.uint8', 'np.array_equal(img_aug, skimage.exposure.adjust_sigmoid(img, gain=gain, cutoff=cutoff))', 'np.array_equal(img3d_aug, skimage.exposure.adjust_sigmoid(img3d, gain=gain, cutoff=cutoff))', 'isinstance(aug.params1d[0], iap.Uniform)', 'isinstance(aug.params1d[0].a, iap.Deterministic)', 'isinstance(aug.params1d[0].b, iap.Deterministic)', 'np.allclose(aug.params1d[0].a.value, 0.25)', 'np.allclose(aug.params1d[0].b.value, 0.75)', 'isinstance(aug.params1d[1], iap.Uniform)', 'isinstance(aug.params1d[1].a, iap.Deterministic)', 'isinstance(aug.params1d[1].b, iap.Deterministic)', 'aug.params1d[1].a.value == 1', 'aug.params1d[1].b.value == 2', 'isinstance(aug.params1d[0], iap.Choice)', 'all([np.allclose(val, val_choice) for val, val_choice in zip([0.25, 0.75], aug.params1d[0].a)])', 'isinstance(aug.params1d[1], iap.Choice)', 'all([val in aug.params1d[1].a for val in [1, 2]])', 'img_aug.dtype.type == np.uint8', 'all(seen)', 'keypoints_equal([kpsoi], kpsoi_aug)', 'np.allclose(heatmaps.arr_0to1, heatmaps_aug.arr_0to1)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
659,aleju,kontakt@ajung.name,2018-10-05 11:05:13+02:00,2a51aef4097b1f322ebea8eb7db27e58dc800009,https://github.com/aleju/imgaug/commit/2a51aef4097b1f322ebea8eb7db27e58dc800009,Add linebreaks,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
660,aleju,kontakt@ajung.name,2018-10-05 11:34:10+02:00,52765b8ac15692721a1011663fbe3c619e24284a,https://github.com/aleju/imgaug/commit/52765b8ac15692721a1011663fbe3c619e24284a,"Improve LinearContrast

* Remove unnecessary per_channel in params1d
* Use only float64
* Reformulate documentation",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
661,aleju,kontakt@ajung.name,2018-10-05 11:35:53+02:00,553f62808bbb021ca5e82ee55fbf625152a41370,https://github.com/aleju/imgaug/commit/553f62808bbb021ca5e82ee55fbf625152a41370,"Limit init imorts from contrast

Previously __init__ in augmenters/ imported
everything from contrast.py, including private
methods/classes. Now it only imports the
actual augmenters.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
662,aleju,kontakt@ajung.name,2018-10-05 11:39:32+02:00,93d7f36f205a9b2db171d3023de04a8c139b34a9,https://github.com/aleju/imgaug/commit/93d7f36f205a9b2db171d3023de04a8c139b34a9,Add test for LinearContrast,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['img_aug.dtype.type == np.uint8', 'img3d_aug.dtype.type == np.uint8', 'np.array_equal(img_aug, skimage.exposure.adjust_log(img, gain=gain))', 'np.array_equal(img3d_aug, skimage.exposure.adjust_log(img3d, gain=gain))', 'isinstance(aug.params1d[0], iap.Uniform)', 'isinstance(aug.params1d[0].a, iap.Deterministic)', 'isinstance(aug.params1d[0].b, iap.Deterministic)', 'aug.params1d[0].a.value == 1', 'aug.params1d[0].b.value == 2', 'isinstance(aug.params1d[0], iap.Choice)', 'all([val in aug.params1d[0].a for val in [1, 2]])', 'img_aug.dtype.type == np.uint8', 'all(seen)', 'keypoints_equal([kpsoi], kpsoi_aug)', 'np.allclose(heatmaps.arr_0to1, heatmaps_aug.arr_0to1)', 'img_aug.dtype.type == np.uint8', 'img3d_aug.dtype.type == np.uint8', 'np.array_equal(img_aug, contrast_lib._adjust_linear(img, alpha=alpha))', 'np.array_equal(img3d_aug, contrast_lib._adjust_linear(img3d, alpha=alpha))', 'isinstance(aug.params1d[0], iap.Uniform)', 'isinstance(aug.params1d[0].a, iap.Deterministic)', 'isinstance(aug.params1d[0].b, iap.Deterministic)', 'aug.params1d[0].a.value == 1', 'aug.params1d[0].b.value == 2', 'isinstance(aug.params1d[0], iap.Choice)', 'all([val in aug.params1d[0].a for val in [1, 2]])', 'img_aug.dtype.type == np.uint8', 'all(seen)', 'keypoints_equal([kpsoi], kpsoi_aug)', 'np.allclose(heatmaps.arr_0to1, heatmaps_aug.arr_0to1)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
663,aleju,kontakt@ajung.name,2018-10-05 11:47:53+02:00,1b1b02075ac574a159801819a1b0a53557acdfdf,https://github.com/aleju/imgaug/commit/1b1b02075ac574a159801819a1b0a53557acdfdf,Add test for contrast._adjust_linear(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed.dtype.type == np.uint8', 'observed.shape == img.shape', 'np.array_equal(observed, img)', 'observed.dtype.type == np.uint8', 'observed.shape == img.shape', 'np.array_equal(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
664,aleju,kontakt@ajung.name,2018-10-05 17:32:30+02:00,ebceefb4da69b91a5eaa39509d711bfed03d2801,https://github.com/aleju/imgaug/commit/ebceefb4da69b91a5eaa39509d711bfed03d2801,Add _handle_pad_mode_param() function,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
665,aleju,kontakt@ajung.name,2018-10-05 20:55:10+02:00,54ea528d2ae10b732584e89256e36dd661630ff7,https://github.com/aleju/imgaug/commit/54ea528d2ae10b732584e89256e36dd661630ff7,"Improve PadToFixedSize

* Invert pad order for each axis, so that
  position=(0, 0) leads to pixels being padded
  around (0, 0) (analogously for position (1, 1)).
* Fix an off by one error.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
666,aleju,kontakt@ajung.name,2018-10-05 20:56:57+02:00,0dd64be3c158090e42528f9615bfe5bc65460099,https://github.com/aleju/imgaug/commit/0dd64be3c158090e42528f9615bfe5bc65460099,Add test for PadToFixedSize,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed.dtype.type == np.uint8', 'observed.shape == (5, 5)', 'observed.dtype.type == np.uint8', 'observed.shape == (5, 5, 1)', 'observed.dtype.type == np.uint8', 'observed.shape == (5, 5, 3)', 'observed.dtype.type == np.uint8', 'observed.shape == (5, 5, 3)', 'observed.dtype.type == np.uint8', 'observed.shape == (5, 5, 3)', 'observed.dtype.type == np.uint8', 'observed.shape == (5, 5, 3)', 'np.array_equal(observed, img5x5)', 'observed.dtype.type == np.uint8', 'observed.shape == (6, 6, 3)', 'np.array_equal(observed, img6x6)', 'observed.dtype.type == np.uint8', 'observed.shape == (4, 4)', 'np.array_equal(observed, expected)', 'observed.dtype.type == np.uint8', 'observed.shape == (3, 3)', 'np.array_equal(observed, expected)', 'observed.dtype.type == np.uint8', 'observed.shape == (3, 3)', 'np.array_equal(observed, expected)', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
667,aleju,kontakt@ajung.name,2018-10-05 21:23:17+02:00,bdabaac9073fb880571d7a8f7f3bd34af49adcb8,https://github.com/aleju/imgaug/commit/bdabaac9073fb880571d7a8f7f3bd34af49adcb8,Allow all dtypes in PadToFixedSize,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed.dtype.type == dtype', 'observed.shape == (5, 5)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
668,aleju,kontakt@ajung.name,2018-10-05 21:39:52+02:00,246183e5c3ccb36bb8cf3ada1cb5024f9776a2d7,https://github.com/aleju/imgaug/commit/246183e5c3ccb36bb8cf3ada1cb5024f9776a2d7,Enable linear_ramp end_values in imgaug.pad(),2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['arr_pad.shape == (4, 3)', 'arr_pad.dtype.type == dtype', 'arr_pad[0, 0] == 123', 'arr_pad[0, 1] == 123', 'arr_pad[0, 2] == 123', 'arr_pad[1, 0] == 0', 'arr_pad.shape == (5, 1)', 'arr_pad.dtype.type == dtype', 'arr_pad[0, 0] == 200', 'arr_pad[1, 0] == 175', 'arr_pad[2, 0] == 150', 'arr_pad[3, 0] == 125', 'arr_pad[4, 0] == 100', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype.type == dtype', '0.4 - 1e-6 < arr_pad[0, 0] < 0.4 + 1e-6', '0.4 - 1e-6 < arr_pad[0, 1] < 0.4 + 1e-6', '0.4 - 1e-6 < arr_pad[0, 2] < 0.4 + 1e-6', '0.0 - 1e-6 < arr_pad[1, 0] < 0.0 + 1e-6', 'arr_pad.shape == (5, 1)', 'arr_pad.dtype.type == dtype', '1.0 - 1e-6 < arr_pad[0, 0] < 1.0 + 1e-6', '0.9 - 1e-6 < arr_pad[1, 0] < 0.9 + 1e-6', '0.8 - 1e-6 < arr_pad[2, 0] < 0.8 + 1e-6', '0.7 - 1e-6 < arr_pad[3, 0] < 0.7 + 1e-6', '0.6 - 1e-6 < arr_pad[4, 0] < 0.6 + 1e-6']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
669,aleju,kontakt@ajung.name,2018-10-05 21:54:40+02:00,d96d1686effc63a13ad498a51f0074f6b6c31673,https://github.com/aleju/imgaug/commit/d96d1686effc63a13ad498a51f0074f6b6c31673,Use imgaug.pad() in PadToFixedSize,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
670,aleju,kontakt@ajung.name,2018-10-05 23:02:23+02:00,05ecb126ddfbb9665fcd97403e2b820c47c70011,https://github.com/aleju/imgaug/commit/05ecb126ddfbb9665fcd97403e2b820c47c70011,Add heatmap aug to PadToFixedSize; Fix padding calculation,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed.shape == (3, 3, 3)', 'np.allclose(observed.arr_0to1, expected)', 'observed.shape == (32, 32, 3)', 'np.allclose(observed.arr_0to1, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
671,aleju,kontakt@ajung.name,2018-10-06 09:36:19+02:00,04f6ac28e176dcbade235b7d75ec0c985df23ad3,https://github.com/aleju/imgaug/commit/04f6ac28e176dcbade235b7d75ec0c985df23ad3,"Extend doc of PadToFixedSize, CropToFixedSize",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
672,aleju,kontakt@ajung.name,2018-10-06 09:37:18+02:00,01564e567544f8c8d6f344d3c85e1275a43a0bed,https://github.com/aleju/imgaug/commit/01564e567544f8c8d6f344d3c85e1275a43a0bed,Allow all dtypes in CropToFixedSize,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
673,aleju,kontakt@ajung.name,2018-10-06 09:38:41+02:00,e8dcd9d8b49788148f51426db1074d1186f96afc,https://github.com/aleju/imgaug/commit/e8dcd9d8b49788148f51426db1074d1186f96afc,Remove forced np arrays in CropToFixedSize,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
674,aleju,kontakt@ajung.name,2018-10-06 10:05:08+02:00,db0a08fee0c312361243483ed6db98a5f4722cbd,https://github.com/aleju/imgaug/commit/db0a08fee0c312361243483ed6db98a5f4722cbd,Invert position in CropToFixedSize,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
675,aleju,kontakt@ajung.name,2018-10-06 10:08:25+02:00,224bb98acc4669feba5b209d8a45930a93d74606,https://github.com/aleju/imgaug/commit/224bb98acc4669feba5b209d8a45930a93d74606,Fix off by one error in CropToFixedSize,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
676,aleju,kontakt@ajung.name,2018-10-06 10:18:56+02:00,1b06dee0cf5cf4f0c05a7ed7233a9c87bc8fbdf0,https://github.com/aleju/imgaug/commit/1b06dee0cf5cf4f0c05a7ed7233a9c87bc8fbdf0,Fix off by one error in CropToFixedSize,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
677,aleju,kontakt@ajung.name,2018-10-06 11:01:06+02:00,879785c24df759ad3993c81d13a2a6f6a2abd6d7,https://github.com/aleju/imgaug/commit/879785c24df759ad3993c81d13a2a6f6a2abd6d7,Add heatmaps support to CropToFixedSize,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
678,aleju,kontakt@ajung.name,2018-10-06 11:01:40+02:00,d5d8a2f85dd2dc2caddc0c5559a760c665ced28a,https://github.com/aleju/imgaug/commit/d5d8a2f85dd2dc2caddc0c5559a760c665ced28a,Add test for CropToFixedSize,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed.dtype.type == np.uint8', 'observed.shape == (1, 1)', 'observed.dtype.type == np.uint8', 'observed.shape == (1, 1, 1)', 'observed.dtype.type == np.uint8', 'observed.shape == (1, 1, 3)', 'observed.dtype.type == dtype', 'observed.shape == (1, 1)', 'observed.dtype.type == np.uint8', 'observed.shape == (3, 5, 3)', 'observed.dtype.type == np.uint8', 'observed.shape == (5, 3, 3)', 'observed.dtype.type == np.uint8', 'observed.shape == (5, 5, 3)', 'np.array_equal(observed, img5x5)', 'observed.dtype.type == np.uint8', 'observed.shape == (4, 4, 3)', 'np.array_equal(observed, img4x4)', 'observed.dtype.type == np.uint8', 'observed.shape == (3, 3)', 'np.array_equal(observed, expected)', 'observed.dtype.type == np.uint8', 'observed.shape == (3, 3)', 'np.array_equal(observed, expected)', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed.shape == (3, 3, 3)', 'np.allclose(observed.arr_0to1, expected)', 'observed.shape == (32, 32, 3)', 'np.allclose(observed.arr_0to1, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
679,aleju,kontakt@ajung.name,2018-10-06 11:06:33+02:00,cb968d5651e5d23283f8872cc14f25bc2be46a12,https://github.com/aleju/imgaug/commit/cb968d5651e5d23283f8872cc14f25bc2be46a12,Fix bad shape in CropAndPad heatmaps aug,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
680,aleju,kontakt@ajung.name,2018-10-06 11:13:15+02:00,de4921f4439fd6d2f353d63eec131a656f3134ff,https://github.com/aleju/imgaug/commit/de4921f4439fd6d2f353d63eec131a656f3134ff,Add zero-size prevention to CropToFixedSize heatmaps aug,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
681,Kentaro Wada,www.kentaro.wada@gmail.com,2018-10-10 19:36:43+01:00,e477c9a470bbbc7a1970d1e0b38db05d2d2cb153,https://github.com/aleju/imgaug/commit/e477c9a470bbbc7a1970d1e0b38db05d2d2cb153,Make it applicable fit_output to heatmap and keypoints,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
682,Kentaro Wada,www.kentaro.wada@gmail.com,2018-10-11 19:05:11+01:00,abcc5a03dc43b3724ee457b3f1805793a6dc0b91,https://github.com/aleju/imgaug/commit/abcc5a03dc43b3724ee457b3f1805793a6dc0b91,Use tuple for returing shape by _tf_to_fit_output,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
683,Kentaro Wada,www.kentaro.wada@gmail.com,2018-10-11 19:13:43+01:00,cec4a7fb4fd5eaa0af14ac0c1bb1d7137c74d960,https://github.com/aleju/imgaug/commit/cec4a7fb4fd5eaa0af14ac0c1bb1d7137c74d960,Add test of fit_output=True with keypoints and heatmaps,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'np.array_equal(observed.get_arr(), expected.get_arr())']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
684,aleju,kontakt@ajung.name,2018-10-14 21:50:13+02:00,8114a418d50228171e5795c08b3c673344f23f99,https://github.com/aleju/imgaug/commit/8114a418d50228171e5795c08b3c673344f23f99,Rewrite installation part of readme and docs,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
685,aleju,kontakt@ajung.name,2018-10-15 13:24:19+02:00,3973e0d2591b2554e96da0a22b2d723a71d2423e,https://github.com/aleju/imgaug/commit/3973e0d2591b2554e96da0a22b2d723a71d2423e,"Switch import from contrast to all

Change import from contrast.py in
augmenters/__init__.py to * instead of
selective, as * should not import private
methods anyways.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
686,aleju,kontakt@ajung.name,2018-10-15 13:31:16+02:00,61b9ced3e2c5b53082b2c48398b73b5b107ae8ca,https://github.com/aleju/imgaug/commit/61b9ced3e2c5b53082b2c48398b73b5b107ae8ca,Add six to requirements,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
687,aleju,kontakt@ajung.name,2018-10-15 19:34:01+02:00,e76963053fb2fcc36e7021df280b386e2555a831,https://github.com/aleju/imgaug/commit/e76963053fb2fcc36e7021df280b386e2555a831,Fix deadlocks in BatchLoader,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['loader.all_finished()', 'loader.all_finished()']",[],[],[],[],[],[],[],[],[],[],[],[],"['loader.all_finished', 'loader.all_finished']",[],[],[],[],[],[],[],[],[],[],[],[]
688,Gábor Vecsei,vecseigabor.x@gmail.com,2018-10-19 19:04:41+02:00,412b06c57cebb88643310c853a44f5639a29bc25,https://github.com/aleju/imgaug/commit/412b06c57cebb88643310c853a44f5639a29bc25,wrap and unwrap bounding boxes with the corresponding objects inside imgaug,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
689,Gábor Vecsei,vecseigabor.x@gmail.com,2018-10-24 19:56:11+02:00,64af961a521a0b0b4e32032a8078a9a4e54c4ec4,https://github.com/aleju/imgaug/commit/64af961a521a0b0b4e32032a8078a9a4e54c4ec4,PR requested changes,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
690,aleju,kontakt@ajung.name,2018-10-25 18:38:43+02:00,42ad7ba6df35cd38a013534a59fd5655b5ea6507,https://github.com/aleju/imgaug/commit/42ad7ba6df35cd38a013534a59fd5655b5ea6507,Allow BBs with zero height and/or width (#192),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
691,aleju,kontakt@ajung.name,2018-10-25 20:08:31+02:00,1fe0900fcc1bda11157980c10c39d5c98ac77c39,https://github.com/aleju/imgaug/commit/1fe0900fcc1bda11157980c10c39d5c98ac77c39,"Add more checks for parameters (#198)

+ Add several new asserts to make sure that
  arguments have their expected datatypes.
  This was especially added for the arguments
  in meta.Augmenter and meta.Sequential.
* Fix two errors in the tests related to bad
  argument datatypes in connection with OneOf.",3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['ia.is_single_bool(value) == True', 'ia.is_single_bool(value) == False']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
692,aleju,kontakt@ajung.name,2018-10-11 19:27:05+02:00,00e8ae4aee6a9da5520798646762e2a24b02188e,https://github.com/aleju/imgaug/commit/00e8ae4aee6a9da5520798646762e2a24b02188e,"Add Polygon class

This patch adds a class that represents polygons.
It will be used for polygon augmentation in the
future.
It also adds the tests for the class and a second
class to represent groups of polygons.",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,272,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['poly.exterior.dtype.type == np.float32', 'np.allclose(', 'poly.exterior.dtype.type == np.float32', 'np.allclose(', 'poly.exterior.dtype.type == np.float32', 'np.allclose(', 'poly.exterior.dtype.type == np.float32', 'np.allclose(', 'poly.exterior.dtype.type == np.float32', 'np.allclose(', 'poly.exterior.dtype.type == np.float32', 'poly.exterior.shape == (0, 2)', 'poly.exterior.dtype.type == np.float32', 'poly.exterior.shape == (0, 2)', 'got_exception', 'poly.label is None', 'poly.label == ', 'poly.xx.dtype.type == np.float32', 'np.allclose(poly.xx, np.float32([0.0, 1.0, 1.5, 4.1, 2.9]))', 'poly.xx.dtype.type == np.float32', 'poly.xx.shape == (0,)', 'poly.yy.dtype.type == np.float32', 'np.allclose(poly.yy, np.float32([0.0, 1.0, 1.5, 4.1, 2.9]))', 'poly.yy.dtype.type == np.float32', 'poly.yy.shape == (0,)', 'poly.xx_int.dtype.type == np.int32', 'np.allclose(poly.xx_int, np.int32([0, 1, 2, 4, 3]))', 'poly.xx_int.dtype.type == np.int32', 'poly.xx_int.shape == (0,)', 'poly.yy_int.dtype.type == np.int32', 'np.allclose(poly.yy_int, np.int32([0, 1, 2, 4, 3]))', 'poly.yy_int.dtype.type == np.int32', 'poly.yy_int.shape == (0,)', 'poly.is_valid', 'not poly.is_valid', 'not poly.is_valid', 'not poly.is_valid', 'not poly.is_valid', 'poly.is_valid', 'poly.area == 1', '1.0 - 1e-8 < poly.area < 1.0 + 1e-8', 'poly.area == 2', '2.0 - 1e-8 < poly.area < 2.0 + 1e-8', '1/2 - 1e-8 < poly.area < 1/2 + 1e-8', 'poly_proj.exterior.dtype.type == np.float32', 'poly_proj.exterior.shape == (4, 2)', 'np.allclose(', 'poly_proj.exterior.dtype.type == np.float32', 'poly_proj.exterior.shape == (4, 2)', 'np.allclose(', 'poly_proj.exterior.dtype.type == np.float32', 'poly_proj.exterior.shape == (4, 2)', 'np.allclose(', 'poly_proj.exterior.dtype.type == np.float32', 'poly_proj.exterior.shape == (0, 2)', 'np.array_equal(mask, np.array([True, True, True, True], dtype=bool))', 'np.array_equal(mask, np.array([True, False, False, False], dtype=bool))', 'np.array_equal(mask, np.array([True, False, False, False], dtype=bool))', 'np.array_equal(mask, np.array([True, False, False, False], dtype=bool))', 'poly.is_fully_within_image((1, 1, 3))', 'poly.is_fully_within_image((1, 1))', 'poly.is_fully_within_image(np.zeros((1, 1, 3), dtype=np.uint8))', 'not poly.is_fully_within_image((1, 1, 3))', 'not poly.is_fully_within_image((1, 1))', 'not poly.is_fully_within_image(np.zeros((1, 1, 3), dtype=np.uint8))', 'not poly.is_fully_within_image((1, 1, 3))', 'poly.is_partly_within_image((1, 1, 3))', 'poly.is_partly_within_image((1, 1))', 'poly.is_partly_within_image(np.zeros((1, 1, 3), dtype=np.uint8))', 'poly.is_partly_within_image((1, 1, 3))', 'poly.is_partly_within_image((1, 1))', 'poly.is_partly_within_image(np.zeros((1, 1, 3), dtype=np.uint8))', 'not poly.is_partly_within_image((1, 1, 3))', 'not poly.is_partly_within_image((1, 1))', 'not poly.is_partly_within_image(np.zeros((1, 1, 3), dtype=np.uint8))', 'not poly.is_out_of_image(shape, partly=False, fully=False)', 'not poly.is_out_of_image(shape, partly=True, fully=False)', 'not poly.is_out_of_image(shape, partly=False, fully=True)', 'not poly.is_out_of_image(shape, partly=True, fully=True)', 'not poly.is_out_of_image(shape, partly=False, fully=False)', 'poly.is_out_of_image(shape, partly=True, fully=False)', 'not poly.is_out_of_image(shape, partly=False, fully=True)', 'poly.is_out_of_image(shape, partly=True, fully=True)', 'not poly.is_out_of_image(shape, partly=False, fully=False)', 'not poly.is_out_of_image(shape, partly=True, fully=False)', 'poly.is_out_of_image(shape, partly=False, fully=True)', 'poly.is_out_of_image(shape, partly=True, fully=True)', 'isinstance(multipoly_clipped, ia.MultiPolygon)', 'len(multipoly_clipped.geoms) == 1', 'multipoly_clipped.geoms[0].exterior_almost_equals(poly.exterior)', 'multipoly_clipped.geoms[0].label is None', 'isinstance(multipoly_clipped, ia.MultiPolygon)', 'len(multipoly_clipped.geoms) == 1', 'multipoly_clipped.geoms[0].exterior_almost_equals(np.float32([', 'multipoly_clipped.geoms[0].label == ', 'isinstance(multipoly_clipped, ia.MultiPolygon)', 'len(multipoly_clipped.geoms) == 2', 'multipoly_clipped.geoms[0].exterior_almost_equals(np.float32([', 'multipoly_clipped.geoms[0].label == ', 'multipoly_clipped.geoms[1].exterior_almost_equals(np.float32([', 'multipoly_clipped.geoms[0].label == ', 'np.allclose(poly.exterior, np.float32([', 'np.allclose(poly_shifted.exterior, np.float32([', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))  # draw did not change original image (copy=True)', 'np.all(image_poly[2:9, 2:3, c_idx] == np.zeros((7, 1), dtype=np.uint8) + value)  # left boundary', 'np.all(image_poly[2:9, 8:9, c_idx] == np.zeros((7, 1), dtype=np.uint8) + value)  # right boundary', 'np.all(image_poly[2:3, 2:9, c_idx] == np.zeros((1, 7), dtype=np.uint8) + value)  # top boundary', 'np.all(image_poly[8:9, 2:9, c_idx] == np.zeros((1, 7), dtype=np.uint8) + value)  # bottom boundary', 'np.all(image_poly[3:8, 3:8, :] == expected)', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))  # draw did not change original image (copy=True)', 'np.all(image_poly[2+5:, 2:3, c_idx] == np.zeros((3, 1), dtype=np.uint8) + value)  # left boundary', 'np.all(image_poly[2+5:, 8:9, c_idx] == np.zeros((3, 1), dtype=np.uint8) + value)  # right boundary', 'np.all(image_poly[2+5:3+5, 2:9, c_idx] == np.zeros((1, 7), dtype=np.uint8) + value)  # top boundary', 'np.all(image_poly[3+5:, 3:8, :] == expected)', 'in str(exc)', 'not got_exception  # only polygons fully outside of the image plane lead to exceptions', 'np.array_equal(image_poly, image)', 'in str(exc)', 'got_exception', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))  # draw did not change original image (copy=True)', 'np.all(image_poly[2:9, 2:3, c_idx] == np.zeros((7, 1), dtype=np.uint8) + value)  # left boundary', 'np.all(image_poly[3:8, 3:8, :] == image[3:8, 3:8, :])', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))  # draw did not change original image (copy=True)', 'np.all(image_poly[2:8, 2:8, :] == expected)', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.all(image_cp == image_poly)', 'not np.all(image_cp == image)', 'np.all(image_poly[2:9, 2:3, c_idx] == np.zeros((6, 1, 3), dtype=np.uint8) + value)  # left boundary', 'np.all(image_cp[2:9, 2:3, c_idx] == np.zeros((6, 1, 3), dtype=np.uint8) + value)  # left boundary', 'np.all(image_poly[3:8, 3:8, :] == expected)', 'np.all(image_cp[3:8, 3:8, :] == expected)', 'np.array_equal(subimage, image[0:10, 0:10, :])', 'np.array_equal(subimage, image[1:9, 1:9, :])', 'np.array_equal(subimage, expected)', 'np.array_equal(subimage, expected)', 'np.array_equal(subimage, expected)', 'np.array_equal(subimage, image[0:10, 0:10, :])', 'np.array_equal(subimage, image[0:9, 0:9, :])', 'np.array_equal(subimage, image[1:9, 1:9, :])', 'np.allclose(poly.exterior, poly_reordered.exterior)', 'np.allclose(poly.exterior, np.float32([[0, 0], [1, 0], [1, 1]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [1, 1], [0, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 1], [0, 0], [1, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [1, 1], [0, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [1, 1], [0, 0]]))', 'in str(exc)', 'got_exception', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [0, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[0, 0]]))', 'np.allclose(poly.exterior, poly_reordered.exterior)', 'np.allclose(poly.exterior, np.float32([[0, 0], [1, 0], [1, 1]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [1, 1], [0, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 1], [0, 0], [1, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [0, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[0, 0]]))', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'np.allclose(ls.coords, np.float32([[0, 0], [1, 0], [1, 1]]))', 'np.allclose(ls.coords, np.float32([[0, 0], [1, 0]]))', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'np.allclose(ls.coords, np.float32([[0, 0], [1, 0], [1, 1], [0, 0]]))', 'np.allclose(ls.coords, np.float32([[0, 0], [0.5, 0], [1, 0], [1, 0.5], [1, 1], [0.5, 0.5]]))', 'np.allclose(ls.coords, np.float32([', 'np.allclose(ls.coords, np.float32([[0, 0], [0.5, 0], [1, 0], [1, 0.5], [1, 1], [0.5, 0.5], [0, 0]]))', 'x_exp - 1e-8 < x_obs < x_exp + 1e-8', 'y_exp - 1e-8 < y_obs < y_exp + 1e-8', '0 - 1e-8 < bb.x1 < 0 + 1e-8', '0 - 1e-8 < bb.y1 < 0 + 1e-8', '1 - 1e-8 < bb.x2 < 1 + 1e-8', '1 - 1e-8 < bb.y2 < 1 + 1e-8', '0 - 1e-8 < bb.x1 < 0 + 1e-8', '0 - 1e-8 < bb.y1 < 0 + 1e-8', '1 - 1e-8 < bb.x2 < 1 + 1e-8', '1 - 1e-8 < bb.y2 < 1 + 1e-8', '0.5 - 1e-8 < bb.x1 < 0.5 + 1e-8', '0.1 - 1e-8 < bb.y1 < 0.1 + 1e-8', '2.0 - 1e-8 < bb.x2 < 2.0 + 1e-8', '1.0 - 1e-8 < bb.y2 < 1.0 + 1e-8', 'x_exp - 1e-8 < x_obs < x_exp + 1e-8', 'y_exp - 1e-8 < y_obs < y_exp + 1e-8', 'poly.exterior.dtype.type == poly_cp.exterior.dtype.type', 'poly.exterior.shape == poly_cp.exterior.shape', 'np.allclose(poly.exterior, poly_cp.exterior)', 'poly.label == poly_cp.label', 'poly.exterior.dtype.type == poly_cp.exterior.dtype.type', 'poly.exterior.shape == poly_cp.exterior.shape', 'np.allclose(poly.exterior, poly_cp.exterior)', 'poly.label == poly_cp.label', 'poly.exterior.dtype.type == poly_cp.exterior.dtype.type', 'poly.exterior.shape == poly_cp.exterior.shape', 'not np.allclose(poly.exterior, poly_cp.exterior)', 'not poly.label == poly_cp.label', 's == ', 's == ', 's == ', 's == ', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-3)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-9)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-9)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-9)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-4, interpolate=0)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-4, interpolate=1)', 'poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
693,aleju,kontakt@ajung.name,2018-10-26 17:54:55+02:00,507e9ee8d49f6456999ab699e4d953ed6b05465b,https://github.com/aleju/imgaug/commit/507e9ee8d49f6456999ab699e4d953ed6b05465b,Update dependencies based on new polygon class,4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
694,aleju,kontakt@ajung.name,2018-10-26 18:35:15+02:00,69ac72ef4f2b9d5de62c7813dcf3427ca4a604b5,https://github.com/aleju/imgaug/commit/69ac72ef4f2b9d5de62c7813dcf3427ca4a604b5,Fix inconsistent rounding in py2 vs py3+,4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
695,aleju,kontakt@ajung.name,2018-11-10 17:27:59+01:00,fd9706106f80e05360969b8063f7a56ff2015378,https://github.com/aleju/imgaug/commit/fd9706106f80e05360969b8063f7a56ff2015378,"Split test.py into multiple test_*.py files

test.py became too large, so it is now split
into multiple files, one for each file in imgaug/.
The old test.py file can still be executed in the
same way as before and will automatically call
the test_*.py files.
This change does not yet switch to unittest, which
will be done in another commit.",17,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4144,0,0,0,0,0,0,0,0,0,0,0,0,4144,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, expected)', 'not np.array_equal(observed, images)', 'not np.array_equal(observed, images)', 'not array_equal_lists(observed, images_list)', 'not array_equal_lists(observed, images_list)', 'keypoints_equal(observed, keypoints)', 'keypoints_equal(observed, keypoints)', 'np.min(values) == 0', '0.1 < np.std(values) / 255.0 < 0.4', '54 < np.average(values) < 74 # loc=0.25 should be around 255*0.25=64 average', 'nb_changed_aug >= int(nb_iterations * 0.95)', 'nb_changed_aug_det == 0', 'False', '75 < seen[0] < 125', '75 < seen[1] < 125', 'nb_changed_aug >= int(nb_iterations * 0.95)', 'nb_changed_aug_det == 0', 'seen[2] <= 5', '75 < seen[0] < 125', '75 < seen[1] < 125', 'got_exception', 'got_exception', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'not np.array_equal(observed, images)', '0.35 <= (1 - percent_nonzero) <= 0.65', 'not np.array_equal(observed, images)', '0.35 <= (1 - percent_nonzero) <= 0.65', 'not array_equal_lists(observed, images_list)', '0.35 <= (1 - percent_nonzero) <= 0.65', 'not array_equal_lists(observed, images_list)', '0.35 <= (1 - percent_nonzero) <= 0.65', 'keypoints_equal(observed, keypoints)', 'keypoints_equal(observed, keypoints)', 'nb_changed_aug >= int(nb_iterations * 0.95)', 'nb_changed_aug_det == 0', 'seen[2] <= 10', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'all([v in [0, 100] for v in averages])', '50 - 20 < np.average(averages) < 50 + 20', 'all([v in [0, 100] for v in averages])', '50 - 20 < np.average(averages) < 50 + 20', 'found', 'seen[2] <= 10', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception', 'got_exception', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'nb_changed_aug >= int(nb_iterations * 0.95)', 'nb_changed_aug_det == 0', '0 in uq', '2 in uq', 'len(uq) == 2', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'params[0].value == 1', 'params[1].value == 0', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'nb_changed_aug >= int(nb_iterations * 0.95)', 'nb_changed_aug_det == 0', 'nb_different > 0.95 * (nb_different + nb_same)', 'all([(value in values) for value in [0, 1, 2, 3]])', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'params[0].value == 1', 'params[1].value == 0', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', '0.45 <= p <= 0.55', 'seen[2] <= 10', '150 < seen[0] < 250', '150 < seen[1] < 250', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', '0.45 <= p100 <= 0.55', '0.45 <= p200 <= 0.55', 'all([(value in values) for value in [0, 1, 2, 3]])', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'isinstance(params[2], iap.Deterministic)', '0.5 - 1e-6 < params[0].p.value < 0.5 + 1e-6', 'params[1].value == 2', 'params[2].value == 0', '0.4 < p < 0.6', 'nb_pepper > 200', 'nb_salt > 200', '0.4 < p < 0.6', '0.4 < np.mean(ps2) < 0.6', 'np.std(ps1)*1.5 < np.std(ps2)', 'seen[2] < 10', '75 < seen[0] < 125', '75 < seen[1] < 125', 'density - tolerance < density < density + tolerance', 'got_exception', 'got_exception', '0.4 < p < 0.6', 'np.all(observed >= 127)  # Salt() occasionally replaces with 127,', 'nb_pepper == 0', 'nb_salt > 200', '0.4 < p < 0.6', '0.4 < np.mean(ps2) < 0.6', 'np.std(ps1)*1.5 < np.std(ps2)', 'seen[2] < 10', '75 < seen[0] < 125', '75 < seen[1] < 125', 'density - tolerance < density < density + tolerance', 'got_exception', 'got_exception', '0.4 < p < 0.6', 'np.all(observed <= 128)', 'nb_pepper > 200', 'nb_salt == 0', '0.4 < p < 0.6', '0.4 < np.mean(ps2) < 0.6', 'np.std(ps1)*1.5 < np.std(ps2)', 'seen[2] < 10', '75 < seen[0] < 125', '75 < seen[1] < 125', 'density - tolerance < density < density + tolerance', 'got_exception', 'got_exception', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', '100 + 1 <= np.average(observed) <= 100 + 10', '100 + 1 <= np.average(observed) <= 100 + 10', '100 - 3 <= np.average(observed) <= 100 + 3', '100 - 3 <= np.average(observed) <= 100 + 3', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'nb_changed_aug >= int(nb_iterations * 0.7)', 'nb_changed_aug_det == 0', '0 in uq', '1 in uq', 'len(uq) == 2', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'params[0].value == 1', 'params[1].value == 0', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.min(observed) >= 100 + 1', 'np.max(observed) <= 100 + 10', 'np.min(observed) >= 100 + 1', 'np.max(observed) <= 100 + 10', 'np.min(observed) >= 100 - 3', 'np.max(observed) <= 100 + 3', 'np.min(observed) >= 100 - 3', 'np.max(observed) <= 100 + 3', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'nb_changed_aug >= int(nb_iterations * 0.7)', 'nb_changed_aug_det == 0', 'nb_different > 0.9 * (nb_different + nb_same)', 'all([(value in values) for value in [0, 1, 2, 3]])', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'params[0].value == 1', 'params[1].value == 0', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', '0.75 <= pinv <= 0.85', '0.75 <= pinv <= 0.85', 'len(np.unique(observed)) == 2', 'False', '300 - 75 < seen[0] < 300 + 75', '700 - 75 < seen[1] < 700 + 75', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', '0.5 - 1e-4 < params[0].p.value < 0.5 + 1e-4', 'params[1].value == 0', 'params[2] == 10', 'params[3] == 20', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected1) or np.array_equal(observed, expected2)', 'p_changed > 0.5', 'len(uq) > 5', '300 - 75 < seen[0] < 300 + 75', '700 - 75 < seen[1] < 700 + 75', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'params[0].value == 1', 'params[1].value == 0', 'np.array_equal(observed, expected)', '100 < observed[0][1, 1] < 255', '(observed[0][outer_pixels[0], outer_pixels[1]] > 0).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 50).all()', '100 < observed[0][1, 1] < 255', '(observed[0][outer_pixels[0], outer_pixels[1]] > 0).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 50).all()', '100 < observed[0][1, 1] < 255', '(observed[0][outer_pixels[0], outer_pixels[1]] > 0).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 50).all()', '100 < observed[0][1, 1] < 255', '(observed[0][outer_pixels[0], outer_pixels[1]] > 0).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 50).all()', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'nb_changed_aug >= int(nb_iterations * 0.8)', 'nb_changed_aug_det == 0', 'np.array_equal(observed, base_img)', 'np.array_equal(observed, blur3x3)', 'np.array_equal(observed, blur5x5)', '0.4 <= p_seen[0] <= 0.6', '0.4 <= p_seen[1] <= 0.6', '0.23 <= p_seen[0] <= 0.43', '0.23 <= p_seen[1] <= 0.43', '0.23 <= p_seen[2] <= 0.43', '0.4 <= p_seen[0] <= 0.6', '0.4 <= p_seen[1] <= 0.6', 'all([v > 0 for v in nb_seen.values()])', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'np.array_equal(observed, base_img)', 'np.array_equal(observed, blur3x3)', 'np.array_equal(observed, blur5x5)', 'all(seen)', 'all(seen)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'np.allclose(observed, expected)', 'np.all(diff <= 3)', 'not np.array_equal(expected_imgs[0], expected_imgs[1])', 'not np.array_equal(expected_imgs[1], expected_imgs[2])', 'not np.array_equal(expected_imgs[0], expected_imgs[2])', 'np.sum(list(seen.values())) == nb_iterations', 'all([n_exp - n_exp_tol < v < n_exp + n_exp_tol for v in seen.values()])', 'np.allclose(observed, expected)', 'np.allclose(observed, expected.astype(np.uint8))', 'np.allclose(observed, expected.astype(np.uint8))', '0 - 1e-4 < min(distances) < 0.1', '0.4 < np.average(distances) < 0.6', '0.9 < max(distances) < 1.0 + 1e-4', 'density_expected - density_tolerance < density < density_expected + density_tolerance', 'img_aug.dtype.type == np.uint8', 'img3d_aug.dtype.type == np.uint8', 'np.array_equal(img_aug, skimage.exposure.adjust_gamma(img, gamma=gamma))', 'np.array_equal(img3d_aug, skimage.exposure.adjust_gamma(img3d, gamma=gamma))', 'isinstance(aug.params1d[0], iap.Uniform)', 'isinstance(aug.params1d[0].a, iap.Deterministic)', 'isinstance(aug.params1d[0].b, iap.Deterministic)', 'aug.params1d[0].a.value == 1', 'aug.params1d[0].b.value == 2', 'isinstance(aug.params1d[0], iap.Choice)', 'all([val in aug.params1d[0].a for val in [1, 2]])', 'img_aug.dtype.type == np.uint8', 'all(seen)', 'keypoints_equal([kpsoi], kpsoi_aug)', 'np.allclose(heatmaps.arr_0to1, heatmaps_aug.arr_0to1)', 'img_aug.dtype.type == np.uint8', 'img3d_aug.dtype.type == np.uint8', 'np.array_equal(img_aug, skimage.exposure.adjust_sigmoid(img, gain=gain, cutoff=cutoff))', 'np.array_equal(img3d_aug, skimage.exposure.adjust_sigmoid(img3d, gain=gain, cutoff=cutoff))', 'isinstance(aug.params1d[0], iap.Uniform)', 'isinstance(aug.params1d[0].a, iap.Deterministic)', 'isinstance(aug.params1d[0].b, iap.Deterministic)', 'np.allclose(aug.params1d[0].a.value, 0.25)', 'np.allclose(aug.params1d[0].b.value, 0.75)', 'isinstance(aug.params1d[1], iap.Uniform)', 'isinstance(aug.params1d[1].a, iap.Deterministic)', 'isinstance(aug.params1d[1].b, iap.Deterministic)', 'aug.params1d[1].a.value == 1', 'aug.params1d[1].b.value == 2', 'isinstance(aug.params1d[0], iap.Choice)', 'all([np.allclose(val, val_choice) for val, val_choice in zip([0.25, 0.75], aug.params1d[0].a)])', 'isinstance(aug.params1d[1], iap.Choice)', 'all([val in aug.params1d[1].a for val in [1, 2]])', 'img_aug.dtype.type == np.uint8', 'all(seen)', 'keypoints_equal([kpsoi], kpsoi_aug)', 'np.allclose(heatmaps.arr_0to1, heatmaps_aug.arr_0to1)', 'img_aug.dtype.type == np.uint8', 'img3d_aug.dtype.type == np.uint8', 'np.array_equal(img_aug, skimage.exposure.adjust_log(img, gain=gain))', 'np.array_equal(img3d_aug, skimage.exposure.adjust_log(img3d, gain=gain))', 'isinstance(aug.params1d[0], iap.Uniform)', 'isinstance(aug.params1d[0].a, iap.Deterministic)', 'isinstance(aug.params1d[0].b, iap.Deterministic)', 'aug.params1d[0].a.value == 1', 'aug.params1d[0].b.value == 2', 'isinstance(aug.params1d[0], iap.Choice)', 'all([val in aug.params1d[0].a for val in [1, 2]])', 'img_aug.dtype.type == np.uint8', 'all(seen)', 'keypoints_equal([kpsoi], kpsoi_aug)', 'np.allclose(heatmaps.arr_0to1, heatmaps_aug.arr_0to1)', 'img_aug.dtype.type == np.uint8', 'img3d_aug.dtype.type == np.uint8', 'np.array_equal(img_aug, contrast_lib._adjust_linear(img, alpha=alpha))', 'np.array_equal(img3d_aug, contrast_lib._adjust_linear(img3d, alpha=alpha))', 'isinstance(aug.params1d[0], iap.Uniform)', 'isinstance(aug.params1d[0].a, iap.Deterministic)', 'isinstance(aug.params1d[0].b, iap.Deterministic)', 'aug.params1d[0].a.value == 1', 'aug.params1d[0].b.value == 2', 'isinstance(aug.params1d[0], iap.Choice)', 'all([val in aug.params1d[0].a for val in [1, 2]])', 'img_aug.dtype.type == np.uint8', 'all(seen)', 'keypoints_equal([kpsoi], kpsoi_aug)', 'np.allclose(heatmaps.arr_0to1, heatmaps_aug.arr_0to1)', 'observed.dtype.type == np.uint8', 'observed.shape == img.shape', 'np.array_equal(observed, img)', 'observed.dtype.type == np.uint8', 'observed.shape == img.shape', 'np.array_equal(observed, expected)', 'np.array_equal(observed, img)', 'np.array_equal(observed, img)', 'np.array_equal(observed, img)', 'np.array_equal(observed, img)', 'np.array_equal(observed, img)', 'np.array_equal(observed, img)', 'np.array_equal(observed, 2*img)', 'np.array_equal(observed, 2*img)', 'np.array_equal(observed, 2*img3)', 'np.array_equal(observed, 2*img3)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'found', 'all(seen)', 'in str(exc)', 'got_exception', 'np.array_equal(params[0], matrix)', 'params[1] == ', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected.astype(np.uint8))', 'np.allclose(observed, expected)', 'np.allclose(observed, expected1) or np.allclose(observed, expected2)', 'in str(exc)', 'got_exception', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected1) or np.allclose(observed, expected2)', 'in str(exc)', 'got_exception', '0 - 1e-4 < min(distances) < 0.1', '0.4 < np.average(distances) < 0.6', '0.9 < max(distances) < 1.0 + 1e-4', 'density_expected - density_tolerance < density < density_expected + density_tolerance', '0 - 1e-4 < min(distances) < 0.1', '0.4 < np.average(distances) < 0.6', '0.9 < max(distances) < 1.0 + 1e-4', 'density_expected - density_tolerance < density < density_expected + density_tolerance', '_allclose(observed, expected)', '_allclose(observed, expected)', '_allclose(observed, expected.astype(np.uint8))', '_allclose(observed, expected)', '_allclose(observed, expected1) or np.allclose(observed, expected2)', 'in str(exc)', 'got_exception', '_allclose(observed, expected)', '_allclose(observed, expected)', '_allclose(observed, expected)', '_allclose(observed, expected1) or np.allclose(observed, expected2)', 'in str(exc)', 'got_exception', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), expected)', 'int(nb_iterations * 0.3) <= nb_images_flipped <= int(nb_iterations * 0.7)', 'int(nb_iterations * 0.3) <= nb_keypoints_flipped <= int(nb_iterations * 0.7)', 'nb_images_flipped_det in [0, nb_iterations]', 'nb_keypoints_flipped_det in [0, nb_iterations]', 'int(nb_iterations * 0.3) <= val <= int(nb_iterations * 0.7)', 'val in [0, nb_iterations]', 'False', '700 - 75 < seen[0] < 700 + 75', '300 - 75 < seen[1] < 300 + 75', 'got_exception', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', '0.5 - 1e-4 < params[0].p.value < 0.5 + 1e-4', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), expected)', 'int(nb_iterations * 0.3) <= nb_images_flipped <= int(nb_iterations * 0.7)', 'int(nb_iterations * 0.3) <= nb_keypoints_flipped <= int(nb_iterations * 0.7)', 'nb_images_flipped_det in [0, nb_iterations]', 'nb_keypoints_flipped_det in [0, nb_iterations]', 'int(nb_iterations * 0.3) <= val <= int(nb_iterations * 0.7)', 'val in [0, nb_iterations]', 'False', '700 - 75 < seen[0] < 700 + 75', '300 - 75 < seen[1] < 300 + 75', 'got_exception', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', '0.5 - 1e-4 < params[0].p.value < 0.5 + 1e-4', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'array_equal_lists(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y > 2', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y > 2', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y == 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y == 2', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y == 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y == 2', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0].keypoints[0].x == 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x == 2', 'observed[0].keypoints[2].y > 2', 'observed[0].keypoints[0].x == 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x == 2', 'observed[0].keypoints[2].y > 2', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'nb_changed_aug >= int(nb_iterations * 0.8)', 'nb_changed_aug_det == 0', 'isinstance(aug.scale, iap.Uniform)', 'isinstance(aug.scale.a, iap.Deterministic)', 'isinstance(aug.scale.b, iap.Deterministic)', '0.7 - 1e-8 < aug.scale.a.value < 0.7 + 1e-8', '0.9 - 1e-8 < aug.scale.b.value < 0.9 + 1e-8', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'len(observed_aug[0].nonzero()[0]) == 1', 'len(observed_aug_det[0].nonzero()[0]) == 1', 'nb_changed_aug >= int(nb_iterations * 0.7)', 'nb_changed_aug_det == 0', '(centers_aug > int(nb_iterations * (1/9 * 0.6))).all()', '(centers_aug < int(nb_iterations * (1/9 * 1.4))).all()', 'isinstance(aug.translate, iap.Uniform)', 'isinstance(aug.translate.a, iap.Deterministic)', 'isinstance(aug.translate.b, iap.Deterministic)', '0.7 - 1e-8 < aug.translate.a.value < 0.7 + 1e-8', '0.9 - 1e-8 < aug.translate.b.value < 0.9 + 1e-8', 'isinstance(aug.translate, iap.DiscreteUniform)', 'isinstance(aug.translate.a, iap.Deterministic)', 'isinstance(aug.translate.b, iap.Deterministic)', 'aug.translate.a.value == 1', 'aug.translate.b.value == 10', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'isinstance(aug.rotate, iap.Uniform)', 'isinstance(aug.rotate.a, iap.Deterministic)', 'aug.rotate.a.value == 10', 'isinstance(aug.rotate.b, iap.Deterministic)', 'aug.rotate.b.value == 20', 'nb_changed_aug >= int(nb_iterations * 0.9)', 'nb_changed_aug_det == 0', 'pixels_sums_aug[1, 1] > (nb_iterations * 0.98)', 'pixels_sums_aug[1, 1] < (nb_iterations * 1.02)', '(pixels_sums_aug[outer_pixels] > int(nb_iterations * (2/8 * 0.4))).all()', '(pixels_sums_aug[outer_pixels] < int(nb_iterations * (2/8 * 2.0))).all()', 'isinstance(aug.shear, iap.Uniform)', 'isinstance(aug.shear.a, iap.Deterministic)', 'aug.shear.a.value == 10', 'isinstance(aug.shear.b, iap.Deterministic)', 'aug.shear.b.value == 20', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', 'nb_changed_aug >= int(nb_iterations * 0.9)', 'nb_changed_aug_det == 0', 'pixels_sums_aug[1, 1] > (nb_iterations * 0.98)', 'pixels_sums_aug[1, 1] < (nb_iterations * 1.02)', 'len(set(averages)) > 200', 'isinstance(aug.cval, iap.Uniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 0', 'aug.cval.b.value == 255', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 1', 'aug.cval.b.value == 5', 'isinstance(aug.mode, iap.Choice)', 'isinstance(aug.mode, iap.Deterministic)', 'aug.mode.value == ', 'isinstance(aug.mode, iap.Choice)', 'len(aug.mode.a) == 2 and  in aug.mode.a', 'isinstance(aug.mode, iap.Choice)', 'len(aug.mode.a) == 2 and  in aug.mode.a', 'aug.fit_output is True', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'np.array_equal(observed.get_arr(), expected.get_arr())', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Deterministic)  # scale', 'isinstance(params[1], iap.Deterministic)  # translate', 'isinstance(params[2], iap.Deterministic)  # rotate', 'isinstance(params[3], iap.Deterministic)  # shear', 'params[0].value == 1  # scale', 'params[1].value == 2  # translate', 'params[2].value == 3  # rotate', 'params[3].value == 4  # shear', 'params[4].value == 1  # order', 'params[5].value == 0  # cval', 'params[6].value ==   # mode', 'params[7] ==   # backend', 'params[8] is True  # fit_output', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'array_equal_lists(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y > 2', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y > 2', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y == 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y == 2', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y == 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y == 2', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0].keypoints[0].x == 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x == 2', 'observed[0].keypoints[2].y > 2', 'observed[0].keypoints[0].x == 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x == 2', 'observed[0].keypoints[2].y > 2', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'nb_changed_aug >= int(nb_iterations * 0.8)', 'nb_changed_aug_det == 0', 'isinstance(aug.scale, iap.Uniform)', 'isinstance(aug.scale.a, iap.Deterministic)', 'isinstance(aug.scale.b, iap.Deterministic)', '0.7 - 1e-8 < aug.scale.a.value < 0.7 + 1e-8', '0.9 - 1e-8 < aug.scale.b.value < 0.9 + 1e-8', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'len(observed_aug[0].nonzero()[0]) == 1', 'len(observed_aug_det[0].nonzero()[0]) == 1', 'nb_changed_aug >= int(nb_iterations * 0.7)', 'nb_changed_aug_det == 0', '(centers_aug > int(nb_iterations * (1/9 * 0.6))).all()', '(centers_aug < int(nb_iterations * (1/9 * 1.4))).all()', 'isinstance(aug.translate, iap.Uniform)', 'isinstance(aug.translate.a, iap.Deterministic)', 'isinstance(aug.translate.b, iap.Deterministic)', '0.7 - 1e-8 < aug.translate.a.value < 0.7 + 1e-8', '0.9 - 1e-8 < aug.translate.b.value < 0.9 + 1e-8', 'isinstance(aug.translate, iap.DiscreteUniform)', 'isinstance(aug.translate.a, iap.Deterministic)', 'isinstance(aug.translate.b, iap.Deterministic)', 'aug.translate.a.value == 1', 'aug.translate.b.value == 10', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'isinstance(aug.rotate, iap.Uniform)', 'isinstance(aug.rotate.a, iap.Deterministic)', 'aug.rotate.a.value == 10', 'isinstance(aug.rotate.b, iap.Deterministic)', 'aug.rotate.b.value == 20', 'nb_changed_aug >= int(nb_iterations * 0.9)', 'nb_changed_aug_det == 0', 'pixels_sums_aug[1, 1] > (nb_iterations * 0.98)', 'pixels_sums_aug[1, 1] < (nb_iterations * 1.02)', '(pixels_sums_aug[outer_pixels] > int(nb_iterations * (2/8 * 0.4))).all()', '(pixels_sums_aug[outer_pixels] < int(nb_iterations * (2/8 * 2.0))).all()', 'isinstance(aug.shear, iap.Uniform)', 'isinstance(aug.shear.a, iap.Deterministic)', 'aug.shear.a.value == 10', 'isinstance(aug.shear.b, iap.Deterministic)', 'aug.shear.b.value == 20', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', 'nb_changed_aug >= int(nb_iterations * 0.9)', 'nb_changed_aug_det == 0', 'pixels_sums_aug[1, 1] > (nb_iterations * 0.98)', 'pixels_sums_aug[1, 1] < (nb_iterations * 1.02)', 'len(set(averages)) > 200', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 0', 'aug.cval.b.value == 255', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 1', 'aug.cval.b.value == 5', 'isinstance(aug.mode, iap.Choice)', 'isinstance(aug.mode, iap.Deterministic)', 'aug.mode.value == ', 'isinstance(aug.mode, iap.Choice)', 'len(aug.mode.a) == 2 and  in aug.mode.a', 'isinstance(aug.mode, iap.Choice)', 'len(aug.mode.a) == 2 and  in aug.mode.a', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Deterministic)  # scale', 'isinstance(params[1], iap.Deterministic)  # translate', 'isinstance(params[2], iap.Deterministic)  # rotate', 'isinstance(params[3], iap.Deterministic)  # shear', 'params[0].value == 1  # scale', 'params[1].value == 2  # translate', 'params[2].value == 3  # rotate', 'params[3].value == 4  # shear', 'params[4].value == 1  # order', 'params[5].value == 0  # cval', 'params[6].value ==   # mode', '100.0 < np.average(observed[mask]) < np.average(img[mask])', '75.0 > np.average(observed[~mask]) > np.average(img[~mask])', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', '100.0/255.0 < np.average(observed_arr[mask]) < np.average(heatmaps_arr[mask])', '75.0/255.0 > np.average(observed_arr[~mask]) > np.average(heatmaps_arr[~mask])', 'np.array_equal(observed, img)', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed_arr, heatmaps_arr)', 'np.average(observed1[~mask]) < np.average(observed2[~mask])', 'observed1.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed1.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed1.max_value < heatmaps.max_value + 1e-6', 'observed2.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed2.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed2.max_value < heatmaps.max_value + 1e-6', 'np.average(observed1_arr[~mask]) < np.average(observed2_arr[~mask])', 'isinstance(aug.scale, iap.Choice)', '0.01 - 1e-8 < aug.scale.a[0] < 0.01 + 1e-8', '0.10 - 1e-8 < aug.scale.a[1] < 0.10 + 1e-8', 'seen[0] > 0', 'seen[1] > 0', 'isinstance(aug.jitter.scale, iap.Uniform)', 'isinstance(aug.jitter.scale.a, iap.Deterministic)', 'isinstance(aug.jitter.scale.b, iap.Deterministic)', '0.01 - 1e-8 < aug.jitter.scale.a.value < 0.01 + 1e-8', '0.10 - 1e-8 < aug.jitter.scale.b.value < 0.10 + 1e-8', 'isinstance(aug.jitter.scale, iap.Uniform)', 'isinstance(aug.jitter.scale.a, iap.Deterministic)', 'isinstance(aug.jitter.scale.b, iap.Deterministic)', '0.01 - 1e-8 < aug.jitter.scale.a.value < 0.01 + 1e-8', '0.10 - 1e-8 < aug.jitter.scale.b.value < 0.10 + 1e-8', 'in str(exc)', 'got_exception', 'std1 < std2', 'isinstance(aug.nb_rows, iap.Choice)', 'aug.nb_rows.a[0] == 4', 'aug.nb_rows.a[1] == 20', 'seen[0] > 0', 'seen[1] > 0', 'isinstance(aug.nb_rows, iap.DiscreteUniform)', 'isinstance(aug.nb_rows.a, iap.Deterministic)', 'isinstance(aug.nb_rows.b, iap.Deterministic)', 'aug.nb_rows.a.value == 4', 'aug.nb_rows.b.value == 20', 'isinstance(aug.nb_rows, iap.DiscreteUniform)', 'isinstance(aug.nb_rows.a, iap.Deterministic)', 'isinstance(aug.nb_rows.b, iap.Deterministic)', 'aug.nb_rows.a.value == 4', 'aug.nb_rows.b.value == 20', 'in str(exc)', 'got_exception', 'isinstance(aug.nb_cols, iap.Choice)', 'aug.nb_cols.a[0] == 4', 'aug.nb_cols.a[1] == 20', 'seen[0] > 0', 'seen[1] > 0', 'isinstance(aug.nb_cols, iap.DiscreteUniform)', 'isinstance(aug.nb_cols.a, iap.Deterministic)', 'isinstance(aug.nb_cols.b, iap.Deterministic)', 'aug.nb_cols.a.value == 4', 'aug.nb_cols.b.value == 20', 'isinstance(aug.nb_cols, iap.DiscreteUniform)', 'isinstance(aug.nb_cols.a, iap.Deterministic)', 'isinstance(aug.nb_cols.b, iap.Deterministic)', 'aug.nb_cols.a.value == 4', 'aug.nb_cols.b.value == 20', 'in str(exc)', 'got_exception', 'isinstance(aug.order, iap.Deterministic)', 'aug.order.value == 0', 'isinstance(aug.order, iap.Choice)', 'all([v in aug.order.a for v in [0, 1, 3]])', 'isinstance(aug.order, iap.Choice)', 'all([v in aug.order.a for v in [0, 1, 3]])', 'isinstance(aug.order, iap.Choice)', 'all([v in aug.order.a for v in [0, 1, 3, 4, 5]])', 'in str(exc)', 'got_exception', 'np.sum([observed[:, :] == [0, 0, 0]]) > 0', 'np.sum([observed.get_arr()[:, :] >= 0.01]) == 0', 'isinstance(aug.cval, iap.Choice)', 'aug.cval.a[0] == 0', 'aug.cval.a[1] == 10', 'seen[0] > 5', 'seen[1] > 5', 'seen[2] <= 4', 'isinstance(aug.cval, iap.Uniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 0', 'aug.cval.b.value == 10', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 0', 'aug.cval.b.value == 10', 'isinstance(aug.cval, iap.Uniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 0', 'aug.cval.b.value == 255', 'in str(exc)', 'got_exception', 'isinstance(aug.mode, iap.Deterministic)', 'aug.mode.value == ', 'isinstance(aug.mode, iap.Choice)', 'all([v in aug.mode.a for v in []])', 'isinstance(aug.mode, iap.Choice)', 'all([v in aug.mode.a for v in []])', 'isinstance(aug.mode, iap.Choice)', 'all([v in aug.mode.a for v in []])', 'in str(exc)', 'got_exception', 'not keypoints_equal([kpsoi], observed_kpsoi)', 'observed_img[int(kp.y), int(kp.x)] > 0', 'keypoints_equal([kpsoi], observed)', 'keypoints_equal([kpsoi], observed)', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'isinstance(params[2], iap.Deterministic)', 'isinstance(params[3], iap.Deterministic)', 'isinstance(params[4], iap.Deterministic)', 'isinstance(params[5], iap.Deterministic)', 'params[6] == False', '0.1 - 1e-8 < params[0].value < 0.1 + 1e-8', 'params[1].value == 8', 'params[2].value == 10', 'params[3].value == 1', 'params[4].value == 2', 'params[5].value == ', 'all([abs(s1-s2)<=1 for s1, s2 in zip(observed.shape, expected.shape)])', 'np.average(np.abs(observed.astype(np.int32) - expected.astype(np.int32))) < 30.0', 'observed.shape == img.shape', 'np.average(np.abs(observed.astype(np.int32) - expected.astype(np.int32))) < 30.0', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.average(np.abs(observed.get_arr() - expected)) < 30.0', 'observed_i.shape == imgs.shape[1:3]', 'np.average(np.abs(observed_i.astype(np.int32) - expected.astype(np.int32))) < 30.0', 'isinstance(aug.jitter.scale, iap.Uniform)', 'isinstance(aug.jitter.scale.a, iap.Deterministic)', 'isinstance(aug.jitter.scale.b, iap.Deterministic)', '0.1 - 1e-8 < aug.jitter.scale.a.value < 0.1 + 1e-8', '0.2 - 1e-8 < aug.jitter.scale.b.value < 0.2 + 1e-8', 'isinstance(aug.jitter.scale, iap.Choice)', 'len(aug.jitter.scale.a) == 3', '0.1 - 1e-8 < aug.jitter.scale.a[0] < 0.1 + 1e-8', '0.2 - 1e-8 < aug.jitter.scale.a[1] < 0.2 + 1e-8', '0.3 - 1e-8 < aug.jitter.scale.a[2] < 0.3 + 1e-8', 'isinstance(aug.jitter.scale, iap.Choice)', 'len(aug.jitter.scale.a) == 3', '0.1 - 1e-8 < aug.jitter.scale.a[0] < 0.1 + 1e-8', '0.2 - 1e-8 < aug.jitter.scale.a[1] < 0.2 + 1e-8', '0.3 - 1e-8 < aug.jitter.scale.a[2] < 0.3 + 1e-8', 'in str(exc)', 'got_exception', 'kp_expected.x - 1.5 < kp_observed.x < kp_expected.x + 1.5', 'kp_expected.y - 1.5 < kp_observed.y < kp_expected.y + 1.5', 'kp_expected.x - 1.5 < kp_observed.x < kp_expected.x + 1.5', 'kp_expected.y - 1.5 < kp_observed.y < kp_expected.y + 1.5', 'isinstance(params[0], iap.Normal)', 'isinstance(params[0].scale, iap.Deterministic)', '0.1 - 1e-8 < params[0].scale.value < 0.1 + 1e-8', 'params[1] == False', 'np.sum(observed[mask]) < np.sum(img[mask])', 'np.sum(observed[~mask]) > np.sum(img[~mask])', 'np.sum(observed[mask_nonsquare]) < np.sum(img_nonsquare[mask_nonsquare])', 'np.sum(observed[~mask_nonsquare]) > np.sum(img_nonsquare[~mask_nonsquare])', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.sum(observed.get_arr()[mask]) < np.sum(heatmaps.get_arr()[mask])', 'np.sum(observed.get_arr()[~mask]) > np.sum(heatmaps.get_arr()[~mask])', 'np.sum(observed1[mask]) > np.sum(observed2[mask])', 'np.sum(observed1[~mask]) < np.sum(observed2[~mask])', 'observed1.shape == heatmaps.shape', 'observed2.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed1.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed1.max_value < heatmaps.max_value + 1e-6', 'heatmaps.min_value - 1e-6 < observed2.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed2.max_value < heatmaps.max_value + 1e-6', 'np.sum(observed1.get_arr()[mask]) > np.sum(observed2.get_arr()[mask])', 'np.sum(observed1.get_arr()[~mask]) < np.sum(observed2.get_arr()[~mask])', 'observed1_std > observed2_std', 'seen[0] > 10', 'seen[1] > 10', 'isinstance(aug.alpha, iap.Uniform)', 'isinstance(aug.alpha.a, iap.Deterministic)', 'isinstance(aug.alpha.b, iap.Deterministic)', '1.0 - 1e-8 < aug.alpha.a.value < 1.0 + 1e-8', '2.0 - 1e-8 < aug.alpha.b.value < 2.0 + 1e-8', 'in str(exc)', 'got_exception', 'seen[0] > 10', 'seen[1] > 10', 'isinstance(aug.sigma, iap.Uniform)', 'isinstance(aug.sigma.a, iap.Deterministic)', 'isinstance(aug.sigma.b, iap.Deterministic)', '1.0 - 1e-8 < aug.sigma.a.value < 1.0 + 1e-8', '2.0 - 1e-8 < aug.sigma.b.value < 2.0 + 1e-8', 'in str(exc)', 'got_exception', 'isinstance(aug.order, iap.Choice)', 'all([order in aug.order.a for order in [0, 1, 2, 3, 4, 5]])', 'isinstance(aug.order, iap.Deterministic)', 'aug.order.value == 1', 'isinstance(aug.order, iap.Choice)', 'all([order in aug.order.a for order in [0, 1, 2]])', 'isinstance(aug.order, iap.Choice)', 'all([order in aug.order.a for order in [0, 1, 2, 3]])', 'in str(exc)', 'got_exception', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 0', 'aug.cval.b.value == 255', 'isinstance(aug.cval, iap.Deterministic)', 'aug.cval.value == 128', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 128', 'aug.cval.b.value == 255', 'isinstance(aug.cval, iap.Choice)', 'all([cval in aug.cval.a for cval in [16, 32, 64]])', 'isinstance(aug.cval, iap.Choice)', 'all([cval in aug.cval.a for cval in [16, 32, 64]])', 'np.sum(observed == 255) > 0', 'np.sum(observed == 255) == 0', 'in str(exc)', 'got_exception', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.sum(observed.get_arr() > 0.01) == 0', 'isinstance(aug.mode, iap.Choice)', 'all([mode in aug.mode.a for mode in []])', 'isinstance(aug.mode, iap.Deterministic)', 'aug.mode.value == ', 'isinstance(aug.mode, iap.Choice)', 'all([mode in aug.mode.a for mode in []])', 'isinstance(aug.mode, iap.Choice)', 'all([mode in aug.mode.a for mode in []])', 'in str(exc)', 'got_exception', 'd < 1e-8', 'd < 1e-8', 'd < 0.5', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'isinstance(params[2], iap.Deterministic)', 'isinstance(params[3], iap.Deterministic)', 'isinstance(params[4], iap.Deterministic)', '0.25 - 1e-8 < params[0].value < 0.25 + 1e-8', '1.0 - 1e-8 < params[1].value < 1.0 + 1e-8', 'params[2].value == 2', 'params[3].value == 10', 'params[4].value == ', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'iaa.Noop().get_parameters() == []', 'array_equal_lists(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_aug)', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_aug)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'np.array_equal(observed, expected)', 'errored', 'np.array_equal(observed, expected)', 'errored', 'array_equal_lists(observed, expected)', 'errored', 'array_equal_lists(observed, expected)', 'errored', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'errored', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'errored', 'keypoints_equal(observed, expected)', 'errored', 'keypoints_equal(observed, expected)', 'errored', 'array_equal_lists(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'observed.shape == (3, 4, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'observed.shape == (3, 4, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'errored', 'errored', 'errored', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'observed.shape == (3, 4, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'observed.shape == (3, 4, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'errored', 'errored', 'errored', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'observed.shape == (3, 4, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'observed.shape == (3, 4, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'errored', 'errored', 'errored', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'observed.shape == (3, 4, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'observed.shape == (3, 4, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'errored', 'errored', 'errored', 'in str(exc)', 'got_exception', 'all([dtype_i.type == dtype_j for dtype_i, dtype_j in zip(dtypes_copy, [np.uint8, np.float32, np.int32])])', 'isinstance(dtypes_copy, np.dtype)', 'dtypes_copy.type == dt', 'isinstance(dtypes_copy, list)', 'all([dtype_i.type == dt for dtype_i in dtypes_copy])', 'image_result.dtype.type == np.int32', 'image_result.dtype.type == np.int32', 'images.dtype.type == np.uint8', 'images_result.dtype.type == np.int32', 'all([image.dtype.type == np.uint8 for image in images])', 'all([image_result.dtype.type == np.int32 for image_result in images_result])', 'images.dtype.type == np.uint8', 'images_restored.dtype.type == np.int32', 'all([image.dtype.type == np.uint8 for image in images])', 'all([image_restored.dtype.type == np.int32 for image_restored in images_restored])', 'image_clipped[0, 0] == 15', 'image_clipped[0, 1] == 20', 'image_clipped[0, 2] == 25', 'image_clipped[0, 0] == 15', 'image_clipped[0, 1] == 20', 'image_clipped[0, 2] == 25', 'np.all(images_clipped[:, 0, 0] == 15)', 'np.all(images_clipped[:, 0, 1] == 20)', 'np.all(images_clipped[:, 0, 2] == 25)', 'isinstance(images_clipped, list)', 'all([images_clipped[i][0, 0] == 15 for i in sm.xrange(len(images))])', 'all([images_clipped[i][0, 1] == 20 for i in sm.xrange(len(images))])', 'all([images_clipped[i][0, 2] == 25 for i in sm.xrange(len(images))])', 'np.all(images_clipped[:, 0, 0] == 15)', 'np.all(images_clipped[:, 0, 1] == 20)', 'np.all(images_clipped[:, 0, 2] == 25)', 'isinstance(images_clipped, list)', 'all([images_clipped[i][0, 0] == 15 for i in sm.xrange(len(images))])', 'all([images_clipped[i][0, 1] == 20 for i in sm.xrange(len(images))])', 'all([images_clipped[i][0, 2] == 25 for i in sm.xrange(len(images))])', 'kpsois_reduced == [kpsois[0], kpsois[1], kpsois[3]]', 'ids == [0, 1, 3]', 'kpsois_reduced == []', 'ids == []', 'kpsois_reduced == [kpsois[0]]', 'ids == [0]', 'kpsois_reduced == []', 'ids == []', 'kpsois_recovered == []', 'all([isinstance(kpsoi, ia.KeypointsOnImage) for kpsoi in kpsois]) # assert original list not changed', 'kpsois_recovered == [kpsois[0], , kpsois[2]]', 'kpsois_recovered == [kpsois[0], kpsois[1], kpsois[2]]', 'kpsois_recovered == []', 'aug.random_state == ia.CURRENT_RANDOM_STATE', 'aug.random_state != ia.CURRENT_RANDOM_STATE', 'aug.random_state == rs', 'aug.random_state.randint(0, 10**6) == np.random.RandomState(123).randint(0, 10**6)', 'isinstance(batches_aug, list)', 'len(batches_aug) == 1', 'isinstance(batches_aug[0], list)', 'isinstance(batches_aug, list)', 'len(batches_aug) == 1', 'array_equal_lists(batches_aug, image_batches)', 'isinstance(batches_aug, list)', 'len(batches_aug) == 1', 'array_equal_lists(batches_aug[0], image_batches[0])', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)', 'got_exception', 'all([image.ndim == 3 and 48 <= image.shape[0] <= 62 and 48 <= image.shape[1] <= 62 and image.shape[2] == 3 for image in observed])', 'seen[0] <= 3', 'seen[1] >= 17', 'all([image.ndim == 3 and 48 <= image.shape[0] <= 62 and 48 <= image.shape[1] <= 62  and image.shape[2] == 1 for image in observed])', 'seen[0] <= 3', 'seen[1] >= 17', 'all([image.ndim == 2 and 48 <= image.shape[0] <= 62 and 48 <= image.shape[1] <= 62 for image in observed])', 'seen[0] <= 3', 'seen[1] >= 17', 'image.ndim == 2', 'image.ndim == 3', 'image.shape[2] == c', '48 <= image.shape[0] <= 62', '48 <= image.shape[1] <= 62', 'seen[0] == 0', 'seen[1] == 20', 'got_exception', 'got_exception', 'got_exception', 'bb_aug.x1 == 1+1', 'bb_aug.y1 == 4', 'bb_aug.x2 == 2+1', 'bb_aug.y2 == 5', 'len(bbsois_aug) == 1', 'bbsois_aug[0].bounding_boxes == []', 'bbsois_aug == []', 'np.array_equal(grid, grid_expected)', 'np.array_equal(grid, grid_expected)', 'got_exception', 'np.array_equal(grid, grid_expected)', 'np.array_equal(grid, grid_expected)', 'np.array_equal(grid, grid_expected)', 'got_exception', 'aug.random_state == ia.CURRENT_RANDOM_STATE', 'aug_localized.random_state != ia.CURRENT_RANDOM_STATE', '_same_rs(aug0.random_state, aug0_copy.random_state)', '_same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', 'not _same_rs(aug0.random_state, aug0_copy.random_state)', 'not _same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', '_same_rs(aug0.random_state, aug0_copy.random_state)', '_same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', 'not _same_rs(aug0.random_state, aug0_copy.random_state)', 'not _same_rs(aug0[0].random_state, aug0_copy[0].random_state)', 'not _same_rs(aug0[1].random_state, aug0_copy[1].random_state)', '_same_rs(aug0.random_state, aug0_copy.random_state)', '_same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', 'not _same_rs(aug0.random_state, aug0_copy.random_state)', 'not _same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', 'aug0_copy.random_state.randint(0, 10**6) == np.random.RandomState(np.random.RandomState(123).randint(0, 10**6)).randint(0, 10**6)', '_same_rs(aug0.random_state, aug0_copy.random_state)', '_same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', 'not _same_rs(aug0.random_state, aug0_copy.random_state)', 'not _same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', 'aug0_copy.random_state.randint(0, 10**6) == np.random.RandomState(np.random.RandomState(123).randint(0, 10**6)).randint(0, 10**6)', 'got_exception', 'isinstance(children, list)', 'children[0] == aug1', 'children[1] == aug2', 'children[2] == aug21', 'isinstance(children, list)', 'children[0] == aug1', 'children[1] == aug2', 'isinstance(children[2], list)', 'children[2][0] == aug21', 'aug.__repr__() == aug.__str__() == ', 'aug.__repr__() == aug.__str__() == ', 'len(kpsoi_aug) == 2', 'len(kpsoi_aug[0].keypoints) == 0', 'len(kpsoi_aug[1].keypoints) == 1', 'kpsoi_aug[1].keypoints[0].x == 11', 'len(kpsoi_aug) == 2', 'len(kpsoi_aug[0].keypoints) == 0', 'len(kpsoi_aug[1].keypoints) == 0', 'np.allclose(segmap_aug.arr, segmap.arr)', 'np.allclose(segmap_aug.arr, segmap.arr)', 'np.allclose(segmap_aug.arr, expected)', 'np.allclose(segmap_aug.arr, expected)', 'np.allclose(segmap_aug.arr, segmap.arr)', 'np.allclose(segmap_aug.arr, segmap.arr)', 'np.allclose(segmap_aug.arr, expected)', 'np.allclose(segmap_aug.arr, expected)', 'np.allclose(segmap_aug.arr, segmap.arr)', 'np.allclose(segmap_aug.arr, segmap.arr)', 'np.allclose(segmap_aug.arr, expected)', 'np.allclose(segmap_aug.arr, expected)', 'len(augs) == 1', 'augs[0] == seq1', 'len(augs) == 1', 'augs[0] == seq2', 'len(augs) == 2', 'augs[0] == seq1', 'augs[1] == seq2', 'len(augs) == 2', 'augs[0] == seq1', 'augs[1] == seq2', 'len(augs) == 2', 'augs[0] == seq1', 'augs[1] == seq2', 'len(augs) == 1', 'augs[0] == seq2', 'len(augs) == 2', 'augs[0] == seq1', 'augs[1] == [seq2]', 'len(seqs) == 1', 'seqs[0].name == ', 'len(seqs) == 2', 'seqs[0].name == ', 'seqs[1].name == ', 'augs is not None', 'isinstance(augs, iaa.Noop)', 'in str(exc)', 'got_exception', 'augs is None', 'np.array_equal(images_aug[0], expected)', 'np.array_equal(images_aug[0], expected)', 'np.array_equal(images_aug[0], image)', 'np.array_equal(images_aug[0], image_lr)', 'keypoints_equal(keypoints_aug, keypoints)', 'np.array_equal(images_aug_source, images_aug_target)', 'target_cprs[0].deterministic == True', 'np.array_equal(images_aug_source, images_aug_target)', 'np.array_equal(images_aug_source, images_aug_target)', 'np.array_equal(images_aug_source1, images_aug_source2)', 'np.array_equal(images_aug_target1, images_aug_target2)', 'np.array_equal(images_aug_source1, images_aug_target1)', 'np.array_equal(images_aug_source2, images_aug_target2)', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)', 'np.array_equal(observed, images_lr_ud)', 'np.array_equal(observed, images_lr_ud)', 'array_equal_lists(observed, images_lr_ud_list)', 'array_equal_lists(observed, images_lr_ud_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1.0 - 1e-6 < observed.max_value < 1.0 + 1e-6', 'np.array_equal(observed.get_arr(), heatmaps_arr_expected)', 'np.array_equal(observed_aug, images) \\', 'np.array_equal(observed_aug_det, images) \\', '(0.25 - 0.10) <= (1 - (nb_changed_aug / nb_iterations)) <= (0.25 + 0.10) # should be the same in roughly 25% of all cases', 'nb_changed_aug_det == 0', 'nb_changed_aug == 0', 'nb_changed_aug_det == 0', 'nb_images_first_second_unrandom == nb_iterations', 'nb_images_second_first_unrandom == 0', 'nb_heatmaps_first_second_unrandom == nb_iterations', 'nb_heatmaps_second_first_unrandom == 0', 'nb_keypoints_first_second_unrandom == nb_iterations', 'nb_keypoints_second_first_unrandom == 0', '(0.50 - 0.1) <= nb_images_first_second_random / nb_iterations <= (0.50 + 0.1)', '(0.50 - 0.1) <= nb_images_second_first_random / nb_iterations <= (0.50 + 0.1)', '(0.50 - 0.1) <= nb_keypoints_first_second_random / nb_iterations <= (0.50 + 0.1)', '(0.50 - 0.1) <= nb_keypoints_second_first_random / nb_iterations <= (0.50 + 0.1)', 'False', 'all(seen)', 'np.array_equal(observed, image)', 'np.array_equal(observed, image)', 'np.array_equal(observed, np.fliplr(image))', 'np.array_equal(observed, np.fliplr(image))', 'np.array_equal(observed, np.fliplr(np.flipud(image)))', 'np.array_equal(observed, np.fliplr(image))', 'np.array_equal(observed, np.fliplr(np.flipud(image)))', 'aug.get_parameters() == [False]', 'aug.get_parameters() == [True]', 'aug.get_children_lists() == [aug]', 'aug.__str__() == aug.__repr__() == expected', 'np.array_equal(observed, zeros)', 'np.array_equal(observed, zeros)', 'np.array_equal(observed, zeros)', 'np.sum(observed) in [9*1, 9*2, 9*3]', 'np.sum(observed) in [9*1+9*2, 9*1+9*3, 9*2+9*3]', 'np.sum(observed) in [9*1+9*2+9*3]', 'np.sum(observed) in [9*1+9*2+9*3]', 'all([obs.shape == (3, 3, 3) for obs in [observed0, observed1, observed2, observed3]])', 'all([0 - 1e-6 < obs.min_value < 0 + 1e-6 for obs in [observed0, observed1, observed2, observed3]])', 'all([1 - 1e-6 < obs.max_value < 1 + 1e-6 for obs in [observed0, observed1, observed2, observed3]])', 'np.array_equal(obs.get_arr(), exp)', '0.25-0.1 <= p_observed[0] <= 0.25+0.1', '0.5-0.1 <= p_observed[1] <= 0.5+0.1', '0.5-0.1 <= p_observed[2] <= 0.5+0.1', '0.5-0.1 <= p_observed[3] <= 0.5+0.1', 'np.sum(observed) == 9*100', '0.5-0.1 <= p_observed[0] <= 0.5+0.1', '0.5-0.1 <= p_observed[1] <= 0.5+0.1', 'in str(exc)', 'got_exception', 'np.array_equal(observed, np.flipud(np.fliplr(image)))', 'found == 1', '200 - 50 < seen[0] < 200 + 50', '200 - 50 < seen[1] + seen[2] + seen[3] < 200 + 50', 'in str(exc)', 'got_exception', 'False', 'seen[0] > 10', 'seen[1] > 10', 'in str(exc)', 'got_exception', 'isinstance(observed, list)', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'ia.is_np_array(image)', 'observed.shape in [(4, 8, 3), (6, 8, 3)]', 'ia.is_np_array(observed)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'ia.is_np_array(observed)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'ia.is_np_array(observed)', 'observed.shape in [(8, 8, 3)]', 'np.array_equal(observed, zeros + 1)', 'np.array_equal(observed, zeros + 1)', 'np.array_equal(observed, zeros + 1)', 'expected - expected_tolerance < val < expected + expected_tolerance', 'np.array_equal(observed, images_lr)', 'np.array_equal(observed, images_lr)', 'array_equal_lists(observed, images_lr_list)', 'array_equal_lists(observed, images_lr_list)', 'keypoints_equal(observed, keypoints_lr)', 'keypoints_equal(observed, keypoints_lr)', 'observed.shape == heatmaps.shape', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.array_equal(observed.get_arr(), heatmaps_arr_lr)', 'np.array_equal(observed, images_ud)', 'np.array_equal(observed, images_ud)', 'array_equal_lists(observed, images_ud_list)', 'array_equal_lists(observed, images_ud_list)', 'keypoints_equal(observed, keypoints_ud)', 'keypoints_equal(observed, keypoints_ud)', 'observed.shape == heatmaps.shape', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.array_equal(observed.get_arr(), heatmaps_arr_ud)', '(0.50 - 0.10) <= nb_images_if_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= nb_images_else_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= nb_keypoints_if_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= nb_keypoints_else_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= (1 - (nb_changed_aug / nb_iterations)) <= (0.50 + 0.10) # should be the same in roughly 50% of all cases', 'nb_changed_aug_det == 0', '(0.50 - 0.10) <= nb_images_if_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= nb_images_else_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= nb_keypoints_if_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= nb_keypoints_else_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= (1 - (nb_changed_aug / nb_iterations)) <= (0.50 + 0.10) # should be the same in roughly 50% of all cases', 'nb_changed_aug_det == 0', 'len(uq) == 1', 'False', 'seen[0] > 20', 'seen[1] > 20', 'in str(exc)', 'got_exception', 'np.array_equal(observed, image)', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'np.array_equal(observed1, image + 10)', 'np.array_equal(observed2, image)', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', '0.75 - 1e-8 < params[0].p.value < 0.75 + 1e-8', 'aug.__repr__() == aug.__str__() == expected', 'aug.__repr__() == aug.__str__() == expected', 'isinstance(observed, list) or (ia.is_np_array(observed) and len(set([img.shape for img in observed])) == 1)', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'isinstance(observed, list) or (ia.is_np_array(observed) and len(set([img.shape for img in observed])) == 1)', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'ia.is_np_array(image)', 'observed.shape in [(4, 8, 3), (6, 8, 3)]', 'isinstance(observed, list) or (ia.is_np_array(observed) and len(set([img.shape for img in observed])) == 1)', 'all([16 <= img.shape[0] <= 30 and img.shape[1:] == (32, 3) for img in observed])', 'isinstance(observed, list)', 'all([16 <= img.shape[0] <= 30 and img.shape[1:] == (32, 3) for img in observed])', 'isinstance(observed, list) or (ia.is_np_array(observed) and len(set([img.shape for img in observed])) == 1)', 'all([16 <= img.shape[0] <= 30 and img.shape[1:] == (32, 3) for img in observed])', 'isinstance(observed, list)', 'all([16 <= img.shape[0] <= 30 and img.shape[1:] == (32, 3) for img in observed])', 'ia.is_np_array(image)', '16 <= observed.shape[0] <= 30 and observed.shape[1:] == (32, 3)', 'ia.is_np_array(observed)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'ia.is_np_array(observed)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'ia.is_np_array(observed)', 'observed.shape in [(8, 8, 3)]', 'ia.is_np_array(observed)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'ia.is_np_array(observed)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'ia.is_np_array(observed)', 'observed.shape in [(8, 8, 3)]', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'len(params) == 1', 'params[0] == [1]', 'aug.get_children_lists() == [children]', 'aug.__repr__() == aug.__str__() == expected', 'np.array_equal(observed, images_flipped)', 'np.array_equal(observed, images)', 'array_equal_lists(observed, images_flipped_list)', 'array_equal_lists(observed, images_list)', 'array_equal_lists(observed, images_flipped_list2d3d)', 'array_equal_lists(observed, images_list2d3d)', 'np.array_equal(batches_aug[0].images_aug[0], image_flipped)', 'batches_aug[0].keypoints_aug[0].keypoints[0].x == kp_flipped.x', 'batches_aug[0].keypoints_aug[0].keypoints[0].y == kp_flipped.y', 'np.array_equal(batches_aug[0].images[0], image)', 'batches_aug[0].keypoints[0].keypoints[0].x == keypoint.x', 'batches_aug[0].keypoints[0].keypoints[0].y == keypoint.y', 'np.array_equal(batches_aug[0].images_aug, np.uint8([image_flipped]))', 'batches_aug[0].keypoints_aug[0].keypoints[0].x == kp_flipped.x', 'batches_aug[0].keypoints_aug[0].keypoints[0].y == kp_flipped.y', 'np.array_equal(batches_aug[0].images, np.uint8([image]))', 'batches_aug[0].keypoints[0].keypoints[0].x == keypoint.x', 'batches_aug[0].keypoints[0].keypoints[0].y == keypoint.y', 'np.array_equal(image_aug, image) or np.array_equal(image_aug, image_flipped)', '(keypoint_aug.x == keypoint.x and keypoint_aug.y == keypoint.y) \\', '0.4*nb_iterations <= nb_flipped_images <= 0.6*nb_iterations', 'nb_flipped_images == nb_flipped_keypoints', 'np.array_equal(image_aug, image) or np.array_equal(image_aug, image_flipped)', '(keypoint_aug.x == keypoint.x and keypoint_aug.y == keypoint.y) \\', '0.4*nb_iterations <= nb_flipped_images <= 0.6*nb_iterations', 'nb_flipped_images == nb_flipped_keypoints', 'np.array_equal(image_aug, image) or np.array_equal(image_aug, image_flipped)', '0.4*nb_iterations <= nb_flipped_images <= 0.6*nb_iterations', 'np.array_equal(image_aug, image) or np.array_equal(image_aug, image_flipped)', '0.4*nb_iterations <= nb_flipped_images <= 0.6*nb_iterations', '(keypoint_aug.x == keypoint.x and keypoint_aug.y == keypoint.y) \\', '0.4*nb_iterations <= nb_flipped_keypoints <= 0.6*nb_iterations', 'nb_changed > 0', 'nb_changed == 0', 'array_equal_lists(images_aug1, images_aug2), \\', 'keypoints_equal(kps_aug1, kps_aug2), \\', 'kp_fully_empty_aug == []', 'len(kp_first_empty_aug.keypoints) == 0', 'len(kp_image_aug_rev.keypoints) == len(kp_aug.keypoints),\\', 'np.average(dss) < 5.0, \\', 'images_aug.shape == images_c.shape', 'image_aug.shape == images_c[0].shape', 'images_aug.shape == (4, 4, 4)', 'image_aug.shape == (4, 4)', 'images_aug.shape == (4, 4, 4, images_c.shape[3])', 'image_aug.shape == (4, 4, images_c.shape[3])', 'images_aug.dtype == images_i.dtype', 'np.allclose(observed, expected)', 'observed.shape == heatmaps.shape', '0 - 1e-6 < heatmaps.min_value < 0 + 1e-6', '1 - 1e-6 < heatmaps.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_r1)', 'np.allclose(observed, expected)', 'observed.shape == heatmaps.shape', '0 - 1e-6 < heatmaps.min_value < 0 + 1e-6', '1 - 1e-6 < heatmaps.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_l1)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'density_expected - density_tolerance < density < density_expected + density_tolerance', 'in str(exc)', 'got_exception', 'len(uq) > 1', 'np.max(observed) > 80', 'np.min(observed) < 20', 'len(uq) > 1', 'np.max(observed) > 80', 'np.min(observed) < 20', 'False', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', 'in str(exc)', 'got_exception', 'np.array_equal(observed, image)', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'False', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', 'keypoints_equal([observed], [kpsoi])', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', '0.65 - 1e-6 < params[0].value < 0.65 + 1e-6', 'params[1].value == 1', 'len(children_lsts) == 2', 'ia.is_iterable([lst for lst in children_lsts])', 'first in children_lsts[0]', 'second == children_lsts[1]', 'np.allclose(observed, expected)', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_r1)', 'np.allclose(observed, expected)', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_l1)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'density_expected - density_tolerance < density < density_expected + density_tolerance', 'len(set(observed.flatten())) > 1', 'np.array_equal(observed, image)', 'False', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_r1)', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_l1)', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'False', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', 'keypoints_equal([observed], [kpsoi])', 'np.allclose(observed, expected)', '_array_equals_tolerant(observed, expected, 2)', '_array_equals_tolerant(observed, expected, 2)', 'np.allclose(observed, base_img) or _array_equals_tolerant(observed, base_img_superpixels, 2)', 'all(seen.values())', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', '0.5 - 1e-4 < params[0].p.value < 0.5 + 1e-4', 'params[1].value == 2', 'params[2] == 100', 'params[3] == ', 'observed2d.shape == (12, 12)', 'observed3d.shape == (12, 12, 3)', '50 < np.average(observed2d) < 205', '50 < np.average(observed3d) < 205', 'heatmaps_aug.shape == (8, 12, 3)', '0 - 1e-6 < heatmaps_aug.min_value < 0 + 1e-6', '1 - 1e-6 < heatmaps_aug.max_value < 1 + 1e-6', 'np.average(heatmaps_aug.get_arr()[0, :]) < 0.05', 'np.average(heatmaps_aug.get_arr()[-1, :]) < 0.05', 'np.average(heatmaps_aug.get_arr()[:, 0]) < 0.05', '0.8 < np.average(heatmaps_aug.get_arr()[2:6, 2:10]) < 1 + 1e-6', 'observed2d.shape in [(12, 12), (14, 14)]', 'observed3d.shape in [(12, 12, 3), (14, 14, 3)]', 'all(seen2d)', 'all(seen3d)', 'observed2d.shape in [(12, 12), (13, 13), (14, 14)]', 'observed3d.shape in [(12, 12, 3), (13, 13, 3), (14, 14, 3)]', 'all(seen2d)', 'all(seen3d)', 'observed2d.shape == base_img2d.shape', 'observed3d.shape == base_img3d.shape', 'observed2d.shape == base_img2d.shape', 'observed3d.shape == base_img3d.shape', 'observed2d.shape == base_img2d.shape', 'observed3d.shape == base_img3d.shape', 'observed2d.shape == (11, base_img2d.shape[1])', 'observed3d.shape == (11, base_img3d.shape[1], 3)', 'observed2d.shape == (base_img2d.shape[0], 13)', 'observed3d.shape == (base_img3d.shape[0], 13, 3)', 'observed2d.shape == (12, 13)', 'observed3d.shape == (12, 13, 3)', 'observed2d.shape == (12, base_img2d.shape[1])', 'observed3d.shape == (12, base_img3d.shape[1], 3)', 'observed2d.shape == (base_img2d.shape[0], 12)', 'observed3d.shape == (base_img3d.shape[0], 12, 3)', 'observed2d.shape == (12, int(12 * aspect_ratio2d))', 'observed3d.shape == (12, int(12 * aspect_ratio3d), 3)', 'observed2d.shape == (int(12 * (1/aspect_ratio2d)), 12)', 'observed3d.shape == (int(12 * (1/aspect_ratio3d)), 12, 3)', 'observed2d.shape in [(12, 12), (14, 12)]', 'observed3d.shape in [(12, 12, 3), (14, 12, 3)]', 'all(seen2d)', 'all(seen3d)', 'observed2d.shape in [(12, 12), (12, 14)]', 'observed3d.shape in [(12, 12, 3), (12, 14, 3)]', 'all(seen2d)', 'all(seen3d)', 'observed2d.shape in [(12, 12), (12, 14)]', 'observed3d.shape in [(12, 12, 3), (12, 14, 3)]', 'all(seen2d)', 'all(seen3d)', 'observed2d.shape in [(12, 12), (13, 12), (14, 12)]', 'observed3d.shape in [(12, 12, 3), (13, 12, 3), (14, 12, 3)]', 'all(seen2d)', 'all(seen3d)', 'observed2d.shape == (base_img2d.shape[0]*2, base_img2d.shape[1]*2)', 'observed3d.shape == (base_img3d.shape[0]*2, base_img3d.shape[1]*2, 3)', 'intensity_low < np.average(observed2d) < intensity_high', 'intensity_low < np.average(observed3d) < intensity_high', 'observed2d.shape in [(base_img2d.shape[0]*2, base_img2d.shape[1]*2), (base_img2d.shape[0]*4, base_img2d.shape[1]*4)]', 'observed3d.shape in [(base_img3d.shape[0]*2, base_img3d.shape[1]*2, 3), (base_img3d.shape[0]*4, base_img3d.shape[1]*4, 3)]', 'all(seen2d)', 'all(seen3d)', 'observed2d.shape in [(base_img2d.shape[0]*2, base_img2d.shape[1]*2), (base_img2d.shape[0]*4, base_img2d.shape[1]*4)]', 'observed3d.shape in [(base_img3d.shape[0]*2, base_img3d.shape[1]*2, 3), (base_img3d.shape[0]*4, base_img3d.shape[1]*4, 3)]', 'all(seen2d)', 'all(seen3d)', 'observed2d.shape in possible2d', 'observed3d.shape in possible3d', 'not not_seen2d', 'not not_seen3d', 'observed2d.shape in possible2d', 'observed3d.shape in possible3d', 'not not_seen2d', 'not not_seen3d', 'in str(exc)', 'got_exception', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'params[0].value == 1', 'params[1].value == ', 'np.array_equal(observed, np.array([base_img_padded]))', 'array_equal_lists(observed, [base_img_padded])', 'keypoints_equal(observed, keypoints_moved)', 'observed.shape == base_img_padded.shape', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.array_equal(observed.get_arr(), heatmaps_arr_padded)', 'any([val == 1 for val in matches])', 'any([val == 1 for val in matches])', 'any([array_equal_lists(observed, [base_img_padded])', 'any([keypoints_equal(observed, [kp]) for kp in keypoints_padded])', 'len(set(movements)) == 3', 'len(set(movements_det)) == 1', 'any([val == 1 for val in matches])', 'any([val == 1 for val in matches])', 'any([array_equal_lists(observed, [base_img_padded])', 'any([keypoints_equal(observed, [kp]) for kp in keypoints_padded])', 'len(set(movements)) == 2', 'len(set(movements_det)) == 1', 'False', 'all([100 - 50 < v < 100 + 50 for v in seen])', 'isinstance(aug.pad_mode, iap.Choice)', 'len(aug.pad_mode.a) == len(expected)', 'all([v in aug.pad_mode.a for v in expected])', 'isinstance(aug.pad_mode, iap.Choice)', 'len(aug.pad_mode.a) == len(expected)', 'all([v in aug.pad_mode.a for v in expected])', 'in str(exc)', 'got_exception', 'np.sum(observed.get_arr() <= 1e-4) == 3', 'observed[0, 0] == 0', 'observed[0, 1] == 100', 'False', 'all([100 - 50 < v < 100 + 50 for v in seen])', 'isinstance(aug.pad_cval, iap.Choice)', 'len(aug.pad_cval.a) == len(expected)', 'all([v in aug.pad_cval.a for v in expected])', 'False', 'all([100 - 50 < v < 100 + 50 for v in seen])', 'in str(exc)', 'got_exception', 'np.sum(observed.get_arr() > 1e-4) == 0', 'observed.shape == (4+4+4, 4+4+4)', 'np.sum(observed[4:-4, 4:-4]) == 4*4', 'np.sum(observed) == 4*4', 'observed.shape == (4+4+4, 4+4+4)', 'np.sum(observed[4:-4, 4:-4]) == 4*4', 'np.sum(observed) == 4*4', 'np.sum(observed) == 4*4', '(observed.shape[0] - 4) % 2 == 0', '(observed.shape[1] - 4) % 2 == 0', 'in str(exc)', 'got_exception', 'np.array_equal(observed, image_padded)', 'keypoints_equal(observed, keypoints_moved)', 'all([v > 30 for v in seen])', 'all([v > 30 for v in seen])', '250 - 50 < seen[0] < 250 + 50', 'seen[1] == 0', 'seen[2] == 0', 'seen[3] == 0', '250 - 50 < seen[4] < 250 + 50', '250 - 50 < seen[0] < 250 + 50', 'seen[1] == 0', 'seen[2] == 0', 'seen[3] == 0', '250 - 50 < seen[4] < 250 + 50', 'np.array_equal(observed, np.array([base_img_cropped]))', 'array_equal_lists(observed, [base_img_cropped])', 'keypoints_equal(observed, keypoints_moved)', 'observed.shape == base_img_cropped.shape', 'np.array_equal(observed.get_arr(), heatmaps_arr_cropped)', 'any([val == 1 for val in matches])', 'any([val == 1 for val in matches])', 'any([array_equal_lists(observed, [base_img_cropped])', 'any([keypoints_equal(observed, [kp]) for kp in keypoints_cropped])', 'len(set(movements)) == 3', 'len(set(movements_det)) == 1', 'any([val == 1 for val in matches])', 'any([val == 1 for val in matches])', 'any([array_equal_lists(observed, [base_img_cropped])', 'any([keypoints_equal(observed, [kp]) for kp in keypoints_cropped])', 'len(set(movements)) == 2', 'len(set(movements_det)) == 1', 'observed.shape == (40, 40)', 'np.all(observed == image[5:-5, 5:-5])', 'observed.shape == (40, 40)', 'np.all(observed == image[5:-5, 5:-5])', '30 <= observed.shape[0] <= 40', '30 <= observed.shape[1] <= 40', 'in str(exc)', 'got_exception', 'np.array_equal(observed, image_cropped)', 'keypoints_equal(observed, keypoints_moved)', 'all([v > 30 for v in seen])', 'all([v > 30 for v in seen])', '250 - 50 < seen[0] < 250 + 50', 'seen[1] == 0', 'seen[2] == 0', 'seen[3] == 0', '250 - 50 < seen[4] < 250 + 50', '250 - 50 < seen[0] < 250 + 50', 'seen[1] == 0', 'seen[2] == 0', 'seen[3] == 0', '250 - 50 < seen[4] < 250 + 50', 'observed.dtype.type == np.uint8', 'observed.shape == (5, 5)', 'observed.dtype.type == np.uint8', 'observed.shape == (5, 5, 1)', 'observed.dtype.type == np.uint8', 'observed.shape == (5, 5, 3)', 'observed.dtype.type == dtype', 'observed.shape == (5, 5)', 'observed.dtype.type == np.uint8', 'observed.shape == (5, 5, 3)', 'observed.dtype.type == np.uint8', 'observed.shape == (5, 5, 3)', 'observed.dtype.type == np.uint8', 'observed.shape == (5, 5, 3)', 'np.array_equal(observed, img5x5)', 'observed.dtype.type == np.uint8', 'observed.shape == (6, 6, 3)', 'np.array_equal(observed, img6x6)', 'observed.dtype.type == np.uint8', 'observed.shape == (4, 4)', 'np.array_equal(observed, expected)', 'observed.dtype.type == np.uint8', 'observed.shape == (3, 3)', 'np.array_equal(observed, expected)', 'observed.dtype.type == np.uint8', 'observed.shape == (3, 3)', 'np.array_equal(observed, expected)', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed.shape == (3, 3, 3)', 'np.allclose(observed.arr_0to1, expected)', 'observed.shape == (32, 32, 3)', 'np.allclose(observed.arr_0to1, expected)', 'observed.dtype.type == np.uint8', 'observed.shape == (1, 1)', 'observed.dtype.type == np.uint8', 'observed.shape == (1, 1, 1)', 'observed.dtype.type == np.uint8', 'observed.shape == (1, 1, 3)', 'observed.dtype.type == dtype', 'observed.shape == (1, 1)', 'observed.dtype.type == np.uint8', 'observed.shape == (3, 5, 3)', 'observed.dtype.type == np.uint8', 'observed.shape == (5, 3, 3)', 'observed.dtype.type == np.uint8', 'observed.shape == (5, 5, 3)', 'np.array_equal(observed, img5x5)', 'observed.dtype.type == np.uint8', 'observed.shape == (4, 4, 3)', 'np.array_equal(observed, img4x4)', 'observed.dtype.type == np.uint8', 'observed.shape == (3, 3)', 'np.array_equal(observed, expected)', 'observed.dtype.type == np.uint8', 'observed.shape == (3, 3)', 'np.array_equal(observed, expected)', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed.shape == (3, 3, 3)', 'np.allclose(observed.arr_0to1, expected)', 'observed.shape == (32, 32, 3)', 'np.allclose(observed.arr_0to1, expected)', 'ia.is_np_array(value) == True', 'ia.is_np_array(value) == False', 'ia.is_single_integer() == False', 'ia.is_single_integer(None) == False', 'ia.is_single_integer(1.2) == False', 'ia.is_single_integer(1.0) == False', 'ia.is_single_integer(np.ones((1,), dtype=np.float32)[0]) == False', 'ia.is_single_integer(1) == True', 'ia.is_single_integer(1234) == True', 'ia.is_single_integer(np.ones((1,), dtype=np.uint8)[0]) == True', 'ia.is_single_integer(np.ones((1,), dtype=np.int32)[0]) == True', 'ia.is_single_float() == False', 'ia.is_single_float(None) == False', 'ia.is_single_float(1.2) == True', 'ia.is_single_float(1.0) == True', 'ia.is_single_float(np.ones((1,), dtype=np.float32)[0]) == True', 'ia.is_single_float(1) == False', 'ia.is_single_float(1234) == False', 'ia.is_single_float(np.ones((1,), dtype=np.uint8)[0]) == False', 'ia.is_single_float(np.ones((1,), dtype=np.int32)[0]) == False', 'ia.caller_name() == ', 'ia.is_single_number(value) == True', 'ia.is_single_number(value) == False', 'ia.is_iterable(value) == True, value', 'ia.is_iterable(value) == False', 'ia.is_string(value) == True', 'ia.is_string(value) == False', 'ia.is_single_bool(value) == True', 'ia.is_single_bool(value) == False', 'ia.is_integer_array(value) == True', 'ia.is_integer_array(value) == False', 'ia.is_float_array(value) == True', 'ia.is_float_array(value) == False', 'ia.is_callable(value) == True', 'ia.is_callable(value) == False', 'ia.CURRENT_RANDOM_STATE.randint(0, 1000*1000) == rs.randint(0, 1000*1000)', 'ia.current_random_state() == ia.CURRENT_RANDOM_STATE', 'rs_observed.randint(0, 10**6) == rs_expected.randint(0, 10**6)', 'rs_observed1.randint(0, 10**6) != rs_observed2.randint(0, 10**6)', 'rs_observed.randint(0, 10**6) != rs_not_expected.randint(0, 10**6)', 'rs_observed1.randint(0, 10**6) != rs_observed2.randint(0, 10**6)', 'rs_observed1.randint(0, 10**6) == rs_observed2.randint(0, 10**6) == rs_expected.randint(0, 10**6)', 'ia.dummy_random_state().randint(0, 10**6) == np.random.RandomState(1).randint(0, 10**6)', 'rs != rs_copy', 'rs.randint(0, 10**6) == rs_copy.randint(0, 10**6)', 'ia.copy_random_state(np.random) == np.random', 'ia.copy_random_state(np.random, force_copy=True) != np.random', 'rs_observed.randint(0, 10**6) == rs_expected.randint(0, 10**6)', 'rs_observed1.randint(0, 10**6) == rs_expected1.randint(0, 10**6)', 'rs_observed2.randint(0, 10**6) == rs_expected2.randint(0, 10**6)', 'rs1.randint(0, 10**6) == rs2.randint(0, 10**6)', 'np.sum(diff) == 0', 'diff_fraction < 0.5', 'diff_fraction < 0.5', 'np.sum(diff) == 0', 'diff_fraction < 0.5', 'diff_fraction < 0.5', 'arr_pad.shape == (3, 3)', 'arr_pad.dtype.type == dtype', 'np.array_equal(arr_pad, arr)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype.type == dtype', 'np.all(arr_pad[0, :] == 0)', 'arr_pad.shape == (3, 4)', 'arr_pad.dtype.type == dtype', 'np.all(arr_pad[:, -1] == 0)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype.type == dtype', 'np.all(arr_pad[-1, :] == 0)', 'arr_pad.shape == (3, 4)', 'arr_pad.dtype.type == dtype', 'np.all(arr_pad[:, 0] == 0)', 'arr_pad.shape == (3+(1+3), 3+(2+4))', 'arr_pad.dtype.type == dtype', 'np.all(arr_pad[0, :] == 0)', 'np.all(arr_pad[:, -2:] == 0)', 'np.all(arr_pad[-3:, :] == 0)', 'np.all(arr_pad[:, :4] == 0)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype.type == dtype', 'np.all(arr_pad[0, :] == 10)', 'arr_pad.shape == (4, 3, 3)', 'arr_pad.dtype.type == dtype', 'np.all(arr_pad[0, :, 0] == 0)', 'np.all(arr_pad[0, :, 1] == 0)', 'np.all(arr_pad[0, :, 2] == 0)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype.type == dtype', 'arr_pad[0, 0] == 128', 'arr_pad[0, 1] == 200', 'arr_pad[0, 2] == 128', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype.type == dtype', 'arr_pad[0, 0] == 123', 'arr_pad[0, 1] == 123', 'arr_pad[0, 2] == 123', 'arr_pad[1, 0] == 0', 'arr_pad.shape == (5, 1)', 'arr_pad.dtype.type == dtype', 'arr_pad[0, 0] == 200', 'arr_pad[1, 0] == 175', 'arr_pad[2, 0] == 150', 'arr_pad[3, 0] == 125', 'arr_pad[4, 0] == 100', 'arr_pad.shape == (3, 3)', 'arr_pad.dtype.type == dtype', 'np.allclose(arr_pad, arr)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype.type == dtype', 'np.allclose(arr_pad[0, :], dtype([0, 0, 0]))', 'arr_pad.shape == (3, 4)', 'arr_pad.dtype.type == dtype', 'np.allclose(arr_pad[:, -1], dtype([0, 0, 0]))', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype.type == dtype', 'np.allclose(arr_pad[-1, :], dtype([0, 0, 0]))', 'arr_pad.shape == (3, 4)', 'arr_pad.dtype.type == dtype', 'np.allclose(arr_pad[:, 0], dtype([0, 0, 0]))', 'arr_pad.shape == (3+(1+3), 3+(2+4))', 'arr_pad.dtype.type == dtype', '0 - 1e-6 < np.max(arr_pad[0, :]) < 0 + 1e-6', '0 - 1e-6 < np.max(arr_pad[:, -2:]) < 0 + 1e-6', '0 - 1e-6 < np.max(arr_pad[-3, :]) < 0 + 1e-6', '0 - 1e-6 < np.max(arr_pad[:, :4]) < 0 + 1e-6', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype.type == dtype', 'np.allclose(arr_pad[0, :], dtype([0.2, 0.2, 0.2]))', 'arr_pad.shape == (4, 3, 3)', 'arr_pad.dtype.type == dtype', 'np.allclose(arr_pad[0, :, 0], dtype([0, 0, 0]))', 'np.allclose(arr_pad[0, :, 1], dtype([0, 0, 0]))', 'np.allclose(arr_pad[0, :, 2], dtype([0, 0, 0]))', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype.type == dtype', '0.50 - 1e-6 < arr_pad[0, 0] < 0.50 + 1e-6', '0.75 - 1e-6 < arr_pad[0, 1] < 0.75 + 1e-6', '0.50 - 1e-6 < arr_pad[0, 2] < 0.50 + 1e-6', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype.type == dtype', '0.4 - 1e-6 < arr_pad[0, 0] < 0.4 + 1e-6', '0.4 - 1e-6 < arr_pad[0, 1] < 0.4 + 1e-6', '0.4 - 1e-6 < arr_pad[0, 2] < 0.4 + 1e-6', '0.0 - 1e-6 < arr_pad[1, 0] < 0.0 + 1e-6', 'arr_pad.shape == (5, 1)', 'arr_pad.dtype.type == dtype', '1.0 - 1e-6 < arr_pad[0, 0] < 1.0 + 1e-6', '0.9 - 1e-6 < arr_pad[1, 0] < 0.9 + 1e-6', '0.8 - 1e-6 < arr_pad[2, 0] < 0.8 + 1e-6', '0.7 - 1e-6 < arr_pad[3, 0] < 0.7 + 1e-6', '0.6 - 1e-6 < arr_pad[4, 0] < 0.6 + 1e-6', 'top == 0', 'right == 0', 'bottom == 0', 'left == 0', 'top == 2', 'right == 0', 'bottom == 1', 'left == 0', 'top == 0', 'right == 2', 'bottom == 0', 'left == 1', 'top == 1', 'right == 0', 'bottom == 1', 'left == 0', 'top == 0', 'right == 1', 'bottom == 0', 'left == 1', 'top == 2', 'right == 0', 'bottom == 2', 'left == 0', 'top == 0', 'right == 2', 'bottom == 0', 'left == 2', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 4', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 4', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 4', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 4', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 4', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 8', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 8', 'arr_pad.shape[1] == 4', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 4', 'arr_pad.shape[2] == 3', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 8', 'np.max(arr_pad[:, 0:2]) == 0', 'np.max(arr_pad[:, -2:]) == 0', 'np.max(arr_pad[:, 2:-2]) == 128', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 8', 'np.max(arr_pad[:, 0:2]) == 10', 'np.max(arr_pad[:, -2:]) == 10', 'np.max(arr_pad[:, 2:-2]) == 128', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 8', '0 - 1e-6 <= np.max(arr_pad[:, 0:2]) <= 0 + 1e-6', '0 - 1e-6 <= np.max(arr_pad[:, -2:]) <= 0 + 1e-6', '0.5 - 1e-6 <= np.max(arr_pad[:, 2:-2]) <= 0.5 + 1e-6', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 8', '0.1 - 1e-6 <= np.max(arr_pad[:, 0:2]) <= 0.1 + 1e-6', '0.1 - 1e-6 <= np.max(arr_pad[:, -2:]) <= 0.1 + 1e-6', '0.5 - 1e-6 <= np.max(arr_pad[:, 2:-2]) <= 0.5 + 1e-6', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 8', 'np.max(arr_pad[0:1, 0:2]) == 128', 'np.max(arr_pad[1:3, 0:2]) == 200', 'np.max(arr_pad[3:, 0:2]) == 128', 'np.max(arr_pad[0:1, -2:]) == 128', 'np.max(arr_pad[1:3, -2:]) == 200', 'np.max(arr_pad[3:, -2:]) == 128', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.average([0, 1, 4, 5]))', 'arr_pooled[0, 1] == int(np.average([2, 3, 6, 7]))', 'arr_pooled[1, 0] == int(np.average([8, 9, 12, 13]))', 'arr_pooled[1, 1] == int(np.average([10, 11, 14, 15]))', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.average([0, 1, 4, 5]))', 'arr_pooled[0, 1] == int(np.average([2, 3, 6, 7]))', 'arr_pooled[1, 0] == int(np.average([8, 9, 12, 13]))', 'arr_pooled[1, 1] == int(np.average([10, 11, 14, 15]))', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'np.allclose(arr_pooled[0, 0], np.average([0, 1, 4, 5]))', 'np.allclose(arr_pooled[0, 1], np.average([2, 3, 6, 7]))', 'np.allclose(arr_pooled[1, 0], np.average([8, 9, 12, 13]))', 'np.allclose(arr_pooled[1, 1], np.average([10, 11, 14, 15]))', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == np.float64', 'np.allclose(arr_pooled[0, 0], np.average([0, 1, 4, 5]))', 'np.allclose(arr_pooled[0, 1], np.average([2, 3, 6, 7]))', 'np.allclose(arr_pooled[1, 0], np.average([8, 9, 12, 13]))', 'np.allclose(arr_pooled[1, 1], np.average([10, 11, 14, 15]))', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.max([0, 1, 4, 5]))', 'arr_pooled[0, 1] == int(np.max([2, 3, 6, 7]))', 'arr_pooled[1, 0] == int(np.max([8, 9, 12, 13]))', 'arr_pooled[1, 1] == int(np.max([10, 11, 14, 15]))', 'arr_pooled.shape == (2, 2, 3)', 'np.array_equal(arr_pooled[..., 0], arr_pooled[..., 1])', 'np.array_equal(arr_pooled[..., 1], arr_pooled[..., 2])', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.average([0, 1, 4, 5]))', 'arr_pooled[0, 1] == int(np.average([2, 3, 6, 7]))', 'arr_pooled[1, 0] == int(np.average([8, 9, 12, 13]))', 'arr_pooled[1, 1] == int(np.average([10, 11, 14, 15]))', 'arr_pooled.shape == (2, 4)', 'arr_pooled.dtype == arr.dtype.type', 'np.allclose(arr_pooled[0, 0], np.average([0, 4]))', 'np.allclose(arr_pooled[0, 1], np.average([1, 5]))', 'np.allclose(arr_pooled[0, 2], np.average([2, 6]))', 'np.allclose(arr_pooled[0, 3], np.average([3, 7]))', 'np.allclose(arr_pooled[1, 0], np.average([8, 12]))', 'np.allclose(arr_pooled[1, 1], np.average([9, 13]))', 'np.allclose(arr_pooled[1, 2], np.average([10, 14]))', 'np.allclose(arr_pooled[1, 3], np.average([11, 15]))', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.average([0, 1, 4, 5]))', 'arr_pooled[0, 1] == int(np.average([2, 0, 6, 0]))', 'arr_pooled[1, 0] == int(np.average([8, 9, 0, 0]))', 'arr_pooled[1, 1] == int(np.average([10, 0, 0, 0]))', 'arr_pooled.shape == (1, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.average([0, 4, 0, 0]))', 'arr_pooled[0, 1] == int(np.average([1, 5, 0, 0]))', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.average([0, 1, 4, 5]))', 'arr_pooled[0, 1] == int(np.average([2, 22, 6, 22]))', 'arr_pooled[1, 0] == int(np.average([8, 9, 22, 22]))', 'arr_pooled[1, 1] == int(np.average([10, 22, 22, 22]))', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.average([0, 1, 4, 5]))', 'arr_pooled[0, 1] == int(np.average([2, 3, 6, 7]))', 'arr_pooled[1, 0] == int(np.average([8, 9, 12, 13]))', 'arr_pooled[1, 1] == int(np.average([10, 11, 14, 15]))', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.max([0, 1, 4, 5]))', 'arr_pooled[0, 1] == int(np.max([2, 3, 6, 7]))', 'arr_pooled[1, 0] == int(np.max([8, 9, 12, 13]))', 'arr_pooled[1, 1] == int(np.max([10, 11, 14, 15]))', 'np.array_equal(grid, image)', 'np.array_equal(grid, image)', 'np.array_equal(grid, expected)', 'np.array_equal(grid, expected)', 'np.array_equal(grid, expected)', 'np.array_equal(grid, expected)', 'np.array_equal(grid, expected)', 'kp.y == 1', 'kp.x == 2', 'kp.y_int == 1', 'kp.x_int == 2', '1.1 - eps < kp.y < 1.1 + eps', '2.7 - eps < kp.x < 2.7 + eps', 'kp.y_int == 1', 'kp.x_int == 3', 'kp2.y == 1', 'kp2.x == 2', 'kp2.y == 2', 'kp2.x == 2', 'kp2.y == 1', 'kp2.x == 4', 'kp2.y == 2', 'kp2.x == 4', 'kp2.y == 2', 'kp2.x == 2', 'kp2.y == 0', 'kp2.x == 2', 'kp2.y == 1', 'kp2.x == 3', 'kp2.y == 1', 'kp2.x == 1', 'kp2.y == 2', 'kp2.x == 4', 'kp.__repr__() == kp.__str__() == ', 'kp.__repr__() == kp.__str__() == ', 'kpi.height == 10', 'kpi.width == 20', 'kpi.shape == (10, 20, 3)', 'all([kp_i.x == kp_j.x and kp_i.y == kp_j.y for kp_i, kp_j in zip(kpi.keypoints, kpi2.keypoints)])', 'kpi2.keypoints[0].x == 2', 'kpi2.keypoints[0].y == 4', 'kpi2.keypoints[1].x == 6', 'kpi2.keypoints[1].y == 8', 'kpi2.keypoints[0].x == 2', 'kpi2.keypoints[0].y == 4', 'kpi2.keypoints[1].x == 6', 'kpi2.keypoints[1].y == 8', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask_size3] == [0, 255, 0])', 'np.all(image_kps[~kps_mask_size3] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [0, 0, 255])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [255, 255, 255])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image2 == image_kps)', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image2[kps_mask] == [0, 255, 0])', 'np.all(image2[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'got_exception', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'got_exception', 'kpi2.keypoints[0].x == kpi.keypoints[0].x', 'kpi2.keypoints[0].y == kpi.keypoints[0].y', 'kpi2.keypoints[1].x == kpi.keypoints[1].x', 'kpi2.keypoints[1].y == kpi.keypoints[1].y', 'kpi2.keypoints[0].x == kpi.keypoints[0].x + 1', 'kpi2.keypoints[0].y == kpi.keypoints[0].y', 'kpi2.keypoints[1].x == kpi.keypoints[1].x + 1', 'kpi2.keypoints[1].y == kpi.keypoints[1].y', 'kpi2.keypoints[0].x == kpi.keypoints[0].x - 1', 'kpi2.keypoints[0].y == kpi.keypoints[0].y', 'kpi2.keypoints[1].x == kpi.keypoints[1].x - 1', 'kpi2.keypoints[1].y == kpi.keypoints[1].y', 'kpi2.keypoints[0].x == kpi.keypoints[0].x', 'kpi2.keypoints[0].y == kpi.keypoints[0].y + 1', 'kpi2.keypoints[1].x == kpi.keypoints[1].x', 'kpi2.keypoints[1].y == kpi.keypoints[1].y + 1', 'kpi2.keypoints[0].x == kpi.keypoints[0].x', 'kpi2.keypoints[0].y == kpi.keypoints[0].y - 1', 'kpi2.keypoints[1].x == kpi.keypoints[1].x', 'kpi2.keypoints[1].y == kpi.keypoints[1].y - 1', 'kpi2.keypoints[0].x == kpi.keypoints[0].x + 1', 'kpi2.keypoints[0].y == kpi.keypoints[0].y + 2', 'kpi2.keypoints[1].x == kpi.keypoints[1].x + 1', 'kpi2.keypoints[1].y == kpi.keypoints[1].y + 2', 'np.allclose(observed, expected)', '1 - eps < kpi.keypoints[0].x < 1 + eps', '2 - eps < kpi.keypoints[0].y < 2 + eps', '3 - eps < kpi.keypoints[1].x < 3 + eps', '4 - eps < kpi.keypoints[1].y < 4 + eps', 'np.all(image[kps_mask] == 255)', 'np.all(image[~kps_mask] == 0)', 'np.all(image_size3[kps_mask] == 255)', 'np.all(image_size3[kps_mask_size3] >= 128)', 'np.all(image_size3[~kps_mask_size3] == 0)', 'kpi2.shape == (5, 5, 3)', 'len(kpi2.keypoints) == 2', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[1].x == 3', 'kpi2.shape == (5, 5, 3)', 'len(kpi2.keypoints) == 2', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[1].y == -2', 'kpi2.keypoints[1].x == -1', 'kpi2.shape == (5, 5, 3)', 'len(kpi2.keypoints) == 2', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[1].y == -2', 'kpi2.keypoints[1].x == -1', 'kpi2.shape == (5, 5, 3)', 'len(kpi2.keypoints) == 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1', 'in str(exc)', 'got_exception', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[0].x == 100', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[1].y == 4', 'kpi.__repr__() == kpi.__str__() == expected', 'bb.y1_int == 10', 'bb.x1_int == 20', 'bb.y2_int == 30', 'bb.x2_int == 40', 'bb.width == 40 - 20', 'bb.height == 30 - 10', 'center_x - eps < bb.center_x < center_x + eps', 'center_y - eps < bb.center_y < center_y + eps', 'bb.y1_int == 10', 'bb.x1_int == 20', 'bb.y2_int == 30', 'bb.x2_int == 40', 'bb.y1_int == 10', 'bb.x1_int == 20', 'bb.y2_int == 31', 'bb.x2_int == 41', 'bb.width == 40.9 - 20.1', 'bb.height == 30.9 - 10.1', 'center_x - eps < bb.center_x < center_x + eps', 'center_y - eps < bb.center_y < center_y + eps', 'bb.area == (30-10) * (40-20)', '10 - eps < bb2.y1 < 10 + eps', '20 - eps < bb2.x1 < 20 + eps', '30 - eps < bb2.y2 < 30 + eps', '40 - eps < bb2.x2 < 40 + eps', '10*2 - eps < bb2.y1 < 10*2 + eps', '20*2 - eps < bb2.x1 < 20*2 + eps', '30*2 - eps < bb2.y2 < 30*2 + eps', '40*2 - eps < bb2.x2 < 40*2 + eps', '10*0.5 - eps < bb2.y1 < 10*0.5 + eps', '20*0.5 - eps < bb2.x1 < 20*0.5 + eps', '30*0.5 - eps < bb2.y2 < 30*0.5 + eps', '40*0.5 - eps < bb2.x2 < 40*0.5 + eps', '10*1 - eps < bb2.y1 < 10*1 + eps', '20*2 - eps < bb2.x1 < 20*2 + eps', '30*1 - eps < bb2.y2 < 30*1 + eps', '40*2 - eps < bb2.x2 < 40*2 + eps', '10*2 - eps < bb2.y1 < 10*2 + eps', '20*1 - eps < bb2.x1 < 20*1 + eps', '30*2 - eps < bb2.y2 < 30*2 + eps', '40*1 - eps < bb2.x2 < 40*1 + eps', 'bb2.y1 == 10-1', 'bb2.y2 == 30+1', 'bb2.x1 == 20-1', 'bb2.x2 == 40+1', 'bb2.y1 == 10-(-1)', 'bb2.y2 == 30+(-1)', 'bb2.x1 == 20-(-1)', 'bb2.x2 == 40+(-1)', 'bb2.y1 == 10-1', 'bb2.y2 == 30+0', 'bb2.x1 == 20-0', 'bb2.x2 == 40+0', 'bb2.y1 == 10-0', 'bb2.y2 == 30+0', 'bb2.x1 == 20-0', 'bb2.x2 == 40+1', 'bb2.y1 == 10-0', 'bb2.y2 == 30+1', 'bb2.x1 == 20-0', 'bb2.x2 == 40+0', 'bb2.y1 == 10-0', 'bb2.y2 == 30+0', 'bb2.x1 == 20-1', 'bb2.x2 == 40+0', 'bb_inter.x1 == 39', 'bb_inter.x2 == 40', 'bb_inter.y1 == 10', 'bb_inter.y2 == 30', 'bb_inter == False', 'bb_union.x1 == 20', 'bb_union.x2 == 59', 'bb_union.y1 == 10', 'bb_union.y2 == 30', '1.0 - eps < iou < 1.0 + eps', '0.0 - eps < iou < 0.0 + eps', 'iou_expected - eps < iou < iou_expected + eps', 'bb.is_fully_within_image((100, 100, 3)) == True', 'bb.is_fully_within_image((20, 100, 3)) == False', 'bb.is_fully_within_image((100, 30, 3)) == False', 'bb.is_fully_within_image((1, 1, 3)) == False', 'bb.is_partly_within_image((100, 100, 3)) == True', 'bb.is_partly_within_image((20, 100, 3)) == True', 'bb.is_partly_within_image((100, 30, 3)) == True', 'bb.is_partly_within_image((1, 1, 3)) == False', 'bb.is_out_of_image((100, 100, 3), partly=True, fully=True) == False', 'bb.is_out_of_image((100, 100, 3), partly=False, fully=True) == False', 'bb.is_out_of_image((100, 100, 3), partly=True, fully=False) == False', 'bb.is_out_of_image((20, 100, 3), partly=True, fully=True) == True', 'bb.is_out_of_image((20, 100, 3), partly=False, fully=True) == False', 'bb.is_out_of_image((20, 100, 3), partly=True, fully=False) == True', 'bb.is_out_of_image((100, 30, 3), partly=True, fully=True) == True', 'bb.is_out_of_image((100, 30, 3), partly=False, fully=True) == False', 'bb.is_out_of_image((100, 30, 3), partly=True, fully=False) == True', 'bb.is_out_of_image((1, 1, 3), partly=True, fully=True) == True', 'bb.is_out_of_image((1, 1, 3), partly=False, fully=True) == True', 'bb.is_out_of_image((1, 1, 3), partly=True, fully=False) == False', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', 'bb_cut.y2 == 30', 'bb_cut.x2 == 40', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', 'bb_cut.y2 == 30', 'bb_cut.x2 == 40', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', '20 - 2*eps < bb_cut.y2 < 20', 'bb_cut.x2 == 40', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', 'bb_cut.y2 == 30', '30 - 2*eps < bb_cut.x2 < 30', 'bb_top.y1 == 10', 'bb_top.x1 == 20', 'bb_top.y2 == 30', 'bb_top.x2 == 40', 'bb_right.y1 == 10', 'bb_right.x1 == 20', 'bb_right.y2 == 30', 'bb_right.x2 == 40', 'bb_bottom.y1 == 10', 'bb_bottom.x1 == 20', 'bb_bottom.y2 == 30', 'bb_bottom.x2 == 40', 'bb_left.y1 == 10', 'bb_left.x1 == 20', 'bb_left.y2 == 30', 'bb_left.x2 == 40', 'bb_top.y1 == 10+1', 'bb_top.x1 == 20', 'bb_top.y2 == 30+1', 'bb_top.x2 == 40', 'bb_right.y1 == 10', 'bb_right.x1 == 20-1', 'bb_right.y2 == 30', 'bb_right.x2 == 40-1', 'bb_bottom.y1 == 10-1', 'bb_bottom.x1 == 20', 'bb_bottom.y2 == 30-1', 'bb_bottom.x2 == 40', 'bb_left.y1 == 10', 'bb_left.x1 == 20+1', 'bb_left.y2 == 30', 'bb_left.x2 == 40+1', 'bb_top.y1 == 10-1', 'bb_top.x1 == 20', 'bb_top.y2 == 30-1', 'bb_top.x2 == 40', 'bb_right.y1 == 10', 'bb_right.x1 == 20+1', 'bb_right.y2 == 30', 'bb_right.x2 == 40+1', 'bb_bottom.y1 == 10+1', 'bb_bottom.x1 == 20', 'bb_bottom.y2 == 30+1', 'bb_bottom.x2 == 40', 'bb_left.y1 == 10', 'bb_left.x1 == 20-1', 'bb_left.y2 == 30', 'bb_left.x2 == 40-1', 'bb_mix.y1 == 10+1-2', 'bb_mix.x1 == 20+3-4', 'bb_mix.y2 == 30+3-4', 'bb_mix.x2 == 40+1-2', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image == 0)', 'np.all(image_bb[bb_mask] == [255, 0, 0])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [128, 128, 128])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [150, 150, 150])', 'np.all(image_bb[~bb_mask] == [100, 100, 100])', 'np.sum(np.abs((image_bb - [150, 150, 150])[bb_mask])) < 0.1', 'np.sum(np.abs((image_bb - [100, 100, 100])[~bb_mask])) < 0.1', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image[bb_mask] == [255, 255, 255])', 'np.all(image[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'got_exception == False', 'got_exception == True', 'np.array_equal(image_sub, image[1:3, 1:3, :])', 'np.array_equal(image_sub, image[1:3, 1:3])', 'np.array_equal(image_sub, image[1:3, 1:3])', 'np.array_equal(image_sub, image_pad[8:11, 8:11, :])', 'np.array_equal(image_sub, image_pad[0:4, 0:5, :])', 'kps[0].y == 1', 'kps[0].x == 1', 'kps[1].y == 1', 'kps[1].x == 3', 'kps[2].y == 3', 'kps[2].x == 3', 'kps[3].y == 3', 'kps[3].x == 1', 'bb2.y1 == 1', 'bb2.y2 == 3', 'bb2.x1 == 1', 'bb2.x2 == 3', 'bb2.label == ', 'bb2.y1 == 10', 'bb2.x1 == 20', 'bb2.y2 == 30', 'bb2.x2 == 40', 'bb2.label == ', 'bb2.y1 == 1', 'bb2.y2 == 3', 'bb2.x1 == 1', 'bb2.x2 == 3', 'bb2.label[0] == ', 'bb.__repr__() == ', 'bb.__str__() == ', 'bbsoi.height == 40', 'bbsoi.width == 50', 'bbsoi.height == 40', 'bbsoi.width == 50', 'bbsoi_projected.bounding_boxes[0].y1 == 10', 'bbsoi_projected.bounding_boxes[0].x1 == 20', 'bbsoi_projected.bounding_boxes[0].y2 == 30', 'bbsoi_projected.bounding_boxes[0].x2 == 40', 'bbsoi_projected.bounding_boxes[1].y1 == 15', 'bbsoi_projected.bounding_boxes[1].x1 == 25', 'bbsoi_projected.bounding_boxes[1].y2 == 35', 'bbsoi_projected.bounding_boxes[1].x2 == 45', 'bbsoi_projected.bounding_boxes[0].y1 == 10*2', 'bbsoi_projected.bounding_boxes[0].x1 == 20*2', 'bbsoi_projected.bounding_boxes[0].y2 == 30*2', 'bbsoi_projected.bounding_boxes[0].x2 == 40*2', 'bbsoi_projected.bounding_boxes[1].y1 == 15*2', 'bbsoi_projected.bounding_boxes[1].x1 == 25*2', 'bbsoi_projected.bounding_boxes[1].y2 == 35*2', 'bbsoi_projected.bounding_boxes[1].x2 == 45*2', 'bbsoi_projected.bounding_boxes[0].y1 == 10*2', 'bbsoi_projected.bounding_boxes[0].x1 == 20*2', 'bbsoi_projected.bounding_boxes[0].y2 == 30*2', 'bbsoi_projected.bounding_boxes[0].x2 == 40*2', 'bbsoi_projected.bounding_boxes[1].y1 == 15*2', 'bbsoi_projected.bounding_boxes[1].x1 == 25*2', 'bbsoi_projected.bounding_boxes[1].y2 == 35*2', 'bbsoi_projected.bounding_boxes[1].x2 == 45*2', 'np.all(image[10-1, 20-1, :] == [0, 0, 0])', 'np.all(image[10-1, 20-0, :] == [0, 0, 0])', 'np.all(image[10-0, 20-1, :] == [0, 0, 0])', 'np.all(image[10-0, 20-0, :] == [0, 255, 0])', 'np.all(image[10+1, 20+1, :] == [0, 0, 0])', 'np.all(image[30-1, 40-1, :] == [0, 0, 0])', 'np.all(image[30+1, 40-0, :] == [0, 0, 0])', 'np.all(image[30+0, 40+1, :] == [0, 0, 0])', 'np.all(image[30+0, 40+0, :] == [0, 255, 0])', 'np.all(image[30+1, 40+1, :] == [0, 0, 0])', 'np.all(image[15-1, 25-1, :] == [0, 0, 0])', 'np.all(image[15-1, 25-0, :] == [0, 0, 0])', 'np.all(image[15-0, 25-1, :] == [0, 0, 0])', 'np.all(image[15-0, 25-0, :] == [0, 255, 0])', 'np.all(image[15+1, 25+1, :] == [0, 0, 0])', 'np.all(image[35-1, 45-1, :] == [0, 0, 0])', 'np.all(image[35+1, 45+0, :] == [0, 0, 0])', 'np.all(image[35+0, 45+1, :] == [0, 0, 0])', 'np.all(image[35+0, 45+0, :] == [0, 255, 0])', 'np.all(image[35+1, 45+1, :] == [0, 0, 0])', 'len(bbsoi_slim.bounding_boxes) == 1', 'bbsoi_slim.bounding_boxes[0] == bb1', 'len(bbsoi_cut.bounding_boxes) == 2', 'bbsoi_cut.bounding_boxes[0].y1 == 10', 'bbsoi_cut.bounding_boxes[0].x1 == 20', 'bbsoi_cut.bounding_boxes[0].y2 == 30', 'bbsoi_cut.bounding_boxes[0].x2 == 40', 'bbsoi_cut.bounding_boxes[1].y1 == 15', 'bbsoi_cut.bounding_boxes[1].x1 == 25', 'bbsoi_cut.bounding_boxes[1].y2 == 35', '50 - 2*eps < bbsoi_cut.bounding_boxes[1].x2 < 50', 'len(bbsoi_cut.bounding_boxes) == 2', 'bbsoi_shifted.bounding_boxes[0].y1 == 10', 'bbsoi_shifted.bounding_boxes[0].x1 == 20 - 1', 'bbsoi_shifted.bounding_boxes[0].y2 == 30', 'bbsoi_shifted.bounding_boxes[0].x2 == 40 - 1', 'bbsoi_shifted.bounding_boxes[1].y1 == 15', 'bbsoi_shifted.bounding_boxes[1].x1 == 25 - 1', 'bbsoi_shifted.bounding_boxes[1].y2 == 35', 'bbsoi_shifted.bounding_boxes[1].x2 == 51 - 1', 'len(bbsoi.bounding_boxes) == 2', 'bbsoi_copy.bounding_boxes[0].y1 == 10', 'bbsoi_copy.bounding_boxes[0].x1 == 20', 'bbsoi_copy.bounding_boxes[0].y2 == 30', 'bbsoi_copy.bounding_boxes[0].x2 == 40', 'bbsoi_copy.bounding_boxes[1].y1 == 15', 'bbsoi_copy.bounding_boxes[1].x1 == 25', 'bbsoi_copy.bounding_boxes[1].y2 == 35', 'bbsoi_copy.bounding_boxes[1].x2 == 51', 'bbsoi_copy.bounding_boxes[0].y1 == 0', 'len(bbsoi.bounding_boxes) == 2', 'bbsoi_copy.bounding_boxes[0].y1 == 10', 'bbsoi_copy.bounding_boxes[0].x1 == 20', 'bbsoi_copy.bounding_boxes[0].y2 == 30', 'bbsoi_copy.bounding_boxes[0].x2 == 40', 'bbsoi_copy.bounding_boxes[1].y1 == 15', 'bbsoi_copy.bounding_boxes[1].x1 == 25', 'bbsoi_copy.bounding_boxes[1].y2 == 35', 'bbsoi_copy.bounding_boxes[1].x2 == 51', 'bbsoi_copy.bounding_boxes[0].y1 == 10', 'bbsoi.__repr__() == bbsoi.__str__() == expected', 'heatmaps_drawn.shape == (4, 4, 3)', 'np.allclose(heatmaps_drawn[y, x], v1)', 'np.allclose(heatmaps_drawn[y, x], v2)', 'np.allclose(heatmaps_drawn[y, x], v3)', 'heatmaps_drawn.shape == (4, 4, 3)', 'np.allclose(heatmaps_drawn[y, x], v1)', 'np.allclose(heatmaps_drawn[y, x], v2)', 'heatmaps_drawn.shape == (4, 4, 3)', 'np.all(heatmaps_drawn[0:4, 0:2, :] == 0)', 'np.all(heatmaps_drawn[0:4, 2:3, :] == 128) or np.all(heatmaps_drawn[0:4, 2:3, :] == 127)', 'np.all(heatmaps_drawn[0:4, 3:4, :] == 255) or np.all(heatmaps_drawn[0:4, 3:4, :] == 254)', 'heatmaps_drawn.shape == (2, 2, 3)', 'np.all(heatmaps_drawn[0:2, 0, :] == 0)', 'np.all(heatmaps_drawn[0:2, 1, :] == 128) or np.all(heatmaps_drawn[0:2, 1, :] == 127)', 'np.allclose(heatmaps.get_arr(), heatmaps_arr)', 'np.allclose(heatmaps.invert().get_arr(), expected)', 'np.allclose(heatmaps.get_arr(), heatmaps_arr[..., np.newaxis])', 'np.allclose(heatmaps.invert().get_arr(), expected[..., np.newaxis])', 'heatmaps_padded.arr_0to1.shape == (2+(1+3), 2+(4+2), 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (2+(1+3), 2+(4+2), 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (2+(1+3), 2+(4+2), 1)', 'np.allclose(', 'heatmaps_pooled.arr_0to1.shape == (2, 2, 1)', 'np.allclose(', 'heatmaps_pooled.arr_0to1.shape == (2, 2, 1)', 'np.allclose(', 'heatmaps_scaled.arr_0to1.shape == (4, 4, 1)', 'heatmaps_scaled.arr_0to1.dtype.type == np.float32', 'np.allclose(', 'heatmaps_scaled.arr_0to1.shape == (2, 4, 1)', 'heatmaps_scaled.arr_0to1.dtype.type == np.float32', 'np.allclose(', 'arr.dtype.type == np.bool_', 'observed.dtype.type == np.int32', 'np.array_equal(arr, observed)', 'arr.dtype.type == np.bool_', 'observed.dtype.type == np.int32', 'np.array_equal(arr, observed)', 'observed.dtype.type == np.int32', 'np.array_equal(arr, observed)', 'observed.dtype.type == np.int32', 'np.array_equal(observed, expected)', 'in str(exc)', 'got_exception', 'observed.dtype.type == np.int32', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed_fg, expected_fg)', 'np.array_equal(observed, expected)', 'np.array_equal(observed_fg, expected_fg)', 'np.array_equal(observed, image)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'observed.shape == expected.shape', 'd_max <= 1.0 + 1e-4', 'observed.shape == expected.shape', 'd_max <= 1.0 + 1e-4', 'observed.shape == expected.shape', 'd_max <= 1.0 + 1e-4', 'observed.shape == expected.shape', 'd_max <= 1.0 + 1e-4', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'pad_amounts == (2, 0, 2, 0)', 'np.allclose(observed, expected)', 'np.array_equal(segmap_scaled.get_arr_int(), np.int32([', 'np.allclose(observed, expected)', 'np.array_equal(segmap_scaled.get_arr_int(), np.int32([', 'np.allclose(observed, expected)', 'np.array_equal(segmap_scaled.get_arr_int(), np.int32([', 'np.allclose(heatmaps.arr_0to1, expected)', 'np.allclose(heatmaps.arr_0to1, expected)', 'len(class_indices) == 3', '[idx in class_indices for idx in [0, 1, 2]]', 'np.allclose(heatmaps.arr_0to1, expected)', 'len(class_indices) == 2', '[idx in class_indices for idx in [0, 2]]', 'heatmaps is None', 'len(class_indices) == 0', 'np.allclose(heatmaps.arr_0to1, np.zeros((2, 2), dtype=np.float32))', 'len(class_indices) == 1', '[idx in class_indices for idx in [0]]', 'np.allclose(segmap.arr, arr)', 'np.allclose(segmap.arr, expected)', 'np.allclose(observed.arr, segmap.arr)', 'observed.shape == (2, 2)', 'observed.nb_classes == segmap.nb_classes', 'observed.input_was == segmap.input_was', 'np.array_equal(observed.get_arr_int(), arr)', 'observed.shape == (2, 2)', 'observed.nb_classes == 10', 'observed.input_was == segmap.input_was', 'np.allclose(observed.arr, segmap.arr)', 'observed.shape == (2, 2)', 'observed.nb_classes == segmap.nb_classes', 'observed.input_was == segmap.input_was', 'not np.allclose(observed.arr, segmap.arr)', 'np.array_equal(observed.get_arr_int(), segmap.get_arr_int())', 'observed.shape == (2, 2)', 'observed.nb_classes == 10', 'observed.input_was == segmap.input_was', 'not np.array_equal(observed.get_arr_int(), segmap.get_arr_int())', 'poly.exterior.dtype.type == np.float32', 'np.allclose(', 'poly.exterior.dtype.type == np.float32', 'np.allclose(', 'poly.exterior.dtype.type == np.float32', 'np.allclose(', 'poly.exterior.dtype.type == np.float32', 'np.allclose(', 'poly.exterior.dtype.type == np.float32', 'np.allclose(', 'poly.exterior.dtype.type == np.float32', 'poly.exterior.shape == (0, 2)', 'poly.exterior.dtype.type == np.float32', 'poly.exterior.shape == (0, 2)', 'got_exception', 'poly.label is None', 'poly.label == ', 'poly.xx.dtype.type == np.float32', 'np.allclose(poly.xx, np.float32([0.0, 1.0, 1.5, 4.1, 2.9]))', 'poly.xx.dtype.type == np.float32', 'poly.xx.shape == (0,)', 'poly.yy.dtype.type == np.float32', 'np.allclose(poly.yy, np.float32([0.0, 1.0, 1.5, 4.1, 2.9]))', 'poly.yy.dtype.type == np.float32', 'poly.yy.shape == (0,)', 'poly.xx_int.dtype.type == np.int32', 'np.allclose(poly.xx_int, np.int32([0, 1, 2, 4, 3]))', 'poly.xx_int.dtype.type == np.int32', 'poly.xx_int.shape == (0,)', 'poly.yy_int.dtype.type == np.int32', 'np.allclose(poly.yy_int, np.int32([0, 1, 2, 4, 3]))', 'poly.yy_int.dtype.type == np.int32', 'poly.yy_int.shape == (0,)', 'poly.is_valid', 'not poly.is_valid', 'not poly.is_valid', 'not poly.is_valid', 'not poly.is_valid', 'poly.is_valid', 'poly.area == 1', '1.0 - 1e-8 < poly.area < 1.0 + 1e-8', 'poly.area == 2', '2.0 - 1e-8 < poly.area < 2.0 + 1e-8', '1/2 - 1e-8 < poly.area < 1/2 + 1e-8', 'poly_proj.exterior.dtype.type == np.float32', 'poly_proj.exterior.shape == (4, 2)', 'np.allclose(', 'poly_proj.exterior.dtype.type == np.float32', 'poly_proj.exterior.shape == (4, 2)', 'np.allclose(', 'poly_proj.exterior.dtype.type == np.float32', 'poly_proj.exterior.shape == (4, 2)', 'np.allclose(', 'poly_proj.exterior.dtype.type == np.float32', 'poly_proj.exterior.shape == (0, 2)', 'np.array_equal(mask, np.array([True, True, True, True], dtype=bool))', 'np.array_equal(mask, np.array([True, False, False, False], dtype=bool))', 'np.array_equal(mask, np.array([True, False, False, False], dtype=bool))', 'np.array_equal(mask, np.array([True, False, False, False], dtype=bool))', 'poly.is_fully_within_image((1, 1, 3))', 'poly.is_fully_within_image((1, 1))', 'poly.is_fully_within_image(np.zeros((1, 1, 3), dtype=np.uint8))', 'not poly.is_fully_within_image((1, 1, 3))', 'not poly.is_fully_within_image((1, 1))', 'not poly.is_fully_within_image(np.zeros((1, 1, 3), dtype=np.uint8))', 'not poly.is_fully_within_image((1, 1, 3))', 'poly.is_partly_within_image((1, 1, 3))', 'poly.is_partly_within_image((1, 1))', 'poly.is_partly_within_image(np.zeros((1, 1, 3), dtype=np.uint8))', 'poly.is_partly_within_image((1, 1, 3))', 'poly.is_partly_within_image((1, 1))', 'poly.is_partly_within_image(np.zeros((1, 1, 3), dtype=np.uint8))', 'not poly.is_partly_within_image((1, 1, 3))', 'not poly.is_partly_within_image((1, 1))', 'not poly.is_partly_within_image(np.zeros((1, 1, 3), dtype=np.uint8))', 'not poly.is_out_of_image(shape, partly=False, fully=False)', 'not poly.is_out_of_image(shape, partly=True, fully=False)', 'not poly.is_out_of_image(shape, partly=False, fully=True)', 'not poly.is_out_of_image(shape, partly=True, fully=True)', 'not poly.is_out_of_image(shape, partly=False, fully=False)', 'poly.is_out_of_image(shape, partly=True, fully=False)', 'not poly.is_out_of_image(shape, partly=False, fully=True)', 'poly.is_out_of_image(shape, partly=True, fully=True)', 'not poly.is_out_of_image(shape, partly=False, fully=False)', 'not poly.is_out_of_image(shape, partly=True, fully=False)', 'poly.is_out_of_image(shape, partly=False, fully=True)', 'poly.is_out_of_image(shape, partly=True, fully=True)', 'isinstance(multipoly_clipped, ia.MultiPolygon)', 'len(multipoly_clipped.geoms) == 1', 'multipoly_clipped.geoms[0].exterior_almost_equals(poly.exterior)', 'multipoly_clipped.geoms[0].label is None', 'isinstance(multipoly_clipped, ia.MultiPolygon)', 'len(multipoly_clipped.geoms) == 1', 'multipoly_clipped.geoms[0].exterior_almost_equals(np.float32([', 'multipoly_clipped.geoms[0].label == ', 'isinstance(multipoly_clipped, ia.MultiPolygon)', 'len(multipoly_clipped.geoms) == 2', 'multipoly_clipped.geoms[0].exterior_almost_equals(np.float32([', 'multipoly_clipped.geoms[0].label == ', 'multipoly_clipped.geoms[1].exterior_almost_equals(np.float32([', 'multipoly_clipped.geoms[0].label == ', 'np.allclose(poly.exterior, np.float32([', 'np.allclose(poly_shifted.exterior, np.float32([', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))  # draw did not change original image (copy=True)', 'np.all(image_poly[2:9, 2:3, c_idx] == np.zeros((7, 1), dtype=np.uint8) + value)  # left boundary', 'np.all(image_poly[2:9, 8:9, c_idx] == np.zeros((7, 1), dtype=np.uint8) + value)  # right boundary', 'np.all(image_poly[2:3, 2:9, c_idx] == np.zeros((1, 7), dtype=np.uint8) + value)  # top boundary', 'np.all(image_poly[8:9, 2:9, c_idx] == np.zeros((1, 7), dtype=np.uint8) + value)  # bottom boundary', 'np.all(image_poly[3:8, 3:8, :] == expected)', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))  # draw did not change original image (copy=True)', 'np.all(image_poly[2+5:, 2:3, c_idx] == np.zeros((3, 1), dtype=np.uint8) + value)  # left boundary', 'np.all(image_poly[2+5:, 8:9, c_idx] == np.zeros((3, 1), dtype=np.uint8) + value)  # right boundary', 'np.all(image_poly[2+5:3+5, 2:9, c_idx] == np.zeros((1, 7), dtype=np.uint8) + value)  # top boundary', 'np.all(image_poly[3+5:, 3:8, :] == expected)', 'in str(exc)', 'not got_exception  # only polygons fully outside of the image plane lead to exceptions', 'np.array_equal(image_poly, image)', 'in str(exc)', 'got_exception', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))  # draw did not change original image (copy=True)', 'np.all(image_poly[2:9, 2:3, c_idx] == np.zeros((7, 1), dtype=np.uint8) + value)  # left boundary', 'np.all(image_poly[3:8, 3:8, :] == image[3:8, 3:8, :])', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))  # draw did not change original image (copy=True)', 'np.all(image_poly[2:8, 2:8, :] == expected)', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.all(image_cp == image_poly)', 'not np.all(image_cp == image)', 'np.all(image_poly[2:9, 2:3, c_idx] == np.zeros((6, 1, 3), dtype=np.uint8) + value)  # left boundary', 'np.all(image_cp[2:9, 2:3, c_idx] == np.zeros((6, 1, 3), dtype=np.uint8) + value)  # left boundary', 'np.all(image_poly[3:8, 3:8, :] == expected)', 'np.all(image_cp[3:8, 3:8, :] == expected)', 'np.array_equal(subimage, image[0:10, 0:10, :])', 'np.array_equal(subimage, image[1:9, 1:9, :])', 'np.array_equal(subimage, expected)', 'np.array_equal(subimage, expected)', 'np.array_equal(subimage, expected)', 'np.array_equal(subimage, image[0:10, 0:10, :])', 'np.array_equal(subimage, image[0:9, 0:9, :])', 'np.array_equal(subimage, image[1:9, 1:9, :])', 'np.allclose(poly.exterior, poly_reordered.exterior)', 'np.allclose(poly.exterior, np.float32([[0, 0], [1, 0], [1, 1]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [1, 1], [0, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 1], [0, 0], [1, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [1, 1], [0, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [1, 1], [0, 0]]))', 'in str(exc)', 'got_exception', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [0, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[0, 0]]))', 'np.allclose(poly.exterior, poly_reordered.exterior)', 'np.allclose(poly.exterior, np.float32([[0, 0], [1, 0], [1, 1]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [1, 1], [0, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 1], [0, 0], [1, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [0, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[0, 0]]))', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'np.allclose(ls.coords, np.float32([[0, 0], [1, 0], [1, 1]]))', 'np.allclose(ls.coords, np.float32([[0, 0], [1, 0]]))', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'np.allclose(ls.coords, np.float32([[0, 0], [1, 0], [1, 1], [0, 0]]))', 'np.allclose(ls.coords, np.float32([[0, 0], [0.5, 0], [1, 0], [1, 0.5], [1, 1], [0.5, 0.5]]))', 'np.allclose(ls.coords, np.float32([', 'np.allclose(ls.coords, np.float32([[0, 0], [0.5, 0], [1, 0], [1, 0.5], [1, 1], [0.5, 0.5], [0, 0]]))', 'x_exp - 1e-8 < x_obs < x_exp + 1e-8', 'y_exp - 1e-8 < y_obs < y_exp + 1e-8', '0 - 1e-8 < bb.x1 < 0 + 1e-8', '0 - 1e-8 < bb.y1 < 0 + 1e-8', '1 - 1e-8 < bb.x2 < 1 + 1e-8', '1 - 1e-8 < bb.y2 < 1 + 1e-8', '0 - 1e-8 < bb.x1 < 0 + 1e-8', '0 - 1e-8 < bb.y1 < 0 + 1e-8', '1 - 1e-8 < bb.x2 < 1 + 1e-8', '1 - 1e-8 < bb.y2 < 1 + 1e-8', '0.5 - 1e-8 < bb.x1 < 0.5 + 1e-8', '0.1 - 1e-8 < bb.y1 < 0.1 + 1e-8', '2.0 - 1e-8 < bb.x2 < 2.0 + 1e-8', '1.0 - 1e-8 < bb.y2 < 1.0 + 1e-8', 'x_exp - 1e-8 < x_obs < x_exp + 1e-8', 'y_exp - 1e-8 < y_obs < y_exp + 1e-8', 'poly.exterior.dtype.type == poly_cp.exterior.dtype.type', 'poly.exterior.shape == poly_cp.exterior.shape', 'np.allclose(poly.exterior, poly_cp.exterior)', 'poly.label == poly_cp.label', 'poly.exterior.dtype.type == poly_cp.exterior.dtype.type', 'poly.exterior.shape == poly_cp.exterior.shape', 'np.allclose(poly.exterior, poly_cp.exterior)', 'poly.label == poly_cp.label', 'poly.exterior.dtype.type == poly_cp.exterior.dtype.type', 'poly.exterior.shape == poly_cp.exterior.shape', 'not np.allclose(poly.exterior, poly_cp.exterior)', 'not poly.label == poly_cp.label', 's == ', 's == ', 's == ', 's == ', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-3)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-9)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-9)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-9)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-4, interpolate=0)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-4, interpolate=1)', 'poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'len(loaded) == 20*nb_workers,  % (20*nb_workers, len(loaded), nb_workers, counter)', 'loader.all_finished()', 'len(loaded) == 20*nb_workers,  % (20*nb_workers, len(loaded), nb_workers, counter)', 'loader.all_finished()', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Uniform)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Uniform)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Uniform)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Uniform)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Uniform)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception == True', 'in str(e)', 'got_exception == False', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.DiscreteUniform)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.DiscreteUniform)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.DiscreteUniform)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.DiscreteUniform)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.DiscreteUniform)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.DiscreteUniform)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception == True', 'in str(e)', 'got_exception == False', 'in str(e)', 'got_exception == True', 'isinstance(p, iap.Deterministic)', 'p.value == int(val)', 'isinstance(p, iap.Binomial)', 'isinstance(p.p, iap.Deterministic)', 'val-1e-8 < p.p.value < val+1e-8', 'p == det', 'in str(exc)', 'got_exception', 'got_exception', 'got_exception', 'iap.force_np_float_dtype(np.zeros((1,), dtype=dtype_in)).dtype == dtype_out,\\', 'a2.dtype.type == np.float16, a2.dtype.type', 'b2.dtype.type == np.float32, b2.dtype.type', 'a2.dtype.type == np.float16, a2.dtype.type', 'b2.dtype.type == np.float64, b2.dtype.type', 'a2.dtype.type == np.float64, a2.dtype.type', 'b2.dtype.type == np.float16, b2.dtype.type', 'a2.dtype.type == np.float64, a2.dtype.type', 'b2.dtype.type == np.float64, b2.dtype.type', 'np.average(diff) < 10', 'graph_img.ndim == 3', 'graph_img.shape[2] == 3', 'nb_white > 0.1 * nb_all', 'graph_img_title.ndim == 3', 'graph_img_title.shape[2] == 3', 'not np.array_equal(graph_img_title, graph_img)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == 0', 'np.all(samples == 0)', 'param.__str__() == param.__repr__() == ', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == 1', 'np.all(samples == 1)', 'param.__str__() == param.__repr__() == ', 'sample.shape == tuple()', 'samples.shape == (10000,)', 'sample in [0, 1]', 'len(unique) == 2', '5000 - 500 < count < 5000 + 500', '5000 - 500 < count < 5000 + 500', 'False', '(0.25 - 0.05 < p < 0.25 + 0.05) or (0.75 - 0.05 < p < 0.75 + 0.05)', 'nb_p_changed > 15', 'np.array_equal(samples1, samples2)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [0, 1, 2]', 'np.all(np.logical_or(np.logical_or(samples == 0, samples == 1), samples==2))', 'param.__str__() == param.__repr__() == ', 'expected - expected_tolerance < count < expected + expected_tolerance', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [-1, 1]', 'np.all(np.logical_or(samples == -1, samples == 1))', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '-1.2 - eps < sample < -1.2 + eps or 1.7 - eps < sample < 1.7 + eps', 'np.all(', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in []', 'np.all(', 'all([count in [0, 1] for count in seen])', 'len(unique) == 2', '2500 - 500 < count < 2500 + 500', '7500 - 500 < count < 7500 + 500', 'False', 'len(unique) == 3', '2500 - 500 < count < 2500 + 500', '5000 - 500 < count < 5000 + 500', 'False', 'np.array_equal(samples1, samples2)', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [0, 1, 2]', 'np.all(np.logical_or(np.logical_or(samples == 0, samples == 1), samples==2))', 'param.__str__() == param.__repr__() == ', 'expected - expected_tolerance < count < expected + expected_tolerance', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [-1, 0, 1]', 'np.all(np.logical_or(np.logical_or(samples == -1, samples == 0), samples==1))', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [-1, 0, 1]', 'np.all(np.logical_or(np.logical_or(samples == -1, samples == 0), samples==1))', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [-1, 0, 1]', 'np.all(np.logical_or(np.logical_or(samples == -1, samples == 0), samples==1))', 'sample == 1', 'np.all(samples == 1)', 'np.array_equal(samples1, samples2)', 'sample.shape == tuple()', 'samples.shape == (100, 1000)', '0 < sample', 'param.__str__() == param.__repr__() == ', 'count_direct - tolerance < count < count_direct + tolerance', 'np.array_equal(samples1, samples2)', 'sample.shape == tuple()', 'samples.shape == (100, 1000)', 'param.__str__() == param.__repr__() == ', 'density_direct - tolerance < density < density_direct + tolerance', 'False', '500 - 100 < seen[0] < 500 + 100', '500 - 100 < seen[1] < 500 + 100', 'np.std(samples1) < np.std(samples2)', '100 - 10 < np.std(samples2) < 100 + 10', 'np.allclose(samples1, samples2)', 'sample.shape == tuple()', 'samples.shape == (100, 1000)', 'param.__str__() == param.__repr__() == ', 'density_direct - tolerance < density < density_direct + tolerance', 'False', '500 - 100 < seen[0] < 500 + 100', '500 - 100 < seen[1] < 500 + 100', 'np.var(samples1) < np.var(samples2)', 'np.all(np.logical_and(', 'np.allclose(samples1, samples2)', 'sample.shape == tuple()', 'samples.shape == (100, 1000)', '0 <= sample', 'np.all(0 <= samples)', 'param.__str__() == param.__repr__() == ', 'density_direct - tolerance < density < density_direct + tolerance', 'False', '500 - 100 < seen[0] < 500 + 100', '500 - 100 < seen[1] < 500 + 100', 'np.var(samples1) < np.var(samples2)', '2*1 - 1.0 < np.var(samples1) < 2*1 + 1.0', '2*10 - 5.0 < np.var(samples2) < 2*10 + 5.0', 'np.allclose(samples1, samples2)', 'sample.shape == tuple()', 'samples.shape == (100, 1000)', '0 <= sample', 'np.all(0 <= samples)', 'param.__str__() == param.__repr__() == ', 'density_direct - tolerance < density < density_direct + tolerance', 'False', '50 - 25 < seen[0] < 50 + 25', '50 - 25 < seen[1] < 50 + 25', 'np.var(samples1) < np.var(samples2)', 'expected_first - 0.2 * expected_first < np.var(samples1) < expected_first + 0.2 * expected_first', 'expected_second - 0.2 * expected_second < np.var(samples2) < expected_second + 0.2 * expected_second', 'np.allclose(samples1, samples2)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '0 - eps < sample < 1.0 + eps', 'np.all(np.logical_and(0 - eps < samples, samples < 1.0 + eps))', 'param.__str__() == param.__repr__() == ', 'density_expected - density_tolerance < density < density_expected + density_tolerance', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '-1.0 - eps < sample < 1.0 + eps', 'np.all(np.logical_and(-1.0 - eps < samples, samples < 1.0 + eps))', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '-1.0 - eps < sample < 1.0 + eps', 'np.all(np.logical_and(-1.0 - eps < samples, samples < 1.0 + eps))', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '-1.0 - eps < sample < 1.0 + eps', 'np.all(np.logical_and(-1.0 - eps < samples, samples < 1.0 + eps))', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '1.0 - eps < sample < 1.0 + eps', 'np.all(np.logical_and(1.0 - eps < samples, samples < 1.0 + eps))', 'np.allclose(samples1, samples2)', 'sample.shape == tuple()', 'samples.shape == (100, 1000)', '0 - eps < sample < 1.0 + eps', 'np.all(np.logical_and(0 - eps <= samples, samples <= 1.0 + eps))', 'param.__str__() == param.__repr__() == ', 'density_direct - tolerance < density < density_direct + tolerance', 'False', '50 - 25 < seen[0] < 50 + 25', '50 - 25 < seen[1] < 50 + 25', 'np.var(samples1) < np.var(samples2)', 'expected_first - 0.1 * expected_first < np.var(samples1) < expected_first + 0.1 * expected_first', 'expected_second - 0.1 * expected_second < np.var(samples2) < expected_second + 0.1 * expected_second', 'np.allclose(samples1, samples2)', 'sample1.shape == tuple()', 'sample1 == sample2', 'samples1.shape == (10,)', 'samples2.shape == (10,)', 'samples3.shape == (5, 3)', 'samples4.shape == (5, 3)', 'samples5.shape == (4, 5, 3)', 'samples6.shape == (4, 5, 3)', 'len(samples1_unique) == 1 and samples1_unique[0] == value', 'len(samples2_unique) == 1 and samples2_unique[0] == value', 'len(samples3_unique) == 1 and samples3_unique[0] == value', 'len(samples4_unique) == 1 and samples4_unique[0] == value', 'len(samples5_unique) == 1 and samples5_unique[0] == value', 'len(samples6_unique) == 1 and samples6_unique[0] == value', 'np.array_equal(', 'sample1.shape == tuple()', 'sample1 - eps < sample2 < sample1 + eps', 'samples1.shape == (10,)', 'samples2.shape == (10,)', 'samples3.shape == (5, 3)', 'samples4.shape == (5, 3)', 'samples5.shape == (4, 5, 3)', 'samples6.shape == (4, 5, 3)', 'samples1_sorted[0] - eps < samples1_sorted[-1] < samples1_sorted[0] + eps', 'samples2_sorted[0] - eps < samples2_sorted[-1] < samples2_sorted[0] + eps', 'samples3_sorted[0] - eps < samples3_sorted[-1] < samples3_sorted[0] + eps', 'samples4_sorted[0] - eps < samples4_sorted[-1] < samples4_sorted[0] + eps', 'samples5_sorted[0] - eps < samples5_sorted[-1] < samples5_sorted[0] + eps', 'samples6_sorted[0] - eps < samples6_sorted[-1] < samples6_sorted[0] + eps', 'np.allclose(', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', 'in str(exc)', 'got_exception', 'samples.shape == (8, 8, 1)', 'len(uq) == 2 and (0 in uq or 1 in uq)', 'samples_nhwc.shape == (1, 8, 8, 1)', 'len(uq) == 2 and (0 in uq or 1 in uq)', 'in str(exc)', 'got_exception', 'samples.shape == (8, 8, 3)', 'len(uq) == 2 and (0 in uq or 1 in uq)', 'seen_components[0] < seen_components[1]', 'seen_pixels[0] / seen_components[0] > seen_pixels[1] / seen_components[1]', 'seen_components[0] < seen_components[1]', 'seen_pixels[0] / seen_components[0] > seen_pixels[1] / seen_components[1]', 'seen_components[0] < seen_components[1]', 'seen_pixels[0] / seen_components[0] > seen_pixels[1] / seen_components[1]', 'in str(exc)', 'got_exception', 'seen_components[0] < seen_components[1]', 'seen_pixels[0] / seen_components[0] > seen_pixels[1] / seen_components[1]', 'seen_components[0] < seen_components[1]', 'seen_pixels[0] / seen_components[0] > seen_pixels[1] / seen_components[1]', 'seen_components[0] < seen_components[1]', 'seen_pixels[0] / seen_components[0] > seen_pixels[1] / seen_components[1]', 'in str(exc)', 'got_exception', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', 'in str(exc)', 'got_exception', 'np.allclose(samples1, samples2)', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == 0', 'np.all(samples == 0)', 'param.__str__() == param.__repr__() == ', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == 1', 'np.all(samples == 1)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == -1', 'np.all(samples == -1)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '0.5 - eps < sample < 0.5 + eps', 'np.all(np.logical_and(0.5 - eps < samples, samples < 0.5 + eps))', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == 1', 'np.all(samples == 1)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == -1', 'np.all(samples == -1)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [0, 1]', 'np.all(np.logical_or(samples == 0, samples == 1))', 'np.array_equal(samples1, samples2)', 'sample == 0', 'param.__str__() == param.__repr__() == ', 'sample == 0', 'param.__str__() == param.__repr__() == ', 'sample == 0', 'param.__str__() == param.__repr__() == ', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == value_expected', 'np.all(samples == value_expected)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [0, 1]', 'np.all(np.logical_or(samples == 0, samples == 1))', 'np.all(np.abs(samples1 - samples2) < 0.2*(10000/3))', 'np.array_equal(samples1, samples2)', 'param.__str__() == param.__repr__() == ', 'p.draw_sample() == v1 * v2', 'samples.dtype == np.int64', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.int64) + v1 * v2)', 'p.draw_sample() == v1 * v2', 'samples.dtype == np.int64', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.int64) + v1 * v2)', 'v1 * v2 - eps < p.draw_sample() < v1 * v2 + eps', 'samples.dtype == np.float64', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 * v2)', 'v1 * v2 - eps < p.draw_sample() < v1 * v2 + eps', 'samples.dtype == np.float64', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 * v2)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 * 1.0 - eps)', 'np.all(samples < 1.0 * 2.0 + eps)', 'samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 * 1.0 - eps)', 'np.all(samples < 1.0 * 2.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 * 1.0 - eps)', 'np.all(samples < 2.0 * 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 * 1.0 - eps)', 'np.all(samples < 2.0 * 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'param.__str__() == param.__repr__() == ', 'p.draw_sample() == v1 / v2', 'samples.dtype == np.float64', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.float64) + v1 / v2)', 'p.draw_sample() == v1 / v2', 'samples.dtype == np.float64', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.float64) + v1 / v2)', 'v1 / v2 - eps < p.draw_sample() < v1 / v2 + eps', 'samples.dtype == np.float64', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 / v2)', 'v1 / v2 - eps < p.draw_sample() < v1 / v2 + eps', 'samples.dtype == np.float64', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 / v2)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 / 2.0 - eps)', 'np.all(samples < 1.0 / 1.0 + eps)', 'samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 / 2.0 - eps)', 'np.all(samples < 1.0 / 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 / 1.0 - eps)', 'np.all(samples < 2.0 / 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'sample == 1', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 / 1.0 - eps)', 'np.all(samples < 2.0 / 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'samples_unique[0] == 1 and samples_unique[1] == 2', 'param.__str__() == param.__repr__() == ', 'p.draw_sample() == v1 + v2', 'samples.dtype == np.int64', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.int64) + v1 + v2)', 'p.draw_sample() == v1 + v2', 'samples.dtype == np.int64', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.int64) + v1 + v2)', 'v1 + v2 - eps < p.draw_sample() < v1 + v2 + eps', 'samples.dtype == np.float64', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 + v2)', 'v1 + v2 - eps < p.draw_sample() < v1 + v2 + eps', 'samples.dtype == np.float64', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 + v2)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 + 1.0 - eps)', 'np.all(samples < 1.0 + 2.0 + eps)', 'samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 + 1.0 - eps)', 'np.all(samples < 1.0 + 2.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 + 1.0 - eps)', 'np.all(samples < 2.0 + 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 + 1.0 - eps)', 'np.all(samples < 2.0 + 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'param.__str__() == param.__repr__() == ', 'p.draw_sample() == v1 - v2', 'samples.dtype == np.int64', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.int64) + v1 - v2)', 'p.draw_sample() == v1 - v2', 'samples.dtype == np.int64', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.int64) + v1 - v2)', 'v1 - v2 - eps < p.draw_sample() < v1 - v2 + eps', 'samples.dtype == np.float64', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 - v2)', 'v1 - v2 - eps < p.draw_sample() < v1 - v2 + eps', 'samples.dtype == np.float64', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 - v2)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 - 2.0 - eps)', 'np.all(samples < 1.0 - 1.0 + eps)', 'samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 - 2.0 - eps)', 'np.all(samples < 1.0 - 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 - 1.0 - eps)', 'np.all(samples < 2.0 - 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 - 1.0 - eps)', 'np.all(samples < 2.0 - 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'param.__str__() == param.__repr__() == ', 'v1 ** v2 - eps < p.draw_sample() < v1 ** v2 + eps', 'samples.dtype == np.float64', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 ** v2)', 'v1 ** v2 - eps < p.draw_sample() < v1 ** v2 + eps', 'samples.dtype == np.float64', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 ** v2)', 'samples.shape == (10, 20)', 'np.all(samples > 1.5 ** 1.0 - eps)', 'np.all(samples < 1.5 ** 2.0 + eps)', 'samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps', 'samples.shape == (10, 20)', 'np.all(samples > 1.5 ** 1.0 - eps)', 'np.all(samples < 1.5 ** 2.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 ** 1.0 - eps)', 'np.all(samples < 2.0 ** 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 ** 1.0 - eps)', 'np.all(samples < 2.0 ** 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'param.__str__() == param.__repr__() == ', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'abs(value) - eps < sample < abs(value) + eps', 'np.all(abs(value) - eps < samples)', 'np.all(samples < abs(value) + eps)', 'sample == abs(value)', 'np.all(samples == abs(value))', 'sample.shape == tuple()', 'sample in [3, 1]', 'samples.shape == (10, 10)', 'len(samples_uq) == 2', 'samples_uq[0] == 1 and samples_uq[1] == 3', 'param.__str__() == param.__repr__() == ', 'samples.shape == (1000,)', 'n_positive + n_negative == 1000', '350 < n_positive < 750', 'sample.shape == tuple()', 'n_positive + n_negative == 1000', '350 < n_positive < 750', 'np.sum(seen) == 4000', 'all([700 < v < 1300 for v in seen])', 'samples1.shape == (100, 10)', 'samples2.shape == (100, 10)', 'np.array_equal(samples1, samples2)', 'np.sum(samples == -2) > 50', 'np.sum(samples == -1) > 50', 'np.sum(samples == 1) > 50', 'np.sum(samples == 2) > 50', 'param.__str__() == param.__repr__() == ', 'sample.shape == tuple()', 'sample == 1', 'sample.shape == tuple()', 'sample == -1', 'samples.shape == (100,)', 'np.all(samples == 1)', 'samples.shape == (100,)', 'np.all(samples == -1)', 'samples.shape == (100,)', 'np.all(samples == 1)', 'samples.shape == (100,)', 'np.all(samples == -1)', 'samples.shape == (1000,)', 'n_twos + n_ones == 1000', '200 < n_twos < 700', '200 < n_ones < 700', 'samples.shape == (1000,)', 'n_twos + n_ones == 1000', 'n_twos > 0', 'n_ones > 0', 'samples.shape == (100,)', 'n_twos + n_ones == 100', 'n_twos < 5', 'samples1.shape == (100, 10)', 'samples2.shape == (100, 10)', 'np.array_equal(samples1, samples2)', 'param.__str__() == param.__repr__() == ', 'samples.shape == (100,)', 'np.all(samples == 1)', 'samples.shape == (100,)', 'np.all(samples == -1)', 'sample.shape == tuple()', 'samples.shape == (2, 4)', 'sample == 1', 'np.all(samples == 1)', 'sample.shape == tuple()', 'samples.shape == (2, 4)', '25 - 10 < sample < 25 + 10', 'np.all(np.logical_and(25 - 10 < samples, samples < 25 + 10))', 'sample.shape == tuple()', 'samples.shape == (2, 4)', 'sample == 50', 'np.all(samples == 50)', 'sample.shape == tuple()', 'samples.shape == (2, 4)', 'sample == 0', 'np.all(samples == 0)', 'False', 'seen[2] < 5', '50 - 20 < seen[0] < 50 + 20', '50 - 20 < seen[1] < 50 + 20', 'hist[1] > hist[0]', 'hist[1] > hist[2]', 'False', '300 - 50 < seen[0] < 300 + 50', '100 - 50 < seen[1] < 100 + 50', 'isinstance(param.aggregation_method, iap.Choice)', 'len(param.aggregation_method.a) == 3', '[v in param.aggregation_method.a for v in []]', 'nb_0 + nb_50 == 2 * 1000', '0.25 - 0.05 < nb_0 / (2 * 1000) < 0.25 + 0.05', 'samples1.shape == (100, 10)', 'samples2.shape == (100, 10)', 'np.allclose(samples1, samples2)', 'isinstance(param.aggregation_method, iap.Deterministic)', 'param.aggregation_method.value == ', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'param.__str__() == param.__repr__() == ', 'sample.shape == tuple()', 'samples.shape == (5, 10)', 'expected - eps < sample < expected + eps', 'np.all(np.logical_and(expected - eps < samples, samples < expected + eps))', 'sample.shape == tuple()', 'samples.shape == (5, 10)', 'expected - eps < sample < expected + eps', 'np.all(np.logical_and(expected - eps < samples, samples < expected + eps))', 'False', '500 - 150 < seen[0] < 500 + 150', '500 - 150 < seen[1] < 500 + 150', 'False', '500 - 150 < seen[0] < 500 + 150', '500 - 150 < seen[1] < 500 + 150', 'sample.shape == tuple()', 'samples.shape == (2, 3)', 'expected - eps < sample < expected + eps', 'np.all(np.logical_and(expected - eps < samples, samples < expected + eps))', 'samples1.shape == (100, 10)', 'samples2.shape == (100, 10)', 'np.array_equal(samples1, samples2)', 'param.__str__() == param.__repr__() == ', 'isinstance(param3, iap.Multiply)', 'param3.other_param == param1', 'param3.val == param2', 'isinstance(param3, iap.Multiply)', 'param3.other_param == param1', 'isinstance(param3.val, iap.Deterministic)', 'param3.val.value == 2', 'isinstance(param3, iap.Multiply)', 'isinstance(param3.other_param, iap.Deterministic)', 'param3.other_param.value == 2', 'param3.val == param1', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'isinstance(param3, iap.Divide)', 'param3.other_param == param1', 'param3.val == param2', 'isinstance(param3, iap.Divide)', 'param3.other_param == param1', 'isinstance(param3.val, iap.Deterministic)', 'param3.val.value == 2', 'isinstance(param3, iap.Divide)', 'isinstance(param3.other_param, iap.Deterministic)', 'param3.other_param.value == 2', 'param3.val == param1', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'isinstance(param3, iap.Divide)', 'param3.other_param == param1', 'param3.val == param2', 'isinstance(param3, iap.Divide)', 'param3.other_param == param1', 'isinstance(param3.val, iap.Deterministic)', 'param3.val.value == 2', 'in str(exc)', 'got_exception', 'isinstance(param3, iap.Divide)', 'isinstance(param3.other_param, iap.Deterministic)', 'param3.other_param.value == 2', 'param3.val == param1', 'in str(exc)', 'got_exception', 'isinstance(param3, iap.Discretize)', 'isinstance(param3.other_param, iap.Divide)', 'param3.other_param.other_param == param1_int', 'param3.other_param.val == param2_int', 'isinstance(param3, iap.Discretize)', 'isinstance(param3.other_param, iap.Divide)', 'param3.other_param.other_param == param1_int', 'isinstance(param3.other_param.val, iap.Deterministic)', 'param3.other_param.val.value == 2', 'isinstance(param3, iap.Discretize)', 'isinstance(param3.other_param, iap.Divide)', 'isinstance(param3.other_param.other_param, iap.Deterministic)', 'param3.other_param.other_param.value == 2', 'param3.other_param.val == param1_int', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'isinstance(param3, iap.Add)', 'param3.other_param == param1', 'param3.val == param2', 'isinstance(param3, iap.Add)', 'param3.other_param == param1', 'isinstance(param3.val, iap.Deterministic)', 'param3.val.value == 2', 'isinstance(param3, iap.Add)', 'isinstance(param3.other_param, iap.Deterministic)', 'param3.other_param.value == 2', 'param3.val == param1', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'isinstance(param3, iap.Subtract)', 'param3.other_param == param1', 'param3.val == param2', 'isinstance(param3, iap.Subtract)', 'param3.other_param == param1', 'isinstance(param3.val, iap.Deterministic)', 'param3.val.value == 2', 'isinstance(param3, iap.Subtract)', 'isinstance(param3.other_param, iap.Deterministic)', 'param3.other_param.value == 2', 'param3.val == param1', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'isinstance(param3, iap.Power)', 'param3.other_param == param1', 'param3.val == param2', 'isinstance(param3, iap.Power)', 'param3.other_param == param1', 'isinstance(param3.val, iap.Deterministic)', 'param3.val.value == 2', 'isinstance(param3, iap.Power)', 'isinstance(param3.other_param, iap.Deterministic)', 'param3.other_param.value == 2', 'param3.val == param1', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'isinstance(param_copy, iap.Discretize)', 'isinstance(param_copy.other_param, iap.Uniform)', 'param_copy.other_param.a[0] == param.other_param.a[0]', 'isinstance(param_copy, iap.Discretize)', 'isinstance(param_copy.other_param, iap.Uniform)', 'param_copy.other_param.a[0] != param.other_param.a[0]', 'isinstance(list1, list)', 'isinstance(list2, list)']",[],[],[],[],[],[],[],[],[],[],[],[],"['ia.is_np_array(value) == True', 'ia.is_np_array(value) == False', 'ia.is_single_integer() == False', 'ia.is_single_integer(None) == False', 'ia.is_single_integer(1.2) == False', 'ia.is_single_integer(1.0) == False', 'ia.is_single_integer(np.ones((1,), dtype=np.float32)[0]) == False', 'ia.is_single_integer(1) == True', 'ia.is_single_integer(1234) == True', 'ia.is_single_integer(np.ones((1,), dtype=np.uint8)[0]) == True', 'ia.is_single_integer(np.ones((1,), dtype=np.int32)[0]) == True', 'ia.is_single_float() == False', 'ia.is_single_float(None) == False', 'ia.is_single_float(1.2) == True', 'ia.is_single_float(1.0) == True', 'ia.is_single_float(np.ones((1,), dtype=np.float32)[0]) == True', 'ia.is_single_float(1) == False', 'ia.is_single_float(1234) == False', 'ia.is_single_float(np.ones((1,), dtype=np.uint8)[0]) == False', 'ia.is_single_float(np.ones((1,), dtype=np.int32)[0]) == False', 'ia.caller_name() == ', 'ia.is_single_number(value) == True', 'ia.is_single_number(value) == False', 'ia.is_iterable(value) == True, value', 'ia.is_iterable(value) == False', 'ia.is_string(value) == True', 'ia.is_string(value) == False', 'ia.is_single_bool(value) == True', 'ia.is_single_bool(value) == False', 'ia.is_integer_array(value) == True', 'ia.is_integer_array(value) == False', 'ia.is_float_array(value) == True', 'ia.is_float_array(value) == False', 'ia.is_callable(value) == True', 'ia.is_callable(value) == False', 'ia.CURRENT_RANDOM_STATE.randint(0, 1000*1000) == rs.randint(0, 1000*1000)', 'ia.current_random_state() == ia.CURRENT_RANDOM_STATE', 'rs_observed.randint(0, 10**6) == rs_expected.randint(0, 10**6)', 'rs_observed1.randint(0, 10**6) != rs_observed2.randint(0, 10**6)', 'rs_observed.randint(0, 10**6) != rs_not_expected.randint(0, 10**6)', 'rs_observed1.randint(0, 10**6) != rs_observed2.randint(0, 10**6)', 'rs_observed1.randint(0, 10**6) == rs_observed2.randint(0, 10**6) == rs_expected.randint(0, 10**6)', 'ia.dummy_random_state().randint(0, 10**6) == np.random.RandomState(1).randint(0, 10**6)', 'rs != rs_copy', 'rs.randint(0, 10**6) == rs_copy.randint(0, 10**6)', 'ia.copy_random_state(np.random) == np.random', 'ia.copy_random_state(np.random, force_copy=True) != np.random', 'rs_observed.randint(0, 10**6) == rs_expected.randint(0, 10**6)', 'rs_observed1.randint(0, 10**6) == rs_expected1.randint(0, 10**6)', 'rs_observed2.randint(0, 10**6) == rs_expected2.randint(0, 10**6)', 'rs1.randint(0, 10**6) == rs2.randint(0, 10**6)', 'np.sum(diff) == 0', 'diff_fraction < 0.5', 'diff_fraction < 0.5', 'np.sum(diff) == 0', 'diff_fraction < 0.5', 'diff_fraction < 0.5', 'arr_pad.shape == (3, 3)', 'arr_pad.dtype.type == dtype', 'np.array_equal(arr_pad, arr)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype.type == dtype', 'np.all(arr_pad[0, :] == 0)', 'arr_pad.shape == (3, 4)', 'arr_pad.dtype.type == dtype', 'np.all(arr_pad[:, -1] == 0)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype.type == dtype', 'np.all(arr_pad[-1, :] == 0)', 'arr_pad.shape == (3, 4)', 'arr_pad.dtype.type == dtype', 'np.all(arr_pad[:, 0] == 0)', 'arr_pad.shape == (3+(1+3), 3+(2+4))', 'arr_pad.dtype.type == dtype', 'np.all(arr_pad[0, :] == 0)', 'np.all(arr_pad[:, -2:] == 0)', 'np.all(arr_pad[-3:, :] == 0)', 'np.all(arr_pad[:, :4] == 0)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype.type == dtype', 'np.all(arr_pad[0, :] == 10)', 'arr_pad.shape == (4, 3, 3)', 'arr_pad.dtype.type == dtype', 'np.all(arr_pad[0, :, 0] == 0)', 'np.all(arr_pad[0, :, 1] == 0)', 'np.all(arr_pad[0, :, 2] == 0)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype.type == dtype', 'arr_pad[0, 0] == 128', 'arr_pad[0, 1] == 200', 'arr_pad[0, 2] == 128', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype.type == dtype', 'arr_pad[0, 0] == 123', 'arr_pad[0, 1] == 123', 'arr_pad[0, 2] == 123', 'arr_pad[1, 0] == 0', 'arr_pad.shape == (5, 1)', 'arr_pad.dtype.type == dtype', 'arr_pad[0, 0] == 200', 'arr_pad[1, 0] == 175', 'arr_pad[2, 0] == 150', 'arr_pad[3, 0] == 125', 'arr_pad[4, 0] == 100', 'arr_pad.shape == (3, 3)', 'arr_pad.dtype.type == dtype', 'np.allclose(arr_pad, arr)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype.type == dtype', 'np.allclose(arr_pad[0, :], dtype([0, 0, 0]))', 'arr_pad.shape == (3, 4)', 'arr_pad.dtype.type == dtype', 'np.allclose(arr_pad[:, -1], dtype([0, 0, 0]))', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype.type == dtype', 'np.allclose(arr_pad[-1, :], dtype([0, 0, 0]))', 'arr_pad.shape == (3, 4)', 'arr_pad.dtype.type == dtype', 'np.allclose(arr_pad[:, 0], dtype([0, 0, 0]))', 'arr_pad.shape == (3+(1+3), 3+(2+4))', 'arr_pad.dtype.type == dtype', '0 - 1e-6 < np.max(arr_pad[0, :]) < 0 + 1e-6', '0 - 1e-6 < np.max(arr_pad[:, -2:]) < 0 + 1e-6', '0 - 1e-6 < np.max(arr_pad[-3, :]) < 0 + 1e-6', '0 - 1e-6 < np.max(arr_pad[:, :4]) < 0 + 1e-6', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype.type == dtype', 'np.allclose(arr_pad[0, :], dtype([0.2, 0.2, 0.2]))', 'arr_pad.shape == (4, 3, 3)', 'arr_pad.dtype.type == dtype', 'np.allclose(arr_pad[0, :, 0], dtype([0, 0, 0]))', 'np.allclose(arr_pad[0, :, 1], dtype([0, 0, 0]))', 'np.allclose(arr_pad[0, :, 2], dtype([0, 0, 0]))', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype.type == dtype', '0.50 - 1e-6 < arr_pad[0, 0] < 0.50 + 1e-6', '0.75 - 1e-6 < arr_pad[0, 1] < 0.75 + 1e-6', '0.50 - 1e-6 < arr_pad[0, 2] < 0.50 + 1e-6', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype.type == dtype', '0.4 - 1e-6 < arr_pad[0, 0] < 0.4 + 1e-6', '0.4 - 1e-6 < arr_pad[0, 1] < 0.4 + 1e-6', '0.4 - 1e-6 < arr_pad[0, 2] < 0.4 + 1e-6', '0.0 - 1e-6 < arr_pad[1, 0] < 0.0 + 1e-6', 'arr_pad.shape == (5, 1)', 'arr_pad.dtype.type == dtype', '1.0 - 1e-6 < arr_pad[0, 0] < 1.0 + 1e-6', '0.9 - 1e-6 < arr_pad[1, 0] < 0.9 + 1e-6', '0.8 - 1e-6 < arr_pad[2, 0] < 0.8 + 1e-6', '0.7 - 1e-6 < arr_pad[3, 0] < 0.7 + 1e-6', '0.6 - 1e-6 < arr_pad[4, 0] < 0.6 + 1e-6', 'top == 0', 'right == 0', 'bottom == 0', 'left == 0', 'top == 2', 'right == 0', 'bottom == 1', 'left == 0', 'top == 0', 'right == 2', 'bottom == 0', 'left == 1', 'top == 1', 'right == 0', 'bottom == 1', 'left == 0', 'top == 0', 'right == 1', 'bottom == 0', 'left == 1', 'top == 2', 'right == 0', 'bottom == 2', 'left == 0', 'top == 0', 'right == 2', 'bottom == 0', 'left == 2', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 4', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 4', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 4', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 4', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 4', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 8', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 8', 'arr_pad.shape[1] == 4', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 4', 'arr_pad.shape[2] == 3', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 8', 'np.max(arr_pad[:, 0:2]) == 0', 'np.max(arr_pad[:, -2:]) == 0', 'np.max(arr_pad[:, 2:-2]) == 128', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 8', 'np.max(arr_pad[:, 0:2]) == 10', 'np.max(arr_pad[:, -2:]) == 10', 'np.max(arr_pad[:, 2:-2]) == 128', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 8', '0 - 1e-6 <= np.max(arr_pad[:, 0:2]) <= 0 + 1e-6', '0 - 1e-6 <= np.max(arr_pad[:, -2:]) <= 0 + 1e-6', '0.5 - 1e-6 <= np.max(arr_pad[:, 2:-2]) <= 0.5 + 1e-6', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 8', '0.1 - 1e-6 <= np.max(arr_pad[:, 0:2]) <= 0.1 + 1e-6', '0.1 - 1e-6 <= np.max(arr_pad[:, -2:]) <= 0.1 + 1e-6', '0.5 - 1e-6 <= np.max(arr_pad[:, 2:-2]) <= 0.5 + 1e-6', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 8', 'np.max(arr_pad[0:1, 0:2]) == 128', 'np.max(arr_pad[1:3, 0:2]) == 200', 'np.max(arr_pad[3:, 0:2]) == 128', 'np.max(arr_pad[0:1, -2:]) == 128', 'np.max(arr_pad[1:3, -2:]) == 200', 'np.max(arr_pad[3:, -2:]) == 128', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.average([0, 1, 4, 5]))', 'arr_pooled[0, 1] == int(np.average([2, 3, 6, 7]))', 'arr_pooled[1, 0] == int(np.average([8, 9, 12, 13]))', 'arr_pooled[1, 1] == int(np.average([10, 11, 14, 15]))', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.average([0, 1, 4, 5]))', 'arr_pooled[0, 1] == int(np.average([2, 3, 6, 7]))', 'arr_pooled[1, 0] == int(np.average([8, 9, 12, 13]))', 'arr_pooled[1, 1] == int(np.average([10, 11, 14, 15]))', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'np.allclose(arr_pooled[0, 0], np.average([0, 1, 4, 5]))', 'np.allclose(arr_pooled[0, 1], np.average([2, 3, 6, 7]))', 'np.allclose(arr_pooled[1, 0], np.average([8, 9, 12, 13]))', 'np.allclose(arr_pooled[1, 1], np.average([10, 11, 14, 15]))', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == np.float64', 'np.allclose(arr_pooled[0, 0], np.average([0, 1, 4, 5]))', 'np.allclose(arr_pooled[0, 1], np.average([2, 3, 6, 7]))', 'np.allclose(arr_pooled[1, 0], np.average([8, 9, 12, 13]))', 'np.allclose(arr_pooled[1, 1], np.average([10, 11, 14, 15]))', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.max([0, 1, 4, 5]))', 'arr_pooled[0, 1] == int(np.max([2, 3, 6, 7]))', 'arr_pooled[1, 0] == int(np.max([8, 9, 12, 13]))', 'arr_pooled[1, 1] == int(np.max([10, 11, 14, 15]))', 'arr_pooled.shape == (2, 2, 3)', 'np.array_equal(arr_pooled[..., 0], arr_pooled[..., 1])', 'np.array_equal(arr_pooled[..., 1], arr_pooled[..., 2])', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.average([0, 1, 4, 5]))', 'arr_pooled[0, 1] == int(np.average([2, 3, 6, 7]))', 'arr_pooled[1, 0] == int(np.average([8, 9, 12, 13]))', 'arr_pooled[1, 1] == int(np.average([10, 11, 14, 15]))', 'arr_pooled.shape == (2, 4)', 'arr_pooled.dtype == arr.dtype.type', 'np.allclose(arr_pooled[0, 0], np.average([0, 4]))', 'np.allclose(arr_pooled[0, 1], np.average([1, 5]))', 'np.allclose(arr_pooled[0, 2], np.average([2, 6]))', 'np.allclose(arr_pooled[0, 3], np.average([3, 7]))', 'np.allclose(arr_pooled[1, 0], np.average([8, 12]))', 'np.allclose(arr_pooled[1, 1], np.average([9, 13]))', 'np.allclose(arr_pooled[1, 2], np.average([10, 14]))', 'np.allclose(arr_pooled[1, 3], np.average([11, 15]))', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.average([0, 1, 4, 5]))', 'arr_pooled[0, 1] == int(np.average([2, 0, 6, 0]))', 'arr_pooled[1, 0] == int(np.average([8, 9, 0, 0]))', 'arr_pooled[1, 1] == int(np.average([10, 0, 0, 0]))', 'arr_pooled.shape == (1, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.average([0, 4, 0, 0]))', 'arr_pooled[0, 1] == int(np.average([1, 5, 0, 0]))', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.average([0, 1, 4, 5]))', 'arr_pooled[0, 1] == int(np.average([2, 22, 6, 22]))', 'arr_pooled[1, 0] == int(np.average([8, 9, 22, 22]))', 'arr_pooled[1, 1] == int(np.average([10, 22, 22, 22]))', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.average([0, 1, 4, 5]))', 'arr_pooled[0, 1] == int(np.average([2, 3, 6, 7]))', 'arr_pooled[1, 0] == int(np.average([8, 9, 12, 13]))', 'arr_pooled[1, 1] == int(np.average([10, 11, 14, 15]))', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.max([0, 1, 4, 5]))', 'arr_pooled[0, 1] == int(np.max([2, 3, 6, 7]))', 'arr_pooled[1, 0] == int(np.max([8, 9, 12, 13]))', 'arr_pooled[1, 1] == int(np.max([10, 11, 14, 15]))', 'np.array_equal(grid, image)', 'np.array_equal(grid, image)', 'np.array_equal(grid, expected)', 'np.array_equal(grid, expected)', 'np.array_equal(grid, expected)', 'np.array_equal(grid, expected)', 'np.array_equal(grid, expected)', 'kp.y == 1', 'kp.x == 2', 'kp.y_int == 1', 'kp.x_int == 2', '1.1 - eps < kp.y < 1.1 + eps', '2.7 - eps < kp.x < 2.7 + eps', 'kp.y_int == 1', 'kp.x_int == 3', 'kp2.y == 1', 'kp2.x == 2', 'kp2.y == 2', 'kp2.x == 2', 'kp2.y == 1', 'kp2.x == 4', 'kp2.y == 2', 'kp2.x == 4', 'kp2.y == 2', 'kp2.x == 2', 'kp2.y == 0', 'kp2.x == 2', 'kp2.y == 1', 'kp2.x == 3', 'kp2.y == 1', 'kp2.x == 1', 'kp2.y == 2', 'kp2.x == 4', 'kp.__repr__() == kp.__str__() == ', 'kp.__repr__() == kp.__str__() == ', 'kpi.height == 10', 'kpi.width == 20', 'kpi.shape == (10, 20, 3)', 'all([kp_i.x == kp_j.x and kp_i.y == kp_j.y for kp_i, kp_j in zip(kpi.keypoints, kpi2.keypoints)])', 'kpi2.keypoints[0].x == 2', 'kpi2.keypoints[0].y == 4', 'kpi2.keypoints[1].x == 6', 'kpi2.keypoints[1].y == 8', 'kpi2.keypoints[0].x == 2', 'kpi2.keypoints[0].y == 4', 'kpi2.keypoints[1].x == 6', 'kpi2.keypoints[1].y == 8', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask_size3] == [0, 255, 0])', 'np.all(image_kps[~kps_mask_size3] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [0, 0, 255])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [255, 255, 255])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image2 == image_kps)', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image2[kps_mask] == [0, 255, 0])', 'np.all(image2[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'got_exception', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'got_exception', 'kpi2.keypoints[0].x == kpi.keypoints[0].x', 'kpi2.keypoints[0].y == kpi.keypoints[0].y', 'kpi2.keypoints[1].x == kpi.keypoints[1].x', 'kpi2.keypoints[1].y == kpi.keypoints[1].y', 'kpi2.keypoints[0].x == kpi.keypoints[0].x + 1', 'kpi2.keypoints[0].y == kpi.keypoints[0].y', 'kpi2.keypoints[1].x == kpi.keypoints[1].x + 1', 'kpi2.keypoints[1].y == kpi.keypoints[1].y', 'kpi2.keypoints[0].x == kpi.keypoints[0].x - 1', 'kpi2.keypoints[0].y == kpi.keypoints[0].y', 'kpi2.keypoints[1].x == kpi.keypoints[1].x - 1', 'kpi2.keypoints[1].y == kpi.keypoints[1].y', 'kpi2.keypoints[0].x == kpi.keypoints[0].x', 'kpi2.keypoints[0].y == kpi.keypoints[0].y + 1', 'kpi2.keypoints[1].x == kpi.keypoints[1].x', 'kpi2.keypoints[1].y == kpi.keypoints[1].y + 1', 'kpi2.keypoints[0].x == kpi.keypoints[0].x', 'kpi2.keypoints[0].y == kpi.keypoints[0].y - 1', 'kpi2.keypoints[1].x == kpi.keypoints[1].x', 'kpi2.keypoints[1].y == kpi.keypoints[1].y - 1', 'kpi2.keypoints[0].x == kpi.keypoints[0].x + 1', 'kpi2.keypoints[0].y == kpi.keypoints[0].y + 2', 'kpi2.keypoints[1].x == kpi.keypoints[1].x + 1', 'kpi2.keypoints[1].y == kpi.keypoints[1].y + 2', 'np.allclose(observed, expected)', '1 - eps < kpi.keypoints[0].x < 1 + eps', '2 - eps < kpi.keypoints[0].y < 2 + eps', '3 - eps < kpi.keypoints[1].x < 3 + eps', '4 - eps < kpi.keypoints[1].y < 4 + eps', 'np.all(image[kps_mask] == 255)', 'np.all(image[~kps_mask] == 0)', 'np.all(image_size3[kps_mask] == 255)', 'np.all(image_size3[kps_mask_size3] >= 128)', 'np.all(image_size3[~kps_mask_size3] == 0)', 'kpi2.shape == (5, 5, 3)', 'len(kpi2.keypoints) == 2', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[1].x == 3', 'kpi2.shape == (5, 5, 3)', 'len(kpi2.keypoints) == 2', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[1].y == -2', 'kpi2.keypoints[1].x == -1', 'kpi2.shape == (5, 5, 3)', 'len(kpi2.keypoints) == 2', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[1].y == -2', 'kpi2.keypoints[1].x == -1', 'kpi2.shape == (5, 5, 3)', 'len(kpi2.keypoints) == 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1', 'in str(exc)', 'got_exception', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[0].x == 100', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[1].y == 4', 'kpi.__repr__() == kpi.__str__() == expected', 'bb.y1_int == 10', 'bb.x1_int == 20', 'bb.y2_int == 30', 'bb.x2_int == 40', 'bb.width == 40 - 20', 'bb.height == 30 - 10', 'center_x - eps < bb.center_x < center_x + eps', 'center_y - eps < bb.center_y < center_y + eps', 'bb.y1_int == 10', 'bb.x1_int == 20', 'bb.y2_int == 30', 'bb.x2_int == 40', 'bb.y1_int == 10', 'bb.x1_int == 20', 'bb.y2_int == 31', 'bb.x2_int == 41', 'bb.width == 40.9 - 20.1', 'bb.height == 30.9 - 10.1', 'center_x - eps < bb.center_x < center_x + eps', 'center_y - eps < bb.center_y < center_y + eps', 'bb.area == (30-10) * (40-20)', '10 - eps < bb2.y1 < 10 + eps', '20 - eps < bb2.x1 < 20 + eps', '30 - eps < bb2.y2 < 30 + eps', '40 - eps < bb2.x2 < 40 + eps', '10*2 - eps < bb2.y1 < 10*2 + eps', '20*2 - eps < bb2.x1 < 20*2 + eps', '30*2 - eps < bb2.y2 < 30*2 + eps', '40*2 - eps < bb2.x2 < 40*2 + eps', '10*0.5 - eps < bb2.y1 < 10*0.5 + eps', '20*0.5 - eps < bb2.x1 < 20*0.5 + eps', '30*0.5 - eps < bb2.y2 < 30*0.5 + eps', '40*0.5 - eps < bb2.x2 < 40*0.5 + eps', '10*1 - eps < bb2.y1 < 10*1 + eps', '20*2 - eps < bb2.x1 < 20*2 + eps', '30*1 - eps < bb2.y2 < 30*1 + eps', '40*2 - eps < bb2.x2 < 40*2 + eps', '10*2 - eps < bb2.y1 < 10*2 + eps', '20*1 - eps < bb2.x1 < 20*1 + eps', '30*2 - eps < bb2.y2 < 30*2 + eps', '40*1 - eps < bb2.x2 < 40*1 + eps', 'bb2.y1 == 10-1', 'bb2.y2 == 30+1', 'bb2.x1 == 20-1', 'bb2.x2 == 40+1', 'bb2.y1 == 10-(-1)', 'bb2.y2 == 30+(-1)', 'bb2.x1 == 20-(-1)', 'bb2.x2 == 40+(-1)', 'bb2.y1 == 10-1', 'bb2.y2 == 30+0', 'bb2.x1 == 20-0', 'bb2.x2 == 40+0', 'bb2.y1 == 10-0', 'bb2.y2 == 30+0', 'bb2.x1 == 20-0', 'bb2.x2 == 40+1', 'bb2.y1 == 10-0', 'bb2.y2 == 30+1', 'bb2.x1 == 20-0', 'bb2.x2 == 40+0', 'bb2.y1 == 10-0', 'bb2.y2 == 30+0', 'bb2.x1 == 20-1', 'bb2.x2 == 40+0', 'bb_inter.x1 == 39', 'bb_inter.x2 == 40', 'bb_inter.y1 == 10', 'bb_inter.y2 == 30', 'bb_inter == False', 'bb_union.x1 == 20', 'bb_union.x2 == 59', 'bb_union.y1 == 10', 'bb_union.y2 == 30', '1.0 - eps < iou < 1.0 + eps', '0.0 - eps < iou < 0.0 + eps', 'iou_expected - eps < iou < iou_expected + eps', 'bb.is_fully_within_image((100, 100, 3)) == True', 'bb.is_fully_within_image((20, 100, 3)) == False', 'bb.is_fully_within_image((100, 30, 3)) == False', 'bb.is_fully_within_image((1, 1, 3)) == False', 'bb.is_partly_within_image((100, 100, 3)) == True', 'bb.is_partly_within_image((20, 100, 3)) == True', 'bb.is_partly_within_image((100, 30, 3)) == True', 'bb.is_partly_within_image((1, 1, 3)) == False', 'bb.is_out_of_image((100, 100, 3), partly=True, fully=True) == False', 'bb.is_out_of_image((100, 100, 3), partly=False, fully=True) == False', 'bb.is_out_of_image((100, 100, 3), partly=True, fully=False) == False', 'bb.is_out_of_image((20, 100, 3), partly=True, fully=True) == True', 'bb.is_out_of_image((20, 100, 3), partly=False, fully=True) == False', 'bb.is_out_of_image((20, 100, 3), partly=True, fully=False) == True', 'bb.is_out_of_image((100, 30, 3), partly=True, fully=True) == True', 'bb.is_out_of_image((100, 30, 3), partly=False, fully=True) == False', 'bb.is_out_of_image((100, 30, 3), partly=True, fully=False) == True', 'bb.is_out_of_image((1, 1, 3), partly=True, fully=True) == True', 'bb.is_out_of_image((1, 1, 3), partly=False, fully=True) == True', 'bb.is_out_of_image((1, 1, 3), partly=True, fully=False) == False', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', 'bb_cut.y2 == 30', 'bb_cut.x2 == 40', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', 'bb_cut.y2 == 30', 'bb_cut.x2 == 40', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', '20 - 2*eps < bb_cut.y2 < 20', 'bb_cut.x2 == 40', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', 'bb_cut.y2 == 30', '30 - 2*eps < bb_cut.x2 < 30', 'bb_top.y1 == 10', 'bb_top.x1 == 20', 'bb_top.y2 == 30', 'bb_top.x2 == 40', 'bb_right.y1 == 10', 'bb_right.x1 == 20', 'bb_right.y2 == 30', 'bb_right.x2 == 40', 'bb_bottom.y1 == 10', 'bb_bottom.x1 == 20', 'bb_bottom.y2 == 30', 'bb_bottom.x2 == 40', 'bb_left.y1 == 10', 'bb_left.x1 == 20', 'bb_left.y2 == 30', 'bb_left.x2 == 40', 'bb_top.y1 == 10+1', 'bb_top.x1 == 20', 'bb_top.y2 == 30+1', 'bb_top.x2 == 40', 'bb_right.y1 == 10', 'bb_right.x1 == 20-1', 'bb_right.y2 == 30', 'bb_right.x2 == 40-1', 'bb_bottom.y1 == 10-1', 'bb_bottom.x1 == 20', 'bb_bottom.y2 == 30-1', 'bb_bottom.x2 == 40', 'bb_left.y1 == 10', 'bb_left.x1 == 20+1', 'bb_left.y2 == 30', 'bb_left.x2 == 40+1', 'bb_top.y1 == 10-1', 'bb_top.x1 == 20', 'bb_top.y2 == 30-1', 'bb_top.x2 == 40', 'bb_right.y1 == 10', 'bb_right.x1 == 20+1', 'bb_right.y2 == 30', 'bb_right.x2 == 40+1', 'bb_bottom.y1 == 10+1', 'bb_bottom.x1 == 20', 'bb_bottom.y2 == 30+1', 'bb_bottom.x2 == 40', 'bb_left.y1 == 10', 'bb_left.x1 == 20-1', 'bb_left.y2 == 30', 'bb_left.x2 == 40-1', 'bb_mix.y1 == 10+1-2', 'bb_mix.x1 == 20+3-4', 'bb_mix.y2 == 30+3-4', 'bb_mix.x2 == 40+1-2', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image == 0)', 'np.all(image_bb[bb_mask] == [255, 0, 0])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [128, 128, 128])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [150, 150, 150])', 'np.all(image_bb[~bb_mask] == [100, 100, 100])', 'np.sum(np.abs((image_bb - [150, 150, 150])[bb_mask])) < 0.1', 'np.sum(np.abs((image_bb - [100, 100, 100])[~bb_mask])) < 0.1', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image[bb_mask] == [255, 255, 255])', 'np.all(image[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'got_exception == False', 'got_exception == True', 'np.array_equal(image_sub, image[1:3, 1:3, :])', 'np.array_equal(image_sub, image[1:3, 1:3])', 'np.array_equal(image_sub, image[1:3, 1:3])', 'np.array_equal(image_sub, image_pad[8:11, 8:11, :])', 'np.array_equal(image_sub, image_pad[0:4, 0:5, :])', 'kps[0].y == 1', 'kps[0].x == 1', 'kps[1].y == 1', 'kps[1].x == 3', 'kps[2].y == 3', 'kps[2].x == 3', 'kps[3].y == 3', 'kps[3].x == 1', 'bb2.y1 == 1', 'bb2.y2 == 3', 'bb2.x1 == 1', 'bb2.x2 == 3', 'bb2.label == ', 'bb2.y1 == 10', 'bb2.x1 == 20', 'bb2.y2 == 30', 'bb2.x2 == 40', 'bb2.label == ', 'bb2.y1 == 1', 'bb2.y2 == 3', 'bb2.x1 == 1', 'bb2.x2 == 3', 'bb2.label[0] == ', 'bb.__repr__() == ', 'bb.__str__() == ', 'bbsoi.height == 40', 'bbsoi.width == 50', 'bbsoi.height == 40', 'bbsoi.width == 50', 'bbsoi_projected.bounding_boxes[0].y1 == 10', 'bbsoi_projected.bounding_boxes[0].x1 == 20', 'bbsoi_projected.bounding_boxes[0].y2 == 30', 'bbsoi_projected.bounding_boxes[0].x2 == 40', 'bbsoi_projected.bounding_boxes[1].y1 == 15', 'bbsoi_projected.bounding_boxes[1].x1 == 25', 'bbsoi_projected.bounding_boxes[1].y2 == 35', 'bbsoi_projected.bounding_boxes[1].x2 == 45', 'bbsoi_projected.bounding_boxes[0].y1 == 10*2', 'bbsoi_projected.bounding_boxes[0].x1 == 20*2', 'bbsoi_projected.bounding_boxes[0].y2 == 30*2', 'bbsoi_projected.bounding_boxes[0].x2 == 40*2', 'bbsoi_projected.bounding_boxes[1].y1 == 15*2', 'bbsoi_projected.bounding_boxes[1].x1 == 25*2', 'bbsoi_projected.bounding_boxes[1].y2 == 35*2', 'bbsoi_projected.bounding_boxes[1].x2 == 45*2', 'bbsoi_projected.bounding_boxes[0].y1 == 10*2', 'bbsoi_projected.bounding_boxes[0].x1 == 20*2', 'bbsoi_projected.bounding_boxes[0].y2 == 30*2', 'bbsoi_projected.bounding_boxes[0].x2 == 40*2', 'bbsoi_projected.bounding_boxes[1].y1 == 15*2', 'bbsoi_projected.bounding_boxes[1].x1 == 25*2', 'bbsoi_projected.bounding_boxes[1].y2 == 35*2', 'bbsoi_projected.bounding_boxes[1].x2 == 45*2', 'np.all(image[10-1, 20-1, :] == [0, 0, 0])', 'np.all(image[10-1, 20-0, :] == [0, 0, 0])', 'np.all(image[10-0, 20-1, :] == [0, 0, 0])', 'np.all(image[10-0, 20-0, :] == [0, 255, 0])', 'np.all(image[10+1, 20+1, :] == [0, 0, 0])', 'np.all(image[30-1, 40-1, :] == [0, 0, 0])', 'np.all(image[30+1, 40-0, :] == [0, 0, 0])', 'np.all(image[30+0, 40+1, :] == [0, 0, 0])', 'np.all(image[30+0, 40+0, :] == [0, 255, 0])', 'np.all(image[30+1, 40+1, :] == [0, 0, 0])', 'np.all(image[15-1, 25-1, :] == [0, 0, 0])', 'np.all(image[15-1, 25-0, :] == [0, 0, 0])', 'np.all(image[15-0, 25-1, :] == [0, 0, 0])', 'np.all(image[15-0, 25-0, :] == [0, 255, 0])', 'np.all(image[15+1, 25+1, :] == [0, 0, 0])', 'np.all(image[35-1, 45-1, :] == [0, 0, 0])', 'np.all(image[35+1, 45+0, :] == [0, 0, 0])', 'np.all(image[35+0, 45+1, :] == [0, 0, 0])', 'np.all(image[35+0, 45+0, :] == [0, 255, 0])', 'np.all(image[35+1, 45+1, :] == [0, 0, 0])', 'len(bbsoi_slim.bounding_boxes) == 1', 'bbsoi_slim.bounding_boxes[0] == bb1', 'len(bbsoi_cut.bounding_boxes) == 2', 'bbsoi_cut.bounding_boxes[0].y1 == 10', 'bbsoi_cut.bounding_boxes[0].x1 == 20', 'bbsoi_cut.bounding_boxes[0].y2 == 30', 'bbsoi_cut.bounding_boxes[0].x2 == 40', 'bbsoi_cut.bounding_boxes[1].y1 == 15', 'bbsoi_cut.bounding_boxes[1].x1 == 25', 'bbsoi_cut.bounding_boxes[1].y2 == 35', '50 - 2*eps < bbsoi_cut.bounding_boxes[1].x2 < 50', 'len(bbsoi_cut.bounding_boxes) == 2', 'bbsoi_shifted.bounding_boxes[0].y1 == 10', 'bbsoi_shifted.bounding_boxes[0].x1 == 20 - 1', 'bbsoi_shifted.bounding_boxes[0].y2 == 30', 'bbsoi_shifted.bounding_boxes[0].x2 == 40 - 1', 'bbsoi_shifted.bounding_boxes[1].y1 == 15', 'bbsoi_shifted.bounding_boxes[1].x1 == 25 - 1', 'bbsoi_shifted.bounding_boxes[1].y2 == 35', 'bbsoi_shifted.bounding_boxes[1].x2 == 51 - 1', 'len(bbsoi.bounding_boxes) == 2', 'bbsoi_copy.bounding_boxes[0].y1 == 10', 'bbsoi_copy.bounding_boxes[0].x1 == 20', 'bbsoi_copy.bounding_boxes[0].y2 == 30', 'bbsoi_copy.bounding_boxes[0].x2 == 40', 'bbsoi_copy.bounding_boxes[1].y1 == 15', 'bbsoi_copy.bounding_boxes[1].x1 == 25', 'bbsoi_copy.bounding_boxes[1].y2 == 35', 'bbsoi_copy.bounding_boxes[1].x2 == 51', 'bbsoi_copy.bounding_boxes[0].y1 == 0', 'len(bbsoi.bounding_boxes) == 2', 'bbsoi_copy.bounding_boxes[0].y1 == 10', 'bbsoi_copy.bounding_boxes[0].x1 == 20', 'bbsoi_copy.bounding_boxes[0].y2 == 30', 'bbsoi_copy.bounding_boxes[0].x2 == 40', 'bbsoi_copy.bounding_boxes[1].y1 == 15', 'bbsoi_copy.bounding_boxes[1].x1 == 25', 'bbsoi_copy.bounding_boxes[1].y2 == 35', 'bbsoi_copy.bounding_boxes[1].x2 == 51', 'bbsoi_copy.bounding_boxes[0].y1 == 10', 'bbsoi.__repr__() == bbsoi.__str__() == expected', 'heatmaps_drawn.shape == (4, 4, 3)', 'np.allclose(heatmaps_drawn[y, x], v1)', 'np.allclose(heatmaps_drawn[y, x], v2)', 'np.allclose(heatmaps_drawn[y, x], v3)', 'heatmaps_drawn.shape == (4, 4, 3)', 'np.allclose(heatmaps_drawn[y, x], v1)', 'np.allclose(heatmaps_drawn[y, x], v2)', 'heatmaps_drawn.shape == (4, 4, 3)', 'np.all(heatmaps_drawn[0:4, 0:2, :] == 0)', 'np.all(heatmaps_drawn[0:4, 2:3, :] == 128) or np.all(heatmaps_drawn[0:4, 2:3, :] == 127)', 'np.all(heatmaps_drawn[0:4, 3:4, :] == 255) or np.all(heatmaps_drawn[0:4, 3:4, :] == 254)', 'heatmaps_drawn.shape == (2, 2, 3)', 'np.all(heatmaps_drawn[0:2, 0, :] == 0)', 'np.all(heatmaps_drawn[0:2, 1, :] == 128) or np.all(heatmaps_drawn[0:2, 1, :] == 127)', 'np.allclose(heatmaps.get_arr(), heatmaps_arr)', 'np.allclose(heatmaps.invert().get_arr(), expected)', 'np.allclose(heatmaps.get_arr(), heatmaps_arr[..., np.newaxis])', 'np.allclose(heatmaps.invert().get_arr(), expected[..., np.newaxis])', 'heatmaps_padded.arr_0to1.shape == (2+(1+3), 2+(4+2), 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (2+(1+3), 2+(4+2), 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (2+(1+3), 2+(4+2), 1)', 'np.allclose(', 'heatmaps_pooled.arr_0to1.shape == (2, 2, 1)', 'np.allclose(', 'heatmaps_pooled.arr_0to1.shape == (2, 2, 1)', 'np.allclose(', 'heatmaps_scaled.arr_0to1.shape == (4, 4, 1)', 'heatmaps_scaled.arr_0to1.dtype.type == np.float32', 'np.allclose(', 'heatmaps_scaled.arr_0to1.shape == (2, 4, 1)', 'heatmaps_scaled.arr_0to1.dtype.type == np.float32', 'np.allclose(', 'arr.dtype.type == np.bool_', 'observed.dtype.type == np.int32', 'np.array_equal(arr, observed)', 'arr.dtype.type == np.bool_', 'observed.dtype.type == np.int32', 'np.array_equal(arr, observed)', 'observed.dtype.type == np.int32', 'np.array_equal(arr, observed)', 'observed.dtype.type == np.int32', 'np.array_equal(observed, expected)', 'in str(exc)', 'got_exception', 'observed.dtype.type == np.int32', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed_fg, expected_fg)', 'np.array_equal(observed, expected)', 'np.array_equal(observed_fg, expected_fg)', 'np.array_equal(observed, image)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'observed.shape == expected.shape', 'd_max <= 1.0 + 1e-4', 'observed.shape == expected.shape', 'd_max <= 1.0 + 1e-4', 'observed.shape == expected.shape', 'd_max <= 1.0 + 1e-4', 'observed.shape == expected.shape', 'd_max <= 1.0 + 1e-4', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'pad_amounts == (2, 0, 2, 0)', 'np.allclose(observed, expected)', 'np.array_equal(segmap_scaled.get_arr_int(), np.int32([', 'np.allclose(observed, expected)', 'np.array_equal(segmap_scaled.get_arr_int(), np.int32([', 'np.allclose(observed, expected)', 'np.array_equal(segmap_scaled.get_arr_int(), np.int32([', 'np.allclose(heatmaps.arr_0to1, expected)', 'np.allclose(heatmaps.arr_0to1, expected)', 'len(class_indices) == 3', '[idx in class_indices for idx in [0, 1, 2]]', 'np.allclose(heatmaps.arr_0to1, expected)', 'len(class_indices) == 2', '[idx in class_indices for idx in [0, 2]]', 'heatmaps is None', 'len(class_indices) == 0', 'np.allclose(heatmaps.arr_0to1, np.zeros((2, 2), dtype=np.float32))', 'len(class_indices) == 1', '[idx in class_indices for idx in [0]]', 'np.allclose(segmap.arr, arr)', 'np.allclose(segmap.arr, expected)', 'np.allclose(observed.arr, segmap.arr)', 'observed.shape == (2, 2)', 'observed.nb_classes == segmap.nb_classes', 'observed.input_was == segmap.input_was', 'np.array_equal(observed.get_arr_int(), arr)', 'observed.shape == (2, 2)', 'observed.nb_classes == 10', 'observed.input_was == segmap.input_was', 'np.allclose(observed.arr, segmap.arr)', 'observed.shape == (2, 2)', 'observed.nb_classes == segmap.nb_classes', 'observed.input_was == segmap.input_was', 'not np.allclose(observed.arr, segmap.arr)', 'np.array_equal(observed.get_arr_int(), segmap.get_arr_int())', 'observed.shape == (2, 2)', 'observed.nb_classes == 10', 'observed.input_was == segmap.input_was', 'not np.array_equal(observed.get_arr_int(), segmap.get_arr_int())', 'poly.exterior.dtype.type == np.float32', 'np.allclose(', 'poly.exterior.dtype.type == np.float32', 'np.allclose(', 'poly.exterior.dtype.type == np.float32', 'np.allclose(', 'poly.exterior.dtype.type == np.float32', 'np.allclose(', 'poly.exterior.dtype.type == np.float32', 'np.allclose(', 'poly.exterior.dtype.type == np.float32', 'poly.exterior.shape == (0, 2)', 'poly.exterior.dtype.type == np.float32', 'poly.exterior.shape == (0, 2)', 'got_exception', 'poly.label is None', 'poly.label == ', 'poly.xx.dtype.type == np.float32', 'np.allclose(poly.xx, np.float32([0.0, 1.0, 1.5, 4.1, 2.9]))', 'poly.xx.dtype.type == np.float32', 'poly.xx.shape == (0,)', 'poly.yy.dtype.type == np.float32', 'np.allclose(poly.yy, np.float32([0.0, 1.0, 1.5, 4.1, 2.9]))', 'poly.yy.dtype.type == np.float32', 'poly.yy.shape == (0,)', 'poly.xx_int.dtype.type == np.int32', 'np.allclose(poly.xx_int, np.int32([0, 1, 2, 4, 3]))', 'poly.xx_int.dtype.type == np.int32', 'poly.xx_int.shape == (0,)', 'poly.yy_int.dtype.type == np.int32', 'np.allclose(poly.yy_int, np.int32([0, 1, 2, 4, 3]))', 'poly.yy_int.dtype.type == np.int32', 'poly.yy_int.shape == (0,)', 'poly.is_valid', 'not poly.is_valid', 'not poly.is_valid', 'not poly.is_valid', 'not poly.is_valid', 'poly.is_valid', 'poly.area == 1', '1.0 - 1e-8 < poly.area < 1.0 + 1e-8', 'poly.area == 2', '2.0 - 1e-8 < poly.area < 2.0 + 1e-8', '1/2 - 1e-8 < poly.area < 1/2 + 1e-8', 'poly_proj.exterior.dtype.type == np.float32', 'poly_proj.exterior.shape == (4, 2)', 'np.allclose(', 'poly_proj.exterior.dtype.type == np.float32', 'poly_proj.exterior.shape == (4, 2)', 'np.allclose(', 'poly_proj.exterior.dtype.type == np.float32', 'poly_proj.exterior.shape == (4, 2)', 'np.allclose(', 'poly_proj.exterior.dtype.type == np.float32', 'poly_proj.exterior.shape == (0, 2)', 'np.array_equal(mask, np.array([True, True, True, True], dtype=bool))', 'np.array_equal(mask, np.array([True, False, False, False], dtype=bool))', 'np.array_equal(mask, np.array([True, False, False, False], dtype=bool))', 'np.array_equal(mask, np.array([True, False, False, False], dtype=bool))', 'poly.is_fully_within_image((1, 1, 3))', 'poly.is_fully_within_image((1, 1))', 'poly.is_fully_within_image(np.zeros((1, 1, 3), dtype=np.uint8))', 'not poly.is_fully_within_image((1, 1, 3))', 'not poly.is_fully_within_image((1, 1))', 'not poly.is_fully_within_image(np.zeros((1, 1, 3), dtype=np.uint8))', 'not poly.is_fully_within_image((1, 1, 3))', 'poly.is_partly_within_image((1, 1, 3))', 'poly.is_partly_within_image((1, 1))', 'poly.is_partly_within_image(np.zeros((1, 1, 3), dtype=np.uint8))', 'poly.is_partly_within_image((1, 1, 3))', 'poly.is_partly_within_image((1, 1))', 'poly.is_partly_within_image(np.zeros((1, 1, 3), dtype=np.uint8))', 'not poly.is_partly_within_image((1, 1, 3))', 'not poly.is_partly_within_image((1, 1))', 'not poly.is_partly_within_image(np.zeros((1, 1, 3), dtype=np.uint8))', 'not poly.is_out_of_image(shape, partly=False, fully=False)', 'not poly.is_out_of_image(shape, partly=True, fully=False)', 'not poly.is_out_of_image(shape, partly=False, fully=True)', 'not poly.is_out_of_image(shape, partly=True, fully=True)', 'not poly.is_out_of_image(shape, partly=False, fully=False)', 'poly.is_out_of_image(shape, partly=True, fully=False)', 'not poly.is_out_of_image(shape, partly=False, fully=True)', 'poly.is_out_of_image(shape, partly=True, fully=True)', 'not poly.is_out_of_image(shape, partly=False, fully=False)', 'not poly.is_out_of_image(shape, partly=True, fully=False)', 'poly.is_out_of_image(shape, partly=False, fully=True)', 'poly.is_out_of_image(shape, partly=True, fully=True)', 'isinstance(multipoly_clipped, ia.MultiPolygon)', 'len(multipoly_clipped.geoms) == 1', 'multipoly_clipped.geoms[0].exterior_almost_equals(poly.exterior)', 'multipoly_clipped.geoms[0].label is None', 'isinstance(multipoly_clipped, ia.MultiPolygon)', 'len(multipoly_clipped.geoms) == 1', 'multipoly_clipped.geoms[0].exterior_almost_equals(np.float32([', 'multipoly_clipped.geoms[0].label == ', 'isinstance(multipoly_clipped, ia.MultiPolygon)', 'len(multipoly_clipped.geoms) == 2', 'multipoly_clipped.geoms[0].exterior_almost_equals(np.float32([', 'multipoly_clipped.geoms[0].label == ', 'multipoly_clipped.geoms[1].exterior_almost_equals(np.float32([', 'multipoly_clipped.geoms[0].label == ', 'np.allclose(poly.exterior, np.float32([', 'np.allclose(poly_shifted.exterior, np.float32([', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))  # draw did not change original image (copy=True)', 'np.all(image_poly[2:9, 2:3, c_idx] == np.zeros((7, 1), dtype=np.uint8) + value)  # left boundary', 'np.all(image_poly[2:9, 8:9, c_idx] == np.zeros((7, 1), dtype=np.uint8) + value)  # right boundary', 'np.all(image_poly[2:3, 2:9, c_idx] == np.zeros((1, 7), dtype=np.uint8) + value)  # top boundary', 'np.all(image_poly[8:9, 2:9, c_idx] == np.zeros((1, 7), dtype=np.uint8) + value)  # bottom boundary', 'np.all(image_poly[3:8, 3:8, :] == expected)', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))  # draw did not change original image (copy=True)', 'np.all(image_poly[2+5:, 2:3, c_idx] == np.zeros((3, 1), dtype=np.uint8) + value)  # left boundary', 'np.all(image_poly[2+5:, 8:9, c_idx] == np.zeros((3, 1), dtype=np.uint8) + value)  # right boundary', 'np.all(image_poly[2+5:3+5, 2:9, c_idx] == np.zeros((1, 7), dtype=np.uint8) + value)  # top boundary', 'np.all(image_poly[3+5:, 3:8, :] == expected)', 'in str(exc)', 'not got_exception  # only polygons fully outside of the image plane lead to exceptions', 'np.array_equal(image_poly, image)', 'in str(exc)', 'got_exception', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))  # draw did not change original image (copy=True)', 'np.all(image_poly[2:9, 2:3, c_idx] == np.zeros((7, 1), dtype=np.uint8) + value)  # left boundary', 'np.all(image_poly[3:8, 3:8, :] == image[3:8, 3:8, :])', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))  # draw did not change original image (copy=True)', 'np.all(image_poly[2:8, 2:8, :] == expected)', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.all(image_cp == image_poly)', 'not np.all(image_cp == image)', 'np.all(image_poly[2:9, 2:3, c_idx] == np.zeros((6, 1, 3), dtype=np.uint8) + value)  # left boundary', 'np.all(image_cp[2:9, 2:3, c_idx] == np.zeros((6, 1, 3), dtype=np.uint8) + value)  # left boundary', 'np.all(image_poly[3:8, 3:8, :] == expected)', 'np.all(image_cp[3:8, 3:8, :] == expected)', 'np.array_equal(subimage, image[0:10, 0:10, :])', 'np.array_equal(subimage, image[1:9, 1:9, :])', 'np.array_equal(subimage, expected)', 'np.array_equal(subimage, expected)', 'np.array_equal(subimage, expected)', 'np.array_equal(subimage, image[0:10, 0:10, :])', 'np.array_equal(subimage, image[0:9, 0:9, :])', 'np.array_equal(subimage, image[1:9, 1:9, :])', 'np.allclose(poly.exterior, poly_reordered.exterior)', 'np.allclose(poly.exterior, np.float32([[0, 0], [1, 0], [1, 1]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [1, 1], [0, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 1], [0, 0], [1, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [1, 1], [0, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [1, 1], [0, 0]]))', 'in str(exc)', 'got_exception', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [0, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[0, 0]]))', 'np.allclose(poly.exterior, poly_reordered.exterior)', 'np.allclose(poly.exterior, np.float32([[0, 0], [1, 0], [1, 1]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [1, 1], [0, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 1], [0, 0], [1, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [0, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[0, 0]]))', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'np.allclose(ls.coords, np.float32([[0, 0], [1, 0], [1, 1]]))', 'np.allclose(ls.coords, np.float32([[0, 0], [1, 0]]))', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'np.allclose(ls.coords, np.float32([[0, 0], [1, 0], [1, 1], [0, 0]]))', 'np.allclose(ls.coords, np.float32([[0, 0], [0.5, 0], [1, 0], [1, 0.5], [1, 1], [0.5, 0.5]]))', 'np.allclose(ls.coords, np.float32([', 'np.allclose(ls.coords, np.float32([[0, 0], [0.5, 0], [1, 0], [1, 0.5], [1, 1], [0.5, 0.5], [0, 0]]))', 'x_exp - 1e-8 < x_obs < x_exp + 1e-8', 'y_exp - 1e-8 < y_obs < y_exp + 1e-8', '0 - 1e-8 < bb.x1 < 0 + 1e-8', '0 - 1e-8 < bb.y1 < 0 + 1e-8', '1 - 1e-8 < bb.x2 < 1 + 1e-8', '1 - 1e-8 < bb.y2 < 1 + 1e-8', '0 - 1e-8 < bb.x1 < 0 + 1e-8', '0 - 1e-8 < bb.y1 < 0 + 1e-8', '1 - 1e-8 < bb.x2 < 1 + 1e-8', '1 - 1e-8 < bb.y2 < 1 + 1e-8', '0.5 - 1e-8 < bb.x1 < 0.5 + 1e-8', '0.1 - 1e-8 < bb.y1 < 0.1 + 1e-8', '2.0 - 1e-8 < bb.x2 < 2.0 + 1e-8', '1.0 - 1e-8 < bb.y2 < 1.0 + 1e-8', 'x_exp - 1e-8 < x_obs < x_exp + 1e-8', 'y_exp - 1e-8 < y_obs < y_exp + 1e-8', 'poly.exterior.dtype.type == poly_cp.exterior.dtype.type', 'poly.exterior.shape == poly_cp.exterior.shape', 'np.allclose(poly.exterior, poly_cp.exterior)', 'poly.label == poly_cp.label', 'poly.exterior.dtype.type == poly_cp.exterior.dtype.type', 'poly.exterior.shape == poly_cp.exterior.shape', 'np.allclose(poly.exterior, poly_cp.exterior)', 'poly.label == poly_cp.label', 'poly.exterior.dtype.type == poly_cp.exterior.dtype.type', 'poly.exterior.shape == poly_cp.exterior.shape', 'not np.allclose(poly.exterior, poly_cp.exterior)', 'not poly.label == poly_cp.label', 's == ', 's == ', 's == ', 's == ', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-3)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-9)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-9)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-9)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-4, interpolate=0)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-4, interpolate=1)', 'poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'len(loaded) == 20*nb_workers,  % (20*nb_workers, len(loaded), nb_workers, counter)', 'loader.all_finished()', 'len(loaded) == 20*nb_workers,  % (20*nb_workers, len(loaded), nb_workers, counter)', 'loader.all_finished()', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'iaa.Noop().get_parameters() == []', 'array_equal_lists(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_aug)', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_aug)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'np.array_equal(observed, expected)', 'errored', 'np.array_equal(observed, expected)', 'errored', 'array_equal_lists(observed, expected)', 'errored', 'array_equal_lists(observed, expected)', 'errored', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'errored', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'errored', 'keypoints_equal(observed, expected)', 'errored', 'keypoints_equal(observed, expected)', 'errored', 'array_equal_lists(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'observed.shape == (3, 4, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'observed.shape == (3, 4, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'errored', 'errored', 'errored', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'observed.shape == (3, 4, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'observed.shape == (3, 4, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'errored', 'errored', 'errored', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'observed.shape == (3, 4, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'observed.shape == (3, 4, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'errored', 'errored', 'errored', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'observed.shape == (3, 4, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'observed.shape == (3, 4, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'errored', 'errored', 'errored', 'in str(exc)', 'got_exception', 'np.allclose(observed, expected)', 'observed.shape == heatmaps.shape', '0 - 1e-6 < heatmaps.min_value < 0 + 1e-6', '1 - 1e-6 < heatmaps.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_r1)', 'np.allclose(observed, expected)', 'observed.shape == heatmaps.shape', '0 - 1e-6 < heatmaps.min_value < 0 + 1e-6', '1 - 1e-6 < heatmaps.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_l1)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'density_expected - density_tolerance < density < density_expected + density_tolerance', 'in str(exc)', 'got_exception', 'len(uq) > 1', 'np.max(observed) > 80', 'np.min(observed) < 20', 'len(uq) > 1', 'np.max(observed) > 80', 'np.min(observed) < 20', 'False', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', 'in str(exc)', 'got_exception', 'np.array_equal(observed, image)', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'False', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', 'keypoints_equal([observed], [kpsoi])', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', '0.65 - 1e-6 < params[0].value < 0.65 + 1e-6', 'params[1].value == 1', 'len(children_lsts) == 2', 'ia.is_iterable([lst for lst in children_lsts])', 'first in children_lsts[0]', 'second == children_lsts[1]', 'np.allclose(observed, expected)', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_r1)', 'np.allclose(observed, expected)', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_l1)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'density_expected - density_tolerance < density < density_expected + density_tolerance', 'len(set(observed.flatten())) > 1', 'np.array_equal(observed, image)', 'False', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_r1)', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_l1)', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'False', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', 'keypoints_equal([observed], [kpsoi])', 'np.allclose(observed, expected)', '_array_equals_tolerant(observed, expected, 2)', '_array_equals_tolerant(observed, expected, 2)', 'np.allclose(observed, base_img) or _array_equals_tolerant(observed, base_img_superpixels, 2)', 'all(seen.values())', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', '0.5 - 1e-4 < params[0].p.value < 0.5 + 1e-4', 'params[1].value == 2', 'params[2] == 100', 'params[3] == ', 'observed2d.shape == (12, 12)', 'observed3d.shape == (12, 12, 3)', '50 < np.average(observed2d) < 205', '50 < np.average(observed3d) < 205', 'heatmaps_aug.shape == (8, 12, 3)', '0 - 1e-6 < heatmaps_aug.min_value < 0 + 1e-6', '1 - 1e-6 < heatmaps_aug.max_value < 1 + 1e-6', 'np.average(heatmaps_aug.get_arr()[0, :]) < 0.05', 'np.average(heatmaps_aug.get_arr()[-1, :]) < 0.05', 'np.average(heatmaps_aug.get_arr()[:, 0]) < 0.05', '0.8 < np.average(heatmaps_aug.get_arr()[2:6, 2:10]) < 1 + 1e-6', 'observed2d.shape in [(12, 12), (14, 14)]', 'observed3d.shape in [(12, 12, 3), (14, 14, 3)]', 'all(seen2d)', 'all(seen3d)', 'observed2d.shape in [(12, 12), (13, 13), (14, 14)]', 'observed3d.shape in [(12, 12, 3), (13, 13, 3), (14, 14, 3)]', 'all(seen2d)', 'all(seen3d)', 'observed2d.shape == base_img2d.shape', 'observed3d.shape == base_img3d.shape', 'observed2d.shape == base_img2d.shape', 'observed3d.shape == base_img3d.shape', 'observed2d.shape == base_img2d.shape', 'observed3d.shape == base_img3d.shape', 'observed2d.shape == (11, base_img2d.shape[1])', 'observed3d.shape == (11, base_img3d.shape[1], 3)', 'observed2d.shape == (base_img2d.shape[0], 13)', 'observed3d.shape == (base_img3d.shape[0], 13, 3)', 'observed2d.shape == (12, 13)', 'observed3d.shape == (12, 13, 3)', 'observed2d.shape == (12, base_img2d.shape[1])', 'observed3d.shape == (12, base_img3d.shape[1], 3)', 'observed2d.shape == (base_img2d.shape[0], 12)', 'observed3d.shape == (base_img3d.shape[0], 12, 3)', 'observed2d.shape == (12, int(12 * aspect_ratio2d))', 'observed3d.shape == (12, int(12 * aspect_ratio3d), 3)', 'observed2d.shape == (int(12 * (1/aspect_ratio2d)), 12)', 'observed3d.shape == (int(12 * (1/aspect_ratio3d)), 12, 3)', 'observed2d.shape in [(12, 12), (14, 12)]', 'observed3d.shape in [(12, 12, 3), (14, 12, 3)]', 'all(seen2d)', 'all(seen3d)', 'observed2d.shape in [(12, 12), (12, 14)]', 'observed3d.shape in [(12, 12, 3), (12, 14, 3)]', 'all(seen2d)', 'all(seen3d)', 'observed2d.shape in [(12, 12), (12, 14)]', 'observed3d.shape in [(12, 12, 3), (12, 14, 3)]', 'all(seen2d)', 'all(seen3d)', 'observed2d.shape in [(12, 12), (13, 12), (14, 12)]', 'observed3d.shape in [(12, 12, 3), (13, 12, 3), (14, 12, 3)]', 'all(seen2d)', 'all(seen3d)', 'observed2d.shape == (base_img2d.shape[0]*2, base_img2d.shape[1]*2)', 'observed3d.shape == (base_img3d.shape[0]*2, base_img3d.shape[1]*2, 3)', 'intensity_low < np.average(observed2d) < intensity_high', 'intensity_low < np.average(observed3d) < intensity_high', 'observed2d.shape in [(base_img2d.shape[0]*2, base_img2d.shape[1]*2), (base_img2d.shape[0]*4, base_img2d.shape[1]*4)]', 'observed3d.shape in [(base_img3d.shape[0]*2, base_img3d.shape[1]*2, 3), (base_img3d.shape[0]*4, base_img3d.shape[1]*4, 3)]', 'all(seen2d)', 'all(seen3d)', 'observed2d.shape in [(base_img2d.shape[0]*2, base_img2d.shape[1]*2), (base_img2d.shape[0]*4, base_img2d.shape[1]*4)]', 'observed3d.shape in [(base_img3d.shape[0]*2, base_img3d.shape[1]*2, 3), (base_img3d.shape[0]*4, base_img3d.shape[1]*4, 3)]', 'all(seen2d)', 'all(seen3d)', 'observed2d.shape in possible2d', 'observed3d.shape in possible3d', 'not not_seen2d', 'not not_seen3d', 'observed2d.shape in possible2d', 'observed3d.shape in possible3d', 'not not_seen2d', 'not not_seen3d', 'in str(exc)', 'got_exception', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'params[0].value == 1', 'params[1].value == ', 'np.array_equal(observed, np.array([base_img_padded]))', 'array_equal_lists(observed, [base_img_padded])', 'keypoints_equal(observed, keypoints_moved)', 'observed.shape == base_img_padded.shape', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.array_equal(observed.get_arr(), heatmaps_arr_padded)', 'any([val == 1 for val in matches])', 'any([val == 1 for val in matches])', 'any([array_equal_lists(observed, [base_img_padded])', 'any([keypoints_equal(observed, [kp]) for kp in keypoints_padded])', 'len(set(movements)) == 3', 'len(set(movements_det)) == 1', 'any([val == 1 for val in matches])', 'any([val == 1 for val in matches])', 'any([array_equal_lists(observed, [base_img_padded])', 'any([keypoints_equal(observed, [kp]) for kp in keypoints_padded])', 'len(set(movements)) == 2', 'len(set(movements_det)) == 1', 'False', 'all([100 - 50 < v < 100 + 50 for v in seen])', 'isinstance(aug.pad_mode, iap.Choice)', 'len(aug.pad_mode.a) == len(expected)', 'all([v in aug.pad_mode.a for v in expected])', 'isinstance(aug.pad_mode, iap.Choice)', 'len(aug.pad_mode.a) == len(expected)', 'all([v in aug.pad_mode.a for v in expected])', 'in str(exc)', 'got_exception', 'np.sum(observed.get_arr() <= 1e-4) == 3', 'observed[0, 0] == 0', 'observed[0, 1] == 100', 'False', 'all([100 - 50 < v < 100 + 50 for v in seen])', 'isinstance(aug.pad_cval, iap.Choice)', 'len(aug.pad_cval.a) == len(expected)', 'all([v in aug.pad_cval.a for v in expected])', 'False', 'all([100 - 50 < v < 100 + 50 for v in seen])', 'in str(exc)', 'got_exception', 'np.sum(observed.get_arr() > 1e-4) == 0', 'observed.shape == (4+4+4, 4+4+4)', 'np.sum(observed[4:-4, 4:-4]) == 4*4', 'np.sum(observed) == 4*4', 'observed.shape == (4+4+4, 4+4+4)', 'np.sum(observed[4:-4, 4:-4]) == 4*4', 'np.sum(observed) == 4*4', 'np.sum(observed) == 4*4', '(observed.shape[0] - 4) % 2 == 0', '(observed.shape[1] - 4) % 2 == 0', 'in str(exc)', 'got_exception', 'np.array_equal(observed, image_padded)', 'keypoints_equal(observed, keypoints_moved)', 'all([v > 30 for v in seen])', 'all([v > 30 for v in seen])', '250 - 50 < seen[0] < 250 + 50', 'seen[1] == 0', 'seen[2] == 0', 'seen[3] == 0', '250 - 50 < seen[4] < 250 + 50', '250 - 50 < seen[0] < 250 + 50', 'seen[1] == 0', 'seen[2] == 0', 'seen[3] == 0', '250 - 50 < seen[4] < 250 + 50', 'np.array_equal(observed, np.array([base_img_cropped]))', 'array_equal_lists(observed, [base_img_cropped])', 'keypoints_equal(observed, keypoints_moved)', 'observed.shape == base_img_cropped.shape', 'np.array_equal(observed.get_arr(), heatmaps_arr_cropped)', 'any([val == 1 for val in matches])', 'any([val == 1 for val in matches])', 'any([array_equal_lists(observed, [base_img_cropped])', 'any([keypoints_equal(observed, [kp]) for kp in keypoints_cropped])', 'len(set(movements)) == 3', 'len(set(movements_det)) == 1', 'any([val == 1 for val in matches])', 'any([val == 1 for val in matches])', 'any([array_equal_lists(observed, [base_img_cropped])', 'any([keypoints_equal(observed, [kp]) for kp in keypoints_cropped])', 'len(set(movements)) == 2', 'len(set(movements_det)) == 1', 'observed.shape == (40, 40)', 'np.all(observed == image[5:-5, 5:-5])', 'observed.shape == (40, 40)', 'np.all(observed == image[5:-5, 5:-5])', '30 <= observed.shape[0] <= 40', '30 <= observed.shape[1] <= 40', 'in str(exc)', 'got_exception', 'np.array_equal(observed, image_cropped)', 'keypoints_equal(observed, keypoints_moved)', 'all([v > 30 for v in seen])', 'all([v > 30 for v in seen])', '250 - 50 < seen[0] < 250 + 50', 'seen[1] == 0', 'seen[2] == 0', 'seen[3] == 0', '250 - 50 < seen[4] < 250 + 50', '250 - 50 < seen[0] < 250 + 50', 'seen[1] == 0', 'seen[2] == 0', 'seen[3] == 0', '250 - 50 < seen[4] < 250 + 50', 'observed.dtype.type == np.uint8', 'observed.shape == (5, 5)', 'observed.dtype.type == np.uint8', 'observed.shape == (5, 5, 1)', 'observed.dtype.type == np.uint8', 'observed.shape == (5, 5, 3)', 'observed.dtype.type == dtype', 'observed.shape == (5, 5)', 'observed.dtype.type == np.uint8', 'observed.shape == (5, 5, 3)', 'observed.dtype.type == np.uint8', 'observed.shape == (5, 5, 3)', 'observed.dtype.type == np.uint8', 'observed.shape == (5, 5, 3)', 'np.array_equal(observed, img5x5)', 'observed.dtype.type == np.uint8', 'observed.shape == (6, 6, 3)', 'np.array_equal(observed, img6x6)', 'observed.dtype.type == np.uint8', 'observed.shape == (4, 4)', 'np.array_equal(observed, expected)', 'observed.dtype.type == np.uint8', 'observed.shape == (3, 3)', 'np.array_equal(observed, expected)', 'observed.dtype.type == np.uint8', 'observed.shape == (3, 3)', 'np.array_equal(observed, expected)', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed.shape == (3, 3, 3)', 'np.allclose(observed.arr_0to1, expected)', 'observed.shape == (32, 32, 3)', 'np.allclose(observed.arr_0to1, expected)', 'observed.dtype.type == np.uint8', 'observed.shape == (1, 1)', 'observed.dtype.type == np.uint8', 'observed.shape == (1, 1, 1)', 'observed.dtype.type == np.uint8', 'observed.shape == (1, 1, 3)', 'observed.dtype.type == dtype', 'observed.shape == (1, 1)', 'observed.dtype.type == np.uint8', 'observed.shape == (3, 5, 3)', 'observed.dtype.type == np.uint8', 'observed.shape == (5, 3, 3)', 'observed.dtype.type == np.uint8', 'observed.shape == (5, 5, 3)', 'np.array_equal(observed, img5x5)', 'observed.dtype.type == np.uint8', 'observed.shape == (4, 4, 3)', 'np.array_equal(observed, img4x4)', 'observed.dtype.type == np.uint8', 'observed.shape == (3, 3)', 'np.array_equal(observed, expected)', 'observed.dtype.type == np.uint8', 'observed.shape == (3, 3)', 'np.array_equal(observed, expected)', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed.shape == (3, 3, 3)', 'np.allclose(observed.arr_0to1, expected)', 'observed.shape == (32, 32, 3)', 'np.allclose(observed.arr_0to1, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), expected)', 'int(nb_iterations * 0.3) <= nb_images_flipped <= int(nb_iterations * 0.7)', 'int(nb_iterations * 0.3) <= nb_keypoints_flipped <= int(nb_iterations * 0.7)', 'nb_images_flipped_det in [0, nb_iterations]', 'nb_keypoints_flipped_det in [0, nb_iterations]', 'int(nb_iterations * 0.3) <= val <= int(nb_iterations * 0.7)', 'val in [0, nb_iterations]', 'False', '700 - 75 < seen[0] < 700 + 75', '300 - 75 < seen[1] < 300 + 75', 'got_exception', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', '0.5 - 1e-4 < params[0].p.value < 0.5 + 1e-4', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), expected)', 'int(nb_iterations * 0.3) <= nb_images_flipped <= int(nb_iterations * 0.7)', 'int(nb_iterations * 0.3) <= nb_keypoints_flipped <= int(nb_iterations * 0.7)', 'nb_images_flipped_det in [0, nb_iterations]', 'nb_keypoints_flipped_det in [0, nb_iterations]', 'int(nb_iterations * 0.3) <= val <= int(nb_iterations * 0.7)', 'val in [0, nb_iterations]', 'False', '700 - 75 < seen[0] < 700 + 75', '300 - 75 < seen[1] < 300 + 75', 'got_exception', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', '0.5 - 1e-4 < params[0].p.value < 0.5 + 1e-4', 'np.array_equal(observed, expected)', '100 < observed[0][1, 1] < 255', '(observed[0][outer_pixels[0], outer_pixels[1]] > 0).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 50).all()', '100 < observed[0][1, 1] < 255', '(observed[0][outer_pixels[0], outer_pixels[1]] > 0).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 50).all()', '100 < observed[0][1, 1] < 255', '(observed[0][outer_pixels[0], outer_pixels[1]] > 0).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 50).all()', '100 < observed[0][1, 1] < 255', '(observed[0][outer_pixels[0], outer_pixels[1]] > 0).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 50).all()', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'nb_changed_aug >= int(nb_iterations * 0.8)', 'nb_changed_aug_det == 0', 'np.array_equal(observed, base_img)', 'np.array_equal(observed, blur3x3)', 'np.array_equal(observed, blur5x5)', '0.4 <= p_seen[0] <= 0.6', '0.4 <= p_seen[1] <= 0.6', '0.23 <= p_seen[0] <= 0.43', '0.23 <= p_seen[1] <= 0.43', '0.23 <= p_seen[2] <= 0.43', '0.4 <= p_seen[0] <= 0.6', '0.4 <= p_seen[1] <= 0.6', 'all([v > 0 for v in nb_seen.values()])', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'np.array_equal(observed, base_img)', 'np.array_equal(observed, blur3x3)', 'np.array_equal(observed, blur5x5)', 'all(seen)', 'all(seen)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'np.allclose(observed, expected)', 'np.all(diff <= 3)', 'not np.array_equal(expected_imgs[0], expected_imgs[1])', 'not np.array_equal(expected_imgs[1], expected_imgs[2])', 'not np.array_equal(expected_imgs[0], expected_imgs[2])', 'np.sum(list(seen.values())) == nb_iterations', 'all([n_exp - n_exp_tol < v < n_exp + n_exp_tol for v in seen.values()])', 'np.allclose(observed, expected)', 'np.allclose(observed, expected.astype(np.uint8))', 'np.allclose(observed, expected.astype(np.uint8))', '0 - 1e-4 < min(distances) < 0.1', '0.4 < np.average(distances) < 0.6', '0.9 < max(distances) < 1.0 + 1e-4', 'density_expected - density_tolerance < density < density_expected + density_tolerance', 'img_aug.dtype.type == np.uint8', 'img3d_aug.dtype.type == np.uint8', 'np.array_equal(img_aug, skimage.exposure.adjust_gamma(img, gamma=gamma))', 'np.array_equal(img3d_aug, skimage.exposure.adjust_gamma(img3d, gamma=gamma))', 'isinstance(aug.params1d[0], iap.Uniform)', 'isinstance(aug.params1d[0].a, iap.Deterministic)', 'isinstance(aug.params1d[0].b, iap.Deterministic)', 'aug.params1d[0].a.value == 1', 'aug.params1d[0].b.value == 2', 'isinstance(aug.params1d[0], iap.Choice)', 'all([val in aug.params1d[0].a for val in [1, 2]])', 'img_aug.dtype.type == np.uint8', 'all(seen)', 'keypoints_equal([kpsoi], kpsoi_aug)', 'np.allclose(heatmaps.arr_0to1, heatmaps_aug.arr_0to1)', 'img_aug.dtype.type == np.uint8', 'img3d_aug.dtype.type == np.uint8', 'np.array_equal(img_aug, skimage.exposure.adjust_sigmoid(img, gain=gain, cutoff=cutoff))', 'np.array_equal(img3d_aug, skimage.exposure.adjust_sigmoid(img3d, gain=gain, cutoff=cutoff))', 'isinstance(aug.params1d[0], iap.Uniform)', 'isinstance(aug.params1d[0].a, iap.Deterministic)', 'isinstance(aug.params1d[0].b, iap.Deterministic)', 'np.allclose(aug.params1d[0].a.value, 0.25)', 'np.allclose(aug.params1d[0].b.value, 0.75)', 'isinstance(aug.params1d[1], iap.Uniform)', 'isinstance(aug.params1d[1].a, iap.Deterministic)', 'isinstance(aug.params1d[1].b, iap.Deterministic)', 'aug.params1d[1].a.value == 1', 'aug.params1d[1].b.value == 2', 'isinstance(aug.params1d[0], iap.Choice)', 'all([np.allclose(val, val_choice) for val, val_choice in zip([0.25, 0.75], aug.params1d[0].a)])', 'isinstance(aug.params1d[1], iap.Choice)', 'all([val in aug.params1d[1].a for val in [1, 2]])', 'img_aug.dtype.type == np.uint8', 'all(seen)', 'keypoints_equal([kpsoi], kpsoi_aug)', 'np.allclose(heatmaps.arr_0to1, heatmaps_aug.arr_0to1)', 'img_aug.dtype.type == np.uint8', 'img3d_aug.dtype.type == np.uint8', 'np.array_equal(img_aug, skimage.exposure.adjust_log(img, gain=gain))', 'np.array_equal(img3d_aug, skimage.exposure.adjust_log(img3d, gain=gain))', 'isinstance(aug.params1d[0], iap.Uniform)', 'isinstance(aug.params1d[0].a, iap.Deterministic)', 'isinstance(aug.params1d[0].b, iap.Deterministic)', 'aug.params1d[0].a.value == 1', 'aug.params1d[0].b.value == 2', 'isinstance(aug.params1d[0], iap.Choice)', 'all([val in aug.params1d[0].a for val in [1, 2]])', 'img_aug.dtype.type == np.uint8', 'all(seen)', 'keypoints_equal([kpsoi], kpsoi_aug)', 'np.allclose(heatmaps.arr_0to1, heatmaps_aug.arr_0to1)', 'img_aug.dtype.type == np.uint8', 'img3d_aug.dtype.type == np.uint8', 'np.array_equal(img_aug, contrast_lib._adjust_linear(img, alpha=alpha))', 'np.array_equal(img3d_aug, contrast_lib._adjust_linear(img3d, alpha=alpha))', 'isinstance(aug.params1d[0], iap.Uniform)', 'isinstance(aug.params1d[0].a, iap.Deterministic)', 'isinstance(aug.params1d[0].b, iap.Deterministic)', 'aug.params1d[0].a.value == 1', 'aug.params1d[0].b.value == 2', 'isinstance(aug.params1d[0], iap.Choice)', 'all([val in aug.params1d[0].a for val in [1, 2]])', 'img_aug.dtype.type == np.uint8', 'all(seen)', 'keypoints_equal([kpsoi], kpsoi_aug)', 'np.allclose(heatmaps.arr_0to1, heatmaps_aug.arr_0to1)', 'observed.dtype.type == np.uint8', 'observed.shape == img.shape', 'np.array_equal(observed, img)', 'observed.dtype.type == np.uint8', 'observed.shape == img.shape', 'np.array_equal(observed, expected)', 'np.array_equal(observed, img)', 'np.array_equal(observed, img)', 'np.array_equal(observed, img)', 'np.array_equal(observed, img)', 'np.array_equal(observed, img)', 'np.array_equal(observed, img)', 'np.array_equal(observed, 2*img)', 'np.array_equal(observed, 2*img)', 'np.array_equal(observed, 2*img3)', 'np.array_equal(observed, 2*img3)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'found', 'all(seen)', 'in str(exc)', 'got_exception', 'np.array_equal(params[0], matrix)', 'params[1] == ', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected.astype(np.uint8))', 'np.allclose(observed, expected)', 'np.allclose(observed, expected1) or np.allclose(observed, expected2)', 'in str(exc)', 'got_exception', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected1) or np.allclose(observed, expected2)', 'in str(exc)', 'got_exception', '0 - 1e-4 < min(distances) < 0.1', '0.4 < np.average(distances) < 0.6', '0.9 < max(distances) < 1.0 + 1e-4', 'density_expected - density_tolerance < density < density_expected + density_tolerance', '0 - 1e-4 < min(distances) < 0.1', '0.4 < np.average(distances) < 0.6', '0.9 < max(distances) < 1.0 + 1e-4', 'density_expected - density_tolerance < density < density_expected + density_tolerance', '_allclose(observed, expected)', '_allclose(observed, expected)', '_allclose(observed, expected.astype(np.uint8))', '_allclose(observed, expected)', '_allclose(observed, expected1) or np.allclose(observed, expected2)', 'in str(exc)', 'got_exception', '_allclose(observed, expected)', '_allclose(observed, expected)', '_allclose(observed, expected)', '_allclose(observed, expected1) or np.allclose(observed, expected2)', 'in str(exc)', 'got_exception', 'np.array_equal(observed, expected)', 'not np.array_equal(observed, images)', 'not np.array_equal(observed, images)', 'not array_equal_lists(observed, images_list)', 'not array_equal_lists(observed, images_list)', 'keypoints_equal(observed, keypoints)', 'keypoints_equal(observed, keypoints)', 'np.min(values) == 0', '0.1 < np.std(values) / 255.0 < 0.4', '54 < np.average(values) < 74 # loc=0.25 should be around 255*0.25=64 average', 'nb_changed_aug >= int(nb_iterations * 0.95)', 'nb_changed_aug_det == 0', 'False', '75 < seen[0] < 125', '75 < seen[1] < 125', 'nb_changed_aug >= int(nb_iterations * 0.95)', 'nb_changed_aug_det == 0', 'seen[2] <= 5', '75 < seen[0] < 125', '75 < seen[1] < 125', 'got_exception', 'got_exception', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'not np.array_equal(observed, images)', '0.35 <= (1 - percent_nonzero) <= 0.65', 'not np.array_equal(observed, images)', '0.35 <= (1 - percent_nonzero) <= 0.65', 'not array_equal_lists(observed, images_list)', '0.35 <= (1 - percent_nonzero) <= 0.65', 'not array_equal_lists(observed, images_list)', '0.35 <= (1 - percent_nonzero) <= 0.65', 'keypoints_equal(observed, keypoints)', 'keypoints_equal(observed, keypoints)', 'nb_changed_aug >= int(nb_iterations * 0.95)', 'nb_changed_aug_det == 0', 'seen[2] <= 10', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'all([v in [0, 100] for v in averages])', '50 - 20 < np.average(averages) < 50 + 20', 'all([v in [0, 100] for v in averages])', '50 - 20 < np.average(averages) < 50 + 20', 'found', 'seen[2] <= 10', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception', 'got_exception', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'nb_changed_aug >= int(nb_iterations * 0.95)', 'nb_changed_aug_det == 0', '0 in uq', '2 in uq', 'len(uq) == 2', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'params[0].value == 1', 'params[1].value == 0', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'nb_changed_aug >= int(nb_iterations * 0.95)', 'nb_changed_aug_det == 0', 'nb_different > 0.95 * (nb_different + nb_same)', 'all([(value in values) for value in [0, 1, 2, 3]])', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'params[0].value == 1', 'params[1].value == 0', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', '0.45 <= p <= 0.55', 'seen[2] <= 10', '150 < seen[0] < 250', '150 < seen[1] < 250', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', '0.45 <= p100 <= 0.55', '0.45 <= p200 <= 0.55', 'all([(value in values) for value in [0, 1, 2, 3]])', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'isinstance(params[2], iap.Deterministic)', '0.5 - 1e-6 < params[0].p.value < 0.5 + 1e-6', 'params[1].value == 2', 'params[2].value == 0', '0.4 < p < 0.6', 'nb_pepper > 200', 'nb_salt > 200', '0.4 < p < 0.6', '0.4 < np.mean(ps2) < 0.6', 'np.std(ps1)*1.5 < np.std(ps2)', 'seen[2] < 10', '75 < seen[0] < 125', '75 < seen[1] < 125', 'density - tolerance < density < density + tolerance', 'got_exception', 'got_exception', '0.4 < p < 0.6', 'np.all(observed >= 127)  # Salt() occasionally replaces with 127,', 'nb_pepper == 0', 'nb_salt > 200', '0.4 < p < 0.6', '0.4 < np.mean(ps2) < 0.6', 'np.std(ps1)*1.5 < np.std(ps2)', 'seen[2] < 10', '75 < seen[0] < 125', '75 < seen[1] < 125', 'density - tolerance < density < density + tolerance', 'got_exception', 'got_exception', '0.4 < p < 0.6', 'np.all(observed <= 128)', 'nb_pepper > 200', 'nb_salt == 0', '0.4 < p < 0.6', '0.4 < np.mean(ps2) < 0.6', 'np.std(ps1)*1.5 < np.std(ps2)', 'seen[2] < 10', '75 < seen[0] < 125', '75 < seen[1] < 125', 'density - tolerance < density < density + tolerance', 'got_exception', 'got_exception', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', '100 + 1 <= np.average(observed) <= 100 + 10', '100 + 1 <= np.average(observed) <= 100 + 10', '100 - 3 <= np.average(observed) <= 100 + 3', '100 - 3 <= np.average(observed) <= 100 + 3', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'nb_changed_aug >= int(nb_iterations * 0.7)', 'nb_changed_aug_det == 0', '0 in uq', '1 in uq', 'len(uq) == 2', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'params[0].value == 1', 'params[1].value == 0', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.min(observed) >= 100 + 1', 'np.max(observed) <= 100 + 10', 'np.min(observed) >= 100 + 1', 'np.max(observed) <= 100 + 10', 'np.min(observed) >= 100 - 3', 'np.max(observed) <= 100 + 3', 'np.min(observed) >= 100 - 3', 'np.max(observed) <= 100 + 3', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'nb_changed_aug >= int(nb_iterations * 0.7)', 'nb_changed_aug_det == 0', 'nb_different > 0.9 * (nb_different + nb_same)', 'all([(value in values) for value in [0, 1, 2, 3]])', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'params[0].value == 1', 'params[1].value == 0', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', '0.75 <= pinv <= 0.85', '0.75 <= pinv <= 0.85', 'len(np.unique(observed)) == 2', 'False', '300 - 75 < seen[0] < 300 + 75', '700 - 75 < seen[1] < 700 + 75', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', '0.5 - 1e-4 < params[0].p.value < 0.5 + 1e-4', 'params[1].value == 0', 'params[2] == 10', 'params[3] == 20', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected1) or np.array_equal(observed, expected2)', 'p_changed > 0.5', 'len(uq) > 5', '300 - 75 < seen[0] < 300 + 75', '700 - 75 < seen[1] < 700 + 75', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'params[0].value == 1', 'params[1].value == 0', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'array_equal_lists(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y > 2', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y > 2', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y == 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y == 2', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y == 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y == 2', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0].keypoints[0].x == 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x == 2', 'observed[0].keypoints[2].y > 2', 'observed[0].keypoints[0].x == 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x == 2', 'observed[0].keypoints[2].y > 2', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'nb_changed_aug >= int(nb_iterations * 0.8)', 'nb_changed_aug_det == 0', 'isinstance(aug.scale, iap.Uniform)', 'isinstance(aug.scale.a, iap.Deterministic)', 'isinstance(aug.scale.b, iap.Deterministic)', '0.7 - 1e-8 < aug.scale.a.value < 0.7 + 1e-8', '0.9 - 1e-8 < aug.scale.b.value < 0.9 + 1e-8', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'len(observed_aug[0].nonzero()[0]) == 1', 'len(observed_aug_det[0].nonzero()[0]) == 1', 'nb_changed_aug >= int(nb_iterations * 0.7)', 'nb_changed_aug_det == 0', '(centers_aug > int(nb_iterations * (1/9 * 0.6))).all()', '(centers_aug < int(nb_iterations * (1/9 * 1.4))).all()', 'isinstance(aug.translate, iap.Uniform)', 'isinstance(aug.translate.a, iap.Deterministic)', 'isinstance(aug.translate.b, iap.Deterministic)', '0.7 - 1e-8 < aug.translate.a.value < 0.7 + 1e-8', '0.9 - 1e-8 < aug.translate.b.value < 0.9 + 1e-8', 'isinstance(aug.translate, iap.DiscreteUniform)', 'isinstance(aug.translate.a, iap.Deterministic)', 'isinstance(aug.translate.b, iap.Deterministic)', 'aug.translate.a.value == 1', 'aug.translate.b.value == 10', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'isinstance(aug.rotate, iap.Uniform)', 'isinstance(aug.rotate.a, iap.Deterministic)', 'aug.rotate.a.value == 10', 'isinstance(aug.rotate.b, iap.Deterministic)', 'aug.rotate.b.value == 20', 'nb_changed_aug >= int(nb_iterations * 0.9)', 'nb_changed_aug_det == 0', 'pixels_sums_aug[1, 1] > (nb_iterations * 0.98)', 'pixels_sums_aug[1, 1] < (nb_iterations * 1.02)', '(pixels_sums_aug[outer_pixels] > int(nb_iterations * (2/8 * 0.4))).all()', '(pixels_sums_aug[outer_pixels] < int(nb_iterations * (2/8 * 2.0))).all()', 'isinstance(aug.shear, iap.Uniform)', 'isinstance(aug.shear.a, iap.Deterministic)', 'aug.shear.a.value == 10', 'isinstance(aug.shear.b, iap.Deterministic)', 'aug.shear.b.value == 20', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', 'nb_changed_aug >= int(nb_iterations * 0.9)', 'nb_changed_aug_det == 0', 'pixels_sums_aug[1, 1] > (nb_iterations * 0.98)', 'pixels_sums_aug[1, 1] < (nb_iterations * 1.02)', 'len(set(averages)) > 200', 'isinstance(aug.cval, iap.Uniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 0', 'aug.cval.b.value == 255', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 1', 'aug.cval.b.value == 5', 'isinstance(aug.mode, iap.Choice)', 'isinstance(aug.mode, iap.Deterministic)', 'aug.mode.value == ', 'isinstance(aug.mode, iap.Choice)', 'len(aug.mode.a) == 2 and  in aug.mode.a', 'isinstance(aug.mode, iap.Choice)', 'len(aug.mode.a) == 2 and  in aug.mode.a', 'aug.fit_output is True', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'np.array_equal(observed.get_arr(), expected.get_arr())', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Deterministic)  # scale', 'isinstance(params[1], iap.Deterministic)  # translate', 'isinstance(params[2], iap.Deterministic)  # rotate', 'isinstance(params[3], iap.Deterministic)  # shear', 'params[0].value == 1  # scale', 'params[1].value == 2  # translate', 'params[2].value == 3  # rotate', 'params[3].value == 4  # shear', 'params[4].value == 1  # order', 'params[5].value == 0  # cval', 'params[6].value ==   # mode', 'params[7] ==   # backend', 'params[8] is True  # fit_output', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'array_equal_lists(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y > 2', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y > 2', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y == 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y == 2', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y == 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y == 2', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0].keypoints[0].x == 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x == 2', 'observed[0].keypoints[2].y > 2', 'observed[0].keypoints[0].x == 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x == 2', 'observed[0].keypoints[2].y > 2', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'nb_changed_aug >= int(nb_iterations * 0.8)', 'nb_changed_aug_det == 0', 'isinstance(aug.scale, iap.Uniform)', 'isinstance(aug.scale.a, iap.Deterministic)', 'isinstance(aug.scale.b, iap.Deterministic)', '0.7 - 1e-8 < aug.scale.a.value < 0.7 + 1e-8', '0.9 - 1e-8 < aug.scale.b.value < 0.9 + 1e-8', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'len(observed_aug[0].nonzero()[0]) == 1', 'len(observed_aug_det[0].nonzero()[0]) == 1', 'nb_changed_aug >= int(nb_iterations * 0.7)', 'nb_changed_aug_det == 0', '(centers_aug > int(nb_iterations * (1/9 * 0.6))).all()', '(centers_aug < int(nb_iterations * (1/9 * 1.4))).all()', 'isinstance(aug.translate, iap.Uniform)', 'isinstance(aug.translate.a, iap.Deterministic)', 'isinstance(aug.translate.b, iap.Deterministic)', '0.7 - 1e-8 < aug.translate.a.value < 0.7 + 1e-8', '0.9 - 1e-8 < aug.translate.b.value < 0.9 + 1e-8', 'isinstance(aug.translate, iap.DiscreteUniform)', 'isinstance(aug.translate.a, iap.Deterministic)', 'isinstance(aug.translate.b, iap.Deterministic)', 'aug.translate.a.value == 1', 'aug.translate.b.value == 10', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'isinstance(aug.rotate, iap.Uniform)', 'isinstance(aug.rotate.a, iap.Deterministic)', 'aug.rotate.a.value == 10', 'isinstance(aug.rotate.b, iap.Deterministic)', 'aug.rotate.b.value == 20', 'nb_changed_aug >= int(nb_iterations * 0.9)', 'nb_changed_aug_det == 0', 'pixels_sums_aug[1, 1] > (nb_iterations * 0.98)', 'pixels_sums_aug[1, 1] < (nb_iterations * 1.02)', '(pixels_sums_aug[outer_pixels] > int(nb_iterations * (2/8 * 0.4))).all()', '(pixels_sums_aug[outer_pixels] < int(nb_iterations * (2/8 * 2.0))).all()', 'isinstance(aug.shear, iap.Uniform)', 'isinstance(aug.shear.a, iap.Deterministic)', 'aug.shear.a.value == 10', 'isinstance(aug.shear.b, iap.Deterministic)', 'aug.shear.b.value == 20', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', 'nb_changed_aug >= int(nb_iterations * 0.9)', 'nb_changed_aug_det == 0', 'pixels_sums_aug[1, 1] > (nb_iterations * 0.98)', 'pixels_sums_aug[1, 1] < (nb_iterations * 1.02)', 'len(set(averages)) > 200', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 0', 'aug.cval.b.value == 255', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 1', 'aug.cval.b.value == 5', 'isinstance(aug.mode, iap.Choice)', 'isinstance(aug.mode, iap.Deterministic)', 'aug.mode.value == ', 'isinstance(aug.mode, iap.Choice)', 'len(aug.mode.a) == 2 and  in aug.mode.a', 'isinstance(aug.mode, iap.Choice)', 'len(aug.mode.a) == 2 and  in aug.mode.a', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Deterministic)  # scale', 'isinstance(params[1], iap.Deterministic)  # translate', 'isinstance(params[2], iap.Deterministic)  # rotate', 'isinstance(params[3], iap.Deterministic)  # shear', 'params[0].value == 1  # scale', 'params[1].value == 2  # translate', 'params[2].value == 3  # rotate', 'params[3].value == 4  # shear', 'params[4].value == 1  # order', 'params[5].value == 0  # cval', 'params[6].value ==   # mode', '100.0 < np.average(observed[mask]) < np.average(img[mask])', '75.0 > np.average(observed[~mask]) > np.average(img[~mask])', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', '100.0/255.0 < np.average(observed_arr[mask]) < np.average(heatmaps_arr[mask])', '75.0/255.0 > np.average(observed_arr[~mask]) > np.average(heatmaps_arr[~mask])', 'np.array_equal(observed, img)', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed_arr, heatmaps_arr)', 'np.average(observed1[~mask]) < np.average(observed2[~mask])', 'observed1.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed1.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed1.max_value < heatmaps.max_value + 1e-6', 'observed2.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed2.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed2.max_value < heatmaps.max_value + 1e-6', 'np.average(observed1_arr[~mask]) < np.average(observed2_arr[~mask])', 'isinstance(aug.scale, iap.Choice)', '0.01 - 1e-8 < aug.scale.a[0] < 0.01 + 1e-8', '0.10 - 1e-8 < aug.scale.a[1] < 0.10 + 1e-8', 'seen[0] > 0', 'seen[1] > 0', 'isinstance(aug.jitter.scale, iap.Uniform)', 'isinstance(aug.jitter.scale.a, iap.Deterministic)', 'isinstance(aug.jitter.scale.b, iap.Deterministic)', '0.01 - 1e-8 < aug.jitter.scale.a.value < 0.01 + 1e-8', '0.10 - 1e-8 < aug.jitter.scale.b.value < 0.10 + 1e-8', 'isinstance(aug.jitter.scale, iap.Uniform)', 'isinstance(aug.jitter.scale.a, iap.Deterministic)', 'isinstance(aug.jitter.scale.b, iap.Deterministic)', '0.01 - 1e-8 < aug.jitter.scale.a.value < 0.01 + 1e-8', '0.10 - 1e-8 < aug.jitter.scale.b.value < 0.10 + 1e-8', 'in str(exc)', 'got_exception', 'std1 < std2', 'isinstance(aug.nb_rows, iap.Choice)', 'aug.nb_rows.a[0] == 4', 'aug.nb_rows.a[1] == 20', 'seen[0] > 0', 'seen[1] > 0', 'isinstance(aug.nb_rows, iap.DiscreteUniform)', 'isinstance(aug.nb_rows.a, iap.Deterministic)', 'isinstance(aug.nb_rows.b, iap.Deterministic)', 'aug.nb_rows.a.value == 4', 'aug.nb_rows.b.value == 20', 'isinstance(aug.nb_rows, iap.DiscreteUniform)', 'isinstance(aug.nb_rows.a, iap.Deterministic)', 'isinstance(aug.nb_rows.b, iap.Deterministic)', 'aug.nb_rows.a.value == 4', 'aug.nb_rows.b.value == 20', 'in str(exc)', 'got_exception', 'isinstance(aug.nb_cols, iap.Choice)', 'aug.nb_cols.a[0] == 4', 'aug.nb_cols.a[1] == 20', 'seen[0] > 0', 'seen[1] > 0', 'isinstance(aug.nb_cols, iap.DiscreteUniform)', 'isinstance(aug.nb_cols.a, iap.Deterministic)', 'isinstance(aug.nb_cols.b, iap.Deterministic)', 'aug.nb_cols.a.value == 4', 'aug.nb_cols.b.value == 20', 'isinstance(aug.nb_cols, iap.DiscreteUniform)', 'isinstance(aug.nb_cols.a, iap.Deterministic)', 'isinstance(aug.nb_cols.b, iap.Deterministic)', 'aug.nb_cols.a.value == 4', 'aug.nb_cols.b.value == 20', 'in str(exc)', 'got_exception', 'isinstance(aug.order, iap.Deterministic)', 'aug.order.value == 0', 'isinstance(aug.order, iap.Choice)', 'all([v in aug.order.a for v in [0, 1, 3]])', 'isinstance(aug.order, iap.Choice)', 'all([v in aug.order.a for v in [0, 1, 3]])', 'isinstance(aug.order, iap.Choice)', 'all([v in aug.order.a for v in [0, 1, 3, 4, 5]])', 'in str(exc)', 'got_exception', 'np.sum([observed[:, :] == [0, 0, 0]]) > 0', 'np.sum([observed.get_arr()[:, :] >= 0.01]) == 0', 'isinstance(aug.cval, iap.Choice)', 'aug.cval.a[0] == 0', 'aug.cval.a[1] == 10', 'seen[0] > 5', 'seen[1] > 5', 'seen[2] <= 4', 'isinstance(aug.cval, iap.Uniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 0', 'aug.cval.b.value == 10', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 0', 'aug.cval.b.value == 10', 'isinstance(aug.cval, iap.Uniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 0', 'aug.cval.b.value == 255', 'in str(exc)', 'got_exception', 'isinstance(aug.mode, iap.Deterministic)', 'aug.mode.value == ', 'isinstance(aug.mode, iap.Choice)', 'all([v in aug.mode.a for v in []])', 'isinstance(aug.mode, iap.Choice)', 'all([v in aug.mode.a for v in []])', 'isinstance(aug.mode, iap.Choice)', 'all([v in aug.mode.a for v in []])', 'in str(exc)', 'got_exception', 'not keypoints_equal([kpsoi], observed_kpsoi)', 'observed_img[int(kp.y), int(kp.x)] > 0', 'keypoints_equal([kpsoi], observed)', 'keypoints_equal([kpsoi], observed)', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'isinstance(params[2], iap.Deterministic)', 'isinstance(params[3], iap.Deterministic)', 'isinstance(params[4], iap.Deterministic)', 'isinstance(params[5], iap.Deterministic)', 'params[6] == False', '0.1 - 1e-8 < params[0].value < 0.1 + 1e-8', 'params[1].value == 8', 'params[2].value == 10', 'params[3].value == 1', 'params[4].value == 2', 'params[5].value == ', 'all([abs(s1-s2)<=1 for s1, s2 in zip(observed.shape, expected.shape)])', 'np.average(np.abs(observed.astype(np.int32) - expected.astype(np.int32))) < 30.0', 'observed.shape == img.shape', 'np.average(np.abs(observed.astype(np.int32) - expected.astype(np.int32))) < 30.0', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.average(np.abs(observed.get_arr() - expected)) < 30.0', 'observed_i.shape == imgs.shape[1:3]', 'np.average(np.abs(observed_i.astype(np.int32) - expected.astype(np.int32))) < 30.0', 'isinstance(aug.jitter.scale, iap.Uniform)', 'isinstance(aug.jitter.scale.a, iap.Deterministic)', 'isinstance(aug.jitter.scale.b, iap.Deterministic)', '0.1 - 1e-8 < aug.jitter.scale.a.value < 0.1 + 1e-8', '0.2 - 1e-8 < aug.jitter.scale.b.value < 0.2 + 1e-8', 'isinstance(aug.jitter.scale, iap.Choice)', 'len(aug.jitter.scale.a) == 3', '0.1 - 1e-8 < aug.jitter.scale.a[0] < 0.1 + 1e-8', '0.2 - 1e-8 < aug.jitter.scale.a[1] < 0.2 + 1e-8', '0.3 - 1e-8 < aug.jitter.scale.a[2] < 0.3 + 1e-8', 'isinstance(aug.jitter.scale, iap.Choice)', 'len(aug.jitter.scale.a) == 3', '0.1 - 1e-8 < aug.jitter.scale.a[0] < 0.1 + 1e-8', '0.2 - 1e-8 < aug.jitter.scale.a[1] < 0.2 + 1e-8', '0.3 - 1e-8 < aug.jitter.scale.a[2] < 0.3 + 1e-8', 'in str(exc)', 'got_exception', 'kp_expected.x - 1.5 < kp_observed.x < kp_expected.x + 1.5', 'kp_expected.y - 1.5 < kp_observed.y < kp_expected.y + 1.5', 'kp_expected.x - 1.5 < kp_observed.x < kp_expected.x + 1.5', 'kp_expected.y - 1.5 < kp_observed.y < kp_expected.y + 1.5', 'isinstance(params[0], iap.Normal)', 'isinstance(params[0].scale, iap.Deterministic)', '0.1 - 1e-8 < params[0].scale.value < 0.1 + 1e-8', 'params[1] == False', 'np.sum(observed[mask]) < np.sum(img[mask])', 'np.sum(observed[~mask]) > np.sum(img[~mask])', 'np.sum(observed[mask_nonsquare]) < np.sum(img_nonsquare[mask_nonsquare])', 'np.sum(observed[~mask_nonsquare]) > np.sum(img_nonsquare[~mask_nonsquare])', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.sum(observed.get_arr()[mask]) < np.sum(heatmaps.get_arr()[mask])', 'np.sum(observed.get_arr()[~mask]) > np.sum(heatmaps.get_arr()[~mask])', 'np.sum(observed1[mask]) > np.sum(observed2[mask])', 'np.sum(observed1[~mask]) < np.sum(observed2[~mask])', 'observed1.shape == heatmaps.shape', 'observed2.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed1.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed1.max_value < heatmaps.max_value + 1e-6', 'heatmaps.min_value - 1e-6 < observed2.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed2.max_value < heatmaps.max_value + 1e-6', 'np.sum(observed1.get_arr()[mask]) > np.sum(observed2.get_arr()[mask])', 'np.sum(observed1.get_arr()[~mask]) < np.sum(observed2.get_arr()[~mask])', 'observed1_std > observed2_std', 'seen[0] > 10', 'seen[1] > 10', 'isinstance(aug.alpha, iap.Uniform)', 'isinstance(aug.alpha.a, iap.Deterministic)', 'isinstance(aug.alpha.b, iap.Deterministic)', '1.0 - 1e-8 < aug.alpha.a.value < 1.0 + 1e-8', '2.0 - 1e-8 < aug.alpha.b.value < 2.0 + 1e-8', 'in str(exc)', 'got_exception', 'seen[0] > 10', 'seen[1] > 10', 'isinstance(aug.sigma, iap.Uniform)', 'isinstance(aug.sigma.a, iap.Deterministic)', 'isinstance(aug.sigma.b, iap.Deterministic)', '1.0 - 1e-8 < aug.sigma.a.value < 1.0 + 1e-8', '2.0 - 1e-8 < aug.sigma.b.value < 2.0 + 1e-8', 'in str(exc)', 'got_exception', 'isinstance(aug.order, iap.Choice)', 'all([order in aug.order.a for order in [0, 1, 2, 3, 4, 5]])', 'isinstance(aug.order, iap.Deterministic)', 'aug.order.value == 1', 'isinstance(aug.order, iap.Choice)', 'all([order in aug.order.a for order in [0, 1, 2]])', 'isinstance(aug.order, iap.Choice)', 'all([order in aug.order.a for order in [0, 1, 2, 3]])', 'in str(exc)', 'got_exception', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 0', 'aug.cval.b.value == 255', 'isinstance(aug.cval, iap.Deterministic)', 'aug.cval.value == 128', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 128', 'aug.cval.b.value == 255', 'isinstance(aug.cval, iap.Choice)', 'all([cval in aug.cval.a for cval in [16, 32, 64]])', 'isinstance(aug.cval, iap.Choice)', 'all([cval in aug.cval.a for cval in [16, 32, 64]])', 'np.sum(observed == 255) > 0', 'np.sum(observed == 255) == 0', 'in str(exc)', 'got_exception', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.sum(observed.get_arr() > 0.01) == 0', 'isinstance(aug.mode, iap.Choice)', 'all([mode in aug.mode.a for mode in []])', 'isinstance(aug.mode, iap.Deterministic)', 'aug.mode.value == ', 'isinstance(aug.mode, iap.Choice)', 'all([mode in aug.mode.a for mode in []])', 'isinstance(aug.mode, iap.Choice)', 'all([mode in aug.mode.a for mode in []])', 'in str(exc)', 'got_exception', 'd < 1e-8', 'd < 1e-8', 'd < 0.5', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'isinstance(params[2], iap.Deterministic)', 'isinstance(params[3], iap.Deterministic)', 'isinstance(params[4], iap.Deterministic)', '0.25 - 1e-8 < params[0].value < 0.25 + 1e-8', '1.0 - 1e-8 < params[1].value < 1.0 + 1e-8', 'params[2].value == 2', 'params[3].value == 10', 'params[4].value == ', 'all([dtype_i.type == dtype_j for dtype_i, dtype_j in zip(dtypes_copy, [np.uint8, np.float32, np.int32])])', 'isinstance(dtypes_copy, np.dtype)', 'dtypes_copy.type == dt', 'isinstance(dtypes_copy, list)', 'all([dtype_i.type == dt for dtype_i in dtypes_copy])', 'image_result.dtype.type == np.int32', 'image_result.dtype.type == np.int32', 'images.dtype.type == np.uint8', 'images_result.dtype.type == np.int32', 'all([image.dtype.type == np.uint8 for image in images])', 'all([image_result.dtype.type == np.int32 for image_result in images_result])', 'images.dtype.type == np.uint8', 'images_restored.dtype.type == np.int32', 'all([image.dtype.type == np.uint8 for image in images])', 'all([image_restored.dtype.type == np.int32 for image_restored in images_restored])', 'image_clipped[0, 0] == 15', 'image_clipped[0, 1] == 20', 'image_clipped[0, 2] == 25', 'image_clipped[0, 0] == 15', 'image_clipped[0, 1] == 20', 'image_clipped[0, 2] == 25', 'np.all(images_clipped[:, 0, 0] == 15)', 'np.all(images_clipped[:, 0, 1] == 20)', 'np.all(images_clipped[:, 0, 2] == 25)', 'isinstance(images_clipped, list)', 'all([images_clipped[i][0, 0] == 15 for i in sm.xrange(len(images))])', 'all([images_clipped[i][0, 1] == 20 for i in sm.xrange(len(images))])', 'all([images_clipped[i][0, 2] == 25 for i in sm.xrange(len(images))])', 'np.all(images_clipped[:, 0, 0] == 15)', 'np.all(images_clipped[:, 0, 1] == 20)', 'np.all(images_clipped[:, 0, 2] == 25)', 'isinstance(images_clipped, list)', 'all([images_clipped[i][0, 0] == 15 for i in sm.xrange(len(images))])', 'all([images_clipped[i][0, 1] == 20 for i in sm.xrange(len(images))])', 'all([images_clipped[i][0, 2] == 25 for i in sm.xrange(len(images))])', 'kpsois_reduced == [kpsois[0], kpsois[1], kpsois[3]]', 'ids == [0, 1, 3]', 'kpsois_reduced == []', 'ids == []', 'kpsois_reduced == [kpsois[0]]', 'ids == [0]', 'kpsois_reduced == []', 'ids == []', 'kpsois_recovered == []', 'all([isinstance(kpsoi, ia.KeypointsOnImage) for kpsoi in kpsois]) # assert original list not changed', 'kpsois_recovered == [kpsois[0], , kpsois[2]]', 'kpsois_recovered == [kpsois[0], kpsois[1], kpsois[2]]', 'kpsois_recovered == []', 'aug.random_state == ia.CURRENT_RANDOM_STATE', 'aug.random_state != ia.CURRENT_RANDOM_STATE', 'aug.random_state == rs', 'aug.random_state.randint(0, 10**6) == np.random.RandomState(123).randint(0, 10**6)', 'isinstance(batches_aug, list)', 'len(batches_aug) == 1', 'isinstance(batches_aug[0], list)', 'isinstance(batches_aug, list)', 'len(batches_aug) == 1', 'array_equal_lists(batches_aug, image_batches)', 'isinstance(batches_aug, list)', 'len(batches_aug) == 1', 'array_equal_lists(batches_aug[0], image_batches[0])', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)', 'got_exception', 'all([image.ndim == 3 and 48 <= image.shape[0] <= 62 and 48 <= image.shape[1] <= 62 and image.shape[2] == 3 for image in observed])', 'seen[0] <= 3', 'seen[1] >= 17', 'all([image.ndim == 3 and 48 <= image.shape[0] <= 62 and 48 <= image.shape[1] <= 62  and image.shape[2] == 1 for image in observed])', 'seen[0] <= 3', 'seen[1] >= 17', 'all([image.ndim == 2 and 48 <= image.shape[0] <= 62 and 48 <= image.shape[1] <= 62 for image in observed])', 'seen[0] <= 3', 'seen[1] >= 17', 'image.ndim == 2', 'image.ndim == 3', 'image.shape[2] == c', '48 <= image.shape[0] <= 62', '48 <= image.shape[1] <= 62', 'seen[0] == 0', 'seen[1] == 20', 'got_exception', 'got_exception', 'got_exception', 'bb_aug.x1 == 1+1', 'bb_aug.y1 == 4', 'bb_aug.x2 == 2+1', 'bb_aug.y2 == 5', 'len(bbsois_aug) == 1', 'bbsois_aug[0].bounding_boxes == []', 'bbsois_aug == []', 'np.array_equal(grid, grid_expected)', 'np.array_equal(grid, grid_expected)', 'got_exception', 'np.array_equal(grid, grid_expected)', 'np.array_equal(grid, grid_expected)', 'np.array_equal(grid, grid_expected)', 'got_exception', 'aug.random_state == ia.CURRENT_RANDOM_STATE', 'aug_localized.random_state != ia.CURRENT_RANDOM_STATE', '_same_rs(aug0.random_state, aug0_copy.random_state)', '_same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', 'not _same_rs(aug0.random_state, aug0_copy.random_state)', 'not _same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', '_same_rs(aug0.random_state, aug0_copy.random_state)', '_same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', 'not _same_rs(aug0.random_state, aug0_copy.random_state)', 'not _same_rs(aug0[0].random_state, aug0_copy[0].random_state)', 'not _same_rs(aug0[1].random_state, aug0_copy[1].random_state)', '_same_rs(aug0.random_state, aug0_copy.random_state)', '_same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', 'not _same_rs(aug0.random_state, aug0_copy.random_state)', 'not _same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', 'aug0_copy.random_state.randint(0, 10**6) == np.random.RandomState(np.random.RandomState(123).randint(0, 10**6)).randint(0, 10**6)', '_same_rs(aug0.random_state, aug0_copy.random_state)', '_same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', 'not _same_rs(aug0.random_state, aug0_copy.random_state)', 'not _same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', 'aug0_copy.random_state.randint(0, 10**6) == np.random.RandomState(np.random.RandomState(123).randint(0, 10**6)).randint(0, 10**6)', 'got_exception', 'isinstance(children, list)', 'children[0] == aug1', 'children[1] == aug2', 'children[2] == aug21', 'isinstance(children, list)', 'children[0] == aug1', 'children[1] == aug2', 'isinstance(children[2], list)', 'children[2][0] == aug21', 'aug.__repr__() == aug.__str__() == ', 'aug.__repr__() == aug.__str__() == ', 'len(kpsoi_aug) == 2', 'len(kpsoi_aug[0].keypoints) == 0', 'len(kpsoi_aug[1].keypoints) == 1', 'kpsoi_aug[1].keypoints[0].x == 11', 'len(kpsoi_aug) == 2', 'len(kpsoi_aug[0].keypoints) == 0', 'len(kpsoi_aug[1].keypoints) == 0', 'np.allclose(segmap_aug.arr, segmap.arr)', 'np.allclose(segmap_aug.arr, segmap.arr)', 'np.allclose(segmap_aug.arr, expected)', 'np.allclose(segmap_aug.arr, expected)', 'np.allclose(segmap_aug.arr, segmap.arr)', 'np.allclose(segmap_aug.arr, segmap.arr)', 'np.allclose(segmap_aug.arr, expected)', 'np.allclose(segmap_aug.arr, expected)', 'np.allclose(segmap_aug.arr, segmap.arr)', 'np.allclose(segmap_aug.arr, segmap.arr)', 'np.allclose(segmap_aug.arr, expected)', 'np.allclose(segmap_aug.arr, expected)', 'len(augs) == 1', 'augs[0] == seq1', 'len(augs) == 1', 'augs[0] == seq2', 'len(augs) == 2', 'augs[0] == seq1', 'augs[1] == seq2', 'len(augs) == 2', 'augs[0] == seq1', 'augs[1] == seq2', 'len(augs) == 2', 'augs[0] == seq1', 'augs[1] == seq2', 'len(augs) == 1', 'augs[0] == seq2', 'len(augs) == 2', 'augs[0] == seq1', 'augs[1] == [seq2]', 'len(seqs) == 1', 'seqs[0].name == ', 'len(seqs) == 2', 'seqs[0].name == ', 'seqs[1].name == ', 'augs is not None', 'isinstance(augs, iaa.Noop)', 'in str(exc)', 'got_exception', 'augs is None', 'np.array_equal(images_aug[0], expected)', 'np.array_equal(images_aug[0], expected)', 'np.array_equal(images_aug[0], image)', 'np.array_equal(images_aug[0], image_lr)', 'keypoints_equal(keypoints_aug, keypoints)', 'np.array_equal(images_aug_source, images_aug_target)', 'target_cprs[0].deterministic == True', 'np.array_equal(images_aug_source, images_aug_target)', 'np.array_equal(images_aug_source, images_aug_target)', 'np.array_equal(images_aug_source1, images_aug_source2)', 'np.array_equal(images_aug_target1, images_aug_target2)', 'np.array_equal(images_aug_source1, images_aug_target1)', 'np.array_equal(images_aug_source2, images_aug_target2)', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)', 'np.array_equal(observed, images_lr_ud)', 'np.array_equal(observed, images_lr_ud)', 'array_equal_lists(observed, images_lr_ud_list)', 'array_equal_lists(observed, images_lr_ud_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1.0 - 1e-6 < observed.max_value < 1.0 + 1e-6', 'np.array_equal(observed.get_arr(), heatmaps_arr_expected)', 'np.array_equal(observed_aug, images) \\', 'np.array_equal(observed_aug_det, images) \\', '(0.25 - 0.10) <= (1 - (nb_changed_aug / nb_iterations)) <= (0.25 + 0.10) # should be the same in roughly 25% of all cases', 'nb_changed_aug_det == 0', 'nb_changed_aug == 0', 'nb_changed_aug_det == 0', 'nb_images_first_second_unrandom == nb_iterations', 'nb_images_second_first_unrandom == 0', 'nb_heatmaps_first_second_unrandom == nb_iterations', 'nb_heatmaps_second_first_unrandom == 0', 'nb_keypoints_first_second_unrandom == nb_iterations', 'nb_keypoints_second_first_unrandom == 0', '(0.50 - 0.1) <= nb_images_first_second_random / nb_iterations <= (0.50 + 0.1)', '(0.50 - 0.1) <= nb_images_second_first_random / nb_iterations <= (0.50 + 0.1)', '(0.50 - 0.1) <= nb_keypoints_first_second_random / nb_iterations <= (0.50 + 0.1)', '(0.50 - 0.1) <= nb_keypoints_second_first_random / nb_iterations <= (0.50 + 0.1)', 'False', 'all(seen)', 'np.array_equal(observed, image)', 'np.array_equal(observed, image)', 'np.array_equal(observed, np.fliplr(image))', 'np.array_equal(observed, np.fliplr(image))', 'np.array_equal(observed, np.fliplr(np.flipud(image)))', 'np.array_equal(observed, np.fliplr(image))', 'np.array_equal(observed, np.fliplr(np.flipud(image)))', 'aug.get_parameters() == [False]', 'aug.get_parameters() == [True]', 'aug.get_children_lists() == [aug]', 'aug.__str__() == aug.__repr__() == expected', 'np.array_equal(observed, zeros)', 'np.array_equal(observed, zeros)', 'np.array_equal(observed, zeros)', 'np.sum(observed) in [9*1, 9*2, 9*3]', 'np.sum(observed) in [9*1+9*2, 9*1+9*3, 9*2+9*3]', 'np.sum(observed) in [9*1+9*2+9*3]', 'np.sum(observed) in [9*1+9*2+9*3]', 'all([obs.shape == (3, 3, 3) for obs in [observed0, observed1, observed2, observed3]])', 'all([0 - 1e-6 < obs.min_value < 0 + 1e-6 for obs in [observed0, observed1, observed2, observed3]])', 'all([1 - 1e-6 < obs.max_value < 1 + 1e-6 for obs in [observed0, observed1, observed2, observed3]])', 'np.array_equal(obs.get_arr(), exp)', '0.25-0.1 <= p_observed[0] <= 0.25+0.1', '0.5-0.1 <= p_observed[1] <= 0.5+0.1', '0.5-0.1 <= p_observed[2] <= 0.5+0.1', '0.5-0.1 <= p_observed[3] <= 0.5+0.1', 'np.sum(observed) == 9*100', '0.5-0.1 <= p_observed[0] <= 0.5+0.1', '0.5-0.1 <= p_observed[1] <= 0.5+0.1', 'in str(exc)', 'got_exception', 'np.array_equal(observed, np.flipud(np.fliplr(image)))', 'found == 1', '200 - 50 < seen[0] < 200 + 50', '200 - 50 < seen[1] + seen[2] + seen[3] < 200 + 50', 'in str(exc)', 'got_exception', 'False', 'seen[0] > 10', 'seen[1] > 10', 'in str(exc)', 'got_exception', 'isinstance(observed, list)', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'ia.is_np_array(image)', 'observed.shape in [(4, 8, 3), (6, 8, 3)]', 'ia.is_np_array(observed)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'ia.is_np_array(observed)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'ia.is_np_array(observed)', 'observed.shape in [(8, 8, 3)]', 'np.array_equal(observed, zeros + 1)', 'np.array_equal(observed, zeros + 1)', 'np.array_equal(observed, zeros + 1)', 'expected - expected_tolerance < val < expected + expected_tolerance', 'np.array_equal(observed, images_lr)', 'np.array_equal(observed, images_lr)', 'array_equal_lists(observed, images_lr_list)', 'array_equal_lists(observed, images_lr_list)', 'keypoints_equal(observed, keypoints_lr)', 'keypoints_equal(observed, keypoints_lr)', 'observed.shape == heatmaps.shape', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.array_equal(observed.get_arr(), heatmaps_arr_lr)', 'np.array_equal(observed, images_ud)', 'np.array_equal(observed, images_ud)', 'array_equal_lists(observed, images_ud_list)', 'array_equal_lists(observed, images_ud_list)', 'keypoints_equal(observed, keypoints_ud)', 'keypoints_equal(observed, keypoints_ud)', 'observed.shape == heatmaps.shape', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.array_equal(observed.get_arr(), heatmaps_arr_ud)', '(0.50 - 0.10) <= nb_images_if_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= nb_images_else_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= nb_keypoints_if_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= nb_keypoints_else_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= (1 - (nb_changed_aug / nb_iterations)) <= (0.50 + 0.10) # should be the same in roughly 50% of all cases', 'nb_changed_aug_det == 0', '(0.50 - 0.10) <= nb_images_if_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= nb_images_else_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= nb_keypoints_if_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= nb_keypoints_else_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= (1 - (nb_changed_aug / nb_iterations)) <= (0.50 + 0.10) # should be the same in roughly 50% of all cases', 'nb_changed_aug_det == 0', 'len(uq) == 1', 'False', 'seen[0] > 20', 'seen[1] > 20', 'in str(exc)', 'got_exception', 'np.array_equal(observed, image)', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'np.array_equal(observed1, image + 10)', 'np.array_equal(observed2, image)', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', '0.75 - 1e-8 < params[0].p.value < 0.75 + 1e-8', 'aug.__repr__() == aug.__str__() == expected', 'aug.__repr__() == aug.__str__() == expected', 'isinstance(observed, list) or (ia.is_np_array(observed) and len(set([img.shape for img in observed])) == 1)', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'isinstance(observed, list) or (ia.is_np_array(observed) and len(set([img.shape for img in observed])) == 1)', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'ia.is_np_array(image)', 'observed.shape in [(4, 8, 3), (6, 8, 3)]', 'isinstance(observed, list) or (ia.is_np_array(observed) and len(set([img.shape for img in observed])) == 1)', 'all([16 <= img.shape[0] <= 30 and img.shape[1:] == (32, 3) for img in observed])', 'isinstance(observed, list)', 'all([16 <= img.shape[0] <= 30 and img.shape[1:] == (32, 3) for img in observed])', 'isinstance(observed, list) or (ia.is_np_array(observed) and len(set([img.shape for img in observed])) == 1)', 'all([16 <= img.shape[0] <= 30 and img.shape[1:] == (32, 3) for img in observed])', 'isinstance(observed, list)', 'all([16 <= img.shape[0] <= 30 and img.shape[1:] == (32, 3) for img in observed])', 'ia.is_np_array(image)', '16 <= observed.shape[0] <= 30 and observed.shape[1:] == (32, 3)', 'ia.is_np_array(observed)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'ia.is_np_array(observed)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'ia.is_np_array(observed)', 'observed.shape in [(8, 8, 3)]', 'ia.is_np_array(observed)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'ia.is_np_array(observed)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'ia.is_np_array(observed)', 'observed.shape in [(8, 8, 3)]', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'len(params) == 1', 'params[0] == [1]', 'aug.get_children_lists() == [children]', 'aug.__repr__() == aug.__str__() == expected', 'np.array_equal(observed, images_flipped)', 'np.array_equal(observed, images)', 'array_equal_lists(observed, images_flipped_list)', 'array_equal_lists(observed, images_list)', 'array_equal_lists(observed, images_flipped_list2d3d)', 'array_equal_lists(observed, images_list2d3d)', 'np.array_equal(batches_aug[0].images_aug[0], image_flipped)', 'batches_aug[0].keypoints_aug[0].keypoints[0].x == kp_flipped.x', 'batches_aug[0].keypoints_aug[0].keypoints[0].y == kp_flipped.y', 'np.array_equal(batches_aug[0].images[0], image)', 'batches_aug[0].keypoints[0].keypoints[0].x == keypoint.x', 'batches_aug[0].keypoints[0].keypoints[0].y == keypoint.y', 'np.array_equal(batches_aug[0].images_aug, np.uint8([image_flipped]))', 'batches_aug[0].keypoints_aug[0].keypoints[0].x == kp_flipped.x', 'batches_aug[0].keypoints_aug[0].keypoints[0].y == kp_flipped.y', 'np.array_equal(batches_aug[0].images, np.uint8([image]))', 'batches_aug[0].keypoints[0].keypoints[0].x == keypoint.x', 'batches_aug[0].keypoints[0].keypoints[0].y == keypoint.y', 'np.array_equal(image_aug, image) or np.array_equal(image_aug, image_flipped)', '(keypoint_aug.x == keypoint.x and keypoint_aug.y == keypoint.y) \\', '0.4*nb_iterations <= nb_flipped_images <= 0.6*nb_iterations', 'nb_flipped_images == nb_flipped_keypoints', 'np.array_equal(image_aug, image) or np.array_equal(image_aug, image_flipped)', '(keypoint_aug.x == keypoint.x and keypoint_aug.y == keypoint.y) \\', '0.4*nb_iterations <= nb_flipped_images <= 0.6*nb_iterations', 'nb_flipped_images == nb_flipped_keypoints', 'np.array_equal(image_aug, image) or np.array_equal(image_aug, image_flipped)', '0.4*nb_iterations <= nb_flipped_images <= 0.6*nb_iterations', 'np.array_equal(image_aug, image) or np.array_equal(image_aug, image_flipped)', '0.4*nb_iterations <= nb_flipped_images <= 0.6*nb_iterations', '(keypoint_aug.x == keypoint.x and keypoint_aug.y == keypoint.y) \\', '0.4*nb_iterations <= nb_flipped_keypoints <= 0.6*nb_iterations', 'nb_changed > 0', 'nb_changed == 0', 'array_equal_lists(images_aug1, images_aug2), \\', 'keypoints_equal(kps_aug1, kps_aug2), \\', 'kp_fully_empty_aug == []', 'len(kp_first_empty_aug.keypoints) == 0', 'len(kp_image_aug_rev.keypoints) == len(kp_aug.keypoints),\\', 'np.average(dss) < 5.0, \\', 'images_aug.shape == images_c.shape', 'image_aug.shape == images_c[0].shape', 'images_aug.shape == (4, 4, 4)', 'image_aug.shape == (4, 4)', 'images_aug.shape == (4, 4, 4, images_c.shape[3])', 'image_aug.shape == (4, 4, images_c.shape[3])', 'images_aug.dtype == images_i.dtype', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Uniform)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Uniform)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Uniform)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Uniform)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Uniform)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception == True', 'in str(e)', 'got_exception == False', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.DiscreteUniform)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.DiscreteUniform)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.DiscreteUniform)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.DiscreteUniform)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.DiscreteUniform)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.DiscreteUniform)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception == True', 'in str(e)', 'got_exception == False', 'in str(e)', 'got_exception == True', 'isinstance(p, iap.Deterministic)', 'p.value == int(val)', 'isinstance(p, iap.Binomial)', 'isinstance(p.p, iap.Deterministic)', 'val-1e-8 < p.p.value < val+1e-8', 'p == det', 'in str(exc)', 'got_exception', 'got_exception', 'got_exception', 'iap.force_np_float_dtype(np.zeros((1,), dtype=dtype_in)).dtype == dtype_out,\\', 'a2.dtype.type == np.float16, a2.dtype.type', 'b2.dtype.type == np.float32, b2.dtype.type', 'a2.dtype.type == np.float16, a2.dtype.type', 'b2.dtype.type == np.float64, b2.dtype.type', 'a2.dtype.type == np.float64, a2.dtype.type', 'b2.dtype.type == np.float16, b2.dtype.type', 'a2.dtype.type == np.float64, a2.dtype.type', 'b2.dtype.type == np.float64, b2.dtype.type', 'np.average(diff) < 10', 'graph_img.ndim == 3', 'graph_img.shape[2] == 3', 'nb_white > 0.1 * nb_all', 'graph_img_title.ndim == 3', 'graph_img_title.shape[2] == 3', 'not np.array_equal(graph_img_title, graph_img)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == 0', 'np.all(samples == 0)', 'param.__str__() == param.__repr__() == ', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == 1', 'np.all(samples == 1)', 'param.__str__() == param.__repr__() == ', 'sample.shape == tuple()', 'samples.shape == (10000,)', 'sample in [0, 1]', 'len(unique) == 2', '5000 - 500 < count < 5000 + 500', '5000 - 500 < count < 5000 + 500', 'False', '(0.25 - 0.05 < p < 0.25 + 0.05) or (0.75 - 0.05 < p < 0.75 + 0.05)', 'nb_p_changed > 15', 'np.array_equal(samples1, samples2)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [0, 1, 2]', 'np.all(np.logical_or(np.logical_or(samples == 0, samples == 1), samples==2))', 'param.__str__() == param.__repr__() == ', 'expected - expected_tolerance < count < expected + expected_tolerance', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [-1, 1]', 'np.all(np.logical_or(samples == -1, samples == 1))', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '-1.2 - eps < sample < -1.2 + eps or 1.7 - eps < sample < 1.7 + eps', 'np.all(', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in []', 'np.all(', 'all([count in [0, 1] for count in seen])', 'len(unique) == 2', '2500 - 500 < count < 2500 + 500', '7500 - 500 < count < 7500 + 500', 'False', 'len(unique) == 3', '2500 - 500 < count < 2500 + 500', '5000 - 500 < count < 5000 + 500', 'False', 'np.array_equal(samples1, samples2)', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [0, 1, 2]', 'np.all(np.logical_or(np.logical_or(samples == 0, samples == 1), samples==2))', 'param.__str__() == param.__repr__() == ', 'expected - expected_tolerance < count < expected + expected_tolerance', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [-1, 0, 1]', 'np.all(np.logical_or(np.logical_or(samples == -1, samples == 0), samples==1))', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [-1, 0, 1]', 'np.all(np.logical_or(np.logical_or(samples == -1, samples == 0), samples==1))', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [-1, 0, 1]', 'np.all(np.logical_or(np.logical_or(samples == -1, samples == 0), samples==1))', 'sample == 1', 'np.all(samples == 1)', 'np.array_equal(samples1, samples2)', 'sample.shape == tuple()', 'samples.shape == (100, 1000)', '0 < sample', 'param.__str__() == param.__repr__() == ', 'count_direct - tolerance < count < count_direct + tolerance', 'np.array_equal(samples1, samples2)', 'sample.shape == tuple()', 'samples.shape == (100, 1000)', 'param.__str__() == param.__repr__() == ', 'density_direct - tolerance < density < density_direct + tolerance', 'False', '500 - 100 < seen[0] < 500 + 100', '500 - 100 < seen[1] < 500 + 100', 'np.std(samples1) < np.std(samples2)', '100 - 10 < np.std(samples2) < 100 + 10', 'np.allclose(samples1, samples2)', 'sample.shape == tuple()', 'samples.shape == (100, 1000)', 'param.__str__() == param.__repr__() == ', 'density_direct - tolerance < density < density_direct + tolerance', 'False', '500 - 100 < seen[0] < 500 + 100', '500 - 100 < seen[1] < 500 + 100', 'np.var(samples1) < np.var(samples2)', 'np.all(np.logical_and(', 'np.allclose(samples1, samples2)', 'sample.shape == tuple()', 'samples.shape == (100, 1000)', '0 <= sample', 'np.all(0 <= samples)', 'param.__str__() == param.__repr__() == ', 'density_direct - tolerance < density < density_direct + tolerance', 'False', '500 - 100 < seen[0] < 500 + 100', '500 - 100 < seen[1] < 500 + 100', 'np.var(samples1) < np.var(samples2)', '2*1 - 1.0 < np.var(samples1) < 2*1 + 1.0', '2*10 - 5.0 < np.var(samples2) < 2*10 + 5.0', 'np.allclose(samples1, samples2)', 'sample.shape == tuple()', 'samples.shape == (100, 1000)', '0 <= sample', 'np.all(0 <= samples)', 'param.__str__() == param.__repr__() == ', 'density_direct - tolerance < density < density_direct + tolerance', 'False', '50 - 25 < seen[0] < 50 + 25', '50 - 25 < seen[1] < 50 + 25', 'np.var(samples1) < np.var(samples2)', 'expected_first - 0.2 * expected_first < np.var(samples1) < expected_first + 0.2 * expected_first', 'expected_second - 0.2 * expected_second < np.var(samples2) < expected_second + 0.2 * expected_second', 'np.allclose(samples1, samples2)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '0 - eps < sample < 1.0 + eps', 'np.all(np.logical_and(0 - eps < samples, samples < 1.0 + eps))', 'param.__str__() == param.__repr__() == ', 'density_expected - density_tolerance < density < density_expected + density_tolerance', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '-1.0 - eps < sample < 1.0 + eps', 'np.all(np.logical_and(-1.0 - eps < samples, samples < 1.0 + eps))', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '-1.0 - eps < sample < 1.0 + eps', 'np.all(np.logical_and(-1.0 - eps < samples, samples < 1.0 + eps))', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '-1.0 - eps < sample < 1.0 + eps', 'np.all(np.logical_and(-1.0 - eps < samples, samples < 1.0 + eps))', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '1.0 - eps < sample < 1.0 + eps', 'np.all(np.logical_and(1.0 - eps < samples, samples < 1.0 + eps))', 'np.allclose(samples1, samples2)', 'sample.shape == tuple()', 'samples.shape == (100, 1000)', '0 - eps < sample < 1.0 + eps', 'np.all(np.logical_and(0 - eps <= samples, samples <= 1.0 + eps))', 'param.__str__() == param.__repr__() == ', 'density_direct - tolerance < density < density_direct + tolerance', 'False', '50 - 25 < seen[0] < 50 + 25', '50 - 25 < seen[1] < 50 + 25', 'np.var(samples1) < np.var(samples2)', 'expected_first - 0.1 * expected_first < np.var(samples1) < expected_first + 0.1 * expected_first', 'expected_second - 0.1 * expected_second < np.var(samples2) < expected_second + 0.1 * expected_second', 'np.allclose(samples1, samples2)', 'sample1.shape == tuple()', 'sample1 == sample2', 'samples1.shape == (10,)', 'samples2.shape == (10,)', 'samples3.shape == (5, 3)', 'samples4.shape == (5, 3)', 'samples5.shape == (4, 5, 3)', 'samples6.shape == (4, 5, 3)', 'len(samples1_unique) == 1 and samples1_unique[0] == value', 'len(samples2_unique) == 1 and samples2_unique[0] == value', 'len(samples3_unique) == 1 and samples3_unique[0] == value', 'len(samples4_unique) == 1 and samples4_unique[0] == value', 'len(samples5_unique) == 1 and samples5_unique[0] == value', 'len(samples6_unique) == 1 and samples6_unique[0] == value', 'np.array_equal(', 'sample1.shape == tuple()', 'sample1 - eps < sample2 < sample1 + eps', 'samples1.shape == (10,)', 'samples2.shape == (10,)', 'samples3.shape == (5, 3)', 'samples4.shape == (5, 3)', 'samples5.shape == (4, 5, 3)', 'samples6.shape == (4, 5, 3)', 'samples1_sorted[0] - eps < samples1_sorted[-1] < samples1_sorted[0] + eps', 'samples2_sorted[0] - eps < samples2_sorted[-1] < samples2_sorted[0] + eps', 'samples3_sorted[0] - eps < samples3_sorted[-1] < samples3_sorted[0] + eps', 'samples4_sorted[0] - eps < samples4_sorted[-1] < samples4_sorted[0] + eps', 'samples5_sorted[0] - eps < samples5_sorted[-1] < samples5_sorted[0] + eps', 'samples6_sorted[0] - eps < samples6_sorted[-1] < samples6_sorted[0] + eps', 'np.allclose(', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', 'in str(exc)', 'got_exception', 'samples.shape == (8, 8, 1)', 'len(uq) == 2 and (0 in uq or 1 in uq)', 'samples_nhwc.shape == (1, 8, 8, 1)', 'len(uq) == 2 and (0 in uq or 1 in uq)', 'in str(exc)', 'got_exception', 'samples.shape == (8, 8, 3)', 'len(uq) == 2 and (0 in uq or 1 in uq)', 'seen_components[0] < seen_components[1]', 'seen_pixels[0] / seen_components[0] > seen_pixels[1] / seen_components[1]', 'seen_components[0] < seen_components[1]', 'seen_pixels[0] / seen_components[0] > seen_pixels[1] / seen_components[1]', 'seen_components[0] < seen_components[1]', 'seen_pixels[0] / seen_components[0] > seen_pixels[1] / seen_components[1]', 'in str(exc)', 'got_exception', 'seen_components[0] < seen_components[1]', 'seen_pixels[0] / seen_components[0] > seen_pixels[1] / seen_components[1]', 'seen_components[0] < seen_components[1]', 'seen_pixels[0] / seen_components[0] > seen_pixels[1] / seen_components[1]', 'seen_components[0] < seen_components[1]', 'seen_pixels[0] / seen_components[0] > seen_pixels[1] / seen_components[1]', 'in str(exc)', 'got_exception', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', 'in str(exc)', 'got_exception', 'np.allclose(samples1, samples2)', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == 0', 'np.all(samples == 0)', 'param.__str__() == param.__repr__() == ', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == 1', 'np.all(samples == 1)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == -1', 'np.all(samples == -1)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '0.5 - eps < sample < 0.5 + eps', 'np.all(np.logical_and(0.5 - eps < samples, samples < 0.5 + eps))', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == 1', 'np.all(samples == 1)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == -1', 'np.all(samples == -1)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [0, 1]', 'np.all(np.logical_or(samples == 0, samples == 1))', 'np.array_equal(samples1, samples2)', 'sample == 0', 'param.__str__() == param.__repr__() == ', 'sample == 0', 'param.__str__() == param.__repr__() == ', 'sample == 0', 'param.__str__() == param.__repr__() == ', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == value_expected', 'np.all(samples == value_expected)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [0, 1]', 'np.all(np.logical_or(samples == 0, samples == 1))', 'np.all(np.abs(samples1 - samples2) < 0.2*(10000/3))', 'np.array_equal(samples1, samples2)', 'param.__str__() == param.__repr__() == ', 'p.draw_sample() == v1 * v2', 'samples.dtype == np.int64', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.int64) + v1 * v2)', 'p.draw_sample() == v1 * v2', 'samples.dtype == np.int64', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.int64) + v1 * v2)', 'v1 * v2 - eps < p.draw_sample() < v1 * v2 + eps', 'samples.dtype == np.float64', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 * v2)', 'v1 * v2 - eps < p.draw_sample() < v1 * v2 + eps', 'samples.dtype == np.float64', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 * v2)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 * 1.0 - eps)', 'np.all(samples < 1.0 * 2.0 + eps)', 'samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 * 1.0 - eps)', 'np.all(samples < 1.0 * 2.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 * 1.0 - eps)', 'np.all(samples < 2.0 * 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 * 1.0 - eps)', 'np.all(samples < 2.0 * 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'param.__str__() == param.__repr__() == ', 'p.draw_sample() == v1 / v2', 'samples.dtype == np.float64', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.float64) + v1 / v2)', 'p.draw_sample() == v1 / v2', 'samples.dtype == np.float64', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.float64) + v1 / v2)', 'v1 / v2 - eps < p.draw_sample() < v1 / v2 + eps', 'samples.dtype == np.float64', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 / v2)', 'v1 / v2 - eps < p.draw_sample() < v1 / v2 + eps', 'samples.dtype == np.float64', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 / v2)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 / 2.0 - eps)', 'np.all(samples < 1.0 / 1.0 + eps)', 'samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 / 2.0 - eps)', 'np.all(samples < 1.0 / 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 / 1.0 - eps)', 'np.all(samples < 2.0 / 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'sample == 1', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 / 1.0 - eps)', 'np.all(samples < 2.0 / 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'samples_unique[0] == 1 and samples_unique[1] == 2', 'param.__str__() == param.__repr__() == ', 'p.draw_sample() == v1 + v2', 'samples.dtype == np.int64', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.int64) + v1 + v2)', 'p.draw_sample() == v1 + v2', 'samples.dtype == np.int64', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.int64) + v1 + v2)', 'v1 + v2 - eps < p.draw_sample() < v1 + v2 + eps', 'samples.dtype == np.float64', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 + v2)', 'v1 + v2 - eps < p.draw_sample() < v1 + v2 + eps', 'samples.dtype == np.float64', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 + v2)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 + 1.0 - eps)', 'np.all(samples < 1.0 + 2.0 + eps)', 'samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 + 1.0 - eps)', 'np.all(samples < 1.0 + 2.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 + 1.0 - eps)', 'np.all(samples < 2.0 + 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 + 1.0 - eps)', 'np.all(samples < 2.0 + 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'param.__str__() == param.__repr__() == ', 'p.draw_sample() == v1 - v2', 'samples.dtype == np.int64', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.int64) + v1 - v2)', 'p.draw_sample() == v1 - v2', 'samples.dtype == np.int64', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.int64) + v1 - v2)', 'v1 - v2 - eps < p.draw_sample() < v1 - v2 + eps', 'samples.dtype == np.float64', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 - v2)', 'v1 - v2 - eps < p.draw_sample() < v1 - v2 + eps', 'samples.dtype == np.float64', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 - v2)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 - 2.0 - eps)', 'np.all(samples < 1.0 - 1.0 + eps)', 'samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 - 2.0 - eps)', 'np.all(samples < 1.0 - 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 - 1.0 - eps)', 'np.all(samples < 2.0 - 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 - 1.0 - eps)', 'np.all(samples < 2.0 - 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'param.__str__() == param.__repr__() == ', 'v1 ** v2 - eps < p.draw_sample() < v1 ** v2 + eps', 'samples.dtype == np.float64', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 ** v2)', 'v1 ** v2 - eps < p.draw_sample() < v1 ** v2 + eps', 'samples.dtype == np.float64', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 ** v2)', 'samples.shape == (10, 20)', 'np.all(samples > 1.5 ** 1.0 - eps)', 'np.all(samples < 1.5 ** 2.0 + eps)', 'samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps', 'samples.shape == (10, 20)', 'np.all(samples > 1.5 ** 1.0 - eps)', 'np.all(samples < 1.5 ** 2.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 ** 1.0 - eps)', 'np.all(samples < 2.0 ** 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 ** 1.0 - eps)', 'np.all(samples < 2.0 ** 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'param.__str__() == param.__repr__() == ', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'abs(value) - eps < sample < abs(value) + eps', 'np.all(abs(value) - eps < samples)', 'np.all(samples < abs(value) + eps)', 'sample == abs(value)', 'np.all(samples == abs(value))', 'sample.shape == tuple()', 'sample in [3, 1]', 'samples.shape == (10, 10)', 'len(samples_uq) == 2', 'samples_uq[0] == 1 and samples_uq[1] == 3', 'param.__str__() == param.__repr__() == ', 'samples.shape == (1000,)', 'n_positive + n_negative == 1000', '350 < n_positive < 750', 'sample.shape == tuple()', 'n_positive + n_negative == 1000', '350 < n_positive < 750', 'np.sum(seen) == 4000', 'all([700 < v < 1300 for v in seen])', 'samples1.shape == (100, 10)', 'samples2.shape == (100, 10)', 'np.array_equal(samples1, samples2)', 'np.sum(samples == -2) > 50', 'np.sum(samples == -1) > 50', 'np.sum(samples == 1) > 50', 'np.sum(samples == 2) > 50', 'param.__str__() == param.__repr__() == ', 'sample.shape == tuple()', 'sample == 1', 'sample.shape == tuple()', 'sample == -1', 'samples.shape == (100,)', 'np.all(samples == 1)', 'samples.shape == (100,)', 'np.all(samples == -1)', 'samples.shape == (100,)', 'np.all(samples == 1)', 'samples.shape == (100,)', 'np.all(samples == -1)', 'samples.shape == (1000,)', 'n_twos + n_ones == 1000', '200 < n_twos < 700', '200 < n_ones < 700', 'samples.shape == (1000,)', 'n_twos + n_ones == 1000', 'n_twos > 0', 'n_ones > 0', 'samples.shape == (100,)', 'n_twos + n_ones == 100', 'n_twos < 5', 'samples1.shape == (100, 10)', 'samples2.shape == (100, 10)', 'np.array_equal(samples1, samples2)', 'param.__str__() == param.__repr__() == ', 'samples.shape == (100,)', 'np.all(samples == 1)', 'samples.shape == (100,)', 'np.all(samples == -1)', 'sample.shape == tuple()', 'samples.shape == (2, 4)', 'sample == 1', 'np.all(samples == 1)', 'sample.shape == tuple()', 'samples.shape == (2, 4)', '25 - 10 < sample < 25 + 10', 'np.all(np.logical_and(25 - 10 < samples, samples < 25 + 10))', 'sample.shape == tuple()', 'samples.shape == (2, 4)', 'sample == 50', 'np.all(samples == 50)', 'sample.shape == tuple()', 'samples.shape == (2, 4)', 'sample == 0', 'np.all(samples == 0)', 'False', 'seen[2] < 5', '50 - 20 < seen[0] < 50 + 20', '50 - 20 < seen[1] < 50 + 20', 'hist[1] > hist[0]', 'hist[1] > hist[2]', 'False', '300 - 50 < seen[0] < 300 + 50', '100 - 50 < seen[1] < 100 + 50', 'isinstance(param.aggregation_method, iap.Choice)', 'len(param.aggregation_method.a) == 3', '[v in param.aggregation_method.a for v in []]', 'nb_0 + nb_50 == 2 * 1000', '0.25 - 0.05 < nb_0 / (2 * 1000) < 0.25 + 0.05', 'samples1.shape == (100, 10)', 'samples2.shape == (100, 10)', 'np.allclose(samples1, samples2)', 'isinstance(param.aggregation_method, iap.Deterministic)', 'param.aggregation_method.value == ', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'param.__str__() == param.__repr__() == ', 'sample.shape == tuple()', 'samples.shape == (5, 10)', 'expected - eps < sample < expected + eps', 'np.all(np.logical_and(expected - eps < samples, samples < expected + eps))', 'sample.shape == tuple()', 'samples.shape == (5, 10)', 'expected - eps < sample < expected + eps', 'np.all(np.logical_and(expected - eps < samples, samples < expected + eps))', 'False', '500 - 150 < seen[0] < 500 + 150', '500 - 150 < seen[1] < 500 + 150', 'False', '500 - 150 < seen[0] < 500 + 150', '500 - 150 < seen[1] < 500 + 150', 'sample.shape == tuple()', 'samples.shape == (2, 3)', 'expected - eps < sample < expected + eps', 'np.all(np.logical_and(expected - eps < samples, samples < expected + eps))', 'samples1.shape == (100, 10)', 'samples2.shape == (100, 10)', 'np.array_equal(samples1, samples2)', 'param.__str__() == param.__repr__() == ', 'isinstance(param3, iap.Multiply)', 'param3.other_param == param1', 'param3.val == param2', 'isinstance(param3, iap.Multiply)', 'param3.other_param == param1', 'isinstance(param3.val, iap.Deterministic)', 'param3.val.value == 2', 'isinstance(param3, iap.Multiply)', 'isinstance(param3.other_param, iap.Deterministic)', 'param3.other_param.value == 2', 'param3.val == param1', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'isinstance(param3, iap.Divide)', 'param3.other_param == param1', 'param3.val == param2', 'isinstance(param3, iap.Divide)', 'param3.other_param == param1', 'isinstance(param3.val, iap.Deterministic)', 'param3.val.value == 2', 'isinstance(param3, iap.Divide)', 'isinstance(param3.other_param, iap.Deterministic)', 'param3.other_param.value == 2', 'param3.val == param1', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'isinstance(param3, iap.Divide)', 'param3.other_param == param1', 'param3.val == param2', 'isinstance(param3, iap.Divide)', 'param3.other_param == param1', 'isinstance(param3.val, iap.Deterministic)', 'param3.val.value == 2', 'in str(exc)', 'got_exception', 'isinstance(param3, iap.Divide)', 'isinstance(param3.other_param, iap.Deterministic)', 'param3.other_param.value == 2', 'param3.val == param1', 'in str(exc)', 'got_exception', 'isinstance(param3, iap.Discretize)', 'isinstance(param3.other_param, iap.Divide)', 'param3.other_param.other_param == param1_int', 'param3.other_param.val == param2_int', 'isinstance(param3, iap.Discretize)', 'isinstance(param3.other_param, iap.Divide)', 'param3.other_param.other_param == param1_int', 'isinstance(param3.other_param.val, iap.Deterministic)', 'param3.other_param.val.value == 2', 'isinstance(param3, iap.Discretize)', 'isinstance(param3.other_param, iap.Divide)', 'isinstance(param3.other_param.other_param, iap.Deterministic)', 'param3.other_param.other_param.value == 2', 'param3.other_param.val == param1_int', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'isinstance(param3, iap.Add)', 'param3.other_param == param1', 'param3.val == param2', 'isinstance(param3, iap.Add)', 'param3.other_param == param1', 'isinstance(param3.val, iap.Deterministic)', 'param3.val.value == 2', 'isinstance(param3, iap.Add)', 'isinstance(param3.other_param, iap.Deterministic)', 'param3.other_param.value == 2', 'param3.val == param1', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'isinstance(param3, iap.Subtract)', 'param3.other_param == param1', 'param3.val == param2', 'isinstance(param3, iap.Subtract)', 'param3.other_param == param1', 'isinstance(param3.val, iap.Deterministic)', 'param3.val.value == 2', 'isinstance(param3, iap.Subtract)', 'isinstance(param3.other_param, iap.Deterministic)', 'param3.other_param.value == 2', 'param3.val == param1', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'isinstance(param3, iap.Power)', 'param3.other_param == param1', 'param3.val == param2', 'isinstance(param3, iap.Power)', 'param3.other_param == param1', 'isinstance(param3.val, iap.Deterministic)', 'param3.val.value == 2', 'isinstance(param3, iap.Power)', 'isinstance(param3.other_param, iap.Deterministic)', 'param3.other_param.value == 2', 'param3.val == param1', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'isinstance(param_copy, iap.Discretize)', 'isinstance(param_copy.other_param, iap.Uniform)', 'param_copy.other_param.a[0] == param.other_param.a[0]', 'isinstance(param_copy, iap.Discretize)', 'isinstance(param_copy.other_param, iap.Uniform)', 'param_copy.other_param.a[0] != param.other_param.a[0]', 'isinstance(list1, list)', 'isinstance(list2, list)']",[],[],[],[],[],[],[],[],[],[],[],[]
696,aleju,kontakt@ajung.name,2018-11-10 18:50:37+01:00,fd18905f6c6148e8626be572480231aeebe80317,https://github.com/aleju/imgaug/commit/fd18905f6c6148e8626be572480231aeebe80317,"Cleanup test code

This commit cleans up some test code, e.g. removing
dead code and fixing some pep8 errors.",12,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,81,0,0,0,0,0,0,0,0,0,0,0,0,79,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(observed >= 127)', 'all([abs(s1-s2) <= 1 for s1, s2 in zip(observed.shape, expected.shape)])', 'params[1] is False', 'aug0_copy.random_state.randint(0, 10**6) == expected', 'aug0_copy.random_state.randint(0, 10**6) == expected', 'aug.__repr__() == aug.__str__() == \\', 'aug.__repr__() == aug.__str__() == \\', '(0.25 - 0.10) <= (1 - (nb_changed_aug / nb_iterations)) <= (0.25 + 0.10)', '(0.5 - 0.1) * nb_iterations <= nb_changed_aug_random <= (0.5 + 0.1) * nb_iterations', 'nb_changed_aug_random_det == 0', '(0.50 - 0.10) <= (1 - (nb_changed_aug / nb_iterations)) <= (0.50 + 0.10)', 'isinstance(observed, list) \\', 'isinstance(observed, list) \\', 'isinstance(observed, list) \\', 'isinstance(observed, list) \\', 'observed2d.shape in [(base_img2d.shape[0]*2, base_img2d.shape[1]*2),', 'observed3d.shape in [(base_img3d.shape[0]*2, base_img3d.shape[1]*2, 3),', 'observed2d.shape in [(base_img2d.shape[0]*2, base_img2d.shape[1]*2),', 'observed3d.shape in [(base_img3d.shape[0]*2, base_img3d.shape[1]*2, 3),', 'ia.is_np_array(value) is True', 'ia.is_np_array(value) is False', 'ia.is_single_integer() is False', 'ia.is_single_integer(None) is False', 'ia.is_single_integer(1.2) is False', 'ia.is_single_integer(1.0) is False', 'ia.is_single_integer(np.ones((1,), dtype=np.float32)[0]) is False', 'ia.is_single_integer(1) is True', 'ia.is_single_integer(1234) is True', 'ia.is_single_integer(np.ones((1,), dtype=np.uint8)[0]) is True', 'ia.is_single_integer(np.ones((1,), dtype=np.int32)[0]) is True', 'ia.is_single_float() is False', 'ia.is_single_float(None) is False', 'ia.is_single_float(1.2) is True', 'ia.is_single_float(1.0) is True', 'ia.is_single_float(np.ones((1,), dtype=np.float32)[0]) is True', 'ia.is_single_float(1) is False', 'ia.is_single_float(1234) is False', 'ia.is_single_float(np.ones((1,), dtype=np.uint8)[0]) is False', 'ia.is_single_float(np.ones((1,), dtype=np.int32)[0]) is False', 'ia.is_single_number(value) is True', 'ia.is_single_number(value) is False', 'ia.is_iterable(value) is True, value', 'ia.is_iterable(value) is False', 'ia.is_string(value) is True', 'ia.is_string(value) is False', 'ia.is_single_bool(value) is True', 'ia.is_single_bool(value) is False', 'ia.is_integer_array(value) is True', 'ia.is_integer_array(value) is False', 'ia.is_float_array(value) is True', 'ia.is_float_array(value) is False', 'bb_inter is False', 'bb.is_fully_within_image((100, 100, 3)) is True', 'bb.is_fully_within_image((20, 100, 3)) is False', 'bb.is_fully_within_image((100, 30, 3)) is False', 'bb.is_fully_within_image((1, 1, 3)) is False', 'bb.is_partly_within_image((100, 100, 3)) is True', 'bb.is_partly_within_image((20, 100, 3)) is True', 'bb.is_partly_within_image((100, 30, 3)) is True', 'bb.is_partly_within_image((1, 1, 3)) is False', 'bb.is_out_of_image((100, 100, 3), partly=True, fully=True) is False', 'bb.is_out_of_image((100, 100, 3), partly=False, fully=True) is False', 'bb.is_out_of_image((100, 100, 3), partly=True, fully=False) is False', 'bb.is_out_of_image((20, 100, 3), partly=True, fully=True) is True', 'bb.is_out_of_image((20, 100, 3), partly=False, fully=True) is False', 'bb.is_out_of_image((20, 100, 3), partly=True, fully=False) is True', 'bb.is_out_of_image((100, 30, 3), partly=True, fully=True) is True', 'bb.is_out_of_image((100, 30, 3), partly=False, fully=True) is False', 'bb.is_out_of_image((100, 30, 3), partly=True, fully=False) is True', 'bb.is_out_of_image((1, 1, 3), partly=True, fully=True) is True', 'bb.is_out_of_image((1, 1, 3), partly=False, fully=True) is True', 'bb.is_out_of_image((1, 1, 3), partly=True, fully=False) is False', 'got_exception is False', 'got_exception is True', 's ==  \\', 's ==  \\', 's ==  \\', 'len(loaded) == 20*nb_workers, \\', 'len(loaded) == 20*nb_workers, \\', 'param.__str__() == param.__repr__() == \\', 'param.__str__() == param.__repr__() == \\']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(observed >= 127)  # Salt() occasionally replaces with 127,', 'all([abs(s1-s2)<=1 for s1, s2 in zip(observed.shape, expected.shape)])', 'params[1] == False', 'aug0_copy.random_state.randint(0, 10**6) == np.random.RandomState(np.random.RandomState(123).randint(0, 10**6)).randint(0, 10**6)', 'aug0_copy.random_state.randint(0, 10**6) == np.random.RandomState(np.random.RandomState(123).randint(0, 10**6)).randint(0, 10**6)', 'aug.__repr__() == aug.__str__() == ', 'aug.__repr__() == aug.__str__() == ', '(0.25 - 0.10) <= (1 - (nb_changed_aug / nb_iterations)) <= (0.25 + 0.10) # should be the same in roughly 25% of all cases', '(0.50 - 0.10) <= (1 - (nb_changed_aug / nb_iterations)) <= (0.50 + 0.10) # should be the same in roughly 50% of all cases', 'isinstance(observed, list) or (ia.is_np_array(observed) and len(set([img.shape for img in observed])) == 1)', 'isinstance(observed, list) or (ia.is_np_array(observed) and len(set([img.shape for img in observed])) == 1)', 'isinstance(observed, list) or (ia.is_np_array(observed) and len(set([img.shape for img in observed])) == 1)', 'isinstance(observed, list) or (ia.is_np_array(observed) and len(set([img.shape for img in observed])) == 1)', 'observed2d.shape in [(base_img2d.shape[0]*2, base_img2d.shape[1]*2), (base_img2d.shape[0]*4, base_img2d.shape[1]*4)]', 'observed3d.shape in [(base_img3d.shape[0]*2, base_img3d.shape[1]*2, 3), (base_img3d.shape[0]*4, base_img3d.shape[1]*4, 3)]', 'observed2d.shape in [(base_img2d.shape[0]*2, base_img2d.shape[1]*2), (base_img2d.shape[0]*4, base_img2d.shape[1]*4)]', 'observed3d.shape in [(base_img3d.shape[0]*2, base_img3d.shape[1]*2, 3), (base_img3d.shape[0]*4, base_img3d.shape[1]*4, 3)]', 'ia.is_np_array(value) == True', 'ia.is_np_array(value) == False', 'ia.is_single_integer() == False', 'ia.is_single_integer(None) == False', 'ia.is_single_integer(1.2) == False', 'ia.is_single_integer(1.0) == False', 'ia.is_single_integer(np.ones((1,), dtype=np.float32)[0]) == False', 'ia.is_single_integer(1) == True', 'ia.is_single_integer(1234) == True', 'ia.is_single_integer(np.ones((1,), dtype=np.uint8)[0]) == True', 'ia.is_single_integer(np.ones((1,), dtype=np.int32)[0]) == True', 'ia.is_single_float() == False', 'ia.is_single_float(None) == False', 'ia.is_single_float(1.2) == True', 'ia.is_single_float(1.0) == True', 'ia.is_single_float(np.ones((1,), dtype=np.float32)[0]) == True', 'ia.is_single_float(1) == False', 'ia.is_single_float(1234) == False', 'ia.is_single_float(np.ones((1,), dtype=np.uint8)[0]) == False', 'ia.is_single_float(np.ones((1,), dtype=np.int32)[0]) == False', 'ia.is_single_number(value) == True', 'ia.is_single_number(value) == False', 'ia.is_iterable(value) == True, value', 'ia.is_iterable(value) == False', 'ia.is_string(value) == True', 'ia.is_string(value) == False', 'ia.is_single_bool(value) == True', 'ia.is_single_bool(value) == False', 'ia.is_integer_array(value) == True', 'ia.is_integer_array(value) == False', 'ia.is_float_array(value) == True', 'ia.is_float_array(value) == False', 'bb_inter == False', 'bb.is_fully_within_image((100, 100, 3)) == True', 'bb.is_fully_within_image((20, 100, 3)) == False', 'bb.is_fully_within_image((100, 30, 3)) == False', 'bb.is_fully_within_image((1, 1, 3)) == False', 'bb.is_partly_within_image((100, 100, 3)) == True', 'bb.is_partly_within_image((20, 100, 3)) == True', 'bb.is_partly_within_image((100, 30, 3)) == True', 'bb.is_partly_within_image((1, 1, 3)) == False', 'bb.is_out_of_image((100, 100, 3), partly=True, fully=True) == False', 'bb.is_out_of_image((100, 100, 3), partly=False, fully=True) == False', 'bb.is_out_of_image((100, 100, 3), partly=True, fully=False) == False', 'bb.is_out_of_image((20, 100, 3), partly=True, fully=True) == True', 'bb.is_out_of_image((20, 100, 3), partly=False, fully=True) == False', 'bb.is_out_of_image((20, 100, 3), partly=True, fully=False) == True', 'bb.is_out_of_image((100, 30, 3), partly=True, fully=True) == True', 'bb.is_out_of_image((100, 30, 3), partly=False, fully=True) == False', 'bb.is_out_of_image((100, 30, 3), partly=True, fully=False) == True', 'bb.is_out_of_image((1, 1, 3), partly=True, fully=True) == True', 'bb.is_out_of_image((1, 1, 3), partly=False, fully=True) == True', 'bb.is_out_of_image((1, 1, 3), partly=True, fully=False) == False', 'got_exception == False', 'got_exception == True', 's == ', 's == ', 's == ', 'len(loaded) == 20*nb_workers,  % (20*nb_workers, len(loaded), nb_workers, counter)', 'len(loaded) == 20*nb_workers,  % (20*nb_workers, len(loaded), nb_workers, counter)', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ']",[],[],[],[],[],[],[],[],[],[],[],[]
697,aleju,kontakt@ajung.name,2018-11-10 18:55:22+01:00,addacd2ecd7b934d82fdf1dab66757e1f4151fc1,https://github.com/aleju/imgaug/commit/addacd2ecd7b934d82fdf1dab66757e1f4151fc1,"Rename directory tests/ to test/

Directory is renamed as test/ seems to be the
convention.",20,False,True,False,False,False,True,True,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
698,aleju,kontakt@ajung.name,2018-11-10 22:03:51+01:00,1fe88ff20258329264c4aa9e0048eeabd77f20f9,https://github.com/aleju/imgaug/commit/1fe88ff20258329264c4aa9e0048eeabd77f20f9,Clean up code in imgaug.py,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
699,aleju,kontakt@ajung.name,2018-11-11 11:05:49+01:00,c6704731d54b7e28bc47ec058f7d6bc6a9cfdddb,https://github.com/aleju/imgaug/commit/c6704731d54b7e28bc47ec058f7d6bc6a9cfdddb,Clean up code in parameters.py,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
700,aleju,kontakt@ajung.name,2018-11-11 14:28:35+01:00,23c6cc73706a2766de255d709dfcb3f94e1c94ef,https://github.com/aleju/imgaug/commit/23c6cc73706a2766de255d709dfcb3f94e1c94ef,Clean up code in arithmetic.py,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
701,aleju,kontakt@ajung.name,2018-11-11 14:36:28+01:00,046c91de7238a7cbdc0aed303d12f62facfb3d2b,https://github.com/aleju/imgaug/commit/046c91de7238a7cbdc0aed303d12f62facfb3d2b,Clean up code in blur.py,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
702,aleju,kontakt@ajung.name,2018-11-11 14:44:29+01:00,febe644a2be24e9c44dba62fc83ddfae61b77f74,https://github.com/aleju/imgaug/commit/febe644a2be24e9c44dba62fc83ddfae61b77f74,Clean up code in color.py,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
703,aleju,kontakt@ajung.name,2018-11-11 14:47:27+01:00,e3d0c75406328881b6587171904bf6a26c5222fc,https://github.com/aleju/imgaug/commit/e3d0c75406328881b6587171904bf6a26c5222fc,Clean up code in contrast.py,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
704,aleju,kontakt@ajung.name,2018-11-11 14:51:31+01:00,5e9375a096a3c13204856e9dc0773b0e14dcd239,https://github.com/aleju/imgaug/commit/5e9375a096a3c13204856e9dc0773b0e14dcd239,Clean up code in convolutional.py,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
705,aleju,kontakt@ajung.name,2018-11-11 15:01:39+01:00,23283bc30a40701171116d3aaf553f710f1a4912,https://github.com/aleju/imgaug/commit/23283bc30a40701171116d3aaf553f710f1a4912,Clean up code in flip.py,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
706,aleju,kontakt@ajung.name,2018-11-11 17:04:43+01:00,b2ff1367076d3c20986d60deb0a3110c0486c870,https://github.com/aleju/imgaug/commit/b2ff1367076d3c20986d60deb0a3110c0486c870,Clean up code in geometric.py,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
707,aleju,kontakt@ajung.name,2018-11-11 17:40:40+01:00,f86a28d1b360885901f3c12478eed50e225d2b15,https://github.com/aleju/imgaug/commit/f86a28d1b360885901f3c12478eed50e225d2b15,Clean up code in meta.py,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
708,aleju,kontakt@ajung.name,2018-11-11 17:49:36+01:00,73f5c787f754dd439beb695eebb38876b062768a,https://github.com/aleju/imgaug/commit/73f5c787f754dd439beb695eebb38876b062768a,Clean up code in overlay.py,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
709,aleju,kontakt@ajung.name,2018-11-11 17:53:27+01:00,14eb123e34e283a7cfd2dd212c0ea09777e9f6e3,https://github.com/aleju/imgaug/commit/14eb123e34e283a7cfd2dd212c0ea09777e9f6e3,Clean up code in segmentation.py,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
710,aleju,kontakt@ajung.name,2018-11-11 18:05:58+01:00,c038bb5e8c2bac31849723e5504df3220ec8a669,https://github.com/aleju/imgaug/commit/c038bb5e8c2bac31849723e5504df3220ec8a669,Clean up code in size.py,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
711,aleju,kontakt@ajung.name,2018-11-11 19:31:49+01:00,1103916710b4e9ce7dd9732af9c3a9c9f78dd3a1,https://github.com/aleju/imgaug/commit/1103916710b4e9ce7dd9732af9c3a9c9f78dd3a1,Add description how to generate the docs,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
712,aleju,kontakt@ajung.name,2018-11-12 19:22:54+01:00,fa218dcacb2ccef8eb59ac83bf5c96393044bb5e,https://github.com/aleju/imgaug/commit/fa218dcacb2ccef8eb59ac83bf5c96393044bb5e,"Improve all docstrings

This commit improves the docstrings in essentially
all files. This e.g. involves fixing datatypes,
adding :func: code, removing incorrect variable
names in ""Return"" blocks and adding ``s where sensible.

Also, contrast augmenters in contrast.py are added
to the API docs.

Also, a few remaining code style things were optimized.",15,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
713,aleju,kontakt@ajung.name,2018-11-13 10:15:25+01:00,a8764edb0f204772cec851474d0026a008c5d6ec,https://github.com/aleju/imgaug/commit/a8764edb0f204772cec851474d0026a008c5d6ec,"Allow all float/int/uint dtypes in SegMaps (#202)

This changes the init of SegmentationMapOnImage
to accept all arrays with any float, integer or
unsigned integer as inputs. Previously, e.g.
int16 was not allowed.
This also introduces constants in imgaug.py
for each group of dtypes.",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
714,aleju,kontakt@ajung.name,2018-11-13 10:18:08+01:00,a72e4ddb3d52e683f64ec5078a1f1ed5c4f9204f,https://github.com/aleju/imgaug/commit/a72e4ddb3d52e683f64ec5078a1f1ed5c4f9204f,"Add backend matplotlib as default to imgaug.imshow()

This commit adds a 'backend' argument to imgaug.imshow(),
e.g. imgaug.imshow(image, backend=""cv2""). Allowed backends
are matplotlib and cv2. It sets matplotlib as default now,
because OpenCV caused technical issues, while matplotlib
seems more robust. A constant imgaug.IMSHOW_BACKEND_DEFAULT
is introduced to change this at runtime.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
715,aleju,kontakt@ajung.name,2018-11-13 14:07:19+01:00,b9ddfd71c2c6d777f51f7e8c2364fc6831d719e5,https://github.com/aleju/imgaug/commit/b9ddfd71c2c6d777f51f7e8c2364fc6831d719e5,"Add Rot90 augmenter (#35)

This commit adds an augmenter that in geometry.py
that rotates images by multiples of 90 degrees.",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
716,aleju,kontakt@ajung.name,2018-11-13 14:46:51+01:00,79140b0a266f70564fea661fa5f588e00f9a795c,https://github.com/aleju/imgaug/commit/79140b0a266f70564fea661fa5f588e00f9a795c,Fix travis errors,4,False,True,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
717,aleju,kontakt@ajung.name,2018-11-13 15:35:54+01:00,f1e200ecc3f5c878f358c7b1fc43fdf0678a6f72,https://github.com/aleju/imgaug/commit/f1e200ecc3f5c878f358c7b1fc43fdf0678a6f72,"Fix travis again

This temporarily deactivates coverage as pytest
seems to be unable to handle the current test
architecture no matter what is added to its
paths.",18,False,True,False,False,False,True,False,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
718,aleju,kontakt@ajung.name,2018-11-13 16:43:37+01:00,4af8a60648f0e9cd0122b6c864d6b08bd603c08f,https://github.com/aleju/imgaug/commit/4af8a60648f0e9cd0122b6c864d6b08bd603c08f,Fix coverage in travis not working,21,False,True,False,False,False,True,True,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(list1, list)', 'isinstance(list2, list)']",[],[],[],[],[],[],[],[],[],[],[],[]
719,aleju,kontakt@ajung.name,2018-11-13 16:54:39+01:00,19aff1e458e6746176cbd44d041c76e7399da3f0,https://github.com/aleju/imgaug/commit/19aff1e458e6746176cbd44d041c76e7399da3f0,Add some new files to .gitignore,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
720,aleju,kontakt@ajung.name,2018-11-13 17:09:31+01:00,ac2c10db9c172fdfd1a49ee96cc39a14abfd546f,https://github.com/aleju/imgaug/commit/ac2c10db9c172fdfd1a49ee96cc39a14abfd546f,Fix pytest on python 2.7,1,False,False,False,False,False,True,True,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
721,aleju,kontakt@ajung.name,2018-11-14 10:03:18+01:00,c715736b977c6660691df55c8adc2a40d15c4065,https://github.com/aleju/imgaug/commit/c715736b977c6660691df55c8adc2a40d15c4065,"Rework BatchLoader and BackgroundAugmenter

The BatchLoader and BackgroundAugmenter were suffering
from deadlocks due to the way they tried to communicate
via events. This architecture was reworked now to be
free of events. Various sleep-calls were introduced to
reduce the probability of queues being lost in garbage
collection causing OSErrors.",3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
722,aleju,kontakt@ajung.name,2018-11-14 10:52:08+01:00,0bdc834e8c328c449c488abda7e48a634371687f,https://github.com/aleju/imgaug/commit/0bdc834e8c328c449c488abda7e48a634371687f,"Allow generator in BatchLoader

This commit enables direct passing of generators
to the BatchLoader, instead of just generator
functions.
It also adds an imgaug.is_generator(var) function
for that.
It also increases one timeout in the BatchLoader
to decrease the frequency of context switches.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
723,aleju,kontakt@ajung.name,2018-11-14 10:53:33+01:00,0b65dcab1733525223fc90fa6b4dd1c0d83e2482,https://github.com/aleju/imgaug/commit/0b65dcab1733525223fc90fa6b4dd1c0d83e2482,"Extend check for background aug

This commit extends the check script for
background augmentation with longer running
loops and loops where the loading or augmentation
are slow. It also tries smaller queue sizes.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
724,aleju,kontakt@ajung.name,2018-11-14 16:19:07+01:00,090966c0a828d64e53e1267048a60b7c7760facb,https://github.com/aleju/imgaug/commit/090966c0a828d64e53e1267048a60b7c7760facb,"Add position parameter to Crop/PadToFixedSize

This commit adds a position parameter to
CropToFixedSize's and PadToFixedSize's
__init__. The position determines on which
sides of the image to crop/pad how much.

Also, CropToFixedSize has been reworked
as the old method was not identical between
images/keypoints/heatmaps.",3,False,True,False,False,False,False,True,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(observed, tuple)', 'len(observed) == 2', 'isinstance(observed[i], iap.Uniform)', 'isinstance(observed[i].a, iap.Deterministic)', 'isinstance(observed[i].b, iap.Deterministic)', '0.0 - 1e-4 < observed[i].a.value < 0.0 + 1e-4', '1.0 - 1e-4 < observed[i].b.value < 1.0 + 1e-4', 'isinstance(observed, tuple)', 'len(observed) == 2', 'isinstance(observed[i], iap.Deterministic)', '0.5 - 1e-4 < observed[i].value < 0.5 + 1e-4', 'isinstance(observed, tuple)', 'len(observed) == 2', 'isinstance(observed[i], iap.Clip)', 'isinstance(observed[i].other_param, iap.Normal)', 'isinstance(observed[i].other_param.loc, iap.Deterministic)', 'isinstance(observed[i].other_param.scale, iap.Deterministic)', '0.5 - 1e-4 < observed[i].other_param.loc.value < 0.5 + 1e-4', '0.45/2 - 1e-4 < observed[i].other_param.scale.value < 0.45/2 + 1e-4', 'isinstance(observed[0], iap.Deterministic)', 'x_val - 1e-4 < observed[0].value < x_val + 1e-4', 'isinstance(observed[1], iap.Deterministic)', 'y_val - 1e-4 < observed[1].value < y_val + 1e-4', 'isinstance(observed, iap.Poisson)', 'isinstance(observed, tuple)', 'len(observed) == 2', 'isinstance(observed[0], iap.Deterministic)', '0.4 - 1e-4 < observed[0].value < 0.4 + 1e-4', 'isinstance(observed[1], iap.Deterministic)', '0.6 - 1e-4 < observed[1].value < 0.6 + 1e-4', 'in str(e)', 'got_exception', 'isinstance(observed[0], iap.Poisson)', 'isinstance(observed[0].lam, iap.Deterministic)', '2 - 1e-4 < observed[0].lam.value < 2 + 1e-4', 'isinstance(observed[1], iap.Poisson)', 'isinstance(observed[1].lam, iap.Deterministic)', '3 - 1e-4 < observed[1].lam.value < 3 + 1e-4', 'isinstance(observed, tuple)', 'len(observed) == 2', 'isinstance(observed[0], iap.Deterministic)', '0.4 - 1e-4 < observed[0].value < 0.4 + 1e-4', 'isinstance(observed[1], iap.Poisson)', 'isinstance(observed[1].lam, iap.Deterministic)', '3 - 1e-4 < observed[1].lam.value < 3 + 1e-4', 'in str(e)', 'got_exception', 'observed.dtype.type == np.uint8', 'observed.shape == (3, 3)', 'np.array_equal(observed, expected)', 'observed.dtype.type == np.uint8', 'observed.shape == (3, 3)', 'np.array_equal(observed, expected)', 'observed.shape == (3, 3, 3)', 'np.allclose(observed.arr_0to1, expected)', 'observed.shape == (3, 3, 3)', 'np.allclose(observed.arr_0to1, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
725,aleju,kontakt@ajung.name,2018-11-14 21:14:13+01:00,c817b2f090028ea9ff8f79c222edb9d6bd2438ce,https://github.com/aleju/imgaug/commit/c817b2f090028ea9ff8f79c222edb9d6bd2438ce,"Add KeepSizeByResize

+ Add augmenter KeepSizeByResize
  Keeps image sizes constant by resizing images
  after augmentation.",3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['in samples', 'len(set(samples)) == 1', 'in samples_heatmaps', 'len(set(samples_heatmaps)) == 1', 'iaa.KeepSizeByResize.NO_RESIZE in samples', 'len(set(samples)) == 1', 'iaa.KeepSizeByResize.NO_RESIZE in samples_heatmaps', 'len(set(samples_heatmaps)) == 1', 'cv2.INTER_LINEAR in samples', 'len(set(samples)) == 1', 'cv2.INTER_NEAREST in samples_heatmaps', 'len(set(samples_heatmaps)) == 1', 'in samples', 'in samples', 'len(set(samples)) == 2', 'in samples_heatmaps', 'in samples_heatmaps', 'len(set(samples_heatmaps)) == 3', '0.5 - 0.1 < np.sum(samples == samples_heatmaps) / samples_heatmaps.size < 0.5 + 0.1', 'in samples', 'in samples', 'len(set(samples)) == 2', 'in samples_heatmaps', 'in samples_heatmaps', 'len(set(samples_heatmaps)) == 2', 'observed.shape == (4, 4, 3)', 'observed.dtype.type == np.uint8', 'np.allclose(observed, expected)', 'observed.shape == (3, 4, 3)', 'observed.dtype.type == np.uint8', 'np.allclose(observed, expected)', 'kpoi_aug.shape == (4, 4, 3)', '0 - 1e-4 < kpoi_aug.keypoints[0].x < 0 + 1e-4', '((1-1)/3)*4 - 1e-4 < kpoi_aug.keypoints[0].y < ((1-1)/3)*4 + 1e-4', '1 - 1e-4 < kpoi_aug.keypoints[1].x < 1 + 1e-4', '((1-1)/3)*4 - 1e-4 < kpoi_aug.keypoints[1].y < ((1-1)/3)*4 + 1e-4', '2 - 1e-4 < kpoi_aug.keypoints[2].x < 2 + 1e-4', '((3-1)/3)*4 - 1e-4 < kpoi_aug.keypoints[2].y < ((3-1)/3)*4 + 1e-4', 'kpoi_aug.shape == (3, 4, 3)', '0 - 1e-4 < kpoi_aug.keypoints[0].x < 0 + 1e-4', '0 - 1e-4 < kpoi_aug.keypoints[0].y < 0 + 1e-4', '1 - 1e-4 < kpoi_aug.keypoints[1].x < 1 + 1e-4', '0 - 1e-4 < kpoi_aug.keypoints[1].y < 0 + 1e-4', '2 - 1e-4 < kpoi_aug.keypoints[2].x < 2 + 1e-4', '2 - 1e-4 < kpoi_aug.keypoints[2].y < 2 + 1e-4', 'heatmaps_oi_aug.arr_0to1.shape == (4, 4, 1)', 'np.allclose(heatmaps_oi_aug.arr_0to1, heatmaps_oi_nearest.arr_0to1)', 'heatmaps_oi_aug.arr_0to1.shape == (4, 4, 1)', 'np.allclose(heatmaps_oi_aug.arr_0to1, heatmaps_oi_nearest.arr_0to1) \\', 'heatmaps_oi_aug.arr_0to1.shape == (3, 4, 1)', 'np.allclose(heatmaps_oi_aug.arr_0to1, heatmaps_oi.arr_0to1[1:, :, :])', 'heatmaps_oi_aug.arr_0to1.shape == (4, 4, 1)', 'np.allclose(heatmaps_oi_aug.arr_0to1, heatmaps_oi_cubic.arr_0to1)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
726,aleju,kontakt@ajung.name,2018-11-15 11:41:41+01:00,9e2ff55252a62183e7219dd38ee3f77e62b1727a,https://github.com/aleju/imgaug/commit/9e2ff55252a62183e7219dd38ee3f77e62b1727a,Add MotionBlur augmenter,5,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(matrix_channel, expected)', 'np.allclose(matrix_channel, expected)', 'np.allclose(matrix_channel, expected)', 'np.allclose(matrices_image[0], matrices_image[1])', 'np.allclose(matrices_image[1], matrices_image[2])', 'nb_seen[0] > 0', 'nb_seen[1] > 0', 'np.allclose(matrix_channel, expected)', 'np.allclose(matrices_image[0], matrices_image[1])', 'np.allclose(matrices_image[1], matrices_image[2])', 'nb_seen[0] > 0', 'nb_seen[1] > 0', 'np.allclose(matrix_channel, expected, rtol=0, atol=1e-2)', 'np.allclose(matrix_channel, expected, rtol=0, atol=1e-2)', 'np.allclose(matrices_image[0], matrices_image[1])', 'np.allclose(matrices_image[1], matrices_image[2])', 'nb_seen[0] > 0', 'nb_seen[1] > 0', 'np.allclose(img_aug, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
727,aleju,kontakt@ajung.name,2018-11-15 15:03:51+01:00,e7830c19d44d2dd86bd753addfe3d1189bd0181a,https://github.com/aleju/imgaug/commit/e7830c19d44d2dd86bd753addfe3d1189bd0181a,"Improve imresize_many_images

Various improvements to imgaug.imresize_many_images().

+ Enable handling of list inputs, i.e. [(H, W, [C]) ndarray].
+ Enable handling of images without channels.
+ Enable single integer size, i.e. resize(images, 32).
+ Enable float/int mixtures, e.g. resize(images, (0.5, 32)).
+ Add more verification and better error messages.
+ Add several tests.",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.sum(diff) == 0', 'diff_fraction < 0.5', 'diff_fraction < 0.5', 'observed.shape == (1, 8, 8, 3)', 'observed.shape == (1, 8, 8, 3)', 'observed.shape == (1, 2, 2, 3)', 'observed.shape == (1, 8, 8, 3)', 'observed.shape == (1, 2, 2, 3)', 'observed.shape == (1, 8, 2, 3)', 'observed.shape == (1, 2, 8, 3)', 'observed.shape == (1, 11, 8, 3)', 'observed.shape == (1, 8, 11, 3)', 'images_rs.shape == (1, 2, 2)', 'isinstance(images_rs, list)', 'images_rs[0].shape == (2, 2)', 'ia.is_np_array(observed)', 'observed.dtype.type == np.uint8', 'len(observed) == 0', 'isinstance(observed, list)', 'len(observed) == 0', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'isinstance(observed, list)', 'all([image.shape == (4, 4, 3) for image in observed])', 'all([image.dtype.type == np.uint8 for image in observed])']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.sum(diff) == 0', 'diff_fraction < 0.5', 'diff_fraction < 0.5']",[],[],[],[],[],[],[],[],[],[],[],[]
728,aleju,kontakt@ajung.name,2018-11-15 17:31:04+01:00,9ed9f753ca52430ddaa3f5377e5e1aef36449b98,https://github.com/aleju/imgaug/commit/9ed9f753ca52430ddaa3f5377e5e1aef36449b98,Add AdditiveLaplaceNoise augmenter,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
729,aleju,kontakt@ajung.name,2018-11-15 17:31:51+01:00,a5ea0d838779f1fae2091014be94e0a9f2a2313a,https://github.com/aleju/imgaug/commit/a5ea0d838779f1fae2091014be94e0a9f2a2313a,Add AdditivePoissonNoise augmenter,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
730,aleju,kontakt@ajung.name,2018-11-15 17:32:22+01:00,a58b4fc9cbf67fff88ed1603619928076abd2cbb,https://github.com/aleju/imgaug/commit/a58b4fc9cbf67fff88ed1603619928076abd2cbb,Add ImpulseNoise augmenter,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
731,aleju,kontakt@ajung.name,2018-11-15 17:33:27+01:00,2de6174efd58d11fe87aa9fc1b6d097d64e7d676,https://github.com/aleju/imgaug/commit/2de6174efd58d11fe87aa9fc1b6d097d64e7d676,Fix examples in docstrings,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
732,aleju,kontakt@ajung.name,2018-11-17 19:46:16+01:00,d31948e5e685355107d404d0fe01708fcdf1fb98,https://github.com/aleju/imgaug/commit/d31948e5e685355107d404d0fe01708fcdf1fb98,Fix bad comparison in KeepSizeByResize,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
733,aleju,kontakt@ajung.name,2018-11-17 19:47:50+01:00,e6a205db277034d1bab2d1f2624f67558345d57e,https://github.com/aleju/imgaug/commit/e6a205db277034d1bab2d1f2624f67558345d57e,Improve test commands suggested by docs,1,False,True,False,False,False,False,True,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
734,aleju,kontakt@ajung.name,2018-11-17 19:48:24+01:00,b978708d3ca255dd741191db37e2fea837530c24,https://github.com/aleju/imgaug/commit/b978708d3ca255dd741191db37e2fea837530c24,Improve test command executed by travis,1,False,False,False,False,False,True,True,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
735,aleju,kontakt@ajung.name,2018-11-15 20:17:21+01:00,2068758391443827c889cbde8390b65f0e9feee1,https://github.com/aleju/imgaug/commit/2068758391443827c889cbde8390b65f0e9feee1,Add FastSnowyLandscape augmenter,4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
736,aleju,kontakt@ajung.name,2018-11-16 20:26:56+01:00,ee415fb94594700b30b8984ad5a5ad018c0b0088,https://github.com/aleju/imgaug/commit/ee415fb94594700b30b8984ad5a5ad018c0b0088,"Add CloudLayer, Clouds, Fog, SnowflakesLayer, Snowflakes

This commit adds various additional weather effect
augmenters covering clouds (including fog) and falling snow.",9,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
737,aleju,kontakt@ajung.name,2018-11-17 20:14:07+01:00,532323725f1ec2d1f6b28280bd5178421343e4a5,https://github.com/aleju/imgaug/commit/532323725f1ec2d1f6b28280bd5178421343e4a5,Exclude augmenter test files from codacy analysis,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
738,aleju,kontakt@ajung.name,2018-11-17 20:14:34+01:00,394b042dacfce3a643f4a092d6bf63a8852a9cc7,https://github.com/aleju/imgaug/commit/394b042dacfce3a643f4a092d6bf63a8852a9cc7,Replace assert by do_assert to make codacy happy,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
739,aleju,kontakt@ajung.name,2018-11-17 20:44:31+01:00,f58c06323eb04416c76de1f18952ca5875caf883,https://github.com/aleju/imgaug/commit/f58c06323eb04416c76de1f18952ca5875caf883,Fix some pylint issues,3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
740,aleju,kontakt@ajung.name,2018-11-25 14:47:24+01:00,9534cfe7ab83e7576567b2199b1cfce8a61db2f6,https://github.com/aleju/imgaug/commit/9534cfe7ab83e7576567b2199b1cfce8a61db2f6,Add numpydoc to requirements.txt in docs/,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
741,aleju,kontakt@ajung.name,2018-11-25 14:56:07+01:00,8cb776eccc2050960f41ac4eec4312530b5d17c2,https://github.com/aleju/imgaug/commit/8cb776eccc2050960f41ac4eec4312530b5d17c2,Add weather augmenters to API docs,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
742,aleju,kontakt@ajung.name,2018-11-25 14:59:25+01:00,92e24d9a904318794abd7d44d8a876222dc12a29,https://github.com/aleju/imgaug/commit/92e24d9a904318794abd7d44d8a876222dc12a29,Fix name of contrast API document,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
743,aleju,kontakt@ajung.name,2018-11-25 18:19:38+01:00,92aac0178a3c07402e12102d507891d583504e9b,https://github.com/aleju/imgaug/commit/92aac0178a3c07402e12102d507891d583504e9b,Add docs in doc/ as submodule,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
744,aleju,kontakt@ajung.name,2018-11-25 18:50:20+01:00,4a679029cdd76304cf1238b0695f1d3c08c70791,https://github.com/aleju/imgaug/commit/4a679029cdd76304cf1238b0695f1d3c08c70791,Add rtd config for submodules,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
745,aleju,kontakt@ajung.name,2018-11-25 19:02:00+01:00,ec598f76407e08446ce1ea842bbf650680d5d9b6,https://github.com/aleju/imgaug/commit/ec598f76407e08446ce1ea842bbf650680d5d9b6,"Remove docs folder from main repo

Docs were moved to a new repo and are linked
as a submodule in the main repo as folder doc/.
Hence, docs/ is no longer necessary and is deleted.",169,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
746,aleju,kontakt@ajung.name,2018-11-25 21:09:09+01:00,929e1d74014cd7023f429e78fd8842b1e157c585,https://github.com/aleju/imgaug/commit/929e1d74014cd7023f429e78fd8842b1e157c585,Update list of augmenters in readme,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
747,aleju,kontakt@ajung.name,2018-11-25 21:09:44+01:00,abcdb67071682a5dcd41c730776acaa7116a77ee,https://github.com/aleju/imgaug/commit/abcdb67071682a5dcd41c730776acaa7116a77ee,Update lists of augmenters in docstrings,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
748,aleju,kontakt@ajung.name,2018-11-25 23:01:40+01:00,336cade6a5820a18c351bd608185e0009fe41aa6,https://github.com/aleju/imgaug/commit/336cade6a5820a18c351bd608185e0009fe41aa6,"Fix heatmap augmentation in Affine

This commit fixes two bugs in the heatmap
augmentation of Affine:
1) Affine always updates imgaug.HeatmapsOnImage.shape
   as if fit_output was True, leading to bad shapes.
2) If fit_output was True and the input to
   Affine._augment_images_by_samples() was an array,
   the augmentation could crash due to trying to assign
   an image of shape (H',W',C) to an array of shape
   ([N], H, W, C), i.e. changes H/W was not considered.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
749,aleju,kontakt@ajung.name,2018-12-02 14:28:45+01:00,585d8575855c66ef57a838511c8186da5b0eac57,https://github.com/aleju/imgaug/commit/585d8575855c66ef57a838511c8186da5b0eac57,Update doc/ to newest commit,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
750,aleju,kontakt@ajung.name,2018-12-02 14:29:53+01:00,56bdccc804db86785af424e6f45db6d4e1328e71,https://github.com/aleju/imgaug/commit/56bdccc804db86785af424e6f45db6d4e1328e71,Fix Augmenter.draw_grid() wrong output dtype,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
751,aleju,kontakt@ajung.name,2018-12-02 14:32:03+01:00,c372aa4a7c88be4277fb619002a081118ae03cba,https://github.com/aleju/imgaug/commit/c372aa4a7c88be4277fb619002a081118ae03cba,Fix shape issues in example images,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
752,aleju,kontakt@ajung.name,2018-12-02 14:32:42+01:00,824264e2f30b5f1c3cec9a47ee0b595230175819,https://github.com/aleju/imgaug/commit/824264e2f30b5f1c3cec9a47ee0b595230175819,Decrease scale in Pad/CropToFixedSize mode=normal,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
753,aleju,kontakt@ajung.name,2018-12-02 14:33:54+01:00,96a5b92f7e44d890dd9d2f09451d47c34c6a3ba2,https://github.com/aleju/imgaug/commit/96a5b92f7e44d890dd9d2f09451d47c34c6a3ba2,"Rework example images in readme

* Move example images to doc repo
* Switch example images to animated gifs
* Add some new augmenters to example images",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
754,aleju,kontakt@ajung.name,2018-12-02 14:51:38+01:00,33e2da3b40c9b3d1f4ba6658e100871069448fc6,https://github.com/aleju/imgaug/commit/33e2da3b40c9b3d1f4ba6658e100871069448fc6,Change image urls in readme,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
755,aleju,kontakt@ajung.name,2018-12-02 15:04:03+01:00,bb4f5a8d3014b5ea596e01ca464006028f997201,https://github.com/aleju/imgaug/commit/bb4f5a8d3014b5ea596e01ca464006028f997201,Fix test for handle_position_param(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['0.35/2 - 1e-4 < observed[i].other_param.scale.value < 0.35/2 + 1e-4'],[],[],[],[],[],[],[],[],[],[],[],[],['0.45/2 - 1e-4 < observed[i].other_param.scale.value < 0.45/2 + 1e-4'],[],[],[],[],[],[],[],[],[],[],[],[]
756,aleju,kontakt@ajung.name,2018-12-02 15:04:20+01:00,48a4be1b7a93b5ee82a8c4a68fe84bbdc00e2917,https://github.com/aleju/imgaug/commit/48a4be1b7a93b5ee82a8c4a68fe84bbdc00e2917,Try various url styles for readme images,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
757,aleju,kontakt@ajung.name,2018-12-02 15:15:12+01:00,67430e66dc007cad6b8d18ab8842cffccd638ca7,https://github.com/aleju/imgaug/commit/67430e66dc007cad6b8d18ab8842cffccd638ca7,Fix image urls in readme,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
758,aleju,kontakt@ajung.name,2018-12-02 15:29:44+01:00,00094631c78a091955931f25962a43caacb80e7c,https://github.com/aleju/imgaug/commit/00094631c78a091955931f25962a43caacb80e7c,Fix readme design,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
759,aleju,kontakt@ajung.name,2018-12-02 20:47:21+01:00,1e6d6396010c0d4a69b3596134712e58696fcd4f,https://github.com/aleju/imgaug/commit/1e6d6396010c0d4a69b3596134712e58696fcd4f,Delete readme images and generator script,78,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
760,aleju,kontakt@ajung.name,2018-12-02 20:48:11+01:00,650fbfc71a45d4dca14c02e2c3dfeb815666ee97,https://github.com/aleju/imgaug/commit/650fbfc71a45d4dca14c02e2c3dfeb815666ee97,Fix errors in background aug and add __del__s,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
761,aleju,kontakt@ajung.name,2018-12-03 21:02:32+01:00,bd992e56f40e2bec1602b9d25c277a96e385614f,https://github.com/aleju/imgaug/commit/bd992e56f40e2bec1602b9d25c277a96e385614f,Extend check for background aug,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
762,aleju,kontakt@ajung.name,2018-12-03 21:03:04+01:00,918e24d7fd955cd2de7b1b100e05cd5d0fec2682,https://github.com/aleju/imgaug/commit/918e24d7fd955cd2de7b1b100e05cd5d0fec2682,Improve code style,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
763,aleju,kontakt@ajung.name,2018-12-03 21:06:30+01:00,8a55b953c4c2701a13bd2c6ea0051b34efbfdb0c,https://github.com/aleju/imgaug/commit/8a55b953c4c2701a13bd2c6ea0051b34efbfdb0c,Fix hue handling in AddToHueAndSaturation,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
764,aleju,kontakt@ajung.name,2018-12-03 21:42:26+01:00,b5f0bc9feb8a4c6242fe668618a6792533f66e7f,https://github.com/aleju/imgaug/commit/b5f0bc9feb8a4c6242fe668618a6792533f66e7f,Fix missing BrokenPipeError in py2,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
765,aleju,kontakt@ajung.name,2018-12-03 21:42:57+01:00,401b98d0f3834eebc71342746beb8ce28a73d75f,https://github.com/aleju/imgaug/commit/401b98d0f3834eebc71342746beb8ce28a73d75f,Add check for AddToHueAndSaturation,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
766,aleju,kontakt@ajung.name,2018-12-05 19:46:26+01:00,9446c877660f0018b39db29e7c48e82080a8d6cd,https://github.com/aleju/imgaug/commit/9446c877660f0018b39db29e7c48e82080a8d6cd,Add ChannelShuffle augmenter,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
767,aleju,kontakt@ajung.name,2018-12-06 18:07:06+01:00,eed7f7b7497dfac277f23a193a9fdbe4098cec3c,https://github.com/aleju/imgaug/commit/eed7f7b7497dfac277f23a193a9fdbe4098cec3c,Fix imresize_many_images() adding axis for inputs with different shapes,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
768,aleju,kontakt@ajung.name,2018-12-06 18:07:22+01:00,9298d989bd261b23e8c82db62632d3f3b98c1cac,https://github.com/aleju/imgaug/commit/9298d989bd261b23e8c82db62632d3f3b98c1cac,Add test case for imresize_many_images(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed[0].shape == (4, 4, 3)', 'observed[1].shape == (4, 4)', 'observed[0].dtype == np.uint8', 'observed[1].dtype == np.uint8']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
769,aleju,kontakt@ajung.name,2018-12-06 18:17:56+01:00,14ca29f42b5d918f887f1eb577f1407bb1095b2b,https://github.com/aleju/imgaug/commit/14ca29f42b5d918f887f1eb577f1407bb1095b2b,Add test for Keypoint.generate_similar_points_manhattan(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(kps_manhatten) == 1', 'kps_manhatten[0].y == 4', 'kps_manhatten[0].x == 5', 'len(kps_manhatten) == 5', 'any([np.allclose([y, x], [kp.y, kp.x]) for kp in kps_manhatten])', 'kps_manhatten.shape == (5, 2)', 'any([np.allclose([y, x], [kp_y, kp_x]) for kp_x, kp_y in kps_manhatten])']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
770,aleju,kontakt@ajung.name,2018-12-06 18:46:21+01:00,66a1e97d0e4ee55b55bd773e9648894cc817d4b3,https://github.com/aleju/imgaug/commit/66a1e97d0e4ee55b55bd773e9648894cc817d4b3,Add test for KeypointsOnImage.to_distance_map(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['distance_map.shape == (5, 5, 1)', 'np.allclose(distance_map, expected[..., np.newaxis])', 'np.allclose(distance_map_inv, expected_inv[..., np.newaxis])', 'np.allclose(np.min(distance_map, axis=2), expected)', 'np.allclose(np.max(distance_map_inv, axis=2), expected_inv)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
771,aleju,kontakt@ajung.name,2018-12-06 19:29:02+01:00,148be54678f44bd6efdadf5cff5a78f98ed3c88e,https://github.com/aleju/imgaug/commit/148be54678f44bd6efdadf5cff5a78f98ed3c88e,Add test for KeypointsOnImage.from_distance_maps(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(kpi.keypoints) == 2', 'kpi.keypoints[0].x == 2', 'kpi.keypoints[0].y == 2', 'kpi.keypoints[1].x == 4', 'kpi.keypoints[1].y == 2', 'kpi.shape == (4, 5, 4)', 'len(kpi.keypoints) == 2', 'kpi.keypoints[0].x == 2', 'kpi.keypoints[0].y == 2', 'kpi.keypoints[1].x == 4', 'kpi.keypoints[1].y == 2', 'kpi.shape == (4, 5)', 'len(kpi.keypoints) == 2', 'kpi.keypoints[0].x == 2', 'kpi.keypoints[0].y == 2', 'kpi.keypoints[1].x == 1', 'kpi.keypoints[1].y == 1', 'kpi.shape == (4, 5)', 'len(kpi.keypoints) == 2', 'kpi.keypoints[0].x == 2', 'kpi.keypoints[0].y == 2', 'kpi.keypoints[1].x == 1', 'kpi.keypoints[1].y == 2', 'kpi.shape == (4, 5)', 'len(kpi.keypoints) == 1', 'kpi.keypoints[0].x == 2', 'kpi.keypoints[0].y == 2', 'kpi.shape == (4, 5)', 'in str(exc)', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
772,aleju,kontakt@ajung.name,2018-12-06 20:13:27+01:00,b8e066f83a63959148e32f56f1ce90660fd9bd9e,https://github.com/aleju/imgaug/commit/b8e066f83a63959148e32f56f1ce90660fd9bd9e,Add test for BoundingBox.contains(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['bb.contains(ia.Keypoint(x=2.5, y=1.5)) is True', 'bb.contains(ia.Keypoint(x=2, y=1)) is True', 'bb.contains(ia.Keypoint(x=0, y=0)) is False']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
773,aleju,kontakt@ajung.name,2018-12-06 20:21:25+01:00,1bf348abd1449234aa7e095494c72bd7df26972f,https://github.com/aleju/imgaug/commit/1bf348abd1449234aa7e095494c72bd7df26972f,Extend test for BoundingBox.extract_from_image(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(image_sub, image_pad[8:11, 8:11])', 'np.array_equal(image_sub, image[1:1+1, 1:1+1, :])', 'np.array_equal(image_sub, image[1:1+1, 2:4, :])', 'np.array_equal(image_sub, image[1:1+1, 2:2+1, :])']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
774,aleju,kontakt@ajung.name,2018-12-06 20:33:29+01:00,d671739b3a715267410811f26bd184a850af2d8f,https://github.com/aleju/imgaug/commit/d671739b3a715267410811f26bd184a850af2d8f,Refactor BoundingBoxesOnImage.from_xyxy_array(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
775,aleju,kontakt@ajung.name,2018-12-06 20:33:59+01:00,3c9a1e056af669055b8d9e17df9bd5eff4bfb847,https://github.com/aleju/imgaug/commit/3c9a1e056af669055b8d9e17df9bd5eff4bfb847,Add test for BoundingBoxesOnImage.from_xyxy_array(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['not bbsoi.empty', 'bbsoi.empty', 'len(bbsoi.bounding_boxes) == 2', 'np.allclose(bbsoi.bounding_boxes[0].x1, 0.0)', 'np.allclose(bbsoi.bounding_boxes[0].y1, 0.0)', 'np.allclose(bbsoi.bounding_boxes[0].x2, 1.0)', 'np.allclose(bbsoi.bounding_boxes[0].y2, 1.0)', 'np.allclose(bbsoi.bounding_boxes[1].x1, 1.0)', 'np.allclose(bbsoi.bounding_boxes[1].y1, 2.0)', 'np.allclose(bbsoi.bounding_boxes[1].x2, 3.0)', 'np.allclose(bbsoi.bounding_boxes[1].y2, 4.0)', 'bbsoi.shape == (40, 50, 3)', 'len(bbsoi.bounding_boxes) == 2', 'np.allclose(bbsoi.bounding_boxes[0].x1, 0.0)', 'np.allclose(bbsoi.bounding_boxes[0].y1, 0.0)', 'np.allclose(bbsoi.bounding_boxes[0].x2, 1.0)', 'np.allclose(bbsoi.bounding_boxes[0].y2, 1.0)', 'np.allclose(bbsoi.bounding_boxes[1].x1, 1.0)', 'np.allclose(bbsoi.bounding_boxes[1].y1, 2.0)', 'np.allclose(bbsoi.bounding_boxes[1].x2, 3.0)', 'np.allclose(bbsoi.bounding_boxes[1].y2, 4.0)', 'bbsoi.shape == (40, 50, 3)', 'len(bbsoi.bounding_boxes) == 0', 'bbsoi.shape == (40, 50, 3)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
776,aleju,kontakt@ajung.name,2018-12-06 20:44:32+01:00,d94d843f284137e06c3caa319d3539a9c8cd7f27,https://github.com/aleju/imgaug/commit/d94d843f284137e06c3caa319d3539a9c8cd7f27,Refactor BoundingBoxesOnImage.to_xyxy_array(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
777,aleju,kontakt@ajung.name,2018-12-06 20:45:09+01:00,26bafb80307be5f225548778580e2ec195a3e4e3,https://github.com/aleju/imgaug/commit/26bafb80307be5f225548778580e2ec195a3e4e3,Add test for BoundingBoxesOnImage.to_xyxy_array(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(xyxy_arr, xyxy_arr_out)', 'xyxy_arr_out.dtype == np.float32', 'np.allclose(xyxy_arr.astype(np.int32), xyxy_arr_out)', 'xyxy_arr_out.dtype == np.int32', 'xyxy_arr_out.shape == (0, 4)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
778,aleju,kontakt@ajung.name,2018-12-06 20:47:24+01:00,4f31f2752b48981f70a527a1eac4168b043ba6af,https://github.com/aleju/imgaug/commit/4f31f2752b48981f70a527a1eac4168b043ba6af,Extend test for Polygon.area,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['in str(exc)', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
779,aleju,kontakt@ajung.name,2018-12-06 21:04:32+01:00,31c205191f555612efdfd8aeedffb23033a1bbcd,https://github.com/aleju/imgaug/commit/31c205191f555612efdfd8aeedffb23033a1bbcd,Add test for Polygon.find_closest_point_idx,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['closest_idx == 0', 'closest_idx == 1', 'closest_idx == 1', 'closest_idx == 0', 'closest_idx == 0', 'np.allclose(distance, 0.0)', 'closest_idx == 0', 'np.allclose(distance, np.sqrt((0.1**2) + (0.15**2)))', 'closest_idx == 1', 'np.allclose(distance, np.sqrt(((1.0-0.9)**2) + (0.15**2)))']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
780,aleju,kontakt@ajung.name,2018-12-06 21:10:24+01:00,24317f7307c2ae473abf8dee02b6c56abec7771a,https://github.com/aleju/imgaug/commit/24317f7307c2ae473abf8dee02b6c56abec7771a,Extend test for Polygon.is_out_of_image(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['in str(exc)', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
781,aleju,kontakt@ajung.name,2018-12-06 21:13:10+01:00,8a721709e030ce25ca8d47d8e04833f2d03d086d,https://github.com/aleju/imgaug/commit/8a721709e030ce25ca8d47d8e04833f2d03d086d,Extend test for Polygon.clip_out_of_image(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(multipoly_clipped, ia.MultiPolygon)', 'len(multipoly_clipped.geoms) == 0']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
782,aleju,kontakt@ajung.name,2018-12-07 16:56:14+01:00,dd57d618e89ada78f861be456736aebab5d94818,https://github.com/aleju/imgaug/commit/dd57d618e89ada78f861be456736aebab5d94818,Extend test for Polygon.draw_on_image(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_poly.dtype.type == np.float32', 'image_poly.shape == (10, 10, 3)', 'np.allclose(image_poly[2:9, 2:3, c_idx], np.zeros((7, 1), dtype=np.float32) + value)  # left boundary', 'np.allclose(image_poly[2:9, 8:9, c_idx], np.zeros((7, 1), dtype=np.float32) + value)  # right boundary', 'np.allclose(image_poly[2:3, 2:9, c_idx], np.zeros((1, 7), dtype=np.float32) + value)  # top boundary', 'np.allclose(image_poly[8:9, 2:9, c_idx], np.zeros((1, 7), dtype=np.float32) + value)  # bottom boundary', 'np.allclose(image_poly[3:8, 3:8, :], expected)', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.all(', 'np.all(image_poly[3:8, 3:8, :] == expected.astype(np.uint8))']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
783,aleju,kontakt@ajung.name,2018-12-07 18:11:09+01:00,dcf298bfdc1935e14e1a4666086b1f2693046616,https://github.com/aleju/imgaug/commit/dcf298bfdc1935e14e1a4666086b1f2693046616,Extend test for Polygon.extract_from_image(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['in str(exc)', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
784,aleju,kontakt@ajung.name,2018-12-07 18:12:49+01:00,065893782fdb80ca9f714a5e18df1b58f254ec5e,https://github.com/aleju/imgaug/commit/065893782fdb80ca9f714a5e18df1b58f254ec5e,Extend test for Polygon.change_first_point_by_coords(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['in str(exc)'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
785,aleju,kontakt@ajung.name,2018-12-07 18:16:52+01:00,d477d9285c49e4dc5d1fa24141936338776a7e20,https://github.com/aleju/imgaug/commit/d477d9285c49e4dc5d1fa24141936338776a7e20,Fix unexpected None error in Polygon.from_shapely(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
786,aleju,kontakt@ajung.name,2018-12-07 18:17:08+01:00,11a445eab9c0b7990e3a5870273716717b549762,https://github.com/aleju/imgaug/commit/11a445eab9c0b7990e3a5870273716717b549762,Extend test for Polygon.from_shapely(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['len(poly.exterior) == 0'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
787,aleju,kontakt@ajung.name,2018-12-07 18:18:18+01:00,00c2a6226362c22b7fd93a5d1d145aa8360b2e74,https://github.com/aleju/imgaug/commit/00c2a6226362c22b7fd93a5d1d145aa8360b2e74,Extend test for Polygon.almost_equals(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['not poly_a.almost_equals()'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
788,aleju,kontakt@ajung.name,2018-12-07 18:28:38+01:00,abc17972bb39e55c3cb17150e8c152bc44139851,https://github.com/aleju/imgaug/commit/abc17972bb39e55c3cb17150e8c152bc44139851,Add test for imgaug._interpolate_point_pair(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(', 'np.allclose(', 'len(inter) == 0']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
789,aleju,kontakt@ajung.name,2018-12-07 18:44:37+01:00,746ce4af2829273f9d64699f5f92f491c4ab6a05,https://github.com/aleju/imgaug/commit/746ce4af2829273f9d64699f5f92f491c4ab6a05,Add test for _interpolate_points(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'len(inter) == 0', 'np.allclose(', 'np.allclose(']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
790,aleju,kontakt@ajung.name,2018-12-07 18:45:04+01:00,5431577c4ce629264527225ad22eb599b079df87,https://github.com/aleju/imgaug/commit/5431577c4ce629264527225ad22eb599b079df87,"Fix _interpolate_points(..., closed=False) missing last point",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
791,aleju,kontakt@ajung.name,2018-12-07 18:57:18+01:00,98e281a6617b925cab5de2d74913014f74b8adca,https://github.com/aleju/imgaug/commit/98e281a6617b925cab5de2d74913014f74b8adca,"Fix _interpolate_points_by_max_distance(..., closed=False) missing last point",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
792,aleju,kontakt@ajung.name,2018-12-07 18:57:36+01:00,fc1c8b147a39f624ddae3921de96332944ae4f58,https://github.com/aleju/imgaug/commit/fc1c8b147a39f624ddae3921de96332944ae4f58,Add test for _interpolate_points_by_max_distance(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'len(inter) == 0', 'np.allclose(']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
793,aleju,kontakt@ajung.name,2018-12-08 10:24:36+01:00,7259b68e0d8edf2aa9b219d6f33553cb15ee2c43,https://github.com/aleju/imgaug/commit/7259b68e0d8edf2aa9b219d6f33553cb15ee2c43,Change pad() to prefer bottom over top side,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
794,aleju,kontakt@ajung.name,2018-12-08 10:25:03+01:00,1b03a78240331c7d82f7194dca4212ccdd872de9,https://github.com/aleju/imgaug/commit/1b03a78240331c7d82f7194dca4212ccdd872de9,Add test for Heatmaps.pad_to_aspect_ration(); Adapt to new pad() preference,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['top == 1', 'bottom == 2', 'heatmaps_padded.arr_0to1.shape == (3, 3, 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (3, 3, 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (3, 3, 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (2, 4, 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (12, 3, 1)', 'np.allclose(']",[],[],[],[],[],[],[],[],[],[],[],[],"['top == 2', 'bottom == 1']",[],[],[],[],[],[],[],[],[],[],[],[]
795,aleju,kontakt@ajung.name,2018-12-08 10:37:36+01:00,7c215db6e42ac8831c54918c07e164cd3ce59325,https://github.com/aleju/imgaug/commit/7c215db6e42ac8831c54918c07e164cd3ce59325,Add test for HeatmapsOnImage.from_uint8(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['hm.shape == (20, 30, 3)', 'hm.arr_0to1.shape == (2, 3, 1)', 'np.allclose(hm.arr_0to1[..., 0], np.float32([', 'hm.shape == (20, 30, 3)', 'hm.arr_0to1.shape == (2, 3, 1)', 'np.allclose(hm.arr_0to1[..., 0], np.float32([', 'hm.shape == (20, 30, 3)', 'hm.arr_0to1.shape == (2, 3, 1)', 'np.allclose(hm.arr_0to1[..., 0], np.float32([', 'np.allclose(hm.min_value, -1.0)', 'np.allclose(hm.max_value, 2.0)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
796,aleju,kontakt@ajung.name,2018-12-08 10:51:50+01:00,83d4f63b760f92720f1027c51d3bf11224153e29,https://github.com/aleju/imgaug/commit/83d4f63b760f92720f1027c51d3bf11224153e29,Improve HeatmapsOnImage initializer asserts,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
797,aleju,kontakt@ajung.name,2018-12-08 10:52:08+01:00,0165f1d2dab377bc24683820d9d1c166bf09f051,https://github.com/aleju/imgaug/commit/0165f1d2dab377bc24683820d9d1c166bf09f051,Add test for HeatmapsOnImage.change_normalization(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
798,aleju,kontakt@ajung.name,2018-12-08 11:26:37+01:00,fd51d3d3fd000aa90adb5282327d67478ecbc312,https://github.com/aleju/imgaug/commit/fd51d3d3fd000aa90adb5282327d67478ecbc312,Fix hanging BatchLoader upon terminate; Improve assert msgs,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
799,aleju,kontakt@ajung.name,2018-12-08 11:27:05+01:00,2e29ca6a914c1f06446cadc2f25b1e5dded73fc1,https://github.com/aleju/imgaug/commit/2e29ca6a914c1f06446cadc2f25b1e5dded73fc1,Add test for BackgroundAugmenter._augment_images_worker(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(batch_aug, ia.Batch)', 'batch_aug.images is not None', 'batch_aug.images.dtype == np.uint8', 'batch_aug.images.shape == (4, 8, 3)', 'np.array_equal(batch_aug.images, np.zeros((4, 8, 3), dtype=np.uint8))', 'batch_aug.images_aug is not None', 'batch_aug.images_aug.dtype == np.uint8', 'batch_aug.images_aug.shape == (4, 8, 3)', 'np.array_equal(batch_aug.images_aug, np.zeros((4, 8, 3), dtype=np.uint8) + 1)', 'finished_signal is None', 'source_finished_signal is None', 'queue_source.empty()', 'queue_target.empty()']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
800,aleju,kontakt@ajung.name,2018-12-08 11:31:58+01:00,60268f8e4693029e68a4a9b6c0a3db9b29857353,https://github.com/aleju/imgaug/commit/60268f8e4693029e68a4a9b6c0a3db9b29857353,Allow Queue as an input to BackgroundAugmenter,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
801,aleju,kontakt@ajung.name,2018-12-08 11:36:02+01:00,bdfa792ed69baf0fe181a9e32ba100ea02a25e4f,https://github.com/aleju/imgaug/commit/bdfa792ed69baf0fe181a9e32ba100ea02a25e4f,Fix warning in test for BackgroundAugmenter._augment_images_worker(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['batch_aug.images.shape == (1, 4, 8, 3)', 'np.array_equal(batch_aug.images, np.zeros((1, 4, 8, 3), dtype=np.uint8))', 'batch_aug.images_aug.shape == (1, 4, 8, 3)', 'np.array_equal(batch_aug.images_aug, np.zeros((1, 4, 8, 3), dtype=np.uint8) + 1)']",[],[],[],[],[],[],[],[],[],[],[],[],"['batch_aug.images.shape == (4, 8, 3)', 'np.array_equal(batch_aug.images, np.zeros((4, 8, 3), dtype=np.uint8))', 'batch_aug.images_aug.shape == (4, 8, 3)', 'np.array_equal(batch_aug.images_aug, np.zeros((4, 8, 3), dtype=np.uint8) + 1)']",[],[],[],[],[],[],[],[],[],[],[],[]
802,aleju,kontakt@ajung.name,2018-12-08 12:57:43+01:00,f2f5df769c01ba17dba271e585b1247785c21033,https://github.com/aleju/imgaug/commit/f2f5df769c01ba17dba271e585b1247785c21033,Fix error message in _quokka_normalize_extract(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
803,aleju,kontakt@ajung.name,2018-12-08 12:58:01+01:00,843b301f28aa1779dc0617be3cd43494c6ae69ae,https://github.com/aleju/imgaug/commit/843b301f28aa1779dc0617be3cd43494c6ae69ae,Add test for _quokka_normalize_extract(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(observed, ia.BoundingBox)', 'observed.x1 == 0', 'observed.y1 == 0', 'observed.x2 == 643', 'observed.y2 == 643', 'isinstance(observed, ia.BoundingBox)', 'observed.x1 == 1', 'observed.y1 == 1', 'observed.x2 == 644', 'observed.y2 == 642', 'isinstance(observed, ia.BoundingBox)', 'observed.x1 == 1', 'observed.y1 == 1', 'observed.x2 == 644', 'observed.y2 == 642', 'isinstance(observed, ia.BoundingBox)', 'observed.x1 == 1', 'observed.y1 == 1', 'observed.x2 == 644', 'observed.y2 == 642', 'in str(exc)', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
804,aleju,kontakt@ajung.name,2018-12-08 13:36:10+01:00,bdd0ca9ca61153c0082521971d01eaf2fff3e373,https://github.com/aleju/imgaug/commit/bdd0ca9ca61153c0082521971d01eaf2fff3e373,Make _compute_resized_shape() accept mixed tuples + fix result not tuple,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
805,aleju,kontakt@ajung.name,2018-12-08 13:36:25+01:00,33ee9a49a79716f5770bf1078548b3ea75949096,https://github.com/aleju/imgaug/commit/33ee9a49a79716f5770bf1078548b3ea75949096,Add test for _compute_resized_shape(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed == (20, 30, 3)', 'observed == (20, 30, 3)', 'observed == (20, 45, 3)', 'observed == (20, 25, 3)', 'observed == (15, 34, 3)', 'observed == from_shape', 'observed == (20, 15, 3)', 'observed == (10, 25, 3)', 'observed == (20, 20, 3)', 'observed == (20, 30, 3)', 'observed == to_shape', 'observed == to_shape', 'observed == (20, 30, 3)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
806,aleju,kontakt@ajung.name,2018-12-08 14:03:28+01:00,0ce37d8701e326f97f9ccfd58733c88152dd5343,https://github.com/aleju/imgaug/commit/0ce37d8701e326f97f9ccfd58733c88152dd5343,Extend doc of _compute_resized_shape(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
807,aleju,kontakt@ajung.name,2018-12-08 14:09:43+01:00,c1618b1b2c6e957acd4e601ff86b0e1e00315529,https://github.com/aleju/imgaug/commit/c1618b1b2c6e957acd4e601ff86b0e1e00315529,Add test for quokka(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['img.shape == (643, 960, 3)', 'np.allclose(', 'img.shape == (643, 643, 3)', 'np.allclose(', 'img.shape == (642, 959, 3)', 'np.allclose(']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
808,aleju,kontakt@ajung.name,2018-12-08 14:10:18+01:00,37d58dfed2a793c81760d0dd2390d979af25f537,https://github.com/aleju/imgaug/commit/37d58dfed2a793c81760d0dd2390d979af25f537,Add test for quokka_square(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['img.shape == (643, 643, 3)', 'np.allclose(']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
809,aleju,kontakt@ajung.name,2018-12-08 14:27:16+01:00,fc59f33aa6d31678d823a9623595b97d4bc4ddc9,https://github.com/aleju/imgaug/commit/fc59f33aa6d31678d823a9623595b97d4bc4ddc9,Fix quokka_heatmap() returning 3 instead of 1 heatmap channels,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
810,aleju,kontakt@ajung.name,2018-12-08 14:29:00+01:00,3bb96e57d38313657dab1f9a6e87907f1b8811d5,https://github.com/aleju/imgaug/commit/3bb96e57d38313657dab1f9a6e87907f1b8811d5,Add test for quokka_heatmap(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['hm.shape == (643, 960, 3)', 'hm.arr_0to1.shape == (643, 960, 1)', 'np.allclose(np.average(hm.arr_0to1), 0.57618505)', 'hm.shape == (643, 643, 3)', 'hm.arr_0to1.shape == (643, 643, 1)', 'np.allclose(np.average(hm.arr_0to1), 0.48026952)', 'hm.shape == (642, 959, 3)', 'hm.arr_0to1.shape == (642, 959, 1)', 'np.allclose(np.average(hm.arr_0to1), 0.5762454)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
811,aleju,kontakt@ajung.name,2018-12-08 14:29:37+01:00,e67c1a8ce82fc7d6de2e9c88b1b20057033660a3,https://github.com/aleju/imgaug/commit/e67c1a8ce82fc7d6de2e9c88b1b20057033660a3,Fix bad heatmap arr shape in quokka_heatmap(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
812,aleju,kontakt@ajung.name,2018-12-08 14:45:40+01:00,7fcbf67e61220cb2169e4192f40e468932995821,https://github.com/aleju/imgaug/commit/7fcbf67e61220cb2169e4192f40e468932995821,Add test for quokka_segmentation_map(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['segmap.shape == (643, 960, 3)', 'segmap.arr.shape == (643, 960, 1)', 'np.allclose(np.average(segmap.arr), 0.3016427)', 'segmap.shape == (643, 643, 3)', 'segmap.arr.shape == (643, 643, 1)', 'np.allclose(np.average(segmap.arr), 0.450353)', 'segmap.shape == (642, 959, 3)', 'segmap.arr.shape == (642, 959, 1)', 'np.allclose(np.average(segmap.arr), 0.30160266)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
813,aleju,kontakt@ajung.name,2018-12-08 14:56:23+01:00,d582122f764147e914d43709d8be1d16f492854f,https://github.com/aleju/imgaug/commit/d582122f764147e914d43709d8be1d16f492854f,Add test for quokka_keypoints(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(kpsoi.keypoints) > 0', 'np.allclose(kpsoi.keypoints[0].x, 163.0)', 'np.allclose(kpsoi.keypoints[0].y, 78.0)', 'kpsoi.shape == (643, 960, 3)', 'len(kpsoi.keypoints) == len(kpsoi_square.keypoints)', 'kpsoi_square.shape == (643, 643, 3)', 'np.average(np.abs(patch.astype(np.float32) - patch_square.astype(np.float32))) < 5', 'kpsoi_resized.shape == (642, 959, 3)', 'len(kpsoi.keypoints) == len(kpsoi_resized.keypoints)', 'd < 1.0']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
814,aleju,kontakt@ajung.name,2018-12-08 15:04:02+01:00,85a904db02537442dfad620dccf79c2b68012d12,https://github.com/aleju/imgaug/commit/85a904db02537442dfad620dccf79c2b68012d12,Add test for quokka_bounding_boxes(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.average(np.abs(patch.astype(np.float32) - patch_square.astype(np.float32))) < 1.0', 'len(bbsoi.bounding_boxes) > 0', 'np.allclose(bb0.x1, 148.0)', 'np.allclose(bb0.y1, 50.0)', 'np.allclose(bb0.x2, 550.0)', 'np.allclose(bb0.y2, 642.0)', 'bbsoi.shape == (643, 960, 3)', 'len(bbsoi.bounding_boxes) == len(bbsoi_square.bounding_boxes)', 'bbsoi_square.shape == (643, 643, 3)', 'np.average(np.abs(patch.astype(np.float32) - patch_square.astype(np.float32))) < 1.0', 'bbsoi_resized.shape == (642, 959, 3)', 'len(bbsoi.bounding_boxes) == len(bbsoi_resized.bounding_boxes)', 'd < 1.0']",[],[],[],[],[],[],[],[],[],[],[],[],['np.average(np.abs(patch.astype(np.float32) - patch_square.astype(np.float32))) < 5'],[],[],[],[],[],[],[],[],[],[],[],[]
815,aleju,kontakt@ajung.name,2018-12-08 15:28:58+01:00,1bf8a555e6f709ed8b9ae60b47f09733cd4a5455,https://github.com/aleju/imgaug/commit/1bf8a555e6f709ed8b9ae60b47f09733cd4a5455,Import PIL by default,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
816,aleju,kontakt@ajung.name,2018-12-08 16:02:00+01:00,0bfcb83a2c204e45d995ea41c472676aa40d8296,https://github.com/aleju/imgaug/commit/0bfcb83a2c204e45d995ea41c472676aa40d8296,Add test for draw_text(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.max(img_text) == 255', 'np.min(img_text) == 0', 'np.sum(img_text == 255) / np.sum(img_text == 0)', 'bb.width > 4.0*bb.height', '0 < first_col1 < 10', '45 < first_col2 < 55', '0 < first_row1 < 15', '45 < first_row2 < 60', 'nb_filled_large > 2*nb_filled_small', 'maxcol[0] == 128', 'maxcol[1] == 129', 'maxcol[2] == 130']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
817,aleju,kontakt@ajung.name,2018-12-08 16:26:58+01:00,585271636c32b5813dce4e0c37ee2a36484d06a8,https://github.com/aleju/imgaug/commit/585271636c32b5813dce4e0c37ee2a36484d06a8,Fix var naming in test for Keypoint.generate_similar_points_manhattan(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['any([np.allclose([y, x], [kp_manhatten.y, kp_manhatten.x]) for kp_manhatten in kps_manhatten])', 'any([np.allclose([y, x], [kp_manhatten_y, kp_manhatten_x])']",[],[],[],[],[],[],[],[],[],[],[],[],"['any([np.allclose([y, x], [kp.y, kp.x]) for kp in kps_manhatten])', 'any([np.allclose([y, x], [kp_y, kp_x]) for kp_x, kp_y in kps_manhatten])']",[],[],[],[],[],[],[],[],[],[],[],[]
818,aleju,kontakt@ajung.name,2018-12-08 16:30:02+01:00,cc37b43967077f3bbb427b2c06b34b78bf0fed9e,https://github.com/aleju/imgaug/commit/cc37b43967077f3bbb427b2c06b34b78bf0fed9e,Fix test for quokka_heatmap() in py2.7,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(np.average(hm.arr_0to1), 0.48026952, atol=1e-4)']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(np.average(hm.arr_0to1), 0.48026952)']",[],[],[],[],[],[],[],[],[],[],[],[]
819,aleju,kontakt@ajung.name,2018-12-08 16:34:23+01:00,986ebec70f95394e0e919ffad1167cfb33d81d32,https://github.com/aleju/imgaug/commit/986ebec70f95394e0e919ffad1167cfb33d81d32,Remove dubious color normalization from draw_text(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
820,aleju,kontakt@ajung.name,2018-12-08 16:35:13+01:00,89fb6c47a5be3422c74fee68d77a6d89be5ff115,https://github.com/aleju/imgaug/commit/89fb6c47a5be3422c74fee68d77a6d89be5ff115,"Remove TODO, already done",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
821,aleju,kontakt@ajung.name,2018-12-08 16:48:50+01:00,877e6067d41f960cd0b7a8864efcb4f71d7eb1a6,https://github.com/aleju/imgaug/commit/877e6067d41f960cd0b7a8864efcb4f71d7eb1a6,Add doc to compute_line_intersection_point(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
822,aleju,kontakt@ajung.name,2018-12-08 16:49:06+01:00,844eb9e4150dafbca7f3d0871fc947c34c4fcb43,https://github.com/aleju/imgaug/commit/844eb9e4150dafbca7f3d0871fc947c34c4fcb43,Add test for compute_line_intersection_point(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(point[0], 0.5)', 'np.allclose(point[1], 0)', 'np.allclose(point[0], 0.5)', 'np.allclose(point[1], 0)', 'np.allclose(point[0], 0.5)', 'np.allclose(point[1], 0)', 'point is False', 'point is False']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
823,aleju,kontakt@ajung.name,2018-12-08 17:47:07+01:00,9ca26256c58da098ad6a61f7f3e5600f2f3868be,https://github.com/aleju/imgaug/commit/9ca26256c58da098ad6a61f7f3e5600f2f3868be,Add from_colorspace to FastSnowyLandscape + improve dtype support,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
824,aleju,kontakt@ajung.name,2018-12-08 17:47:31+01:00,c9e6ef33a6b562a0d692fa0a4589105db5dbde54,https://github.com/aleju/imgaug/commit/c9e6ef33a6b562a0d692fa0a4589105db5dbde54,Add test for FastSnowyLandscape,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug.lightness_threshold, iap.Choice)', 'len(aug.lightness_threshold.a) == 2', 'aug.lightness_threshold.a[0] == 100', 'aug.lightness_threshold.a[1] == 200', 'isinstance(aug.lightness_multiplier, iap.Choice)', 'len(aug.lightness_multiplier.a) == 2', 'np.allclose(aug.lightness_multiplier.a[0], 1.0)', 'np.allclose(aug.lightness_multiplier.a[1], 4.0)', 'np.array_equal(observed, expected)', 'np.array_equal(observed[0], expected1)', 'np.array_equal(observed[1], expected2)', 'np.array_equal(observed[2], expected1)', 'np.array_equal(observed[3], expected2)', 'np.array_equal(observed[0], expected1)', 'np.array_equal(observed[1], expected2)', 'np.array_equal(observed[2], expected1)', 'np.array_equal(observed[3], expected2)', 'np.array_equal(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
825,aleju,kontakt@ajung.name,2018-12-08 20:33:32+01:00,18082a6382f57361c8374033098ba6c25efc6dfb,https://github.com/aleju/imgaug/commit/18082a6382f57361c8374033098ba6c25efc6dfb,"Add tests for Clouds, Fog, Snowflakes",1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['50 < np.average(img_aug) < 240', 'np.max(img_aug) > 200', 'np.sum(np.abs(grad_x)) > 5 * img.shape[1]', 'np.sum(np.abs(grad_y)) > 5 * img.shape[0]', '100 < np.average(img_aug) < 255', 'np.max(img_aug) > 100', 'np.sum(np.abs(grad_x)) > 1 * img.shape[1]', 'np.sum(np.abs(grad_y)) > 1 * img.shape[0]', '1.0 < np.average(img_aug) < 50', 'np.max(img_aug) > 200', 'np.sum(np.abs(grad_x)) > 5 * img.shape[1]', 'np.sum(np.abs(grad_y)) > 5 * img.shape[0]', 'np.average(img_aug_undense) < np.average(img_aug_dense)', '_measure_uniformity(img_aug_ununiform) < _measure_uniformity(img_aug_uniform)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
826,aleju,kontakt@ajung.name,2018-12-08 20:47:46+01:00,7ee618e7563ce369d38f9c7bb0e9f9c787c9639e,https://github.com/aleju/imgaug/commit/7ee618e7563ce369d38f9c7bb0e9f9c787c9639e,Add test for JpegCompression,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['diff < 1.0', '1.0 < diff < 50.0', 'isinstance(aug.compression, iap.Choice)', 'len(aug.compression.a) == 2', 'aug.compression.a[0] == 0', 'aug.compression.a[1] == 100', 'len(aug.get_parameters()) == 1', 'aug.get_parameters()[0] == aug.compression', 'np.array_equal(imgs_aug[0], img_aug_c0)', 'np.array_equal(imgs_aug[1], img_aug_c100)', 'np.array_equal(imgs_aug[2], img_aug_c0)', 'np.array_equal(imgs_aug[3], img_aug_c100)', 'np.allclose([kp.x, kp.y], [kp_aug.x, kp_aug.y])', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
827,aleju,kontakt@ajung.name,2018-12-08 20:53:56+01:00,1fe3dbeaf193a2d5fd6e8e6dd319d1087caa49c2,https://github.com/aleju/imgaug/commit/1fe3dbeaf193a2d5fd6e8e6dd319d1087caa49c2,Extend arithmetic tests to check heatmaps,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
828,aleju,kontakt@ajung.name,2018-12-09 12:24:16+01:00,b8d47aa9b6c5f837911f44a21b374f9fd8531d06,https://github.com/aleju/imgaug/commit/b8d47aa9b6c5f837911f44a21b374f9fd8531d06,Change Rot90 to rotate clockwise,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
829,aleju,kontakt@ajung.name,2018-12-09 12:24:58+01:00,ad3f75fcfef997c58f1dc3cd12a31ccfd4fe0cfb,https://github.com/aleju/imgaug/commit/ad3f75fcfef997c58f1dc3cd12a31ccfd4fe0cfb,Add test for Rot90,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['img_aug.dtype == np.uint8', 'np.array_equal(img_aug, img)', 'hms_aug.arr_0to1.dtype == hms.arr_0to1.dtype', 'np.allclose(hms_aug.arr_0to1, hms.arr_0to1)', 'hms_aug.shape == hms.shape', 'kpsoi_aug.shape == kpsoi.shape', 'np.allclose([kp_aug.x, kp_aug.y], [kp.x, kp.y])', 'img_aug.dtype == np.uint8', 'np.array_equal(img_aug, np.rot90(img, 1, axes=(1, 0)))', 'hms_aug.arr_0to1.dtype == hms.arr_0to1.dtype', 'np.allclose(hms_aug.arr_0to1, np.rot90(hms.arr_0to1, 1, axes=(1, 0)))', 'hms_aug.shape == (4, 4, 3)', 'hms_smaller_aug.arr_0to1.dtype == hms_smaller.arr_0to1.dtype', 'np.allclose(hms_smaller_aug.arr_0to1, np.rot90(hms_smaller.arr_0to1, 1, axes=(1, 0)))', 'hms_smaller_aug.shape == (8, 4, 3)', 'kpsoi_aug.shape == (8, 4, 3)', 'np.allclose([kp_aug.x, kp_aug.y], [kp[0], kp[1]])', 'img_aug.dtype == np.uint8', 'np.array_equal(img_aug, np.rot90(img, 2, axes=(1, 0)))', 'hms_aug.arr_0to1.dtype == hms.arr_0to1.dtype', 'np.allclose(hms_aug.arr_0to1, np.rot90(hms.arr_0to1, 2, axes=(1, 0)))', 'hms_aug.shape == (4, 4, 3)', 'hms_smaller_aug.arr_0to1.dtype == hms_smaller.arr_0to1.dtype', 'np.allclose(hms_smaller_aug.arr_0to1, np.rot90(hms_smaller.arr_0to1, 2, axes=(1, 0)))', 'hms_smaller_aug.shape == (4, 8, 3)', 'kpsoi_aug.shape == (4, 8, 3)', 'np.allclose([kp_aug.x, kp_aug.y], [kp[0], kp[1]])', 'img_aug.dtype == np.uint8', 'np.array_equal(img_aug, np.rot90(img, 3, axes=(1, 0)))', 'hms_aug.arr_0to1.dtype == hms.arr_0to1.dtype', 'np.allclose(hms_aug.arr_0to1, np.rot90(hms.arr_0to1, 3, axes=(1, 0)))', 'hms_aug.shape == (4, 4, 3)', 'hms_smaller_aug.arr_0to1.dtype == hms_smaller.arr_0to1.dtype', 'np.allclose(hms_smaller_aug.arr_0to1, np.rot90(hms_smaller.arr_0to1, 3, axes=(1, 0)))', 'hms_smaller_aug.shape == (8, 4, 3)', 'kpsoi_aug.shape == (8, 4, 3)', 'np.allclose([kp_aug.x, kp_aug.y], [kp[0], kp[1]])', 'np.array_equal(img_aug, expected)', 'img_aug.dtype == np.uint8', 'np.array_equal(', 'hms_aug.arr_0to1.dtype == hms.arr_0to1.dtype', 'np.allclose(hms_aug.arr_0to1, np.rot90(hms.arr_0to1, 1, axes=(1, 0)))', 'hms_aug.shape == (4, 4, 3)', 'hms_smaller_aug.arr_0to1.dtype == hms_smaller.arr_0to1.dtype', 'np.allclose(hms_smaller_aug.arr_0to1, hms_smaller_rot)', 'hms_smaller_aug.shape == (4, 8, 3)', 'kpsoi_aug.shape == (4, 8, 3)', 'np.allclose([kp_aug.x, kp_aug.y], [kp[0], kp[1]])', 'isinstance(aug.k, iap.Choice)', 'len(aug.k.a) == 2', 'aug.k.a[0] == 1', 'aug.k.a[1] == 3', 'np.array_equal(imgs_aug[0], np.rot90(img, 1, axes=(1, 0)))', 'np.array_equal(imgs_aug[1], np.rot90(img, 2, axes=(1, 0)))', 'np.array_equal(imgs_aug[2], np.rot90(img, 1, axes=(1, 0)))', 'np.array_equal(imgs_aug[3], np.rot90(img, 2, axes=(1, 0)))', 'hms_aug[0].shape == (8, 4, 3)', 'hms_aug[1].shape == (4, 8, 3)', 'hms_aug[2].shape == (8, 4, 3)', 'hms_aug[3].shape == (4, 8, 3)', 'np.allclose(hms_aug[0].arr_0to1, np.rot90(hms_smaller.arr_0to1, 1, axes=(1, 0)))', 'np.allclose(hms_aug[1].arr_0to1, np.rot90(hms_smaller.arr_0to1, 2, axes=(1, 0)))', 'np.allclose(hms_aug[2].arr_0to1, np.rot90(hms_smaller.arr_0to1, 1, axes=(1, 0)))', 'np.allclose(hms_aug[3].arr_0to1, np.rot90(hms_smaller.arr_0to1, 2, axes=(1, 0)))', 'kpsoi_aug[0].shape == (8, 4, 3)', 'kpsoi_aug[1].shape == (4, 8, 3)', 'kpsoi_aug[2].shape == (8, 4, 3)', 'kpsoi_aug[3].shape == (4, 8, 3)', 'np.allclose([kpsoi_aug[0].keypoints[0].x, kpsoi_aug[0].keypoints[0].y], [1, 1])', 'np.allclose([kpsoi_aug[0].keypoints[1].x, kpsoi_aug[0].keypoints[1].y], [0, 2])', 'np.allclose([kpsoi_aug[1].keypoints[0].x, kpsoi_aug[1].keypoints[0].y], [6, 1])', 'np.allclose([kpsoi_aug[1].keypoints[1].x, kpsoi_aug[1].keypoints[1].y], [5, 0])', 'np.allclose([kpsoi_aug[2].keypoints[0].x, kpsoi_aug[2].keypoints[0].y], [1, 1])', 'np.allclose([kpsoi_aug[2].keypoints[1].x, kpsoi_aug[2].keypoints[1].y], [0, 2])', 'np.allclose([kpsoi_aug[3].keypoints[0].x, kpsoi_aug[3].keypoints[0].y], [6, 1])', 'np.allclose([kpsoi_aug[3].keypoints[1].x, kpsoi_aug[3].keypoints[1].y], [5, 0])', 'aug.get_parameters()[0] == aug.k', 'aug.get_parameters()[1] is False']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
830,aleju,kontakt@ajung.name,2018-12-09 12:55:19+01:00,859ca52145f14c366ca450a3d29f6e3afe7da124,https://github.com/aleju/imgaug/commit/859ca52145f14c366ca450a3d29f6e3afe7da124,Remove outdated TODO,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
831,aleju,kontakt@ajung.name,2018-12-09 13:51:18+01:00,09c2b1c57bdb7dac93c6e303f4f6caae7505f8b2,https://github.com/aleju/imgaug/commit/09c2b1c57bdb7dac93c6e303f4f6caae7505f8b2,Extend test for ElasticTransformation,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['hm_aug.shape == (80, 80)', 'hm_aug.arr_0to1.shape == (80, 80, 1)', '(same / img_aug_mask.size) >= 0.99', 'hm_aug.shape == (80, 80)', 'hm_aug.arr_0to1.shape == (40, 40, 1)', '(same / img_aug_mask.size) >= 0.96']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
832,aleju,kontakt@ajung.name,2018-12-09 14:40:28+01:00,efdd6f067c7878911cfe79fa4283eead04bbfdcc,https://github.com/aleju/imgaug/commit/efdd6f067c7878911cfe79fa4283eead04bbfdcc,Fix tuple error in PerspectiveTransform,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
833,aleju,kontakt@ajung.name,2018-12-09 14:40:58+01:00,ea3b447b817ec741dc1389e06213e1e3b8336416,https://github.com/aleju/imgaug/commit/ea3b447b817ec741dc1389e06213e1e3b8336416,Extend test for PerspectiveTransform,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['params[6] is False', 'all([abs(s1-s2) <= 1 for s1, s2 in zip(hm_aug.shape, expected)])', 'all([abs(s1-s2) <= 1 for s1, s2 in zip(hm_aug.arr_0to1.shape, expected + (1,))])', '(same / img_aug_mask.size) >= 0.99', 'all([abs(s1-s2) <= 1 for s1, s2 in zip(hm_aug.shape, expected)])', 'all([abs(s1-s2) <= 1 for s1, s2 in zip(hm_aug.arr_0to1.shape, expected_small)])', '(same / img_aug_mask.size) >= 0.96']",[],[],[],[],[],[],[],[],[],[],[],[],['params[6] == False'],[],[],[],[],[],[],[],[],[],[],[],[]
834,aleju,kontakt@ajung.name,2018-12-09 14:41:20+01:00,a8a9014bb5f1d23ee96745583086d4acbeb4cbe2,https://github.com/aleju/imgaug/commit/a8a9014bb5f1d23ee96745583086d4acbeb4cbe2,Reactivate Agg backend in weather tests,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
835,aleju,kontakt@ajung.name,2018-12-09 15:54:45+01:00,10ae05a6bd5f1354c32a5d6056cb62f1cf5b2cc1,https://github.com/aleju/imgaug/commit/10ae05a6bd5f1354c32a5d6056cb62f1cf5b2cc1,Improve doc for Affine,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
836,aleju,kontakt@ajung.name,2018-12-09 15:54:59+01:00,79ef0cd64e1e5c6f22bc58c79888a61b5e4b9213,https://github.com/aleju/imgaug/commit/79ef0cd64e1e5c6f22bc58c79888a61b5e4b9213,Extend tests for Affine,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['hm_aug.shape == (7, 6)', 'hm_aug.arr_0to1.shape == (7, 6, 1)', '(same / img_aug_mask.size) >= 0.99', 'hm_aug.shape == (56, 48)', 'hm_aug.arr_0to1.shape == (28, 24, 1)', '(same / img_aug_mask.size) >= 0.9', 'aug.fit_output is True', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'np.allclose(observed.arr_0to1, expected.arr_0to1)', 'nb_labels == 4', 'nb_labels == 4', 'nb_labels == 4', 'nb_labels == 4', '(same / img_aug_mask.size) >= 0.95']",[],[],[],[],[],[],[],[],[],[],[],[],"['aug.fit_output is True', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'np.array_equal(observed.get_arr(), expected.get_arr())']",[],[],[],[],[],[],[],[],[],[],[],[]
837,aleju,kontakt@ajung.name,2018-12-09 16:38:29+01:00,c4b8cc883fa4f7f693aadccce528a5a8391dbde7,https://github.com/aleju/imgaug/commit/c4b8cc883fa4f7f693aadccce528a5a8391dbde7,Fix shape computation in hm aug in Scale,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
838,aleju,kontakt@ajung.name,2018-12-09 16:38:47+01:00,a8434a2842eb63bf076d5a08f2a0ace3f201ee37,https://github.com/aleju/imgaug/commit/a8434a2842eb63bf076d5a08f2a0ace3f201ee37,Extend test for Scale,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['heatmaps_aug.shape == (16, int(base_img3d.shape[1]*2*2), 3)', 'heatmaps_aug.arr_0to1.shape == (8, 16, 1)', '0 - 1e-6 < heatmaps_aug.min_value < 0 + 1e-6', '1 - 1e-6 < heatmaps_aug.max_value < 1 + 1e-6', 'np.average(heatmaps_aug.get_arr()[0, :]) < 0.05', 'np.average(heatmaps_aug.get_arr()[-1:, :]) < 0.05', 'np.average(heatmaps_aug.get_arr()[:, 0]) < 0.05', '0.8 < np.average(heatmaps_aug.get_arr()[2:6, 2:10]) < 1 + 1e-6', 'len(kpsoi_aug.keypoints) == 2', 'kpsoi_aug.shape == (8, 12, 3)', 'np.allclose(kpsoi_aug.keypoints[0].x, 1.5)', 'np.allclose(kpsoi_aug.keypoints[0].y, 4)', 'np.allclose(kpsoi_aug.keypoints[1].x, 6)', 'np.allclose(kpsoi_aug.keypoints[1].y, 2)', 'len(kpsoi_aug.keypoints) == 2', 'kpsoi_aug.shape == (8, 24)', 'np.allclose(kpsoi_aug.keypoints[0].x, 3)', 'np.allclose(kpsoi_aug.keypoints[0].y, 4)', 'np.allclose(kpsoi_aug.keypoints[1].x, 12)', 'np.allclose(kpsoi_aug.keypoints[1].y, 2)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
839,aleju,kontakt@ajung.name,2018-12-09 17:24:33+01:00,2cb3944027efb76c9fdd7a5ace479c0a5acc5834,https://github.com/aleju/imgaug/commit/2cb3944027efb76c9fdd7a5ace479c0a5acc5834,Extend test for Pad,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed.shape == (10, 24)', 'observed.arr_0to1.shape == (10, 6, 1)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.arr_0to1[..., 0], heatmaps_arr_small_padded)', 'observed.shape == (6, 16)', 'observed.arr_0to1.shape == (6, 4, 1)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(', 'kpsoi_aug.shape == (10, 8, 3)', 'len(kpsoi_aug.keypoints) == 2', 'np.allclose(kpsoi_aug.keypoints[0].x, 4+1)', 'np.allclose(kpsoi_aug.keypoints[0].y, 2+2)', 'np.allclose(kpsoi_aug.keypoints[1].x, 4+3)', 'np.allclose(kpsoi_aug.keypoints[1].y, 2+0)', 'kpsoi_aug.shape == (4, 4, 3)', 'len(kpsoi_aug.keypoints) == 2', 'np.allclose(kpsoi_aug.keypoints[0].x, ((4+1)/8)*4)', 'np.allclose(kpsoi_aug.keypoints[0].y, ((2+2)/10)*4)', 'np.allclose(kpsoi_aug.keypoints[1].x, ((4+3)/8)*4)', 'np.allclose(kpsoi_aug.keypoints[1].y, ((2+0)/10)*4)', 'observed.shape == (12, 24)', 'observed.arr_0to1.shape == (12, 6, 1)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.arr_0to1[..., 0], heatmaps_arr_small_padded)', 'observed.shape == (6, 16)', 'observed.arr_0to1.shape == (6, 4, 1)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(', 'kpsoi_aug.shape == (10, 8, 3)', 'len(kpsoi_aug.keypoints) == 2', 'np.allclose(kpsoi_aug.keypoints[0].x, 4+1)', 'np.allclose(kpsoi_aug.keypoints[0].y, 2+2)', 'np.allclose(kpsoi_aug.keypoints[1].x, 4+3)', 'np.allclose(kpsoi_aug.keypoints[1].y, 2+0)', 'kpsoi_aug.shape == (4, 4, 3)', 'len(kpsoi_aug.keypoints) == 2', 'np.allclose(kpsoi_aug.keypoints[0].x, ((4+1)/8)*4)', 'np.allclose(kpsoi_aug.keypoints[0].y, ((2+2)/10)*4)', 'np.allclose(kpsoi_aug.keypoints[1].x, ((4+3)/8)*4)', 'np.allclose(kpsoi_aug.keypoints[1].y, ((2+0)/10)*4)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
840,aleju,kontakt@ajung.name,2018-12-09 19:39:01+01:00,b18e229ac708ed99ab26498b2c7da996af8c7701,https://github.com/aleju/imgaug/commit/b18e229ac708ed99ab26498b2c7da996af8c7701,Remove TODO,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
841,aleju,kontakt@ajung.name,2018-12-09 19:39:19+01:00,2e0c265e2cc22ffca08c5cfb7ca86d12d1b57cea,https://github.com/aleju/imgaug/commit/2e0c265e2cc22ffca08c5cfb7ca86d12d1b57cea,Add height/width asserts to heatmap init,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
842,aleju,kontakt@ajung.name,2018-12-09 19:39:38+01:00,e3eadcd8342e07ead5f860804d8eb3ed6c5449a1,https://github.com/aleju/imgaug/commit/e3eadcd8342e07ead5f860804d8eb3ed6c5449a1,Extend test for Crop,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed.shape == (4, 8)', 'observed.arr_0to1.shape == (4, 4, 1)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.arr_0to1[..., 0], heatmaps_arr_small_cropped)', 'observed.shape == (6, 16)', 'observed.arr_0to1.shape == (6, 8, 1)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(', 'kpsoi_aug.shape == (9, 10, 3)', 'len(kpsoi_aug.keypoints) == 2', 'np.allclose(kpsoi_aug.keypoints[0].x, 3-4)', 'np.allclose(kpsoi_aug.keypoints[0].y, 6-1)', 'np.allclose(kpsoi_aug.keypoints[1].x, 8-4)', 'np.allclose(kpsoi_aug.keypoints[1].y, 5-1)', 'kpsoi_aug.shape == (14, 14, 3)', 'len(kpsoi_aug.keypoints) == 2', 'np.allclose(kpsoi_aug.keypoints[0].x, ((3-4)/10)*14)', 'np.allclose(kpsoi_aug.keypoints[0].y, ((6-1)/9)*14)', 'np.allclose(kpsoi_aug.keypoints[1].x, ((8-4)/10)*14)', 'np.allclose(kpsoi_aug.keypoints[1].y, ((5-1)/9)*14)', 'observed.shape == (8, 16)', 'observed.arr_0to1.shape == (4, 6, 1)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.arr_0to1[..., 0], heatmaps_arr_small_cropped)', 'observed.shape == (16, 32)', 'observed.arr_0to1.shape == (8, 12, 1)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(', 'kpsoi_aug.shape == (4, 18, 3)', 'len(kpsoi_aug.keypoints) == 2', 'np.allclose(kpsoi_aug.keypoints[0].x, 12-2)', 'np.allclose(kpsoi_aug.keypoints[0].y, 10-4)', 'np.allclose(kpsoi_aug.keypoints[1].x, 8-2)', 'np.allclose(kpsoi_aug.keypoints[1].y, 12-4)', 'kpsoi_aug.shape == (16, 20, 3)', 'len(kpsoi_aug.keypoints) == 2', 'np.allclose(kpsoi_aug.keypoints[0].x, ((12-2)/18)*20)', 'np.allclose(kpsoi_aug.keypoints[0].y, ((10-4)/4)*16)', 'np.allclose(kpsoi_aug.keypoints[1].x, ((8-2)/18)*20)', 'np.allclose(kpsoi_aug.keypoints[1].y, ((12-4)/4)*16)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
843,aleju,kontakt@ajung.name,2018-12-09 20:27:18+01:00,1dc39f1aec0769cd411ff2900dcba5687a851a41,https://github.com/aleju/imgaug/commit/1dc39f1aec0769cd411ff2900dcba5687a851a41,Extend test for PiecewiseAffine,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['kpsoi_aug.shape == (14, 14, 3)', 'np.allclose(kpsoi_aug.keypoints[0].x, 5)', 'np.allclose(kpsoi_aug.keypoints[0].y, 3)', 'np.allclose(kpsoi_aug.keypoints[1].x, 3)', 'np.allclose(kpsoi_aug.keypoints[1].y, 8)', 'hm_aug.shape == (60, 80, 3)', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', '(same / img_aug_mask.size) >= 0.98', 'hm_aug.shape == (60, 80, 3)', 'hm_aug.arr_0to1.shape == (30, 40+10, 1)', '(same / img_aug_mask.size) >= 0.9  # seems to be 0.948 actually', 'kpsoi_aug.shape == (24, 30, 3)', 'np.max(patch1) > 150', 'np.max(patch2) > 150', 'np.average(img_kps_aug) < 40']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
844,aleju,kontakt@ajung.name,2018-12-09 20:42:58+01:00,9a3ea42c20ba32da44635f1b90bf5db5d64ecf39,https://github.com/aleju/imgaug/commit/9a3ea42c20ba32da44635f1b90bf5db5d64ecf39,Add test for ChannelShuffle,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['False', 'all(seen)', 'np.array_equal(img_aug, img)', 'False', 'all(seen)', 'isinstance(aug.p, iap.Binomial)', 'isinstance(aug.p.p, iap.Deterministic)', 'np.allclose(aug.p.p.value, 0.9)', 'aug.channels == [0, 2]', 'aug.get_parameters()[0] == aug.p', 'aug.get_parameters()[1] == aug.channels', 'hm_aug.shape == (4, 4, 3)', 'hm_aug.arr_0to1.shape == (1, 3, 1)', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'kpsoi_aug.shape == (10, 10, 3)', 'np.allclose(kpsoi_aug.keypoints[0].x, 3)', 'np.allclose(kpsoi_aug.keypoints[0].y, 1)', 'np.allclose(kpsoi_aug.keypoints[1].x, 2)', 'np.allclose(kpsoi_aug.keypoints[1].y, 4)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
845,aleju,kontakt@ajung.name,2018-12-10 17:33:54+01:00,e92ccc62c0a112073093e713f763b22a06330656,https://github.com/aleju/imgaug/commit/e92ccc62c0a112073093e713f763b22a06330656,"Add to readme ChannelShuffle, update Rot90, fix heatmap sizes in overview",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
846,aleju,kontakt@ajung.name,2018-12-10 19:57:10+01:00,e893c561bcebd620fab1c34e07b1dbf28f7ad43f,https://github.com/aleju/imgaug/commit/e893c561bcebd620fab1c34e07b1dbf28f7ad43f,Fix formatting of overview table,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
847,aleju,kontakt@ajung.name,2018-12-10 20:04:28+01:00,6b617eacddae79a28cb248b82fb54e06f1bdd3c6,https://github.com/aleju/imgaug/commit/6b617eacddae79a28cb248b82fb54e06f1bdd3c6,Improve feature list,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
848,aleju,kontakt@ajung.name,2018-12-10 21:34:53+01:00,0b0125d29003981709bdb8230170c851367a3995,https://github.com/aleju/imgaug/commit/0b0125d29003981709bdb8230170c851367a3995,"Improve gifs and gif table design, fix gif synchronization problems",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
849,aleju,kontakt@ajung.name,2018-12-14 15:57:26+01:00,fc257bb06ac1fda7f6fc4bcf9232997309a48996,https://github.com/aleju/imgaug/commit/fc257bb06ac1fda7f6fc4bcf9232997309a48996,"Fix MotionBlur causing error for k=(a, b) #215",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['in str(exc)', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
850,aleju,kontakt@ajung.name,2018-12-15 10:07:45+01:00,033f4968c6103ec65ed2c22f8c08ebd36abf7b6e,https://github.com/aleju/imgaug/commit/033f4968c6103ec65ed2c22f8c08ebd36abf7b6e,Update readthedocs config to v2,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
851,aleju,kontakt@ajung.name,2018-12-16 10:11:03+01:00,9f1b779401775c7d4a18394632174e10dbcbbf40,https://github.com/aleju/imgaug/commit/9f1b779401775c7d4a18394632174e10dbcbbf40,Increase version to 0.2.7,3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
852,aleju,kontakt@ajung.name,2018-12-16 12:58:52+01:00,f0a7432205975e4435c81894a63bb147af67c476,https://github.com/aleju/imgaug/commit/f0a7432205975e4435c81894a63bb147af67c476,Improve setup routines,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
853,aleju,kontakt@ajung.name,2018-12-16 14:26:50+01:00,82b9c5f990fe9edba38a39464e76c88a2b3fe01f,https://github.com/aleju/imgaug/commit/82b9c5f990fe9edba38a39464e76c88a2b3fe01f,Improve descriptions in setup.py,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
854,aleju,kontakt@ajung.name,2018-12-14 15:40:11+01:00,7b66884559aac886c971d1846255182b1604ec8f,https://github.com/aleju/imgaug/commit/7b66884559aac886c971d1846255182b1604ec8f,"Improve dtype support of arithmetic augmenters

This commit improves the support of dtypes other
than uint8 in arithmetic augmenters.
- Mostly support uint8 to uint16, int8 to int32
  and float16 to float32 in arithmetic augmenters.
  (Not for JpegCompression. Unittests only for
  uint8.)
- Rewrite Add, AddElementwise, Multiply and
  MultiplyElementwise as more efficient loops
  (performance gains might be lost though due to
  dtype conversions).
- Make dtype conversions in Add, AddElementwise,
  Multiply and MultiplyElementwise more tight than
  before (e.g. not uint8 straight to int32 unless
  necessary).
- Drop dependency of six for arithmetic augmenters.
- Use imgaug.derive_random_states() instead of manual
  random state creation in arithmetic augmenters.
- Introduce new dtype-related helper functions.

Other changes:
- Introduce min/max constants for seeds used during
  the creation of new random states.
- Make weather augmenter tests more tolerant, as they
  seemed to error otherwise.",7,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['20 < np.average(img_aug) < 250', 'np.max(img_aug) > 150', '50 < np.average(img_aug) < 255', '0.01 < np.average(img_aug) < 100', 'np.max(img_aug) > 100']",[],[],[],[],[],[],[],[],[],[],[],[],"['50 < np.average(img_aug) < 240', 'np.max(img_aug) > 200', '100 < np.average(img_aug) < 255', '1.0 < np.average(img_aug) < 50', 'np.max(img_aug) > 200']",[],[],[],[],[],[],[],[],[],[],[],[]
855,aleju,kontakt@ajung.name,2018-12-17 15:35:37+01:00,a17a7d615b4e75b7200cc0ac6ceca652e4f0067b,https://github.com/aleju/imgaug/commit/a17a7d615b4e75b7200cc0ac6ceca652e4f0067b,Simplify loop in GaussianBlur,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
856,aleju,kontakt@ajung.name,2018-12-17 15:39:04+01:00,b374fdddb8f46b0ffeff2b98eb70f248e0c6d8f7,https://github.com/aleju/imgaug/commit/b374fdddb8f46b0ffeff2b98eb70f248e0c6d8f7,Simplify loop in AverageBlur,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
857,aleju,kontakt@ajung.name,2018-12-17 15:39:54+01:00,441c91d3064792375e42d48ae5bec83a7bd9ef7e,https://github.com/aleju/imgaug/commit/441c91d3064792375e42d48ae5bec83a7bd9ef7e,Improve random state handling in AverageBlur,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
858,aleju,kontakt@ajung.name,2018-12-17 15:40:47+01:00,74a06874fe44f138a4c598e255acd39d46b0836c,https://github.com/aleju/imgaug/commit/74a06874fe44f138a4c598e255acd39d46b0836c,Limit image overwrites in GaussianBlur,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
859,aleju,kontakt@ajung.name,2018-12-17 15:43:28+01:00,544e915d11e1409c48943bd28759467bfad47cfd,https://github.com/aleju/imgaug/commit/544e915d11e1409c48943bd28759467bfad47cfd,Simplify loop in MedianBlur,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
860,aleju,kontakt@ajung.name,2018-12-17 15:44:55+01:00,35adbf71e5c28ad360227a11f765c6c115b35f77,https://github.com/aleju/imgaug/commit/35adbf71e5c28ad360227a11f765c6c115b35f77,Improve code styling,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
861,aleju,kontakt@ajung.name,2018-12-17 15:56:36+01:00,f2e7c6faa0e5f1e2d44858752ca08f934c452141,https://github.com/aleju/imgaug/commit/f2e7c6faa0e5f1e2d44858752ca08f934c452141,Improve loop in BilateralBlur,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
862,aleju,kontakt@ajung.name,2018-12-17 21:01:02+01:00,5b9d64478e6441b31ac4733fd7025a814b546880,https://github.com/aleju/imgaug/commit/5b9d64478e6441b31ac4733fd7025a814b546880,Add center_value to get_value_range_of_dtype(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
863,aleju,kontakt@ajung.name,2018-12-17 21:01:55+01:00,926777aa9584f447542c30dd6e7bd64d770f5cf2,https://github.com/aleju/imgaug/commit/926777aa9584f447542c30dd6e7bd64d770f5cf2,Improve and test dtype support in GaussianBlur,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(image_aug == image)', 'np.all(image_aug == image)', 'np.all(image_aug == image)', 'np.all(image_aug == expected)', 'np.max(diff) <= 2', 'np.max(diff) < 1.0', 'np.all(image_aug == expected)', 'np.max(diff) <= 2', 'np.max(diff) < 1.0', 'np.max(diff) <= 2**(1 + np.dtype(dtype).itemsize)', 'np.max(diff) < 2**(1 + np.dtype(dtype).itemsize)', 'in str(exc)', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
864,aleju,kontakt@ajung.name,2018-12-18 15:59:07+01:00,c54fb9979a6f82d69e9d517ad6e37cca32ebf501,https://github.com/aleju/imgaug/commit/c54fb9979a6f82d69e9d517ad6e37cca32ebf501,Add comment,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
865,aleju,kontakt@ajung.name,2018-12-18 16:06:28+01:00,a160264adc83b5bad9aa271976274e925d6f55f2,https://github.com/aleju/imgaug/commit/a160264adc83b5bad9aa271976274e925d6f55f2,Rework Invert dtype support and add tests,3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_min_aug.dtype == np.dtype(dtype)', 'image_center_aug.dtype == np.dtype(dtype)', 'image_max_aug.dtype == np.dtype(dtype)', 'np.all(image_min_aug == image_min)', 'np.all(image_max_aug == image_max)', 'np.array_equal(image_min_aug, image_min)', 'np.array_equal(image_center_aug, image_center)', 'np.array_equal(image_max_aug, image_max)', 'np.allclose(image_min_aug, image_min)', 'np.allclose(image_center_aug, image_center)', 'np.allclose(image_max_aug, image_max)', 'image_min_aug.dtype == np.dtype(dtype)', 'image_center_aug.dtype == np.dtype(dtype)', 'image_max_aug.dtype == np.dtype(dtype)', 'np.all(image_min_aug == image_max)', 'np.all(image_max_aug == image_min)', 'np.array_equal(image_min_aug, image_max)', 'np.allclose(image_center_aug, image_center, atol=1.0+1e-4, rtol=0)', 'np.array_equal(image_max_aug, image_min)', 'np.allclose(image_min_aug, image_max)', 'np.allclose(image_center_aug, image_center)', 'np.allclose(image_max_aug, image_min)', 'image_min_aug.dtype == np.dtype(dtype)', 'image_center_aug.dtype == np.dtype(dtype)', 'image_max_aug.dtype == np.dtype(dtype)', 'np.all(image_min_aug == 1)', 'np.all(image_max_aug == 1)', 'np.array_equal(image_min_aug, image_max)', 'np.allclose(image_center_aug, image_center, atol=1.0+1e-4, rtol=0)', 'np.array_equal(image_max_aug, image_min)', 'np.allclose(image_min_aug, image_max)', 'np.allclose(image_center_aug, image_center)', 'np.allclose(image_max_aug, image_min)', 'image_min_aug.dtype == np.dtype(dtype)', 'image_center_aug.dtype == np.dtype(dtype)', 'image_max_aug.dtype == np.dtype(dtype)', 'not np.any(image_min_aug == 1)', 'not np.any(image_max_aug == 1)', 'np.array_equal(image_min_aug, image_max)', 'np.allclose(image_center_aug, image_center, atol=1.0+1e-4, rtol=0)', 'np.array_equal(image_max_aug, image_min)', 'np.allclose(image_min_aug, image_max)', 'np.allclose(image_center_aug, image_center, atol=0.001*np.finfo(dtype).max)', 'np.allclose(image_center_aug, image_center)', 'np.allclose(image_max_aug, image_min)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
866,aleju,kontakt@ajung.name,2018-12-18 16:55:41+01:00,bde49c72fe202b56aeea5e3e7b7d6eec129f4bed,https://github.com/aleju/imgaug/commit/bde49c72fe202b56aeea5e3e7b7d6eec129f4bed,Improve Add dtype support and add tests,3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value + 1)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value + 21)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value - 1)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value + 1)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value)', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value + 1)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value + 21)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, max_value - 1)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, max_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, max_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value + 1)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value)', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-10 - 1e-2 < image_aug, image_aug < 10 + 1e-2))', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-10 - 1e-2 < image_aug, image_aug < 10 + 1e-2))', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-10 - 1e-2 < image_aug, image_aug < 10 + 1e-2))', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-10 - 1e-2 < image_aug, image_aug < 10 + 1e-2))']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
867,aleju,kontakt@ajung.name,2018-12-18 17:05:02+01:00,3250fa2acce506e032bae7441adc8780f312b25a,https://github.com/aleju/imgaug/commit/3250fa2acce506e032bae7441adc8780f312b25a,Improve AddElementwise dtype support and add tests,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value + 1)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value + 21)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value - 1)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value + 1)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value)', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value + 1)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value + 21)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, max_value - 1)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, max_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, max_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value + 1)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value)', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-10 - 1e-2 < image_aug, image_aug < 10 + 1e-2))', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-10 - 1e-2 < image_aug, image_aug < 10 + 1e-2))', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-10 - 1e-2 < image_aug, image_aug < 10 + 1e-2))', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-10 - 1e-2 < image_aug, image_aug < 10 + 1e-2))']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
868,aleju,kontakt@ajung.name,2018-12-18 18:05:25+01:00,5392eb9253c65784dbacb16ffc06b9395d1c44a6,https://github.com/aleju/imgaug/commit/5392eb9253c65784dbacb16ffc06b9395d1c44a6,Improve dtype support in Multiply and add tests,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 10)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 100)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 5)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 0)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 0)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == -10)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == int(center_value))', 'image_aug.dtype.type == dtype', 'np.all(image_aug == int(1.2 * int(center_value)))', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 0)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value)', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(5 <= image_aug, image_aug <= 15))', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(5 <= image_aug, image_aug <= 15))', 'len(np.unique(image_aug)) > 1', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) > 1', 'image_aug.dtype.type == dtype', '_allclose(image_aug, 10.0)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, 20.0)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, 0.0)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, 0.5*max_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, max_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, 0.0)', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-100 - 1e-1 < image_aug, image_aug < 100 + 1e-1))', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-100 - 1e-1 < image_aug, image_aug < 100 + 1e-1))', 'len(np.unique(image_aug))', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-100 - 1e-1 < image_aug, image_aug < 100 + 1e-1))', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-100 - 1e-1 < image_aug, image_aug < 100 + 1e-1))', 'len(np.unique(image_aug))']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
869,aleju,kontakt@ajung.name,2018-12-18 18:15:54+01:00,f271055641d19cf58997f518b36f768073743e36,https://github.com/aleju/imgaug/commit/f271055641d19cf58997f518b36f768073743e36,Improve tests for Add and AddElementwise,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(np.unique(image_aug)) > 1', 'len(np.unique(image_aug)) > 1', 'np.allclose(image_aug[1:, :, 0], image_aug[:-1, :, 0])', 'np.allclose(image_aug[..., 0], image_aug[..., 1])', 'not np.allclose(image_aug[:, :, 1:], image_aug[:, :, :-1])', 'np.allclose(image_aug[1:, :, 0], image_aug[:-1, :, 0])', 'np.allclose(image_aug[..., 0], image_aug[..., 1])', 'not np.allclose(image_aug[:, :, 1:], image_aug[:, :, :-1])', 'len(np.unique(image_aug)) > 1', 'np.all(image_aug[..., 0] == image_aug[..., 1])', 'len(np.unique(image_aug)) > 1', 'len(np.unique(image_aug)) > 1', 'np.all(image_aug[..., 0] == image_aug[..., 1])', 'len(np.unique(image_aug)) > 1', 'not np.allclose(image_aug[1:, :, 0], image_aug[:-1, :, 0])', 'np.allclose(image_aug[..., 0], image_aug[..., 1])', 'not np.allclose(image_aug[:, :, 1:], image_aug[:, :, :-1])', 'not np.allclose(image_aug[1:, :, 0], image_aug[:-1, :, 0])', 'np.allclose(image_aug[..., 0], image_aug[..., 1])', 'not np.allclose(image_aug[:, :, 1:], image_aug[:, :, :-1])']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
870,aleju,kontakt@ajung.name,2018-12-18 18:20:27+01:00,c5e6b6dda9eddc6d2364d0144d2a7023ae9019a8,https://github.com/aleju/imgaug/commit/c5e6b6dda9eddc6d2364d0144d2a7023ae9019a8,"Improve tests for Add, Multiply",1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(np.unique(image_aug)) == 1', 'len(np.unique(image_aug)) == 1', 'np.allclose(image_aug[1:, :, 0], image_aug[:-1, :, 0])', 'np.allclose(image_aug[..., 0], image_aug[..., 1])', 'not np.allclose(image_aug[:, :, 1:], image_aug[:, :, :-1])', 'np.allclose(image_aug[1:, :, 0], image_aug[:-1, :, 0])', 'np.allclose(image_aug[..., 0], image_aug[..., 1])', 'not np.allclose(image_aug[:, :, 1:], image_aug[:, :, :-1])', 'len(np.unique(image_aug)) == 1', 'len(np.unique(image_aug)) == 1']",[],[],[],[],[],[],[],[],[],[],[],[],"['len(np.unique(image_aug))', 'len(np.unique(image_aug))']",[],[],[],[],[],[],[],[],[],[],[],[]
871,aleju,kontakt@ajung.name,2018-12-18 18:34:09+01:00,376efe7cad53e1e51a442ae089388fd11166ab22,https://github.com/aleju/imgaug/commit/376efe7cad53e1e51a442ae089388fd11166ab22,Improve dtype support of MultiplyElemenwise and add tests,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 10)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 100)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 5)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 0)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 0)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == -10)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == int(center_value))', 'image_aug.dtype.type == dtype', 'np.all(image_aug == int(1.2 * int(center_value)))', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 0)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value)', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(5 <= image_aug, image_aug <= 15))', 'len(np.unique(image_aug)) > 1', 'np.all(image_aug[..., 0] == image_aug[..., 1])', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(5 <= image_aug, image_aug <= 15))', 'len(np.unique(image_aug)) > 1', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) > 1', 'np.all(image_aug[..., 0] == image_aug[..., 1])', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) > 1', 'image_aug.dtype.type == dtype', '_allclose(image_aug, 10.0)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, 20.0)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, 0.0)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, 0.5*max_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, max_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, 0.0)', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-100 - 1e-1 < image_aug, image_aug < 100 + 1e-1))', 'not np.allclose(image_aug[1:, :, 0], image_aug[:-1, :, 0])', 'np.allclose(image_aug[..., 0], image_aug[..., 1])', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-100 - 1e-1 < image_aug, image_aug < 100 + 1e-1))', 'not np.allclose(image_aug[:, :, 1:], image_aug[:, :, :-1])', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-100 - 1e-1 < image_aug, image_aug < 100 + 1e-1))', 'not np.allclose(image_aug[1:, :, 0], image_aug[:-1, :, 0])', 'np.allclose(image_aug[..., 0], image_aug[..., 1])', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-100 - 1e-1 < image_aug, image_aug < 100 + 1e-1))', 'not np.allclose(image_aug[:, :, 1:], image_aug[:, :, :-1])']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
872,aleju,kontakt@ajung.name,2018-12-18 22:15:15+01:00,d4001ba72cba24b8a6c2be7545f7a04f10f3745f,https://github.com/aleju/imgaug/commit/d4001ba72cba24b8a6c2be7545f7a04f10f3745f,Improve ReplacementElementwise dtype support and add tests; disallow uint64 in clip_to_dtype_value_range(),3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 1)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 2)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value)', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(1 <= image_aug, image_aug <= 10))', 'len(np.unique(image_aug)) > 1', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(1 <= image_aug, image_aug <= 10))', 'len(np.unique(image_aug)) > 1', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(0 <= image_aug, image_aug <= 10))', 'len(np.unique(image_aug)) > 2', 'image_aug.dtype.type == dtype', 'np.allclose(image_aug, 1.0)', 'image_aug.dtype.type == dtype', 'np.allclose(image_aug, 2.0)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, max_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value)', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(1 <= image_aug, image_aug <= 10))', 'not np.allclose(image_aug[1:, :], image_aug[:-1, :], atol=0.01)', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(1 <= image_aug, image_aug <= 10))', 'not np.allclose(image_aug[1:, :], image_aug[:-1, :], atol=0.01)', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(0 <= image_aug, image_aug <= 10))', 'not np.allclose(image_aug[:, :, 1:], image_aug[:, :, :-1], atol=0.01)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
873,aleju,kontakt@ajung.name,2018-12-19 11:06:55+01:00,e98ca45d48a9f085a60fd7fd3ad51e370c388c27,https://github.com/aleju/imgaug/commit/e98ca45d48a9f085a60fd7fd3ad51e370c388c27,Add tests for dtype support in AverageBlur + gate dtypes,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.type == np.bool_', 'image_aug.dtype.type == dtype', 'image_aug.dtype.type == dtype', 'np.allclose(image_aug, image)', 'image_aug.dtype.type == np.bool_', 'image_aug.dtype.type == dtype', 'image_aug.dtype.type == dtype', 'image_aug.dtype.type == np.bool_', 'image_aug.dtype.type == dtype', 'image_aug.dtype.type == dtype', 'image_aug.dtype.type == dtype', 'image_aug.dtype.type == dtype', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == image)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == image)', 'image_aug.dtype.type == dtype', 'np.allclose(image_aug, image)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == expected)', 'image_aug.dtype.type == dtype', 'np.max(diff) <= 2', 'image_aug.dtype.type == dtype', 'np.max(diff) < 1.0', 'image_aug.dtype.type == dtype', 'np.max(diff) <= 2**(1 + np.dtype(dtype).itemsize)', 'image_aug.dtype.type == dtype', 'np.max(diff) < 2**(1 + np.dtype(dtype).itemsize)', 'in str(exc)', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],['np.all(image_aug == image)'],[],[],[],[],[],[],[],[],[],[],[],[]
874,aleju,kontakt@ajung.name,2018-12-19 13:18:26+01:00,5cbe0da56b1883f9bd9d31336e5218e4f3f2d4ce,https://github.com/aleju/imgaug/commit/5cbe0da56b1883f9bd9d31336e5218e4f3f2d4ce,Improve dtype support in GaussianBlur,3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['in str(exc)'],[],[],[],[],[],[],[],[],[],[],[],[],['in str(exc)'],[],[],[],[],[],[],[],[],[],[],[],[]
875,aleju,kontakt@ajung.name,2018-12-19 13:36:47+01:00,e12d86d75eba0fae8592a8b086806155b320cb60,https://github.com/aleju/imgaug/commit/e12d86d75eba0fae8592a8b086806155b320cb60,Improve dtype support in AverageBlur,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
876,aleju,kontakt@ajung.name,2018-12-19 15:09:31+01:00,d926a15aab8cefdc6ac34a70806824cffc783a23,https://github.com/aleju/imgaug/commit/d926a15aab8cefdc6ac34a70806824cffc783a23,Improve dtype support in Convolve,3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image.dtype.type == np.bool_', 'np.all(image_aug == image)', 'image.dtype.type == dtype', 'np.all(image_aug == image)', 'image.dtype.type == dtype', 'np.allclose(image_aug, image)', 'image.dtype.type == np.bool_', 'np.all(image_aug == expected)', 'image_aug.dtype.type == dtype', 'np.max(diff) <= 2', 'image_aug.dtype.type == dtype', 'np.max(diff) < 1.0', 'image_aug.dtype.type == dtype', 'np.max(diff) <= 2', 'image_aug.dtype.type == dtype', 'np.max(diff) < 1.0', 'in str(exc)', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
877,aleju,kontakt@ajung.name,2018-12-19 15:12:07+01:00,3f92100ce3255846a88145b0d1ce1caed099ab65,https://github.com/aleju/imgaug/commit/3f92100ce3255846a88145b0d1ce1caed099ab65,Add dtype support comments,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
878,aleju,kontakt@ajung.name,2018-12-19 19:43:59+01:00,b2377a331e8680931fd103f16b17748e52be4f99,https://github.com/aleju/imgaug/commit/b2377a331e8680931fd103f16b17748e52be4f99,Fix dtype preservation test,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
879,Alexander Jung,alexander.jung@zenuity.com,2018-12-20 16:54:55+01:00,99765338a129cc025c3c8caf163eb9277568e262,https://github.com/aleju/imgaug/commit/99765338a129cc025c3c8caf163eb9277568e262,Add some doc regarding dtype support,11,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
880,Alexander Jung,alexander.jung@zenuity.com,2018-12-20 17:14:45+01:00,cecaa1b03beff6d834553ba5d91dd3490b67a2fa,https://github.com/aleju/imgaug/commit/cecaa1b03beff6d834553ba5d91dd3490b67a2fa,Add tests for dtype support in Fliplr & update doc,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(image_aug == expected)', 'np.array_equal(image_aug, expected)', 'np.allclose(image_aug, expected, atol=atol)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
881,Alexander Jung,alexander.jung@zenuity.com,2018-12-20 17:18:23+01:00,a01dfa1cbf9768f797d76738abca9d867a427700,https://github.com/aleju/imgaug/commit/a01dfa1cbf9768f797d76738abca9d867a427700,Rework loop in Fliplr,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
882,Alexander Jung,alexander.jung@zenuity.com,2018-12-20 17:20:00+01:00,5c2aee6f727af43e7fe610443d1bc5653ca17f18,https://github.com/aleju/imgaug/commit/5c2aee6f727af43e7fe610443d1bc5653ca17f18,Add tests for dtype support in Flipud & update doc,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(image_aug == expected)', 'np.array_equal(image_aug, expected)', 'np.allclose(image_aug, expected, atol=atol)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
883,Alexander Jung,alexander.jung@zenuity.com,2018-12-20 17:22:15+01:00,55ed49e45593fdb142d5b4dccb85d637f28885f9,https://github.com/aleju/imgaug/commit/55ed49e45593fdb142d5b4dccb85d637f28885f9,Rework loop in Flipud,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
884,Alexander Jung,alexander.jung@zenuity.com,2018-12-20 17:22:48+01:00,6f1fac59d83e7dea5426602b3fbac113674a2d78,https://github.com/aleju/imgaug/commit/6f1fac59d83e7dea5426602b3fbac113674a2d78,Add todo,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
885,Alexander Jung,alexander.jung@zenuity.com,2018-12-20 17:43:20+01:00,138c20640e47953d99dfcd8bb9f0ea17a9d6ba17,https://github.com/aleju/imgaug/commit/138c20640e47953d99dfcd8bb9f0ea17a9d6ba17,Add tests for dtype support in Noop & update doc,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(image_aug == image)', 'np.array_equal(image_aug, image)', 'np.all(image_aug == image)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
886,Alexander Jung,alexander.jung@zenuity.com,2018-12-20 17:44:22+01:00,8319f8bbd4b319e057a76c39f72d4c31f7df83b3,https://github.com/aleju/imgaug/commit/8319f8bbd4b319e057a76c39f72d4c31f7df83b3,Improve doc,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
887,Alexander Jung,alexander.jung@zenuity.com,2018-12-20 17:46:26+01:00,c743c3875ece988f00075d1f0c7182a91a993a46,https://github.com/aleju/imgaug/commit/c743c3875ece988f00075d1f0c7182a91a993a46,Improve dtype test for Noop,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.type == image.dtype.type', 'image_aug.dtype.type == dtype', 'image_aug.dtype.type == dtype']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
888,Alexander Jung,alexander.jung@zenuity.com,2018-12-20 17:47:23+01:00,93705ae7bc6c567a21463400aa3df693d08a266b,https://github.com/aleju/imgaug/commit/93705ae7bc6c567a21463400aa3df693d08a266b,Improve dtype test for Flipud,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.type == image.dtype.type', 'image_aug.dtype.type == dtype', 'image_aug.dtype.type == dtype']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
889,Alexander Jung,alexander.jung@zenuity.com,2018-12-20 17:48:07+01:00,74cfd2bcaea2c44cd7c6fe850b356a5c7d683804,https://github.com/aleju/imgaug/commit/74cfd2bcaea2c44cd7c6fe850b356a5c7d683804,Improve dtype test for Fliplr,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.type == image.dtype.type', 'image_aug.dtype.type == dtype', 'image_aug.dtype.type == dtype']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
890,Alexander Jung,alexander.jung@zenuity.com,2018-12-20 18:00:15+01:00,8c005ba9d893f559f3c30e2871d2bc244b7f85eb,https://github.com/aleju/imgaug/commit/8c005ba9d893f559f3c30e2871d2bc244b7f85eb,Add tests for dtype support in Sequential & update doc,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.type == image.dtype.type', 'np.all(image_aug == image)', 'image_aug.dtype.type == dtype', 'np.array_equal(image_aug, image)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == image)', 'image_aug.dtype.type == image.dtype.type', 'np.all(image_aug == expected)', 'image_aug.dtype.type == dtype', 'np.array_equal(image_aug, expected)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
891,Alexander Jung,alexander.jung@zenuity.com,2018-12-20 18:14:33+01:00,6e2198bff00991247d47b41b9a9903ca61c02913,https://github.com/aleju/imgaug/commit/6e2198bff00991247d47b41b9a9903ca61c02913,Add tests for dtype support in SomeOf & update doc,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.type == image.dtype.type', 'np.all(image_aug == image)', 'image_aug.dtype.type == dtype', 'np.array_equal(image_aug, image)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == image)', 'image_aug.dtype.type == image.dtype.type', 'any([np.all(image_aug == expected_i) for expected_i in expected])', 'image_aug.dtype.type == dtype', 'any([np.all(image_aug == expected_i) for expected_i in expected])', 'image_aug.dtype.type == dtype', 'any([np.all(image_aug == expected_i) for expected_i in expected])']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
892,Alexander Jung,alexander.jung@zenuity.com,2018-12-20 18:26:20+01:00,fa56b7bb4bef1b79e971a3ddea14de74852e4159,https://github.com/aleju/imgaug/commit/fa56b7bb4bef1b79e971a3ddea14de74852e4159,Add tests for dtype support in Sometimes & update doc,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.type == image.dtype.type', 'np.all(image_aug == image)', 'image_aug.dtype.type == dtype', 'np.array_equal(image_aug, image)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == image)', 'image_aug.dtype.type == image.dtype.type', 'False', 'all(seen)', 'image_aug.dtype.type == dtype', 'False', 'all(seen)', 'image_aug.dtype.type == dtype', 'False', 'all(seen)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
893,Alexander Jung,alexander.jung@zenuity.com,2018-12-20 18:36:22+01:00,2ad0674698d4bcee904c2468950f1611d4e625a8,https://github.com/aleju/imgaug/commit/2ad0674698d4bcee904c2468950f1611d4e625a8,Add tests for dtype support in WithChannels & update doc,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.type == image.dtype.type', 'np.all(image_aug == image)', 'image_aug.dtype.type == dtype', 'np.array_equal(image_aug, image)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == image)', 'image_aug.dtype.type == image.dtype.type', 'np.all(image_aug == expected)', 'image_aug.dtype.type == dtype', 'np.array_equal(image_aug, expected)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
894,Alexander Jung,alexander.jung@zenuity.com,2018-12-20 18:45:17+01:00,3f4ba261d5340a766af240222f1e36258ece78f6,https://github.com/aleju/imgaug/commit/3f4ba261d5340a766af240222f1e36258ece78f6,Add tests for dtype support in ChannelsShuffle & update doc,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.type == image.dtype.type', 'False', 'all(seen)', 'image_aug.dtype.type == dtype', 'False', 'all(seen)', 'image_aug.dtype.type == dtype', 'False', 'all(seen)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
895,Alexander Jung,alexander.jung@zenuity.com,2018-12-21 11:17:07+01:00,5570a826eb1b435874c8fa5a29c5a1840773dc72,https://github.com/aleju/imgaug/commit/5570a826eb1b435874c8fa5a29c5a1840773dc72,Allow None as callbacks in Lambda,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
896,Alexander Jung,alexander.jung@zenuity.com,2018-12-21 11:19:43+01:00,f6663a800b3b7c0a7b56ae23a4879c3b72600a48,https://github.com/aleju/imgaug/commit/f6663a800b3b7c0a7b56ae23a4879c3b72600a48,Allow None as callbacks in AssertLambda,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
897,Alexander Jung,alexander.jung@zenuity.com,2018-12-21 11:26:41+01:00,4dcc48d80c6d102c038bd89bee70ab050e78e228,https://github.com/aleju/imgaug/commit/4dcc48d80c6d102c038bd89bee70ab050e78e228,Add tests for dtype support in Lambda & update doc,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.type == image.dtype.type', 'np.all(image_aug == expected)', 'image_aug.dtype.type == dtype', 'np.array_equal(image_aug, expected)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
898,Alexander Jung,alexander.jung@zenuity.com,2018-12-21 11:34:09+01:00,e8002627d3ff5aad02b906c4555f3dde8e998222,https://github.com/aleju/imgaug/commit/e8002627d3ff5aad02b906c4555f3dde8e998222,Add default values for AssertLambda,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
899,Alexander Jung,alexander.jung@zenuity.com,2018-12-21 11:36:04+01:00,cc48deea94ce216bceea6cbc2af61530a234c13e,https://github.com/aleju/imgaug/commit/cc48deea94ce216bceea6cbc2af61530a234c13e,Add tests for dtype support in AssertLambda & update doc,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.type == image.dtype.type', 'np.all(image_aug == image)', 'image_aug.dtype.type == dtype', 'np.array_equal(image_aug, image)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == image)', 'got_exception', 'got_exception', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
900,Alexander Jung,alexander.jung@zenuity.com,2018-12-21 11:46:53+01:00,7b96fd0c0e829d8a250dfed57ae547d8695b41fa,https://github.com/aleju/imgaug/commit/7b96fd0c0e829d8a250dfed57ae547d8695b41fa,Add tests for dtype support in AssertShape & update doc,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.type == image.dtype.type', 'np.all(image_aug == image)', 'image_aug.dtype.type == dtype', 'np.array_equal(image_aug, image)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == image)', 'got_exception', 'got_exception', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
901,Alexander Jung,alexander.jung@zenuity.com,2018-12-21 21:26:26+01:00,befba9060ec49a2531b858d36944e930ee0b6e99,https://github.com/aleju/imgaug/commit/befba9060ec49a2531b858d36944e930ee0b6e99,Add tests for dtype support in imresize_many_images & update doc; add various other dtype docs,5,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_rs.dtype.type == image.dtype.type', 'np.all(image_rs == expected)', 'image_rs.dtype.type == dtype', 'np.all(image_rs == expected)', 'image_rs.dtype.type == dtype', 'np.allclose(image_rs, expected, rtol=0, atol=1e-8)', 'image_rs.dtype.type == image.dtype.type', 'np.all(image_rs == expected)', 'image_rs.dtype.type == dtype', 'np.all(diff < 2 * (1/255) * dynamic_range)', 'image_rs.dtype.type == dtype', 'np.allclose(image_rs, expected, rtol=0, atol=max(abs(value * 1e-6), 1e-5))']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
902,Alexander Jung,alexander.jung@zenuity.com,2018-12-22 10:31:54+01:00,448e9b00a1ab0c62ad66f3c81ffac0e3f0b8b783,https://github.com/aleju/imgaug/commit/448e9b00a1ab0c62ad66f3c81ffac0e3f0b8b783,Make get_value_range_of_dtype() faster and more robust,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
903,Alexander Jung,alexander.jung@zenuity.com,2018-12-22 10:32:22+01:00,3c321ef569bad75969b4f259f786f500b4aee46c,https://github.com/aleju/imgaug/commit/3c321ef569bad75969b4f259f786f500b4aee46c,Add tests for dtype support in pad() & update doc,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,73,0,0,0,0,0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['arr_pad.dtype == np.dtype(dtype)', 'arr_pad.dtype == np.dtype(dtype)', 'arr_pad.dtype == np.dtype(dtype)', 'arr_pad.dtype == np.dtype(dtype)', 'arr_pad.dtype == np.dtype(dtype)', 'arr_pad.dtype == np.dtype(dtype)', 'arr_pad.dtype == np.dtype(dtype)', 'arr_pad.dtype == np.dtype(dtype)', 'arr_pad.dtype == np.dtype(dtype)', 'arr_pad[0, 0] == v1', 'arr_pad[0, 1] == v2', 'arr_pad[0, 2] == v1', 'arr_pad.dtype == np.dtype(dtype)', 'arr_pad[0, 0] == v1', 'arr_pad[0, 1] == v1', 'arr_pad[0, 2] == v1', 'arr_pad.dtype == np.dtype(dtype)', 'arr_pad[0, 0] == 100', 'arr_pad[1, 0] == 75', 'arr_pad[2, 0] == 50', 'arr_pad[3, 0] == 25', 'arr_pad[4, 0] == 0', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad, arr)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[0, :], dtype([0, 0, 0]))', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[:, -1], dtype([0, 0, 0]))', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[-1, :], dtype([0, 0, 0]))', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[:, 0], dtype([0, 0, 0]))', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(np.max(arr_pad[0, :]), 0)', '_allclose(np.max(arr_pad[:, -2:]), 0)', '_allclose(np.max(arr_pad[-3, :]), 0)', '_allclose(np.max(arr_pad[:, :4]), 0)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[0, :], dtype([0.2, 0.2, 0.2]))', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[0, :], dtype([v1, v1, v1]))', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[0, :], dtype([v1, v1, v1]))', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[0, :, 0], dtype([0, 0, 0]))', '_allclose(arr_pad[0, :, 1], dtype([0, 0, 0]))', '_allclose(arr_pad[0, :, 2], dtype([0, 0, 0]))', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[0, 0], 0.5)', '_allclose(arr_pad[0, 1], 0.75)', '_allclose(arr_pad[0, 2], 0.50)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[0, 0], 0.4)', '_allclose(arr_pad[0, 1], 0.4)', '_allclose(arr_pad[0, 2], 0.4)', '_allclose(arr_pad[1, 0], 0.0)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[0, 0], 1.0)', '_allclose(arr_pad[1, 0], 0.9)', '_allclose(arr_pad[2, 0], 0.8)', '_allclose(arr_pad[3, 0], 0.7)', '_allclose(arr_pad[4, 0], 0.6)', 'arr_pad.shape == (3, 3)', 'arr_pad.dtype == np.dtype(dtype)', 'np.all(arr_pad == arr)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', 'np.all(arr_pad[0, :] == 0)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', 'np.all(arr_pad[0, :] == 1)']",[],[],[],[],[],[],[],[],[],[],[],[],"['arr_pad.dtype.type == dtype', 'arr_pad.dtype.type == dtype', 'arr_pad.dtype.type == dtype', 'arr_pad.dtype.type == dtype', 'arr_pad.dtype.type == dtype', 'arr_pad.dtype.type == dtype', 'arr_pad.dtype.type == dtype', 'arr_pad.dtype.type == dtype', 'arr_pad.dtype.type == dtype', 'arr_pad[0, 0] == 128', 'arr_pad[0, 1] == 200', 'arr_pad[0, 2] == 128', 'arr_pad.dtype.type == dtype', 'arr_pad[0, 0] == 123', 'arr_pad[0, 1] == 123', 'arr_pad[0, 2] == 123', 'arr_pad.dtype.type == dtype', 'arr_pad[0, 0] == 200', 'arr_pad[1, 0] == 175', 'arr_pad[2, 0] == 150', 'arr_pad[3, 0] == 125', 'arr_pad[4, 0] == 100', 'arr_pad.dtype.type == dtype', 'np.allclose(arr_pad, arr)', 'arr_pad.dtype.type == dtype', 'np.allclose(arr_pad[0, :], dtype([0, 0, 0]))', 'arr_pad.dtype.type == dtype', 'np.allclose(arr_pad[:, -1], dtype([0, 0, 0]))', 'arr_pad.dtype.type == dtype', 'np.allclose(arr_pad[-1, :], dtype([0, 0, 0]))', 'arr_pad.dtype.type == dtype', 'np.allclose(arr_pad[:, 0], dtype([0, 0, 0]))', 'arr_pad.dtype.type == dtype', '0 - 1e-6 < np.max(arr_pad[0, :]) < 0 + 1e-6', '0 - 1e-6 < np.max(arr_pad[:, -2:]) < 0 + 1e-6', '0 - 1e-6 < np.max(arr_pad[-3, :]) < 0 + 1e-6', '0 - 1e-6 < np.max(arr_pad[:, :4]) < 0 + 1e-6', 'arr_pad.dtype.type == dtype', 'np.allclose(arr_pad[0, :], dtype([0.2, 0.2, 0.2]))', 'arr_pad.dtype.type == dtype', 'np.allclose(arr_pad[0, :, 0], dtype([0, 0, 0]))', 'np.allclose(arr_pad[0, :, 1], dtype([0, 0, 0]))', 'np.allclose(arr_pad[0, :, 2], dtype([0, 0, 0]))', 'arr_pad.dtype.type == dtype', '0.50 - 1e-6 < arr_pad[0, 0] < 0.50 + 1e-6', '0.75 - 1e-6 < arr_pad[0, 1] < 0.75 + 1e-6', '0.50 - 1e-6 < arr_pad[0, 2] < 0.50 + 1e-6', 'arr_pad.dtype.type == dtype', '0.4 - 1e-6 < arr_pad[0, 0] < 0.4 + 1e-6', '0.4 - 1e-6 < arr_pad[0, 1] < 0.4 + 1e-6', '0.4 - 1e-6 < arr_pad[0, 2] < 0.4 + 1e-6', '0.0 - 1e-6 < arr_pad[1, 0] < 0.0 + 1e-6', 'arr_pad.dtype.type == dtype', '1.0 - 1e-6 < arr_pad[0, 0] < 1.0 + 1e-6', '0.9 - 1e-6 < arr_pad[1, 0] < 0.9 + 1e-6', '0.8 - 1e-6 < arr_pad[2, 0] < 0.8 + 1e-6', '0.7 - 1e-6 < arr_pad[3, 0] < 0.7 + 1e-6', '0.6 - 1e-6 < arr_pad[4, 0] < 0.6 + 1e-6']",[],[],[],[],[],[],[],[],[],[],[],[]
904,Alexander Jung,alexander.jung@zenuity.com,2018-12-22 11:30:18+01:00,7c71838e8dc6f8eb11d518cae1f76d184e76ebb6,https://github.com/aleju/imgaug/commit/7c71838e8dc6f8eb11d518cae1f76d184e76ebb6,Add tests for dtype support in pool() & update doc,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == np.dtype(dtype)', 'arr_pooled[0, 0] == int(func([0, 1, 4, 5]))', 'arr_pooled[0, 1] == int(func([2, 3, 6, 7]))', 'arr_pooled[1, 0] == int(func([8, 9, 12, 13]))', 'arr_pooled[1, 1] == int(func([10, 11, 14, 15]))', 'arr_pooled.shape == (2, 2, 3)', 'arr_pooled.dtype == np.dtype(dtype)', 'arr_pooled[0, 0, c] == int(func([0, 1, 4, 5])) + c', 'arr_pooled[0, 1, c] == int(func([2, 3, 6, 7])) + c', 'arr_pooled[1, 0, c] == int(func([8, 9, 12, 13])) + c', 'arr_pooled[1, 1, c] == int(func([10, 11, 14, 15])) + c', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == np.dtype(dtype)', 'np.all(arr_pooled == value)', 'arr_pooled.shape == (2, 2, 3)', 'arr_pooled.dtype == np.dtype(dtype)', 'np.all(arr_pooled == value)', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == np.dtype(dtype)', 'arr_pooled[0, 0] == func([0, 1, 4, 5])', 'arr_pooled[0, 1] == func([2, 3, 6, 7])', 'arr_pooled[1, 0] == func([8, 9, 12, 13])', 'arr_pooled[1, 1] == func([10, 11, 14, 15])', 'arr_pooled.shape == (2, 2, 3)', 'arr_pooled.dtype == np.dtype(dtype)', 'arr_pooled[0, 0, c] == func([0, 1, 4, 5]) + c', 'arr_pooled[0, 1, c] == func([2, 3, 6, 7]) + c', 'arr_pooled[1, 0, c] == func([8, 9, 12, 13]) + c', 'arr_pooled[1, 1, c] == func([10, 11, 14, 15]) + c', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == np.dtype(dtype)', '_allclose(arr_pooled, float(value))', 'arr_pooled.shape == (2, 2, 3)', 'arr_pooled.dtype == np.dtype(dtype)', '_allclose(arr_pooled, float(value))', 'arr_pooled.dtype == arr.dtype', 'np.all(arr_pooled == 0)', 'arr_pooled.dtype == arr.dtype', 'np.all(arr_pooled[0, 0] == 1)', 'np.all(arr_pooled[:, 1] == 0)', 'np.all(arr_pooled[1, :] == 0)', 'arr_pooled.dtype == arr.dtype', 'np.all(arr_pooled[0, 0] == 1)', 'np.all(arr_pooled[:, 1] == 0)', 'np.all(arr_pooled[1, :] == 0)']",[],[],[],[],[],[],[],[],[],[],[],[],"['arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.average([0, 1, 4, 5]))', 'arr_pooled[0, 1] == int(np.average([2, 3, 6, 7]))', 'arr_pooled[1, 0] == int(np.average([8, 9, 12, 13]))', 'arr_pooled[1, 1] == int(np.average([10, 11, 14, 15]))', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.average([0, 1, 4, 5]))', 'arr_pooled[0, 1] == int(np.average([2, 3, 6, 7]))', 'arr_pooled[1, 0] == int(np.average([8, 9, 12, 13]))', 'arr_pooled[1, 1] == int(np.average([10, 11, 14, 15]))', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'np.allclose(arr_pooled[0, 0], np.average([0, 1, 4, 5]))', 'np.allclose(arr_pooled[0, 1], np.average([2, 3, 6, 7]))', 'np.allclose(arr_pooled[1, 0], np.average([8, 9, 12, 13]))', 'np.allclose(arr_pooled[1, 1], np.average([10, 11, 14, 15]))']",[],[],[],[],[],[],[],[],[],[],[],[]
905,Alexander Jung,alexander.jung@zenuity.com,2018-12-22 11:32:31+01:00,7499b92f1a570ea5db926a26e0cf594bc4f9bdc5,https://github.com/aleju/imgaug/commit/7499b92f1a570ea5db926a26e0cf594bc4f9bdc5,Add dtype gating to pool(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
906,Alexander Jung,alexander.jung@zenuity.com,2018-12-22 12:03:57+01:00,288e8d576e2dd0a83e8ced89056894e3219e8eaa,https://github.com/aleju/imgaug/commit/288e8d576e2dd0a83e8ced89056894e3219e8eaa,Add tests for dtype support in draw_grid() & update doc,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['grid.dtype == np.dtype(dtype)', 'grid.dtype == np.dtype(dtype)', 'grid.dtype == np.dtype(dtype)', 'grid.dtype == np.dtype(dtype)', 'grid.dtype == np.dtype(dtype)', 'grid.dtype == np.dtype(dtype)', 'grid.dtype == np.dtype(dtype)', 'grid.dtype == np.dtype(dtype)', 'np.array_equal(grid, image)', 'grid.dtype == np.dtype(dtype)', 'np.array_equal(grid, image)', 'np.array_equal(grid, expected)', 'grid.dtype == np.dtype(dtype)', 'np.array_equal(grid, expected)', 'grid.dtype == np.dtype(dtype)', 'np.array_equal(grid, expected)', 'grid.dtype == np.dtype(dtype)', 'np.array_equal(grid, expected)', 'grid.dtype == np.dtype(dtype)', 'np.array_equal(grid, expected)', 'grid.dtype == np.dtype(dtype)', '_allclose(grid, image)', 'grid.dtype == np.dtype(dtype)', '_allclose(grid, image)', 'grid.dtype == np.dtype(dtype)', '_allclose(grid, expected)', 'grid.dtype == np.dtype(dtype)', '_allclose(grid, expected)', 'grid.dtype == np.dtype(dtype)', '_allclose(grid, expected)', 'grid.dtype == np.dtype(dtype)', '_allclose(grid, expected)', 'grid.dtype == np.dtype(dtype)', '_allclose(grid, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
907,Alexander Jung,alexander.jung@zenuity.com,2018-12-22 12:39:03+01:00,6575cf4fa8e44dc8a67a41a3603f504308ecfdaf,https://github.com/aleju/imgaug/commit/6575cf4fa8e44dc8a67a41a3603f504308ecfdaf,Improve some docs,3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
908,Alexander Jung,alexander.jung@zenuity.com,2018-12-22 12:41:43+01:00,0253cc1c9a0c44693b1fed659a0d83d04cc23ac9,https://github.com/aleju/imgaug/commit/0253cc1c9a0c44693b1fed659a0d83d04cc23ac9,Improve random state generation in contrast augs,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
909,Alexander Jung,alexander.jung@zenuity.com,2018-12-22 15:18:10+01:00,2dc7c7017cbf8744e6ae32b13c3db6834de04560,https://github.com/aleju/imgaug/commit/2dc7c7017cbf8744e6ae32b13c3db6834de04560,Add tests for dtype support in GammaContrast & update doc,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype == np.dtype(dtype)', 'len(np.unique(image_aug)) == 1', 'diff <= tolerance', 'image_aug.dtype == np.dtype(dtype)', '_allclose(image_aug, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
910,Alexander Jung,alexander.jung@zenuity.com,2018-12-22 16:11:15+01:00,4b9e1e9f3f73f981c4622a18e39ff22a635619cb,https://github.com/aleju/imgaug/commit/4b9e1e9f3f73f981c4622a18e39ff22a635619cb,Add tests for dtype support in SigmoidContrast & update doc,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype == np.dtype(dtype)', 'len(np.unique(image_aug)) == 1', 'diff <= tolerance', 'image_aug.dtype == np.dtype(dtype)', '_allclose(image_aug, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
911,Alexander Jung,alexander.jung@zenuity.com,2018-12-22 16:30:50+01:00,648445e61b7b7112d1725b246021ec365f269484,https://github.com/aleju/imgaug/commit/648445e61b7b7112d1725b246021ec365f269484,Add tests for dtype support in LogContrast & update doc,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype == np.dtype(dtype)', 'len(np.unique(image_aug)) == 1', 'diff <= tolerance', 'image_aug.dtype == np.dtype(dtype)', '_allclose(image_aug, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
912,Alexander Jung,alexander.jung@zenuity.com,2018-12-22 16:59:07+01:00,1bc68ea4f95f940a0850acecb9c51867da36f5cf,https://github.com/aleju/imgaug/commit/1bc68ea4f95f940a0850acecb9c51867da36f5cf,Add tests for dtype support in LinearContrast & update doc,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['kind == ', 'observed.dtype == np.dtype(dtype)', 'observed.shape == img.shape', '_compare(observed, expected)', 'np.array_equal(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],"['observed.dtype.type == np.uint8', 'observed.shape == img.shape', 'np.array_equal(observed, img)', 'observed.dtype.type == np.uint8', 'observed.shape == img.shape']",[],[],[],[],[],[],[],[],[],[],[],[]
913,Alexander Jung,alexander.jung@zenuity.com,2018-12-23 10:22:19+01:00,0a1905878bb7a6382e2d4b6a878566d37e38fef8,https://github.com/aleju/imgaug/commit/0a1905878bb7a6382e2d4b6a878566d37e38fef8,Add tests for dtype support in Superpixels & update doc,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['img_aug.dtype == img.dtype', 'np.all(img_aug == img)', 'img_aug.dtype == img.dtype', 'np.all(img_aug)', 'img_aug.dtype == np.dtype(dtype)', 'np.array_equal(img_aug, img)', 'img_aug.dtype == np.dtype(dtype)', 'np.all(img_aug == int(np.round((7/8)*v2 + (1/8)*v1)))', 'img_aug.dtype == np.dtype(dtype)', '_allclose(img_aug, img)', 'img_aug.dtype == np.dtype(dtype)', '_allclose(img_aug, (7/8)*v2 + (1/8)*v1)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
914,Alexander Jung,alexander.jung@zenuity.com,2018-12-23 12:15:44+01:00,04c2c85939fdcd1e86980ffe20eabd2e718bbc57,https://github.com/aleju/imgaug/commit/04c2c85939fdcd1e86980ffe20eabd2e718bbc57,Add tests for dtype support in Rot90 & update doc,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype == image.dtype', 'np.all(image_aug[0, 0] == 0)', 'np.all(image_aug[2, 2] == 1)', 'image_aug.dtype == np.dtype(dtype)', 'np.all(image_aug[0, 0] == 0)', 'np.all(image_aug[2, 2] == max_value)', 'image_aug.dtype == np.dtype(dtype)', '_allclose(image_aug[0, 0], 0)', '_allclose(image_aug[2, 2], float(value))']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
915,Alexander Jung,alexander.jung@zenuity.com,2018-12-23 12:58:12+01:00,743dae174f9212382c65076e0b6f3bbe809258b8,https://github.com/aleju/imgaug/commit/743dae174f9212382c65076e0b6f3bbe809258b8,Add tests for dtype support in ElasticTransformation & update doc,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype == image.dtype', 'not np.all(image_aug == 1)', 'np.any(image_aug[~mask] == 1)', 'image_aug.dtype == np.dtype(dtype)', 'not np.all(image_aug == max_value)', 'np.any(image_aug[~mask] == max_value)', 'image_aug.dtype == np.dtype(dtype)', 'not np.all(_isclose(image_aug, float(value)))', 'np.any(_isclose(image_aug[~mask], float(value)))']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
916,Alexander Jung,alexander.jung@zenuity.com,2018-12-23 14:05:53+01:00,8eb4cb520a5ccfca9c25e849ccf0e17b1cd0659d,https://github.com/aleju/imgaug/commit/8eb4cb520a5ccfca9c25e849ccf0e17b1cd0659d,Add tests for dtype support in PerspectiveTransform & update doc,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype == image.dtype', 'image_aug.shape == expected.shape', '(np.sum(image_aug == expected) / expected.size) > 0.9', 'image_aug.dtype == image.dtype', 'image_aug.shape == expected.shape', '(np.sum(image_aug == expected) / expected.size) > 0.7', 'image_aug.dtype == image.dtype', 'image_aug.shape == expected.shape', '(np.sum(_isclose(image_aug, expected)) / expected.size) > 0.7']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
917,Alexander Jung,alexander.jung@zenuity.com,2018-12-23 18:15:08+01:00,57b650ea3ad929e20a6f56bc01c08a0127943feb,https://github.com/aleju/imgaug/commit/57b650ea3ad929e20a6f56bc01c08a0127943feb,Add tests for dtype support in PiecewiseAffine & update doc,5,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['params[5].value == ', 'image_aug.dtype == image.dtype', 'not np.all(image_aug == 1)', 'np.any(image_aug[~mask] == 1)', 'image_aug.dtype == np.dtype(dtype)', 'not np.all(image_aug == value)', 'np.any(image_aug[~mask] == value)', 'image_aug.dtype == np.dtype(dtype)', 'not np.all(_isclose(image_aug, np.float128(value)))', 'np.any(_isclose(image_aug[~mask], np.float128(value)))']",[],[],[],[],[],[],[],[],[],[],[],[],['params[5].value == '],[],[],[],[],[],[],[],[],[],[],[],[]
918,Alexander Jung,alexander.jung@zenuity.com,2018-12-24 09:06:57+01:00,cf9fcac0f251a83b0bb800bea15053c6f9fa18bf,https://github.com/aleju/imgaug/commit/cf9fcac0f251a83b0bb800bea15053c6f9fa18bf,Add tests for dtype support in Affine & update doc,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype == image.dtype', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == 1)', 'image_aug.dtype == np.dtype(dtype)', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == value)', 'image_aug.dtype == np.dtype(dtype)', 'np.all(_isclose(image_aug[~mask], 0))', 'np.all(_isclose(image_aug[mask], np.float128(value)))', 'image_aug.dtype == image.dtype', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == 1)', 'image_aug.dtype == np.dtype(dtype)', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == value)', 'image_aug.dtype == np.dtype(dtype)', 'np.all(_isclose(image_aug[~mask], 0))', 'np.all(_isclose(image_aug[mask], np.float128(value)))']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
919,Alexander Jung,alexander.jung@zenuity.com,2018-12-24 09:10:05+01:00,a3c41e49c892b58ab920ac470b4d106afa25e09e,https://github.com/aleju/imgaug/commit/a3c41e49c892b58ab920ac470b4d106afa25e09e,Remove dtype restrictions from Scale & update doc,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
920,Alexander Jung,alexander.jung@zenuity.com,2018-12-24 09:42:12+01:00,5462c355b61ca601de677389a9962a56e13b47d5,https://github.com/aleju/imgaug/commit/5462c355b61ca601de677389a9962a56e13b47d5,"Add tests for dtype support in Crop, Pad, CropAndPad & update doc",3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype == image.dtype', 'image_aug.shape == (4, 3)', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == 1)', 'image_aug.dtype == np.dtype(dtype)', 'image_aug.shape == (4, 3)', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == value)', 'image_aug.dtype == np.dtype(dtype)', 'image_aug.shape == (4, 3)', 'np.all(_isclose(image_aug[~mask], 0))', 'np.all(_isclose(image_aug[mask], np.float128(value)))', 'image_aug.dtype == image.dtype', 'image_aug.shape == (2, 3)', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == 1)', 'image_aug.dtype == np.dtype(dtype)', 'image_aug.shape == (2, 3)', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == value)', 'image_aug.dtype == np.dtype(dtype)', 'image_aug.shape == (2, 3)', 'np.all(_isclose(image_aug[~mask], 0))', 'np.all(_isclose(image_aug[mask], np.float128(value)))']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
921,Alexander Jung,alexander.jung@zenuity.com,2018-12-24 09:50:28+01:00,389bcd6b1d54fd8bcea622e5591b8bab80aa132a,https://github.com/aleju/imgaug/commit/389bcd6b1d54fd8bcea622e5591b8bab80aa132a,"Add tests for dtype support in PadToFixedSize, CropToFixedSize & update doc",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype == image.dtype', 'image_aug.shape == (4, 3)', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == 1)', 'image_aug.dtype == np.dtype(dtype)', 'image_aug.shape == (4, 3)', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == value)', 'image_aug.dtype == np.dtype(dtype)', 'image_aug.shape == (4, 3)', 'np.all(_isclose(image_aug[~mask], 0))', 'np.all(_isclose(image_aug[mask], np.float128(value)))', 'image_aug.dtype == image.dtype', 'image_aug.shape == (2, 3)', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == 1)', 'image_aug.dtype == np.dtype(dtype)', 'image_aug.shape == (2, 3)', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == value)', 'image_aug.dtype == np.dtype(dtype)', 'image_aug.shape == (2, 3)', 'np.all(_isclose(image_aug[~mask], 0))', 'np.all(_isclose(image_aug[mask], np.float128(value)))']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
922,Alexander Jung,alexander.jung@zenuity.com,2018-12-24 12:08:44+01:00,1b57b7477caddae61edf89ac913f4a1543270a7e,https://github.com/aleju/imgaug/commit/1b57b7477caddae61edf89ac913f4a1543270a7e,Improve dtype support & update dtype docs in weather augs,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
923,Alexander Jung,alexander.jung@zenuity.com,2018-12-25 10:40:50+01:00,e30e80cf80ad661ff7d6214382aa5818b2c8af85,https://github.com/aleju/imgaug/commit/e30e80cf80ad661ff7d6214382aa5818b2c8af85,Add alpha blend function,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['img_blend.dtype.name == np.dtype(np.bool_)', 'img_blend.shape == (3, 3, 1)', 'np.all(img_blend == 0)', 'img_blend.dtype.name == np.dtype(np.bool_)', 'img_blend.shape == (3, 3, 1)', 'np.all(img_blend == 1)', 'img_blend.dtype.name == np.dtype(np.bool_)', 'img_blend.shape == (3, 3, 1)', 'np.all(img_blend == 1)', 'img_blend.dtype.name == np.dtype(np.bool_)', 'img_blend.shape == (3, 3, 2)', 'np.all(img_blend[:, :, 0] == 0)', 'np.all(img_blend[:, :, 1] == 1)', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, 1)', 'np.all(img_blend == dtype(v1))', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, 1)', 'np.all(img_blend == dtype(v1))', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, 1)', 'np.all(img_blend == dtype(v2))', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, 1)', 'np.all(diff < 1.01)', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, 2)', 'np.all(img_blend[:, :, 0] == dtype(v1))', 'np.all(img_blend[:, :, 1] == dtype(v2))', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, 1)', '_allclose(img_blend, np.float128(v1))', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, 1)', '_allclose(img_blend, np.float128(v1))', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, 1)', '_allclose(img_blend, np.float128(v2))', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, 1)', '_allclose(img_blend, 0.75*np.float128(v1) + 0.25*np.float128(v2))', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, 2)', '_allclose(img_blend[:, :, 0], np.float128(v1))', '_allclose(img_blend[:, :, 1], np.float128(v2))']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
924,Alexander Jung,alexander.jung@zenuity.com,2018-12-25 11:48:24+01:00,3010f36ba0056016fda4ec2affebbd8799719497,https://github.com/aleju/imgaug/commit/3010f36ba0056016fda4ec2affebbd8799719497,Use blend_alpha in Alpha & simplify loop & update dtype doc; fix tile bug in blend_alpha,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, c)', 'np.all(diff < 1.01)', 'img_blend.shape == (3, 3, 2)', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, c)', '_allclose(img_blend, 0.75*np.float128(v1) + 0.25*np.float128(v2))']",[],[],[],[],[],[],[],[],[],[],[],[],"['img_blend.shape == (3, 3, 1)', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, 1)', '_allclose(img_blend, 0.75*np.float128(v1) + 0.25*np.float128(v2))']",[],[],[],[],[],[],[],[],[],[],[],[]
925,Alexander Jung,alexander.jung@zenuity.com,2018-12-25 12:07:30+01:00,944c2d496c203036babb7faf18bbf5f0a179ca7e,https://github.com/aleju/imgaug/commit/944c2d496c203036babb7faf18bbf5f0a179ca7e,Adapt heatmap/kp aug in Alpha to simplified loop,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
926,Alexander Jung,alexander.jung@zenuity.com,2018-12-25 13:18:29+01:00,2045c4d1aeb6554c035828a5e2a538284e21e9e7,https://github.com/aleju/imgaug/commit/2045c4d1aeb6554c035828a5e2a538284e21e9e7,Improve dtype support in AlphaElementwise & update doc; make blend_alpha support elementwise,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (1, 2, 3)', 'np.all(img_blend[0, 0, :] == dtype(v1))', 'np.all(img_blend[0, 1, :] == dtype(v2))', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (1, 2, 3)', 'np.all(img_blend[0, 0, :] == dtype(v1))', 'np.all(img_blend[0, 1, :] == dtype(v2))', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (1, 2, 3)', 'np.all(img_blend[0, 0, [0, 2]] == dtype(v1))', 'np.all(img_blend[0, 1, [0, 2]] == dtype(v2))', 'np.all(img_blend[0, 0, 1] == dtype(v2))', 'np.all(img_blend[0, 1, 1] == dtype(v1))', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (1, 2, 3)', '_allclose(img_blend[0, 0, :], dtype(v1))', '_allclose(img_blend[0, 1, :], dtype(v2))', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (1, 2, 3)', '_allclose(img_blend[0, 0, :], dtype(v1))', '_allclose(img_blend[0, 1, :], dtype(v2))', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (1, 2, 3)', '_allclose(img_blend[0, 0, [0, 2]], dtype(v1))', '_allclose(img_blend[0, 1, [0, 2]], dtype(v2))', '_allclose(img_blend[0, 0, 1], dtype(v2))', '_allclose(img_blend[0, 1, 1], dtype(v1))']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
927,Alexander Jung,alexander.jung@zenuity.com,2018-12-25 13:19:58+01:00,94c744c47e8ec8b7633856df72927f9ba2831b13,https://github.com/aleju/imgaug/commit/94c744c47e8ec8b7633856df72927f9ba2831b13,Update dtype support docs in FrequencyNoiseAlpha & SimplexNoiseAlpha,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
928,Alexander Jung,alexander.jung@zenuity.com,2018-12-26 10:45:36+01:00,6b8b53bed584ece93d93cbd6056347ad42311557,https://github.com/aleju/imgaug/commit/6b8b53bed584ece93d93cbd6056347ad42311557,Clean up source in checks,32,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
929,Alexander Jung,alexander.jung@zenuity.com,2018-12-26 12:13:30+01:00,457b6c4f1dd1845f0466087f79f75fb5d0a7a3aa,https://github.com/aleju/imgaug/commit/457b6c4f1dd1845f0466087f79f75fb5d0a7a3aa,Improve comment style,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
930,Alexander Jung,alexander.jung@zenuity.com,2018-12-31 15:05:41+01:00,012c64a7f29a8ee2297428faf56699d874603467,https://github.com/aleju/imgaug/commit/012c64a7f29a8ee2297428faf56699d874603467,Fix dtype support docs & adapt to parsing script,5,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
931,Alexander Jung,alexander.jung@zenuity.com,2019-01-01 11:55:02+01:00,ad3e9c0202a3da14388805b80f950bd6f5c3d45c,https://github.com/aleju/imgaug/commit/ad3e9c0202a3da14388805b80f950bd6f5c3d45c,Cleanup dtype docstrings,5,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
932,Alexander Jung,alexander.jung@zenuity.com,2019-01-02 14:14:50+01:00,231257da8cc4ca67be0e81e39b376c4d4711c1ca,https://github.com/aleju/imgaug/commit/231257da8cc4ca67be0e81e39b376c4d4711c1ca,Improve dtype support and analysis in Affine,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.any(mask_inner) and np.any(mask_outer)', 'image_aug.dtype == image.dtype', '(np.sum(image_aug == image_exp)/image.size) > thresh_inner', 'image_aug.dtype == np.dtype(dtype)', '_compute_matching(image_aug, image_exp, mask_inner) > thresh_inner', '_compute_matching(image_aug, image_exp, mask_outer) > thresh_outer', 'image_aug.dtype == np.dtype(dtype)', '_compute_matching(image_aug, image_exp, mask_inner) > thresh_inner_float', '_compute_matching(image_aug, image_exp, mask_outer) > thresh_outer_float', 'image_aug.dtype == image.dtype', '(np.sum(image_aug == image_exp) / image.size) > 0.9', 'image_aug.dtype == np.dtype(dtype)', '(np.sum(image_aug == image_exp) / image.size) > 0.9', 'image_aug.dtype == np.dtype(dtype)', '(np.sum(_isclose(image_aug, image_exp)) / image.size) > 0.9']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
933,Alexander Jung,alexander.jung@zenuity.com,2019-01-02 14:35:57+01:00,3752a901711475f5fcbbb6c19091e0d036ba85e7,https://github.com/aleju/imgaug/commit/3752a901711475f5fcbbb6c19091e0d036ba85e7,Fix bad value range in SimplexNoise,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
934,Alexander Jung,alexander.jung@zenuity.com,2019-01-02 14:36:59+01:00,426c8f82721ede50e1eb952d34de37167a3fda5c,https://github.com/aleju/imgaug/commit/426c8f82721ede50e1eb952d34de37167a3fda5c,Adjust dtypes in tests,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
935,Alexander Jung,alexander.jung@zenuity.com,2019-01-02 14:38:04+01:00,b1dde8f616bdf2eef11d7f73c5fa596089732b97,https://github.com/aleju/imgaug/commit/b1dde8f616bdf2eef11d7f73c5fa596089732b97,Remove _PreserveDtype in contrast augs -- no longer required,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
936,Alexander Jung,alexander.jung@zenuity.com,2019-01-02 14:40:44+01:00,d5b7c8a5bec98e49302fc3e4a18e09a56cdbb4e5,https://github.com/aleju/imgaug/commit/d5b7c8a5bec98e49302fc3e4a18e09a56cdbb4e5,Remove restore_augmented_images_dtypes_() and similar funcs,3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
937,Alexander Jung,alexander.jung@zenuity.com,2019-01-02 16:17:02+01:00,91d464fec2c860c208eaaa305eb3c203a70683b9,https://github.com/aleju/imgaug/commit/91d464fec2c860c208eaaa305eb3c203a70683b9,Remove no longer existing tests,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
938,Alexander Jung,alexander.jung@zenuity.com,2019-01-02 16:45:07+01:00,eca056856c5f0a4c7f2271e7b12d62b2ea9c863e,https://github.com/aleju/imgaug/commit/eca056856c5f0a4c7f2271e7b12d62b2ea9c863e,Get rid of augmenters.meta dependency in imgaug.py,9,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
939,Alexander Jung,alexander.jung@zenuity.com,2019-01-02 16:56:59+01:00,5ee3cca7902dc1365026cfce114fe007e732f5e2,https://github.com/aleju/imgaug/commit/5ee3cca7902dc1365026cfce114fe007e732f5e2,Fix import statements,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
940,Alexander Jung,alexander.jung@zenuity.com,2019-01-02 17:09:08+01:00,b5ac22f0e16ef26a65e6f91c29e7c24797a4efff,https://github.com/aleju/imgaug/commit/b5ac22f0e16ef26a65e6f91c29e7c24797a4efff,Get rid of top-level meta import in parameters.py,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
941,Alexander Jung,alexander.jung@zenuity.com,2019-01-02 17:38:42+01:00,b90512d94e1db348f9133ae04fc82a730bd23cf6,https://github.com/aleju/imgaug/commit/b90512d94e1db348f9133ae04fc82a730bd23cf6,Make tests run on travis,4,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(image_rs, expected, rtol=0, atol=max(abs(value * 1e-6), 1e-5))']",[],[],[],[],[],[],[],[],[],[],[],[]
942,Alexander Jung,alexander.jung@zenuity.com,2019-01-02 17:53:41+01:00,a98b7f29ab80ca820e73276fc061767ccc89c1ad,https://github.com/aleju/imgaug/commit/a98b7f29ab80ca820e73276fc061767ccc89c1ad,Try fixing blend_alpha() float dtype tests on travis,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['_allclose(img_blend, max_float_dt(v1))', '_allclose(img_blend, max_float_dt(v1))', '_allclose(img_blend, max_float_dt(v2))', '_allclose(img_blend, 0.75*max_float_dt(v1) + 0.25*max_float_dt(v2))', '_allclose(img_blend[:, :, 0], max_float_dt(v1))', '_allclose(img_blend[:, :, 1], max_float_dt(v2))']",[],[],[],[],[],[],[],[],[],[],[],[],"['_allclose(img_blend, np.float128(v1))', '_allclose(img_blend, np.float128(v1))', '_allclose(img_blend, np.float128(v2))', '_allclose(img_blend, 0.75*np.float128(v1) + 0.25*np.float128(v2))', '_allclose(img_blend[:, :, 0], np.float128(v1))', '_allclose(img_blend[:, :, 1], np.float128(v2))']",[],[],[],[],[],[],[],[],[],[],[],[]
943,Alexander Jung,alexander.jung@zenuity.com,2019-01-02 18:15:58+01:00,9066e391e6048bd6160c72c1d58365877b4a7d08,https://github.com/aleju/imgaug/commit/9066e391e6048bd6160c72c1d58365877b4a7d08,Set minimum numpy version,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
944,Alexander Jung,alexander.jung@zenuity.com,2019-01-02 18:27:52+01:00,815025ca51461151c23914d9d5e1cb824f905ccd,https://github.com/aleju/imgaug/commit/815025ca51461151c23914d9d5e1cb824f905ccd,Deactivate a blend_alpha() test to make travis work,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['_allclose(img_blend, 0.75*max_float_dt(v1) + 0.25*max_float_dt(v2))']",[],[],[],[],[],[],[],[],[],[],[],[]
945,aleju,kontakt@ajung.name,2019-01-03 19:14:57+01:00,7254358b58de22b5366262e8bf14019353ef834b,https://github.com/aleju/imgaug/commit/7254358b58de22b5366262e8bf14019353ef834b,Increase minimum numpy version to 1.14,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
946,aleju,kontakt@ajung.name,2019-01-03 19:15:41+01:00,af286e0759faee02abf9e27a440b0637e7674a6b,https://github.com/aleju/imgaug/commit/af286e0759faee02abf9e27a440b0637e7674a6b,Reactivate tests that were deactivated for travis,4,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['_allclose(img_blend, 0.75*max_float_dt(v1) + 0.25*max_float_dt(v2))', 'np.allclose(image_rs, expected, rtol=0, atol=max(abs(value * 1e-6), 1e-5))']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
947,aleju,kontakt@ajung.name,2019-01-04 09:53:20+01:00,62d7a0bd76eb4aa68d5708992e92c7f5dafa127e,https://github.com/aleju/imgaug/commit/62d7a0bd76eb4aa68d5708992e92c7f5dafa127e,Reactivate dtypes in blend_alpha(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
948,aleju,kontakt@ajung.name,2019-01-04 09:54:27+01:00,a93961d3dc843ca8583a7bfd231cd6d0fa1132b4,https://github.com/aleju/imgaug/commit/a93961d3dc843ca8583a7bfd231cd6d0fa1132b4,Try numpy 1.15 on travis,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
949,aleju,kontakt@ajung.name,2019-01-04 11:06:48+01:00,b8230601c0a599c27d249eae823f56dc5defdb15,https://github.com/aleju/imgaug/commit/b8230601c0a599c27d249eae823f56dc5defdb15,Fix float test for imresize_many_images() sometimes breaking,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(image_rs, expected, rtol=0, atol=atol)', 'np.any(np.isclose(image_rs, expected, rtol=0, atol=1e-4))']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(image_rs, expected, rtol=0, atol=max(abs(value * 1e-6), 1e-5))']",[],[],[],[],[],[],[],[],[],[],[],[]
950,aleju,kontakt@ajung.name,2019-01-04 11:07:19+01:00,e8e37deac1f10b50d916eb86d280108ff2b1a917,https://github.com/aleju/imgaug/commit/e8e37deac1f10b50d916eb86d280108ff2b1a917,Add todo,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
951,aleju,kontakt@ajung.name,2019-01-04 11:09:31+01:00,bc9b2a429620b361b911203d40eca604678ab189,https://github.com/aleju/imgaug/commit/bc9b2a429620b361b911203d40eca604678ab189,Improve dtype docstring,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
952,aleju,kontakt@ajung.name,2019-01-04 11:11:17+01:00,9809218ca61e073fd63bb5169e1c2aa890311126,https://github.com/aleju/imgaug/commit/9809218ca61e073fd63bb5169e1c2aa890311126,Improve dtype docstring,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
953,aleju,kontakt@ajung.name,2019-01-04 12:48:41+01:00,722b25c9383cf06d4b1d79061daac718f29b0f62,https://github.com/aleju/imgaug/commit/722b25c9383cf06d4b1d79061daac718f29b0f62,Use lazy loading for matplotlib #225,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
954,aleju,kontakt@ajung.name,2019-01-04 12:55:34+01:00,ef6c4f69af1a46d802d8de5a9d6ecb77753554c1,https://github.com/aleju/imgaug/commit/ef6c4f69af1a46d802d8de5a9d6ecb77753554c1,Use lazy loading for Shapely,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
955,aleju,kontakt@ajung.name,2019-01-04 12:58:15+01:00,dedbc6d4ff66c6d91e557f730f4e8a8648a29ffd,https://github.com/aleju/imgaug/commit/dedbc6d4ff66c6d91e557f730f4e8a8648a29ffd,Fix code style,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
956,aleju,kontakt@ajung.name,2019-01-04 13:02:37+01:00,991007f4f012c289d2b61dcee8aa32ef72e60181,https://github.com/aleju/imgaug/commit/991007f4f012c289d2b61dcee8aa32ef72e60181,Add todos,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
957,aleju,kontakt@ajung.name,2019-01-04 13:06:43+01:00,8502613caf6fccd66391442f340649a4b46a8bcf,https://github.com/aleju/imgaug/commit/8502613caf6fccd66391442f340649a4b46a8bcf,Improve Rot90 doc (#223),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
958,aleju,kontakt@ajung.name,2019-01-04 13:07:17+01:00,e0dde51eaf41841965dce59542d2fa7a08d7f77e,https://github.com/aleju/imgaug/commit/e0dde51eaf41841965dce59542d2fa7a08d7f77e,Add opencv-python as explicit dependency (#218),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
959,aleju,kontakt@ajung.name,2019-01-04 13:08:24+01:00,fc20b4cda1a35169d666e87d96c272cd374b7644,https://github.com/aleju/imgaug/commit/fc20b4cda1a35169d666e87d96c272cd374b7644,Remove cv2 check in setup.py (#218),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
960,aleju,kontakt@ajung.name,2019-01-04 14:35:54+01:00,d506deb59538b0f962a925d480f6e78c3117fe55,https://github.com/aleju/imgaug/commit/d506deb59538b0f962a925d480f6e78c3117fe55,Update numpy requirement in setup.py,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
961,aleju,kontakt@ajung.name,2019-01-04 14:53:04+01:00,6c4c2f67331ce15a9d2cf8c41ada0a4d40ba5b14,https://github.com/aleju/imgaug/commit/6c4c2f67331ce15a9d2cf8c41ada0a4d40ba5b14,Fix dtype doc,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
962,aleju,kontakt@ajung.name,2019-01-04 15:08:28+01:00,04681b8fc7d9b271feb87f0b8db907d2b595ad4b,https://github.com/aleju/imgaug/commit/04681b8fc7d9b271feb87f0b8db907d2b595ad4b,Improve dtype feature list,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
963,aleju,kontakt@ajung.name,2019-01-04 15:09:12+01:00,7400c1865d1fc9df0e58f786a157808cf718261b,https://github.com/aleju/imgaug/commit/7400c1865d1fc9df0e58f786a157808cf718261b,Improve dtype docstrings,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
964,aleju,kontakt@ajung.name,2019-01-04 20:14:57+01:00,21a6aee38197182b2f4896dc248553335a0d5e94,https://github.com/aleju/imgaug/commit/21a6aee38197182b2f4896dc248553335a0d5e94,Improve contrast tests code style,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
965,aleju,kontakt@ajung.name,2019-01-05 18:19:48+01:00,335c46d7781caff5d45e5964e9d516dfeaf46448,https://github.com/aleju/imgaug/commit/335c46d7781caff5d45e5964e9d516dfeaf46448,Fix RGB/BGR to Lab/Luv in ChangeColorspace & add Lab2RGB/BGR,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
966,aleju,kontakt@ajung.name,2019-01-05 18:20:20+01:00,daa3d33b3e6f4c3ea5e25455119d8c4001edc797,https://github.com/aleju/imgaug/commit/daa3d33b3e6f4c3ea5e25455119d8c4001edc797,"Add CLAHE, AllChannelCLAHE, handle_discrete_kernel_size_param() (#216)",5,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],2,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestAllChannelCLAHE(unittest.TestCase):', 'class TestCLAHE(unittest.TestCase):']",[],"['def setUp(self):', 'def setUp(self):']",[],[],[],[],[],[],[],"['import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug.clip_limit, iap.Deterministic)', 'aug.clip_limit.value == 10', 'isinstance(aug.tile_grid_size_px[0], iap.Deterministic)', 'aug.tile_grid_size_px[0].value == 11', 'aug.tile_grid_size_px[1] is None', 'aug.tile_grid_size_px_min == 4', 'isinstance(aug.per_channel, iap.Deterministic)', 'np.isclose(aug.per_channel.value, 1.0)', 'isinstance(aug.clip_limit, iap.Uniform)', 'aug.clip_limit.a.value == 10', 'aug.clip_limit.b.value == 20', 'isinstance(aug.tile_grid_size_px[0], iap.DiscreteUniform)', 'aug.tile_grid_size_px[0].a.value == 11', 'aug.tile_grid_size_px[0].b.value == 17', 'aug.tile_grid_size_px[1] is None', 'aug.tile_grid_size_px_min == 4', 'isinstance(aug.per_channel, iap.Binomial)', 'np.isclose(aug.per_channel.p.value, 0.5)', 'isinstance(aug.clip_limit, iap.Choice)', 'aug.clip_limit.a[0] == 10', 'aug.clip_limit.a[1] == 20', 'aug.clip_limit.a[2] == 30', 'isinstance(aug.tile_grid_size_px[0], iap.Choice)', 'aug.tile_grid_size_px[0].a[0] == 11', 'aug.tile_grid_size_px[0].a[1] == 17', 'aug.tile_grid_size_px[0].a[2] == 21', 'aug.tile_grid_size_px[1] is None', 'isinstance(aug.tile_grid_size_px[0], iap.DiscreteUniform)', 'aug.tile_grid_size_px[0].a.value == 11', 'aug.tile_grid_size_px[0].b.value == 17', 'isinstance(aug.tile_grid_size_px[1], iap.Choice)', 'aug.tile_grid_size_px[1].a[0] == 11', 'aug.tile_grid_size_px[1].a[1] == 13', 'aug.tile_grid_size_px[1].a[2] == 15', 'np.array_equal(mock_clahe.apply.call_args_list[0][0][0], img)', 'np.array_equal(mock_clahe.apply.call_args_list[0][0][0], img3d[..., 0])', 'np.array_equal(mock_clahe.apply.call_args_list[1][0][0], img3d[..., 1])', 'np.array_equal(mock_clahe.apply.call_args_list[2][0][0], img3d[..., 2])', 'int(np.max(img_aug)) - int(np.min(img_aug)) > 2', 'img_aug.dtype.name == ', 'all(seen)', 'mock_createCLAHE.call_count == nb_calls_expected_i', 'img_aug.dtype.name == np.dtype(dtype).name', 'min_value <= np.min(img_aug) <= min_value + 0.2 * dynamic_range', 'max_value - 0.2 * dynamic_range <= np.max(img_aug) <= max_value', 'img_aug.dtype.name == np.dtype(dtype).name', 'np.min(img_aug) == 0', 'np.max(img_aug) == 1', 'keypoints_equal([kpsoi], kpsoi_aug)', 'np.allclose(heatmaps.arr_0to1, heatmaps_aug.arr_0to1)', 'all([isinstance(params[i], iap.Deterministic) for i in [0, 3]])', 'params[0].value == 1', 'params[1][0].value == 3', 'params[1][1] is None', 'params[2] == 2', 'params[3].value == 1', 'clahe.all_channel_clahe.clip_limit.value == 1', 'clahe.all_channel_clahe.tile_grid_size_px[0].value == 3', 'clahe.all_channel_clahe.tile_grid_size_px[1] is None', 'clahe.all_channel_clahe.tile_grid_size_px_min == 2', 'clahe.change_colorspace.from_colorspace == iaa.CLAHE.BGR', 'clahe.change_colorspace.to_colorspace.value == iaa.CLAHE.HSV', 'clahe.change_colorspace_inv.from_colorspace == iaa.CLAHE.HSV', 'clahe.change_colorspace_inv.to_colorspace.value == iaa.CLAHE.BGR', 'np.array_equal(img_aug, img+2)', 'mock_change_colorspace.call_count == 0', 'mock_all_channel_clahe.call_count == 1', 'mock_change_colorspace_inv.call_count == 0', 'np.array_equal(img3d_aug, expected3)', 'mock_change_colorspace.call_count == 1', 'mock_all_channel_clahe.call_count == 1', 'mock_change_colorspace_inv.call_count == 1', 'np.array_equal(mock_change_colorspace.call_args_list[0][0][0][0], img3d)', 'np.array_equal(', 'np.array_equal(img4d_aug, expected4)', 'mock_change_colorspace.call_count == 1', 'mock_all_channel_clahe.call_count == 1', 'mock_change_colorspace_inv.call_count == 1', 'np.array_equal(mock_change_colorspace.call_args_list[0][0][0][0], img4d[..., 0:3])', 'np.array_equal(', 'len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)', 'np.array_equal(img5d_aug, img5d + 2)', 'mock_change_colorspace.call_count == 0', 'mock_all_channel_clahe.call_count == 1', 'mock_change_colorspace_inv.call_count == 0', 'np.array_equal(', 'isinstance(imgs_aug, list)', 'mock_change_colorspace.call_count == (1 if with_3d_images else 0)', 'mock_all_channel_clahe.call_count == 1', 'mock_change_colorspace_inv.call_count == (1 if with_3d_images else 0)', 'isinstance(mock_change_colorspace.call_args_list[0][0][0], list)', 'isinstance(mock_change_colorspace_inv.call_args_list[0][0][0], list)', 'isinstance(mock_all_channel_clahe.call_args_list[0][0][0], list)', 'len(mock_change_colorspace.call_args_list[0][0][0]) == 3', 'len(mock_change_colorspace_inv.call_args_list[0][0][0]) == 3', 'len(mock_all_channel_clahe.call_args_list[0][0][0]) == 5 if with_3d_images else 2', 'np.array_equal(', 'np.array_equal(', 'np.array_equal(', 'ia.is_np_array(imgs_aug)', 'mock_change_colorspace.call_count == (1 if with_color_conversion else 0)', 'mock_all_channel_clahe.call_count == 1', 'mock_change_colorspace_inv.call_count == (1 if with_color_conversion else 0)', 'isinstance(mock_change_colorspace.call_args_list[0][0][0], list)', 'isinstance(mock_change_colorspace_inv.call_args_list[0][0][0], list)', 'isinstance(mock_all_channel_clahe.call_args_list[0][0][0], list)', 'len(mock_change_colorspace.call_args_list[0][0][0]) == nb_images', 'len(mock_change_colorspace_inv.call_args_list[0][0][0]) == nb_images', 'len(mock_all_channel_clahe.call_args_list[0][0][0]) == nb_images', 'np.array_equal(', 'np.array_equal(', 'np.array_equal(', 'not np.array_equal(result1, result2)', 'np.array_equal(result1, result2)', 'params[0].value == 1', 'params[1][0].value == 3', 'params[1][1] is None', 'params[2] == 2', 'params[3] == iaa.CLAHE.BGR', 'params[4] == iaa.CLAHE.HSV']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
967,aleju,kontakt@ajung.name,2019-01-05 18:34:15+01:00,451992d82620cab29fee50ae3ea6bae50868986a,https://github.com/aleju/imgaug/commit/451992d82620cab29fee50ae3ea6bae50868986a,Rename AllChannelCLAHE to AllChannelsCLAHE,3,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestAllChannelsCLAHE(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],['class TestAllChannelCLAHE(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
968,aleju,kontakt@ajung.name,2019-01-05 18:51:37+01:00,4a1e1717b318b7917a31911437e7c4567b2f33ea,https://github.com/aleju/imgaug/commit/4a1e1717b318b7917a31911437e7c4567b2f33ea,Extend CLAHE check,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
969,aleju,kontakt@ajung.name,2019-01-05 18:52:36+01:00,ce6d8a6a5a25252cc775cb637296a4c16915dbf6,https://github.com/aleju/imgaug/commit/ce6d8a6a5a25252cc775cb637296a4c16915dbf6,Extend documentation for CLAHE,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
970,aleju,kontakt@ajung.name,2019-01-05 20:40:35+01:00,e32ae2c2390288a9158f2fc90f7513925f621410,https://github.com/aleju/imgaug/commit/e32ae2c2390288a9158f2fc90f7513925f621410,"Add CLAHE, AllChannelsCLAHE to readme",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
971,aleju,kontakt@ajung.name,2019-01-05 20:59:03+01:00,c54231a5b036c2f2444f95f33b7097607a97669e,https://github.com/aleju/imgaug/commit/c54231a5b036c2f2444f95f33b7097607a97669e,Introduce _IntensityChannelBasedApplier and adapt CLAHE to it,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['clahe.intensity_channel_based_applier.change_colorspace.from_colorspace == iaa.CLAHE.BGR', 'clahe.intensity_channel_based_applier.change_colorspace.to_colorspace.value == iaa.CLAHE.HSV', 'clahe.intensity_channel_based_applier.change_colorspace_inv.from_colorspace == iaa.CLAHE.HSV', 'clahe.intensity_channel_based_applier.change_colorspace_inv.to_colorspace.value == iaa.CLAHE.BGR']",[],[],[],[],[],[],[],[],[],[],[],[],"['clahe.change_colorspace.from_colorspace == iaa.CLAHE.BGR', 'clahe.change_colorspace.to_colorspace.value == iaa.CLAHE.HSV', 'clahe.change_colorspace_inv.from_colorspace == iaa.CLAHE.HSV', 'clahe.change_colorspace_inv.to_colorspace.value == iaa.CLAHE.BGR']",[],[],[],[],[],[],[],[],[],[],[],[]
972,aleju,kontakt@ajung.name,2019-01-05 22:33:31+01:00,79596ae7baec0fddd9e7111cc3306102172a92cb,https://github.com/aleju/imgaug/commit/79596ae7baec0fddd9e7111cc3306102172a92cb,"Add AllChannelsHistogramEqualization, HistogramEqualization (#216)",2,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestAllChannelsHistogramEqualization(unittest.TestCase):', 'class TestHistogramEqualization(unittest.TestCase):']",[],"['def setUp(self):', 'def setUp(self):']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['\\', 'ia.is_np_array(imgs_aug)', 'isinstance(imgs_aug, list)', 'len(imgs_aug) == nb_images', 'imgs_aug[i].dtype.name == ', 'np.array_equal(imgs_aug[i], imgs[i] + 1)', 'imgs_aug.dtype.name == ', 'len(imgs_aug) == nb_images', 'imgs_aug[i].shape == img.shape', 'np.max(imgs_aug[i]) > np.max(img)', 'len(np.unique(imgs_aug[0])) > len(np.unique(imgs_aug[1]))', 'img_aug.dtype.name == np.dtype(dtype).name', 'img_aug.shape == img.shape', 'np.min(img_aug) < min_value + 0.1 * dynamic_range', 'np.max(img_aug) > max_value - 0.1 * dynamic_range', 'keypoints_equal([kpsoi], kpsoi_aug)', 'np.allclose(heatmaps.arr_0to1, heatmaps_aug.arr_0to1)', 'len(params) == 0', 'isinstance(aug.all_channel_histogram_equalization, iaa.AllChannelsHistogramEqualization)', 'icba.change_colorspace.from_colorspace == iaa.HistogramEqualization.BGR', 'icba.change_colorspace.to_colorspace.value == iaa.HistogramEqualization.HSV', 'len(caught_warnings) == 1', '\\', 'np.array_equal(img_aug, expected)', 'np.array_equal(result1, result2)', 'params[0] == iaa.HistogramEqualization.BGR', 'params[1] == iaa.HistogramEqualization.HSV']",[],[],[],[],[],[],[],[],[],[],[],[],['in str(caught_warnings[-1].message)'],[],[],[],[],[],[],[],[],[],[],[],[]
973,aleju,kontakt@ajung.name,2019-01-06 10:01:55+01:00,c0685a6b95cfa6e3f6f4d40efb953d1d186fb829,https://github.com/aleju/imgaug/commit/c0685a6b95cfa6e3f6f4d40efb953d1d186fb829,"Add HistogramEqualization, AllChannelsHistogramEqualization to check",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
974,aleju,kontakt@ajung.name,2019-01-06 10:04:41+01:00,37f73c43ab17839bb57842dcd67c89aae791cc2a,https://github.com/aleju/imgaug/commit/37f73c43ab17839bb57842dcd67c89aae791cc2a,Fix and improve contrast doc,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
975,aleju,kontakt@ajung.name,2019-01-06 10:10:02+01:00,a7986f751d78fe0c19204ed79275228256f4d582,https://github.com/aleju/imgaug/commit/a7986f751d78fe0c19204ed79275228256f4d582,Update contrast file list of augmenters,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
976,aleju,kontakt@ajung.name,2019-01-06 10:31:56+01:00,2286e7cd18c39a884f43664a64dad7e011c73b25,https://github.com/aleju/imgaug/commit/2286e7cd18c39a884f43664a64dad7e011c73b25,Avoid cyclic dependency,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
977,aleju,kontakt@ajung.name,2019-01-06 10:47:27+01:00,6feb1af91112c7c6220c72afc63db0e0f5dda395,https://github.com/aleju/imgaug/commit/6feb1af91112c7c6220c72afc63db0e0f5dda395,Fix tests not working in <3.4,2,False,True,True,True,True,True,True,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],"['import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
978,aleju,kontakt@ajung.name,2019-01-06 10:48:40+01:00,8a84b64453d0bbebc2f80d2c8d889878e54c61a7,https://github.com/aleju/imgaug/commit/8a84b64453d0bbebc2f80d2c8d889878e54c61a7,Cleanup travis file,1,False,False,False,False,False,True,True,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
979,aleju,kontakt@ajung.name,2019-01-06 10:55:32+01:00,e2272b746f21274976581c178b205999cf24bba8,https://github.com/aleju/imgaug/commit/e2272b746f21274976581c178b205999cf24bba8,Add tests requirements file,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
980,aleju,kontakt@ajung.name,2019-01-06 11:14:47+01:00,0b4cbf2aeca4e9bb1b33283f5a32b5e3fd0a0db9,https://github.com/aleju/imgaug/commit/0b4cbf2aeca4e9bb1b33283f5a32b5e3fd0a0db9,Add AllChannelsHist.Eq. & HistogramEqualization to readme,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
981,aleju,kontakt@ajung.name,2019-01-06 13:50:59+01:00,aa3854515d39099290d93b5c7772404a470d7203,https://github.com/aleju/imgaug/commit/aa3854515d39099290d93b5c7772404a470d7203,Add histogram-based contrast augmenters to gifs,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
982,aleju,kontakt@ajung.name,2019-01-06 14:54:43+01:00,83cc2ecffb9459d18cb8b06b064efa622743419f,https://github.com/aleju/imgaug/commit/83cc2ecffb9459d18cb8b06b064efa622743419f,Activate gating in AllChannelsHistogramEqualization,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
983,aleju,kontakt@ajung.name,2019-01-06 14:58:13+01:00,3ba4e0cfd6410fe76ee0104c3c0b7a6cf3ad24fb,https://github.com/aleju/imgaug/commit/3ba4e0cfd6410fe76ee0104c3c0b7a6cf3ad24fb,Deactivate codacy assert warning,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
984,aleju,kontakt@ajung.name,2019-01-06 14:58:32+01:00,17124a894694d324058a5b56b20eb09daa553312,https://github.com/aleju/imgaug/commit/17124a894694d324058a5b56b20eb09daa553312,Fix typo,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
985,aleju,kontakt@ajung.name,2019-01-06 16:06:45+01:00,d88fd77dec1116eae6468ce1531049f4c859b24b,https://github.com/aleju/imgaug/commit/d88fd77dec1116eae6468ce1531049f4c859b24b,Simplify dtype handling in SegmentationMap init (#202),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
986,Joy Banerjee,32819925+joybanerjee08@users.noreply.github.com,2019-01-08 02:10:07+05:18,dedae17a6a8fc60520f038e1b7b6fb00003db4e4,https://github.com/aleju/imgaug/commit/dedae17a6a8fc60520f038e1b7b6fb00003db4e4,Update imgaug.py,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
987,Sun Yitao,sunyitao8@gmail.com,2019-01-15 18:51:18+08:00,e09313c1354c266e8a022154e5fe56cf25b253c9,https://github.com/aleju/imgaug/commit/e09313c1354c266e8a022154e5fe56cf25b253c9,Fix augmenting empty keypoints (#231),4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
988,Joy Banerjee,32819925+joybanerjee08@users.noreply.github.com,2019-01-17 20:22:59+05:18,b986ba8bf93b7847671e62b4636256e90245b340,https://github.com/aleju/imgaug/commit/b986ba8bf93b7847671e62b4636256e90245b340,Update imgaug.py,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
989,joncrall,erotemic@gmail.com,2019-01-17 23:27:23-05:00,c0079aa0addc4b32e038d264141e00a08ce2a8b5,https://github.com/aleju/imgaug/commit/c0079aa0addc4b32e038d264141e00a08ce2a8b5,Add truncated normal distribution,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
990,aleju,kontakt@ajung.name,2019-01-18 15:12:36+01:00,6143ba387f716bb3b100404fe04d6aa9cd5a5139,https://github.com/aleju/imgaug/commit/6143ba387f716bb3b100404fe04d6aa9cd5a5139,Fix temporarily numpy 1.16 breaking scikit-image,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
991,aleju,kontakt@ajung.name,2019-01-18 15:24:57+01:00,48ca5f7c7902ce45a50ffdc3acff3d559870e1db,https://github.com/aleju/imgaug/commit/48ca5f7c7902ce45a50ffdc3acff3d559870e1db,Fix temporarily numpy 1.16 breaking scikit-image (attempt 2),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
992,aleju,kontakt@ajung.name,2019-01-18 15:39:06+01:00,b5ec68c76c0945850273debdf79c40c9a8568bdb,https://github.com/aleju/imgaug/commit/b5ec68c76c0945850273debdf79c40c9a8568bdb,Fix temporarily numpy 1.16 breaking scikit-image (attempt 3),2,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
993,aleju,kontakt@ajung.name,2019-01-19 11:00:03+01:00,e59ef2e230a765d40c6c5b4da56619a4dc72a02d,https://github.com/aleju/imgaug/commit/e59ef2e230a765d40c6c5b4da56619a4dc72a02d,Add test for empty KeypointsOnImage within batch (#231),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len([kpresult for kpresult in translations_kps if kpresult is None]) == 1', 'translations_kps[5] is None', 'np.array_equal(translations_imgs, translations_kps)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
994,joncrall,erotemic@gmail.com,2019-01-19 15:31:11-05:00,f62239ca0254ec691905e08ed404dc4d76310b00,https://github.com/aleju/imgaug/commit/f62239ca0254ec691905e08ed404dc4d76310b00,Resolve review issues,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
995,aleju,kontakt@ajung.name,2019-01-25 19:02:13+01:00,aaf5acffcfeee1edfca6d8cf505eee17eeafcfe0,https://github.com/aleju/imgaug/commit/aaf5acffcfeee1edfca6d8cf505eee17eeafcfe0,Add changelog file,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
996,aleju,kontakt@ajung.name,2019-01-26 10:12:34+01:00,a0079c274c8556813fb3186aa3eed6418b52b27a,https://github.com/aleju/imgaug/commit/a0079c274c8556813fb3186aa3eed6418b52b27a,Move BatchLoader+BackgroundAugmenter to multicore.py,8,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(loaded) == 20*nb_workers, \\', 'loader.all_finished()', 'len(loaded) == 20*nb_workers, \\', 'loader.all_finished()', 'isinstance(batch_aug, ia.Batch)', 'batch_aug.images is not None', 'batch_aug.images.dtype == np.uint8', 'batch_aug.images.shape == (1, 4, 8, 3)', 'np.array_equal(batch_aug.images, np.zeros((1, 4, 8, 3), dtype=np.uint8))', 'batch_aug.images_aug is not None', 'batch_aug.images_aug.dtype == np.uint8', 'batch_aug.images_aug.shape == (1, 4, 8, 3)', 'np.array_equal(batch_aug.images_aug, np.zeros((1, 4, 8, 3), dtype=np.uint8) + 1)', 'finished_signal is None', 'source_finished_signal is None', 'queue_source.empty()', 'queue_target.empty()']",[],[],[],[],[],[],[],[],[],[],[],[],"['len(loaded) == 20*nb_workers, \\', 'loader.all_finished()', 'len(loaded) == 20*nb_workers, \\', 'loader.all_finished()', 'isinstance(batch_aug, ia.Batch)', 'batch_aug.images is not None', 'batch_aug.images.dtype == np.uint8', 'batch_aug.images.shape == (1, 4, 8, 3)', 'np.array_equal(batch_aug.images, np.zeros((1, 4, 8, 3), dtype=np.uint8))', 'batch_aug.images_aug is not None', 'batch_aug.images_aug.dtype == np.uint8', 'batch_aug.images_aug.shape == (1, 4, 8, 3)', 'np.array_equal(batch_aug.images_aug, np.zeros((1, 4, 8, 3), dtype=np.uint8) + 1)', 'finished_signal is None', 'source_finished_signal is None', 'queue_source.empty()', 'queue_target.empty()']",[],[],[],[],[],[],[],[],[],[],[],[]
997,aleju,kontakt@ajung.name,2019-01-27 13:44:31+01:00,579d1c59605a23d6097f0a5b191a24e17f9da884,https://github.com/aleju/imgaug/commit/579d1c59605a23d6097f0a5b191a24e17f9da884,Make figsize in imshow() dependent on image size,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
998,aleju,kontakt@ajung.name,2019-01-27 13:48:40+01:00,f9f9191dc55313740cb690a5b9748854eee742d3,https://github.com/aleju/imgaug/commit/f9f9191dc55313740cb690a5b9748854eee742d3,"Change to_deterministic() to derive Rnd.St. from augmenter

Augmenter.to_determistic() previously derived the deterministic
augmenter's random state from the global random state.
This is now changed to be derived from the local augmenter's
random state (which may still point towards the global random
state).",4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
999,aleju,kontakt@ajung.name,2019-01-27 13:58:53+01:00,fc11a70b5c9cfa90d74863405e1aec619399c032,https://github.com/aleju/imgaug/commit/fc11a70b5c9cfa90d74863405e1aec619399c032,Improve doc of reseed(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1000,aleju,kontakt@ajung.name,2019-01-27 13:59:26+01:00,c20c920d2563ad3eba4502c825d6fc990363d166,https://github.com/aleju/imgaug/commit/c20c920d2563ad3eba4502c825d6fc990363d166,"Fix code style, Add todo",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1001,aleju,kontakt@ajung.name,2019-01-27 13:59:46+01:00,a2fb725b3dc542fa0c543f8526440309523afb0e,https://github.com/aleju/imgaug/commit/a2fb725b3dc542fa0c543f8526440309523afb0e,Fix typo,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1002,aleju,kontakt@ajung.name,2019-01-27 14:36:45+01:00,0e98c02d108c829db5b88a1d0224050ca873698a,https://github.com/aleju/imgaug/commit/0e98c02d108c829db5b88a1d0224050ca873698a,"Add Pool

Adds new class imgaug.multicore.Pool.
This is a wrapper around multiprocessing.Pool, which
ensures easy, efficient and error-free multicore
augmentation with control over the random state seeds.",2,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestPool(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['pool.processes == 1', 'pool._pool is None', 'mock_Pool.call_count == 1', 'mock_Pool.close.call_count == 1', 'mock_Pool.join.call_count == 1', 'mock_Pool.call_args[0][0] == 1  # processes', 'mock_Pool.call_args[1][] == (augseq, 123)', 'mock_Pool.call_args[1][] == 4', 'mock_Pool.call_args[0][0] is None', 'mock_Pool.call_args[0][0] == expected', 'to_check.call_count == 1', 'to_check.call_args[0][0] == multicore._Pool_starworker', 'to_check.call_args[0][1][0][0] == 0', 'np.array_equal(to_check.call_args[0][1][0][1].images, batches[0].images)', 'to_check.call_args[0][1][1][0] == 1', 'np.array_equal(to_check.call_args[0][1][1][1].images, batches[1].images)', 'to_check.call_count == 1', 'to_check.call_args[0][0] == multicore._Pool_starworker', 'arg_batches[0][0] == 0', 'np.array_equal(arg_batches[0][1].images, batches[0].images)', 'arg_batches[1][0] == 1', 'np.array_equal(arg_batches[1][1].images, batches[1].images)', 'not np.array_equal(batch.images_aug[0], batch.images_aug[1])', 'not np.array_equal(vec, other_vec)', 'len(batches_aug1) == 60', 'len(batches_aug2) == 60', 'len(batches_aug3) == 60', 'not np.array_equal(b1.images, b1.images_aug)', 'not np.array_equal(b2.images, b2.images_aug)', 'not np.array_equal(b3.images, b3.images_aug)', 'np.array_equal(b1.images, batch.images)', 'np.array_equal(b2.images, batch.images)', 'np.array_equal(b3.images, batch.images)', 'np.array_equal(b1.images_aug, b2.images_aug)', 'not np.array_equal(b1.images_aug, b3.images_aug)', 'len(batches_aug1) == 60', 'len(batches_aug2) == 60', 'len(batches_aug3) == 60', 'keypoints_aug.keypoints[0].x == 2', 'keypoints_aug.keypoints[0].y == 0', 'not np.array_equal(b1.images, b1.images_aug)', 'not np.array_equal(b2.images, b2.images_aug)', 'not np.array_equal(b3.images, b3.images_aug)', 'np.array_equal(b1.images, batch.images)', 'np.array_equal(b2.images, batch.images)', 'np.array_equal(b3.images, batch.images)', 'np.array_equal(b1.images_aug, b2.images_aug)', 'not np.array_equal(b1.images_aug, b3.images_aug)', 'len(batches_aug) == 2*20', 'len(batches_aug) == 2*20', 'keypoints_aug.keypoints[0].x == 2', 'keypoints_aug.keypoints[0].y == 0', 'idx in ids', 'len(ids) == 200', 'idx in ids', 'len(ids) == 200']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1003,aleju,kontakt@ajung.name,2019-01-27 14:39:47+01:00,3ac770c7daf7bb10ec405b28d6d2e438408c9659,https://github.com/aleju/imgaug/commit/3ac770c7daf7bb10ec405b28d6d2e438408c9659,Switch augment_batches() to Pool for bg aug,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1004,aleju,kontakt@ajung.name,2019-01-27 15:12:31+01:00,2dd8d607c9cc0f853658ad9d503e1019cdac6a6b,https://github.com/aleju/imgaug/commit/2dd8d607c9cc0f853658ad9d503e1019cdac6a6b,Add Augmenter.pool() helper function,2,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['mock_Pool.call_count == 1', 'mock_Pool.__enter__.call_count == 1', 'mock_Pool.__exit__.call_count == 1', 'mock_Pool.call_args[0][0] == augseq', 'mock_Pool.call_args[1][] == 2', 'mock_Pool.call_args[1][] == 10', 'mock_Pool.call_args[1][] == 17']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1005,aleju,kontakt@ajung.name,2019-01-27 15:19:53+01:00,944a3d3c5e0dfef4c487c12eb5b6e94185fa94d2,https://github.com/aleju/imgaug/commit/944a3d3c5e0dfef4c487c12eb5b6e94185fa94d2,Add check script for multicore.Pool,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1006,aleju,kontakt@ajung.name,2019-01-27 15:29:44+01:00,4037a66e10eb446360b19514386093e1f3412322,https://github.com/aleju/imgaug/commit/4037a66e10eb446360b19514386093e1f3412322,Mark BatchLoader and BackgroundAugmenter as deprecated,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(loaded) == 20*nb_workers, \\', 'loader.all_finished()', 'len(loaded) == 20*nb_workers, \\', 'loader.all_finished()', 'len(caught_warnings) > 0', 'in str(warning.message)', 'isinstance(batch_aug, ia.Batch)', 'batch_aug.images is not None', 'batch_aug.images.dtype == np.uint8', 'batch_aug.images.shape == (1, 4, 8, 3)', 'np.array_equal(batch_aug.images, np.zeros((1, 4, 8, 3), dtype=np.uint8))', 'batch_aug.images_aug is not None', 'batch_aug.images_aug.dtype == np.uint8', 'batch_aug.images_aug.shape == (1, 4, 8, 3)', 'np.array_equal(batch_aug.images_aug, np.zeros((1, 4, 8, 3), dtype=np.uint8) + 1)', 'finished_signal is None', 'source_finished_signal is None', 'queue_source.empty()', 'queue_target.empty()', 'len(caught_warnings) > 0', '(']",[],[],[],[],[],[],[],[],[],[],[],[],"['len(loaded) == 20*nb_workers, \\', 'loader.all_finished()', 'len(loaded) == 20*nb_workers, \\', 'loader.all_finished()', 'isinstance(batch_aug, ia.Batch)', 'batch_aug.images is not None', 'batch_aug.images.dtype == np.uint8', 'batch_aug.images.shape == (1, 4, 8, 3)', 'np.array_equal(batch_aug.images, np.zeros((1, 4, 8, 3), dtype=np.uint8))', 'batch_aug.images_aug is not None', 'batch_aug.images_aug.dtype == np.uint8', 'batch_aug.images_aug.shape == (1, 4, 8, 3)', 'np.array_equal(batch_aug.images_aug, np.zeros((1, 4, 8, 3), dtype=np.uint8) + 1)', 'finished_signal is None', 'source_finished_signal is None', 'queue_source.empty()', 'queue_target.empty()']",[],[],[],[],[],[],[],[],[],[],[],[]
1007,aleju,kontakt@ajung.name,2019-01-27 15:30:59+01:00,f066d41174d05cc6ec374a26b9713ea20fe785af,https://github.com/aleju/imgaug/commit/f066d41174d05cc6ec374a26b9713ea20fe785af,Remove dead development code,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1008,Alexander Jung,kontakt@ajung.name,2019-01-27 16:17:59+01:00,264b0bff48e13bd60d85c53b71b54dda9a31ccea,https://github.com/aleju/imgaug/commit/264b0bff48e13bd60d85c53b71b54dda9a31ccea,Add changes from branch 'multiprocessing',1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1009,aleju,kontakt@ajung.name,2019-01-27 16:30:06+01:00,57a188a4763d950e3bb4706798013d9aad7116ab,https://github.com/aleju/imgaug/commit/57a188a4763d950e3bb4706798013d9aad7116ab,Remove unnecessary imports,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1010,aleju,kontakt@ajung.name,2019-01-27 16:33:55+01:00,79ae429f780044c91e0a3897ee147dad52cb8efe,https://github.com/aleju/imgaug/commit/79ae429f780044c91e0a3897ee147dad52cb8efe,Prevent pylint false positive error,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1011,aleju,kontakt@ajung.name,2019-01-27 17:47:36+01:00,901441383235fda32b16a7ee9b2c8dfc0cba29d8,https://github.com/aleju/imgaug/commit/901441383235fda32b16a7ee9b2c8dfc0cba29d8,Fix wrong test name,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1012,aleju,kontakt@ajung.name,2019-01-27 17:50:11+01:00,bf0628290a4a3b9cddb35339375ce6f01e62d53b,https://github.com/aleju/imgaug/commit/bf0628290a4a3b9cddb35339375ce6f01e62d53b,Change draw_distribution_graph() to tempfile drawing,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1013,aleju,kontakt@ajung.name,2019-01-27 17:52:14+01:00,d3088a912ed299d9d15cff5c1c3c8299f9d6e9fc,https://github.com/aleju/imgaug/commit/d3088a912ed299d9d15cff5c1c3c8299f9d6e9fc,Fix possible shape mismatch problem,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1014,aleju,kontakt@ajung.name,2019-01-27 18:07:21+01:00,cba645af4c9ab1ac0a7f168c3d9b03b6c9a5e38e,https://github.com/aleju/imgaug/commit/cba645af4c9ab1ac0a7f168c3d9b03b6c9a5e38e,Improve performance of test for draw_distributions_graph(),1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,['class TestDrawDistributionsGrid(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['grid_observed.shape == (4, 3, 2)', 'params[0].draw_distribution_graph.call_count == 1', 'params[1].draw_distribution_graph.call_count == 1', 'params[0].draw_distribution_graph.call_args[1][] == (1, 2)', 'params[0].draw_distribution_graph.call_args[1][', 'params[1].draw_distribution_graph.call_args[1][] == (3, 4)', 'params[1].draw_distribution_graph.call_args[1][', 'draw_grid_mock.call_count == 1', 'draw_grid_mock.call_args[0][0][0].shape == (20, 21, 3)', 'draw_grid_mock.call_args[0][0][1].shape == (20, 21, 3)', 'draw_grid_mock.call_args[1][] == 2', 'draw_grid_mock.call_args[1][] == 3']",[],[],[],[],[],[],[],[],[],[],[],[],['np.average(diff) < 10'],[],[],[],[],[],[],[],[],[],[],[],[]
1015,Alexander Jung,kontakt@ajung.name,2019-01-27 18:08:05+01:00,b58f9bcad3d4ec878c8396b85f2f94d640d438b9,https://github.com/aleju/imgaug/commit/b58f9bcad3d4ec878c8396b85f2f94d640d438b9,Add changes from branch params_draw_graph,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1016,aleju,kontakt@ajung.name,2019-01-27 18:29:41+01:00,393491441d4a0a4cf32d8b828da866240da1a579,https://github.com/aleju/imgaug/commit/393491441d4a0a4cf32d8b828da866240da1a579,Remove outdated function call,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1017,aleju,kontakt@ajung.name,2019-01-12 13:34:52+01:00,8d97c618ba97aa18f327a2d2b8955e00244a3d0c,https://github.com/aleju/imgaug/commit/8d97c618ba97aa18f327a2d2b8955e00244a3d0c,"Improve performance of GaussianBlur

+ Add blur_gaussian_() function.
+ Add backend option for gaussian blurring. (Currently only in
  blur_gaussian_().)
+ Allow cv2 backend for gaussian blurring.
* Improve performance of gaussian blurring by about 5-15x.
* Allow more dtypes in gaussian blurring.",2,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,61,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,['class Test_blur_gaussian_(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['observed.shape == image.shape', 'observed.dtype.name == ', 'np.all(observed[2, 2] < 255)', 'np.sum(observed[mask]) > (5*5-1)', 'np.array_equal(observed[..., c], observed[..., 0])', 'np.array_equal(observed, image)', 'np.array_equal(observed, image)', 'np.array_equal(observed, image)', 'not np.array_equal(observed_no_eps, observed_with_eps)', 'np.array_equal(observed_with_eps, image)', 'np.array_equal(observed, image+1)', 'mock_GaussianBlur.call_count == 1', 'np.array_equal(mock_GaussianBlur.call_args[0][0], image)', 'isinstance(mock_GaussianBlur.call_args[0][1], tuple)', 'np.allclose(np.float32(mock_GaussianBlur.call_args[0][1]),', 'np.isclose(mock_GaussianBlur.call_args[1][], sigma)', 'np.isclose(mock_GaussianBlur.call_args[1][], sigma)', 'mock_GaussianBlur.call_args[1][] == cv2.BORDER_REFLECT_101', 'mock_GaussianBlur.call_count == 1', 'mock_gaussian_filter.call_count == 1', 'np.average(diff) < 0.05 * (size * size)', 'np.average(diff) < 0.05 * (size * size)', 'np.average(diff) < 0.05 * (size * size)', 'len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)', 'image_aug.dtype.name == ', 'np.all(image_aug == image)', 'image_aug.dtype.name == dtype.name', 'np.all(image_aug == image)', 'image_aug.dtype.name == dtype.name', 'np.allclose(image_aug, image)', 'image_aug.dtype.name == ', 'np.all(image_aug == (mask > 0.5))', 'image_aug.shape == mask.shape', 'image_aug.dtype.type == dtype', 'np.max(diff) <= 4', 'np.max(diff) <= 0.01 * dynamic_range', 'image_aug.shape == mask.shape', 'image_aug.dtype.type == dtype', 'np.max(diff) < np.dtype(dtype).itemsize * 0.01 * np.float128(value)', 'image_aug.shape == mask_bool.shape', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == expected)', 'image_aug.shape == mask_bool.shape', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == expected)', 'image_aug.shape == mask.shape', 'np.max(diff) <= 4', 'np.average(diff) <= 2', 'image_aug.shape == mask.shape', 'np.max(diff) < 4', 'np.average(diff) < 2.0', 'image_aug.shape == mask.shape', 'np.max(diff) <= 4', 'image_aug.shape == mask.shape', 'np.max(diff) < 4.0', 'image_aug.shape == mask.shape', 'np.max(diff) <= 4', 'np.max(diff) <= 0.01 * dynamic_range', 'image_aug.shape == mask.shape', 'np.max(diff) < np.dtype(dtype).itemsize * 0.01 * np.float128(value)']",[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.type == np.bool_', 'np.all(image_aug == expected)', 'np.max(diff) <= 2', 'np.max(diff) < 1.0', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == expected)', 'np.max(diff) <= 2', 'np.max(diff) < 1.0', 'np.max(diff) <= 2**(1 + np.dtype(dtype).itemsize)', 'np.max(diff) < 2**(1 + np.dtype(dtype).itemsize)']",[],[],[],[],[],[],[],[],[],[],[],[]
1018,aleju,kontakt@ajung.name,2019-01-12 14:47:18+01:00,1c53c2ab7aa530a562cc1a20adf93433b8a8bc3c,https://github.com/aleju/imgaug/commit/1c53c2ab7aa530a562cc1a20adf93433b8a8bc3c,Refactor blur in SnowflakesLayer to call blur_gaussian_(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1019,aleju,kontakt@ajung.name,2019-01-12 17:37:50+01:00,a639c56f640a9fc5bc487b5d4d9544cc876fa62a,https://github.com/aleju/imgaug/commit/a639c56f640a9fc5bc487b5d4d9544cc876fa62a,"Improve performance of ElasticTransformation

* Switch blurring to blur_gaussian_()
+ Add remapping via cv2
+ Extend dtype tests to order!=0
* Overall about 5-10x speed improvement",3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['img_c.shape == (250, 250, nb_channels)', 'observed.shape == (250, 250, nb_channels)', 'np.array_equal(observed[..., c], observed[..., 0])', 'np.sum(np.logical_and(0 < observed, observed < 255)) == 0', 'np.sum(np.logical_and(0 < observed, observed < 255)) > 0', '(same / img_aug_mask.size) >= 0.94', 'image_aug.dtype.name == image.dtype.name', 'image_aug.dtype.name == dtype.name', 'image_aug.dtype.name == dtype.name', 'not np.all(_isclose(image_aug, np.float128(value)))', 'np.any(_isclose(image_aug[~mask], np.float128(value)))', 'image_aug.dtype.name == image.dtype.name', 'not np.all(image_aug == 1)', 'np.any(image_aug[~mask] == 1)', 'image_aug.dtype.name == dtype.name', 'not np.all(image_aug == max_value)', 'np.any(image_aug[~mask] == max_value)', 'not np.all(np.isclose(image_aug, max_value, rtol=0, atol=atol))', 'np.any(np.isclose(image_aug[~mask], max_value, rtol=0, atol=atol))', 'image_aug.dtype.name == dtype.name', 'not np.all(_isclose(image_aug, np.float128(value)))', 'np.any(_isclose(image_aug[~mask], np.float128(value)))', 'not np.all(np.isclose(image_aug, np.float128(value), rtol=0, atol=atol))', 'np.any(np.isclose(image_aug[~mask], np.float128(value), rtol=0, atol=atol))']",[],[],[],[],[],[],[],[],[],[],[],[],"['(same / img_aug_mask.size) >= 0.96', 'image_aug.dtype == image.dtype', 'image_aug.dtype == np.dtype(dtype)', 'image_aug.dtype == np.dtype(dtype)', 'not np.all(_isclose(image_aug, float(value)))', 'np.any(_isclose(image_aug[~mask], float(value)))']",[],[],[],[],[],[],[],[],[],[],[],[]
1020,aleju,kontakt@ajung.name,2019-01-12 17:40:38+01:00,08448ff265836cc0cd93cdf0ed7bfc74170e1696,https://github.com/aleju/imgaug/commit/08448ff265836cc0cd93cdf0ed7bfc74170e1696,Add todo,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1021,aleju,kontakt@ajung.name,2019-01-12 17:42:01+01:00,f4e71d8d11d05b07f8b3a295aafa77182619c4eb,https://github.com/aleju/imgaug/commit/f4e71d8d11d05b07f8b3a295aafa77182619c4eb,Add todos,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1022,aleju,kontakt@ajung.name,2019-01-12 18:36:03+01:00,f461ebf70b26322e85f5aa6824736a834d2aea31,https://github.com/aleju/imgaug/commit/f461ebf70b26322e85f5aa6824736a834d2aea31,"Improve performance of imgaug.imgaug.pad()

+ Add cv2 backend to pad().
* Now about 2x as fast as before (for some dtypes and modes).
* Affects also pad_to_aspect_ratio(), HeatmapsOnImage.pad(),
  HeatmapsOnImage.pad_to_aspect_ratio(), PadToFixedSize, Pad,
  CropAndPad.
+ Add test cases for pad.",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['arr_pad.dtype.name == np.dtype(dtype).name', 'arr_pad.shape == (4, 3)', 'np.all(arr_pad[0, :] == 0)', 'np.all(arr_pad[1:, :] == arr)', 'arr_pad.shape == (4, 3, nb_channels)', 'np.all(arr_pad[0, :, :] == 0)', 'np.all(arr_pad[1:, :, :] == arr)', 'arr_pad.dtype.name == np.dtype(dtype).name', 'arr_pad.shape == (4, 3)', '_allclose(arr_pad[0, :], 0)', '_allclose(arr_pad[1:, :], arr)', 'arr_pad.shape == (4, 3, nb_channels)', '_allclose(arr_pad[0, :, :], 0)', '_allclose(arr_pad[1:, :, :], arr)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1023,aleju,kontakt@ajung.name,2019-01-12 18:41:19+01:00,43250c1d7b091ee9c2ae635eec1caae7cd4af699,https://github.com/aleju/imgaug/commit/43250c1d7b091ee9c2ae635eec1caae7cd4af699,Add todo,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1024,aleju,kontakt@ajung.name,2019-01-12 21:25:52+01:00,50457c6560d2dac425a8e104be8db906ee8b9ea5,https://github.com/aleju/imgaug/commit/50457c6560d2dac425a8e104be8db906ee8b9ea5,"Improve performance of GammaContrast

* Refactor GammaContrast to call
  imgaug.augmenters.contrast.adjust_gamma() function.
+ Add cv2 to adjust_gamma() (uint8 only).
+ Add some tests for unusual channel numbers.
* Overall speedup is about 5-20x.",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.shape == (3, 3, nb_channels)', 'image_aug.dtype == np.dtype(dtype)', 'len(np.unique(image_aug)) <= nb_channels', 'diff <= tolerance', 'image_aug.shape == (3, 3, nb_channels)', 'image_aug.dtype == np.dtype(dtype)', '_allclose(value_aug, value_expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1025,aleju,kontakt@ajung.name,2019-01-12 22:01:27+01:00,f986e6d1d44e3ba37cc71e0012019797181ac8e8,https://github.com/aleju/imgaug/commit/f986e6d1d44e3ba37cc71e0012019797181ac8e8,Fix bad cval padding in pad() with cv2 + constant mode,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['arr_pad.shape == (4, 3, nb_channels)', 'arr_pad.dtype == np.dtype(dtype)', 'np.all(arr_pad[0, 0, :] == v1)', 'np.all(arr_pad[0, 1, :] == v1)', 'np.all(arr_pad[0, 2, :] == v1)', 'np.all(arr_pad[1, 0, :] == 0)', 'arr_pad.shape == (4, 3, nb_channels)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[0, 0, :], 0.4)', '_allclose(arr_pad[0, 1, :], 0.4)', '_allclose(arr_pad[0, 2, :], 0.4)', '_allclose(arr_pad[1, 0, :], 0.0)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1026,aleju,kontakt@ajung.name,2019-01-13 09:34:01+01:00,8c5729fd1c97ca344c21e12e96bd28aea240ed92,https://github.com/aleju/imgaug/commit/8c5729fd1c97ca344c21e12e96bd28aea240ed92,"Improve performance of SigmoidContrast

+ Add adjust_contrast_sigmoid()
+ Add cv2 handling to new function (for uint8)
* Reorder sigmoid 1d parameters internally to (gain, cutoff)
  instead of (cutoff, gain)
* Overall 1.5-5x faster (for uint8)",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['aug.params1d[0].a.value == 1', 'aug.params1d[0].b.value == 2', 'np.allclose(aug.params1d[1].a.value, 0.25)', 'np.allclose(aug.params1d[1].b.value, 0.75)', 'all([val in aug.params1d[0].a for val in [1, 2]])', 'all([np.allclose(val, val_choice) for val, val_choice in zip([0.25, 0.75], aug.params1d[1].a)])']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(aug.params1d[0].a.value, 0.25)', 'np.allclose(aug.params1d[0].b.value, 0.75)', 'aug.params1d[1].a.value == 1', 'aug.params1d[1].b.value == 2', 'all([np.allclose(val, val_choice) for val, val_choice in zip([0.25, 0.75], aug.params1d[0].a)])', 'all([val in aug.params1d[1].a for val in [1, 2]])']",[],[],[],[],[],[],[],[],[],[],[],[]
1027,aleju,kontakt@ajung.name,2019-01-13 09:37:19+01:00,607a34f7b58515d4f2cb7a3798ca99adf0bbd816,https://github.com/aleju/imgaug/commit/607a34f7b58515d4f2cb7a3798ca99adf0bbd816,Rename adjust_gamma() to adjust_contrast_gamma(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1028,aleju,kontakt@ajung.name,2019-01-13 09:43:14+01:00,bfa3dfd65726077ea6e86addeb703fc5ccb9b196,https://github.com/aleju/imgaug/commit/bfa3dfd65726077ea6e86addeb703fc5ccb9b196,"Improve performance of LogContrast

+ Add new function adjust_contrast_log()
+ Add cv2 handling to the new function (for uint8)
* Overall performance improvement of 1.5-15x",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1029,aleju,kontakt@ajung.name,2019-01-13 09:49:19+01:00,7a33994e5d01dff01ce25d7c7df0a223a97fbdbf,https://github.com/aleju/imgaug/commit/7a33994e5d01dff01ce25d7c7df0a223a97fbdbf,Fix outdated dtype link,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1030,aleju,kontakt@ajung.name,2019-01-13 09:50:40+01:00,50c0a0e54a8116a65793799008d0b7a2462890ea,https://github.com/aleju/imgaug/commit/50c0a0e54a8116a65793799008d0b7a2462890ea,Move _adjust_linear() within file,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1031,aleju,kontakt@ajung.name,2019-01-13 09:53:30+01:00,59f91649106d310801f8a4425a52a15055fb790d,https://github.com/aleju/imgaug/commit/59f91649106d310801f8a4425a52a15055fb790d,Rename _adjust_linear() to adjust_contrast_linear(),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(img_aug, contrast_lib.adjust_contrast_linear(img, alpha=alpha))', 'np.array_equal(img3d_aug, contrast_lib.adjust_contrast_linear(img3d, alpha=alpha))']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(img_aug, contrast_lib._adjust_linear(img, alpha=alpha))', 'np.array_equal(img3d_aug, contrast_lib._adjust_linear(img3d, alpha=alpha))']",[],[],[],[],[],[],[],[],[],[],[],[]
1032,aleju,kontakt@ajung.name,2019-01-13 10:02:44+01:00,a1640e0c9ead32a55162a9597f14fb3eb7e58c45,https://github.com/aleju/imgaug/commit/a1640e0c9ead32a55162a9597f14fb3eb7e58c45,"Improve performance of LinearContrast

+ Add cv2 handling to adjust_contrast_linear() (uint8 only)
* Improve performance by 1.5-5x",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1033,aleju,kontakt@ajung.name,2019-01-13 10:07:23+01:00,c6208767fedaade58431be2d0237c037cc52772e,https://github.com/aleju/imgaug/commit/c6208767fedaade58431be2d0237c037cc52772e,Add docstring for adjust_contrast_linear(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1034,aleju,kontakt@ajung.name,2019-01-13 10:25:52+01:00,0018eb090811c96af754588385983e029eec4319,https://github.com/aleju/imgaug/commit/0018eb090811c96af754588385983e029eec4319,Add todos,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1035,aleju,kontakt@ajung.name,2019-01-13 10:26:16+01:00,9b461855e8ece25638e2f37b63889f62f3b0570a,https://github.com/aleju/imgaug/commit/9b461855e8ece25638e2f37b63889f62f3b0570a,Fix wrong comment,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1036,aleju,kontakt@ajung.name,2019-01-13 11:04:55+01:00,825985a3af2d0b8116cf1fc38db919d8e9ad22e7,https://github.com/aleju/imgaug/commit/825985a3af2d0b8116cf1fc38db919d8e9ad22e7,"Make hooks default to None in augment_images()

hooks has previously defaulted to a new instance of
HooksImages in case it was set to None when calling
augment_images(). This is now removed and hooks
keeps the value None in these cases.
This should improve performance marginally by saving
a few hooks function calls and makes it clearer whether
the user has provided a hooks instance. In cases
where such an instance was not provided, steps related
to hooks may be skipped. This will enable to save
copies of images in child calls when no hooks were
specificied (i.e. switch to full in-place augmentation),
which should lead to a sizeable performance improvement.",4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1037,aleju,kontakt@ajung.name,2019-01-13 14:36:52+01:00,d237381e0161aa6136978468e6cde1e534bf51d2,https://github.com/aleju/imgaug/commit/d237381e0161aa6136978468e6cde1e534bf51d2,"Enable in-place aug for augment_images() child calls

Previously, all calls to augment_images() would perform
validation, normalization and copying of inputs.
This is now changed to only happen for the first call
of augment_images() in each hierarchy of calls.
All child calls augment (by default) in-place and skip
the validation and normalization steps. This improves
the performance by skipping unnecessary validations,
normalizations and copies.
Note that this only happens if hooks is not set,
otherwise the mentioned steps are still performed.",4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1038,aleju,kontakt@ajung.name,2019-01-13 15:01:36+01:00,a176b2b01f2106023fa086d21ad3286071837c90,https://github.com/aleju/imgaug/commit/a176b2b01f2106023fa086d21ad3286071837c90,"Make hooks default to None in augment_heatmaps/keypoints

See previous similar change for augment_images().
The hooks parameter previously defaulted to a Hooks* instance,
now it defaults to None. This enables child augment_* calls
to tell whether a hooks instance was originally provided
or just the default is used.",4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1039,aleju,kontakt@ajung.name,2019-01-13 16:42:32+01:00,4d87eb8f8e011ddd4fabb9cc2a94794eab5eb561,https://github.com/aleju/imgaug/commit/4d87eb8f8e011ddd4fabb9cc2a94794eab5eb561,"Enable in-place aug for augment_heatmaps/keypoints child calls

See previous similar commit that did the same for augment_images().",3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1040,aleju,kontakt@ajung.name,2019-01-13 16:46:37+01:00,02b22eaa4a44851376066d3172ed3e30600730a1,https://github.com/aleju/imgaug/commit/02b22eaa4a44851376066d3172ed3e30600730a1,Add __str__ method to Alpha,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1041,aleju,kontakt@ajung.name,2019-01-14 21:27:48+01:00,4f1587c4888d07390c5bc5d650358626d560ff2c,https://github.com/aleju/imgaug/commit/4f1587c4888d07390c5bc5d650358626d560ff2c,"Improve performance of Multiply

+ Add special treatment of uint8 to Multiply
* Speedup of around 10-15x compared to previous dtype-tolerant
  approach and 1.5-3x compared to original uint8-focused
  approach.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1042,aleju,kontakt@ajung.name,2019-01-15 18:33:00+01:00,f1c3378945a75749308d439a0b61563703c85838,https://github.com/aleju/imgaug/commit/f1c3378945a75749308d439a0b61563703c85838,"Improve performance of Add

+ Add uint8-specific handling to Add
* Achieve speedup of about 3-4x to dtype-tolerant
  handling at about 1.1x to 2x compared to naive
  image+sample approach",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['img_aug.item(0) == expected', 'np.all(img_aug == expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1043,aleju,kontakt@ajung.name,2019-01-15 18:59:08+01:00,22e2edfedb22e58bec22272c79b02b44474155c3,https://github.com/aleju/imgaug/commit/22e2edfedb22e58bec22272c79b02b44474155c3,"Open Add to continuous values

* Handle inputs in Add as continuous instead of forcing
  discrete values.
* Remove value_range in Add's parameter handling.
+ Add round parameter to meta._restore_dtypes(), which
  defaults to True and if True rounds values before
  clipping, provided the output dtype is int/uint/boolean.",5,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['img_aug.item(0) == 2', 'img_aug.item(0) == 2', 'img_aug.item(0) == 1', 'img_aug.item(0) == 1']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1044,aleju,kontakt@ajung.name,2019-01-15 20:34:40+01:00,568315f060f72dcf6764536b9686b37af09ae540,https://github.com/aleju/imgaug/commit/568315f060f72dcf6764536b9686b37af09ae540,Improve performance of Deterministic,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1045,aleju,kontakt@ajung.name,2019-01-15 21:14:10+01:00,2bb21d1aef40f25bdf7dd2362debafad01015847,https://github.com/aleju/imgaug/commit/2bb21d1aef40f25bdf7dd2362debafad01015847,"Improve performance of AddElementwise

+ Add special treatment of uint8 inputs in AddElementwise
* Is about 60-100% faster than before (though probably no
  speedup compared to before making AddElementwise handle
  more dtypes).",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['img_aug.item(0) == expected', 'np.all(img_aug == expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1046,aleju,kontakt@ajung.name,2019-01-16 17:51:20+01:00,31edc0669ed8739f37602710f3859655295b2792,https://github.com/aleju/imgaug/commit/31edc0669ed8739f37602710f3859655295b2792,Fix doc,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1047,aleju,kontakt@ajung.name,2019-01-17 20:37:32+01:00,d1e3f9c825e6c41d6558ca24fda8c9140d1c32aa,https://github.com/aleju/imgaug/commit/d1e3f9c825e6c41d6558ca24fda8c9140d1c32aa,Add todos,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1048,aleju,kontakt@ajung.name,2019-01-17 20:39:37+01:00,bace893b16df5ba2bf6bf264481b0c67565f8f5d,https://github.com/aleju/imgaug/commit/bace893b16df5ba2bf6bf264481b0c67565f8f5d,Improve performance of deterministic Uniform,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1049,aleju,kontakt@ajung.name,2019-01-17 20:42:54+01:00,c0f433aea1a58400767e5f655be1cc69fea51623,https://github.com/aleju/imgaug/commit/c0f433aea1a58400767e5f655be1cc69fea51623,Improve performance for deterministic Laplace,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1050,aleju,kontakt@ajung.name,2019-01-17 20:45:00+01:00,3e88687eb8009812b755544836ecd08367fa28d8,https://github.com/aleju/imgaug/commit/3e88687eb8009812b755544836ecd08367fa28d8,Improve performance for deterministic Normal,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1051,aleju,kontakt@ajung.name,2019-01-17 20:46:58+01:00,81088b19d5bb52ab87a2e2429183f8a4cb453e83,https://github.com/aleju/imgaug/commit/81088b19d5bb52ab87a2e2429183f8a4cb453e83,Improve performance for deterministic DiscreteUniform,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1052,aleju,kontakt@ajung.name,2019-01-17 20:48:54+01:00,2a136ad80403a15e199d48f13d0da39f4803c2b7,https://github.com/aleju/imgaug/commit/2a136ad80403a15e199d48f13d0da39f4803c2b7,Add todos,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1053,aleju,kontakt@ajung.name,2019-01-17 20:50:40+01:00,c223e9543b64d41557bf74701cfd994a9c852cfe,https://github.com/aleju/imgaug/commit/c223e9543b64d41557bf74701cfd994a9c852cfe,Improve float check in force_np_float_dtype(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1054,aleju,kontakt@ajung.name,2019-01-18 15:10:07+01:00,2769f8614a1155808009e796e4326197362a5be4,https://github.com/aleju/imgaug/commit/2769f8614a1155808009e796e4326197362a5be4,Add meta.get_minimal_dtype_for_values(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1055,aleju,kontakt@ajung.name,2019-01-18 16:13:08+01:00,c3f083bd38fce07bd54387e7c884cc6527626153,https://github.com/aleju/imgaug/commit/c3f083bd38fce07bd54387e7c884cc6527626153,Improve Discretize to return minimal int dtype,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1056,aleju,kontakt@ajung.name,2019-01-18 16:39:27+01:00,a1286e3e4dfc1c871ae332ce2e8042414b0c4a24,https://github.com/aleju/imgaug/commit/a1286e3e4dfc1c871ae332ce2e8042414b0c4a24,Make test for parameters.Divide more flexible,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['p.draw_sample() == (v1 / v2)', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.float64) + (v1 / v2))', 'p.draw_sample() == (v1 / v2)', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.float64) + (v1 / v2))', '(v1 / v2) - _eps(sample) <= sample <= (v1 / v2) + _eps(sample)', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + (v1 / v2))', '(v1 / v2) - _eps(sample) <= sample <= (v1 / v2) + _eps(sample)', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + (v1 / v2))', 'np.all(samples > (1.0 / 2.0) - _eps(samples))', 'np.all(samples < (1.0 / 1.0) + _eps(samples))', 'samples_sorted[0] - _eps(samples) < samples_sorted[-1] < samples_sorted[0] + _eps(samples)', 'np.all(samples > (1.0 / 2.0) - _eps(samples))', 'np.all(samples < (1.0 / 1.0) + _eps(samples))', 'not (samples_sorted[0] - _eps(samples) < samples_sorted[-1] < samples_sorted[0] + _eps(samples))', 'np.all(samples > (1.0 / 1.0) - _eps(samples))', 'np.all(samples < (2.0 / 1.0) + _eps(samples))', 'not (samples_sorted[0] - _eps(samples) < samples_sorted[-1] < samples_sorted[0] + _eps(samples))', 'np.all(samples > (1.0 / 1.0) - _eps(samples))', 'np.all(samples < (2.0 / 1.0) + _eps(samples))', 'not (samples_sorted[0] - _eps(samples_sorted) < samples_sorted[-1]']",[],[],[],[],[],[],[],[],[],[],[],[],"['p.draw_sample() == v1 / v2', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.float64) + v1 / v2)', 'p.draw_sample() == v1 / v2', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.float64) + v1 / v2)', 'v1 / v2 - eps < p.draw_sample() < v1 / v2 + eps', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 / v2)', 'v1 / v2 - eps < p.draw_sample() < v1 / v2 + eps', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 / v2)', 'np.all(samples > 1.0 / 2.0 - eps)', 'np.all(samples < 1.0 / 1.0 + eps)', 'samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps', 'np.all(samples > 1.0 / 2.0 - eps)', 'np.all(samples < 1.0 / 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'np.all(samples > 1.0 / 1.0 - eps)', 'np.all(samples < 2.0 / 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'np.all(samples > 1.0 / 1.0 - eps)', 'np.all(samples < 2.0 / 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)']",[],[],[],[],[],[],[],[],[],[],[],[]
1057,aleju,kontakt@ajung.name,2019-01-18 17:00:37+01:00,565bfd42c3b915ee5621017956ed5fb1e1d8beb7,https://github.com/aleju/imgaug/commit/565bfd42c3b915ee5621017956ed5fb1e1d8beb7,Make test for parameters.Uniform more flexible,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['0 - _eps(sample) < sample < 1.0 + _eps(sample)', 'np.all(np.logical_and(0 - _eps(samples) < samples, samples < 1.0 + _eps(samples)))', '-1.0 - _eps(sample) < sample < 1.0 + _eps(sample)', 'np.all(np.logical_and(-1.0 - _eps(samples) < samples, samples < 1.0 + _eps(samples)))', '-1.0 - _eps(sample) < sample < 1.0 + _eps(sample)', 'np.all(np.logical_and(-1.0 - _eps(samples) < samples, samples < 1.0 + _eps(samples)))', '-1.0 - _eps(sample) < sample < 1.0 + _eps(sample)', 'np.all(np.logical_and(-1.0 - _eps(samples) < samples, samples < 1.0 + _eps(samples)))', '1.0 - _eps(sample) < sample < 1.0 + _eps(sample)', 'np.all(np.logical_and(1.0 - _eps(samples) < samples, samples < 1.0 + _eps(samples)))']",[],[],[],[],[],[],[],[],[],[],[],[],"['0 - eps < sample < 1.0 + eps', 'np.all(np.logical_and(0 - eps < samples, samples < 1.0 + eps))', '-1.0 - eps < sample < 1.0 + eps', 'np.all(np.logical_and(-1.0 - eps < samples, samples < 1.0 + eps))', '-1.0 - eps < sample < 1.0 + eps', 'np.all(np.logical_and(-1.0 - eps < samples, samples < 1.0 + eps))', '-1.0 - eps < sample < 1.0 + eps', 'np.all(np.logical_and(-1.0 - eps < samples, samples < 1.0 + eps))', '1.0 - eps < sample < 1.0 + eps', 'np.all(np.logical_and(1.0 - eps < samples, samples < 1.0 + eps))']",[],[],[],[],[],[],[],[],[],[],[],[]
1058,aleju,kontakt@ajung.name,2019-01-18 17:10:13+01:00,e778338f168e8553d39089547e540f8885edeb2a,https://github.com/aleju/imgaug/commit/e778338f168e8553d39089547e540f8885edeb2a,"Improve Uniform to return minimal float dtype

This patch changes parameters.Uniform(a, b)
so that it always returns the minimal float dtype
that still covers a and b.
This is assumed to improve performance for
following tasks that have to work with large
numbers of samples from Uniform, but e.g. don't
want to calculate min/max values.",3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1059,aleju,kontakt@ajung.name,2019-01-18 19:17:36+01:00,3a0846839d9c45f98db4830cca693671080b8c74,https://github.com/aleju/imgaug/commit/3a0846839d9c45f98db4830cca693671080b8c74,Improve code style,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['got_exception is False', 'got_exception is False', 'got_exception is False', 'got_exception is False', 'got_exception is True', 'got_exception is False', 'got_exception is True', 'got_exception is False', 'got_exception is True', 'got_exception is True', 'got_exception is False', 'got_exception is False', 'got_exception is False', 'got_exception is True', 'got_exception is True', 'got_exception is True', 'got_exception is False', 'got_exception is True', 'got_exception is True', 'got_exception is False', 'got_exception is True']",[],[],[],[],[],[],[],[],[],[],[],[],"['got_exception == False', 'got_exception == False', 'got_exception == False', 'got_exception == False', 'got_exception == True', 'got_exception == False', 'got_exception == True', 'got_exception == False', 'got_exception == True', 'got_exception == True', 'got_exception == False', 'got_exception == False', 'got_exception == False', 'got_exception == True', 'got_exception == True', 'got_exception == True', 'got_exception == False', 'got_exception == True', 'got_exception == True', 'got_exception == False', 'got_exception == True']",[],[],[],[],[],[],[],[],[],[],[],[]
1060,aleju,kontakt@ajung.name,2019-01-18 19:57:55+01:00,294989ae6def6962bdb54574ac38abbb68d6f4ed,https://github.com/aleju/imgaug/commit/294989ae6def6962bdb54574ac38abbb68d6f4ed,Make eps more flexible in parameter tests,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['-1.2 - _eps(sample) < sample < -1.2 + _eps(sample) or 1.7 - _eps(sample) < sample < 1.7 + _eps(sample)', '0 - _eps(sample) < sample < 1.0 + _eps(sample)', 'np.all(np.logical_and(0 - _eps(sample) <= samples, samples <= 1.0 + _eps(sample)))', 'sample1 - _eps(sample1) < sample2 < sample1 + _eps(sample1)', 'samples1_sorted[0] - _eps(samples1_sorted[0]) < samples1_sorted[-1] < samples1_sorted[0] + _eps(samples1_sorted[0])', 'samples2_sorted[0] - _eps(samples2_sorted[0]) < samples2_sorted[-1] < samples2_sorted[0] + _eps(samples2_sorted[0])', 'samples3_sorted[0] - _eps(samples3_sorted[0]) < samples3_sorted[-1] < samples3_sorted[0] + _eps(samples3_sorted[0])', 'samples4_sorted[0] - _eps(samples4_sorted[0]) < samples4_sorted[-1] < samples4_sorted[0] + _eps(samples4_sorted[0])', 'samples5_sorted[0] - _eps(samples5_sorted[0]) < samples5_sorted[-1] < samples5_sorted[0] + _eps(samples5_sorted[0])', 'samples6_sorted[0] - _eps(samples6_sorted[0]) < samples6_sorted[-1] < samples6_sorted[0] + _eps(samples6_sorted[0])', '0.5 - _eps(sample) < sample < 0.5 + _eps(sample)', 'np.all(np.logical_and(0.5 - _eps(sample) < samples, samples < 0.5 + _eps(sample)))', 'v1 * v2 - _eps(sample) < sample < v1 * v2 + _eps(sample)', 'v1 * v2 - _eps(sample) < sample < v1 * v2 + _eps(sample)', 'np.all(samples > 1.0 * 1.0 - _eps(samples))', 'np.all(samples < 1.0 * 2.0 + _eps(samples))', 'samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0])', 'np.all(samples > 1.0 * 1.0 - _eps(samples))', 'np.all(samples < 1.0 * 2.0 + _eps(samples))', 'not (samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0]))', 'np.all(samples > 1.0 * 1.0 - _eps(samples))', 'np.all(samples < 2.0 * 1.0 + _eps(samples))', 'not (samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0]))', 'np.all(samples > 1.0 * 1.0 - _eps(samples))', 'np.all(samples < 2.0 * 1.0 + _eps(samples))', 'not (samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0]))', 'v1 + v2 - _eps(sample) < sample < v1 + v2 + _eps(sample)', 'v1 + v2 - _eps(sample) < sample < v1 + v2 + _eps(sample)', 'np.all(samples >= 1.0 + 1.0 - _eps(samples))', 'np.all(samples <= 1.0 + 2.0 + _eps(samples))', 'samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0])', 'np.all(samples >= 1.0 + 1.0 - _eps(samples))', 'np.all(samples <= 1.0 + 2.0 + _eps(samples))', 'not (samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0]))', 'np.all(samples >= 1.0 + 1.0 - _eps(samples))', 'np.all(samples <= 2.0 + 1.0 + _eps(samples))', 'not (samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0]))', 'np.all(samples >= 1.0 + 1.0 - _eps(samples))', 'np.all(samples <= 2.0 + 1.0 + _eps(samples))', 'not (samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0]))', 'v1 - v2 - _eps(sample) < sample < v1 - v2 + _eps(sample)', 'v1 - v2 - _eps(sample) < sample < v1 - v2 + _eps(sample)', 'np.all(samples > 1.0 - 2.0 - _eps(samples))', 'np.all(samples < 1.0 - 1.0 + _eps(samples))', 'samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0])', 'np.all(samples > 1.0 - 2.0 - _eps(samples))', 'np.all(samples < 1.0 - 1.0 + _eps(samples))', 'not (samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0]))', 'np.all(samples > 1.0 - 1.0 - _eps(samples))', 'np.all(samples < 2.0 - 1.0 + _eps(samples))', 'not (samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0]))', 'np.all(samples > 1.0 - 1.0 - _eps(samples))', 'np.all(samples < 2.0 - 1.0 + _eps(samples))', 'not (samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0]))', 'v1 ** v2 - _eps(sample) < sample < v1 ** v2 + _eps(sample)', 'v1 ** v2 - _eps(sample) < sample < v1 ** v2 + _eps(sample)', 'np.all(samples > 1.5 ** 1.0 - 2 * _eps(samples))', 'np.all(samples < 1.5 ** 2.0 + 2 * _eps(samples))', 'samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0])', 'np.all(samples > 1.5 ** 1.0 - 2 * _eps(samples))', 'np.all(samples < 1.5 ** 2.0 + 2 * _eps(samples))', 'not (samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0]))', 'np.all(samples > 1.0 ** 1.0 - 2 * _eps(samples))', 'np.all(samples < 2.0 ** 1.0 + 2 * _eps(samples))', 'not (samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0]))', 'np.all(samples > 1.0 ** 1.0 - 2 * _eps(samples))', 'np.all(samples < 2.0 ** 1.0 + 2 * _eps(samples))', 'not (samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0]))', 'abs(value) - _eps(sample) < sample < abs(value) + _eps(sample)', 'np.all(abs(value) - _eps(samples) < samples)', 'np.all(samples < abs(value) + _eps(samples))', 'expected - _eps(sample) < sample < expected + _eps(sample)', 'np.all(np.logical_and(expected - _eps(samples) < samples, samples < expected + _eps(samples)))', 'expected - _eps(sample) < sample < expected + _eps(sample)', 'np.all(np.logical_and(expected - _eps(sample) < samples, samples < expected + _eps(sample)))', 'expected - _eps(sample) < sample < expected + _eps(sample)', 'np.all(np.logical_and(expected - _eps(sample) < samples, samples < expected + _eps(sample)))']",[],[],[],[],[],[],[],[],[],[],[],[],"['-1.2 - eps < sample < -1.2 + eps or 1.7 - eps < sample < 1.7 + eps', '0 - eps < sample < 1.0 + eps', 'np.all(np.logical_and(0 - eps <= samples, samples <= 1.0 + eps))', 'sample1 - eps < sample2 < sample1 + eps', 'samples1_sorted[0] - eps < samples1_sorted[-1] < samples1_sorted[0] + eps', 'samples2_sorted[0] - eps < samples2_sorted[-1] < samples2_sorted[0] + eps', 'samples3_sorted[0] - eps < samples3_sorted[-1] < samples3_sorted[0] + eps', 'samples4_sorted[0] - eps < samples4_sorted[-1] < samples4_sorted[0] + eps', 'samples5_sorted[0] - eps < samples5_sorted[-1] < samples5_sorted[0] + eps', 'samples6_sorted[0] - eps < samples6_sorted[-1] < samples6_sorted[0] + eps', '0.5 - eps < sample < 0.5 + eps', 'np.all(np.logical_and(0.5 - eps < samples, samples < 0.5 + eps))', 'v1 * v2 - eps < p.draw_sample() < v1 * v2 + eps', 'v1 * v2 - eps < p.draw_sample() < v1 * v2 + eps', 'np.all(samples > 1.0 * 1.0 - eps)', 'np.all(samples < 1.0 * 2.0 + eps)', 'samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps', 'np.all(samples > 1.0 * 1.0 - eps)', 'np.all(samples < 1.0 * 2.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'np.all(samples > 1.0 * 1.0 - eps)', 'np.all(samples < 2.0 * 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'np.all(samples > 1.0 * 1.0 - eps)', 'np.all(samples < 2.0 * 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'v1 + v2 - eps < p.draw_sample() < v1 + v2 + eps', 'v1 + v2 - eps < p.draw_sample() < v1 + v2 + eps', 'np.all(samples > 1.0 + 1.0 - eps)', 'np.all(samples < 1.0 + 2.0 + eps)', 'samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps', 'np.all(samples > 1.0 + 1.0 - eps)', 'np.all(samples < 1.0 + 2.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'np.all(samples > 1.0 + 1.0 - eps)', 'np.all(samples < 2.0 + 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'np.all(samples > 1.0 + 1.0 - eps)', 'np.all(samples < 2.0 + 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'v1 - v2 - eps < p.draw_sample() < v1 - v2 + eps', 'v1 - v2 - eps < p.draw_sample() < v1 - v2 + eps', 'np.all(samples > 1.0 - 2.0 - eps)', 'np.all(samples < 1.0 - 1.0 + eps)', 'samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps', 'np.all(samples > 1.0 - 2.0 - eps)', 'np.all(samples < 1.0 - 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'np.all(samples > 1.0 - 1.0 - eps)', 'np.all(samples < 2.0 - 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'np.all(samples > 1.0 - 1.0 - eps)', 'np.all(samples < 2.0 - 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'v1 ** v2 - eps < p.draw_sample() < v1 ** v2 + eps', 'v1 ** v2 - eps < p.draw_sample() < v1 ** v2 + eps', 'np.all(samples > 1.5 ** 1.0 - eps)', 'np.all(samples < 1.5 ** 2.0 + eps)', 'samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps', 'np.all(samples > 1.5 ** 1.0 - eps)', 'np.all(samples < 1.5 ** 2.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'np.all(samples > 1.0 ** 1.0 - eps)', 'np.all(samples < 2.0 ** 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'np.all(samples > 1.0 ** 1.0 - eps)', 'np.all(samples < 2.0 ** 1.0 + eps)', 'not (samples_sorted[0] - eps < samples_sorted[-1] < samples_sorted[0] + eps)', 'abs(value) - eps < sample < abs(value) + eps', 'np.all(abs(value) - eps < samples)', 'np.all(samples < abs(value) + eps)', 'expected - eps < sample < expected + eps', 'np.all(np.logical_and(expected - eps < samples, samples < expected + eps))', 'expected - eps < sample < expected + eps', 'np.all(np.logical_and(expected - eps < samples, samples < expected + eps))', 'expected - eps < sample < expected + eps', 'np.all(np.logical_and(expected - eps < samples, samples < expected + eps))']",[],[],[],[],[],[],[],[],[],[],[],[]
1061,aleju,kontakt@ajung.name,2019-01-18 19:59:57+01:00,958e2da0abd2f0ac1a2a5a77fc71fcf724e27236,https://github.com/aleju/imgaug/commit/958e2da0abd2f0ac1a2a5a77fc71fcf724e27236,Fix Sigmoid not producing floats,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1062,aleju,kontakt@ajung.name,2019-01-19 09:15:20+01:00,2210d92fbcd2a556a46e2205b742896a9d3838ff,https://github.com/aleju/imgaug/commit/2210d92fbcd2a556a46e2205b742896a9d3838ff,Make parameter tests more flexible,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(np.logical_and(0.5 - _eps(sample) <= samples, samples <= 0.5 + _eps(sample)))', 'samples.dtype.kind == ', 'samples.dtype.kind == ', 'samples.dtype.kind == ', 'samples.dtype.kind == ', 'samples.dtype.kind == ', 'samples.dtype.kind == ', 'samples.dtype.kind == ', 'samples.dtype.kind == ', 'samples.dtype.kind == ', 'samples.dtype.kind == ', 'samples.dtype.kind == ', 'samples.dtype.kind == ', 'samples.dtype.kind == ', 'samples.dtype.kind == ', 'samples.dtype.kind == ', 'samples.dtype.kind == ', 'samples.dtype.kind == ', 'expected - 5*_eps(sample) < sample < expected + 5*_eps(sample)', 'np.all(np.logical_and(expected - 5*_eps(sample) < samples, samples < expected + 5*_eps(sample)))']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(np.logical_and(0.5 - _eps(sample) < samples, samples < 0.5 + _eps(sample)))', 'samples.dtype == np.int64', 'samples.dtype == np.float64', 'samples.dtype == np.float64', 'samples.dtype == np.float64', 'samples.dtype == np.float64', 'samples.dtype == np.float64', 'samples.dtype == np.float64', 'samples.dtype == np.int64', 'samples.dtype == np.int64', 'samples.dtype == np.float64', 'samples.dtype == np.float64', 'samples.dtype == np.int64', 'samples.dtype == np.int64', 'samples.dtype == np.float64', 'samples.dtype == np.float64', 'samples.dtype == np.float64', 'samples.dtype == np.float64', 'expected - _eps(sample) < sample < expected + _eps(sample)', 'np.all(np.logical_and(expected - _eps(sample) < samples, samples < expected + _eps(sample)))']",[],[],[],[],[],[],[],[],[],[],[],[]
1063,aleju,kontakt@ajung.name,2019-01-19 09:18:52+01:00,83386a9e0de304d39a067e1f051d41fc43ecf902,https://github.com/aleju/imgaug/commit/83386a9e0de304d39a067e1f051d41fc43ecf902,Deactivate minimal dtyping in Uniform,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1064,aleju,kontakt@ajung.name,2019-01-19 13:03:42+01:00,304b2194dc373a6fc288d38372f812aa10631345,https://github.com/aleju/imgaug/commit/304b2194dc373a6fc288d38372f812aa10631345,"Improve performance of Clip

- Remove unnecessary min() and max() calls in Clip
* This should lead to improved performance
* This also simplifies the code significantly",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1065,aleju,kontakt@ajung.name,2019-01-19 13:48:55+01:00,d7cfa903cc6892cd3ecb87dcde324b1468ce7029,https://github.com/aleju/imgaug/commit/d7cfa903cc6892cd3ecb87dcde324b1468ce7029,Improve RandomSign,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1066,aleju,kontakt@ajung.name,2019-01-19 14:06:43+01:00,3e5db8b45bd06b9a94bf13e7a126393f743ba708,https://github.com/aleju/imgaug/commit/3e5db8b45bd06b9a94bf13e7a126393f743ba708,"Improve performance of MultiplyElementwise

+ Add special uint8 treatment to MultiplyElementwise,
  about 1.7x speedup (compared to dtype-tolerant augmenter)
+ Add special treament of boolean mask multipliers in
  MultiplyElementwise,
  about 2.5x speedup (compared to dtype-tolerant augmenter)",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1067,aleju,kontakt@ajung.name,2019-01-19 15:26:11+01:00,d09c305e3b74bf3760d679ddc5ae9ca631e063cb,https://github.com/aleju/imgaug/commit/d09c305e3b74bf3760d679ddc5ae9ca631e063cb,"Improve performance of ReplaceElementwise

* Refactor ReplaceElementwise to achieve around
  50% speedup for masks with few Trues
* Disadvantage: This is slightly slower for
  masks with many Trues (around 20% slower)",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1068,aleju,kontakt@ajung.name,2019-01-19 17:54:09+01:00,abdc942ed5132a915ca6fccc13470bdf730f1457,https://github.com/aleju/imgaug/commit/abdc942ed5132a915ca6fccc13470bdf730f1457,Improve test for Grayscale,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1069,aleju,kontakt@ajung.name,2019-01-19 17:58:48+01:00,19007fbcc3dbb1cbcd5a67bc82f38580f164876e,https://github.com/aleju/imgaug/commit/19007fbcc3dbb1cbcd5a67bc82f38580f164876e,Improve performance of blend_alpha,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1070,aleju,kontakt@ajung.name,2019-01-19 17:59:38+01:00,3271edc8fd550c583fdf926d6603a8e2c6eb7827,https://github.com/aleju/imgaug/commit/3271edc8fd550c583fdf926d6603a8e2c6eb7827,Refactor ChangeColorspace to use blend_alpha(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1071,aleju,kontakt@ajung.name,2019-01-20 09:30:30+01:00,1b1b6d7941f53b7bb6637e769cc9c211aa796a6f,https://github.com/aleju/imgaug/commit/1b1b6d7941f53b7bb6637e769cc9c211aa796a6f,"Simplify loop in AddToHueAndSaturation

* Refactor the main loop in AddToHueAndSaturation to
  make it more elegant and move some stuff out of
  the loop to compute it once.
* This also increases the performance of the augmenter
  to about 1.3x the original value.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1072,aleju,kontakt@ajung.name,2019-01-20 10:49:23+01:00,915ff82a6732ba7a7166a82c68d1e34040f36a5f,https://github.com/aleju/imgaug/commit/915ff82a6732ba7a7166a82c68d1e34040f36a5f,"Improve performance of AddToHueAndSaturation

+ Add backend attribute and backend cv2 to
  AddToHueAndSaturation.
* Improve performance to about 1.25x for 224x224.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1073,aleju,kontakt@ajung.name,2019-01-20 10:51:57+01:00,3931e83becfc13faebb13451d50d9887fa2b6063,https://github.com/aleju/imgaug/commit/3931e83becfc13faebb13451d50d9887fa2b6063,Extend tests for AddToHueAndSaturation,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(observed, expected)', 'np.all(diff <= 1)', 'np.all(diff <= 1)', 'np.all(diff <= 1)']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(observed, expected)', 'np.all(diff <= 3)']",[],[],[],[],[],[],[],[],[],[],[],[]
1074,aleju,kontakt@ajung.name,2019-01-20 14:53:52+01:00,4095b5cb3b448857a47ea2fea669bca8937404ab,https://github.com/aleju/imgaug/commit/4095b5cb3b448857a47ea2fea669bca8937404ab,"Move dtype-related functions to their own file

+ Add file imgaug/dtypes.py
* Move the following functions to dtypes.py:
  * from meta.py:
    * constant KIND_TO_DTYPES
    * restore_dtypes_()
    * copy_dtypes_for_restore()
    * get_minimal_dtype()
    * get_minimal_dtype_for_values()
    * get_minimal_dtype_by_value_range()
    * promote_array_dtypes_()
    * increase_array_resolutions_()
    * get_value_range_of_dtype()
    * clip_to_dtype_value_range_()
  * from imgaug.py:
    * gate_dtypes()
* Refactor all calls to above mentioned functions
  to dtypes.py functions
+ Add test file test_dtypes.py
  * Move test for copy_dtypes_for_restore() from test_meta.py
    to this file

* While doing these things, refactor a handful of code style
  things here and there. All tiny, e.g. missing whitespaces.",24,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['all([dtype_i.type == dtype_j for dtype_i, dtype_j in zip(dtypes_copy, [np.uint8, np.float32, np.int32])])', 'isinstance(dtypes_copy, np.dtype)', 'dtypes_copy.type == dt', 'isinstance(dtypes_copy, list)', 'all([dtype_i.type == dt for dtype_i in dtypes_copy])', 'image_result.dtype.type == np.int32', 'image_result.dtype.type == np.int32', 'images.dtype.type == np.uint8', 'images_result.dtype.type == np.int32', 'all([image.dtype.type == np.uint8 for image in images])', 'all([image_result.dtype.type == np.int32 for image_result in images_result])', 'images.dtype.type == np.uint8', 'images_restored.dtype.type == np.int32', 'all([image.dtype.type == np.uint8 for image in images])', 'all([image_restored.dtype.type == np.int32 for image_restored in images_restored])']",[],[],[],[],[],[],[],[],[],[],[],[]
1075,aleju,kontakt@ajung.name,2019-01-25 19:00:39+01:00,813b4728e6caf8fdbdd1c797268177d84da7e723,https://github.com/aleju/imgaug/commit/813b4728e6caf8fdbdd1c797268177d84da7e723,Add todos,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1076,aleju,kontakt@ajung.name,2019-01-25 19:01:14+01:00,ac39bd6abfaf715ed30f5836cc3021fa87dccae7,https://github.com/aleju/imgaug/commit/ac39bd6abfaf715ed30f5836cc3021fa87dccae7,Add tests for dtypes.py,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['all([dtype_i.type == dtype_j for dtype_i, dtype_j in zip(dtypes_copy, [np.uint8, np.float32, np.int32])])', 'isinstance(dtypes_copy, np.dtype)', 'dtypes_copy.type == dt', 'isinstance(dtypes_copy, list)', 'all([dtype_i.type == dt for dtype_i in dtypes_copy])', 'image_result.dtype.type == np.int32', 'image_result.dtype.type == np.int32', 'images.dtype.type == np.uint8', 'images_result.dtype.type == np.int32', 'all([image.dtype.type == np.uint8 for image in images])', 'all([image_result.dtype.type == np.int32 for image_result in images_result])', 'images.dtype.type == np.uint8', 'images_restored.dtype.type == np.int32', 'all([image.dtype.type == np.uint8 for image in images])', 'all([image_restored.dtype.type == np.int32 for image_restored in images_restored])']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1077,aleju,kontakt@ajung.name,2019-01-27 16:54:20+01:00,e855fee85d2b687444d0f130ad01d1c98ccd7e8f,https://github.com/aleju/imgaug/commit/e855fee85d2b687444d0f130ad01d1c98ccd7e8f,Add missing dtypes file,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1078,aleju,kontakt@ajung.name,2019-01-27 17:32:20+01:00,f9fc75c6c98cd9642670930cc89fcb42f905e301,https://github.com/aleju/imgaug/commit/f9fc75c6c98cd9642670930cc89fcb42f905e301,Fix cyclic import,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1079,aleju,kontakt@ajung.name,2019-01-28 19:39:44+01:00,0fedad3e71aec7b1c032f7865d293138fbda2cb6,https://github.com/aleju/imgaug/commit/0fedad3e71aec7b1c032f7865d293138fbda2cb6,Fix missing import,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1080,aleju,kontakt@ajung.name,2019-01-29 18:20:45+01:00,e8395945fc4c7c9653e617091da5dbb16135cf52,https://github.com/aleju/imgaug/commit/e8395945fc4c7c9653e617091da5dbb16135cf52,Fix and improve docstring of Pad,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1081,aleju,kontakt@ajung.name,2019-01-29 18:32:43+01:00,47f53cdbbd172189d246c64c6c3e5195816c13d0,https://github.com/aleju/imgaug/commit/47f53cdbbd172189d246c64c6c3e5195816c13d0,Fix and improve docstring for CropAndPad,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1082,aleju,kontakt@ajung.name,2019-01-29 18:37:11+01:00,70e5063cd5dbf4abfaafdb9206b73cfc7f8dd7e3,https://github.com/aleju/imgaug/commit/70e5063cd5dbf4abfaafdb9206b73cfc7f8dd7e3,Improve docstring of Crop,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1083,aleju,kontakt@ajung.name,2019-01-29 18:38:40+01:00,01c76e6077fb7e76305e00fa9e34f4c2dc9bcfeb,https://github.com/aleju/imgaug/commit/01c76e6077fb7e76305e00fa9e34f4c2dc9bcfeb,Fix code style,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1084,aleju,kontakt@ajung.name,2019-01-29 19:31:17+01:00,24837007efee71a95bd9823ad75ccc3047e98b32,https://github.com/aleju/imgaug/commit/24837007efee71a95bd9823ad75ccc3047e98b32,Add messages to asserts in _handle_pad_mode_param(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1085,aleju,kontakt@ajung.name,2019-01-29 21:00:32+01:00,255ad106863c066e5c40e7a1260f4770e19b4318,https://github.com/aleju/imgaug/commit/255ad106863c066e5c40e7a1260f4770e19b4318,Fix missing pad mode,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1086,aleju,kontakt@ajung.name,2019-01-29 21:01:56+01:00,1566fbc1680b9c43b4e60cc665402bf89a79f760,https://github.com/aleju/imgaug/commit/1566fbc1680b9c43b4e60cc665402bf89a79f760,Remove dead dtype code,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1087,Alexander Jung,kontakt@ajung.name,2019-01-29 21:05:52+01:00,0ea372493dee1e4d8deaee0c33e7ac4c3119dcc4,https://github.com/aleju/imgaug/commit/0ea372493dee1e4d8deaee0c33e7ac4c3119dcc4,Add changes from branch 'pad',1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1088,aleju,kontakt@ajung.name,2019-01-30 18:16:20+01:00,28330dc8e5d5e4ed49a1acc0793cecd90943b44c,https://github.com/aleju/imgaug/commit/28330dc8e5d5e4ed49a1acc0793cecd90943b44c,Fix Pad test,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1089,Alexander Jung,kontakt@ajung.name,2019-01-30 21:45:09+01:00,184ef9826c9e1ab3c0c7270e2be029b58f73820b,https://github.com/aleju/imgaug/commit/184ef9826c9e1ab3c0c7270e2be029b58f73820b,Add changes from branch 'renaming',1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1090,Vallentin,vallentinsource@gmail.com,2019-01-31 15:29:34+01:00,da49a0ec45eb3cb781ea9c958a313784221c81fb,https://github.com/aleju/imgaug/commit/da49a0ec45eb3cb781ea9c958a313784221c81fb,Fixed typos,6,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1091,Alexander Jung,kontakt@ajung.name,2019-01-31 17:39:41+01:00,05056eb217266c0456db7b7c99997ba7346f54c4,https://github.com/aleju/imgaug/commit/05056eb217266c0456db7b7c99997ba7346f54c4,Add missing change from branch 'pad',1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1092,aleju,kontakt@ajung.name,2019-01-31 21:52:28+01:00,1b856f93436168795f0d7017a19f66827918ac81,https://github.com/aleju/imgaug/commit/1b856f93436168795f0d7017a19f66827918ac81,Enable non-lists in augment_heatmaps(),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(heatmap_aug.arr_0to1, heatmap.arr_0to1)', 'np.allclose(heatmap_aug.arr_0to1, np.rot90(heatmap.arr_0to1, -1))', 'np.allclose(heatmaps_aug[i].arr_0to1, np.rot90(heatmap.arr_0to1, -1))']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1093,aleju,kontakt@ajung.name,2019-02-01 16:49:26+01:00,2bc1fc2dc352989a1fc2b0cc54a83ea5c973ebb2,https://github.com/aleju/imgaug/commit/2bc1fc2dc352989a1fc2b0cc54a83ea5c973ebb2,Enable non-lists in augment_segmentation_maps(),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(segmap_aug.arr, segmap.arr)', 'np.allclose(segmap_aug.arr, np.rot90(segmap.arr, -1))', 'np.allclose(segmaps_aug[i].arr, np.rot90(segmap.arr, -1))']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1094,aleju,kontakt@ajung.name,2019-02-01 17:20:19+01:00,05bbab94870d7ef44da3c4fd7070e3de05d02dad,https://github.com/aleju/imgaug/commit/05bbab94870d7ef44da3c4fd7070e3de05d02dad,Enable non-lists in augment_keypoints(),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(kp_aug.x, kp.x)', 'np.allclose(kp_aug.y, kp.y)', 'np.allclose(kpsoi_aug.keypoints[0].x, 5 - 2 - 1)', 'np.allclose(kpsoi_aug.keypoints[0].y, 1)', 'np.allclose(kpsoi_aug.keypoints[1].x, 5 - 5 - 1)', 'np.allclose(kpsoi_aug.keypoints[1].y, 2)', 'np.allclose(kpsoi_aug.keypoints[2].x, 5 - 3 - 1)', 'np.allclose(kpsoi_aug.keypoints[2].y, 3)', 'np.allclose(kpsoi_aug[i].keypoints[0].x, 5 - 2 - 1)', 'np.allclose(kpsoi_aug[i].keypoints[0].y, 1)', 'np.allclose(kpsoi_aug[i].keypoints[1].x, 5 - 5 - 1)', 'np.allclose(kpsoi_aug[i].keypoints[1].y, 2)', 'np.allclose(kpsoi_aug[i].keypoints[2].x, 5 - 3 - 1)', 'np.allclose(kpsoi_aug[i].keypoints[2].y, 3)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1095,aleju,kontakt@ajung.name,2019-02-01 17:54:12+01:00,f234904319f7d2db38302cff5903f99f4f09ea03,https://github.com/aleju/imgaug/commit/f234904319f7d2db38302cff5903f99f4f09ea03,Enable non-lists in augment_bounding_boxes(),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(bb_aug.x1, bb.x1)', 'np.allclose(bb_aug.x2, bb.x2)', 'np.allclose(bb_aug.y1, bb.y1)', 'np.allclose(bb_aug.y2, bb.y2)', 'np.allclose(bbsoi_aug.bounding_boxes[0].x1, 5 - 5 - 1)', 'np.allclose(bbsoi_aug.bounding_boxes[0].x2, 5 - 4 - 1)', 'np.allclose(bbsoi_aug.bounding_boxes[0].y1, 1)', 'np.allclose(bbsoi_aug.bounding_boxes[0].y2, 3)', 'np.allclose(bbsoi_aug.bounding_boxes[1].x1, 5 - 2 - 1)', 'np.allclose(bbsoi_aug.bounding_boxes[1].x2, 5 - 0 - 1)', 'np.allclose(bbsoi_aug.bounding_boxes[1].y1, 2.5)', 'np.allclose(bbsoi_aug.bounding_boxes[1].y2, 3)', 'np.allclose(bbsoi_aug[i].bounding_boxes[0].x1, 5 - 5 - 1)', 'np.allclose(bbsoi_aug[i].bounding_boxes[0].x2, 5 - 4 - 1)', 'np.allclose(bbsoi_aug[i].bounding_boxes[0].y1, 1)', 'np.allclose(bbsoi_aug[i].bounding_boxes[0].y2, 3)', 'np.allclose(bbsoi_aug[i].bounding_boxes[1].x1, 5 - 2 - 1)', 'np.allclose(bbsoi_aug[i].bounding_boxes[1].x2, 5 - 0 - 1)', 'np.allclose(bbsoi_aug[i].bounding_boxes[1].y1, 2.5)', 'np.allclose(bbsoi_aug[i].bounding_boxes[1].y2, 3)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1096,aleju,kontakt@ajung.name,2019-02-01 17:55:54+01:00,f855c8f64940d03d45942fd0613f7ea49ae90315,https://github.com/aleju/imgaug/commit/f855c8f64940d03d45942fd0613f7ea49ae90315,Add fixme,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1097,joncrall,erotemic@gmail.com,2019-01-19 15:17:09-05:00,0680589b1cfb81e3d476f85a3c414865bbab10ed,https://github.com/aleju/imgaug/commit/0680589b1cfb81e3d476f85a3c414865bbab10ed,Fix doctests using xdoctest,8,False,False,False,False,False,True,True,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1098,joncrall,erotemic@gmail.com,2019-01-19 15:17:59-05:00,57a9527006e43e8328da2ae8b67c010d47e4fd38,https://github.com/aleju/imgaug/commit/57a9527006e43e8328da2ae8b67c010d47e4fd38,Require xdoctest 0.7.0,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1099,joncrall,erotemic@gmail.com,2019-01-19 15:38:44-05:00,c2575f4d016ce7775adb23449bc96f5dabef5a2a,https://github.com/aleju/imgaug/commit/c2575f4d016ce7775adb23449bc96f5dabef5a2a,Travis config now runs doctests,1,False,False,False,False,False,True,True,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1100,joncrall,erotemic@gmail.com,2019-01-19 15:43:38-05:00,26ea57fc1e879566755f8f91acc4b18add0c41b9,https://github.com/aleju/imgaug/commit/26ea57fc1e879566755f8f91acc4b18add0c41b9,Add doc to pytest norecursedirs,1,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1101,joncrall,erotemic@gmail.com,2019-02-01 23:47:14-05:00,a33ec452c8d6fce5d0c9fc1c11bcf7406ab65628,https://github.com/aleju/imgaug/commit/a33ec452c8d6fce5d0c9fc1c11bcf7406ab65628,Bump requirements to xdoctest 0.7.1,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1102,joncrall,erotemic@gmail.com,2019-02-02 00:14:19-05:00,c6a810d91309708fec119bf5b4bc89f49b021737,https://github.com/aleju/imgaug/commit/c6a810d91309708fec119bf5b4bc89f49b021737,Fixed error in new pool doctest,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1103,joncrall,erotemic@gmail.com,2019-02-02 00:21:44-05:00,1e62bc58317db0b8e5500b0dc6d8698effd2be96,https://github.com/aleju/imgaug/commit/1e62bc58317db0b8e5500b0dc6d8698effd2be96,Bump xdoctset to 0.7.2,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1104,aleju,kontakt@ajung.name,2019-02-02 11:19:48+01:00,391dc79565e51060cc4b2c9c0b708233af3421bf,https://github.com/aleju/imgaug/commit/391dc79565e51060cc4b2c9c0b708233af3421bf,Update multicore aug section in readme,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1105,aleju,kontakt@ajung.name,2019-02-02 11:19:58+01:00,f4fa2de6d351037a7bfec50d2588ed68595a0ae4,https://github.com/aleju/imgaug/commit/f4fa2de6d351037a7bfec50d2588ed68595a0ae4,Add todo,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1106,Alexander Jung,kontakt@ajung.name,2019-02-02 11:25:40+01:00,20eb4c6810976e5ea3fd29221ea777905e1d5a31,https://github.com/aleju/imgaug/commit/20eb4c6810976e5ea3fd29221ea777905e1d5a31,Add changes from branch 'augment_single_instances',1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1107,Alexander Jung,kontakt@ajung.name,2019-02-02 11:33:10+01:00,86e6a851fd609854601b8bb5217e40c02103771b,https://github.com/aleju/imgaug/commit/86e6a851fd609854601b8bb5217e40c02103771b,Add new changes from branch 'renaming',1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1108,Alexander Jung,kontakt@ajung.name,2019-02-02 11:45:23+01:00,6c80223f0d9ae573e1b7eb10960c89a16642c72b,https://github.com/aleju/imgaug/commit/6c80223f0d9ae573e1b7eb10960c89a16642c72b,Add multicore augmentation description,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1109,aleju,kontakt@ajung.name,2019-02-02 12:03:34+01:00,8481b2184fb999f291b8ffb021ca8e07cdb90689,https://github.com/aleju/imgaug/commit/8481b2184fb999f291b8ffb021ca8e07cdb90689,Extend test for determinism,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['array_equal_lists(images_aug1, images_aug2), \\', 'array_equal_lists(images_aug3, images_aug4), \\', 'not array_equal_lists(images_aug1, images_aug3), \\', 'keypoints_equal(kps_aug3, kps_aug4), \\', 'not keypoints_equal(kps_aug1, kps_aug3), \\']",[],[],[],[],[],[],[],[],[],[],[],[],"['array_equal_lists(images_aug1, images_aug2), \\']",[],[],[],[],[],[],[],[],[],[],[],[]
1110,aleju,kontakt@ajung.name,2019-02-02 12:09:06+01:00,0c9848eff7ab6de0f9daffe8c9828ef653720412,https://github.com/aleju/imgaug/commit/0c9848eff7ab6de0f9daffe8c9828ef653720412,Fix too many arguments,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1111,aleju,kontakt@ajung.name,2019-02-02 12:12:10+01:00,5c104ba31c54bf9187a8fb2eef6506bc73ff38eb,https://github.com/aleju/imgaug/commit/5c104ba31c54bf9187a8fb2eef6506bc73ff38eb,Remove unused variable in ReplaceElementwise,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1112,aleju,kontakt@ajung.name,2019-02-02 12:14:39+01:00,b58fef7070635abc27bc24c304d1e9da03e65644,https://github.com/aleju/imgaug/commit/b58fef7070635abc27bc24c304d1e9da03e65644,Remove unused variable in FastSnowyLandscape,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1113,aleju,kontakt@ajung.name,2019-02-02 12:17:55+01:00,18d1510df876d7f173e90c6fb357f6c43127ef2c,https://github.com/aleju/imgaug/commit/18d1510df876d7f173e90c6fb357f6c43127ef2c,Remove unused imports,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1114,aleju,kontakt@ajung.name,2019-02-02 12:19:32+01:00,cc1ab0b429afec59c260c5178199aec0f25c6176,https://github.com/aleju/imgaug/commit/cc1ab0b429afec59c260c5178199aec0f25c6176,Remove unused version check,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1115,aleju,kontakt@ajung.name,2019-02-02 12:20:14+01:00,18c5178067c0526c81438bf99b0a0f0e5aed91bc,https://github.com/aleju/imgaug/commit/18c5178067c0526c81438bf99b0a0f0e5aed91bc,Add comment,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1116,aleju,kontakt@ajung.name,2019-02-02 14:39:26+01:00,1ec7f1e6c6ff73a023a34b06cd9ea6ce52d111c6,https://github.com/aleju/imgaug/commit/1ec7f1e6c6ff73a023a34b06cd9ea6ce52d111c6,Remove unused variable,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1117,aleju,kontakt@ajung.name,2019-01-30 18:20:51+01:00,9fc47cd7dfebe45477ee38699bf1d55cc70b21d3,https://github.com/aleju/imgaug/commit/9fc47cd7dfebe45477ee38699bf1d55cc70b21d3,Add alias HorizontalFlip for Fliplr,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1118,aleju,kontakt@ajung.name,2019-01-30 18:26:38+01:00,a50914100c4b78a57d55386256b856f6809ea31b,https://github.com/aleju/imgaug/commit/a50914100c4b78a57d55386256b856f6809ea31b,Add alias VerticalFlip for Flipud,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1119,aleju,kontakt@ajung.name,2019-01-30 18:33:07+01:00,8f80f2fe054f6d6b254184204479285d9da19f4e,https://github.com/aleju/imgaug/commit/8f80f2fe054f6d6b254184204479285d9da19f4e,Add test for HorizontalFlip,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug, iaa.Fliplr)', 'np.allclose(aug.p.p.value, 0.5)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1120,aleju,kontakt@ajung.name,2019-01-30 18:35:20+01:00,53e91d8b7854121e735e3929201093ecda83e1c5,https://github.com/aleju/imgaug/commit/53e91d8b7854121e735e3929201093ecda83e1c5,Add test for VerticalFlip,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug, iaa.Flipud)', 'np.allclose(aug.p.p.value, 0.5)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1121,aleju,kontakt@ajung.name,2019-01-30 20:55:18+01:00,d3dfb5213e832d996a9646d33ca6148fa590d35d,https://github.com/aleju/imgaug/commit/d3dfb5213e832d996a9646d33ca6148fa590d35d,Rename Scale to Resize,10,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1122,aleju,kontakt@ajung.name,2019-01-30 20:57:12+01:00,193e66ba51564acd6a70588cd8f0133f790abfb7,https://github.com/aleju/imgaug/commit/193e66ba51564acd6a70588cd8f0133f790abfb7,Mark Scale as deprecated,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1123,aleju,kontakt@ajung.name,2019-01-30 21:09:14+01:00,a21665205482296d26f2763139587c291aceb77c,https://github.com/aleju/imgaug/commit/a21665205482296d26f2763139587c291aceb77c,Rename .scale() for segmaps/heatmaps to .resize(),6,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1124,aleju,kontakt@ajung.name,2019-01-30 21:27:45+01:00,1194add0698cd140f333049fe8ba7e5005447f62,https://github.com/aleju/imgaug/commit/1194add0698cd140f333049fe8ba7e5005447f62,Rename all .cut_out_of_image() to .clip_out_of_image(),3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(bbsoi_clip.bounding_boxes) == 2', 'bbsoi_clip.bounding_boxes[0].y1 == 10', 'bbsoi_clip.bounding_boxes[0].x1 == 20', 'bbsoi_clip.bounding_boxes[0].y2 == 30', 'bbsoi_clip.bounding_boxes[0].x2 == 40', 'bbsoi_clip.bounding_boxes[1].y1 == 15', 'bbsoi_clip.bounding_boxes[1].x1 == 25', 'bbsoi_clip.bounding_boxes[1].y2 == 35', '50 - 2*eps < bbsoi_clip.bounding_boxes[1].x2 < 50', 'len(bbsoi_shifted.bounding_boxes) == 2', 'all([']",[],[],[],[],[],[],[],[],[],[],[],[],"['len(bbsoi_cut.bounding_boxes) == 2', 'bbsoi_cut.bounding_boxes[0].y1 == 10', 'bbsoi_cut.bounding_boxes[0].x1 == 20', 'bbsoi_cut.bounding_boxes[0].y2 == 30', 'bbsoi_cut.bounding_boxes[0].x2 == 40', 'bbsoi_cut.bounding_boxes[1].y1 == 15', 'bbsoi_cut.bounding_boxes[1].x1 == 25', 'bbsoi_cut.bounding_boxes[1].y2 == 35', '50 - 2*eps < bbsoi_cut.bounding_boxes[1].x2 < 50', 'len(bbsoi_cut.bounding_boxes) == 2']",[],[],[],[],[],[],[],[],[],[],[],[]
1125,aleju,kontakt@ajung.name,2019-01-31 17:43:24+01:00,a6fdf79bbb03e83f81cd8f9d6f5405609de71c4a,https://github.com/aleju/imgaug/commit/a6fdf79bbb03e83f81cd8f9d6f5405609de71c4a,Remove unnecessary re-imports of 'warnings',1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1126,aleju,kontakt@ajung.name,2019-02-01 19:33:55+01:00,08592186f62c725e003d6b05e8a6dc79c49247b6,https://github.com/aleju/imgaug/commit/08592186f62c725e003d6b05e8a6dc79c49247b6,Rename input attrs in imgaug.Batch to *_unaug,6,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(batches_aug[0].images_unaug[0], image)', 'batches_aug[0].keypoints_unaug[0].keypoints[0].x == keypoint.x', 'batches_aug[0].keypoints_unaug[0].keypoints[0].y == keypoint.y', 'np.array_equal(batches_aug[0].images_unaug, np.uint8([image]))', 'batches_aug[0].keypoints_unaug[0].keypoints[0].x == keypoint.x', 'batches_aug[0].keypoints_unaug[0].keypoints[0].y == keypoint.y', 'np.array_equal(to_check.call_args[0][1][0][1].images_unaug, batches[0].images_unaug)', 'np.array_equal(to_check.call_args[0][1][1][1].images_unaug, batches[1].images_unaug)', 'np.array_equal(arg_batches[0][1].images_unaug, batches[0].images_unaug)', 'np.array_equal(arg_batches[1][1].images_unaug, batches[1].images_unaug)', 'not np.array_equal(b1.images_unaug, b1.images_aug)', 'not np.array_equal(b2.images_unaug, b2.images_aug)', 'not np.array_equal(b3.images_unaug, b3.images_aug)', 'np.array_equal(b1.images_unaug, batch.images_unaug)', 'np.array_equal(b2.images_unaug, batch.images_unaug)', 'np.array_equal(b3.images_unaug, batch.images_unaug)', 'not np.array_equal(b1.images_unaug, b1.images_aug)', 'not np.array_equal(b2.images_unaug, b2.images_aug)', 'not np.array_equal(b3.images_unaug, b3.images_aug)', 'np.array_equal(b1.images_unaug, batch.images_unaug)', 'np.array_equal(b2.images_unaug, batch.images_unaug)', 'np.array_equal(b3.images_unaug, batch.images_unaug)', 'batch_aug.images_unaug is not None', 'batch_aug.images_unaug.dtype == np.uint8', 'batch_aug.images_unaug.shape == (1, 4, 8, 3)', 'np.array_equal(batch_aug.images_unaug, np.zeros((1, 4, 8, 3), dtype=np.uint8))']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(batches_aug[0].images[0], image)', 'batches_aug[0].keypoints[0].keypoints[0].x == keypoint.x', 'batches_aug[0].keypoints[0].keypoints[0].y == keypoint.y', 'np.array_equal(batches_aug[0].images, np.uint8([image]))', 'batches_aug[0].keypoints[0].keypoints[0].x == keypoint.x', 'batches_aug[0].keypoints[0].keypoints[0].y == keypoint.y', 'np.array_equal(to_check.call_args[0][1][0][1].images, batches[0].images)', 'np.array_equal(to_check.call_args[0][1][1][1].images, batches[1].images)', 'np.array_equal(arg_batches[0][1].images, batches[0].images)', 'np.array_equal(arg_batches[1][1].images, batches[1].images)', 'not np.array_equal(b1.images, b1.images_aug)', 'not np.array_equal(b2.images, b2.images_aug)', 'not np.array_equal(b3.images, b3.images_aug)', 'np.array_equal(b1.images, batch.images)', 'np.array_equal(b2.images, batch.images)', 'np.array_equal(b3.images, batch.images)', 'not np.array_equal(b1.images, b1.images_aug)', 'not np.array_equal(b2.images, b2.images_aug)', 'not np.array_equal(b3.images, b3.images_aug)', 'np.array_equal(b1.images, batch.images)', 'np.array_equal(b2.images, batch.images)', 'np.array_equal(b3.images, batch.images)', 'batch_aug.images is not None', 'batch_aug.images.dtype == np.uint8', 'batch_aug.images.shape == (1, 4, 8, 3)', 'np.array_equal(batch_aug.images, np.zeros((1, 4, 8, 3), dtype=np.uint8))']",[],[],[],[],[],[],[],[],[],[],[],[]
1127,aleju,kontakt@ajung.name,2019-02-02 10:30:01+01:00,0a7d5a80856b69b4899468ca52a019bc2264129a,https://github.com/aleju/imgaug/commit/0a7d5a80856b69b4899468ca52a019bc2264129a,Rename module augmenters.overlay to augmenters.blend,8,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1128,aleju,kontakt@ajung.name,2019-02-02 10:31:09+01:00,4383b7e4017c0e7553e12ff8af78ccb4909fc33e,https://github.com/aleju/imgaug/commit/4383b7e4017c0e7553e12ff8af78ccb4909fc33e,Fix weather tests not part of run_all.py,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1129,aleju,kontakt@ajung.name,2019-02-02 10:36:45+01:00,2f54b2591df7f3d01784368717fdd8c200dcf8c0,https://github.com/aleju/imgaug/commit/2f54b2591df7f3d01784368717fdd8c200dcf8c0,Reorder module lists regarding overlay->blend renaming,3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1130,aleju,kontakt@ajung.name,2019-02-02 15:00:47+01:00,786c80eb15ca75eafbe484f15e68a8b683ca7719,https://github.com/aleju/imgaug/commit/786c80eb15ca75eafbe484f15e68a8b683ca7719,Fix deprecated warning,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1131,aleju,kontakt@ajung.name,2019-02-09 09:17:17+01:00,675b9e4fa381bdca4f74da903d1982e6e60a55e8,https://github.com/aleju/imgaug/commit/675b9e4fa381bdca4f74da903d1982e6e60a55e8,Add todo,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1132,aleju,kontakt@ajung.name,2019-02-09 09:28:57+01:00,87ad3eb9b0a5786883512826b6e5659dac86f1bb,https://github.com/aleju/imgaug/commit/87ad3eb9b0a5786883512826b6e5659dac86f1bb,Improve JPEGCompression docstring (fixes aleju/imgaug-doc/#1),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1133,aleju,kontakt@ajung.name,2019-02-09 09:31:06+01:00,ec35f294d55850523dac4c5502c71a3c35157ce2,https://github.com/aleju/imgaug/commit/ec35f294d55850523dac4c5502c71a3c35157ce2,Reformat docstring of JPEGCompression,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1134,aleju,kontakt@ajung.name,2019-02-09 09:55:49+01:00,78014ec3e1d9fc67fb53a6d2b070cb576b585a19,https://github.com/aleju/imgaug/commit/78014ec3e1d9fc67fb53a6d2b070cb576b585a19,Add jupyter notebooks,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1135,aleju,kontakt@ajung.name,2019-02-09 13:19:02+01:00,6c143483810629b7efee13afd8c93bc647b9df35,https://github.com/aleju/imgaug/commit/6c143483810629b7efee13afd8c93bc647b9df35,Prepare for version 0.2.8,5,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1136,Adam Kraft,adamwkraft@users.noreply.github.com,2019-02-21 15:31:33-08:00,411a7d7ef3759c1cf69392bec6abb763d2342e2b,https://github.com/aleju/imgaug/commit/411a7d7ef3759c1cf69392bec6abb763d2342e2b,"Fix opencv enum

Change `Lab` -> `LAB` for opencv enums. This is what the enums are for the opencv version of python I've used. I tried to do a quick google search to see if the lowercase version exists or not.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1137,aleju,kontakt@ajung.name,2019-02-25 17:12:11+01:00,03e5faa242da45fbde7bfbe42a32d20f17fdbbae,https://github.com/aleju/imgaug/commit/03e5faa242da45fbde7bfbe42a32d20f17fdbbae,Fix crash if numpy doesnt know float128,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1138,Adam Kraft,adamwkraft@users.noreply.github.com,2019-02-25 10:59:45-08:00,5d9cf48ce6377652b22e2e6a80cb38c9c858a8c5,https://github.com/aleju/imgaug/commit/5d9cf48ce6377652b22e2e6a80cb38c9c858a8c5,"Update color.py

Check lowercase ""Lab"" attr",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1139,aleju,kontakt@ajung.name,2019-02-26 17:40:38+01:00,0d72224b75f27adf6b0407a639041d0eb444c9ce,https://github.com/aleju/imgaug/commit/0d72224b75f27adf6b0407a639041d0eb444c9ce,Add PR #263 to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1140,aleju,kontakt@ajung.name,2019-02-16 17:55:14+01:00,ec140bae4b88e88fbfc2001ec99e9f258da04184,https://github.com/aleju/imgaug/commit/ec140bae4b88e88fbfc2001ec99e9f258da04184,Fix ReplaceElementwise always sampling replacement per channel,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1141,aleju,kontakt@ajung.name,2019-02-25 17:51:51+01:00,0e458e90bb526931b78b4062acf4710b5e42078a,https://github.com/aleju/imgaug/commit/0e458e90bb526931b78b4062acf4710b5e42078a,Add changes to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1142,Kilian Pfeiffer,kilian.pfeiffer@rwth-aachen.de,2019-02-28 10:59:09+01:00,2d6ebb7754670377accd0fba7dc2696461c9ff4e,https://github.com/aleju/imgaug/commit/2d6ebb7754670377accd0fba7dc2696461c9ff4e,Add label manipulation in from_heatmap.,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1143,aleju,kontakt@ajung.name,2019-02-25 17:43:18+01:00,aeafeb40355c38b02419747e66419230c051fc5e,https://github.com/aleju/imgaug/commit/aeafeb40355c38b02419747e66419230c051fc5e,Allow numpy 1.16,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1144,aleju,kontakt@ajung.name,2019-02-25 18:06:26+01:00,e46522d0c679c9532ad675952234b3c8eb354960,https://github.com/aleju/imgaug/commit/e46522d0c679c9532ad675952234b3c8eb354960,Fix array cannot be made writeable in draw_text,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1145,aleju,kontakt@ajung.name,2019-02-25 18:08:43+01:00,b107b5708c3e113e272b26de33206afb669bef4c,https://github.com/aleju/imgaug/commit/b107b5708c3e113e272b26de33206afb669bef4c,Add changes to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1146,aleju,kontakt@ajung.name,2019-02-16 17:58:36+01:00,f01162e3c6f17c363ee705302166b61a9692d961,https://github.com/aleju/imgaug/commit/f01162e3c6f17c363ee705302166b61a9692d961,Fix docstring example of Subtract,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1147,aleju,kontakt@ajung.name,2019-02-16 18:05:32+01:00,b269b81944efabd148d570b887fcd38610678788,https://github.com/aleju/imgaug/commit/b269b81944efabd148d570b887fcd38610678788,Reorder classes in parameters.py,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1148,aleju,kontakt@ajung.name,2019-02-16 18:08:51+01:00,2abb3aae65c4fadab6d86f0df9514fec1ac98fe7,https://github.com/aleju/imgaug/commit/2abb3aae65c4fadab6d86f0df9514fec1ac98fe7,Improve pool docstring example,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1149,aleju,kontakt@ajung.name,2019-02-25 17:49:47+01:00,4d565eed64da9218ba1a4771b60f9240fd915733,https://github.com/aleju/imgaug/commit/4d565eed64da9218ba1a4771b60f9240fd915733,Add changes to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1150,aleju,kontakt@ajung.name,2019-02-16 17:29:27+01:00,634facdc53ae9577939bfc5b765b98e5636175ac,https://github.com/aleju/imgaug/commit/634facdc53ae9577939bfc5b765b98e5636175ac,Add skeleton for from_augmented_exterior(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1151,aleju,kontakt@ajung.name,2019-02-24 20:54:09+01:00,2fb7f8813a4979f56eb3201abf242ad4e943c928,https://github.com/aleju/imgaug/commit/2fb7f8813a4979f56eb3201abf242ad4e943c928,Fix div by zero in angle_between_vectors(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1152,aleju,kontakt@ajung.name,2019-02-24 20:54:47+01:00,56b950604a64263791b004590f92839f542be82c,https://github.com/aleju/imgaug/commit/56b950604a64263791b004590f92839f542be82c,Add external poly_point_isect library,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1153,aleju,kontakt@ajung.name,2019-02-24 20:55:05+01:00,47fe92945027107ff065c7cffc72a377040e0b85,https://github.com/aleju/imgaug/commit/47fe92945027107ff065c7cffc72a377040e0b85,Add readme for external libraries,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1154,aleju,kontakt@ajung.name,2019-02-24 20:56:02+01:00,8cf9a400de03937e98c3196a57df919f9bd15405,https://github.com/aleju/imgaug/commit/8cf9a400de03937e98c3196a57df919f9bd15405,Add _ConcavePolygonRecoverer,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1155,aleju,kontakt@ajung.name,2019-02-24 20:56:30+01:00,b26dde2dfdf12cbd4095d7d9b701ec5ad86d8515,https://github.com/aleju/imgaug/commit/b26dde2dfdf12cbd4095d7d9b701ec5ad86d8515,Add tests for _ConcavePolygonRecoverer,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class Test_ConcavePolygonRecoverer(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['len(observed) == len(expected)', 'len(ps_obs) == len(ps_exp),  % (i,)', 'len(p_obs) == 2', 'len(p_exp) == 2', 'np.allclose(p_obs, p_exp, atol=atol, rtol=rtol),  % (i,)', 'False', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(points, points_jittered, rtol=0, atol=1e-4)', 'np.allclose(points, points_jittered, rtol=0, atol=1e-4)', 'np.allclose(points, points_jittered, rtol=0, atol=1e-4)', 'np.allclose(', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[2])) >= 1e-4', 'np.allclose(', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[3])) >= 1e-4', 'np.allclose(', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[4])) >= 1e-4', 'np.allclose(', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[2])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[4])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[6])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[7])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[8])) >= 1e-4', 'np.allclose(', 'np.linalg.norm(np.float32([0, 0]) - np.float32(points_jittered[2])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[3])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[5])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[7])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[8])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[9])) >= 1e-4', 'np.allclose(circ, 4)', 'np.allclose(circ, 4)', 'np.allclose(circ, 4)', 'np.allclose(circ, 6)', 'len(observed) == len(expected),  % (len(observed), len(expected))', 'max_count == len(expected),  % (max_count, len(expected))', 'np.allclose(points, points_fit)', 'ia.Polygon(points_fit).is_valid', 'ia.Polygon([points[idx] for idx in points_fit]).is_valid', 'poly_observed.is_valid', 'len(points_fit) >= len(points) - 2  # TODO add IoU check here', 'poly_observed.is_valid', 'np.allclose(points_fixed, points, atol=0, rtol=0)', 'not np.allclose(points_fixed, points, atol=0, rtol=0)', 'not cpr._is_polygon_line(points_fixed)', 'np.allclose(points_fixed, points, rtol=0, atol=1e-2)', 'not np.allclose(points_fixed, points, atol=0, rtol=0)', 'not cpr._is_polygon_line(points_fixed)', 'np.allclose(points_fixed, points, rtol=0, atol=1e-2)', 'not np.allclose(points_fixed, points, atol=0, rtol=0)', 'not cpr._is_polygon_line(points_fixed)', 'np.allclose(points_fixed, points, rtol=0, atol=1e-2)', 'not _ConcavePolygonRecoverer._is_polygon_line(points)', 'not _ConcavePolygonRecoverer._is_polygon_line(points)', 'not _ConcavePolygonRecoverer._is_polygon_line(points)', 'not _ConcavePolygonRecoverer._is_polygon_line(points)', '_ConcavePolygonRecoverer._is_polygon_line(points)', '_ConcavePolygonRecoverer._is_polygon_line(points)', '_ConcavePolygonRecoverer._is_polygon_line(points)', '_ConcavePolygonRecoverer._is_polygon_line(points)', '_ConcavePolygonRecoverer._is_polygon_line(points)', 'not _ConcavePolygonRecoverer._is_polygon_line(points)', 'points_inter == [[], [], []]', 'points_inter == [[], [], [], []]', 'points_inter == [[], [], [], []]', 'points_inter == [[], [], [], [], [], [], [], []]', 'points_inserted == points', 'points_inserted == [(0, 0), (0.5, 0), (1, 0), (2, 0)]', 'points_inserted == [(0, 0), (0.5, 0), (0.75, 0), (1, 0), (2, 0)]', 'points_inserted == [(0, 0), (0.5, 0), (1, 0), (1.5, 0), (2, 0)]', 'points_inserted == [(0, 0), (0.5, 0), (1, 0), (1.5, 0), (2, 0),']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1156,aleju,kontakt@ajung.name,2019-02-25 18:09:59+01:00,dcbabde38a05dc1fb16eefa29dfda681a9f40227,https://github.com/aleju/imgaug/commit/dcbabde38a05dc1fb16eefa29dfda681a9f40227,Add changes to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1157,aleju,kontakt@ajung.name,2019-03-02 18:28:22+01:00,d93421fd8a943b9e09ea67e79f4d5da2f0a20f76,https://github.com/aleju/imgaug/commit/d93421fd8a943b9e09ea67e79f4d5da2f0a20f76,Improve performance of _ConcavePolygonRecoverer,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1158,aleju,kontakt@ajung.name,2019-03-02 18:28:37+01:00,7cba3f6ddc209449b60f5471554802a1f03e211f,https://github.com/aleju/imgaug/commit/7cba3f6ddc209449b60f5471554802a1f03e211f,Add tests for _ConcavePolygonRecoverer,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['poly_concave.is_valid', 'all(found)', 'poly_concave.is_valid', 'all(found)', 'poly_concave.is_valid', 'all(found)', 'poly_concave.is_valid', 'all(found)', 'poly_concave.is_valid', 'bb.contains(ia.Keypoint(x=point[0], y=point[1]))', 'points_fit == sm.xrange(len(points))']",[],[],[],[],[],[],[],[],[],[],[],[],"['False', 'np.allclose(points, points_fit)', 'ia.Polygon(points_fit).is_valid']",[],[],[],[],[],[],[],[],[],[],[],[]
1159,aleju,kontakt@ajung.name,2019-03-03 09:40:12+01:00,efc310e602c5ff2820d26e3015615fb369ba0825,https://github.com/aleju/imgaug/commit/efc310e602c5ff2820d26e3015615fb369ba0825,Deactivate flake8 for poly_point_isect.py,1,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1160,aleju,kontakt@ajung.name,2019-03-03 09:50:50+01:00,7c8a3e12f78c37461a58e8b2d44fb0175f3b6cbb,https://github.com/aleju/imgaug/commit/7c8a3e12f78c37461a58e8b2d44fb0175f3b6cbb,Fix test error on python2.7,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['list(points_fit) == list(sm.xrange(len(points)))'],[],[],[],[],[],[],[],[],[],[],[],[],['points_fit == sm.xrange(len(points))'],[],[],[],[],[],[],[],[],[],[],[],[]
1161,aleju,kontakt@ajung.name,2019-03-03 10:05:42+01:00,adb46797c640865b794e9d8c5970dcf6e0ee2638,https://github.com/aleju/imgaug/commit/adb46797c640865b794e9d8c5970dcf6e0ee2638,Add poly_point_isect_py2py3.py to external libs readme,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1162,aleju,kontakt@ajung.name,2019-03-03 16:44:58+01:00,4d326ef3877c9bbddf2d5c3db53328f41d5133d9,https://github.com/aleju/imgaug/commit/4d326ef3877c9bbddf2d5c3db53328f41d5133d9,Add PolygonsOnImage,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1163,aleju,kontakt@ajung.name,2019-03-03 18:23:12+01:00,9a7f01fbd660b2796382d6a84bf6ebef90ec2a1f,https://github.com/aleju/imgaug/commit/9a7f01fbd660b2796382d6a84bf6ebef90ec2a1f,Fix Polygon.clip...() not handling tuple input,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1164,aleju,kontakt@ajung.name,2019-03-03 18:24:26+01:00,1a2ba9cfa1b1f5bc23750e42e7b138e6fa090ee8,https://github.com/aleju/imgaug/commit/1a2ba9cfa1b1f5bc23750e42e7b138e6fa090ee8,Add todo,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1165,aleju,kontakt@ajung.name,2019-03-03 18:30:25+01:00,e48274dc86dc32a971d13f99f0a0098e59b15833,https://github.com/aleju/imgaug/commit/e48274dc86dc32a971d13f99f0a0098e59b15833,Fix dissimilar defaults in Polygon/*OnImage draw_*,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1166,aleju,kontakt@ajung.name,2019-03-03 18:34:26+01:00,ab77ddbef82827f63ff3f00a27beb94adf2dd511,https://github.com/aleju/imgaug/commit/ab77ddbef82827f63ff3f00a27beb94adf2dd511,Add tests for PolygonsOnImage,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,93,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestPolygonsOnImage(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(poly_oi.polygons) == 1', 'np.allclose(', 'poly_oi.shape == (10, 10, 3)', 'len(poly_oi.polygons) == 3', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'poly_oi.shape == (10, 10, 3)', 'len(poly_oi.polygons) == 0', 'len(poly_oi.polygons) == 1', 'np.allclose(', 'poly_oi.shape == (10, 10, 3)', 'poly_oi.shape == (10, 11)', 'poly_oi.empty is False', 'poly_oi.empty is True', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'poly_oi_proj.shape == (1, 1, 3)', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'poly_oi_proj.shape == (1, 1, 3)', 'np.allclose(', 'poly_oi_proj.shape == (10, 200, 3)', 'np.sum(image) == 0', 'np.sum(image_drawn) == 0', 'np.sum(image) == 0', 'np.sum(image_drawn) > 0', 'np.sum(image_expected) > 0', 'np.allclose(image_drawn, image_expected)', 'len(poly_oi_rm.polygons) == 0', 'poly_oi_rm.shape == (10, 11, 3)', 'len(poly_oi_rm.polygons) == 1', 'np.allclose(poly_oi_rm.polygons[0].exterior,', 'poly_oi_rm.shape == (10, 11, 3)', 'len(poly_oi.polygons) == 2', 'len(poly_oi_rm.polygons) == 2', 'np.allclose(poly_oi_rm.polygons[0].exterior,', 'np.allclose(poly_oi_rm.polygons[1].exterior,', 'poly_oi_rm.shape == (10, 10, 3)', 'len(poly_oi.polygons) == 2', 'len(poly_oi_rm.polygons) == 1', 'np.allclose(poly_oi_rm.polygons[0].exterior,', 'poly_oi_rm.shape == (10, 10, 3)', 'len(poly_oi.polygons) == 2', 'len(poly_oi_rm.polygons) == 1', 'np.allclose(poly_oi_rm.polygons[0].exterior,', 'poly_oi_rm.shape == (10, 10, 3)', 'len(poly_oi.polygons) == 2', 'len(poly_oi_rm.polygons) == 0', 'poly_oi_rm.shape == (10, 10, 3)', 'len(poly_oi_clip.polygons) == 0', 'poly_oi_clip.shape == (10, 11, 3)', 'len(poly_oi_clip.polygons) == 1', '_any_point_close(poly_oi_clip.polygons[0].exterior,', 'poly_oi_clip.shape == (10, 11, 3)', 'len(poly_oi_clip.polygons) == 1', '_any_point_close(poly_oi_clip.polygons[0].exterior,', 'poly_oi_clip.shape == (10, 11, 3)', 'len(poly_oi_clip.polygons) == 0', 'poly_oi_clip.shape == (10, 11, 3)', 'len(poly_oi_clip.polygons) == 2', '_any_point_close(poly_oi_clip.polygons[0].exterior,', '_any_point_close(poly_oi_clip.polygons[1].exterior,', 'poly_oi_clip.shape == (10, 11, 3)', 'len(poly_oi_shifted.polygons) == 0', 'poly_oi_shifted.shape == (10, 11, 3)', 'len(poly_oi_shifted.polygons) == 3', 'np.allclose(poly_oi_shifted.polygons[0].exterior,', 'np.allclose(poly_oi_shifted.polygons[1].exterior,', 'np.allclose(poly_oi_shifted.polygons[2].exterior,', 'poly_oi_shifted.shape == (10, 11, 3)', 'len(poly_oi_copy.polygons) == 2', 'np.allclose(poly_oi_copy.polygons[0].exterior,', 'np.allclose(poly_oi_copy.polygons[1].exterior,', 'np.allclose(poly_oi.polygons[0].exterior,', 'np.allclose(poly_oi_copy.polygons[0].exterior,', 'poly_oi.shape == (10, 11, 3)', 'poly_oi_copy.shape == (20, 30, 3)', 'len(poly_oi_copy.polygons) == 2', 'np.allclose(poly_oi_copy.polygons[0].exterior,', 'np.allclose(poly_oi_copy.polygons[1].exterior,', 'np.allclose(poly_oi.polygons[0].exterior,', 'np.allclose(poly_oi_copy.polygons[0].exterior,', 'np.allclose(poly_oi.polygons[1].exterior,', 'np.allclose(poly_oi_copy.polygons[1].exterior,', 'poly_oi.shape == (10, 11, 3)', 'poly_oi_copy.shape == (20, 30, 3)', 'poly_oi.__repr__() == ', 'poly_oi.__repr__() == (', 'poly_oi.__repr__() == ', 'poly_oi.__repr__() == (']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1167,aleju,kontakt@ajung.name,2019-03-03 21:51:04+01:00,be20b1b26ab8435c987bbd662eabac48ca2fb312,https://github.com/aleju/imgaug/commit/be20b1b26ab8435c987bbd662eabac48ca2fb312,Add augment_polygons() to Augmenter,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1168,aleju,kontakt@ajung.name,2019-03-03 21:51:30+01:00,ad7b34d488b7af623cdc9a4068d1ae6bc898566b,https://github.com/aleju/imgaug/commit/ad7b34d488b7af623cdc9a4068d1ae6bc898566b,Add tests for augment_polygons(),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(poly_oi_aug, ia.PolygonsOnImage)', 'len(poly_oi_aug.polygons) == 0', 'poly_oi_aug.shape == (11, 10, 3)', 'isinstance(poly_oi_aug, list)', 'isinstance(poly_oi_aug[0], ia.PolygonsOnImage)', 'len(poly_oi_aug[0].polygons) == 0', 'poly_oi_aug[0].shape == (10, 11, 3)', 'isinstance(poly_ois_aug, list)', 'isinstance(poly_ois_aug[0], ia.PolygonsOnImage)', 'isinstance(poly_ois_aug[0], ia.PolygonsOnImage)', 'len(poly_ois_aug[0].polygons) == 2', 'len(poly_ois_aug[1].polygons) == 2', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'poly_ois_aug[0].shape == (10, 10, 3)', 'poly_ois_aug[1].shape == (10, 10, 3)', 'not np.allclose(points1, points2, atol=1e-2, rtol=0)', 'not np.allclose(points1, points2, atol=1e-2, rtol=0)', 'len(points1) > 1', 'not np.allclose(points1, points2, atol=1e-2, rtol=0)', 'img_rot_idx == poly_rot_idx', '2 <= len(seen) <= 4  # assert not always the same rot']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1169,aleju,kontakt@ajung.name,2019-03-04 17:39:02+01:00,147b46cc2235c198a64ad0e5be0c6cd09ba0d1bd,https://github.com/aleju/imgaug/commit/147b46cc2235c198a64ad0e5be0c6cd09ba0d1bd,Fix Rot90 not changing .shape if .keypoints empty,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1170,aleju,kontakt@ajung.name,2019-03-04 19:57:10+01:00,77a2cc1c15258ede52c4b7a5fc05abb2b52a7ad7,https://github.com/aleju/imgaug/commit/77a2cc1c15258ede52c4b7a5fc05abb2b52a7ad7,Add method Polygon.to_keypoints(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1171,aleju,kontakt@ajung.name,2019-03-04 19:57:41+01:00,8025ebdcd9eed59a486e9c48079a72279f869e0a,https://github.com/aleju/imgaug/commit/8025ebdcd9eed59a486e9c48079a72279f869e0a,Fix tests for Augmenter.augment_polygons(),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['poly_oi_aug[0].shape == (11, 10, 3)', 'len(points1) > 1', 'np.allclose(points1, points2, atol=1e-2, rtol=0)']",[],[],[],[],[],[],[],[],[],[],[],[],"['poly_oi_aug[0].shape == (10, 11, 3)', 'not np.allclose(points1, points2, atol=1e-2, rtol=0)']",[],[],[],[],[],[],[],[],[],[],[],[]
1172,aleju,kontakt@ajung.name,2019-03-04 20:01:15+01:00,3fae68f79e34771af75b2b84caccb9349eb94a24,https://github.com/aleju/imgaug/commit/3fae68f79e34771af75b2b84caccb9349eb94a24,Add docstring to Augmenter._augment_polygons(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1173,aleju,kontakt@ajung.name,2019-03-04 20:01:43+01:00,524141fefa8d713228b205328bfbc1784070de5e,https://github.com/aleju/imgaug/commit/524141fefa8d713228b205328bfbc1784070de5e,Fix error in docstring,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1174,aleju,kontakt@ajung.name,2019-03-04 20:06:26+01:00,c202b2c33e2f1df11133d3b3727219dbb78a8f4a,https://github.com/aleju/imgaug/commit/c202b2c33e2f1df11133d3b3727219dbb78a8f4a,Add docstring to Augmenter._augment_polygons_as_keypoints(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1175,aleju,kontakt@ajung.name,2019-03-04 20:06:53+01:00,26117f39298e0970a99dd3a6b5db0f5ea2d760c4,https://github.com/aleju/imgaug/commit/26117f39298e0970a99dd3a6b5db0f5ea2d760c4,Fix errors in docstring,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1176,aleju,kontakt@ajung.name,2019-03-04 20:07:27+01:00,8070016128500f918a36fe093bfb818b32cdf7eb,https://github.com/aleju/imgaug/commit/8070016128500f918a36fe093bfb818b32cdf7eb,Fix errors in docstring,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1177,aleju,kontakt@ajung.name,2019-03-04 20:09:52+01:00,2b1b5a7cf24f307bfd2e5ead80a90c54d0120ee1,https://github.com/aleju/imgaug/commit/2b1b5a7cf24f307bfd2e5ead80a90c54d0120ee1,Fix hooks in docstring not marked as None-able,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1178,aleju,kontakt@ajung.name,2019-03-04 20:10:52+01:00,151e489374ad181c073752a1183f4d112c1b6d0c,https://github.com/aleju/imgaug/commit/151e489374ad181c073752a1183f4d112c1b6d0c,Change _augment_polygons() to do nothing by default,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1179,aleju,kontakt@ajung.name,2019-03-04 20:12:37+01:00,9d4e9c5da65f14128de0da9a246b3103920e089c,https://github.com/aleju/imgaug/commit/9d4e9c5da65f14128de0da9a246b3103920e089c,Add polygon augmentation method to Affine,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1180,aleju,kontakt@ajung.name,2019-03-04 20:13:33+01:00,59d4ee9efd24c683b2defbe8845c8cb294a6702b,https://github.com/aleju/imgaug/commit/59d4ee9efd24c683b2defbe8845c8cb294a6702b,Add polygon augmentation method to AffineCv2,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1181,aleju,kontakt@ajung.name,2019-03-04 20:14:09+01:00,cc49680f3dd007db32cbee6e1304f95332161215,https://github.com/aleju/imgaug/commit/cc49680f3dd007db32cbee6e1304f95332161215,Add polygon augmentation method to PiecewiseAffine,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1182,aleju,kontakt@ajung.name,2019-03-04 20:18:08+01:00,de2c17aab88ebf91eb12a78509e14b7fe803be9b,https://github.com/aleju/imgaug/commit/de2c17aab88ebf91eb12a78509e14b7fe803be9b,Add polygon augmentation method to PerspectiveTransform,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1183,aleju,kontakt@ajung.name,2019-03-04 20:19:53+01:00,962190eaca750fc680a470f322c90bd139d1b798,https://github.com/aleju/imgaug/commit/962190eaca750fc680a470f322c90bd139d1b798,Add polygon augmentation method to ElasticTransformation,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1184,aleju,kontakt@ajung.name,2019-03-04 20:21:24+01:00,ad5f063e82df721a84e378eb2e685c7dfa444586,https://github.com/aleju/imgaug/commit/ad5f063e82df721a84e378eb2e685c7dfa444586,Add polygon augmentation method to Rot90,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1185,aleju,kontakt@ajung.name,2019-03-05 17:12:24+01:00,a9aac686989bb9f8ceca28563b9816aadb7c61d4,https://github.com/aleju/imgaug/commit/a9aac686989bb9f8ceca28563b9816aadb7c61d4,Add polygon augmentation method to Resize,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1186,aleju,kontakt@ajung.name,2019-03-05 17:13:12+01:00,50a45f2c6e51d24abf284389103e915ef707177b,https://github.com/aleju/imgaug/commit/50a45f2c6e51d24abf284389103e915ef707177b,Add polygon augmentation method to CropAndPad,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1187,aleju,kontakt@ajung.name,2019-03-05 17:14:22+01:00,316963f6094fdabc94ea6f78b25708c1428d2256,https://github.com/aleju/imgaug/commit/316963f6094fdabc94ea6f78b25708c1428d2256,Add polygon augmentation method to PadToFixedSize,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1188,aleju,kontakt@ajung.name,2019-03-05 17:14:41+01:00,7fa3aefc5e58b8b228f1fc00a74c82fbc7305bd5,https://github.com/aleju/imgaug/commit/7fa3aefc5e58b8b228f1fc00a74c82fbc7305bd5,Add polygon augmentation method to CropToFixedSize,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1189,aleju,kontakt@ajung.name,2019-03-05 17:15:14+01:00,fa11b27fe6da65a2f3034aaba30cd5dbca94adff,https://github.com/aleju/imgaug/commit/fa11b27fe6da65a2f3034aaba30cd5dbca94adff,Add polygon augmentation method to KeepSizeByResize,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1190,aleju,kontakt@ajung.name,2019-03-05 17:17:05+01:00,bf41829f7d724a1d45aa43d5a020bb0fcd5d363e,https://github.com/aleju/imgaug/commit/bf41829f7d724a1d45aa43d5a020bb0fcd5d363e,Add polygon augmentation method to Fliplr,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1191,aleju,kontakt@ajung.name,2019-03-05 17:17:44+01:00,2269325cfd17c7520b8613b3bb88109ceb354755,https://github.com/aleju/imgaug/commit/2269325cfd17c7520b8613b3bb88109ceb354755,Add polygon augmentation method to Flipud,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1192,aleju,kontakt@ajung.name,2019-03-05 17:59:21+01:00,ba63a37cc78f965ca4067053d592d3ff2621a3a7,https://github.com/aleju/imgaug/commit/ba63a37cc78f965ca4067053d592d3ff2621a3a7,Add general coords based augmentation func to Alpha,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1193,aleju,kontakt@ajung.name,2019-03-05 18:02:56+01:00,d37dac9c06113e2461bf2038fe0dfb5d35e54040,https://github.com/aleju/imgaug/commit/d37dac9c06113e2461bf2038fe0dfb5d35e54040,Add polygon augmentation method to Alpha,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1194,aleju,kontakt@ajung.name,2019-03-05 18:34:35+01:00,eadbc58345aca0af087adf0eea96c7f6bc960ab9,https://github.com/aleju/imgaug/commit/eadbc58345aca0af087adf0eea96c7f6bc960ab9,Add general coords based augmentation func to AlphaElementwise,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1195,aleju,kontakt@ajung.name,2019-03-05 18:34:49+01:00,8f152d0aae1563856a3a4c1d3d1c4c2bdfa9008a,https://github.com/aleju/imgaug/commit/8f152d0aae1563856a3a4c1d3d1c4c2bdfa9008a,Add polygon augmentation method to AlphaElementwise,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1196,aleju,kontakt@ajung.name,2019-03-05 18:36:33+01:00,296a114b7bf932f5a6b48bbe24ba5c059e6a5248,https://github.com/aleju/imgaug/commit/296a114b7bf932f5a6b48bbe24ba5c059e6a5248,Remove dead code,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1197,aleju,kontakt@ajung.name,2019-03-05 20:31:31+01:00,8f8122db45a1c1098b3af4d7808f954dfd69ce9b,https://github.com/aleju/imgaug/commit/8f8122db45a1c1098b3af4d7808f954dfd69ce9b,Add polygon augmentation method to Sequential,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1198,aleju,kontakt@ajung.name,2019-03-05 20:47:57+01:00,2c522e86ba8ae4b9004076ed9fffe0ec74ac164f,https://github.com/aleju/imgaug/commit/2c522e86ba8ae4b9004076ed9fffe0ec74ac164f,Decrease code repetition in SomeOf,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1199,aleju,kontakt@ajung.name,2019-03-05 20:49:13+01:00,c2e75c18c9de9760edcfad7b738638af03c68b62,https://github.com/aleju/imgaug/commit/c2e75c18c9de9760edcfad7b738638af03c68b62,Add polygon augmentation method to SomeOf,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1200,aleju,kontakt@ajung.name,2019-03-05 21:10:16+01:00,222be41f2f93acb4a24e8bf57a75adce269cc971,https://github.com/aleju/imgaug/commit/222be41f2f93acb4a24e8bf57a75adce269cc971,Decrease code repetition in Sometimes,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1201,aleju,kontakt@ajung.name,2019-03-05 21:15:37+01:00,26d1c17cb9e633530c0e0131e5f2c674311ee630,https://github.com/aleju/imgaug/commit/26d1c17cb9e633530c0e0131e5f2c674311ee630,Add polygon augmentation method to Sometimes,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1202,aleju,kontakt@ajung.name,2019-03-05 21:26:38+01:00,65746c6783bd918bcb34653131d227064603d94e,https://github.com/aleju/imgaug/commit/65746c6783bd918bcb34653131d227064603d94e,Decrease code repetition in WithChannels,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1203,aleju,kontakt@ajung.name,2019-03-05 21:31:04+01:00,6cac5b0d37f511109cbbf8c819c11a9f75d3da19,https://github.com/aleju/imgaug/commit/6cac5b0d37f511109cbbf8c819c11a9f75d3da19,Add polygon augmentation method to WithChannels,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1204,aleju,kontakt@ajung.name,2019-03-05 21:42:07+01:00,2b6fcf7aa582590838340d879fe9969dcbc42541,https://github.com/aleju/imgaug/commit/2b6fcf7aa582590838340d879fe9969dcbc42541,Add polygon augmentation option to Lambda,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1205,aleju,kontakt@ajung.name,2019-03-05 21:46:19+01:00,8b958cbf36e08a03d66b228a467023fac826b463,https://github.com/aleju/imgaug/commit/8b958cbf36e08a03d66b228a467023fac826b463,Add polygon handling to AssertLambda,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1206,aleju,kontakt@ajung.name,2019-03-05 21:51:37+01:00,0096991d4281e182df3bcf69d1e06d1364724593,https://github.com/aleju/imgaug/commit/0096991d4281e182df3bcf69d1e06d1364724593,Add polygons option to AssertShape,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1207,aleju,kontakt@ajung.name,2019-03-06 17:00:02+01:00,054f50a5a741d8111db21594eb27e63e82fb9316,https://github.com/aleju/imgaug/commit/054f50a5a741d8111db21594eb27e63e82fb9316,Add polygons to Batch and augment_batches(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1208,aleju,kontakt@ajung.name,2019-03-06 17:30:22+01:00,64e69085b80136243a8f30e45b3d563bbeddd7e1,https://github.com/aleju/imgaug/commit/64e69085b80136243a8f30e45b3d563bbeddd7e1,Add 'keypoints' and 'shape' args to KeypointsOnImage.deepcopy(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1209,aleju,kontakt@ajung.name,2019-03-06 17:32:27+01:00,f65540331e1d43d592e034a38d3d38a41d60a51a,https://github.com/aleju/imgaug/commit/f65540331e1d43d592e034a38d3d38a41d60a51a,Add 'keypoints' and 'shape' args to KeypointsOnImage.copy(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1210,aleju,kontakt@ajung.name,2019-03-06 17:33:54+01:00,6f3f5a9f1f15d7779f033023be237a6f6e8b38fa,https://github.com/aleju/imgaug/commit/6f3f5a9f1f15d7779f033023be237a6f6e8b38fa,Add missing points to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1211,aleju,kontakt@ajung.name,2019-03-06 17:38:22+01:00,8d7f7519233e060f11328df023e2a2cf8b8776b4,https://github.com/aleju/imgaug/commit/8d7f7519233e060f11328df023e2a2cf8b8776b4,Add method Keypoint.copy(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1212,aleju,kontakt@ajung.name,2019-03-06 17:39:24+01:00,497af01538a883ddce07c9e950becc3c93998809,https://github.com/aleju/imgaug/commit/497af01538a883ddce07c9e950becc3c93998809,Add method Keypoint.deepcopy(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1213,aleju,kontakt@ajung.name,2019-03-06 17:42:32+01:00,5fbf3797f9e3cd52d420a3ec47f0fef3a9867382,https://github.com/aleju/imgaug/commit/5fbf3797f9e3cd52d420a3ec47f0fef3a9867382,Use Keypoint.deepcopy() in KeypointsOnImage.deepcopy(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1214,aleju,kontakt@ajung.name,2019-03-06 18:01:17+01:00,607bdf571a7fd8e6999cf9f801d7ddf62705d2c9,https://github.com/aleju/imgaug/commit/607bdf571a7fd8e6999cf9f801d7ddf62705d2c9,Fix Affine not changing KeypointsOnImage.shape if empty,3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['kps_aug.shape == (100, 200, 3)', 'not np.allclose([kps_aug.keypoints[0].x, kps_aug.keypoints[0].y],', 'kps_aug.shape == (200, 100, 3)', 'not np.allclose([kps_aug.keypoints[0].x, kps_aug.keypoints[0].y],', 'kps_aug.shape == (200, 100, 3)', 'len(kps_aug.keypoints) == 0']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1215,aleju,kontakt@ajung.name,2019-03-06 18:03:22+01:00,6b881ef7a0b1d73cbae3b82ab0ad466f24967e4a,https://github.com/aleju/imgaug/commit/6b881ef7a0b1d73cbae3b82ab0ad466f24967e4a,Refactor Affine to use .deepcopy() for keypoint copying,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1216,aleju,kontakt@ajung.name,2019-03-06 18:09:25+01:00,3096f0c9230f9d2904ab1372cceccd022cbf7aff,https://github.com/aleju/imgaug/commit/3096f0c9230f9d2904ab1372cceccd022cbf7aff,Refactor AffineCv2 to use .deepcopy() for keypoint copying,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1217,aleju,kontakt@ajung.name,2019-03-06 19:30:15+01:00,b944e0345cb6455afcfe586684a583b633e8c3ef,https://github.com/aleju/imgaug/commit/b944e0345cb6455afcfe586684a583b633e8c3ef,Refactor PiecewiseAffine to use .deepcopy() for keypoint copying,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1218,aleju,kontakt@ajung.name,2019-03-06 19:35:50+01:00,d8086b01efcca138b0d87357684604cf4e98c9fc,https://github.com/aleju/imgaug/commit/d8086b01efcca138b0d87357684604cf4e98c9fc,Fix PiecewiseAffine not changing KeypointsOnImage.shape if empty,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1219,aleju,kontakt@ajung.name,2019-03-06 19:45:55+01:00,fb0a568618801712ee77884191a3b5ccb60148fd,https://github.com/aleju/imgaug/commit/fb0a568618801712ee77884191a3b5ccb60148fd,Refactor PerspectiveTransform to use .deepcopy() for keypoint copying,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1220,aleju,kontakt@ajung.name,2019-03-06 19:52:35+01:00,ea17c81b361781269446497f49e88ef368dc4571,https://github.com/aleju/imgaug/commit/ea17c81b361781269446497f49e88ef368dc4571,Refactor ElasticTransformation to use .deepcopy() for keypoint copying,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1221,aleju,kontakt@ajung.name,2019-03-06 19:54:55+01:00,1689c517b53dcbbca759bc56ca4a53ccf71eb54d,https://github.com/aleju/imgaug/commit/1689c517b53dcbbca759bc56ca4a53ccf71eb54d,Refactor Rot90 to use .deepcopy() for keypoint copying,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1222,aleju,kontakt@ajung.name,2019-03-06 19:56:24+01:00,c4ab3bd36c3ea149dac01c6ebbe7cdc6b74bb0f0,https://github.com/aleju/imgaug/commit/c4ab3bd36c3ea149dac01c6ebbe7cdc6b74bb0f0,Fix error message,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1223,aleju,kontakt@ajung.name,2019-03-06 20:00:16+01:00,d7d0a92c388bacb469fa2d192da112ddeb4d1aba,https://github.com/aleju/imgaug/commit/d7d0a92c388bacb469fa2d192da112ddeb4d1aba,Fix Resize not changing KeypointsOnImage.shape if empty,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1224,aleju,kontakt@ajung.name,2019-03-06 20:02:31+01:00,5313516e1baa9e365a6287aa859363d2f37b644c,https://github.com/aleju/imgaug/commit/5313516e1baa9e365a6287aa859363d2f37b644c,Fix CropAndPad not changing KeypointsOnImage.shape if empty,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1225,aleju,kontakt@ajung.name,2019-03-06 20:05:00+01:00,1c50c44e2aedea5bd72f601a78a8a715b31104f8,https://github.com/aleju/imgaug/commit/1c50c44e2aedea5bd72f601a78a8a715b31104f8,Fix PadToFixedSize not changing KeypointsOnImage.shape if empty,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1226,aleju,kontakt@ajung.name,2019-03-06 20:07:51+01:00,33a52061939530c5b9ff7865fabbfe998fcf3e17,https://github.com/aleju/imgaug/commit/33a52061939530c5b9ff7865fabbfe998fcf3e17,Fix CropToFixedSize not changing KeypointsOnImage.shape if empty,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1227,aleju,kontakt@ajung.name,2019-03-06 20:09:02+01:00,2f1aaaaf642684140392ca6e81c3d59f23429cd4,https://github.com/aleju/imgaug/commit/2f1aaaaf642684140392ca6e81c3d59f23429cd4,Fix KeepSizeByResize not changing KeypointsOnImage.shape if empty,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1228,aleju,kontakt@ajung.name,2019-03-06 20:13:15+01:00,05f7fc0189c8b5df5d91d44d05cde867b7c87d6f,https://github.com/aleju/imgaug/commit/05f7fc0189c8b5df5d91d44d05cde867b7c87d6f,Switch Keypoint methods to Keypoint.deepcopy(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1229,aleju,kontakt@ajung.name,2019-03-06 20:19:44+01:00,55ac82fcd1090f5a2a97776243dae90d43a5027c,https://github.com/aleju/imgaug/commit/55ac82fcd1090f5a2a97776243dae90d43a5027c,Switch KeypointsOnImage methods to KeypointsOnImage.deepcopy(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1230,aleju,kontakt@ajung.name,2019-03-06 21:04:21+01:00,a1732fdaff5c1c6f38446ca37df6cfec0e80ba0d,https://github.com/aleju/imgaug/commit/a1732fdaff5c1c6f38446ca37df6cfec0e80ba0d,Add hooks to augment_polygons(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1231,aleju,kontakt@ajung.name,2019-03-07 17:55:57+01:00,10fc93421fb04de1061539d3ae7f8548844d2f6c,https://github.com/aleju/imgaug/commit/10fc93421fb04de1061539d3ae7f8548844d2f6c,Change documented output of augment_polygons() to PolygonsOnImage,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1232,aleju,kontakt@ajung.name,2019-03-07 18:24:49+01:00,cbe4685afaf6b8b182b177b37c3c11dc858942b8,https://github.com/aleju/imgaug/commit/cbe4685afaf6b8b182b177b37c3c11dc858942b8,Add tests for polygon aug in Resize,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(psoi_aug.polygons) == 2', 'psoi_aug.shape == (8, 12, 3)', 'psoi_aug.polygons[0].exterior_almost_equals(', 'psoi_aug.polygons[1].exterior_almost_equals(', 'len(psoi_aug.polygons) == 2', 'psoi_aug.shape == (8, 24)', 'psoi_aug.polygons[0].exterior_almost_equals(', 'psoi_aug.polygons[1].exterior_almost_equals(', 'len(kpsoi_aug.keypoints) == 0', 'kpsoi_aug.shape == (8, 12, 3)', 'len(psoi_aug.polygons) == 0', 'psoi_aug.shape == (8, 12, 3)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1233,aleju,kontakt@ajung.name,2019-03-07 18:49:16+01:00,8030bab3633c59f8e7d583d10ff8ed362c27ba6c,https://github.com/aleju/imgaug/commit/8030bab3633c59f8e7d583d10ff8ed362c27ba6c,Add tests for polygon aug in Pad,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(psoi_aug) == 2', 'psoi_aug_i.shape == (10, 8, 3)', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(', 'kpsoi_aug.shape == (4, 4, 3)', 'len(kpsoi_aug.keypoints) == 2', 'psoi_aug_i.shape == (4, 4, 3)', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (10, 8, 3)', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(', 'kpsoi_aug.shape == (4, 4, 3)', 'len(kpsoi_aug.keypoints) == 2', 'psoi_aug_i.shape == (4, 4, 3)', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1234,aleju,kontakt@ajung.name,2019-03-07 19:03:21+01:00,1bc32d321eac84a9ad4fcd4952af1e5e73b58455,https://github.com/aleju/imgaug/commit/1bc32d321eac84a9ad4fcd4952af1e5e73b58455,Add tests for polygon aug in Crop,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(psoi_aug) == 2', 'psoi_aug_i.shape == (5, 6, 3)', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (10, 10, 3)', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (3, 9, 3)', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (10, 10, 3)', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1235,aleju,kontakt@ajung.name,2019-03-07 19:04:40+01:00,4b5b71e11aa0ff434613c746b808b0ce79c76a7e,https://github.com/aleju/imgaug/commit/4b5b71e11aa0ff434613c746b808b0ce79c76a7e,Fix tests for polygon aug in Pad,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(psoi_aug) == 2', 'len(psoi_aug) == 2']",[],[],[],[],[],[],[],[],[],[],[],[],"['kpsoi_aug.shape == (4, 4, 3)', 'len(kpsoi_aug.keypoints) == 2', 'kpsoi_aug.shape == (4, 4, 3)', 'len(kpsoi_aug.keypoints) == 2']",[],[],[],[],[],[],[],[],[],[],[],[]
1236,aleju,kontakt@ajung.name,2019-03-07 21:17:09+01:00,005f3d9500baa91f527ee70d9b056d3cc1167e5e,https://github.com/aleju/imgaug/commit/005f3d9500baa91f527ee70d9b056d3cc1167e5e,Add tests for polygon aug in Affine,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(psoi_aug) == 2', 'psoi_aug_i.shape == (100, 200, 3)', 'not psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[0].is_valid', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (200, 100, 3)', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[0].is_valid', 'psoi_aug.shape == (200, 100, 3)', 'len(psoi_aug.polygons) == 0', 'kpsois_aug[0].shape == img.shape', 'kpsois_aug[1].shape == img.shape', 'False', 'False', 'np.array_equal(img_aug_indices, kpsois_aug_indices)', 'len(set(img_aug_indices)) == 2', 'len(set(kpsois_aug_indices)) == 2', 'psois_aug[0].shape == img.shape', 'psois_aug[1].shape == img.shape', 'psois_aug[0].polygons[0].is_valid', 'psois_aug[1].polygons[0].is_valid', 'False', 'False', 'np.array_equal(img_aug_indices, psois_aug_indices)', 'len(set(img_aug_indices)) == 2', 'len(set(psois_aug_indices)) == 2', 'poly.is_valid', 'ext[0][0] < ext[2][0] < ext[1][0]', 'ext[0][1] < ext[2][1]', 'np.allclose(ext[0][1], ext[1][1])']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1237,aleju,kontakt@ajung.name,2019-03-08 17:19:50+01:00,366e5712748e6dd5f50c6d660a5c87d5ff99a946,https://github.com/aleju/imgaug/commit/366e5712748e6dd5f50c6d660a5c87d5ff99a946,Fix polygon aug breaking when recoverer set,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1238,aleju,kontakt@ajung.name,2019-03-08 17:22:33+01:00,3bf24d2d4cf57f74b9eef58681eda95b338e97a1,https://github.com/aleju/imgaug/commit/3bf24d2d4cf57f74b9eef58681eda95b338e97a1,Fix in poly aug random state unaligned if recoverer set,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1239,aleju,kontakt@ajung.name,2019-03-08 17:23:35+01:00,9c9cc701cbfaf629c307b0de8be0bf8389317746,https://github.com/aleju/imgaug/commit/9c9cc701cbfaf629c307b0de8be0bf8389317746,Improve error messages,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1240,aleju,kontakt@ajung.name,2019-03-08 17:23:50+01:00,0cce767652f17d0a6ca4b3dcea57a5e96923f5ce,https://github.com/aleju/imgaug/commit/0cce767652f17d0a6ca4b3dcea57a5e96923f5ce,Add todo,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1241,aleju,kontakt@ajung.name,2019-03-08 17:31:38+01:00,fd1eeeb325a03a987e9ef587ebef6e8838b83c6c,https://github.com/aleju/imgaug/commit/fd1eeeb325a03a987e9ef587ebef6e8838b83c6c,Add tests for polygon aug in PiecewiseAffine,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed.shape == img.shape', 'len(observed.keypoints) == 0', 'observed_psoi.shape == img.shape', 'poly_aug.is_valid', 'observed_img[y, x] > 0', 'observed.shape == img.shape', 'observed.polygons[0].exterior_almost_equals(psoi.polygons[0])', 'observed.polygons[1].exterior_almost_equals(psoi.polygons[1])', 'observed.polygons[0].is_valid', 'observed.polygons[1].is_valid', 'observed.shape == img.shape', 'observed.polygons[0].exterior_almost_equals(poly)', 'observed.polygons[0].is_valid', 'observed.shape == img.shape', 'len(observed.polygons) == 0']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1242,aleju,kontakt@ajung.name,2019-03-08 18:41:37+01:00,78e33b705731c039fdf9369d65e9816ebd32443d,https://github.com/aleju/imgaug/commit/78e33b705731c039fdf9369d65e9816ebd32443d,Verify from/to_shape in Keypoint.project(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1243,aleju,kontakt@ajung.name,2019-03-08 18:47:46+01:00,b0125417fa890ebd54b1a91b51688eae913bd48f,https://github.com/aleju/imgaug/commit/b0125417fa890ebd54b1a91b51688eae913bd48f,Change PerspectiveTransform to ensure min height/width,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1244,aleju,kontakt@ajung.name,2019-03-08 18:48:52+01:00,19326a1ce8168fb8c500c8ecbbe0f31321cbf9bd,https://github.com/aleju/imgaug/commit/19326a1ce8168fb8c500c8ecbbe0f31321cbf9bd,Add tests for polygon aug in PerspectiveTransform,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['kpsoi_aug.shape == img.shape', 'img_aug[y, x] > 10', 'observed.shape == img.shape', 'len(observed.keypoints) == 0', 'observed.shape == (30 - 12, 30 - 12, 3)', 'len(observed.polygons) == 1', 'observed.polygons[0].is_valid', 'observed.shape == (30, 30, 3)', 'len(observed.polygons) == 1', 'observed.polygons[0].is_valid', 'psoi_aug.shape == img.shape', 'poly_aug.is_valid', 'img_aug[y, x] > 10', 'observed.shape == img.shape', 'len(observed.polygons) == 0', 'observed.shape == (30, 30, 3)', 'len(observed.polygons) == 1', 'observed.polygons[0].is_valid']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1245,aleju,kontakt@ajung.name,2019-03-08 21:28:51+01:00,be13d374fb7f072eda1e5016d51c7168457e49b7,https://github.com/aleju/imgaug/commit/be13d374fb7f072eda1e5016d51c7168457e49b7,Add tests for polygon aug in ElasticTransformation,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['kpsoi_aug.shape == (120, 70)', 'len(kpsoi_aug.keypoints) == 5', 'count_bad <= 1', 'len(kpsoi_aug.keypoints) == 0', 'kpsoi_aug.shape == (10, 10, 3)', 'observed.shape == (50, 50)', 'len(observed.polygons) == 1', 'observed.polygons[0].exterior_almost_equals(poly)', 'observed.polygons[0].is_valid', 'observed.shape == (50, 50)', 'len(observed.polygons) == 1', 'observed.polygons[0].exterior_almost_equals(poly)', 'observed.polygons[0].is_valid', 'observed.shape == (50, 50)', 'len(observed.polygons) == 1', 'observed.polygons[0].exterior_almost_equals(poly, max_distance=0.5)', 'observed.polygons[0].is_valid', 'psoi_aug.shape == (100, 100)', 'len(psoi_aug.polygons) == 1', 'poly_aug.is_valid', 'count_bad <= 2', 'len(psoi_aug.polygons) == 0', 'psoi_aug.shape == (10, 10, 3)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1246,aleju,kontakt@ajung.name,2019-03-08 22:00:35+01:00,bb6f070ef54f4e681394886d11be9a93609348b3,https://github.com/aleju/imgaug/commit/bb6f070ef54f4e681394886d11be9a93609348b3,Allow lists of tuples in Polygon.exterior_almost_equals(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1247,aleju,kontakt@ajung.name,2019-03-08 22:00:53+01:00,a2ee02a15101853aef27ebf8b0840bcfd48f5d12,https://github.com/aleju/imgaug/commit/a2ee02a15101853aef27ebf8b0840bcfd48f5d12,Add tests for polygon aug in Rot90,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['psoi_aug.shape == psoi.shape', 'len(psoi_aug.polygons) == 1', 'psoi_aug.polygons[0].is_valid', 'np.allclose(poly_aug.exterior, poly.exterior)', 'psoi_aug.shape == (8, 4, 3)', 'len(psoi_aug.polygons) == 1', 'psoi_aug.polygons[0].is_valid', 'psoi_aug.polygons[0].exterior_almost_equals(expected)', 'psoi_aug.shape == (4, 8, 3)', 'len(psoi_aug.polygons) == 1', 'psoi_aug.polygons[0].is_valid', 'psoi_aug.polygons[0].exterior_almost_equals(expected)', 'psoi_aug.shape == (8, 4, 3)', 'len(psoi_aug.polygons) == 1', 'psoi_aug.polygons[0].is_valid', 'psoi_aug.polygons[0].exterior_almost_equals(expected)', 'psoi_aug.shape == (4, 8, 3)', 'len(psoi_aug.polygons) == 1', 'psoi_aug.polygons[0].is_valid', 'psoi_aug.polygons[0].exterior_almost_equals(expected)', 'psoi_aug[0].shape == (8, 4, 3)', 'psoi_aug[1].shape == (4, 8, 3)', 'psoi_aug[2].shape == (8, 4, 3)', 'psoi_aug[3].shape == (4, 8, 3)', 'psoi_aug[0].polygons[0].exterior_almost_equals(expected_rot1)', 'psoi_aug[1].polygons[0].exterior_almost_equals(expected_rot2)', 'psoi_aug[2].polygons[0].exterior_almost_equals(expected_rot1)', 'psoi_aug[3].polygons[0].exterior_almost_equals(expected_rot2)', 'len(kpsoi_aug.keypoints) == 0', 'kpsoi_aug.shape == (8, 4, 3)', 'len(psoi_aug.polygons) == 0', 'psoi_aug.shape == (8, 4, 3)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1248,aleju,kontakt@ajung.name,2019-03-09 09:00:09+01:00,1d088bd39ebd0b6619020f08101b62da0725e765,https://github.com/aleju/imgaug/commit/1d088bd39ebd0b6619020f08101b62da0725e765,Add tests for polygon aug in Noop,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed.shape == psoi.shape', 'len(observed.polygons) == 1', 'np.allclose(observed.polygons[0].exterior, psoi.polygons[0].exterior)', 'observed.shape == psoi.shape', 'len(observed.polygons) == 1', 'np.allclose(observed.polygons[0].exterior, psoi.polygons[0].exterior)', 'observed.shape == (4, 5, 3)', 'len(observed.keypoints) == 0', 'observed.shape == (4, 5, 3)', 'len(observed.polygons) == 0']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1249,aleju,kontakt@ajung.name,2019-03-09 09:18:50+01:00,6876de2142a1532a5943619375952f68b2c09a3e,https://github.com/aleju/imgaug/commit/6876de2142a1532a5943619375952f68b2c09a3e,Add tests for polygon aug in Lambda,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == expected[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == expected[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed.keypoints) == 0', 'observed.shape == (1, 2, 3)', 'len(observed.polygons) == 0', 'observed.shape == (1, 2, 3)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1250,aleju,kontakt@ajung.name,2019-03-09 09:44:32+01:00,b61e4bf8bdf45387ef8931cff08c68f3fd0190b4,https://github.com/aleju/imgaug/commit/b61e4bf8bdf45387ef8931cff08c68f3fd0190b4,Add tests for polygon aug in AssertLambda,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].shape == expected[0].shape', 'observed[0].polygons[0].is_valid', 'errored', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].shape == expected[0].shape', 'observed[0].polygons[0].is_valid', 'errored']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1251,aleju,kontakt@ajung.name,2019-03-09 09:54:36+01:00,a5ece7476109392e3a795acc0a7af86674a65cd4,https://github.com/aleju/imgaug/commit/a5ece7476109392e3a795acc0a7af86674a65cd4,Add tests for polygon aug in AssertShape,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == expected[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == expected[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'errored', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == expected[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == expected[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'errored', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == expected[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == expected[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'errored', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == expected[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == expected[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'errored']",[],[],[],[],[],[],[],[],[],[],[],[],"['keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[]
1252,aleju,kontakt@ajung.name,2019-03-09 10:21:27+01:00,2f906d632c2d75c4ee5220f0313ee08746cc0bc4,https://github.com/aleju/imgaug/commit/2f906d632c2d75c4ee5220f0313ee08746cc0bc4,Add tests for polygon aug in Sequential,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == polygons[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == polygons[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1253,aleju,kontakt@ajung.name,2019-03-09 10:58:10+01:00,cccc5e26acf286bb32e685bf2ac52fc71d088d8e,https://github.com/aleju/imgaug/commit/cccc5e26acf286bb32e685bf2ac52fc71d088d8e,Add tests for polygon aug in Sometimes,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == polygons[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == polygons[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == polygons[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == polygons[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', '(0.50 - 0.10) <= nb_polygons_if_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= nb_polygons_else_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= nb_polygons_if_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= nb_polygons_else_branch / nb_iterations <= (0.50 + 0.10)', 'len(observed.keypoints) == 0', 'observed.shape == (1, 2, 3)', 'len(observed.polygons) == 0', 'observed.shape == (1, 2, 3)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1254,aleju,kontakt@ajung.name,2019-03-09 11:02:30+01:00,05f0617201059ad52781df63138f609706938afc,https://github.com/aleju/imgaug/commit/05f0617201059ad52781df63138f609706938afc,Add tests for polygon aug in ChannelShuffle,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['psoi_aug.shape == (10, 10, 3)', 'psoi_aug.polygons[0].exterior_almost_equals(psoi.polygons[0])']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1255,aleju,kontakt@ajung.name,2019-03-09 11:12:06+01:00,cfbdbd06b41519ee89b47b826d5f611beada96ac,https://github.com/aleju/imgaug/commit/cfbdbd06b41519ee89b47b826d5f611beada96ac,Add tests for polygon aug in Fliplr,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == polygons[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == polygons[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'int(nb_iterations * 0.3) <= nb_polygons_flipped <= int(nb_iterations * 0.7)', 'nb_polygons_flipped_det in [0, nb_iterations]']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1256,aleju,kontakt@ajung.name,2019-03-09 11:15:58+01:00,2e11c5a3dad3e75c655ef294e054406ffd663ed6,https://github.com/aleju/imgaug/commit/2e11c5a3dad3e75c655ef294e054406ffd663ed6,Add tests for polygon aug in Flipud,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == polygons[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == polygons[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'int(nb_iterations * 0.3) <= nb_polygons_flipped <= int(nb_iterations * 0.7)', 'nb_polygons_flipped_det in [0, nb_iterations]']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1257,aleju,kontakt@ajung.name,2019-03-09 11:31:55+01:00,a2eef0bef646bd45ba6c29c02532ddc8ab7732d8,https://github.com/aleju/imgaug/commit/a2eef0bef646bd45ba6c29c02532ddc8ab7732d8,Fix wrong argument name in Alpha,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1258,aleju,kontakt@ajung.name,2019-03-09 11:38:19+01:00,75c57563e70cc139d192d0961af3c43ef8818a93,https://github.com/aleju/imgaug/commit/75c57563e70cc139d192d0961af3c43ef8818a93,Fix hooks always None in _augment_polygons(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1259,aleju,kontakt@ajung.name,2019-03-09 11:38:41+01:00,57dabf5edc077f06801f55854653b029715152d2,https://github.com/aleju/imgaug/commit/57dabf5edc077f06801f55854653b029715152d2,Add tests for polygon aug in Alpha,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(observed.keypoints) == 0', 'observed.shape == (1, 2, 3)', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(psoi.polygons[0])', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(psoi.polygons[0])', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(expected.polygons[0])', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(expected.polygons[0])', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(psoi.polygons[0])', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(expected.polygons[0])', 'observed[0].polygons[0].is_valid', 'False', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', 'len(observed.polygons) == 0', 'observed.shape == (1, 2, 3)', 'observed.polygons[0].exterior_almost_equals(psoi.polygons[0])']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1260,aleju,kontakt@ajung.name,2019-03-09 11:41:25+01:00,8d5ea7783f92dadfd87072ff42e690cdc943e90b,https://github.com/aleju/imgaug/commit/8d5ea7783f92dadfd87072ff42e690cdc943e90b,Fix wrong argument name in AlphaElementwise,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1261,aleju,kontakt@ajung.name,2019-03-09 11:41:38+01:00,140caada7161f3ac8d962d3a5ce0bcc1b00b2894,https://github.com/aleju/imgaug/commit/140caada7161f3ac8d962d3a5ce0bcc1b00b2894,Add tests for polygon aug in AlphaElementwise,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(psoi.polygons[0])', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(psoi.polygons[0])', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(expected.polygons[0])', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(expected.polygons[0])', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(psoi.polygons[0])', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(expected.polygons[0])', 'observed[0].polygons[0].is_valid', 'False', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', 'len(observed.polygons) == 0', 'observed.shape == (1, 2, 3)', 'observed.polygons[0].exterior_almost_equals(psoi.polygons[0])']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1262,aleju,kontakt@ajung.name,2019-03-09 13:13:40+01:00,18aaa7971df76448bd5bf6585c5091abbf9bdc23,https://github.com/aleju/imgaug/commit/18aaa7971df76448bd5bf6585c5091abbf9bdc23,Add tests for keypoint aug in SomeOf,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(kpsoi_aug.keypoints) == 2', 'kpsoi_aug.shape == (5, 6, 3)', 'keypoints_equal([kpsoi_aug], [kpsoi])', 'len(kpsoi_aug.keypoints) == 2', 'kpsoi_aug.shape == (5, 6, 3)', 'keypoints_equal([kpsoi_aug], [kpsoi_x]) or keypoints_equal([kpsoi_aug], [kpsoi_y])', 'len(kpsoi_aug.keypoints) == 2', 'kpsoi_aug.shape == (5, 6, 3)', 'keypoints_equal([kpsoi_aug], [kpsoi_xy])', 'len(kpsoi_aug.keypoints) == 2', 'kpsoi_aug.shape == (5, 6, 3)', 'keypoints_equal([kpsoi_aug], [kpsoi_xy])', 'len(kpsoi_aug.keypoints) == 0', 'kpsoi_aug.shape == (5, 6, 3)', 'keypoints_equal([kpsoi_aug], [kpsoi])', 'keypoints_equal([kpsoi_aug], [kpsoi_x])', 'keypoints_equal([kpsoi_aug], [kpsoi_y])', 'keypoints_equal([kpsoi_aug], [kpsoi_xy])', 'False', 'all(seen)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1263,aleju,kontakt@ajung.name,2019-03-09 13:22:53+01:00,48fe263845557b56010fcae1007a40d160940138,https://github.com/aleju/imgaug/commit/48fe263845557b56010fcae1007a40d160940138,Add tests for polygon aug in SomeOf,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(psoi_aug.polygons) == 1', 'psoi_aug.shape == (5, 6, 3)', 'psoi_aug.polygons[0].exterior_almost_equals(psoi.polygons[0])', 'psoi_aug.polygons[0].is_valid', 'len(psoi_aug.polygons) == 1', 'psoi_aug.shape == (5, 6, 3)', '(psoi_aug.polygons[0].exterior_almost_equals(psoi_x.polygons[0])', 'psoi_aug.polygons[0].is_valid', 'len(psoi_aug.polygons) == 1', 'psoi_aug.shape == (5, 6, 3)', 'psoi_aug.polygons[0].exterior_almost_equals(psoi_xy.polygons[0])', 'psoi_aug.polygons[0].is_valid', 'len(psoi_aug.polygons) == 1', 'psoi_aug.shape == (5, 6, 3)', 'psoi_aug.polygons[0].exterior_almost_equals(psoi_xy.polygons[0])', 'psoi_aug.polygons[0].is_valid', 'len(psoi_aug.polygons) == 0', 'psoi_aug.shape == (5, 6, 3)', 'psoi_aug.polygons[0].exterior_almost_equals(psoi.polygons[0])', 'psoi_aug.polygons[0].exterior_almost_equals(psoi_x.polygons[0])', 'psoi_aug.polygons[0].exterior_almost_equals(psoi_y.polygons[0])', 'psoi_aug.polygons[0].exterior_almost_equals(psoi_xy.polygons[0])', 'False', 'all(seen)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1264,aleju,kontakt@ajung.name,2019-03-09 13:54:31+01:00,2594fa53d9819323eafa53116bc76996e06a9d04,https://github.com/aleju/imgaug/commit/2594fa53d9819323eafa53116bc76996e06a9d04,Add tests for keypoint aug in WithChannels,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'len(kpsoi_aug.keypoints) == 2', 'kpsoi_aug.shape == (5, 6, 3)', 'keypoints_equal([kpsoi_aug], [kpsoi])', 'len(kpsoi_aug.keypoints) == 2', 'kpsoi_aug.shape == (5, 6, 3)', 'keypoints_equal([kpsoi_aug], [kpsoi_x])', 'len(kpsoi_aug.keypoints) == 2', 'kpsoi_aug.shape == (5, 6, 3)', 'keypoints_equal([kpsoi_aug], [kpsoi_x])']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[]
1265,aleju,kontakt@ajung.name,2019-03-09 13:59:06+01:00,108fc1b839d4d77827f060839ba9986c61096916,https://github.com/aleju/imgaug/commit/108fc1b839d4d77827f060839ba9986c61096916,Add tests for polygon aug in WithChannels,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(psoi_aug.polygons) == 1', 'psoi_aug.shape == (5, 6, 3)', 'psoi_aug.polygons[0].exterior_almost_equals(psoi.polygons[0])', 'psoi_aug.polygons[0].is_valid', 'len(psoi_aug.polygons) == 1', 'psoi_aug.shape == (5, 6, 3)', 'psoi_aug.polygons[0].exterior_almost_equals(psoi_x.polygons[0])', 'psoi_aug.polygons[0].is_valid', 'len(psoi_aug.polygons) == 1', 'psoi_aug.shape == (5, 6, 3)', 'psoi_aug.polygons[0].exterior_almost_equals(psoi_x.polygons[0])', 'psoi_aug.polygons[0].is_valid']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1266,aleju,kontakt@ajung.name,2019-03-09 14:00:45+01:00,dc17f3488530a07b89cf1103e1feda0fd3927939,https://github.com/aleju/imgaug/commit/dc17f3488530a07b89cf1103e1feda0fd3927939,Add tests for empty keypoints/polys in WithChannels,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(kpsoi_aug.keypoints) == 0', 'kpsoi_aug.shape == (5, 6, 3)', 'len(psoi_aug.polygons) == 0', 'psoi_aug.shape == (5, 6, 3)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1267,aleju,kontakt@ajung.name,2019-03-09 14:27:03+01:00,c8f1e9c47dd0052c36c2c9b789f2a4e0cb3d35a1,https://github.com/aleju/imgaug/commit/c8f1e9c47dd0052c36c2c9b789f2a4e0cb3d35a1,Add test for alignment in augment_polygons(),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len([', 'translations_points[5] is None', 'np.array_equal(translations_imgs, translations_points)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1268,aleju,kontakt@ajung.name,2019-03-09 14:29:31+01:00,5fed615fc82368f3cab7aac0a7719f3d3843392c,https://github.com/aleju/imgaug/commit/5fed615fc82368f3cab7aac0a7719f3d3843392c,Add polygon feature to readme,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1269,aleju,kontakt@ajung.name,2019-03-09 15:37:05+01:00,61a18e5cf00f4fd8ecaa46e83c5a54d35121be8e,https://github.com/aleju/imgaug/commit/61a18e5cf00f4fd8ecaa46e83c5a54d35121be8e,Add corner point drawing to Polygon[OnImage].draw_on_image(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1270,aleju,kontakt@ajung.name,2019-03-09 15:38:17+01:00,3cdf41bb51e9ac354d4958e8681810a29c2d847f,https://github.com/aleju/imgaug/commit/3cdf41bb51e9ac354d4958e8681810a29c2d847f,Add imgaug.quokka_polygons(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1271,aleju,kontakt@ajung.name,2019-03-09 15:42:32+01:00,39e198e40b593f54b712f58ee2e596fcde345404,https://github.com/aleju/imgaug/commit/39e198e40b593f54b712f58ee2e596fcde345404,Fix polygon aug example in docstring,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1272,aleju,kontakt@ajung.name,2019-03-09 17:51:24+01:00,302804057789b994509939d5a4dd63fd6650e430,https://github.com/aleju/imgaug/commit/302804057789b994509939d5a4dd63fd6650e430,Improve readme design,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1273,aleju,kontakt@ajung.name,2019-03-10 11:59:03+01:00,3f73f9646732059a8540cfc5c1e32d5c8c34f941,https://github.com/aleju/imgaug/commit/3f73f9646732059a8540cfc5c1e32d5c8c34f941,"Improve polygon recoverer args (make None-able, document)",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1274,aleju,kontakt@ajung.name,2019-03-10 12:30:58+01:00,9d901c93fc8c5b0754381539f03840deca147d41,https://github.com/aleju/imgaug/commit/9d901c93fc8c5b0754381539f03840deca147d41,Fix test for polygon first point choosing,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['got_exception'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1275,aleju,kontakt@ajung.name,2019-03-10 13:17:35+01:00,d91df37487ea62829971a585b0a5038ef2b2bc2a,https://github.com/aleju/imgaug/commit/d91df37487ea62829971a585b0a5038ef2b2bc2a,Change Polygon.draw_on_image() to have meta color and alpha args,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))  # draw did not change original image (copy=True)', 'np.all(image_poly[2:9, 2:3, c_idx] == np.zeros((7, 1), dtype=np.uint8) + value)  # left boundary', 'np.all(image_poly[2:9, 8:9, c_idx] == np.zeros((7, 1), dtype=np.uint8) + value)  # right boundary', 'np.all(image_poly[2:3, 2:9, c_idx] == np.zeros((1, 7), dtype=np.uint8) + value)  # top boundary', 'np.all(image_poly[8:9, 2:9, c_idx] == np.zeros((1, 7), dtype=np.uint8) + value)  # bottom boundary', 'np.all(image_poly[3:8, 3:8, :] == expected)', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.all(', 'np.all(image_poly[3:8, 3:8, :] == expected.astype(np.uint8))']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1276,aleju,kontakt@ajung.name,2019-03-10 15:52:21+01:00,83b286ec7ca28af3e6e82daa3a19cd421de71ff5,https://github.com/aleju/imgaug/commit/83b286ec7ca28af3e6e82daa3a19cd421de71ff5,Add alpha argument to KeypointsOnImage.draw_on_image(),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(image_kps[kps_mask] == [int(0.5*10+0), int(0.5*10+0.5*255), int(10*0.5+0)])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1277,aleju,kontakt@ajung.name,2019-03-10 15:55:11+01:00,4cc61469bf80ba5307750f3c89426276e110740a,https://github.com/aleju/imgaug/commit/4cc61469bf80ba5307750f3c89426276e110740a,Integrate point drawing alpha into Polygon.draw_on_image(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1278,aleju,kontakt@ajung.name,2019-03-10 16:48:32+01:00,2109cf69e30c0219b9fefa098a653715e2ac7a6f,https://github.com/aleju/imgaug/commit/2109cf69e30c0219b9fefa098a653715e2ac7a6f,Fix docstring,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1279,aleju,kontakt@ajung.name,2019-03-10 16:52:28+01:00,333eac9b7a545bebfe0244dc64eb787e13ac9393,https://github.com/aleju/imgaug/commit/333eac9b7a545bebfe0244dc64eb787e13ac9393,Add argument 'raise_if_too_far_away' to Polygon.change_first_point_by_coords(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1280,aleju,kontakt@ajung.name,2019-03-10 17:02:29+01:00,e3d569a25ae96bbe03c1dcbeb037f586f15af156,https://github.com/aleju/imgaug/commit/e3d569a25ae96bbe03c1dcbeb037f586f15af156,Add property 'height' to Polygon,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(poly.height, 1.0, atol=1e-8, rtol=0)', 'np.allclose(poly.height, 2.0, atol=1e-8, rtol=0)', 'np.allclose(poly.height, 1.0, atol=1e-8, rtol=0)', 'np.allclose(poly.height, 1.0, atol=1e-8, rtol=0)', 'np.allclose(poly.height, 0.0, atol=1e-8, rtol=0)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1281,aleju,kontakt@ajung.name,2019-03-10 17:05:29+01:00,17d2792716237fca6aae20c4f3fc4f0d1f8cd6be,https://github.com/aleju/imgaug/commit/17d2792716237fca6aae20c4f3fc4f0d1f8cd6be,Add property 'width' to Polygon,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(poly.width, 1.0, atol=1e-8, rtol=0)', 'np.allclose(poly.width, 2.0, atol=1e-8, rtol=0)', 'np.allclose(poly.width, 1.0, atol=1e-8, rtol=0)', 'np.allclose(poly.width, 1.0, atol=1e-8, rtol=0)', 'np.allclose(poly.width, 0.0, atol=1e-8, rtol=0)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1282,aleju,kontakt@ajung.name,2019-03-10 17:06:05+01:00,a88624bbb880014e67b067457b2efcdc739a4520,https://github.com/aleju/imgaug/commit/a88624bbb880014e67b067457b2efcdc739a4520,Fix test for Polygon.area,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['poly.area == 1', 'poly.area == 2']",[],[],[],[],[],[],[],[],[],[],[],[]
1283,aleju,kontakt@ajung.name,2019-03-10 19:28:09+01:00,e87f0dadb276f29284ddfa88bf63452f905cd967,https://github.com/aleju/imgaug/commit/e87f0dadb276f29284ddfa88bf63452f905cd967,Fix docstring,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1284,aleju,kontakt@ajung.name,2019-03-11 20:43:53+01:00,4f3b6e3c9e378dc5b61fb8f6a16e6b81943a4bd9,https://github.com/aleju/imgaug/commit/4f3b6e3c9e378dc5b61fb8f6a16e6b81943a4bd9,Change Polygon.clip*() output from MultiPolygon to list(Polygon),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 1', 'multipoly_clipped[0].exterior_almost_equals(poly.exterior)', 'multipoly_clipped[0].label is None', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 1', 'multipoly_clipped[0].exterior_almost_equals(np.float32([', 'multipoly_clipped[0].label == ', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 2', 'multipoly_clipped[0].exterior_almost_equals(np.float32([', 'multipoly_clipped[0].label == ', 'multipoly_clipped[1].exterior_almost_equals(np.float32([', 'multipoly_clipped[0].label == ', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 0']",[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(multipoly_clipped, ia.MultiPolygon)', 'len(multipoly_clipped.geoms) == 1', 'multipoly_clipped.geoms[0].exterior_almost_equals(poly.exterior)', 'multipoly_clipped.geoms[0].label is None', 'isinstance(multipoly_clipped, ia.MultiPolygon)', 'len(multipoly_clipped.geoms) == 1', 'multipoly_clipped.geoms[0].exterior_almost_equals(np.float32([', 'multipoly_clipped.geoms[0].label == ', 'isinstance(multipoly_clipped, ia.MultiPolygon)', 'len(multipoly_clipped.geoms) == 2', 'multipoly_clipped.geoms[0].exterior_almost_equals(np.float32([', 'multipoly_clipped.geoms[0].label == ', 'multipoly_clipped.geoms[1].exterior_almost_equals(np.float32([', 'multipoly_clipped.geoms[0].label == ', 'isinstance(multipoly_clipped, ia.MultiPolygon)', 'len(multipoly_clipped.geoms) == 0']",[],[],[],[],[],[],[],[],[],[],[],[]
1285,aleju,kontakt@ajung.name,2019-03-12 20:17:56+01:00,dd0461531930d411a196736a1bb3fb66b874ddd4,https://github.com/aleju/imgaug/commit/dd0461531930d411a196736a1bb3fb66b874ddd4,Update notebook links in readme + some minor improvements,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1286,aleju,kontakt@ajung.name,2019-03-16 18:04:34+01:00,b7f6958db512726aa26e25e66a84f2cf4f76025d,https://github.com/aleju/imgaug/commit/b7f6958db512726aa26e25e66a84f2cf4f76025d,"Fix Affine heatmap aug exceeding value range [0.0, 1.0]",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1287,aleju,kontakt@ajung.name,2019-03-16 18:05:44+01:00,2d6f1cd0de7a8d03d693be914e7070d51a9098f7,https://github.com/aleju/imgaug/commit/2d6f1cd0de7a8d03d693be914e7070d51a9098f7,Change Affine heatmap aug to always use order=3,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1288,aleju,kontakt@ajung.name,2019-03-16 18:08:26+01:00,c72e37662e37d97ccc0447260eeea1575f8861c8,https://github.com/aleju/imgaug/commit/c72e37662e37d97ccc0447260eeea1575f8861c8,"Fix PiecewiseAffine heatmap aug exceeding value range [0.0, 1.0]",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1289,aleju,kontakt@ajung.name,2019-03-16 18:09:58+01:00,2c617ef7aae340a0ff7eea65f07a4eb23a429b6a,https://github.com/aleju/imgaug/commit/2c617ef7aae340a0ff7eea65f07a4eb23a429b6a,Change PiecewiseAffine heatmap aug to always use order=3,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1290,aleju,kontakt@ajung.name,2019-03-16 18:13:16+01:00,19bba3110a765bf5a07474acde034c77311f9d40,https://github.com/aleju/imgaug/commit/19bba3110a765bf5a07474acde034c77311f9d40,Fix Affine test,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['(same / img_aug_mask.size) >= 0.95'],[],[],[],[],[],[],[],[],[],[],[],[],['(same / img_aug_mask.size) >= 0.99'],[],[],[],[],[],[],[],[],[],[],[],[]
1291,aleju,kontakt@ajung.name,2019-03-16 18:17:01+01:00,b2b6cb6c6b4894a11b7e21494de3f0c9286045a3,https://github.com/aleju/imgaug/commit/b2b6cb6c6b4894a11b7e21494de3f0c9286045a3,Change ElasticTransformation heatmap aug to always use order=3,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1292,aleju,kontakt@ajung.name,2019-03-16 18:26:54+01:00,4b07f31b144cf74a9a7de21635d1ef474344a707,https://github.com/aleju/imgaug/commit/4b07f31b144cf74a9a7de21635d1ef474344a707,Change value range check in HeatmapsOnImage to warning,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1293,aleju,kontakt@ajung.name,2019-03-13 18:06:37+01:00,1f68200531a2a864828e799c58699628f7ffb66b,https://github.com/aleju/imgaug/commit/1f68200531a2a864828e799c58699628f7ffb66b,Add first functions for Batch normalized data getters,2,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,33,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,149,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestBatch(unittest.TestCase):'],"[('Raises', '(ValueError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):')]",['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['getattr(batch,  % (attr_name,)) is None', 'getattr(batch,  % (attr_name,)) is None', 'batch.data is None', 'getattr(batch,  % (attr_name,)) == i', 'getattr(batch,  % (attr_name,)) is None', 'batch.data == 6', 'batch.get_images_unaug_normalized() is None', 'batch.get_images_unaug_normalized() is None', 'ia.is_np_array(observed)', 'observed.shape == (1, 4, 4, 3)', 'observed.dtype.name == ', 'ia.is_np_array(observed)', 'observed.shape == (1, 4, 4, 3)', 'observed.dtype.name == ', 'ia.is_np_array(observed)', 'observed.shape == (1, 4, 4, 1)', 'observed.dtype.name == ', 'isinstance(batch.get_images_unaug_normalized(), list)', 'len(batch.get_images_unaug_normalized()) == 0', 'isinstance(observed, list)', 'len(observed) == 2', 'ia.is_np_array(observed[0])', 'ia.is_np_array(observed[1])', 'observed[0].shape == (4, 4)', 'observed[1].shape == (5, 5, 3)', 'observed[0].dtype.name == ', 'observed[1].dtype.name == ', 'False', 'False', 'False', 'False', 'False', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'observed[0] is None', 'observed[1] is True', 'len(observed[2]) == 0', 'observed[0] is None', 'observed[1] is True', 'len(observed[2]) == 1', 'observed[2][0] == ', 'ia.is_np_array(observed[0])', 'observed[0].shape == (4, 4, 3)', 'observed[1] is True', 'len(observed[2]) == 0', 'observed[0] == 0', 'observed[1] is True', 'len(observed[2]) == 0', 'observed[0] == ', 'observed[1] is True', 'len(observed[2]) == 0', 'observed[0] is None', 'observed[1] is False', 'len(observed[2]) == 0', 'observed[0] is None', 'observed[1] is False', 'len(observed[2]) == 1', 'observed[0] is None', 'observed[1] is False', 'len(observed[2]) == 2', 'observed[0] is None', 'observed[1] is True', 'len(observed[2]) == 1', 'ia.is_np_array(observed[0])', 'observed[0].shape == (4, 4, 3)', 'observed[1] is True', 'len(observed[2]) == 1', 'ia.is_np_array(observed[0])', 'observed[0].shape == (4, 4, 3)', 'observed[1] is True', 'len(observed[2]) == 2', 'ia.is_np_array(observed[0])', 'observed[0].shape == (4, 4, 3)', 'observed[1] is True', 'len(observed[2]) == 2', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == cls_name', 'ntype ==  % (cls_name,)', 'ntype ==  % (cls_name,)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1294,aleju,kontakt@ajung.name,2019-03-18 20:56:29+01:00,33259e20226754819fe775b92da08aa67c72dd37,https://github.com/aleju/imgaug/commit/33259e20226754819fe775b92da08aa67c72dd37,Add test for Batch.get_heatmaps_unaug_normalized(),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['heatmaps_norm is None', 'isinstance(heatmaps_norm, list)', 'isinstance(heatmaps_norm[0], ia.HeatmapsOnImage)', 'np.allclose(heatmaps_norm[0].arr_0to1, 0 + 0.1)', 'isinstance(heatmaps_norm, list)', 'isinstance(heatmaps_norm[0], ia.HeatmapsOnImage)', 'np.allclose(heatmaps_norm[0].arr_0to1, 0 + 0.1)', 'isinstance(heatmaps_norm, list)', 'isinstance(heatmaps_norm[0], ia.HeatmapsOnImage)', 'np.allclose(heatmaps_norm[0].arr_0to1, 0 + 0.1)', 'heatmaps_norm is None', 'isinstance(heatmaps_norm, list)', 'isinstance(heatmaps_norm[0], ia.HeatmapsOnImage)', 'np.allclose(heatmaps_norm[0].arr_0to1, 0 + 0.1)', 'isinstance(heatmaps_norm, list)', 'isinstance(heatmaps_norm[0], ia.HeatmapsOnImage)', 'np.allclose(heatmaps_norm[0].arr_0to1, 0 + 0.1)', 'isinstance(heatmaps_norm, list)', 'isinstance(heatmaps_norm[0], ia.HeatmapsOnImage)', 'np.allclose(heatmaps_norm[0].arr_0to1, 0 + 0.1)']",[],[],[],[],[],[],[],[],[],[],[],[],"['False', 'False', 'False', 'False', 'False']",[],[],[],[],[],[],[],[],[],[],[],[]
1295,aleju,kontakt@ajung.name,2019-03-18 21:20:55+01:00,1ea7d626b1c7cecffcd44e0c5b04535306d72b2b,https://github.com/aleju/imgaug/commit/1ea7d626b1c7cecffcd44e0c5b04535306d72b2b,Fix assert for nb_classes accepting too low values,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1296,aleju,kontakt@ajung.name,2019-03-18 21:21:17+01:00,7f5404c9f4250862d789bb505dae91e0affe54f6,https://github.com/aleju/imgaug/commit/7f5404c9f4250862d789bb505dae91e0affe54f6,Add test for Batch.get_segmentation_maps_unaug_normalized(),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['segmaps_norm is None', 'isinstance(segmaps_norm, list)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 1)', 'isinstance(segmaps_norm, list)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 1)', 'isinstance(segmaps_norm, list)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 0 + 1)', 'segmaps_norm is None', 'isinstance(segmaps_norm, list)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 1)', 'isinstance(segmaps_norm, list)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 1)', 'isinstance(segmaps_norm, list)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 1)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1297,aleju,kontakt@ajung.name,2019-03-19 18:58:16+01:00,819839da5e3dd84731a357f8db44fbb269000bf6,https://github.com/aleju/imgaug/commit/819839da5e3dd84731a357f8db44fbb269000bf6,Add test for Batch.get_keypoints_unaug_normalized(),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,81,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['keypoints_norm is None', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 1', 'np.allclose(keypoints_norm[0].get_coords_array(), 1)', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 5', 'np.allclose(keypoints_norm[0].get_coords_array(), 1)', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 1', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 1', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 1', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'keypoints_norm is None', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 1', 'np.allclose(keypoints_norm[0].get_coords_array(), 1)', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 5', 'np.allclose(keypoints_norm[0].get_coords_array(), 1)', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 2', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'keypoints_norm[0].keypoints[1].x == 3', 'keypoints_norm[0].keypoints[1].y == 4', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 2', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'keypoints_norm[0].keypoints[1].x == 3', 'keypoints_norm[0].keypoints[1].y == 4', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 1', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'isinstance(keypoints_norm[1], ia.KeypointsOnImage)', 'len(keypoints_norm[1].keypoints) == 1', 'keypoints_norm[1].keypoints[0].x == 3', 'keypoints_norm[1].keypoints[0].y == 4', 'keypoints_norm is None', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 2', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'keypoints_norm[0].keypoints[1].x == 3', 'keypoints_norm[0].keypoints[1].y == 4', 'len(keypoints_norm[1].keypoints) == 2', 'keypoints_norm[1].keypoints[0].x == 5', 'keypoints_norm[1].keypoints[0].y == 6', 'keypoints_norm[1].keypoints[1].x == 7', 'keypoints_norm[1].keypoints[1].y == 8', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 2', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'keypoints_norm[0].keypoints[1].x == 3', 'keypoints_norm[0].keypoints[1].y == 4', 'len(keypoints_norm[1].keypoints) == 2', 'keypoints_norm[1].keypoints[0].x == 5', 'keypoints_norm[1].keypoints[0].y == 6', 'keypoints_norm[1].keypoints[1].x == 7', 'keypoints_norm[1].keypoints[1].y == 8']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1298,aleju,kontakt@ajung.name,2019-03-19 20:50:54+01:00,18c414168eb2c958f63467bd78626067b963d64b,https://github.com/aleju/imgaug/commit/18c414168eb2c958f63467bd78626067b963d64b,Add todo,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1299,aleju,kontakt@ajung.name,2019-03-19 20:51:06+01:00,51ce6fffd0f10bf73da0ece7271f6e07fa61e09b,https://github.com/aleju/imgaug/commit/51ce6fffd0f10bf73da0ece7271f6e07fa61e09b,Add test for Batch.get_bounding_boxes_unaug_normalized(),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,111,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['bbs_norm is None', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'np.allclose(bbs_norm[0].to_xyxy_array(), 1)', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 5', 'np.allclose(bbs_norm[0].to_xyxy_array(), 1)', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'bbs_norm is None', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'np.allclose(bbs_norm[0].to_xyxy_array(), 1)', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 5', 'np.allclose(bbs_norm[0].to_xyxy_array(), 1)', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 2', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'bbs_norm[0].bounding_boxes[1].x1 == 5', 'bbs_norm[0].bounding_boxes[1].y1 == 6', 'bbs_norm[0].bounding_boxes[1].x2 == 7', 'bbs_norm[0].bounding_boxes[1].y2 == 8', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 2', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'bbs_norm[0].bounding_boxes[1].x1 == 5', 'bbs_norm[0].bounding_boxes[1].y1 == 6', 'bbs_norm[0].bounding_boxes[1].x2 == 7', 'bbs_norm[0].bounding_boxes[1].y2 == 8', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'isinstance(bbs_norm[1], ia.BoundingBoxesOnImage)', 'len(bbs_norm[1].bounding_boxes) == 1', 'bbs_norm[1].bounding_boxes[0].x1 == 5', 'bbs_norm[1].bounding_boxes[0].y1 == 6', 'bbs_norm[1].bounding_boxes[0].x2 == 7', 'bbs_norm[1].bounding_boxes[0].y2 == 8', 'bbs_norm is None', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'len(bbs_norm[1].bounding_boxes) == 2', 'bbs_norm[1].bounding_boxes[0].x1 == 5', 'bbs_norm[1].bounding_boxes[0].y1 == 6', 'bbs_norm[1].bounding_boxes[0].x2 == 7', 'bbs_norm[1].bounding_boxes[0].y2 == 8', 'bbs_norm[1].bounding_boxes[1].x1 == 9', 'bbs_norm[1].bounding_boxes[1].y1 == 10', 'bbs_norm[1].bounding_boxes[1].x2 == 11', 'bbs_norm[1].bounding_boxes[1].y2 == 12', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 2', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'bbs_norm[0].bounding_boxes[1].x1 == 5', 'bbs_norm[0].bounding_boxes[1].y1 == 6', 'bbs_norm[0].bounding_boxes[1].x2 == 7', 'bbs_norm[0].bounding_boxes[1].y2 == 8', 'len(bbs_norm[1].bounding_boxes) == 2', 'bbs_norm[1].bounding_boxes[0].x1 == 9', 'bbs_norm[1].bounding_boxes[0].y1 == 10', 'bbs_norm[1].bounding_boxes[0].x2 == 11', 'bbs_norm[1].bounding_boxes[0].y2 == 12', 'bbs_norm[1].bounding_boxes[1].x1 == 13', 'bbs_norm[1].bounding_boxes[1].y1 == 14', 'bbs_norm[1].bounding_boxes[1].x2 == 15', 'bbs_norm[1].bounding_boxes[1].y2 == 16']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1300,aleju,kontakt@ajung.name,2019-03-20 17:50:52+01:00,7bc1df7fb711ed5d9ee26862d7bd3eb7bbe30307,https://github.com/aleju/imgaug/commit/7bc1df7fb711ed5d9ee26862d7bd3eb7bbe30307,Fix errors in Batch.get_polygons_unaug_normalized(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1301,aleju,kontakt@ajung.name,2019-03-20 17:51:16+01:00,77515901912b0b0a208caa36f294d6202e638747,https://github.com/aleju/imgaug/commit/77515901912b0b0a208caa36f294d6202e638747,Add test for Batch.get_polygons_unaug_normalized(),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['polygons_norm is None', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'np.allclose(polygons_norm[0].polygons[0].exterior,', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 5', 'np.allclose(polygons_norm[0].polygons[0].exterior,', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm is None', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'np.allclose(polygons_norm[0].polygons[0].exterior,', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 5', 'np.allclose(polygons_norm[0].polygons[0].exterior,', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm[0].polygons[1].exterior_almost_equals(coords2)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'isinstance(polygons_norm[1], ia.PolygonsOnImage)', 'len(polygons_norm[1].polygons) == 1', 'polygons_norm[1].polygons[0].exterior_almost_equals(coords2)', 'polygons_norm is None', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'np.allclose(polygons_norm[0].polygons[0].exterior,', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 5', 'np.allclose(polygons_norm[0].polygons[0].exterior,', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm[0].polygons[1].exterior_almost_equals(coords2)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm[0].polygons[1].exterior_almost_equals(coords2)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'isinstance(polygons_norm[1], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm[0].polygons[1].exterior_almost_equals(coords2)', 'len(polygons_norm[1].polygons) == 2', 'polygons_norm[1].polygons[0].exterior_almost_equals(coords3)', 'polygons_norm[1].polygons[1].exterior_almost_equals(coords4)', 'polygons_norm is None', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm[0].polygons[1].exterior_almost_equals(coords2)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[1].polygons[0].exterior_almost_equals(coords3)', 'polygons_norm[1].polygons[1].exterior_almost_equals(coords4)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm[0].polygons[1].exterior_almost_equals(coords2)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[1].polygons[0].exterior_almost_equals(coords3)', 'polygons_norm[1].polygons[1].exterior_almost_equals(coords4)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1302,aleju,kontakt@ajung.name,2019-03-20 19:46:20+01:00,2054dbc5b91ec1e5c844f3680b60e6889b18fbd7,https://github.com/aleju/imgaug/commit/2054dbc5b91ec1e5c844f3680b60e6889b18fbd7,Make Batch.deepcopy() more flexible and simpler,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1303,aleju,kontakt@ajung.name,2019-03-20 19:46:42+01:00,d62bb5d7a2b76f31f3303a5bf75d0fc2ec460ebc,https://github.com/aleju/imgaug/commit/d62bb5d7a2b76f31f3303a5bf75d0fc2ec460ebc,Add test for Batch.deepcopy(),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(keys) >= 12', 'getattr(observed, attr_name) is None', 'getattr(observed, attr_name) is None', 'ia.is_np_array(observed.images_unaug)', 'getattr(observed, attr_name) is None', 'ia.is_np_array(observed.images_unaug)', 'observed.images_unaug.shape == (1, 1, 3)', 'isinstance(observed.heatmaps_unaug[0], ia.HeatmapsOnImage)', 'isinstance(observed.segmentation_maps_unaug[0],', 'isinstance(observed.keypoints_unaug[0], ia.KeypointsOnImage)', 'isinstance(observed.bounding_boxes_unaug[0],', 'isinstance(observed.polygons_unaug[0], ia.PolygonsOnImage)', 'isinstance(observed.data, dict)', 'observed.heatmaps_unaug[0].shape == (4, 4, 3)', 'observed.segmentation_maps_unaug[0].shape == (5, 5, 3)', 'observed.keypoints_unaug[0].shape == (6, 6, 3)', 'observed.bounding_boxes_unaug[0].shape == (7, 7, 3)', 'observed.polygons_unaug[0].shape == (100, 100, 3)', 'observed.heatmaps_unaug[0].arr_0to1.shape == (1, 1, 1)', 'observed.segmentation_maps_unaug[0].arr.shape == (1, 1, 20)', 'observed.keypoints_unaug[0].keypoints[0].x == 1', 'observed.keypoints_unaug[0].keypoints[0].y == 2', 'observed.bounding_boxes_unaug[0].bounding_boxes[0].x1 == 1', 'observed.bounding_boxes_unaug[0].bounding_boxes[0].y1 == 2', 'observed.bounding_boxes_unaug[0].bounding_boxes[0].x2 == 3', 'observed.bounding_boxes_unaug[0].bounding_boxes[0].y2 == 4', 'observed.polygons_unaug[0].polygons[0].exterior[0, 0] == 0', 'observed.polygons_unaug[0].polygons[0].exterior[0, 1] == 0', 'observed.polygons_unaug[0].polygons[0].exterior[1, 0] == 10', 'observed.polygons_unaug[0].polygons[0].exterior[1, 1] == 0', 'observed.polygons_unaug[0].polygons[0].exterior[2, 0] == 10', 'observed.polygons_unaug[0].polygons[0].exterior[2, 1] == 10', 'observed.data[] == 123', 'observed.data[', 'observed.data[] == [1, 2, 3]']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1304,aleju,kontakt@ajung.name,2019-03-20 19:54:51+01:00,f5135420e716b08692178742361d6db678735039,https://github.com/aleju/imgaug/commit/f5135420e716b08692178742361d6db678735039,Add test for deprecated properties of Batch,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)', 'len(caught_warnings) == 2', 'in str(caught_warnings[-1].message)', 'len(caught_warnings) == 3', 'in str(caught_warnings[-1].message)', 'len(caught_warnings) == 4', 'in str(caught_warnings[-1].message)', 'len(caught_warnings) == 5', 'in str(caught_warnings[-1].message)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1305,aleju,kontakt@ajung.name,2019-03-24 09:37:19+01:00,099ef62abe061f921a3ce09a8a8e52ff3975eb9d,https://github.com/aleju/imgaug/commit/099ef62abe061f921a3ce09a8a8e52ff3975eb9d,Add setters for normalized data in Batch,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1306,aleju,kontakt@ajung.name,2019-03-24 10:32:41+01:00,cb8cfe40ff1d006417ee7576dec0b00d0d2e9954,https://github.com/aleju/imgaug/commit/cb8cfe40ff1d006417ee7576dec0b00d0d2e9954,Move keypoint classes+funcs to augmentables/kps.py,19,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,182,0,0,0,0,0,0,0,0,0,0,0,0,182,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['kp.y == 1', 'kp.x == 2', 'kp.y_int == 1', 'kp.x_int == 2', '1.1 - eps < kp.y < 1.1 + eps', '2.7 - eps < kp.x < 2.7 + eps', 'kp.y_int == 1', 'kp.x_int == 3', 'kp2.y == 1', 'kp2.x == 2', 'kp2.y == 2', 'kp2.x == 2', 'kp2.y == 1', 'kp2.x == 4', 'kp2.y == 2', 'kp2.x == 4', 'kp2.y == 2', 'kp2.x == 2', 'kp2.y == 0', 'kp2.x == 2', 'kp2.y == 1', 'kp2.x == 3', 'kp2.y == 1', 'kp2.x == 1', 'kp2.y == 2', 'kp2.x == 4', 'len(kps_manhatten) == 1', 'kps_manhatten[0].y == 4', 'kps_manhatten[0].x == 5', 'len(kps_manhatten) == 5', 'any([np.allclose([y, x], [kp_manhatten.y, kp_manhatten.x]) for kp_manhatten in kps_manhatten])', 'kps_manhatten.shape == (5, 2)', 'any([np.allclose([y, x], [kp_manhatten_y, kp_manhatten_x])', 'kp.__repr__() == kp.__str__() == ', 'kp.__repr__() == kp.__str__() == ', 'kpi.height == 10', 'kpi.width == 20', 'kpi.shape == (10, 20, 3)', 'all([kp_i.x == kp_j.x and kp_i.y == kp_j.y for kp_i, kp_j in zip(kpi.keypoints, kpi2.keypoints)])', 'kpi2.keypoints[0].x == 2', 'kpi2.keypoints[0].y == 4', 'kpi2.keypoints[1].x == 6', 'kpi2.keypoints[1].y == 8', 'kpi2.keypoints[0].x == 2', 'kpi2.keypoints[0].y == 4', 'kpi2.keypoints[1].x == 6', 'kpi2.keypoints[1].y == 8', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [int(0.5*10+0), int(0.5*10+0.5*255), int(10*0.5+0)])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask_size3] == [0, 255, 0])', 'np.all(image_kps[~kps_mask_size3] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [0, 0, 255])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [255, 255, 255])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image2 == image_kps)', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image2[kps_mask] == [0, 255, 0])', 'np.all(image2[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'got_exception', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'got_exception', 'kpi2.keypoints[0].x == kpi.keypoints[0].x', 'kpi2.keypoints[0].y == kpi.keypoints[0].y', 'kpi2.keypoints[1].x == kpi.keypoints[1].x', 'kpi2.keypoints[1].y == kpi.keypoints[1].y', 'kpi2.keypoints[0].x == kpi.keypoints[0].x + 1', 'kpi2.keypoints[0].y == kpi.keypoints[0].y', 'kpi2.keypoints[1].x == kpi.keypoints[1].x + 1', 'kpi2.keypoints[1].y == kpi.keypoints[1].y', 'kpi2.keypoints[0].x == kpi.keypoints[0].x - 1', 'kpi2.keypoints[0].y == kpi.keypoints[0].y', 'kpi2.keypoints[1].x == kpi.keypoints[1].x - 1', 'kpi2.keypoints[1].y == kpi.keypoints[1].y', 'kpi2.keypoints[0].x == kpi.keypoints[0].x', 'kpi2.keypoints[0].y == kpi.keypoints[0].y + 1', 'kpi2.keypoints[1].x == kpi.keypoints[1].x', 'kpi2.keypoints[1].y == kpi.keypoints[1].y + 1', 'kpi2.keypoints[0].x == kpi.keypoints[0].x', 'kpi2.keypoints[0].y == kpi.keypoints[0].y - 1', 'kpi2.keypoints[1].x == kpi.keypoints[1].x', 'kpi2.keypoints[1].y == kpi.keypoints[1].y - 1', 'kpi2.keypoints[0].x == kpi.keypoints[0].x + 1', 'kpi2.keypoints[0].y == kpi.keypoints[0].y + 2', 'kpi2.keypoints[1].x == kpi.keypoints[1].x + 1', 'kpi2.keypoints[1].y == kpi.keypoints[1].y + 2', 'np.allclose(observed, expected)', '1 - eps < kpi.keypoints[0].x < 1 + eps', '2 - eps < kpi.keypoints[0].y < 2 + eps', '3 - eps < kpi.keypoints[1].x < 3 + eps', '4 - eps < kpi.keypoints[1].y < 4 + eps', 'np.all(image[kps_mask] == 255)', 'np.all(image[~kps_mask] == 0)', 'np.all(image_size3[kps_mask] == 255)', 'np.all(image_size3[kps_mask_size3] >= 128)', 'np.all(image_size3[~kps_mask_size3] == 0)', 'kpi2.shape == (5, 5, 3)', 'len(kpi2.keypoints) == 2', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[1].x == 3', 'kpi2.shape == (5, 5, 3)', 'len(kpi2.keypoints) == 2', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[1].y == -2', 'kpi2.keypoints[1].x == -1', 'kpi2.shape == (5, 5, 3)', 'len(kpi2.keypoints) == 2', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[1].y == -2', 'kpi2.keypoints[1].x == -1', 'kpi2.shape == (5, 5, 3)', 'len(kpi2.keypoints) == 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1', 'in str(exc)', 'got_exception', 'distance_map.shape == (5, 5, 1)', 'np.allclose(distance_map, expected[..., np.newaxis])', 'np.allclose(distance_map_inv, expected_inv[..., np.newaxis])', 'np.allclose(np.min(distance_map, axis=2), expected)', 'np.allclose(np.max(distance_map_inv, axis=2), expected_inv)', 'len(kpi.keypoints) == 2', 'kpi.keypoints[0].x == 2', 'kpi.keypoints[0].y == 2', 'kpi.keypoints[1].x == 4', 'kpi.keypoints[1].y == 2', 'kpi.shape == (4, 5, 4)', 'len(kpi.keypoints) == 2', 'kpi.keypoints[0].x == 2', 'kpi.keypoints[0].y == 2', 'kpi.keypoints[1].x == 4', 'kpi.keypoints[1].y == 2', 'kpi.shape == (4, 5)', 'len(kpi.keypoints) == 2', 'kpi.keypoints[0].x == 2', 'kpi.keypoints[0].y == 2', 'kpi.keypoints[1].x == 1', 'kpi.keypoints[1].y == 1', 'kpi.shape == (4, 5)', 'len(kpi.keypoints) == 2', 'kpi.keypoints[0].x == 2', 'kpi.keypoints[0].y == 2', 'kpi.keypoints[1].x == 1', 'kpi.keypoints[1].y == 2', 'kpi.shape == (4, 5)', 'len(kpi.keypoints) == 1', 'kpi.keypoints[0].x == 2', 'kpi.keypoints[0].y == 2', 'kpi.shape == (4, 5)', 'in str(exc)', 'got_exception', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[0].x == 100', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[1].y == 4', 'kpi.__repr__() == kpi.__str__() == expected']",[],[],[],[],[],[],[],[],[],[],[],[],"['kp.y == 1', 'kp.x == 2', 'kp.y_int == 1', 'kp.x_int == 2', '1.1 - eps < kp.y < 1.1 + eps', '2.7 - eps < kp.x < 2.7 + eps', 'kp.y_int == 1', 'kp.x_int == 3', 'kp2.y == 1', 'kp2.x == 2', 'kp2.y == 2', 'kp2.x == 2', 'kp2.y == 1', 'kp2.x == 4', 'kp2.y == 2', 'kp2.x == 4', 'kp2.y == 2', 'kp2.x == 2', 'kp2.y == 0', 'kp2.x == 2', 'kp2.y == 1', 'kp2.x == 3', 'kp2.y == 1', 'kp2.x == 1', 'kp2.y == 2', 'kp2.x == 4', 'len(kps_manhatten) == 1', 'kps_manhatten[0].y == 4', 'kps_manhatten[0].x == 5', 'len(kps_manhatten) == 5', 'any([np.allclose([y, x], [kp_manhatten.y, kp_manhatten.x]) for kp_manhatten in kps_manhatten])', 'kps_manhatten.shape == (5, 2)', 'any([np.allclose([y, x], [kp_manhatten_y, kp_manhatten_x])', 'kp.__repr__() == kp.__str__() == ', 'kp.__repr__() == kp.__str__() == ', 'kpi.height == 10', 'kpi.width == 20', 'kpi.shape == (10, 20, 3)', 'all([kp_i.x == kp_j.x and kp_i.y == kp_j.y for kp_i, kp_j in zip(kpi.keypoints, kpi2.keypoints)])', 'kpi2.keypoints[0].x == 2', 'kpi2.keypoints[0].y == 4', 'kpi2.keypoints[1].x == 6', 'kpi2.keypoints[1].y == 8', 'kpi2.keypoints[0].x == 2', 'kpi2.keypoints[0].y == 4', 'kpi2.keypoints[1].x == 6', 'kpi2.keypoints[1].y == 8', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [int(0.5*10+0), int(0.5*10+0.5*255), int(10*0.5+0)])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask_size3] == [0, 255, 0])', 'np.all(image_kps[~kps_mask_size3] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [0, 0, 255])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [255, 255, 255])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image2 == image_kps)', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image2[kps_mask] == [0, 255, 0])', 'np.all(image2[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'got_exception', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'got_exception', 'kpi2.keypoints[0].x == kpi.keypoints[0].x', 'kpi2.keypoints[0].y == kpi.keypoints[0].y', 'kpi2.keypoints[1].x == kpi.keypoints[1].x', 'kpi2.keypoints[1].y == kpi.keypoints[1].y', 'kpi2.keypoints[0].x == kpi.keypoints[0].x + 1', 'kpi2.keypoints[0].y == kpi.keypoints[0].y', 'kpi2.keypoints[1].x == kpi.keypoints[1].x + 1', 'kpi2.keypoints[1].y == kpi.keypoints[1].y', 'kpi2.keypoints[0].x == kpi.keypoints[0].x - 1', 'kpi2.keypoints[0].y == kpi.keypoints[0].y', 'kpi2.keypoints[1].x == kpi.keypoints[1].x - 1', 'kpi2.keypoints[1].y == kpi.keypoints[1].y', 'kpi2.keypoints[0].x == kpi.keypoints[0].x', 'kpi2.keypoints[0].y == kpi.keypoints[0].y + 1', 'kpi2.keypoints[1].x == kpi.keypoints[1].x', 'kpi2.keypoints[1].y == kpi.keypoints[1].y + 1', 'kpi2.keypoints[0].x == kpi.keypoints[0].x', 'kpi2.keypoints[0].y == kpi.keypoints[0].y - 1', 'kpi2.keypoints[1].x == kpi.keypoints[1].x', 'kpi2.keypoints[1].y == kpi.keypoints[1].y - 1', 'kpi2.keypoints[0].x == kpi.keypoints[0].x + 1', 'kpi2.keypoints[0].y == kpi.keypoints[0].y + 2', 'kpi2.keypoints[1].x == kpi.keypoints[1].x + 1', 'kpi2.keypoints[1].y == kpi.keypoints[1].y + 2', 'np.allclose(observed, expected)', '1 - eps < kpi.keypoints[0].x < 1 + eps', '2 - eps < kpi.keypoints[0].y < 2 + eps', '3 - eps < kpi.keypoints[1].x < 3 + eps', '4 - eps < kpi.keypoints[1].y < 4 + eps', 'np.all(image[kps_mask] == 255)', 'np.all(image[~kps_mask] == 0)', 'np.all(image_size3[kps_mask] == 255)', 'np.all(image_size3[kps_mask_size3] >= 128)', 'np.all(image_size3[~kps_mask_size3] == 0)', 'kpi2.shape == (5, 5, 3)', 'len(kpi2.keypoints) == 2', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[1].x == 3', 'kpi2.shape == (5, 5, 3)', 'len(kpi2.keypoints) == 2', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[1].y == -2', 'kpi2.keypoints[1].x == -1', 'kpi2.shape == (5, 5, 3)', 'len(kpi2.keypoints) == 2', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[1].y == -2', 'kpi2.keypoints[1].x == -1', 'kpi2.shape == (5, 5, 3)', 'len(kpi2.keypoints) == 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1', 'in str(exc)', 'got_exception', 'distance_map.shape == (5, 5, 1)', 'np.allclose(distance_map, expected[..., np.newaxis])', 'np.allclose(distance_map_inv, expected_inv[..., np.newaxis])', 'np.allclose(np.min(distance_map, axis=2), expected)', 'np.allclose(np.max(distance_map_inv, axis=2), expected_inv)', 'len(kpi.keypoints) == 2', 'kpi.keypoints[0].x == 2', 'kpi.keypoints[0].y == 2', 'kpi.keypoints[1].x == 4', 'kpi.keypoints[1].y == 2', 'kpi.shape == (4, 5, 4)', 'len(kpi.keypoints) == 2', 'kpi.keypoints[0].x == 2', 'kpi.keypoints[0].y == 2', 'kpi.keypoints[1].x == 4', 'kpi.keypoints[1].y == 2', 'kpi.shape == (4, 5)', 'len(kpi.keypoints) == 2', 'kpi.keypoints[0].x == 2', 'kpi.keypoints[0].y == 2', 'kpi.keypoints[1].x == 1', 'kpi.keypoints[1].y == 1', 'kpi.shape == (4, 5)', 'len(kpi.keypoints) == 2', 'kpi.keypoints[0].x == 2', 'kpi.keypoints[0].y == 2', 'kpi.keypoints[1].x == 1', 'kpi.keypoints[1].y == 2', 'kpi.shape == (4, 5)', 'len(kpi.keypoints) == 1', 'kpi.keypoints[0].x == 2', 'kpi.keypoints[0].y == 2', 'kpi.shape == (4, 5)', 'in str(exc)', 'got_exception', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[0].x == 100', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[1].y == 4', 'kpi.__repr__() == kpi.__str__() == expected']",[],[],[],[],[],[],[],[],[],[],[],[]
1307,aleju,kontakt@ajung.name,2019-03-24 10:44:41+01:00,82febec2db268d6b237bcf84e517c3f0234a2cc4,https://github.com/aleju/imgaug/commit/82febec2db268d6b237bcf84e517c3f0234a2cc4,Move BB classes+funcs to augmentables/bbs.py,6,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,343,0,0,0,0,0,0,0,0,0,0,0,0,343,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['bb.y1_int == 10', 'bb.x1_int == 20', 'bb.y2_int == 30', 'bb.x2_int == 40', 'bb.width == 40 - 20', 'bb.height == 30 - 10', 'center_x - eps < bb.center_x < center_x + eps', 'center_y - eps < bb.center_y < center_y + eps', 'bb.y1_int == 10', 'bb.x1_int == 20', 'bb.y2_int == 30', 'bb.x2_int == 40', 'bb.y1_int == 10', 'bb.x1_int == 20', 'bb.y2_int == 31', 'bb.x2_int == 41', 'bb.width == 40.9 - 20.1', 'bb.height == 30.9 - 10.1', 'center_x - eps < bb.center_x < center_x + eps', 'center_y - eps < bb.center_y < center_y + eps', 'bb.area == (30-10) * (40-20)', 'bb.contains(ia.Keypoint(x=2.5, y=1.5)) is True', 'bb.contains(ia.Keypoint(x=2, y=1)) is True', 'bb.contains(ia.Keypoint(x=0, y=0)) is False', '10 - eps < bb2.y1 < 10 + eps', '20 - eps < bb2.x1 < 20 + eps', '30 - eps < bb2.y2 < 30 + eps', '40 - eps < bb2.x2 < 40 + eps', '10*2 - eps < bb2.y1 < 10*2 + eps', '20*2 - eps < bb2.x1 < 20*2 + eps', '30*2 - eps < bb2.y2 < 30*2 + eps', '40*2 - eps < bb2.x2 < 40*2 + eps', '10*0.5 - eps < bb2.y1 < 10*0.5 + eps', '20*0.5 - eps < bb2.x1 < 20*0.5 + eps', '30*0.5 - eps < bb2.y2 < 30*0.5 + eps', '40*0.5 - eps < bb2.x2 < 40*0.5 + eps', '10*1 - eps < bb2.y1 < 10*1 + eps', '20*2 - eps < bb2.x1 < 20*2 + eps', '30*1 - eps < bb2.y2 < 30*1 + eps', '40*2 - eps < bb2.x2 < 40*2 + eps', '10*2 - eps < bb2.y1 < 10*2 + eps', '20*1 - eps < bb2.x1 < 20*1 + eps', '30*2 - eps < bb2.y2 < 30*2 + eps', '40*1 - eps < bb2.x2 < 40*1 + eps', 'bb2.y1 == 10-1', 'bb2.y2 == 30+1', 'bb2.x1 == 20-1', 'bb2.x2 == 40+1', 'bb2.y1 == 10-(-1)', 'bb2.y2 == 30+(-1)', 'bb2.x1 == 20-(-1)', 'bb2.x2 == 40+(-1)', 'bb2.y1 == 10-1', 'bb2.y2 == 30+0', 'bb2.x1 == 20-0', 'bb2.x2 == 40+0', 'bb2.y1 == 10-0', 'bb2.y2 == 30+0', 'bb2.x1 == 20-0', 'bb2.x2 == 40+1', 'bb2.y1 == 10-0', 'bb2.y2 == 30+1', 'bb2.x1 == 20-0', 'bb2.x2 == 40+0', 'bb2.y1 == 10-0', 'bb2.y2 == 30+0', 'bb2.x1 == 20-1', 'bb2.x2 == 40+0', 'bb_inter.x1 == 39', 'bb_inter.x2 == 40', 'bb_inter.y1 == 10', 'bb_inter.y2 == 30', 'bb_inter is False', 'bb_union.x1 == 20', 'bb_union.x2 == 59', 'bb_union.y1 == 10', 'bb_union.y2 == 30', '1.0 - eps < iou < 1.0 + eps', '0.0 - eps < iou < 0.0 + eps', 'iou_expected - eps < iou < iou_expected + eps', 'bb.is_fully_within_image((100, 100, 3)) is True', 'bb.is_fully_within_image((20, 100, 3)) is False', 'bb.is_fully_within_image((100, 30, 3)) is False', 'bb.is_fully_within_image((1, 1, 3)) is False', 'bb.is_partly_within_image((100, 100, 3)) is True', 'bb.is_partly_within_image((20, 100, 3)) is True', 'bb.is_partly_within_image((100, 30, 3)) is True', 'bb.is_partly_within_image((1, 1, 3)) is False', 'bb.is_out_of_image((100, 100, 3), partly=True, fully=True) is False', 'bb.is_out_of_image((100, 100, 3), partly=False, fully=True) is False', 'bb.is_out_of_image((100, 100, 3), partly=True, fully=False) is False', 'bb.is_out_of_image((20, 100, 3), partly=True, fully=True) is True', 'bb.is_out_of_image((20, 100, 3), partly=False, fully=True) is False', 'bb.is_out_of_image((20, 100, 3), partly=True, fully=False) is True', 'bb.is_out_of_image((100, 30, 3), partly=True, fully=True) is True', 'bb.is_out_of_image((100, 30, 3), partly=False, fully=True) is False', 'bb.is_out_of_image((100, 30, 3), partly=True, fully=False) is True', 'bb.is_out_of_image((1, 1, 3), partly=True, fully=True) is True', 'bb.is_out_of_image((1, 1, 3), partly=False, fully=True) is True', 'bb.is_out_of_image((1, 1, 3), partly=True, fully=False) is False', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', 'bb_cut.y2 == 30', 'bb_cut.x2 == 40', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', 'bb_cut.y2 == 30', 'bb_cut.x2 == 40', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', '20 - 2*eps < bb_cut.y2 < 20', 'bb_cut.x2 == 40', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', 'bb_cut.y2 == 30', '30 - 2*eps < bb_cut.x2 < 30', 'bb_top.y1 == 10', 'bb_top.x1 == 20', 'bb_top.y2 == 30', 'bb_top.x2 == 40', 'bb_right.y1 == 10', 'bb_right.x1 == 20', 'bb_right.y2 == 30', 'bb_right.x2 == 40', 'bb_bottom.y1 == 10', 'bb_bottom.x1 == 20', 'bb_bottom.y2 == 30', 'bb_bottom.x2 == 40', 'bb_left.y1 == 10', 'bb_left.x1 == 20', 'bb_left.y2 == 30', 'bb_left.x2 == 40', 'bb_top.y1 == 10+1', 'bb_top.x1 == 20', 'bb_top.y2 == 30+1', 'bb_top.x2 == 40', 'bb_right.y1 == 10', 'bb_right.x1 == 20-1', 'bb_right.y2 == 30', 'bb_right.x2 == 40-1', 'bb_bottom.y1 == 10-1', 'bb_bottom.x1 == 20', 'bb_bottom.y2 == 30-1', 'bb_bottom.x2 == 40', 'bb_left.y1 == 10', 'bb_left.x1 == 20+1', 'bb_left.y2 == 30', 'bb_left.x2 == 40+1', 'bb_top.y1 == 10-1', 'bb_top.x1 == 20', 'bb_top.y2 == 30-1', 'bb_top.x2 == 40', 'bb_right.y1 == 10', 'bb_right.x1 == 20+1', 'bb_right.y2 == 30', 'bb_right.x2 == 40+1', 'bb_bottom.y1 == 10+1', 'bb_bottom.x1 == 20', 'bb_bottom.y2 == 30+1', 'bb_bottom.x2 == 40', 'bb_left.y1 == 10', 'bb_left.x1 == 20-1', 'bb_left.y2 == 30', 'bb_left.x2 == 40-1', 'bb_mix.y1 == 10+1-2', 'bb_mix.x1 == 20+3-4', 'bb_mix.y2 == 30+3-4', 'bb_mix.x2 == 40+1-2', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image == 0)', 'np.all(image_bb[bb_mask] == [255, 0, 0])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [128, 128, 128])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [150, 150, 150])', 'np.all(image_bb[~bb_mask] == [100, 100, 100])', 'np.sum(np.abs((image_bb - [150, 150, 150])[bb_mask])) < 0.1', 'np.sum(np.abs((image_bb - [100, 100, 100])[~bb_mask])) < 0.1', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image[bb_mask] == [255, 255, 255])', 'np.all(image[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'got_exception is False', 'got_exception is True', 'np.array_equal(image_sub, image[1:3, 1:3, :])', 'np.array_equal(image_sub, image[1:3, 1:3])', 'np.array_equal(image_sub, image[1:3, 1:3])', 'np.array_equal(image_sub, image_pad[8:11, 8:11, :])', 'np.array_equal(image_sub, image_pad[8:11, 8:11])', 'np.array_equal(image_sub, image_pad[0:4, 0:5, :])', 'np.array_equal(image_sub, image[1:1+1, 1:1+1, :])', 'np.array_equal(image_sub, image[1:1+1, 2:4, :])', 'np.array_equal(image_sub, image[1:1+1, 2:2+1, :])', 'kps[0].y == 1', 'kps[0].x == 1', 'kps[1].y == 1', 'kps[1].x == 3', 'kps[2].y == 3', 'kps[2].x == 3', 'kps[3].y == 3', 'kps[3].x == 1', 'bb2.y1 == 1', 'bb2.y2 == 3', 'bb2.x1 == 1', 'bb2.x2 == 3', 'bb2.label == ', 'bb2.y1 == 10', 'bb2.x1 == 20', 'bb2.y2 == 30', 'bb2.x2 == 40', 'bb2.label == ', 'bb2.y1 == 1', 'bb2.y2 == 3', 'bb2.x1 == 1', 'bb2.x2 == 3', 'bb2.label[0] == ', 'bb.__repr__() == ', 'bb.__str__() == ', 'bbsoi.height == 40', 'bbsoi.width == 50', 'bbsoi.height == 40', 'bbsoi.width == 50', 'not bbsoi.empty', 'bbsoi.empty', 'bbsoi_projected.bounding_boxes[0].y1 == 10', 'bbsoi_projected.bounding_boxes[0].x1 == 20', 'bbsoi_projected.bounding_boxes[0].y2 == 30', 'bbsoi_projected.bounding_boxes[0].x2 == 40', 'bbsoi_projected.bounding_boxes[1].y1 == 15', 'bbsoi_projected.bounding_boxes[1].x1 == 25', 'bbsoi_projected.bounding_boxes[1].y2 == 35', 'bbsoi_projected.bounding_boxes[1].x2 == 45', 'bbsoi_projected.bounding_boxes[0].y1 == 10*2', 'bbsoi_projected.bounding_boxes[0].x1 == 20*2', 'bbsoi_projected.bounding_boxes[0].y2 == 30*2', 'bbsoi_projected.bounding_boxes[0].x2 == 40*2', 'bbsoi_projected.bounding_boxes[1].y1 == 15*2', 'bbsoi_projected.bounding_boxes[1].x1 == 25*2', 'bbsoi_projected.bounding_boxes[1].y2 == 35*2', 'bbsoi_projected.bounding_boxes[1].x2 == 45*2', 'bbsoi_projected.bounding_boxes[0].y1 == 10*2', 'bbsoi_projected.bounding_boxes[0].x1 == 20*2', 'bbsoi_projected.bounding_boxes[0].y2 == 30*2', 'bbsoi_projected.bounding_boxes[0].x2 == 40*2', 'bbsoi_projected.bounding_boxes[1].y1 == 15*2', 'bbsoi_projected.bounding_boxes[1].x1 == 25*2', 'bbsoi_projected.bounding_boxes[1].y2 == 35*2', 'bbsoi_projected.bounding_boxes[1].x2 == 45*2', 'len(bbsoi.bounding_boxes) == 2', 'np.allclose(bbsoi.bounding_boxes[0].x1, 0.0)', 'np.allclose(bbsoi.bounding_boxes[0].y1, 0.0)', 'np.allclose(bbsoi.bounding_boxes[0].x2, 1.0)', 'np.allclose(bbsoi.bounding_boxes[0].y2, 1.0)', 'np.allclose(bbsoi.bounding_boxes[1].x1, 1.0)', 'np.allclose(bbsoi.bounding_boxes[1].y1, 2.0)', 'np.allclose(bbsoi.bounding_boxes[1].x2, 3.0)', 'np.allclose(bbsoi.bounding_boxes[1].y2, 4.0)', 'bbsoi.shape == (40, 50, 3)', 'len(bbsoi.bounding_boxes) == 2', 'np.allclose(bbsoi.bounding_boxes[0].x1, 0.0)', 'np.allclose(bbsoi.bounding_boxes[0].y1, 0.0)', 'np.allclose(bbsoi.bounding_boxes[0].x2, 1.0)', 'np.allclose(bbsoi.bounding_boxes[0].y2, 1.0)', 'np.allclose(bbsoi.bounding_boxes[1].x1, 1.0)', 'np.allclose(bbsoi.bounding_boxes[1].y1, 2.0)', 'np.allclose(bbsoi.bounding_boxes[1].x2, 3.0)', 'np.allclose(bbsoi.bounding_boxes[1].y2, 4.0)', 'bbsoi.shape == (40, 50, 3)', 'len(bbsoi.bounding_boxes) == 0', 'bbsoi.shape == (40, 50, 3)', 'np.allclose(xyxy_arr, xyxy_arr_out)', 'xyxy_arr_out.dtype == np.float32', 'np.allclose(xyxy_arr.astype(np.int32), xyxy_arr_out)', 'xyxy_arr_out.dtype == np.int32', 'xyxy_arr_out.shape == (0, 4)', 'np.all(image[10-1, 20-1, :] == [0, 0, 0])', 'np.all(image[10-1, 20-0, :] == [0, 0, 0])', 'np.all(image[10-0, 20-1, :] == [0, 0, 0])', 'np.all(image[10-0, 20-0, :] == [0, 255, 0])', 'np.all(image[10+1, 20+1, :] == [0, 0, 0])', 'np.all(image[30-1, 40-1, :] == [0, 0, 0])', 'np.all(image[30+1, 40-0, :] == [0, 0, 0])', 'np.all(image[30+0, 40+1, :] == [0, 0, 0])', 'np.all(image[30+0, 40+0, :] == [0, 255, 0])', 'np.all(image[30+1, 40+1, :] == [0, 0, 0])', 'np.all(image[15-1, 25-1, :] == [0, 0, 0])', 'np.all(image[15-1, 25-0, :] == [0, 0, 0])', 'np.all(image[15-0, 25-1, :] == [0, 0, 0])', 'np.all(image[15-0, 25-0, :] == [0, 255, 0])', 'np.all(image[15+1, 25+1, :] == [0, 0, 0])', 'np.all(image[35-1, 45-1, :] == [0, 0, 0])', 'np.all(image[35+1, 45+0, :] == [0, 0, 0])', 'np.all(image[35+0, 45+1, :] == [0, 0, 0])', 'np.all(image[35+0, 45+0, :] == [0, 255, 0])', 'np.all(image[35+1, 45+1, :] == [0, 0, 0])', 'len(bbsoi_slim.bounding_boxes) == 1', 'bbsoi_slim.bounding_boxes[0] == bb1', 'len(bbsoi_clip.bounding_boxes) == 2', 'bbsoi_clip.bounding_boxes[0].y1 == 10', 'bbsoi_clip.bounding_boxes[0].x1 == 20', 'bbsoi_clip.bounding_boxes[0].y2 == 30', 'bbsoi_clip.bounding_boxes[0].x2 == 40', 'bbsoi_clip.bounding_boxes[1].y1 == 15', 'bbsoi_clip.bounding_boxes[1].x1 == 25', 'bbsoi_clip.bounding_boxes[1].y2 == 35', '50 - 2*eps < bbsoi_clip.bounding_boxes[1].x2 < 50', 'len(bbsoi_shifted.bounding_boxes) == 2', 'bbsoi_shifted.bounding_boxes[0].y1 == 10', 'bbsoi_shifted.bounding_boxes[0].x1 == 20 - 1', 'bbsoi_shifted.bounding_boxes[0].y2 == 30', 'bbsoi_shifted.bounding_boxes[0].x2 == 40 - 1', 'bbsoi_shifted.bounding_boxes[1].y1 == 15', 'bbsoi_shifted.bounding_boxes[1].x1 == 25 - 1', 'bbsoi_shifted.bounding_boxes[1].y2 == 35', 'bbsoi_shifted.bounding_boxes[1].x2 == 51 - 1', 'len(bbsoi.bounding_boxes) == 2', 'bbsoi_copy.bounding_boxes[0].y1 == 10', 'bbsoi_copy.bounding_boxes[0].x1 == 20', 'bbsoi_copy.bounding_boxes[0].y2 == 30', 'bbsoi_copy.bounding_boxes[0].x2 == 40', 'bbsoi_copy.bounding_boxes[1].y1 == 15', 'bbsoi_copy.bounding_boxes[1].x1 == 25', 'bbsoi_copy.bounding_boxes[1].y2 == 35', 'bbsoi_copy.bounding_boxes[1].x2 == 51', 'bbsoi_copy.bounding_boxes[0].y1 == 0', 'len(bbsoi.bounding_boxes) == 2', 'bbsoi_copy.bounding_boxes[0].y1 == 10', 'bbsoi_copy.bounding_boxes[0].x1 == 20', 'bbsoi_copy.bounding_boxes[0].y2 == 30', 'bbsoi_copy.bounding_boxes[0].x2 == 40', 'bbsoi_copy.bounding_boxes[1].y1 == 15', 'bbsoi_copy.bounding_boxes[1].x1 == 25', 'bbsoi_copy.bounding_boxes[1].y2 == 35', 'bbsoi_copy.bounding_boxes[1].x2 == 51', 'bbsoi_copy.bounding_boxes[0].y1 == 10', 'bbsoi.__repr__() == bbsoi.__str__() == expected']",[],[],[],[],[],[],[],[],[],[],[],[],"['bb.y1_int == 10', 'bb.x1_int == 20', 'bb.y2_int == 30', 'bb.x2_int == 40', 'bb.width == 40 - 20', 'bb.height == 30 - 10', 'center_x - eps < bb.center_x < center_x + eps', 'center_y - eps < bb.center_y < center_y + eps', 'bb.y1_int == 10', 'bb.x1_int == 20', 'bb.y2_int == 30', 'bb.x2_int == 40', 'bb.y1_int == 10', 'bb.x1_int == 20', 'bb.y2_int == 31', 'bb.x2_int == 41', 'bb.width == 40.9 - 20.1', 'bb.height == 30.9 - 10.1', 'center_x - eps < bb.center_x < center_x + eps', 'center_y - eps < bb.center_y < center_y + eps', 'bb.area == (30-10) * (40-20)', 'bb.contains(ia.Keypoint(x=2.5, y=1.5)) is True', 'bb.contains(ia.Keypoint(x=2, y=1)) is True', 'bb.contains(ia.Keypoint(x=0, y=0)) is False', '10 - eps < bb2.y1 < 10 + eps', '20 - eps < bb2.x1 < 20 + eps', '30 - eps < bb2.y2 < 30 + eps', '40 - eps < bb2.x2 < 40 + eps', '10*2 - eps < bb2.y1 < 10*2 + eps', '20*2 - eps < bb2.x1 < 20*2 + eps', '30*2 - eps < bb2.y2 < 30*2 + eps', '40*2 - eps < bb2.x2 < 40*2 + eps', '10*0.5 - eps < bb2.y1 < 10*0.5 + eps', '20*0.5 - eps < bb2.x1 < 20*0.5 + eps', '30*0.5 - eps < bb2.y2 < 30*0.5 + eps', '40*0.5 - eps < bb2.x2 < 40*0.5 + eps', '10*1 - eps < bb2.y1 < 10*1 + eps', '20*2 - eps < bb2.x1 < 20*2 + eps', '30*1 - eps < bb2.y2 < 30*1 + eps', '40*2 - eps < bb2.x2 < 40*2 + eps', '10*2 - eps < bb2.y1 < 10*2 + eps', '20*1 - eps < bb2.x1 < 20*1 + eps', '30*2 - eps < bb2.y2 < 30*2 + eps', '40*1 - eps < bb2.x2 < 40*1 + eps', 'bb2.y1 == 10-1', 'bb2.y2 == 30+1', 'bb2.x1 == 20-1', 'bb2.x2 == 40+1', 'bb2.y1 == 10-(-1)', 'bb2.y2 == 30+(-1)', 'bb2.x1 == 20-(-1)', 'bb2.x2 == 40+(-1)', 'bb2.y1 == 10-1', 'bb2.y2 == 30+0', 'bb2.x1 == 20-0', 'bb2.x2 == 40+0', 'bb2.y1 == 10-0', 'bb2.y2 == 30+0', 'bb2.x1 == 20-0', 'bb2.x2 == 40+1', 'bb2.y1 == 10-0', 'bb2.y2 == 30+1', 'bb2.x1 == 20-0', 'bb2.x2 == 40+0', 'bb2.y1 == 10-0', 'bb2.y2 == 30+0', 'bb2.x1 == 20-1', 'bb2.x2 == 40+0', 'bb_inter.x1 == 39', 'bb_inter.x2 == 40', 'bb_inter.y1 == 10', 'bb_inter.y2 == 30', 'bb_inter is False', 'bb_union.x1 == 20', 'bb_union.x2 == 59', 'bb_union.y1 == 10', 'bb_union.y2 == 30', '1.0 - eps < iou < 1.0 + eps', '0.0 - eps < iou < 0.0 + eps', 'iou_expected - eps < iou < iou_expected + eps', 'bb.is_fully_within_image((100, 100, 3)) is True', 'bb.is_fully_within_image((20, 100, 3)) is False', 'bb.is_fully_within_image((100, 30, 3)) is False', 'bb.is_fully_within_image((1, 1, 3)) is False', 'bb.is_partly_within_image((100, 100, 3)) is True', 'bb.is_partly_within_image((20, 100, 3)) is True', 'bb.is_partly_within_image((100, 30, 3)) is True', 'bb.is_partly_within_image((1, 1, 3)) is False', 'bb.is_out_of_image((100, 100, 3), partly=True, fully=True) is False', 'bb.is_out_of_image((100, 100, 3), partly=False, fully=True) is False', 'bb.is_out_of_image((100, 100, 3), partly=True, fully=False) is False', 'bb.is_out_of_image((20, 100, 3), partly=True, fully=True) is True', 'bb.is_out_of_image((20, 100, 3), partly=False, fully=True) is False', 'bb.is_out_of_image((20, 100, 3), partly=True, fully=False) is True', 'bb.is_out_of_image((100, 30, 3), partly=True, fully=True) is True', 'bb.is_out_of_image((100, 30, 3), partly=False, fully=True) is False', 'bb.is_out_of_image((100, 30, 3), partly=True, fully=False) is True', 'bb.is_out_of_image((1, 1, 3), partly=True, fully=True) is True', 'bb.is_out_of_image((1, 1, 3), partly=False, fully=True) is True', 'bb.is_out_of_image((1, 1, 3), partly=True, fully=False) is False', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', 'bb_cut.y2 == 30', 'bb_cut.x2 == 40', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', 'bb_cut.y2 == 30', 'bb_cut.x2 == 40', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', '20 - 2*eps < bb_cut.y2 < 20', 'bb_cut.x2 == 40', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', 'bb_cut.y2 == 30', '30 - 2*eps < bb_cut.x2 < 30', 'bb_top.y1 == 10', 'bb_top.x1 == 20', 'bb_top.y2 == 30', 'bb_top.x2 == 40', 'bb_right.y1 == 10', 'bb_right.x1 == 20', 'bb_right.y2 == 30', 'bb_right.x2 == 40', 'bb_bottom.y1 == 10', 'bb_bottom.x1 == 20', 'bb_bottom.y2 == 30', 'bb_bottom.x2 == 40', 'bb_left.y1 == 10', 'bb_left.x1 == 20', 'bb_left.y2 == 30', 'bb_left.x2 == 40', 'bb_top.y1 == 10+1', 'bb_top.x1 == 20', 'bb_top.y2 == 30+1', 'bb_top.x2 == 40', 'bb_right.y1 == 10', 'bb_right.x1 == 20-1', 'bb_right.y2 == 30', 'bb_right.x2 == 40-1', 'bb_bottom.y1 == 10-1', 'bb_bottom.x1 == 20', 'bb_bottom.y2 == 30-1', 'bb_bottom.x2 == 40', 'bb_left.y1 == 10', 'bb_left.x1 == 20+1', 'bb_left.y2 == 30', 'bb_left.x2 == 40+1', 'bb_top.y1 == 10-1', 'bb_top.x1 == 20', 'bb_top.y2 == 30-1', 'bb_top.x2 == 40', 'bb_right.y1 == 10', 'bb_right.x1 == 20+1', 'bb_right.y2 == 30', 'bb_right.x2 == 40+1', 'bb_bottom.y1 == 10+1', 'bb_bottom.x1 == 20', 'bb_bottom.y2 == 30+1', 'bb_bottom.x2 == 40', 'bb_left.y1 == 10', 'bb_left.x1 == 20-1', 'bb_left.y2 == 30', 'bb_left.x2 == 40-1', 'bb_mix.y1 == 10+1-2', 'bb_mix.x1 == 20+3-4', 'bb_mix.y2 == 30+3-4', 'bb_mix.x2 == 40+1-2', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image == 0)', 'np.all(image_bb[bb_mask] == [255, 0, 0])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [128, 128, 128])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [150, 150, 150])', 'np.all(image_bb[~bb_mask] == [100, 100, 100])', 'np.sum(np.abs((image_bb - [150, 150, 150])[bb_mask])) < 0.1', 'np.sum(np.abs((image_bb - [100, 100, 100])[~bb_mask])) < 0.1', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image[bb_mask] == [255, 255, 255])', 'np.all(image[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'got_exception is False', 'got_exception is True', 'np.array_equal(image_sub, image[1:3, 1:3, :])', 'np.array_equal(image_sub, image[1:3, 1:3])', 'np.array_equal(image_sub, image[1:3, 1:3])', 'np.array_equal(image_sub, image_pad[8:11, 8:11, :])', 'np.array_equal(image_sub, image_pad[8:11, 8:11])', 'np.array_equal(image_sub, image_pad[0:4, 0:5, :])', 'np.array_equal(image_sub, image[1:1+1, 1:1+1, :])', 'np.array_equal(image_sub, image[1:1+1, 2:4, :])', 'np.array_equal(image_sub, image[1:1+1, 2:2+1, :])', 'kps[0].y == 1', 'kps[0].x == 1', 'kps[1].y == 1', 'kps[1].x == 3', 'kps[2].y == 3', 'kps[2].x == 3', 'kps[3].y == 3', 'kps[3].x == 1', 'bb2.y1 == 1', 'bb2.y2 == 3', 'bb2.x1 == 1', 'bb2.x2 == 3', 'bb2.label == ', 'bb2.y1 == 10', 'bb2.x1 == 20', 'bb2.y2 == 30', 'bb2.x2 == 40', 'bb2.label == ', 'bb2.y1 == 1', 'bb2.y2 == 3', 'bb2.x1 == 1', 'bb2.x2 == 3', 'bb2.label[0] == ', 'bb.__repr__() == ', 'bb.__str__() == ', 'bbsoi.height == 40', 'bbsoi.width == 50', 'bbsoi.height == 40', 'bbsoi.width == 50', 'not bbsoi.empty', 'bbsoi.empty', 'bbsoi_projected.bounding_boxes[0].y1 == 10', 'bbsoi_projected.bounding_boxes[0].x1 == 20', 'bbsoi_projected.bounding_boxes[0].y2 == 30', 'bbsoi_projected.bounding_boxes[0].x2 == 40', 'bbsoi_projected.bounding_boxes[1].y1 == 15', 'bbsoi_projected.bounding_boxes[1].x1 == 25', 'bbsoi_projected.bounding_boxes[1].y2 == 35', 'bbsoi_projected.bounding_boxes[1].x2 == 45', 'bbsoi_projected.bounding_boxes[0].y1 == 10*2', 'bbsoi_projected.bounding_boxes[0].x1 == 20*2', 'bbsoi_projected.bounding_boxes[0].y2 == 30*2', 'bbsoi_projected.bounding_boxes[0].x2 == 40*2', 'bbsoi_projected.bounding_boxes[1].y1 == 15*2', 'bbsoi_projected.bounding_boxes[1].x1 == 25*2', 'bbsoi_projected.bounding_boxes[1].y2 == 35*2', 'bbsoi_projected.bounding_boxes[1].x2 == 45*2', 'bbsoi_projected.bounding_boxes[0].y1 == 10*2', 'bbsoi_projected.bounding_boxes[0].x1 == 20*2', 'bbsoi_projected.bounding_boxes[0].y2 == 30*2', 'bbsoi_projected.bounding_boxes[0].x2 == 40*2', 'bbsoi_projected.bounding_boxes[1].y1 == 15*2', 'bbsoi_projected.bounding_boxes[1].x1 == 25*2', 'bbsoi_projected.bounding_boxes[1].y2 == 35*2', 'bbsoi_projected.bounding_boxes[1].x2 == 45*2', 'len(bbsoi.bounding_boxes) == 2', 'np.allclose(bbsoi.bounding_boxes[0].x1, 0.0)', 'np.allclose(bbsoi.bounding_boxes[0].y1, 0.0)', 'np.allclose(bbsoi.bounding_boxes[0].x2, 1.0)', 'np.allclose(bbsoi.bounding_boxes[0].y2, 1.0)', 'np.allclose(bbsoi.bounding_boxes[1].x1, 1.0)', 'np.allclose(bbsoi.bounding_boxes[1].y1, 2.0)', 'np.allclose(bbsoi.bounding_boxes[1].x2, 3.0)', 'np.allclose(bbsoi.bounding_boxes[1].y2, 4.0)', 'bbsoi.shape == (40, 50, 3)', 'len(bbsoi.bounding_boxes) == 2', 'np.allclose(bbsoi.bounding_boxes[0].x1, 0.0)', 'np.allclose(bbsoi.bounding_boxes[0].y1, 0.0)', 'np.allclose(bbsoi.bounding_boxes[0].x2, 1.0)', 'np.allclose(bbsoi.bounding_boxes[0].y2, 1.0)', 'np.allclose(bbsoi.bounding_boxes[1].x1, 1.0)', 'np.allclose(bbsoi.bounding_boxes[1].y1, 2.0)', 'np.allclose(bbsoi.bounding_boxes[1].x2, 3.0)', 'np.allclose(bbsoi.bounding_boxes[1].y2, 4.0)', 'bbsoi.shape == (40, 50, 3)', 'len(bbsoi.bounding_boxes) == 0', 'bbsoi.shape == (40, 50, 3)', 'np.allclose(xyxy_arr, xyxy_arr_out)', 'xyxy_arr_out.dtype == np.float32', 'np.allclose(xyxy_arr.astype(np.int32), xyxy_arr_out)', 'xyxy_arr_out.dtype == np.int32', 'xyxy_arr_out.shape == (0, 4)', 'np.all(image[10-1, 20-1, :] == [0, 0, 0])', 'np.all(image[10-1, 20-0, :] == [0, 0, 0])', 'np.all(image[10-0, 20-1, :] == [0, 0, 0])', 'np.all(image[10-0, 20-0, :] == [0, 255, 0])', 'np.all(image[10+1, 20+1, :] == [0, 0, 0])', 'np.all(image[30-1, 40-1, :] == [0, 0, 0])', 'np.all(image[30+1, 40-0, :] == [0, 0, 0])', 'np.all(image[30+0, 40+1, :] == [0, 0, 0])', 'np.all(image[30+0, 40+0, :] == [0, 255, 0])', 'np.all(image[30+1, 40+1, :] == [0, 0, 0])', 'np.all(image[15-1, 25-1, :] == [0, 0, 0])', 'np.all(image[15-1, 25-0, :] == [0, 0, 0])', 'np.all(image[15-0, 25-1, :] == [0, 0, 0])', 'np.all(image[15-0, 25-0, :] == [0, 255, 0])', 'np.all(image[15+1, 25+1, :] == [0, 0, 0])', 'np.all(image[35-1, 45-1, :] == [0, 0, 0])', 'np.all(image[35+1, 45+0, :] == [0, 0, 0])', 'np.all(image[35+0, 45+1, :] == [0, 0, 0])', 'np.all(image[35+0, 45+0, :] == [0, 255, 0])', 'np.all(image[35+1, 45+1, :] == [0, 0, 0])', 'len(bbsoi_slim.bounding_boxes) == 1', 'bbsoi_slim.bounding_boxes[0] == bb1', 'len(bbsoi_clip.bounding_boxes) == 2', 'bbsoi_clip.bounding_boxes[0].y1 == 10', 'bbsoi_clip.bounding_boxes[0].x1 == 20', 'bbsoi_clip.bounding_boxes[0].y2 == 30', 'bbsoi_clip.bounding_boxes[0].x2 == 40', 'bbsoi_clip.bounding_boxes[1].y1 == 15', 'bbsoi_clip.bounding_boxes[1].x1 == 25', 'bbsoi_clip.bounding_boxes[1].y2 == 35', '50 - 2*eps < bbsoi_clip.bounding_boxes[1].x2 < 50', 'len(bbsoi_shifted.bounding_boxes) == 2', 'bbsoi_shifted.bounding_boxes[0].y1 == 10', 'bbsoi_shifted.bounding_boxes[0].x1 == 20 - 1', 'bbsoi_shifted.bounding_boxes[0].y2 == 30', 'bbsoi_shifted.bounding_boxes[0].x2 == 40 - 1', 'bbsoi_shifted.bounding_boxes[1].y1 == 15', 'bbsoi_shifted.bounding_boxes[1].x1 == 25 - 1', 'bbsoi_shifted.bounding_boxes[1].y2 == 35', 'bbsoi_shifted.bounding_boxes[1].x2 == 51 - 1', 'len(bbsoi.bounding_boxes) == 2', 'bbsoi_copy.bounding_boxes[0].y1 == 10', 'bbsoi_copy.bounding_boxes[0].x1 == 20', 'bbsoi_copy.bounding_boxes[0].y2 == 30', 'bbsoi_copy.bounding_boxes[0].x2 == 40', 'bbsoi_copy.bounding_boxes[1].y1 == 15', 'bbsoi_copy.bounding_boxes[1].x1 == 25', 'bbsoi_copy.bounding_boxes[1].y2 == 35', 'bbsoi_copy.bounding_boxes[1].x2 == 51', 'bbsoi_copy.bounding_boxes[0].y1 == 0', 'len(bbsoi.bounding_boxes) == 2', 'bbsoi_copy.bounding_boxes[0].y1 == 10', 'bbsoi_copy.bounding_boxes[0].x1 == 20', 'bbsoi_copy.bounding_boxes[0].y2 == 30', 'bbsoi_copy.bounding_boxes[0].x2 == 40', 'bbsoi_copy.bounding_boxes[1].y1 == 15', 'bbsoi_copy.bounding_boxes[1].x1 == 25', 'bbsoi_copy.bounding_boxes[1].y2 == 35', 'bbsoi_copy.bounding_boxes[1].x2 == 51', 'bbsoi_copy.bounding_boxes[0].y1 == 10', 'bbsoi.__repr__() == bbsoi.__str__() == expected']",[],[],[],[],[],[],[],[],[],[],[],[]
1308,aleju,kontakt@ajung.name,2019-03-24 11:01:21+01:00,3a7cb068e0b17d20747e0d84b1dedd535898255d,https://github.com/aleju/imgaug/commit/3a7cb068e0b17d20747e0d84b1dedd535898255d,Move poly classes+funcs to augmentables/polys.py,6,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],2,3,2,0,0,0,0,0,0,1,3,2,3,2,0,0,0,0,0,0,0,0,522,0,0,0,0,0,0,0,0,0,0,0,0,522,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestPolygonsOnImage(unittest.TestCase):', 'class Test_ConcavePolygonRecoverer(unittest.TestCase):']","[('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):')]","['def setUp(self):', 'def setUp(self):']",[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']","['class TestPolygonsOnImage(unittest.TestCase):', 'class Test_ConcavePolygonRecoverer(unittest.TestCase):']","[('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):')]","['def setUp(self):', 'def setUp(self):']",[],[],[],[],[],[],[],[],"['poly.exterior.dtype.type == np.float32', 'np.allclose(', 'poly.exterior.dtype.type == np.float32', 'np.allclose(', 'poly.exterior.dtype.type == np.float32', 'np.allclose(', 'poly.exterior.dtype.type == np.float32', 'np.allclose(', 'poly.exterior.dtype.type == np.float32', 'np.allclose(', 'poly.exterior.dtype.type == np.float32', 'poly.exterior.shape == (0, 2)', 'poly.exterior.dtype.type == np.float32', 'poly.exterior.shape == (0, 2)', 'got_exception', 'poly.label is None', 'poly.label == ', 'poly.xx.dtype.type == np.float32', 'np.allclose(poly.xx, np.float32([0.0, 1.0, 1.5, 4.1, 2.9]))', 'poly.xx.dtype.type == np.float32', 'poly.xx.shape == (0,)', 'poly.yy.dtype.type == np.float32', 'np.allclose(poly.yy, np.float32([0.0, 1.0, 1.5, 4.1, 2.9]))', 'poly.yy.dtype.type == np.float32', 'poly.yy.shape == (0,)', 'poly.xx_int.dtype.type == np.int32', 'np.allclose(poly.xx_int, np.int32([0, 1, 2, 4, 3]))', 'poly.xx_int.dtype.type == np.int32', 'poly.xx_int.shape == (0,)', 'poly.yy_int.dtype.type == np.int32', 'np.allclose(poly.yy_int, np.int32([0, 1, 2, 4, 3]))', 'poly.yy_int.dtype.type == np.int32', 'poly.yy_int.shape == (0,)', 'poly.is_valid', 'not poly.is_valid', 'not poly.is_valid', 'not poly.is_valid', 'not poly.is_valid', 'poly.is_valid', '1.0 - 1e-8 < poly.area < 1.0 + 1e-8', '2.0 - 1e-8 < poly.area < 2.0 + 1e-8', '1/2 - 1e-8 < poly.area < 1/2 + 1e-8', 'in str(exc)', 'got_exception', 'np.allclose(poly.height, 1.0, atol=1e-8, rtol=0)', 'np.allclose(poly.height, 2.0, atol=1e-8, rtol=0)', 'np.allclose(poly.height, 1.0, atol=1e-8, rtol=0)', 'np.allclose(poly.height, 1.0, atol=1e-8, rtol=0)', 'np.allclose(poly.height, 0.0, atol=1e-8, rtol=0)', 'np.allclose(poly.width, 1.0, atol=1e-8, rtol=0)', 'np.allclose(poly.width, 2.0, atol=1e-8, rtol=0)', 'np.allclose(poly.width, 1.0, atol=1e-8, rtol=0)', 'np.allclose(poly.width, 1.0, atol=1e-8, rtol=0)', 'np.allclose(poly.width, 0.0, atol=1e-8, rtol=0)', 'poly_proj.exterior.dtype.type == np.float32', 'poly_proj.exterior.shape == (4, 2)', 'np.allclose(', 'poly_proj.exterior.dtype.type == np.float32', 'poly_proj.exterior.shape == (4, 2)', 'np.allclose(', 'poly_proj.exterior.dtype.type == np.float32', 'poly_proj.exterior.shape == (4, 2)', 'np.allclose(', 'poly_proj.exterior.dtype.type == np.float32', 'poly_proj.exterior.shape == (0, 2)', 'closest_idx == 0', 'closest_idx == 1', 'closest_idx == 1', 'closest_idx == 0', 'closest_idx == 0', 'np.allclose(distance, 0.0)', 'closest_idx == 0', 'np.allclose(distance, np.sqrt((0.1**2) + (0.15**2)))', 'closest_idx == 1', 'np.allclose(distance, np.sqrt(((1.0-0.9)**2) + (0.15**2)))', 'np.array_equal(mask, np.array([True, True, True, True], dtype=bool))', 'np.array_equal(mask, np.array([True, False, False, False], dtype=bool))', 'np.array_equal(mask, np.array([True, False, False, False], dtype=bool))', 'np.array_equal(mask, np.array([True, False, False, False], dtype=bool))', 'poly.is_fully_within_image((1, 1, 3))', 'poly.is_fully_within_image((1, 1))', 'poly.is_fully_within_image(np.zeros((1, 1, 3), dtype=np.uint8))', 'not poly.is_fully_within_image((1, 1, 3))', 'not poly.is_fully_within_image((1, 1))', 'not poly.is_fully_within_image(np.zeros((1, 1, 3), dtype=np.uint8))', 'not poly.is_fully_within_image((1, 1, 3))', 'poly.is_partly_within_image((1, 1, 3))', 'poly.is_partly_within_image((1, 1))', 'poly.is_partly_within_image(np.zeros((1, 1, 3), dtype=np.uint8))', 'poly.is_partly_within_image((1, 1, 3))', 'poly.is_partly_within_image((1, 1))', 'poly.is_partly_within_image(np.zeros((1, 1, 3), dtype=np.uint8))', 'not poly.is_partly_within_image((1, 1, 3))', 'not poly.is_partly_within_image((1, 1))', 'not poly.is_partly_within_image(np.zeros((1, 1, 3), dtype=np.uint8))', 'not poly.is_out_of_image(shape, partly=False, fully=False)', 'not poly.is_out_of_image(shape, partly=True, fully=False)', 'not poly.is_out_of_image(shape, partly=False, fully=True)', 'not poly.is_out_of_image(shape, partly=True, fully=True)', 'not poly.is_out_of_image(shape, partly=False, fully=False)', 'poly.is_out_of_image(shape, partly=True, fully=False)', 'not poly.is_out_of_image(shape, partly=False, fully=True)', 'poly.is_out_of_image(shape, partly=True, fully=True)', 'not poly.is_out_of_image(shape, partly=False, fully=False)', 'not poly.is_out_of_image(shape, partly=True, fully=False)', 'poly.is_out_of_image(shape, partly=False, fully=True)', 'poly.is_out_of_image(shape, partly=True, fully=True)', 'in str(exc)', 'got_exception', 'all([', 'isinstance(multipoly_clipped, ia.MultiPolygon)', 'len(multipoly_clipped.geoms) == 1', 'multipoly_clipped.geoms[0].exterior_almost_equals(poly.exterior)', 'multipoly_clipped.geoms[0].label is None', 'isinstance(multipoly_clipped, ia.MultiPolygon)', 'len(multipoly_clipped.geoms) == 1', 'multipoly_clipped.geoms[0].exterior_almost_equals(np.float32([', 'multipoly_clipped.geoms[0].label == ', 'isinstance(multipoly_clipped, ia.MultiPolygon)', 'len(multipoly_clipped.geoms) == 2', 'multipoly_clipped.geoms[0].exterior_almost_equals(np.float32([', 'multipoly_clipped.geoms[0].label == ', 'multipoly_clipped.geoms[1].exterior_almost_equals(np.float32([', 'multipoly_clipped.geoms[0].label == ', 'isinstance(multipoly_clipped, ia.MultiPolygon)', 'len(multipoly_clipped.geoms) == 0', 'np.allclose(poly.exterior, np.float32([', 'np.allclose(poly_shifted.exterior, np.float32([', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))  # draw did not change original image (copy=True)', 'np.all(image_poly[2:9, 2:3, c_idx] == np.zeros((7, 1), dtype=np.uint8) + value)  # left boundary', 'np.all(image_poly[2:9, 8:9, c_idx] == np.zeros((7, 1), dtype=np.uint8) + value)  # right boundary', 'np.all(image_poly[2:3, 2:9, c_idx] == np.zeros((1, 7), dtype=np.uint8) + value)  # top boundary', 'np.all(image_poly[8:9, 2:9, c_idx] == np.zeros((1, 7), dtype=np.uint8) + value)  # bottom boundary', 'np.all(image_poly[3:8, 3:8, :] == expected)', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))  # draw did not change original image (copy=True)', 'np.all(image_poly[2:9, 2:3, c_idx] == np.zeros((7, 1), dtype=np.uint8) + value)  # left boundary', 'np.all(image_poly[2:9, 8:9, c_idx] == np.zeros((7, 1), dtype=np.uint8) + value)  # right boundary', 'np.all(image_poly[2:3, 2:9, c_idx] == np.zeros((1, 7), dtype=np.uint8) + value)  # top boundary', 'np.all(image_poly[8:9, 2:9, c_idx] == np.zeros((1, 7), dtype=np.uint8) + value)  # bottom boundary', 'np.all(image_poly[3:8, 3:8, :] == expected)', 'image_poly.dtype.type == np.float32', 'image_poly.shape == (10, 10, 3)', 'np.allclose(image_poly[2:9, 2:3, c_idx], np.zeros((7, 1), dtype=np.float32) + value)  # left boundary', 'np.allclose(image_poly[2:9, 8:9, c_idx], np.zeros((7, 1), dtype=np.float32) + value)  # right boundary', 'np.allclose(image_poly[2:3, 2:9, c_idx], np.zeros((1, 7), dtype=np.float32) + value)  # top boundary', 'np.allclose(image_poly[8:9, 2:9, c_idx], np.zeros((1, 7), dtype=np.float32) + value)  # bottom boundary', 'np.allclose(image_poly[3:8, 3:8, :], expected)', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))  # draw did not change original image (copy=True)', 'np.all(image_poly[2+5:, 2:3, c_idx] == np.zeros((3, 1), dtype=np.uint8) + value)  # left boundary', 'np.all(image_poly[2+5:, 8:9, c_idx] == np.zeros((3, 1), dtype=np.uint8) + value)  # right boundary', 'np.all(image_poly[2+5:3+5, 2:9, c_idx] == np.zeros((1, 7), dtype=np.uint8) + value)  # top boundary', 'np.all(image_poly[3+5:, 3:8, :] == expected)', 'in str(exc)', 'not got_exception  # only polygons fully outside of the image plane lead to exceptions', 'np.array_equal(image_poly, image)', 'in str(exc)', 'got_exception', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))  # draw did not change original image (copy=True)', 'np.all(image_poly[2:9, 2:3, c_idx] == np.zeros((7, 1), dtype=np.uint8) + value)  # left boundary', 'np.all(image_poly[3:8, 3:8, :] == image[3:8, 3:8, :])', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))  # draw did not change original image (copy=True)', 'np.all(image_poly[2:8, 2:8, :] == expected)', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.all(', 'np.all(image_poly[3:8, 3:8, :] == expected.astype(np.uint8))', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.all(', 'np.all(image_poly[3:8, 3:8, :] == expected.astype(np.uint8))', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.all(image_cp == image_poly)', 'not np.all(image_cp == image)', 'np.all(image_poly[2:9, 2:3, c_idx] == np.zeros((6, 1, 3), dtype=np.uint8) + value)  # left boundary', 'np.all(image_cp[2:9, 2:3, c_idx] == np.zeros((6, 1, 3), dtype=np.uint8) + value)  # left boundary', 'np.all(image_poly[3:8, 3:8, :] == expected)', 'np.all(image_cp[3:8, 3:8, :] == expected)', 'np.array_equal(subimage, image[0:10, 0:10, :])', 'np.array_equal(subimage, image[1:9, 1:9, :])', 'np.array_equal(subimage, expected)', 'np.array_equal(subimage, expected)', 'np.array_equal(subimage, expected)', 'np.array_equal(subimage, image[0:10, 0:10, :])', 'np.array_equal(subimage, image[0:9, 0:9, :])', 'np.array_equal(subimage, image[1:9, 1:9, :])', 'in str(exc)', 'got_exception', 'np.allclose(poly.exterior, poly_reordered.exterior)', 'np.allclose(poly.exterior, np.float32([[0, 0], [1, 0], [1, 1]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [1, 1], [0, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 1], [0, 0], [1, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [1, 1], [0, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [1, 1], [0, 0]]))', 'in str(exc)', 'got_exception', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [0, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[0, 0]]))', 'in str(exc)', 'got_exception', 'np.allclose(poly.exterior, poly_reordered.exterior)', 'np.allclose(poly.exterior, np.float32([[0, 0], [1, 0], [1, 1]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [1, 1], [0, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 1], [0, 0], [1, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [0, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[0, 0]]))', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'np.allclose(ls.coords, np.float32([[0, 0], [1, 0], [1, 1]]))', 'np.allclose(ls.coords, np.float32([[0, 0], [1, 0]]))', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'np.allclose(ls.coords, np.float32([[0, 0], [1, 0], [1, 1], [0, 0]]))', 'np.allclose(ls.coords, np.float32([[0, 0], [0.5, 0], [1, 0], [1, 0.5], [1, 1], [0.5, 0.5]]))', 'np.allclose(ls.coords, np.float32([', 'np.allclose(ls.coords, np.float32([[0, 0], [0.5, 0], [1, 0], [1, 0.5], [1, 1], [0.5, 0.5], [0, 0]]))', 'x_exp - 1e-8 < x_obs < x_exp + 1e-8', 'y_exp - 1e-8 < y_obs < y_exp + 1e-8', '0 - 1e-8 < bb.x1 < 0 + 1e-8', '0 - 1e-8 < bb.y1 < 0 + 1e-8', '1 - 1e-8 < bb.x2 < 1 + 1e-8', '1 - 1e-8 < bb.y2 < 1 + 1e-8', '0 - 1e-8 < bb.x1 < 0 + 1e-8', '0 - 1e-8 < bb.y1 < 0 + 1e-8', '1 - 1e-8 < bb.x2 < 1 + 1e-8', '1 - 1e-8 < bb.y2 < 1 + 1e-8', '0.5 - 1e-8 < bb.x1 < 0.5 + 1e-8', '0.1 - 1e-8 < bb.y1 < 0.1 + 1e-8', '2.0 - 1e-8 < bb.x2 < 2.0 + 1e-8', '1.0 - 1e-8 < bb.y2 < 1.0 + 1e-8', 'x_exp - 1e-8 < x_obs < x_exp + 1e-8', 'y_exp - 1e-8 < y_obs < y_exp + 1e-8', 'len(poly.exterior) == 0', 'poly.exterior.dtype.type == poly_cp.exterior.dtype.type', 'poly.exterior.shape == poly_cp.exterior.shape', 'np.allclose(poly.exterior, poly_cp.exterior)', 'poly.label == poly_cp.label', 'poly.exterior.dtype.type == poly_cp.exterior.dtype.type', 'poly.exterior.shape == poly_cp.exterior.shape', 'np.allclose(poly.exterior, poly_cp.exterior)', 'poly.label == poly_cp.label', 'poly.exterior.dtype.type == poly_cp.exterior.dtype.type', 'poly.exterior.shape == poly_cp.exterior.shape', 'not np.allclose(poly.exterior, poly_cp.exterior)', 'not poly.label == poly_cp.label', 's ==  \\', 's ==  \\', 's ==  \\', 's == ', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-3)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-9)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-9)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-9)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-4, interpolate=0)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-4, interpolate=1)', 'poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals()', 'np.allclose(', 'np.allclose(', 'len(inter) == 0', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'len(inter) == 0', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'len(inter) == 0', 'np.allclose(', 'len(poly_oi.polygons) == 1', 'np.allclose(', 'poly_oi.shape == (10, 10, 3)', 'len(poly_oi.polygons) == 3', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'poly_oi.shape == (10, 10, 3)', 'len(poly_oi.polygons) == 0', 'len(poly_oi.polygons) == 1', 'np.allclose(', 'poly_oi.shape == (10, 10, 3)', 'poly_oi.shape == (10, 11)', 'poly_oi.empty is False', 'poly_oi.empty is True', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'poly_oi_proj.shape == (1, 1, 3)', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'poly_oi_proj.shape == (1, 1, 3)', 'np.allclose(', 'poly_oi_proj.shape == (10, 200, 3)', 'np.sum(image) == 0', 'np.sum(image_drawn) == 0', 'np.sum(image) == 0', 'np.sum(image_drawn) > 0', 'np.sum(image_expected) > 0', 'np.allclose(image_drawn, image_expected)', 'len(poly_oi_rm.polygons) == 0', 'poly_oi_rm.shape == (10, 11, 3)', 'len(poly_oi_rm.polygons) == 1', 'np.allclose(poly_oi_rm.polygons[0].exterior,', 'poly_oi_rm.shape == (10, 11, 3)', 'len(poly_oi.polygons) == 2', 'len(poly_oi_rm.polygons) == 2', 'np.allclose(poly_oi_rm.polygons[0].exterior,', 'np.allclose(poly_oi_rm.polygons[1].exterior,', 'poly_oi_rm.shape == (10, 10, 3)', 'len(poly_oi.polygons) == 2', 'len(poly_oi_rm.polygons) == 1', 'np.allclose(poly_oi_rm.polygons[0].exterior,', 'poly_oi_rm.shape == (10, 10, 3)', 'len(poly_oi.polygons) == 2', 'len(poly_oi_rm.polygons) == 1', 'np.allclose(poly_oi_rm.polygons[0].exterior,', 'poly_oi_rm.shape == (10, 10, 3)', 'len(poly_oi.polygons) == 2', 'len(poly_oi_rm.polygons) == 0', 'poly_oi_rm.shape == (10, 10, 3)', 'len(poly_oi_clip.polygons) == 0', 'poly_oi_clip.shape == (10, 11, 3)', 'len(poly_oi_clip.polygons) == 1', '_any_point_close(poly_oi_clip.polygons[0].exterior,', 'poly_oi_clip.shape == (10, 11, 3)', 'len(poly_oi_clip.polygons) == 1', '_any_point_close(poly_oi_clip.polygons[0].exterior,', 'poly_oi_clip.shape == (10, 11, 3)', 'len(poly_oi_clip.polygons) == 0', 'poly_oi_clip.shape == (10, 11, 3)', 'len(poly_oi_clip.polygons) == 2', '_any_point_close(poly_oi_clip.polygons[0].exterior,', '_any_point_close(poly_oi_clip.polygons[1].exterior,', 'poly_oi_clip.shape == (10, 11, 3)', 'len(poly_oi_shifted.polygons) == 0', 'poly_oi_shifted.shape == (10, 11, 3)', 'len(poly_oi_shifted.polygons) == 3', 'np.allclose(poly_oi_shifted.polygons[0].exterior,', 'np.allclose(poly_oi_shifted.polygons[1].exterior,', 'np.allclose(poly_oi_shifted.polygons[2].exterior,', 'poly_oi_shifted.shape == (10, 11, 3)', 'len(poly_oi_copy.polygons) == 2', 'np.allclose(poly_oi_copy.polygons[0].exterior,', 'np.allclose(poly_oi_copy.polygons[1].exterior,', 'np.allclose(poly_oi.polygons[0].exterior,', 'np.allclose(poly_oi_copy.polygons[0].exterior,', 'poly_oi.shape == (10, 11, 3)', 'poly_oi_copy.shape == (20, 30, 3)', 'len(poly_oi_copy.polygons) == 2', 'np.allclose(poly_oi_copy.polygons[0].exterior,', 'np.allclose(poly_oi_copy.polygons[1].exterior,', 'np.allclose(poly_oi.polygons[0].exterior,', 'np.allclose(poly_oi_copy.polygons[0].exterior,', 'np.allclose(poly_oi.polygons[1].exterior,', 'np.allclose(poly_oi_copy.polygons[1].exterior,', 'poly_oi.shape == (10, 11, 3)', 'poly_oi_copy.shape == (20, 30, 3)', 'poly_oi.__repr__() == ', 'poly_oi.__repr__() == (', 'poly_oi.__repr__() == ', 'poly_oi.__repr__() == (', 'len(observed) == len(expected)', 'len(ps_obs) == len(ps_exp),  % (i,)', 'len(p_obs) == 2', 'len(p_exp) == 2', 'np.allclose(p_obs, p_exp, atol=atol, rtol=rtol),  % (i,)', 'poly_concave.is_valid', 'all(found)', 'poly_concave.is_valid', 'all(found)', 'poly_concave.is_valid', 'all(found)', 'poly_concave.is_valid', 'all(found)', 'poly_concave.is_valid', 'bb.contains(ia.Keypoint(x=point[0], y=point[1]))', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(points, points_jittered, rtol=0, atol=1e-4)', 'np.allclose(points, points_jittered, rtol=0, atol=1e-4)', 'np.allclose(points, points_jittered, rtol=0, atol=1e-4)', 'np.allclose(', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[2])) >= 1e-4', 'np.allclose(', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[3])) >= 1e-4', 'np.allclose(', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[4])) >= 1e-4', 'np.allclose(', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[2])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[4])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[6])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[7])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[8])) >= 1e-4', 'np.allclose(', 'np.linalg.norm(np.float32([0, 0]) - np.float32(points_jittered[2])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[3])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[5])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[7])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[8])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[9])) >= 1e-4', 'np.allclose(circ, 4)', 'np.allclose(circ, 4)', 'np.allclose(circ, 4)', 'np.allclose(circ, 6)', 'len(observed) == len(expected),  % (len(observed), len(expected))', 'max_count == len(expected),  % (max_count, len(expected))', 'list(points_fit) == list(sm.xrange(len(points)))', 'ia.Polygon([points[idx] for idx in points_fit]).is_valid', 'poly_observed.is_valid', 'len(points_fit) >= len(points) - 2  # TODO add IoU check here', 'poly_observed.is_valid', 'np.allclose(points_fixed, points, atol=0, rtol=0)', 'not np.allclose(points_fixed, points, atol=0, rtol=0)', 'not cpr._is_polygon_line(points_fixed)', 'np.allclose(points_fixed, points, rtol=0, atol=1e-2)', 'not np.allclose(points_fixed, points, atol=0, rtol=0)', 'not cpr._is_polygon_line(points_fixed)', 'np.allclose(points_fixed, points, rtol=0, atol=1e-2)', 'not np.allclose(points_fixed, points, atol=0, rtol=0)', 'not cpr._is_polygon_line(points_fixed)', 'np.allclose(points_fixed, points, rtol=0, atol=1e-2)', 'not _ConcavePolygonRecoverer._is_polygon_line(points)', 'not _ConcavePolygonRecoverer._is_polygon_line(points)', 'not _ConcavePolygonRecoverer._is_polygon_line(points)', 'not _ConcavePolygonRecoverer._is_polygon_line(points)', '_ConcavePolygonRecoverer._is_polygon_line(points)', '_ConcavePolygonRecoverer._is_polygon_line(points)', '_ConcavePolygonRecoverer._is_polygon_line(points)', '_ConcavePolygonRecoverer._is_polygon_line(points)', '_ConcavePolygonRecoverer._is_polygon_line(points)', 'not _ConcavePolygonRecoverer._is_polygon_line(points)', 'points_inter == [[], [], []]', 'points_inter == [[], [], [], []]', 'points_inter == [[], [], [], []]', 'points_inter == [[], [], [], [], [], [], [], []]', 'points_inserted == points', 'points_inserted == [(0, 0), (0.5, 0), (1, 0), (2, 0)]', 'points_inserted == [(0, 0), (0.5, 0), (0.75, 0), (1, 0), (2, 0)]', 'points_inserted == [(0, 0), (0.5, 0), (1, 0), (1.5, 0), (2, 0)]', 'points_inserted == [(0, 0), (0.5, 0), (1, 0), (1.5, 0), (2, 0),']",[],[],[],[],[],[],[],[],[],[],[],[],"['poly.exterior.dtype.type == np.float32', 'np.allclose(', 'poly.exterior.dtype.type == np.float32', 'np.allclose(', 'poly.exterior.dtype.type == np.float32', 'np.allclose(', 'poly.exterior.dtype.type == np.float32', 'np.allclose(', 'poly.exterior.dtype.type == np.float32', 'np.allclose(', 'poly.exterior.dtype.type == np.float32', 'poly.exterior.shape == (0, 2)', 'poly.exterior.dtype.type == np.float32', 'poly.exterior.shape == (0, 2)', 'got_exception', 'poly.label is None', 'poly.label == ', 'poly.xx.dtype.type == np.float32', 'np.allclose(poly.xx, np.float32([0.0, 1.0, 1.5, 4.1, 2.9]))', 'poly.xx.dtype.type == np.float32', 'poly.xx.shape == (0,)', 'poly.yy.dtype.type == np.float32', 'np.allclose(poly.yy, np.float32([0.0, 1.0, 1.5, 4.1, 2.9]))', 'poly.yy.dtype.type == np.float32', 'poly.yy.shape == (0,)', 'poly.xx_int.dtype.type == np.int32', 'np.allclose(poly.xx_int, np.int32([0, 1, 2, 4, 3]))', 'poly.xx_int.dtype.type == np.int32', 'poly.xx_int.shape == (0,)', 'poly.yy_int.dtype.type == np.int32', 'np.allclose(poly.yy_int, np.int32([0, 1, 2, 4, 3]))', 'poly.yy_int.dtype.type == np.int32', 'poly.yy_int.shape == (0,)', 'poly.is_valid', 'not poly.is_valid', 'not poly.is_valid', 'not poly.is_valid', 'not poly.is_valid', 'poly.is_valid', '1.0 - 1e-8 < poly.area < 1.0 + 1e-8', '2.0 - 1e-8 < poly.area < 2.0 + 1e-8', '1/2 - 1e-8 < poly.area < 1/2 + 1e-8', 'in str(exc)', 'got_exception', 'np.allclose(poly.height, 1.0, atol=1e-8, rtol=0)', 'np.allclose(poly.height, 2.0, atol=1e-8, rtol=0)', 'np.allclose(poly.height, 1.0, atol=1e-8, rtol=0)', 'np.allclose(poly.height, 1.0, atol=1e-8, rtol=0)', 'np.allclose(poly.height, 0.0, atol=1e-8, rtol=0)', 'np.allclose(poly.width, 1.0, atol=1e-8, rtol=0)', 'np.allclose(poly.width, 2.0, atol=1e-8, rtol=0)', 'np.allclose(poly.width, 1.0, atol=1e-8, rtol=0)', 'np.allclose(poly.width, 1.0, atol=1e-8, rtol=0)', 'np.allclose(poly.width, 0.0, atol=1e-8, rtol=0)', 'poly_proj.exterior.dtype.type == np.float32', 'poly_proj.exterior.shape == (4, 2)', 'np.allclose(', 'poly_proj.exterior.dtype.type == np.float32', 'poly_proj.exterior.shape == (4, 2)', 'np.allclose(', 'poly_proj.exterior.dtype.type == np.float32', 'poly_proj.exterior.shape == (4, 2)', 'np.allclose(', 'poly_proj.exterior.dtype.type == np.float32', 'poly_proj.exterior.shape == (0, 2)', 'closest_idx == 0', 'closest_idx == 1', 'closest_idx == 1', 'closest_idx == 0', 'closest_idx == 0', 'np.allclose(distance, 0.0)', 'closest_idx == 0', 'np.allclose(distance, np.sqrt((0.1**2) + (0.15**2)))', 'closest_idx == 1', 'np.allclose(distance, np.sqrt(((1.0-0.9)**2) + (0.15**2)))', 'np.array_equal(mask, np.array([True, True, True, True], dtype=bool))', 'np.array_equal(mask, np.array([True, False, False, False], dtype=bool))', 'np.array_equal(mask, np.array([True, False, False, False], dtype=bool))', 'np.array_equal(mask, np.array([True, False, False, False], dtype=bool))', 'poly.is_fully_within_image((1, 1, 3))', 'poly.is_fully_within_image((1, 1))', 'poly.is_fully_within_image(np.zeros((1, 1, 3), dtype=np.uint8))', 'not poly.is_fully_within_image((1, 1, 3))', 'not poly.is_fully_within_image((1, 1))', 'not poly.is_fully_within_image(np.zeros((1, 1, 3), dtype=np.uint8))', 'not poly.is_fully_within_image((1, 1, 3))', 'poly.is_partly_within_image((1, 1, 3))', 'poly.is_partly_within_image((1, 1))', 'poly.is_partly_within_image(np.zeros((1, 1, 3), dtype=np.uint8))', 'poly.is_partly_within_image((1, 1, 3))', 'poly.is_partly_within_image((1, 1))', 'poly.is_partly_within_image(np.zeros((1, 1, 3), dtype=np.uint8))', 'not poly.is_partly_within_image((1, 1, 3))', 'not poly.is_partly_within_image((1, 1))', 'not poly.is_partly_within_image(np.zeros((1, 1, 3), dtype=np.uint8))', 'not poly.is_out_of_image(shape, partly=False, fully=False)', 'not poly.is_out_of_image(shape, partly=True, fully=False)', 'not poly.is_out_of_image(shape, partly=False, fully=True)', 'not poly.is_out_of_image(shape, partly=True, fully=True)', 'not poly.is_out_of_image(shape, partly=False, fully=False)', 'poly.is_out_of_image(shape, partly=True, fully=False)', 'not poly.is_out_of_image(shape, partly=False, fully=True)', 'poly.is_out_of_image(shape, partly=True, fully=True)', 'not poly.is_out_of_image(shape, partly=False, fully=False)', 'not poly.is_out_of_image(shape, partly=True, fully=False)', 'poly.is_out_of_image(shape, partly=False, fully=True)', 'poly.is_out_of_image(shape, partly=True, fully=True)', 'in str(exc)', 'got_exception', 'all([', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 1', 'multipoly_clipped[0].exterior_almost_equals(poly.exterior)', 'multipoly_clipped[0].label is None', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 1', 'multipoly_clipped[0].exterior_almost_equals(np.float32([', 'multipoly_clipped[0].label == ', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 2', 'multipoly_clipped[0].exterior_almost_equals(np.float32([', 'multipoly_clipped[0].label == ', 'multipoly_clipped[1].exterior_almost_equals(np.float32([', 'multipoly_clipped[0].label == ', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 0', 'np.allclose(poly.exterior, np.float32([', 'np.allclose(poly_shifted.exterior, np.float32([', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))  # draw did not change original image (copy=True)', 'np.all(image_poly[2:9, 2:3, c_idx] == np.zeros((7, 1), dtype=np.uint8) + value)  # left boundary', 'np.all(image_poly[2:9, 8:9, c_idx] == np.zeros((7, 1), dtype=np.uint8) + value)  # right boundary', 'np.all(image_poly[2:3, 2:9, c_idx] == np.zeros((1, 7), dtype=np.uint8) + value)  # top boundary', 'np.all(image_poly[8:9, 2:9, c_idx] == np.zeros((1, 7), dtype=np.uint8) + value)  # bottom boundary', 'np.all(image_poly[3:8, 3:8, :] == expected)', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))  # draw did not change original image (copy=True)', 'np.all(image_poly[2:9, 2:3, c_idx] == np.zeros((7, 1), dtype=np.uint8) + value)  # left boundary', 'np.all(image_poly[2:9, 8:9, c_idx] == np.zeros((7, 1), dtype=np.uint8) + value)  # right boundary', 'np.all(image_poly[2:3, 2:9, c_idx] == np.zeros((1, 7), dtype=np.uint8) + value)  # top boundary', 'np.all(image_poly[8:9, 2:9, c_idx] == np.zeros((1, 7), dtype=np.uint8) + value)  # bottom boundary', 'np.all(image_poly[3:8, 3:8, :] == expected)', 'image_poly.dtype.type == np.float32', 'image_poly.shape == (10, 10, 3)', 'np.allclose(image_poly[2:9, 2:3, c_idx], np.zeros((7, 1), dtype=np.float32) + value)  # left boundary', 'np.allclose(image_poly[2:9, 8:9, c_idx], np.zeros((7, 1), dtype=np.float32) + value)  # right boundary', 'np.allclose(image_poly[2:3, 2:9, c_idx], np.zeros((1, 7), dtype=np.float32) + value)  # top boundary', 'np.allclose(image_poly[8:9, 2:9, c_idx], np.zeros((1, 7), dtype=np.float32) + value)  # bottom boundary', 'np.allclose(image_poly[3:8, 3:8, :], expected)', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))  # draw did not change original image (copy=True)', 'np.all(image_poly[2+5:, 2:3, c_idx] == np.zeros((3, 1), dtype=np.uint8) + value)  # left boundary', 'np.all(image_poly[2+5:, 8:9, c_idx] == np.zeros((3, 1), dtype=np.uint8) + value)  # right boundary', 'np.all(image_poly[2+5:3+5, 2:9, c_idx] == np.zeros((1, 7), dtype=np.uint8) + value)  # top boundary', 'np.all(image_poly[3+5:, 3:8, :] == expected)', 'in str(exc)', 'not got_exception  # only polygons fully outside of the image plane lead to exceptions', 'np.array_equal(image_poly, image)', 'in str(exc)', 'got_exception', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))  # draw did not change original image (copy=True)', 'np.all(image_poly[2:9, 2:3, c_idx] == np.zeros((7, 1), dtype=np.uint8) + value)  # left boundary', 'np.all(image_poly[3:8, 3:8, :] == image[3:8, 3:8, :])', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))  # draw did not change original image (copy=True)', 'np.all(image_poly[2:8, 2:8, :] == expected)', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.all(', 'np.all(image_poly[3:8, 3:8, :] == expected.astype(np.uint8))', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.all(', 'np.all(image_poly[3:8, 3:8, :] == expected.astype(np.uint8))', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.all(image_cp == image_poly)', 'not np.all(image_cp == image)', 'np.all(image_poly[2:9, 2:3, c_idx] == np.zeros((6, 1, 3), dtype=np.uint8) + value)  # left boundary', 'np.all(image_cp[2:9, 2:3, c_idx] == np.zeros((6, 1, 3), dtype=np.uint8) + value)  # left boundary', 'np.all(image_poly[3:8, 3:8, :] == expected)', 'np.all(image_cp[3:8, 3:8, :] == expected)', 'np.array_equal(subimage, image[0:10, 0:10, :])', 'np.array_equal(subimage, image[1:9, 1:9, :])', 'np.array_equal(subimage, expected)', 'np.array_equal(subimage, expected)', 'np.array_equal(subimage, expected)', 'np.array_equal(subimage, image[0:10, 0:10, :])', 'np.array_equal(subimage, image[0:9, 0:9, :])', 'np.array_equal(subimage, image[1:9, 1:9, :])', 'in str(exc)', 'got_exception', 'np.allclose(poly.exterior, poly_reordered.exterior)', 'np.allclose(poly.exterior, np.float32([[0, 0], [1, 0], [1, 1]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [1, 1], [0, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 1], [0, 0], [1, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [1, 1], [0, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [1, 1], [0, 0]]))', 'in str(exc)', 'got_exception', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [0, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[0, 0]]))', 'in str(exc)', 'got_exception', 'np.allclose(poly.exterior, poly_reordered.exterior)', 'np.allclose(poly.exterior, np.float32([[0, 0], [1, 0], [1, 1]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [1, 1], [0, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 1], [0, 0], [1, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [0, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[0, 0]]))', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'np.allclose(ls.coords, np.float32([[0, 0], [1, 0], [1, 1]]))', 'np.allclose(ls.coords, np.float32([[0, 0], [1, 0]]))', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'np.allclose(ls.coords, np.float32([[0, 0], [1, 0], [1, 1], [0, 0]]))', 'np.allclose(ls.coords, np.float32([[0, 0], [0.5, 0], [1, 0], [1, 0.5], [1, 1], [0.5, 0.5]]))', 'np.allclose(ls.coords, np.float32([', 'np.allclose(ls.coords, np.float32([[0, 0], [0.5, 0], [1, 0], [1, 0.5], [1, 1], [0.5, 0.5], [0, 0]]))', 'x_exp - 1e-8 < x_obs < x_exp + 1e-8', 'y_exp - 1e-8 < y_obs < y_exp + 1e-8', '0 - 1e-8 < bb.x1 < 0 + 1e-8', '0 - 1e-8 < bb.y1 < 0 + 1e-8', '1 - 1e-8 < bb.x2 < 1 + 1e-8', '1 - 1e-8 < bb.y2 < 1 + 1e-8', '0 - 1e-8 < bb.x1 < 0 + 1e-8', '0 - 1e-8 < bb.y1 < 0 + 1e-8', '1 - 1e-8 < bb.x2 < 1 + 1e-8', '1 - 1e-8 < bb.y2 < 1 + 1e-8', '0.5 - 1e-8 < bb.x1 < 0.5 + 1e-8', '0.1 - 1e-8 < bb.y1 < 0.1 + 1e-8', '2.0 - 1e-8 < bb.x2 < 2.0 + 1e-8', '1.0 - 1e-8 < bb.y2 < 1.0 + 1e-8', 'x_exp - 1e-8 < x_obs < x_exp + 1e-8', 'y_exp - 1e-8 < y_obs < y_exp + 1e-8', 'len(poly.exterior) == 0', 'poly.exterior.dtype.type == poly_cp.exterior.dtype.type', 'poly.exterior.shape == poly_cp.exterior.shape', 'np.allclose(poly.exterior, poly_cp.exterior)', 'poly.label == poly_cp.label', 'poly.exterior.dtype.type == poly_cp.exterior.dtype.type', 'poly.exterior.shape == poly_cp.exterior.shape', 'np.allclose(poly.exterior, poly_cp.exterior)', 'poly.label == poly_cp.label', 'poly.exterior.dtype.type == poly_cp.exterior.dtype.type', 'poly.exterior.shape == poly_cp.exterior.shape', 'not np.allclose(poly.exterior, poly_cp.exterior)', 'not poly.label == poly_cp.label', 's ==  \\', 's ==  \\', 's ==  \\', 's == ', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-3)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-9)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-9)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-9)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-4, interpolate=0)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-4, interpolate=1)', 'poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals()', 'np.allclose(', 'np.allclose(', 'len(inter) == 0', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'len(inter) == 0', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'len(inter) == 0', 'np.allclose(', 'len(poly_oi.polygons) == 1', 'np.allclose(', 'poly_oi.shape == (10, 10, 3)', 'len(poly_oi.polygons) == 3', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'poly_oi.shape == (10, 10, 3)', 'len(poly_oi.polygons) == 0', 'len(poly_oi.polygons) == 1', 'np.allclose(', 'poly_oi.shape == (10, 10, 3)', 'poly_oi.shape == (10, 11)', 'poly_oi.empty is False', 'poly_oi.empty is True', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'poly_oi_proj.shape == (1, 1, 3)', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'poly_oi_proj.shape == (1, 1, 3)', 'np.allclose(', 'poly_oi_proj.shape == (10, 200, 3)', 'np.sum(image) == 0', 'np.sum(image_drawn) == 0', 'np.sum(image) == 0', 'np.sum(image_drawn) > 0', 'np.sum(image_expected) > 0', 'np.allclose(image_drawn, image_expected)', 'len(poly_oi_rm.polygons) == 0', 'poly_oi_rm.shape == (10, 11, 3)', 'len(poly_oi_rm.polygons) == 1', 'np.allclose(poly_oi_rm.polygons[0].exterior,', 'poly_oi_rm.shape == (10, 11, 3)', 'len(poly_oi.polygons) == 2', 'len(poly_oi_rm.polygons) == 2', 'np.allclose(poly_oi_rm.polygons[0].exterior,', 'np.allclose(poly_oi_rm.polygons[1].exterior,', 'poly_oi_rm.shape == (10, 10, 3)', 'len(poly_oi.polygons) == 2', 'len(poly_oi_rm.polygons) == 1', 'np.allclose(poly_oi_rm.polygons[0].exterior,', 'poly_oi_rm.shape == (10, 10, 3)', 'len(poly_oi.polygons) == 2', 'len(poly_oi_rm.polygons) == 1', 'np.allclose(poly_oi_rm.polygons[0].exterior,', 'poly_oi_rm.shape == (10, 10, 3)', 'len(poly_oi.polygons) == 2', 'len(poly_oi_rm.polygons) == 0', 'poly_oi_rm.shape == (10, 10, 3)', 'len(poly_oi_clip.polygons) == 0', 'poly_oi_clip.shape == (10, 11, 3)', 'len(poly_oi_clip.polygons) == 1', '_any_point_close(poly_oi_clip.polygons[0].exterior,', 'poly_oi_clip.shape == (10, 11, 3)', 'len(poly_oi_clip.polygons) == 1', '_any_point_close(poly_oi_clip.polygons[0].exterior,', 'poly_oi_clip.shape == (10, 11, 3)', 'len(poly_oi_clip.polygons) == 0', 'poly_oi_clip.shape == (10, 11, 3)', 'len(poly_oi_clip.polygons) == 2', '_any_point_close(poly_oi_clip.polygons[0].exterior,', '_any_point_close(poly_oi_clip.polygons[1].exterior,', 'poly_oi_clip.shape == (10, 11, 3)', 'len(poly_oi_shifted.polygons) == 0', 'poly_oi_shifted.shape == (10, 11, 3)', 'len(poly_oi_shifted.polygons) == 3', 'np.allclose(poly_oi_shifted.polygons[0].exterior,', 'np.allclose(poly_oi_shifted.polygons[1].exterior,', 'np.allclose(poly_oi_shifted.polygons[2].exterior,', 'poly_oi_shifted.shape == (10, 11, 3)', 'len(poly_oi_copy.polygons) == 2', 'np.allclose(poly_oi_copy.polygons[0].exterior,', 'np.allclose(poly_oi_copy.polygons[1].exterior,', 'np.allclose(poly_oi.polygons[0].exterior,', 'np.allclose(poly_oi_copy.polygons[0].exterior,', 'poly_oi.shape == (10, 11, 3)', 'poly_oi_copy.shape == (20, 30, 3)', 'len(poly_oi_copy.polygons) == 2', 'np.allclose(poly_oi_copy.polygons[0].exterior,', 'np.allclose(poly_oi_copy.polygons[1].exterior,', 'np.allclose(poly_oi.polygons[0].exterior,', 'np.allclose(poly_oi_copy.polygons[0].exterior,', 'np.allclose(poly_oi.polygons[1].exterior,', 'np.allclose(poly_oi_copy.polygons[1].exterior,', 'poly_oi.shape == (10, 11, 3)', 'poly_oi_copy.shape == (20, 30, 3)', 'poly_oi.__repr__() == ', 'poly_oi.__repr__() == (', 'poly_oi.__repr__() == ', 'poly_oi.__repr__() == (', 'len(observed) == len(expected)', 'len(ps_obs) == len(ps_exp),  % (i,)', 'len(p_obs) == 2', 'len(p_exp) == 2', 'np.allclose(p_obs, p_exp, atol=atol, rtol=rtol),  % (i,)', 'poly_concave.is_valid', 'all(found)', 'poly_concave.is_valid', 'all(found)', 'poly_concave.is_valid', 'all(found)', 'poly_concave.is_valid', 'all(found)', 'poly_concave.is_valid', 'bb.contains(ia.Keypoint(x=point[0], y=point[1]))', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(points, points_jittered, rtol=0, atol=1e-4)', 'np.allclose(points, points_jittered, rtol=0, atol=1e-4)', 'np.allclose(points, points_jittered, rtol=0, atol=1e-4)', 'np.allclose(', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[2])) >= 1e-4', 'np.allclose(', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[3])) >= 1e-4', 'np.allclose(', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[4])) >= 1e-4', 'np.allclose(', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[2])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[4])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[6])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[7])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[8])) >= 1e-4', 'np.allclose(', 'np.linalg.norm(np.float32([0, 0]) - np.float32(points_jittered[2])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[3])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[5])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[7])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[8])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[9])) >= 1e-4', 'np.allclose(circ, 4)', 'np.allclose(circ, 4)', 'np.allclose(circ, 4)', 'np.allclose(circ, 6)', 'len(observed) == len(expected),  % (len(observed), len(expected))', 'max_count == len(expected),  % (max_count, len(expected))', 'list(points_fit) == list(sm.xrange(len(points)))', 'ia.Polygon([points[idx] for idx in points_fit]).is_valid', 'poly_observed.is_valid', 'len(points_fit) >= len(points) - 2  # TODO add IoU check here', 'poly_observed.is_valid', 'np.allclose(points_fixed, points, atol=0, rtol=0)', 'not np.allclose(points_fixed, points, atol=0, rtol=0)', 'not cpr._is_polygon_line(points_fixed)', 'np.allclose(points_fixed, points, rtol=0, atol=1e-2)', 'not np.allclose(points_fixed, points, atol=0, rtol=0)', 'not cpr._is_polygon_line(points_fixed)', 'np.allclose(points_fixed, points, rtol=0, atol=1e-2)', 'not np.allclose(points_fixed, points, atol=0, rtol=0)', 'not cpr._is_polygon_line(points_fixed)', 'np.allclose(points_fixed, points, rtol=0, atol=1e-2)', 'not _ConcavePolygonRecoverer._is_polygon_line(points)', 'not _ConcavePolygonRecoverer._is_polygon_line(points)', 'not _ConcavePolygonRecoverer._is_polygon_line(points)', 'not _ConcavePolygonRecoverer._is_polygon_line(points)', '_ConcavePolygonRecoverer._is_polygon_line(points)', '_ConcavePolygonRecoverer._is_polygon_line(points)', '_ConcavePolygonRecoverer._is_polygon_line(points)', '_ConcavePolygonRecoverer._is_polygon_line(points)', '_ConcavePolygonRecoverer._is_polygon_line(points)', 'not _ConcavePolygonRecoverer._is_polygon_line(points)', 'points_inter == [[], [], []]', 'points_inter == [[], [], [], []]', 'points_inter == [[], [], [], []]', 'points_inter == [[], [], [], [], [], [], [], []]', 'points_inserted == points', 'points_inserted == [(0, 0), (0.5, 0), (1, 0), (2, 0)]', 'points_inserted == [(0, 0), (0.5, 0), (0.75, 0), (1, 0), (2, 0)]', 'points_inserted == [(0, 0), (0.5, 0), (1, 0), (1.5, 0), (2, 0)]', 'points_inserted == [(0, 0), (0.5, 0), (1, 0), (1.5, 0), (2, 0),']",[],[],[],[],[],[],[],[],[],[],[],[]
1309,aleju,kontakt@ajung.name,2019-03-24 11:09:13+01:00,f6b0256f196cae78b0b38f01cd674cebf18a963b,https://github.com/aleju/imgaug/commit/f6b0256f196cae78b0b38f01cd674cebf18a963b,Move heatmap classes+funcs to augmentables/heatmaps.py,5,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,59,0,0,0,0,0,0,0,0,0,0,0,0,59,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['heatmaps_drawn.shape == (4, 4, 3)', 'np.allclose(heatmaps_drawn[y, x], v1)', 'np.allclose(heatmaps_drawn[y, x], v2)', 'np.allclose(heatmaps_drawn[y, x], v3)', 'heatmaps_drawn.shape == (4, 4, 3)', 'np.allclose(heatmaps_drawn[y, x], v1)', 'np.allclose(heatmaps_drawn[y, x], v2)', 'heatmaps_drawn.shape == (4, 4, 3)', 'np.all(heatmaps_drawn[0:4, 0:2, :] == 0)', 'np.all(heatmaps_drawn[0:4, 2:3, :] == 128) or np.all(heatmaps_drawn[0:4, 2:3, :] == 127)', 'np.all(heatmaps_drawn[0:4, 3:4, :] == 255) or np.all(heatmaps_drawn[0:4, 3:4, :] == 254)', 'heatmaps_drawn.shape == (2, 2, 3)', 'np.all(heatmaps_drawn[0:2, 0, :] == 0)', 'np.all(heatmaps_drawn[0:2, 1, :] == 128) or np.all(heatmaps_drawn[0:2, 1, :] == 127)', 'np.allclose(heatmaps.get_arr(), heatmaps_arr)', 'np.allclose(heatmaps.invert().get_arr(), expected)', 'np.allclose(heatmaps.get_arr(), heatmaps_arr[..., np.newaxis])', 'np.allclose(heatmaps.invert().get_arr(), expected[..., np.newaxis])', 'heatmaps_padded.arr_0to1.shape == (2+(1+3), 2+(4+2), 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (2+(1+3), 2+(4+2), 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (2+(1+3), 2+(4+2), 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (3, 3, 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (3, 3, 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (3, 3, 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (2, 4, 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (12, 3, 1)', 'np.allclose(', 'heatmaps_pooled.arr_0to1.shape == (2, 2, 1)', 'np.allclose(', 'heatmaps_pooled.arr_0to1.shape == (2, 2, 1)', 'np.allclose(', 'heatmaps_scaled.arr_0to1.shape == (4, 4, 1)', 'heatmaps_scaled.arr_0to1.dtype.type == np.float32', 'np.allclose(', 'heatmaps_scaled.arr_0to1.shape == (2, 4, 1)', 'heatmaps_scaled.arr_0to1.dtype.type == np.float32', 'np.allclose(', 'hm.shape == (20, 30, 3)', 'hm.arr_0to1.shape == (2, 3, 1)', 'np.allclose(hm.arr_0to1[..., 0], np.float32([', 'hm.shape == (20, 30, 3)', 'hm.arr_0to1.shape == (2, 3, 1)', 'np.allclose(hm.arr_0to1[..., 0], np.float32([', 'hm.shape == (20, 30, 3)', 'hm.arr_0to1.shape == (2, 3, 1)', 'np.allclose(hm.arr_0to1[..., 0], np.float32([', 'np.allclose(hm.min_value, -1.0)', 'np.allclose(hm.max_value, 2.0)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],"['heatmaps_drawn.shape == (4, 4, 3)', 'np.allclose(heatmaps_drawn[y, x], v1)', 'np.allclose(heatmaps_drawn[y, x], v2)', 'np.allclose(heatmaps_drawn[y, x], v3)', 'heatmaps_drawn.shape == (4, 4, 3)', 'np.allclose(heatmaps_drawn[y, x], v1)', 'np.allclose(heatmaps_drawn[y, x], v2)', 'heatmaps_drawn.shape == (4, 4, 3)', 'np.all(heatmaps_drawn[0:4, 0:2, :] == 0)', 'np.all(heatmaps_drawn[0:4, 2:3, :] == 128) or np.all(heatmaps_drawn[0:4, 2:3, :] == 127)', 'np.all(heatmaps_drawn[0:4, 3:4, :] == 255) or np.all(heatmaps_drawn[0:4, 3:4, :] == 254)', 'heatmaps_drawn.shape == (2, 2, 3)', 'np.all(heatmaps_drawn[0:2, 0, :] == 0)', 'np.all(heatmaps_drawn[0:2, 1, :] == 128) or np.all(heatmaps_drawn[0:2, 1, :] == 127)', 'np.allclose(heatmaps.get_arr(), heatmaps_arr)', 'np.allclose(heatmaps.invert().get_arr(), expected)', 'np.allclose(heatmaps.get_arr(), heatmaps_arr[..., np.newaxis])', 'np.allclose(heatmaps.invert().get_arr(), expected[..., np.newaxis])', 'heatmaps_padded.arr_0to1.shape == (2+(1+3), 2+(4+2), 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (2+(1+3), 2+(4+2), 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (2+(1+3), 2+(4+2), 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (3, 3, 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (3, 3, 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (3, 3, 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (2, 4, 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (12, 3, 1)', 'np.allclose(', 'heatmaps_pooled.arr_0to1.shape == (2, 2, 1)', 'np.allclose(', 'heatmaps_pooled.arr_0to1.shape == (2, 2, 1)', 'np.allclose(', 'heatmaps_scaled.arr_0to1.shape == (4, 4, 1)', 'heatmaps_scaled.arr_0to1.dtype.type == np.float32', 'np.allclose(', 'heatmaps_scaled.arr_0to1.shape == (2, 4, 1)', 'heatmaps_scaled.arr_0to1.dtype.type == np.float32', 'np.allclose(', 'hm.shape == (20, 30, 3)', 'hm.arr_0to1.shape == (2, 3, 1)', 'np.allclose(hm.arr_0to1[..., 0], np.float32([', 'hm.shape == (20, 30, 3)', 'hm.arr_0to1.shape == (2, 3, 1)', 'np.allclose(hm.arr_0to1[..., 0], np.float32([', 'hm.shape == (20, 30, 3)', 'hm.arr_0to1.shape == (2, 3, 1)', 'np.allclose(hm.arr_0to1[..., 0], np.float32([', 'np.allclose(hm.min_value, -1.0)', 'np.allclose(hm.max_value, 2.0)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[]
1310,aleju,kontakt@ajung.name,2019-03-24 11:17:17+01:00,2e0e798d843f9db5a9b6721b9fdccf1d05afbd89,https://github.com/aleju/imgaug/commit/2e0e798d843f9db5a9b6721b9fdccf1d05afbd89,Move segmap classes+funcs to augmentables/segmaps.py,5,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,79,0,0,0,0,0,0,0,0,0,0,0,0,79,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['arr.dtype.type == np.bool_', 'observed.dtype.type == np.int32', 'np.array_equal(arr, observed)', 'arr.dtype.type == np.bool_', 'observed.dtype.type == np.int32', 'np.array_equal(arr, observed)', 'observed.dtype.type == np.int32', 'np.array_equal(arr, observed)', 'observed.dtype.type == np.int32', 'np.array_equal(observed, expected)', 'in str(exc)', 'got_exception', 'observed.dtype.type == np.int32', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed_fg, expected_fg)', 'np.array_equal(observed, expected)', 'np.array_equal(observed_fg, expected_fg)', 'np.array_equal(observed, image)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'observed.shape == expected.shape', 'd_max <= 1.0 + 1e-4', 'observed.shape == expected.shape', 'd_max <= 1.0 + 1e-4', 'observed.shape == expected.shape', 'd_max <= 1.0 + 1e-4', 'observed.shape == expected.shape', 'd_max <= 1.0 + 1e-4', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'pad_amounts == (2, 0, 2, 0)', 'np.allclose(observed, expected)', 'np.array_equal(segmap_scaled.get_arr_int(), np.int32([', 'np.allclose(observed, expected)', 'np.array_equal(segmap_scaled.get_arr_int(), np.int32([', 'np.allclose(observed, expected)', 'np.array_equal(segmap_scaled.get_arr_int(), np.int32([', 'np.allclose(heatmaps.arr_0to1, expected)', 'np.allclose(heatmaps.arr_0to1, expected)', 'len(class_indices) == 3', '[idx in class_indices for idx in [0, 1, 2]]', 'np.allclose(heatmaps.arr_0to1, expected)', 'len(class_indices) == 2', '[idx in class_indices for idx in [0, 2]]', 'heatmaps is None', 'len(class_indices) == 0', 'np.allclose(heatmaps.arr_0to1, np.zeros((2, 2), dtype=np.float32))', 'len(class_indices) == 1', '[idx in class_indices for idx in [0]]', 'np.allclose(segmap.arr, arr)', 'np.allclose(segmap.arr, expected)', 'np.allclose(observed.arr, segmap.arr)', 'observed.shape == (2, 2)', 'observed.nb_classes == segmap.nb_classes', 'observed.input_was == segmap.input_was', 'np.array_equal(observed.get_arr_int(), arr)', 'observed.shape == (2, 2)', 'observed.nb_classes == 10', 'observed.input_was == segmap.input_was', 'np.allclose(observed.arr, segmap.arr)', 'observed.shape == (2, 2)', 'observed.nb_classes == segmap.nb_classes', 'observed.input_was == segmap.input_was', 'not np.allclose(observed.arr, segmap.arr)', 'np.array_equal(observed.get_arr_int(), segmap.get_arr_int())', 'observed.shape == (2, 2)', 'observed.nb_classes == 10', 'observed.input_was == segmap.input_was', 'not np.array_equal(observed.get_arr_int(), segmap.get_arr_int())']",[],[],[],[],[],[],[],[],[],[],[],[],"['arr.dtype.type == np.bool_', 'observed.dtype.type == np.int32', 'np.array_equal(arr, observed)', 'arr.dtype.type == np.bool_', 'observed.dtype.type == np.int32', 'np.array_equal(arr, observed)', 'observed.dtype.type == np.int32', 'np.array_equal(arr, observed)', 'observed.dtype.type == np.int32', 'np.array_equal(observed, expected)', 'in str(exc)', 'got_exception', 'observed.dtype.type == np.int32', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed_fg, expected_fg)', 'np.array_equal(observed, expected)', 'np.array_equal(observed_fg, expected_fg)', 'np.array_equal(observed, image)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'observed.shape == expected.shape', 'd_max <= 1.0 + 1e-4', 'observed.shape == expected.shape', 'd_max <= 1.0 + 1e-4', 'observed.shape == expected.shape', 'd_max <= 1.0 + 1e-4', 'observed.shape == expected.shape', 'd_max <= 1.0 + 1e-4', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'pad_amounts == (2, 0, 2, 0)', 'np.allclose(observed, expected)', 'np.array_equal(segmap_scaled.get_arr_int(), np.int32([', 'np.allclose(observed, expected)', 'np.array_equal(segmap_scaled.get_arr_int(), np.int32([', 'np.allclose(observed, expected)', 'np.array_equal(segmap_scaled.get_arr_int(), np.int32([', 'np.allclose(heatmaps.arr_0to1, expected)', 'np.allclose(heatmaps.arr_0to1, expected)', 'len(class_indices) == 3', '[idx in class_indices for idx in [0, 1, 2]]', 'np.allclose(heatmaps.arr_0to1, expected)', 'len(class_indices) == 2', '[idx in class_indices for idx in [0, 2]]', 'heatmaps is None', 'len(class_indices) == 0', 'np.allclose(heatmaps.arr_0to1, np.zeros((2, 2), dtype=np.float32))', 'len(class_indices) == 1', '[idx in class_indices for idx in [0]]', 'np.allclose(segmap.arr, arr)', 'np.allclose(segmap.arr, expected)', 'np.allclose(observed.arr, segmap.arr)', 'observed.shape == (2, 2)', 'observed.nb_classes == segmap.nb_classes', 'observed.input_was == segmap.input_was', 'np.array_equal(observed.get_arr_int(), arr)', 'observed.shape == (2, 2)', 'observed.nb_classes == 10', 'observed.input_was == segmap.input_was', 'np.allclose(observed.arr, segmap.arr)', 'observed.shape == (2, 2)', 'observed.nb_classes == segmap.nb_classes', 'observed.input_was == segmap.input_was', 'not np.allclose(observed.arr, segmap.arr)', 'np.array_equal(observed.get_arr_int(), segmap.get_arr_int())', 'observed.shape == (2, 2)', 'observed.nb_classes == 10', 'observed.input_was == segmap.input_was', 'not np.array_equal(observed.get_arr_int(), segmap.get_arr_int())']",[],[],[],[],[],[],[],[],[],[],[],[]
1311,aleju,kontakt@ajung.name,2019-03-24 11:36:47+01:00,07d54c07d546e741defb40c6e17943771ca7ee80,https://github.com/aleju/imgaug/commit/07d54c07d546e741defb40c6e17943771ca7ee80,Move Batch to augmentables/batches.py,7,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],1,106,1,0,0,0,0,0,0,1,3,1,106,1,0,0,0,0,0,0,0,0,512,0,0,0,0,0,0,0,0,0,0,0,0,512,0,0,0,0,0,0,0,0,0,0,0,0,['class TestBatch(unittest.TestCase):'],"[('Raises', '(ValueError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):')]",['def setUp(self):'],[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",['class TestBatch(unittest.TestCase):'],"[('Raises', '(ValueError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):')]",['def setUp(self):'],[],[],[],[],[],[],[],[],"['getattr(batch,  % (attr_name,)) is None', 'getattr(batch,  % (attr_name,)) is None', 'batch.data is None', 'getattr(batch,  % (attr_name,)) == i', 'getattr(batch,  % (attr_name,)) is None', 'batch.data == 6', 'batch.get_images_unaug_normalized() is None', 'batch.get_images_unaug_normalized() is None', 'ia.is_np_array(observed)', 'observed.shape == (1, 4, 4, 3)', 'observed.dtype.name == ', 'ia.is_np_array(observed)', 'observed.shape == (1, 4, 4, 3)', 'observed.dtype.name == ', 'ia.is_np_array(observed)', 'observed.shape == (1, 4, 4, 1)', 'observed.dtype.name == ', 'isinstance(batch.get_images_unaug_normalized(), list)', 'len(batch.get_images_unaug_normalized()) == 0', 'isinstance(observed, list)', 'len(observed) == 2', 'ia.is_np_array(observed[0])', 'ia.is_np_array(observed[1])', 'observed[0].shape == (4, 4)', 'observed[1].shape == (5, 5, 3)', 'observed[0].dtype.name == ', 'observed[1].dtype.name == ', 'heatmaps_norm is None', 'isinstance(heatmaps_norm, list)', 'isinstance(heatmaps_norm[0], ia.HeatmapsOnImage)', 'np.allclose(heatmaps_norm[0].arr_0to1, 0 + 0.1)', 'isinstance(heatmaps_norm, list)', 'isinstance(heatmaps_norm[0], ia.HeatmapsOnImage)', 'np.allclose(heatmaps_norm[0].arr_0to1, 0 + 0.1)', 'isinstance(heatmaps_norm, list)', 'isinstance(heatmaps_norm[0], ia.HeatmapsOnImage)', 'np.allclose(heatmaps_norm[0].arr_0to1, 0 + 0.1)', 'heatmaps_norm is None', 'isinstance(heatmaps_norm, list)', 'isinstance(heatmaps_norm[0], ia.HeatmapsOnImage)', 'np.allclose(heatmaps_norm[0].arr_0to1, 0 + 0.1)', 'isinstance(heatmaps_norm, list)', 'isinstance(heatmaps_norm[0], ia.HeatmapsOnImage)', 'np.allclose(heatmaps_norm[0].arr_0to1, 0 + 0.1)', 'isinstance(heatmaps_norm, list)', 'isinstance(heatmaps_norm[0], ia.HeatmapsOnImage)', 'np.allclose(heatmaps_norm[0].arr_0to1, 0 + 0.1)', 'segmaps_norm is None', 'isinstance(segmaps_norm, list)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 1)', 'isinstance(segmaps_norm, list)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 1)', 'isinstance(segmaps_norm, list)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 0 + 1)', 'segmaps_norm is None', 'isinstance(segmaps_norm, list)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 1)', 'isinstance(segmaps_norm, list)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 1)', 'isinstance(segmaps_norm, list)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 1)', 'keypoints_norm is None', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 1', 'np.allclose(keypoints_norm[0].get_coords_array(), 1)', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 5', 'np.allclose(keypoints_norm[0].get_coords_array(), 1)', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 1', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 1', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 1', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'keypoints_norm is None', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 1', 'np.allclose(keypoints_norm[0].get_coords_array(), 1)', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 5', 'np.allclose(keypoints_norm[0].get_coords_array(), 1)', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 2', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'keypoints_norm[0].keypoints[1].x == 3', 'keypoints_norm[0].keypoints[1].y == 4', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 2', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'keypoints_norm[0].keypoints[1].x == 3', 'keypoints_norm[0].keypoints[1].y == 4', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 1', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'isinstance(keypoints_norm[1], ia.KeypointsOnImage)', 'len(keypoints_norm[1].keypoints) == 1', 'keypoints_norm[1].keypoints[0].x == 3', 'keypoints_norm[1].keypoints[0].y == 4', 'keypoints_norm is None', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 2', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'keypoints_norm[0].keypoints[1].x == 3', 'keypoints_norm[0].keypoints[1].y == 4', 'len(keypoints_norm[1].keypoints) == 2', 'keypoints_norm[1].keypoints[0].x == 5', 'keypoints_norm[1].keypoints[0].y == 6', 'keypoints_norm[1].keypoints[1].x == 7', 'keypoints_norm[1].keypoints[1].y == 8', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 2', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'keypoints_norm[0].keypoints[1].x == 3', 'keypoints_norm[0].keypoints[1].y == 4', 'len(keypoints_norm[1].keypoints) == 2', 'keypoints_norm[1].keypoints[0].x == 5', 'keypoints_norm[1].keypoints[0].y == 6', 'keypoints_norm[1].keypoints[1].x == 7', 'keypoints_norm[1].keypoints[1].y == 8', 'bbs_norm is None', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'np.allclose(bbs_norm[0].to_xyxy_array(), 1)', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 5', 'np.allclose(bbs_norm[0].to_xyxy_array(), 1)', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'bbs_norm is None', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'np.allclose(bbs_norm[0].to_xyxy_array(), 1)', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 5', 'np.allclose(bbs_norm[0].to_xyxy_array(), 1)', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 2', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'bbs_norm[0].bounding_boxes[1].x1 == 5', 'bbs_norm[0].bounding_boxes[1].y1 == 6', 'bbs_norm[0].bounding_boxes[1].x2 == 7', 'bbs_norm[0].bounding_boxes[1].y2 == 8', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 2', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'bbs_norm[0].bounding_boxes[1].x1 == 5', 'bbs_norm[0].bounding_boxes[1].y1 == 6', 'bbs_norm[0].bounding_boxes[1].x2 == 7', 'bbs_norm[0].bounding_boxes[1].y2 == 8', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'isinstance(bbs_norm[1], ia.BoundingBoxesOnImage)', 'len(bbs_norm[1].bounding_boxes) == 1', 'bbs_norm[1].bounding_boxes[0].x1 == 5', 'bbs_norm[1].bounding_boxes[0].y1 == 6', 'bbs_norm[1].bounding_boxes[0].x2 == 7', 'bbs_norm[1].bounding_boxes[0].y2 == 8', 'bbs_norm is None', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'len(bbs_norm[1].bounding_boxes) == 2', 'bbs_norm[1].bounding_boxes[0].x1 == 5', 'bbs_norm[1].bounding_boxes[0].y1 == 6', 'bbs_norm[1].bounding_boxes[0].x2 == 7', 'bbs_norm[1].bounding_boxes[0].y2 == 8', 'bbs_norm[1].bounding_boxes[1].x1 == 9', 'bbs_norm[1].bounding_boxes[1].y1 == 10', 'bbs_norm[1].bounding_boxes[1].x2 == 11', 'bbs_norm[1].bounding_boxes[1].y2 == 12', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 2', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'bbs_norm[0].bounding_boxes[1].x1 == 5', 'bbs_norm[0].bounding_boxes[1].y1 == 6', 'bbs_norm[0].bounding_boxes[1].x2 == 7', 'bbs_norm[0].bounding_boxes[1].y2 == 8', 'len(bbs_norm[1].bounding_boxes) == 2', 'bbs_norm[1].bounding_boxes[0].x1 == 9', 'bbs_norm[1].bounding_boxes[0].y1 == 10', 'bbs_norm[1].bounding_boxes[0].x2 == 11', 'bbs_norm[1].bounding_boxes[0].y2 == 12', 'bbs_norm[1].bounding_boxes[1].x1 == 13', 'bbs_norm[1].bounding_boxes[1].y1 == 14', 'bbs_norm[1].bounding_boxes[1].x2 == 15', 'bbs_norm[1].bounding_boxes[1].y2 == 16', 'polygons_norm is None', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'np.allclose(polygons_norm[0].polygons[0].exterior,', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 5', 'np.allclose(polygons_norm[0].polygons[0].exterior,', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm is None', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'np.allclose(polygons_norm[0].polygons[0].exterior,', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 5', 'np.allclose(polygons_norm[0].polygons[0].exterior,', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm[0].polygons[1].exterior_almost_equals(coords2)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'isinstance(polygons_norm[1], ia.PolygonsOnImage)', 'len(polygons_norm[1].polygons) == 1', 'polygons_norm[1].polygons[0].exterior_almost_equals(coords2)', 'polygons_norm is None', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'np.allclose(polygons_norm[0].polygons[0].exterior,', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 5', 'np.allclose(polygons_norm[0].polygons[0].exterior,', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm[0].polygons[1].exterior_almost_equals(coords2)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm[0].polygons[1].exterior_almost_equals(coords2)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'isinstance(polygons_norm[1], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm[0].polygons[1].exterior_almost_equals(coords2)', 'len(polygons_norm[1].polygons) == 2', 'polygons_norm[1].polygons[0].exterior_almost_equals(coords3)', 'polygons_norm[1].polygons[1].exterior_almost_equals(coords4)', 'polygons_norm is None', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm[0].polygons[1].exterior_almost_equals(coords2)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[1].polygons[0].exterior_almost_equals(coords3)', 'polygons_norm[1].polygons[1].exterior_almost_equals(coords4)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm[0].polygons[1].exterior_almost_equals(coords2)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[1].polygons[0].exterior_almost_equals(coords3)', 'polygons_norm[1].polygons[1].exterior_almost_equals(coords4)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'observed[0] is None', 'observed[1] is True', 'len(observed[2]) == 0', 'observed[0] is None', 'observed[1] is True', 'len(observed[2]) == 1', 'observed[2][0] == ', 'ia.is_np_array(observed[0])', 'observed[0].shape == (4, 4, 3)', 'observed[1] is True', 'len(observed[2]) == 0', 'observed[0] == 0', 'observed[1] is True', 'len(observed[2]) == 0', 'observed[0] == ', 'observed[1] is True', 'len(observed[2]) == 0', 'observed[0] is None', 'observed[1] is False', 'len(observed[2]) == 0', 'observed[0] is None', 'observed[1] is False', 'len(observed[2]) == 1', 'observed[0] is None', 'observed[1] is False', 'len(observed[2]) == 2', 'observed[0] is None', 'observed[1] is True', 'len(observed[2]) == 1', 'ia.is_np_array(observed[0])', 'observed[0].shape == (4, 4, 3)', 'observed[1] is True', 'len(observed[2]) == 1', 'ia.is_np_array(observed[0])', 'observed[0].shape == (4, 4, 3)', 'observed[1] is True', 'len(observed[2]) == 2', 'ia.is_np_array(observed[0])', 'observed[0].shape == (4, 4, 3)', 'observed[1] is True', 'len(observed[2]) == 2', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == cls_name', 'ntype ==  % (cls_name,)', 'ntype ==  % (cls_name,)', 'len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)', 'len(caught_warnings) == 2', 'in str(caught_warnings[-1].message)', 'len(caught_warnings) == 3', 'in str(caught_warnings[-1].message)', 'len(caught_warnings) == 4', 'in str(caught_warnings[-1].message)', 'len(caught_warnings) == 5', 'in str(caught_warnings[-1].message)', 'len(keys) >= 12', 'getattr(observed, attr_name) is None', 'getattr(observed, attr_name) is None', 'ia.is_np_array(observed.images_unaug)', 'getattr(observed, attr_name) is None', 'ia.is_np_array(observed.images_unaug)', 'observed.images_unaug.shape == (1, 1, 3)', 'isinstance(observed.heatmaps_unaug[0], ia.HeatmapsOnImage)', 'isinstance(observed.segmentation_maps_unaug[0],', 'isinstance(observed.keypoints_unaug[0], ia.KeypointsOnImage)', 'isinstance(observed.bounding_boxes_unaug[0],', 'isinstance(observed.polygons_unaug[0], ia.PolygonsOnImage)', 'isinstance(observed.data, dict)', 'observed.heatmaps_unaug[0].shape == (4, 4, 3)', 'observed.segmentation_maps_unaug[0].shape == (5, 5, 3)', 'observed.keypoints_unaug[0].shape == (6, 6, 3)', 'observed.bounding_boxes_unaug[0].shape == (7, 7, 3)', 'observed.polygons_unaug[0].shape == (100, 100, 3)', 'observed.heatmaps_unaug[0].arr_0to1.shape == (1, 1, 1)', 'observed.segmentation_maps_unaug[0].arr.shape == (1, 1, 20)', 'observed.keypoints_unaug[0].keypoints[0].x == 1', 'observed.keypoints_unaug[0].keypoints[0].y == 2', 'observed.bounding_boxes_unaug[0].bounding_boxes[0].x1 == 1', 'observed.bounding_boxes_unaug[0].bounding_boxes[0].y1 == 2', 'observed.bounding_boxes_unaug[0].bounding_boxes[0].x2 == 3', 'observed.bounding_boxes_unaug[0].bounding_boxes[0].y2 == 4', 'observed.polygons_unaug[0].polygons[0].exterior[0, 0] == 0', 'observed.polygons_unaug[0].polygons[0].exterior[0, 1] == 0', 'observed.polygons_unaug[0].polygons[0].exterior[1, 0] == 10', 'observed.polygons_unaug[0].polygons[0].exterior[1, 1] == 0', 'observed.polygons_unaug[0].polygons[0].exterior[2, 0] == 10', 'observed.polygons_unaug[0].polygons[0].exterior[2, 1] == 10', 'observed.data[] == 123', 'observed.data[', 'observed.data[] == [1, 2, 3]']",[],[],[],[],[],[],[],[],[],[],[],[],"['getattr(batch,  % (attr_name,)) is None', 'getattr(batch,  % (attr_name,)) is None', 'batch.data is None', 'getattr(batch,  % (attr_name,)) == i', 'getattr(batch,  % (attr_name,)) is None', 'batch.data == 6', 'batch.get_images_unaug_normalized() is None', 'batch.get_images_unaug_normalized() is None', 'ia.is_np_array(observed)', 'observed.shape == (1, 4, 4, 3)', 'observed.dtype.name == ', 'ia.is_np_array(observed)', 'observed.shape == (1, 4, 4, 3)', 'observed.dtype.name == ', 'ia.is_np_array(observed)', 'observed.shape == (1, 4, 4, 1)', 'observed.dtype.name == ', 'isinstance(batch.get_images_unaug_normalized(), list)', 'len(batch.get_images_unaug_normalized()) == 0', 'isinstance(observed, list)', 'len(observed) == 2', 'ia.is_np_array(observed[0])', 'ia.is_np_array(observed[1])', 'observed[0].shape == (4, 4)', 'observed[1].shape == (5, 5, 3)', 'observed[0].dtype.name == ', 'observed[1].dtype.name == ', 'heatmaps_norm is None', 'isinstance(heatmaps_norm, list)', 'isinstance(heatmaps_norm[0], ia.HeatmapsOnImage)', 'np.allclose(heatmaps_norm[0].arr_0to1, 0 + 0.1)', 'isinstance(heatmaps_norm, list)', 'isinstance(heatmaps_norm[0], ia.HeatmapsOnImage)', 'np.allclose(heatmaps_norm[0].arr_0to1, 0 + 0.1)', 'isinstance(heatmaps_norm, list)', 'isinstance(heatmaps_norm[0], ia.HeatmapsOnImage)', 'np.allclose(heatmaps_norm[0].arr_0to1, 0 + 0.1)', 'heatmaps_norm is None', 'isinstance(heatmaps_norm, list)', 'isinstance(heatmaps_norm[0], ia.HeatmapsOnImage)', 'np.allclose(heatmaps_norm[0].arr_0to1, 0 + 0.1)', 'isinstance(heatmaps_norm, list)', 'isinstance(heatmaps_norm[0], ia.HeatmapsOnImage)', 'np.allclose(heatmaps_norm[0].arr_0to1, 0 + 0.1)', 'isinstance(heatmaps_norm, list)', 'isinstance(heatmaps_norm[0], ia.HeatmapsOnImage)', 'np.allclose(heatmaps_norm[0].arr_0to1, 0 + 0.1)', 'segmaps_norm is None', 'isinstance(segmaps_norm, list)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 1)', 'isinstance(segmaps_norm, list)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 1)', 'isinstance(segmaps_norm, list)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 0 + 1)', 'segmaps_norm is None', 'isinstance(segmaps_norm, list)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 1)', 'isinstance(segmaps_norm, list)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 1)', 'isinstance(segmaps_norm, list)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 1)', 'keypoints_norm is None', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 1', 'np.allclose(keypoints_norm[0].get_coords_array(), 1)', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 5', 'np.allclose(keypoints_norm[0].get_coords_array(), 1)', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 1', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 1', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 1', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'keypoints_norm is None', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 1', 'np.allclose(keypoints_norm[0].get_coords_array(), 1)', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 5', 'np.allclose(keypoints_norm[0].get_coords_array(), 1)', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 2', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'keypoints_norm[0].keypoints[1].x == 3', 'keypoints_norm[0].keypoints[1].y == 4', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 2', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'keypoints_norm[0].keypoints[1].x == 3', 'keypoints_norm[0].keypoints[1].y == 4', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 1', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'isinstance(keypoints_norm[1], ia.KeypointsOnImage)', 'len(keypoints_norm[1].keypoints) == 1', 'keypoints_norm[1].keypoints[0].x == 3', 'keypoints_norm[1].keypoints[0].y == 4', 'keypoints_norm is None', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 2', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'keypoints_norm[0].keypoints[1].x == 3', 'keypoints_norm[0].keypoints[1].y == 4', 'len(keypoints_norm[1].keypoints) == 2', 'keypoints_norm[1].keypoints[0].x == 5', 'keypoints_norm[1].keypoints[0].y == 6', 'keypoints_norm[1].keypoints[1].x == 7', 'keypoints_norm[1].keypoints[1].y == 8', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 2', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'keypoints_norm[0].keypoints[1].x == 3', 'keypoints_norm[0].keypoints[1].y == 4', 'len(keypoints_norm[1].keypoints) == 2', 'keypoints_norm[1].keypoints[0].x == 5', 'keypoints_norm[1].keypoints[0].y == 6', 'keypoints_norm[1].keypoints[1].x == 7', 'keypoints_norm[1].keypoints[1].y == 8', 'bbs_norm is None', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'np.allclose(bbs_norm[0].to_xyxy_array(), 1)', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 5', 'np.allclose(bbs_norm[0].to_xyxy_array(), 1)', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'bbs_norm is None', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'np.allclose(bbs_norm[0].to_xyxy_array(), 1)', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 5', 'np.allclose(bbs_norm[0].to_xyxy_array(), 1)', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 2', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'bbs_norm[0].bounding_boxes[1].x1 == 5', 'bbs_norm[0].bounding_boxes[1].y1 == 6', 'bbs_norm[0].bounding_boxes[1].x2 == 7', 'bbs_norm[0].bounding_boxes[1].y2 == 8', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 2', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'bbs_norm[0].bounding_boxes[1].x1 == 5', 'bbs_norm[0].bounding_boxes[1].y1 == 6', 'bbs_norm[0].bounding_boxes[1].x2 == 7', 'bbs_norm[0].bounding_boxes[1].y2 == 8', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'isinstance(bbs_norm[1], ia.BoundingBoxesOnImage)', 'len(bbs_norm[1].bounding_boxes) == 1', 'bbs_norm[1].bounding_boxes[0].x1 == 5', 'bbs_norm[1].bounding_boxes[0].y1 == 6', 'bbs_norm[1].bounding_boxes[0].x2 == 7', 'bbs_norm[1].bounding_boxes[0].y2 == 8', 'bbs_norm is None', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'len(bbs_norm[1].bounding_boxes) == 2', 'bbs_norm[1].bounding_boxes[0].x1 == 5', 'bbs_norm[1].bounding_boxes[0].y1 == 6', 'bbs_norm[1].bounding_boxes[0].x2 == 7', 'bbs_norm[1].bounding_boxes[0].y2 == 8', 'bbs_norm[1].bounding_boxes[1].x1 == 9', 'bbs_norm[1].bounding_boxes[1].y1 == 10', 'bbs_norm[1].bounding_boxes[1].x2 == 11', 'bbs_norm[1].bounding_boxes[1].y2 == 12', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 2', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'bbs_norm[0].bounding_boxes[1].x1 == 5', 'bbs_norm[0].bounding_boxes[1].y1 == 6', 'bbs_norm[0].bounding_boxes[1].x2 == 7', 'bbs_norm[0].bounding_boxes[1].y2 == 8', 'len(bbs_norm[1].bounding_boxes) == 2', 'bbs_norm[1].bounding_boxes[0].x1 == 9', 'bbs_norm[1].bounding_boxes[0].y1 == 10', 'bbs_norm[1].bounding_boxes[0].x2 == 11', 'bbs_norm[1].bounding_boxes[0].y2 == 12', 'bbs_norm[1].bounding_boxes[1].x1 == 13', 'bbs_norm[1].bounding_boxes[1].y1 == 14', 'bbs_norm[1].bounding_boxes[1].x2 == 15', 'bbs_norm[1].bounding_boxes[1].y2 == 16', 'polygons_norm is None', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'np.allclose(polygons_norm[0].polygons[0].exterior,', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 5', 'np.allclose(polygons_norm[0].polygons[0].exterior,', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm is None', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'np.allclose(polygons_norm[0].polygons[0].exterior,', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 5', 'np.allclose(polygons_norm[0].polygons[0].exterior,', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm[0].polygons[1].exterior_almost_equals(coords2)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'isinstance(polygons_norm[1], ia.PolygonsOnImage)', 'len(polygons_norm[1].polygons) == 1', 'polygons_norm[1].polygons[0].exterior_almost_equals(coords2)', 'polygons_norm is None', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'np.allclose(polygons_norm[0].polygons[0].exterior,', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 5', 'np.allclose(polygons_norm[0].polygons[0].exterior,', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm[0].polygons[1].exterior_almost_equals(coords2)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm[0].polygons[1].exterior_almost_equals(coords2)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'isinstance(polygons_norm[1], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm[0].polygons[1].exterior_almost_equals(coords2)', 'len(polygons_norm[1].polygons) == 2', 'polygons_norm[1].polygons[0].exterior_almost_equals(coords3)', 'polygons_norm[1].polygons[1].exterior_almost_equals(coords4)', 'polygons_norm is None', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm[0].polygons[1].exterior_almost_equals(coords2)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[1].polygons[0].exterior_almost_equals(coords3)', 'polygons_norm[1].polygons[1].exterior_almost_equals(coords4)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm[0].polygons[1].exterior_almost_equals(coords2)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[1].polygons[0].exterior_almost_equals(coords3)', 'polygons_norm[1].polygons[1].exterior_almost_equals(coords4)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'observed[0] is None', 'observed[1] is True', 'len(observed[2]) == 0', 'observed[0] is None', 'observed[1] is True', 'len(observed[2]) == 1', 'observed[2][0] == ', 'ia.is_np_array(observed[0])', 'observed[0].shape == (4, 4, 3)', 'observed[1] is True', 'len(observed[2]) == 0', 'observed[0] == 0', 'observed[1] is True', 'len(observed[2]) == 0', 'observed[0] == ', 'observed[1] is True', 'len(observed[2]) == 0', 'observed[0] is None', 'observed[1] is False', 'len(observed[2]) == 0', 'observed[0] is None', 'observed[1] is False', 'len(observed[2]) == 1', 'observed[0] is None', 'observed[1] is False', 'len(observed[2]) == 2', 'observed[0] is None', 'observed[1] is True', 'len(observed[2]) == 1', 'ia.is_np_array(observed[0])', 'observed[0].shape == (4, 4, 3)', 'observed[1] is True', 'len(observed[2]) == 1', 'ia.is_np_array(observed[0])', 'observed[0].shape == (4, 4, 3)', 'observed[1] is True', 'len(observed[2]) == 2', 'ia.is_np_array(observed[0])', 'observed[0].shape == (4, 4, 3)', 'observed[1] is True', 'len(observed[2]) == 2', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == cls_name', 'ntype ==  % (cls_name,)', 'ntype ==  % (cls_name,)', 'len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)', 'len(caught_warnings) == 2', 'in str(caught_warnings[-1].message)', 'len(caught_warnings) == 3', 'in str(caught_warnings[-1].message)', 'len(caught_warnings) == 4', 'in str(caught_warnings[-1].message)', 'len(caught_warnings) == 5', 'in str(caught_warnings[-1].message)', 'len(keys) >= 12', 'getattr(observed, attr_name) is None', 'getattr(observed, attr_name) is None', 'ia.is_np_array(observed.images_unaug)', 'getattr(observed, attr_name) is None', 'ia.is_np_array(observed.images_unaug)', 'observed.images_unaug.shape == (1, 1, 3)', 'isinstance(observed.heatmaps_unaug[0], ia.HeatmapsOnImage)', 'isinstance(observed.segmentation_maps_unaug[0],', 'isinstance(observed.keypoints_unaug[0], ia.KeypointsOnImage)', 'isinstance(observed.bounding_boxes_unaug[0],', 'isinstance(observed.polygons_unaug[0], ia.PolygonsOnImage)', 'isinstance(observed.data, dict)', 'observed.heatmaps_unaug[0].shape == (4, 4, 3)', 'observed.segmentation_maps_unaug[0].shape == (5, 5, 3)', 'observed.keypoints_unaug[0].shape == (6, 6, 3)', 'observed.bounding_boxes_unaug[0].shape == (7, 7, 3)', 'observed.polygons_unaug[0].shape == (100, 100, 3)', 'observed.heatmaps_unaug[0].arr_0to1.shape == (1, 1, 1)', 'observed.segmentation_maps_unaug[0].arr.shape == (1, 1, 20)', 'observed.keypoints_unaug[0].keypoints[0].x == 1', 'observed.keypoints_unaug[0].keypoints[0].y == 2', 'observed.bounding_boxes_unaug[0].bounding_boxes[0].x1 == 1', 'observed.bounding_boxes_unaug[0].bounding_boxes[0].y1 == 2', 'observed.bounding_boxes_unaug[0].bounding_boxes[0].x2 == 3', 'observed.bounding_boxes_unaug[0].bounding_boxes[0].y2 == 4', 'observed.polygons_unaug[0].polygons[0].exterior[0, 0] == 0', 'observed.polygons_unaug[0].polygons[0].exterior[0, 1] == 0', 'observed.polygons_unaug[0].polygons[0].exterior[1, 0] == 10', 'observed.polygons_unaug[0].polygons[0].exterior[1, 1] == 0', 'observed.polygons_unaug[0].polygons[0].exterior[2, 0] == 10', 'observed.polygons_unaug[0].polygons[0].exterior[2, 1] == 10', 'observed.data[] == 123', 'observed.data[', 'observed.data[] == [1, 2, 3]']",[],[],[],[],[],[],[],[],[],[],[],[]
1312,aleju,kontakt@ajung.name,2019-03-24 11:39:12+01:00,94cb0cf2a199cce9f186ee317ef3bcc12f6b3b9f,https://github.com/aleju/imgaug/commit/94cb0cf2a199cce9f186ee317ef3bcc12f6b3b9f,Add moved class/functions to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1313,aleju,kontakt@ajung.name,2019-03-24 12:16:48+01:00,e20b9589274a5938e218e66d9babc26b1121f58f,https://github.com/aleju/imgaug/commit/e20b9589274a5938e218e66d9babc26b1121f58f,Mark old classes/funcs in imgaug.imgaug as deprecated,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)', 'len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)', 'len(caught_warnings) == 0']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1314,aleju,kontakt@ajung.name,2019-03-24 18:18:55+01:00,02b6f21905f083a6d2488786d3ce12ed697b5563,https://github.com/aleju/imgaug/commit/02b6f21905f083a6d2488786d3ce12ed697b5563,Move normalization from batches.py to normalization.py,4,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,106,1,0,0,0,0,0,0,1,3,0,106,0,0,0,0,0,0,0,0,0,460,0,0,0,0,0,0,0,0,0,0,0,0,461,0,0,0,0,0,0,0,0,0,0,0,0,['class TestNormalization(unittest.TestCase):'],"[('Raises', '(ValueError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):')]",['def setUp(self):'],[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],"[('Raises', '(ValueError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):')]",[],[],[],[],[],[],[],[],[],"['normalization.normalize_images(None) is None', 'ia.is_np_array(observed)', 'observed.shape == (1, 4, 4, 3)', 'observed.dtype.name == ', 'ia.is_np_array(observed)', 'observed.shape == (1, 4, 4, 1)', 'observed.dtype.name == ', 'ia.is_np_array(observed)', 'observed.shape == (1, 4, 4, 1)', 'observed.dtype.name == ', 'isinstance(observed, list)', 'len(observed) == 0', 'isinstance(observed, list)', 'len(observed) == 2', 'ia.is_np_array(observed[0])', 'ia.is_np_array(observed[1])', 'observed[0].shape == (4, 4)', 'observed[1].shape == (5, 5, 3)', 'observed[0].dtype.name == ', 'observed[1].dtype.name == ', 'heatmaps_norm is None', 'isinstance(heatmaps_norm, list)', 'isinstance(heatmaps_norm[0], ia.HeatmapsOnImage)', 'np.allclose(heatmaps_norm[0].arr_0to1, 0 + 0.1)', 'isinstance(heatmaps_norm, list)', 'isinstance(heatmaps_norm[0], ia.HeatmapsOnImage)', 'np.allclose(heatmaps_norm[0].arr_0to1, 0 + 0.1)', 'isinstance(heatmaps_norm, list)', 'isinstance(heatmaps_norm[0], ia.HeatmapsOnImage)', 'np.allclose(heatmaps_norm[0].arr_0to1, 0 + 0.1)', 'heatmaps_norm is None', 'isinstance(heatmaps_norm, list)', 'isinstance(heatmaps_norm[0], ia.HeatmapsOnImage)', 'np.allclose(heatmaps_norm[0].arr_0to1, 0 + 0.1)', 'isinstance(heatmaps_norm, list)', 'isinstance(heatmaps_norm[0], ia.HeatmapsOnImage)', 'np.allclose(heatmaps_norm[0].arr_0to1, 0 + 0.1)', 'isinstance(heatmaps_norm, list)', 'isinstance(heatmaps_norm[0], ia.HeatmapsOnImage)', 'np.allclose(heatmaps_norm[0].arr_0to1, 0 + 0.1)', 'segmaps_norm is None', 'isinstance(segmaps_norm, list)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 1)', 'isinstance(segmaps_norm, list)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 1)', 'isinstance(segmaps_norm, list)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 0 + 1)', 'segmaps_norm is None', 'isinstance(segmaps_norm, list)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 1)', 'isinstance(segmaps_norm, list)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 1)', 'isinstance(segmaps_norm, list)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 1)', 'keypoints_norm is None', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 1', 'np.allclose(keypoints_norm[0].get_coords_array(), 1)', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 5', 'np.allclose(keypoints_norm[0].get_coords_array(), 1)', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 1', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 1', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 1', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'keypoints_norm is None', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 1', 'np.allclose(keypoints_norm[0].get_coords_array(), 1)', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 5', 'np.allclose(keypoints_norm[0].get_coords_array(), 1)', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 2', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'keypoints_norm[0].keypoints[1].x == 3', 'keypoints_norm[0].keypoints[1].y == 4', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 2', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'keypoints_norm[0].keypoints[1].x == 3', 'keypoints_norm[0].keypoints[1].y == 4', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 1', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'isinstance(keypoints_norm[1], ia.KeypointsOnImage)', 'len(keypoints_norm[1].keypoints) == 1', 'keypoints_norm[1].keypoints[0].x == 3', 'keypoints_norm[1].keypoints[0].y == 4', 'keypoints_norm is None', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 2', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'keypoints_norm[0].keypoints[1].x == 3', 'keypoints_norm[0].keypoints[1].y == 4', 'len(keypoints_norm[1].keypoints) == 2', 'keypoints_norm[1].keypoints[0].x == 5', 'keypoints_norm[1].keypoints[0].y == 6', 'keypoints_norm[1].keypoints[1].x == 7', 'keypoints_norm[1].keypoints[1].y == 8', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 2', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'keypoints_norm[0].keypoints[1].x == 3', 'keypoints_norm[0].keypoints[1].y == 4', 'len(keypoints_norm[1].keypoints) == 2', 'keypoints_norm[1].keypoints[0].x == 5', 'keypoints_norm[1].keypoints[0].y == 6', 'keypoints_norm[1].keypoints[1].x == 7', 'keypoints_norm[1].keypoints[1].y == 8', 'bbs_norm is None', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'np.allclose(bbs_norm[0].to_xyxy_array(), 1)', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 5', 'np.allclose(bbs_norm[0].to_xyxy_array(), 1)', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'bbs_norm is None', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'np.allclose(bbs_norm[0].to_xyxy_array(), 1)', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 5', 'np.allclose(bbs_norm[0].to_xyxy_array(), 1)', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 2', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'bbs_norm[0].bounding_boxes[1].x1 == 5', 'bbs_norm[0].bounding_boxes[1].y1 == 6', 'bbs_norm[0].bounding_boxes[1].x2 == 7', 'bbs_norm[0].bounding_boxes[1].y2 == 8', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 2', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'bbs_norm[0].bounding_boxes[1].x1 == 5', 'bbs_norm[0].bounding_boxes[1].y1 == 6', 'bbs_norm[0].bounding_boxes[1].x2 == 7', 'bbs_norm[0].bounding_boxes[1].y2 == 8', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'isinstance(bbs_norm[1], ia.BoundingBoxesOnImage)', 'len(bbs_norm[1].bounding_boxes) == 1', 'bbs_norm[1].bounding_boxes[0].x1 == 5', 'bbs_norm[1].bounding_boxes[0].y1 == 6', 'bbs_norm[1].bounding_boxes[0].x2 == 7', 'bbs_norm[1].bounding_boxes[0].y2 == 8', 'bbs_norm is None', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'len(bbs_norm[1].bounding_boxes) == 2', 'bbs_norm[1].bounding_boxes[0].x1 == 5', 'bbs_norm[1].bounding_boxes[0].y1 == 6', 'bbs_norm[1].bounding_boxes[0].x2 == 7', 'bbs_norm[1].bounding_boxes[0].y2 == 8', 'bbs_norm[1].bounding_boxes[1].x1 == 9', 'bbs_norm[1].bounding_boxes[1].y1 == 10', 'bbs_norm[1].bounding_boxes[1].x2 == 11', 'bbs_norm[1].bounding_boxes[1].y2 == 12', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 2', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'bbs_norm[0].bounding_boxes[1].x1 == 5', 'bbs_norm[0].bounding_boxes[1].y1 == 6', 'bbs_norm[0].bounding_boxes[1].x2 == 7', 'bbs_norm[0].bounding_boxes[1].y2 == 8', 'len(bbs_norm[1].bounding_boxes) == 2', 'bbs_norm[1].bounding_boxes[0].x1 == 9', 'bbs_norm[1].bounding_boxes[0].y1 == 10', 'bbs_norm[1].bounding_boxes[0].x2 == 11', 'bbs_norm[1].bounding_boxes[0].y2 == 12', 'bbs_norm[1].bounding_boxes[1].x1 == 13', 'bbs_norm[1].bounding_boxes[1].y1 == 14', 'bbs_norm[1].bounding_boxes[1].x2 == 15', 'bbs_norm[1].bounding_boxes[1].y2 == 16', 'polygons_norm is None', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'np.allclose(polygons_norm[0].polygons[0].exterior,', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 5', 'np.allclose(polygons_norm[0].polygons[0].exterior,', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm is None', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'np.allclose(polygons_norm[0].polygons[0].exterior,', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 5', 'np.allclose(polygons_norm[0].polygons[0].exterior,', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm[0].polygons[1].exterior_almost_equals(coords2)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'isinstance(polygons_norm[1], ia.PolygonsOnImage)', 'len(polygons_norm[1].polygons) == 1', 'polygons_norm[1].polygons[0].exterior_almost_equals(coords2)', 'polygons_norm is None', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'np.allclose(polygons_norm[0].polygons[0].exterior,', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 5', 'np.allclose(polygons_norm[0].polygons[0].exterior,', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm[0].polygons[1].exterior_almost_equals(coords2)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm[0].polygons[1].exterior_almost_equals(coords2)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'isinstance(polygons_norm[1], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm[0].polygons[1].exterior_almost_equals(coords2)', 'len(polygons_norm[1].polygons) == 2', 'polygons_norm[1].polygons[0].exterior_almost_equals(coords3)', 'polygons_norm[1].polygons[1].exterior_almost_equals(coords4)', 'polygons_norm is None', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm[0].polygons[1].exterior_almost_equals(coords2)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[1].polygons[0].exterior_almost_equals(coords3)', 'polygons_norm[1].polygons[1].exterior_almost_equals(coords4)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm[0].polygons[1].exterior_almost_equals(coords2)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[1].polygons[0].exterior_almost_equals(coords3)', 'polygons_norm[1].polygons[1].exterior_almost_equals(coords4)', 'observed[0] is None', 'observed[1] is True', 'len(observed[2]) == 0', 'observed[0] is None', 'observed[1] is True', 'len(observed[2]) == 1', 'observed[2][0] == ', 'ia.is_np_array(observed[0])', 'observed[0].shape == (4, 4, 3)', 'observed[1] is True', 'len(observed[2]) == 0', 'observed[0] == 0', 'observed[1] is True', 'len(observed[2]) == 0', 'observed[0] == ', 'observed[1] is True', 'len(observed[2]) == 0', 'observed[0] is None', 'observed[1] is False', 'len(observed[2]) == 0', 'observed[0] is None', 'observed[1] is False', 'len(observed[2]) == 1', 'observed[0] is None', 'observed[1] is False', 'len(observed[2]) == 2', 'observed[0] is None', 'observed[1] is True', 'len(observed[2]) == 1', 'ia.is_np_array(observed[0])', 'observed[0].shape == (4, 4, 3)', 'observed[1] is True', 'len(observed[2]) == 1', 'ia.is_np_array(observed[0])', 'observed[0].shape == (4, 4, 3)', 'observed[1] is True', 'len(observed[2]) == 2', 'ia.is_np_array(observed[0])', 'observed[0].shape == (4, 4, 3)', 'observed[1] is True', 'len(observed[2]) == 2', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == cls_name', 'ntype ==  % (cls_name,)', 'ntype ==  % (cls_name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ']",[],[],[],[],[],[],[],[],[],[],[],[],"['batch.get_images_unaug_normalized() is None', 'batch.get_images_unaug_normalized() is None', 'ia.is_np_array(observed)', 'observed.shape == (1, 4, 4, 3)', 'observed.dtype.name == ', 'ia.is_np_array(observed)', 'observed.shape == (1, 4, 4, 3)', 'observed.dtype.name == ', 'ia.is_np_array(observed)', 'observed.shape == (1, 4, 4, 1)', 'observed.dtype.name == ', 'isinstance(batch.get_images_unaug_normalized(), list)', 'len(batch.get_images_unaug_normalized()) == 0', 'isinstance(observed, list)', 'len(observed) == 2', 'ia.is_np_array(observed[0])', 'ia.is_np_array(observed[1])', 'observed[0].shape == (4, 4)', 'observed[1].shape == (5, 5, 3)', 'observed[0].dtype.name == ', 'observed[1].dtype.name == ', 'heatmaps_norm is None', 'isinstance(heatmaps_norm, list)', 'isinstance(heatmaps_norm[0], ia.HeatmapsOnImage)', 'np.allclose(heatmaps_norm[0].arr_0to1, 0 + 0.1)', 'isinstance(heatmaps_norm, list)', 'isinstance(heatmaps_norm[0], ia.HeatmapsOnImage)', 'np.allclose(heatmaps_norm[0].arr_0to1, 0 + 0.1)', 'isinstance(heatmaps_norm, list)', 'isinstance(heatmaps_norm[0], ia.HeatmapsOnImage)', 'np.allclose(heatmaps_norm[0].arr_0to1, 0 + 0.1)', 'heatmaps_norm is None', 'isinstance(heatmaps_norm, list)', 'isinstance(heatmaps_norm[0], ia.HeatmapsOnImage)', 'np.allclose(heatmaps_norm[0].arr_0to1, 0 + 0.1)', 'isinstance(heatmaps_norm, list)', 'isinstance(heatmaps_norm[0], ia.HeatmapsOnImage)', 'np.allclose(heatmaps_norm[0].arr_0to1, 0 + 0.1)', 'isinstance(heatmaps_norm, list)', 'isinstance(heatmaps_norm[0], ia.HeatmapsOnImage)', 'np.allclose(heatmaps_norm[0].arr_0to1, 0 + 0.1)', 'segmaps_norm is None', 'isinstance(segmaps_norm, list)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 1)', 'isinstance(segmaps_norm, list)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 1)', 'isinstance(segmaps_norm, list)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 0 + 1)', 'segmaps_norm is None', 'isinstance(segmaps_norm, list)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 1)', 'isinstance(segmaps_norm, list)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 1)', 'isinstance(segmaps_norm, list)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 1)', 'keypoints_norm is None', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 1', 'np.allclose(keypoints_norm[0].get_coords_array(), 1)', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 5', 'np.allclose(keypoints_norm[0].get_coords_array(), 1)', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 1', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 1', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 1', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'keypoints_norm is None', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 1', 'np.allclose(keypoints_norm[0].get_coords_array(), 1)', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 5', 'np.allclose(keypoints_norm[0].get_coords_array(), 1)', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 2', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'keypoints_norm[0].keypoints[1].x == 3', 'keypoints_norm[0].keypoints[1].y == 4', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 2', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'keypoints_norm[0].keypoints[1].x == 3', 'keypoints_norm[0].keypoints[1].y == 4', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 1', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'isinstance(keypoints_norm[1], ia.KeypointsOnImage)', 'len(keypoints_norm[1].keypoints) == 1', 'keypoints_norm[1].keypoints[0].x == 3', 'keypoints_norm[1].keypoints[0].y == 4', 'keypoints_norm is None', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 2', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'keypoints_norm[0].keypoints[1].x == 3', 'keypoints_norm[0].keypoints[1].y == 4', 'len(keypoints_norm[1].keypoints) == 2', 'keypoints_norm[1].keypoints[0].x == 5', 'keypoints_norm[1].keypoints[0].y == 6', 'keypoints_norm[1].keypoints[1].x == 7', 'keypoints_norm[1].keypoints[1].y == 8', 'isinstance(keypoints_norm, list)', 'isinstance(keypoints_norm[0], ia.KeypointsOnImage)', 'len(keypoints_norm[0].keypoints) == 2', 'keypoints_norm[0].keypoints[0].x == 1', 'keypoints_norm[0].keypoints[0].y == 2', 'keypoints_norm[0].keypoints[1].x == 3', 'keypoints_norm[0].keypoints[1].y == 4', 'len(keypoints_norm[1].keypoints) == 2', 'keypoints_norm[1].keypoints[0].x == 5', 'keypoints_norm[1].keypoints[0].y == 6', 'keypoints_norm[1].keypoints[1].x == 7', 'keypoints_norm[1].keypoints[1].y == 8', 'bbs_norm is None', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'np.allclose(bbs_norm[0].to_xyxy_array(), 1)', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 5', 'np.allclose(bbs_norm[0].to_xyxy_array(), 1)', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'bbs_norm is None', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'np.allclose(bbs_norm[0].to_xyxy_array(), 1)', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 5', 'np.allclose(bbs_norm[0].to_xyxy_array(), 1)', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 2', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'bbs_norm[0].bounding_boxes[1].x1 == 5', 'bbs_norm[0].bounding_boxes[1].y1 == 6', 'bbs_norm[0].bounding_boxes[1].x2 == 7', 'bbs_norm[0].bounding_boxes[1].y2 == 8', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 2', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'bbs_norm[0].bounding_boxes[1].x1 == 5', 'bbs_norm[0].bounding_boxes[1].y1 == 6', 'bbs_norm[0].bounding_boxes[1].x2 == 7', 'bbs_norm[0].bounding_boxes[1].y2 == 8', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'isinstance(bbs_norm[1], ia.BoundingBoxesOnImage)', 'len(bbs_norm[1].bounding_boxes) == 1', 'bbs_norm[1].bounding_boxes[0].x1 == 5', 'bbs_norm[1].bounding_boxes[0].y1 == 6', 'bbs_norm[1].bounding_boxes[0].x2 == 7', 'bbs_norm[1].bounding_boxes[0].y2 == 8', 'bbs_norm is None', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 1', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'len(bbs_norm[1].bounding_boxes) == 2', 'bbs_norm[1].bounding_boxes[0].x1 == 5', 'bbs_norm[1].bounding_boxes[0].y1 == 6', 'bbs_norm[1].bounding_boxes[0].x2 == 7', 'bbs_norm[1].bounding_boxes[0].y2 == 8', 'bbs_norm[1].bounding_boxes[1].x1 == 9', 'bbs_norm[1].bounding_boxes[1].y1 == 10', 'bbs_norm[1].bounding_boxes[1].x2 == 11', 'bbs_norm[1].bounding_boxes[1].y2 == 12', 'isinstance(bbs_norm, list)', 'isinstance(bbs_norm[0], ia.BoundingBoxesOnImage)', 'len(bbs_norm[0].bounding_boxes) == 2', 'bbs_norm[0].bounding_boxes[0].x1 == 1', 'bbs_norm[0].bounding_boxes[0].y1 == 2', 'bbs_norm[0].bounding_boxes[0].x2 == 3', 'bbs_norm[0].bounding_boxes[0].y2 == 4', 'bbs_norm[0].bounding_boxes[1].x1 == 5', 'bbs_norm[0].bounding_boxes[1].y1 == 6', 'bbs_norm[0].bounding_boxes[1].x2 == 7', 'bbs_norm[0].bounding_boxes[1].y2 == 8', 'len(bbs_norm[1].bounding_boxes) == 2', 'bbs_norm[1].bounding_boxes[0].x1 == 9', 'bbs_norm[1].bounding_boxes[0].y1 == 10', 'bbs_norm[1].bounding_boxes[0].x2 == 11', 'bbs_norm[1].bounding_boxes[0].y2 == 12', 'bbs_norm[1].bounding_boxes[1].x1 == 13', 'bbs_norm[1].bounding_boxes[1].y1 == 14', 'bbs_norm[1].bounding_boxes[1].x2 == 15', 'bbs_norm[1].bounding_boxes[1].y2 == 16', 'polygons_norm is None', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'np.allclose(polygons_norm[0].polygons[0].exterior,', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 5', 'np.allclose(polygons_norm[0].polygons[0].exterior,', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm is None', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'np.allclose(polygons_norm[0].polygons[0].exterior,', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 5', 'np.allclose(polygons_norm[0].polygons[0].exterior,', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm[0].polygons[1].exterior_almost_equals(coords2)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'isinstance(polygons_norm[1], ia.PolygonsOnImage)', 'len(polygons_norm[1].polygons) == 1', 'polygons_norm[1].polygons[0].exterior_almost_equals(coords2)', 'polygons_norm is None', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 1', 'np.allclose(polygons_norm[0].polygons[0].exterior,', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 5', 'np.allclose(polygons_norm[0].polygons[0].exterior,', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm[0].polygons[1].exterior_almost_equals(coords2)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm[0].polygons[1].exterior_almost_equals(coords2)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'isinstance(polygons_norm[1], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm[0].polygons[1].exterior_almost_equals(coords2)', 'len(polygons_norm[1].polygons) == 2', 'polygons_norm[1].polygons[0].exterior_almost_equals(coords3)', 'polygons_norm[1].polygons[1].exterior_almost_equals(coords4)', 'polygons_norm is None', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm[0].polygons[1].exterior_almost_equals(coords2)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[1].polygons[0].exterior_almost_equals(coords3)', 'polygons_norm[1].polygons[1].exterior_almost_equals(coords4)', 'isinstance(polygons_norm, list)', 'isinstance(polygons_norm[0], ia.PolygonsOnImage)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[0].polygons[0].exterior_almost_equals(coords1)', 'polygons_norm[0].polygons[1].exterior_almost_equals(coords2)', 'len(polygons_norm[0].polygons) == 2', 'polygons_norm[1].polygons[0].exterior_almost_equals(coords3)', 'polygons_norm[1].polygons[1].exterior_almost_equals(coords4)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'observed[0] is None', 'observed[1] is True', 'len(observed[2]) == 0', 'observed[0] is None', 'observed[1] is True', 'len(observed[2]) == 1', 'observed[2][0] == ', 'ia.is_np_array(observed[0])', 'observed[0].shape == (4, 4, 3)', 'observed[1] is True', 'len(observed[2]) == 0', 'observed[0] == 0', 'observed[1] is True', 'len(observed[2]) == 0', 'observed[0] == ', 'observed[1] is True', 'len(observed[2]) == 0', 'observed[0] is None', 'observed[1] is False', 'len(observed[2]) == 0', 'observed[0] is None', 'observed[1] is False', 'len(observed[2]) == 1', 'observed[0] is None', 'observed[1] is False', 'len(observed[2]) == 2', 'observed[0] is None', 'observed[1] is True', 'len(observed[2]) == 1', 'ia.is_np_array(observed[0])', 'observed[0].shape == (4, 4, 3)', 'observed[1] is True', 'len(observed[2]) == 1', 'ia.is_np_array(observed[0])', 'observed[0].shape == (4, 4, 3)', 'observed[1] is True', 'len(observed[2]) == 2', 'ia.is_np_array(observed[0])', 'observed[0].shape == (4, 4, 3)', 'observed[1] is True', 'len(observed[2]) == 2', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == cls_name', 'ntype ==  % (cls_name,)', 'ntype ==  % (cls_name,)']",[],[],[],[],[],[],[],[],[],[],[],[]
1315,aleju,kontakt@ajung.name,2019-03-24 20:31:28+01:00,dd123cc6fb988ef555dba49a12283ed70b3e32bf,https://github.com/aleju/imgaug/commit/dd123cc6fb988ef555dba49a12283ed70b3e32bf,Add normalize/unnormalize methods to Batch,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1316,aleju,kontakt@ajung.name,2019-03-24 20:40:26+01:00,d564d9692a522d9c806306e54a2692001ce45308,https://github.com/aleju/imgaug/commit/d564d9692a522d9c806306e54a2692001ce45308,Fix wrong variable name,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1317,aleju,kontakt@ajung.name,2019-03-25 20:42:12+01:00,978be906e186615cc1d6c44e935d45924283532d,https://github.com/aleju/imgaug/commit/978be906e186615cc1d6c44e935d45924283532d,Add augment(); Mark non-Batch augment_batches() deprecated,4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,113,0,0,0,0,0,0,0,0,0,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(batches_aug[0].images_aug[0], image_flipped)', 'batches_aug[0].keypoints_aug[0].keypoints[0].x == kp_flipped.x', 'batches_aug[0].keypoints_aug[0].keypoints[0].y == kp_flipped.y', 'np.array_equal(batches_aug[0].images_unaug[0], image)', 'batches_aug[0].keypoints_unaug[0].keypoints[0].x == keypoint.x', 'batches_aug[0].keypoints_unaug[0].keypoints[0].y == keypoint.y', 'np.array_equal(batches_aug[0].images_aug, np.uint8([image_flipped]))', 'batches_aug[0].keypoints_aug[0].keypoints[0].x == kp_flipped.x', 'batches_aug[0].keypoints_aug[0].keypoints[0].y == kp_flipped.y', 'np.array_equal(batches_aug[0].images_unaug, np.uint8([image]))', 'batches_aug[0].keypoints_unaug[0].keypoints[0].x == keypoint.x', 'batches_aug[0].keypoints_unaug[0].keypoints[0].y == keypoint.y', 'np.array_equal(image_aug, image) or np.array_equal(image_aug, image_flipped)', '(keypoint_aug.x == keypoint.x and keypoint_aug.y == keypoint.y) \\', '0.4*nb_iterations <= nb_flipped_images <= 0.6*nb_iterations', 'nb_flipped_images == nb_flipped_keypoints', 'np.array_equal(image_aug, image) or np.array_equal(image_aug, image_flipped)', '(keypoint_aug.x == keypoint.x and keypoint_aug.y == keypoint.y) \\', '0.4*nb_iterations <= nb_flipped_images <= 0.6*nb_iterations', 'nb_flipped_images == nb_flipped_keypoints', 'np.array_equal(image_aug, image) or np.array_equal(image_aug, image_flipped)', '0.4*nb_iterations <= nb_flipped_images <= 0.6*nb_iterations', 'np.array_equal(image_aug, image) or np.array_equal(image_aug, image_flipped)', '0.4*nb_iterations <= nb_flipped_images <= 0.6*nb_iterations', '(keypoint_aug.x == keypoint.x and keypoint_aug.y == keypoint.y) \\', '0.4*nb_iterations <= nb_flipped_keypoints <= 0.6*nb_iterations', 'nb_changed > 0', 'nb_changed == 0', 'np.allclose(segmap_aug.arr, segmap.arr)', 'np.allclose(segmap_aug.arr, np.rot90(segmap.arr, -1))', 'np.allclose(segmaps_aug[i].arr, np.rot90(segmap.arr, -1))', 'image_aug.shape == image.shape', 'np.array_equal(image, image_aug)', 'np.array_equal(images_aug[0], image)', 'np.allclose(heatmaps_aug[0].arr_0to1, heatmaps.arr_0to1)', 'np.array_equal(images_aug[0], image)', 'np.allclose(segmaps_aug[0].arr, segmaps.arr)', 'np.array_equal(images_aug[0], image)', 'np.allclose(keypoints_aug[0].get_coords_array(),', 'np.array_equal(images_aug[0], image)', 'np.allclose(bbs_aug[0].to_xyxy_array(), bbs.to_xyxy_array())', 'np.array_equal(images_aug[0], image)', 'polygon_aug.exterior_almost_equals(polygon)', 'np.array_equal(image, image_aug)', 'np.array_equal(images_aug[0], image)', 'np.allclose(heatmaps_aug[0].arr_0to1, heatmaps.arr_0to1)', 'np.array_equal(images_aug[0], image)', 'np.allclose(segmaps_aug[0].arr, segmaps.arr)', 'np.array_equal(images_aug[0], image)', 'np.allclose(keypoints_aug[0].get_coords_array(),', 'np.array_equal(images_aug[0], image)', 'np.allclose(bbs_aug[0].to_xyxy_array(), bbs.to_xyxy_array())', 'np.array_equal(images_aug[0], image)', 'polygon_aug.exterior_almost_equals(polygon)', 'np.array_equal(images_aug[0], image)', 'np.allclose(segmaps_aug[0].arr, segmaps.arr)', 'np.allclose(keypoints_aug[0].get_coords_array(),', 'polygon_aug.exterior_almost_equals(polygon)', 'np.array_equal(images_aug[0], image)', 'np.allclose(segmaps_aug[0].arr, segmaps.arr)', 'np.allclose(keypoints_aug[0].get_coords_array(),', 'polygon_aug.exterior_almost_equals(polygon)', 'np.allclose(keypoints_aug[0].get_coords_array(),', 'polygon_aug.exterior_almost_equals(polygon)', 'np.array_equal(images_aug[0], image)', 'np.allclose(heatmaps_aug[0].arr_0to1, heatmaps.arr_0to1)', 'np.array_equal(images_aug[0], image)', 'np.allclose(segmaps_aug[0].arr, segmaps.arr)', 'np.array_equal(images_aug[0], image)', 'np.allclose(keypoints_aug[0].get_coords_array(),', 'np.array_equal(images_aug[0], image)', 'np.allclose(bbs_aug[0].to_xyxy_array(), bbs.to_xyxy_array())', 'np.array_equal(images_aug[0], image)', 'polygon_aug.exterior_almost_equals(polygon)', 'np.allclose(keypoints_aug[0].get_coords_array(),', 'polygon_aug.exterior_almost_equals(polygon)', 'np.array_equal(images_aug[0], image)', 'np.allclose(heatmaps_aug[0].arr_0to1, heatmaps.arr_0to1)', 'np.allclose(segmaps_aug[0].arr, segmaps.arr)', 'np.array_equal(images_aug[0], image)', 'np.allclose(segmaps_aug[0].arr, segmaps.arr)', 'np.allclose(keypoints_aug[0].get_coords_array(),', 'polygon_aug.exterior_almost_equals(polygon)', 'np.array_equal(images_aug[0], image)', 'np.allclose(heatmaps_aug[0].arr_0to1, heatmaps.arr_0to1)', 'np.allclose(segmaps_aug[0].arr, segmaps.arr)', 'np.array_equal(images_aug[0], image)', 'np.allclose(segmaps_aug[0].arr, segmaps.arr)', 'np.allclose(keypoints_aug[0].get_coords_array(),', 'polygon_aug.exterior_almost_equals(polygon)', 'np.array_equal(images_aug[0], image)', 'np.allclose(heatmaps_aug[0].arr_0to1, heatmaps.arr_0to1)', 'np.allclose(segmaps_aug[0].arr, segmaps.arr)', 'np.allclose(keypoints_aug[0].get_coords_array(),', 'np.allclose(bbs_aug[0].to_xyxy_array(), bbs.to_xyxy_array())', 'polygon_aug.exterior_almost_equals(polygon)', 'np.array_equal(images_aug[0], image)', 'np.allclose(heatmaps_aug[0].arr_0to1, heatmaps.arr_0to1)', 'np.allclose(segmaps_aug[0].arr, segmaps.arr)', 'np.allclose(keypoints_aug[0].get_coords_array(),', 'np.allclose(bbs_aug[0].to_xyxy_array(), bbs.to_xyxy_array())', 'polygon_aug.exterior_almost_equals(polygon)', 'msg in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'mock_Pool.call_count == 1', 'mock_Pool.__enter__.call_count == 1', 'mock_Pool.__exit__.call_count == 1', 'mock_Pool.call_args[0][0] == augseq', 'mock_Pool.call_args[1][] == 2', 'mock_Pool.call_args[1][] == 10', 'mock_Pool.call_args[1][] == 17']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(segmap_aug.arr, segmap.arr)', 'np.allclose(segmap_aug.arr, np.rot90(segmap.arr, -1))', 'np.allclose(segmaps_aug[i].arr, np.rot90(segmap.arr, -1))', 'np.array_equal(batches_aug[0].images_aug[0], image_flipped)', 'batches_aug[0].keypoints_aug[0].keypoints[0].x == kp_flipped.x', 'batches_aug[0].keypoints_aug[0].keypoints[0].y == kp_flipped.y', 'np.array_equal(batches_aug[0].images_unaug[0], image)', 'batches_aug[0].keypoints_unaug[0].keypoints[0].x == keypoint.x', 'batches_aug[0].keypoints_unaug[0].keypoints[0].y == keypoint.y', 'np.array_equal(batches_aug[0].images_aug, np.uint8([image_flipped]))', 'batches_aug[0].keypoints_aug[0].keypoints[0].x == kp_flipped.x', 'batches_aug[0].keypoints_aug[0].keypoints[0].y == kp_flipped.y', 'np.array_equal(batches_aug[0].images_unaug, np.uint8([image]))', 'batches_aug[0].keypoints_unaug[0].keypoints[0].x == keypoint.x', 'batches_aug[0].keypoints_unaug[0].keypoints[0].y == keypoint.y', 'np.array_equal(image_aug, image) or np.array_equal(image_aug, image_flipped)', '(keypoint_aug.x == keypoint.x and keypoint_aug.y == keypoint.y) \\', '0.4*nb_iterations <= nb_flipped_images <= 0.6*nb_iterations', 'nb_flipped_images == nb_flipped_keypoints', 'np.array_equal(image_aug, image) or np.array_equal(image_aug, image_flipped)', '(keypoint_aug.x == keypoint.x and keypoint_aug.y == keypoint.y) \\', '0.4*nb_iterations <= nb_flipped_images <= 0.6*nb_iterations', 'nb_flipped_images == nb_flipped_keypoints', 'np.array_equal(image_aug, image) or np.array_equal(image_aug, image_flipped)', '0.4*nb_iterations <= nb_flipped_images <= 0.6*nb_iterations', 'np.array_equal(image_aug, image) or np.array_equal(image_aug, image_flipped)', '0.4*nb_iterations <= nb_flipped_images <= 0.6*nb_iterations', '(keypoint_aug.x == keypoint.x and keypoint_aug.y == keypoint.y) \\', '0.4*nb_iterations <= nb_flipped_keypoints <= 0.6*nb_iterations', 'nb_changed > 0', 'nb_changed == 0', 'mock_Pool.call_count == 1', 'mock_Pool.__enter__.call_count == 1', 'mock_Pool.__exit__.call_count == 1', 'mock_Pool.call_args[0][0] == augseq', 'mock_Pool.call_args[1][] == 2', 'mock_Pool.call_args[1][] == 10', 'mock_Pool.call_args[1][] == 17']",[],[],[],[],[],[],[],[],[],[],[],[]
1318,aleju,kontakt@ajung.name,2019-03-26 19:15:47+01:00,8c4910d219cad49637fbb3d9253a890d29068e91,https://github.com/aleju/imgaug/commit/8c4910d219cad49637fbb3d9253a890d29068e91,Add __call__ method to Augmenter,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(images_aug[0], image)', 'np.allclose(heatmaps_aug[0].arr_0to1, heatmaps.arr_0to1)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1319,aleju,kontakt@ajung.name,2019-03-26 19:34:49+01:00,cde279018129512cabffa809044e2170608b07d1,https://github.com/aleju/imgaug/commit/cde279018129512cabffa809044e2170608b07d1,Add test for invert_normalize_images(),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Raises', '(ValueError):')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['normalization.invert_normalize_images(None, None) is None', 'ia.is_np_array(observed)', 'observed.shape == (1, 4, 4, 3)', 'observed.dtype.name == ', 'ia.is_np_array(observed)', 'observed.shape == (4, 4)', 'observed.dtype.name == ', 'ia.is_np_array(observed)', 'observed.shape == (1, 4, 4)', 'observed.dtype.name == ', 'isinstance(observed, list)', 'len(observed) == 0', 'isinstance(observed, list)', 'len(observed) == 2', 'ia.is_np_array(observed[0])', 'ia.is_np_array(observed[1])', 'observed[0].shape == (4, 4)', 'observed[1].shape == (5, 5, 3)', 'observed[0].dtype.name == ', 'observed[1].dtype.name == ']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1320,aleju,kontakt@ajung.name,2019-03-26 19:55:44+01:00,7ce6ab2b22bdf6e27c88cb0839768e0458f00e51,https://github.com/aleju/imgaug/commit/7ce6ab2b22bdf6e27c88cb0839768e0458f00e51,Improve image normalization for lists of arrays,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed[0].shape == (4, 4, 1)']",[],[],[],[],[],[],[],[],[],[],[],[],"['observed[0].shape == (4, 4)']",[],[],[],[],[],[],[],[],[],[],[],[]
1321,aleju,kontakt@ajung.name,2019-03-26 20:16:39+01:00,25aa3f6f9d41ab1d06a1d7b3a035923e27d8eca2,https://github.com/aleju/imgaug/commit/25aa3f6f9d41ab1d06a1d7b3a035923e27d8eca2,Fix invert_normalize_heatmaps(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1322,aleju,kontakt@ajung.name,2019-03-26 20:16:59+01:00,b149171474fb9c10562250cbced47200361201d9,https://github.com/aleju/imgaug/commit/b149171474fb9c10562250cbced47200361201d9,Add test for invert_normalize_heatmaps(),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed is None', 'ia.is_np_array(after)', 'after.shape == (1, 1, 1, 1)', 'after.dtype.name == ', 'np.allclose(after, before)', 'ia.is_np_array(after)', 'after.shape == (1, 1, 1, 1)', 'after.dtype.name == ', 'np.allclose(after, before)', 'isinstance(after, ia.HeatmapsOnImage)', 'np.allclose(after.arr_0to1, before.arr_0to1)', 'isinstance(after, list)', 'len(after) == 0', 'isinstance(after, list)', 'len(after) == 1', 'after[0].shape == (1, 1, 1)', 'after[0].dtype.name == ', 'np.allclose(after[0], before[0])', 'isinstance(after, list)', 'len(after) == 1', 'after[0].shape == (1, 1, 1)', 'after[0].dtype.name == ', 'np.allclose(after[0], before[0])', 'isinstance(after, list)', 'isinstance(after[0], ia.HeatmapsOnImage)', 'np.allclose(after[0].arr_0to1, before[0].arr_0to1)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1323,aleju,kontakt@ajung.name,2019-03-26 21:56:26+01:00,b22545b1c45d878eb547507aa1cdc596bd44b25c,https://github.com/aleju/imgaug/commit/b22545b1c45d878eb547507aa1cdc596bd44b25c,Add clip_(); Fix errors in clip_to_value_range_(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1324,aleju,kontakt@ajung.name,2019-03-26 21:56:41+01:00,959a79ea9575d7b8c016c044b563943de6852a27,https://github.com/aleju/imgaug/commit/959a79ea9575d7b8c016c044b563943de6852a27,Add test for clip_(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, np.int32([0, 1, 2, 3, 4, 5]))', 'np.array_equal(observed, np.int32([0, 1, 2, 3, 4, 5]))', 'np.array_equal(observed, np.int32([0, 1, 2, 3, 4, 4]))', 'np.allclose(observed, np.float32([0.0]))', 'np.allclose(observed, np.float32([-1.0]))', 'np.array_equal(observed, np.uint32([0]))', 'np.array_equal(observed, np.uint32([1]))', 'np.array_equal(observed, np.uint32([1]))', 'np.array_equal(observed, np.uint32([1]))', 'np.array_equal(observed, np.uint32([1]))', 'np.array_equal(observed, np.int8([127]))', 'np.array_equal(observed, np.int8([127]))', 'np.array_equal(observed, np.int8([127]))', 'np.array_equal(observed, np.int8([1]))', 'np.array_equal(observed, np.int8([1]))', 'np.array_equal(observed, np.int8([1]))', 'np.array_equal(observed, np.int8([1]))', 'np.array_equal(observed, np.int8([-1]))', 'np.array_equal(observed, np.int8(-10))', 'np.array_equal(observed, np.int8(-1))', 'np.array_equal(observed, np.int8(1))']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1325,aleju,kontakt@ajung.name,2019-03-26 22:01:06+01:00,59db2cf444d9c14fcbe36d1d01921c713cb7b571,https://github.com/aleju/imgaug/commit/59db2cf444d9c14fcbe36d1d01921c713cb7b571,Use clip_() in restore_dtypes_(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1326,aleju,kontakt@ajung.name,2019-03-26 22:08:50+01:00,879b63bdc4cf88f6c2e08ddae845ab590baef45c,https://github.com/aleju/imgaug/commit/879b63bdc4cf88f6c2e08ddae845ab590baef45c,Use restore_dtypes_() in normalization,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1327,aleju,kontakt@ajung.name,2019-03-26 22:09:43+01:00,2966d8d4a2115b8d9dbce66b59185e2de27f0605,https://github.com/aleju/imgaug/commit/2966d8d4a2115b8d9dbce66b59185e2de27f0605,Fix expected shapes in normalize_segmentation_maps(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1328,aleju,kontakt@ajung.name,2019-03-26 22:10:15+01:00,36fcef74b71e44a4ca5e2b92803d88e4b387fa52,https://github.com/aleju/imgaug/commit/36fcef74b71e44a4ca5e2b92803d88e4b387fa52,Fix invert_normalize_seg._maps() for arrays,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1329,aleju,kontakt@ajung.name,2019-03-26 22:10:44+01:00,9314d012fc31b6641628ed5f8b356319e3309e47,https://github.com/aleju/imgaug/commit/9314d012fc31b6641628ed5f8b356319e3309e47,Add test for invert_normalize_segmentation_maps(),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],"[('Raises', '(AssertionError):')]",[],[],[],[],[],[],[],[],[],"['ia.is_np_array(after)', 'after.shape == (1, 1, 1, 1)', 'after.dtype.name == ', 'np.allclose(after, before)', 'after.shape == before.shape', 'isinstance(after, list)', 'len(after) == 1', 'after[0].shape == (1, 1, 1)', 'after[0].dtype.name == ', 'np.allclose(after[0], before[0])', 'after[0].shape == before[0].shape', 'observed is None', 'ia.is_np_array(after)', 'after.shape == (1, 1, 1)', 'after.dtype.name == dt.name', 'np.array_equal(after, before)', 'isinstance(after, ia.SegmentationMapOnImage)', 'after.shape == before.shape', 'np.array_equal(after.arr, before.arr)', 'isinstance(after, list)', 'len(after) == 0', 'isinstance(after, list)', 'len(after) == 1', 'after[0].shape == (1, 1)', 'after[0].dtype.name == dt.name', 'np.array_equal(after[0], before[0])', 'isinstance(after, list)', 'isinstance(after[0], ia.SegmentationMapOnImage)', 'after[0].shape == before[0].shape', 'np.allclose(after[0].arr, before[0].arr)']",[],[],[],[],[],[],[],[],[],[],[],[],"['ia.is_np_array(after)', 'after.shape == (1, 1, 1, 1)', 'after.dtype.name == ', 'np.allclose(after, before)', 'ia.is_np_array(after)', 'after.shape == (1, 1, 1, 1)', 'after.dtype.name == ', 'np.allclose(after, before)', 'isinstance(after, list)', 'len(after) == 1', 'after[0].shape == (1, 1, 1)', 'after[0].dtype.name == ', 'np.allclose(after[0], before[0])', 'isinstance(after, list)', 'len(after) == 1', 'after[0].shape == (1, 1, 1)', 'after[0].dtype.name == ', 'np.allclose(after[0], before[0])']",[],[],[],[],[],[],[],[],[],[],[],[]
1330,aleju,kontakt@ajung.name,2019-03-26 22:11:13+01:00,7782fff1f15645cb59e7bacfa7a1abf2903703a2,https://github.com/aleju/imgaug/commit/7782fff1f15645cb59e7bacfa7a1abf2903703a2,Remove dead code,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1331,aleju,kontakt@ajung.name,2019-03-27 17:32:38+01:00,79d4ce5e9e4b333d6e040758fcd3dff03478d8d0,https://github.com/aleju/imgaug/commit/79d4ce5e9e4b333d6e040758fcd3dff03478d8d0,Fix missing KP unnormalize for iterable-Keypoint,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1332,aleju,kontakt@ajung.name,2019-03-27 17:32:58+01:00,34d2be29e027632355fd47851e031d7545356441,https://github.com/aleju/imgaug/commit/34d2be29e027632355fd47851e031d7545356441,Add test for invert_normalize_keypoints(),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed is None', 'ia.is_np_array(after)', 'after.shape == (1, 1, 2)', 'after.dtype.name == dt.name', 'np.allclose(after, 1)', 'isinstance(after, tuple)', 'after == (1, 2)', 'isinstance(after, ia.Keypoint)', 'after.x == 1', 'after.y == 2', 'isinstance(after, ia.KeypointsOnImage)', 'len(after.keypoints) == 1', 'after.keypoints[0].x == 1', 'after.keypoints[0].y == 2', 'after.shape == (1, 1, 3)', 'after == []', 'ia.is_np_array(after)', 'after.shape == (1, 1, 2)', 'after.dtype.name == dt.name', 'np.allclose(after, 1)', 'isinstance(after, list)', 'after == [(1, 2), (3, 4)]', 'isinstance(after, list)', 'len(after) == 2', 'isinstance(after[0], ia.Keypoint)', 'isinstance(after[1], ia.Keypoint)', 'after[0].x == 1', 'after[0].y == 2', 'after[1].x == 3', 'after[1].y == 4', 'isinstance(after, list)', 'len(after) == 2', 'isinstance(after[0], ia.KeypointsOnImage)', 'isinstance(after[1], ia.KeypointsOnImage)', 'after[0].keypoints[0].x == 1', 'after[0].keypoints[0].y == 2', 'after[1].keypoints[0].x == 3', 'after[1].keypoints[0].y == 4', 'after == [[]]', 'isinstance(after, list)', 'len(after) == 2', 'isinstance(after[0], list)', 'isinstance(after[1], list)', 'after[0][0][0] == 1', 'after[0][0][1] == 2', 'after[0][1][0] == 3', 'after[0][1][1] == 4', 'after[1][0][0] == 5', 'after[1][0][1] == 6', 'after[1][1][0] == 7', 'after[1][1][1] == 8', 'isinstance(after, list)', 'len(after) == 2', 'isinstance(after[0], list)', 'isinstance(after[1], list)', 'after[0][0].x == 1', 'after[0][0].y == 2', 'after[0][1].x == 3', 'after[0][1].y == 4', 'after[1][0].x == 5', 'after[1][0].y == 6', 'after[1][1].x == 7', 'after[1][1].y == 8']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1333,aleju,kontakt@ajung.name,2019-03-27 19:23:37+01:00,224164dcf79d09d8e3dbe8b16ccf551587817b2e,https://github.com/aleju/imgaug/commit/224164dcf79d09d8e3dbe8b16ccf551587817b2e,Fix iterable-BoundingBox in invert_normalize_bounding_boxes(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1334,aleju,kontakt@ajung.name,2019-03-27 19:23:57+01:00,63969b480e394b549dba804479c29df0e0709fcc,https://github.com/aleju/imgaug/commit/63969b480e394b549dba804479c29df0e0709fcc,Add test for invert_normalize_bounding_boxes(),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed is None', 'ia.is_np_array(after)', 'after.shape == (1, 1, 4)', 'after.dtype.name == dt.name', 'np.allclose(after, 1)', 'isinstance(after, tuple)', 'after == (1, 2, 3, 4)', 'isinstance(after, ia.BoundingBox)', 'after.x1 == 1', 'after.y1 == 2', 'after.x2 == 3', 'after.y2 == 4', 'isinstance(after, ia.BoundingBoxesOnImage)', 'len(after.bounding_boxes) == 1', 'after.bounding_boxes[0].x1 == 1', 'after.bounding_boxes[0].y1 == 2', 'after.bounding_boxes[0].x2 == 3', 'after.bounding_boxes[0].y2 == 4', 'after.shape == (1, 1, 3)', 'after == []', 'isinstance(after, list)', 'len(after) == 1', 'ia.is_np_array(after[0])', 'after[0].shape == (1, 4)', 'after[0].dtype.name == dt.name', 'np.allclose(after[0], 1)', 'isinstance(after, list)', 'after == [(1, 2, 3, 4), (5, 6, 7, 8)]', 'isinstance(after, list)', 'len(after) == 2', 'isinstance(after[0], ia.BoundingBox)', 'isinstance(after[1], ia.BoundingBox)', 'after[0].x1 == 1', 'after[0].y1 == 2', 'after[0].x2 == 3', 'after[0].y2 == 4', 'after[1].x1 == 5', 'after[1].y1 == 6', 'after[1].x2 == 7', 'after[1].y2 == 8', 'isinstance(after, list)', 'len(after) == 2', 'isinstance(after[0], ia.BoundingBoxesOnImage)', 'isinstance(after[1], ia.BoundingBoxesOnImage)', 'isinstance(after[0].bounding_boxes[0], ia.BoundingBox)', 'isinstance(after[1].bounding_boxes[0], ia.BoundingBox)', 'after[0].bounding_boxes[0].x1 == 1', 'after[0].bounding_boxes[0].y1 == 2', 'after[0].bounding_boxes[0].x2 == 3', 'after[0].bounding_boxes[0].y2 == 4', 'after[1].bounding_boxes[0].x1 == 5', 'after[1].bounding_boxes[0].y1 == 6', 'after[1].bounding_boxes[0].x2 == 7', 'after[1].bounding_boxes[0].y2 == 8', 'after[0].shape == (1, 1, 3)', 'after[1].shape == (1, 1, 3)', 'after == [[]]', 'isinstance(after, list)', 'after == [', 'isinstance(after, list)', 'isinstance(after[0], list)', 'isinstance(after[1], list)', 'len(after[0]) == 2', 'len(after[1]) == 2', 'after[0][0].x1 == 1', 'after[0][0].y1 == 2', 'after[0][0].x2 == 3', 'after[0][0].y2 == 4', 'after[0][1].x1 == 5', 'after[0][1].y1 == 6', 'after[0][1].x2 == 7', 'after[0][1].y2 == 8', 'after[1][0].x1 == 9', 'after[1][0].y1 == 10', 'after[1][0].x2 == 11', 'after[1][0].y2 == 12', 'after[1][1].x1 == 13', 'after[1][1].y1 == 14', 'after[1][1].x2 == 15', 'after[1][1].y2 == 16']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1335,aleju,kontakt@ajung.name,2019-03-27 20:17:15+01:00,2843f67dd8ed0fbc77347fb90e9d0b86607113db,https://github.com/aleju/imgaug/commit/2843f67dd8ed0fbc77347fb90e9d0b86607113db,Fix issues in invert_normalize_polygons(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1336,aleju,kontakt@ajung.name,2019-03-27 20:17:31+01:00,7fa23e8d6d25514784185037483bf34e69740790,https://github.com/aleju/imgaug/commit/7fa23e8d6d25514784185037483bf34e69740790,Add test for invert_normalize_polygons(),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed is None', 'ia.is_np_array(after)', 'after.shape == (1, 1, 3, 2)', 'after.dtype.name == dt.name', 'np.allclose(after,', 'ia.is_np_array(after)', 'after.shape == (1, 5, 3, 2)', 'after.dtype.name == dt.name', 'np.allclose(after[0],', 'isinstance(after, ia.Polygon)', 'after.exterior_almost_equals(coords1)', 'isinstance(after, ia.PolygonsOnImage)', 'len(after.polygons) == 1', 'after.polygons[0].exterior_almost_equals(coords1)', 'after.shape == (1, 1, 3)', 'isinstance(after, list)', 'after == []', 'isinstance(after, list)', 'len(after) == 1', 'ia.is_np_array(after[0])', 'after[0].shape == (1, 3, 2)', 'after[0].dtype.name == dt.name', 'np.allclose(after[0], coords1_arr[np.newaxis, ...])', 'isinstance(after, list)', 'len(after) == 1', 'ia.is_np_array(after[0])', 'after[0].shape == (5, 3, 2)', 'after[0].dtype.name == dt.name', 'np.allclose(after[0][0], coords1_arr)', 'isinstance(after, list)', 'after == coords1', 'isinstance(after, list)', 'len(after) == len(coords1_kps)', 'all([kp_after.x == kp_before.x and kp_after.y == kp_before.y', 'isinstance(after, list)', 'len(after) == 2', 'after[0].exterior_almost_equals(coords1)', 'after[1].exterior_almost_equals(coords2)', 'isinstance(after, list)', 'len(after) == 2', 'isinstance(after[0], ia.PolygonsOnImage)', 'isinstance(after[1], ia.PolygonsOnImage)', 'after[0].polygons[0].exterior_almost_equals(coords1)', 'after[1].polygons[0].exterior_almost_equals(coords2)', 'after[0].shape == (1, 1, 3)', 'after[1].shape == (2, 1, 3)', 'isinstance(after, list)', 'after == [[]]', 'isinstance(after, list)', 'len(after) == 1', 'isinstance(after[0], list)', 'len(after[0]) == 1', 'ia.is_np_array(after[0][0])', 'after[0][0].shape == (3, 2)', 'after[0][0].dtype.name == dt.name', 'np.allclose(after[0][0], coords1_arr)', 'isinstance(after, list)', 'len(after) == 1', 'isinstance(after[0], list)', 'len(after[0]) == 5', 'ia.is_np_array(after[0][0])', 'after[0][0].shape == (3, 2)', 'after[0][0].dtype.name == dt.name', 'np.allclose(after[0][0], coords1_arr)', 'isinstance(after, list)', 'len(after) == 2', 'after[0] == coords1', 'after[1] == coords2', 'isinstance(after, list)', 'len(after) == 2', 'len(after[0]) == len(coords1_kps)', 'len(after[1]) == len(coords2_kps)', 'all([kp_after.x == kp_before.x and kp_after.y == kp_before.y', 'all([kp_after.x == kp_before.x and kp_after.y == kp_before.y', 'isinstance(after, list)', 'isinstance(after[0], list)', 'isinstance(after[1], list)', 'len(after[0]) == 2', 'len(after[1]) == 2', 'after[0][0].exterior_almost_equals(coords1)', 'after[0][1].exterior_almost_equals(coords2)', 'after[1][0].exterior_almost_equals(coords3)', 'after[1][1].exterior_almost_equals(coords4)', 'isinstance(after, list)', 'after == [[[]]]', 'isinstance(after, list)', 'len(after) == 2', 'len(after[0]) == 2', 'len(after[1]) == 2', 'after[0][0] == coords1', 'after[0][1] == coords2', 'after[1][0] == coords3', 'after[1][1] == coords4', 'isinstance(after, list)', 'len(after) == 2', 'len(after[0]) == 2', 'len(after[1]) == 2', 'all([kp_after.x == kp_before.x and kp_after.y == kp_before.y', 'all([kp_after.x == kp_before.x and kp_after.y == kp_before.y', 'all([kp_after.x == kp_before.x and kp_after.y == kp_before.y', 'all([kp_after.x == kp_before.x and kp_after.y == kp_before.y']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1337,aleju,kontakt@ajung.name,2019-03-28 18:15:10+01:00,af61fa72c52592ca02b8e7136fa36a372b573317,https://github.com/aleju/imgaug/commit/af61fa72c52592ca02b8e7136fa36a372b573317,Change normalize_heatmaps() to 'shapes' arg,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1338,aleju,kontakt@ajung.name,2019-03-28 18:18:04+01:00,c6050c08be638f64a832884ed7da9801ce2bf79b,https://github.com/aleju/imgaug/commit/c6050c08be638f64a832884ed7da9801ce2bf79b,Change normalize_segmentation_maps() to 'shapes' arg,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1339,aleju,kontakt@ajung.name,2019-03-28 18:22:47+01:00,f3ec7afb830f9c32a8db0b051aa707360cdca2ae,https://github.com/aleju/imgaug/commit/f3ec7afb830f9c32a8db0b051aa707360cdca2ae,Change normalize_keypoints() to 'shapes' arg,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1340,aleju,kontakt@ajung.name,2019-03-28 18:29:17+01:00,8bc65a7793cda3708ddd5cab921252bb4956db00,https://github.com/aleju/imgaug/commit/8bc65a7793cda3708ddd5cab921252bb4956db00,Change normalize_bounding_boxes() to 'shapes' arg,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1341,aleju,kontakt@ajung.name,2019-03-28 18:33:10+01:00,fbc484072be20b4eaac5858b624bb07dc16b6b4a,https://github.com/aleju/imgaug/commit/fbc484072be20b4eaac5858b624bb07dc16b6b4a,Change normalize_polygons() to 'shapes' arg,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1342,aleju,kontakt@ajung.name,2019-03-28 18:48:32+01:00,5d63fa3a8d9a08ce70034d763d8f0544c699f139,https://github.com/aleju/imgaug/commit/5d63fa3a8d9a08ce70034d763d8f0544c699f139,Add _assert_exactly_n_shapes() function,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1343,aleju,kontakt@ajung.name,2019-03-28 19:58:21+01:00,237b7fed57a0e2d96056e5991d0394bc63e75608,https://github.com/aleju/imgaug/commit/237b7fed57a0e2d96056e5991d0394bc63e75608,Integrate _assert_exactly_n_shapes() into normalize_heatmaps(),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,6,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):')]",[],[],[],[],[],[],[],[],[],[],"[('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1344,aleju,kontakt@ajung.name,2019-03-28 20:00:53+01:00,22558d4a65fdc413272cca26ac7e1a105aebba11,https://github.com/aleju/imgaug/commit/22558d4a65fdc413272cca26ac7e1a105aebba11,Integrate _assert_exactly_n_shapes() into normalize_segmentation_maps(),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,6,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):')]",[],[],[],[],[],[],[],[],[],[],"[('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1345,aleju,kontakt@ajung.name,2019-03-28 20:07:03+01:00,56f0b7f2d4a2fe4954b600b9d476629d6edbd5be,https://github.com/aleju/imgaug/commit/56f0b7f2d4a2fe4954b600b9d476629d6edbd5be,Integrate _assert_exactly_n_shapes() into normalize_keypoints(),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,14,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):')]",[],[],[],[],[],[],[],[],[],[],"[('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1346,aleju,kontakt@ajung.name,2019-03-28 20:15:26+01:00,317e9779600e7135174f81e796b4d82d10dc4a21,https://github.com/aleju/imgaug/commit/317e9779600e7135174f81e796b4d82d10dc4a21,Integrate _assert_exactly_n_shapes() into normalize_bounding_boxes(),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,14,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):')]",[],[],[],[],[],[],[],[],[],[],"[('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1347,aleju,kontakt@ajung.name,2019-03-28 20:21:34+01:00,5dda0e5ab45dc9638f937e0f5c3a8df0efa15f5e,https://github.com/aleju/imgaug/commit/5dda0e5ab45dc9638f937e0f5c3a8df0efa15f5e,Integrate _assert_exactly_n_shapes() into normalize_polygons(),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,22,0,0,0,0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):')]",[],[],[],[],[],[],[],[],[],[],"[('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1348,aleju,kontakt@ajung.name,2019-03-28 21:33:41+01:00,6f4c538fd53483ce5d60513cb669f27c7ecc9c7d,https://github.com/aleju/imgaug/commit/6f4c538fd53483ce5d60513cb669f27c7ecc9c7d,Improve normalization error messages,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,10,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):')]",[],[],[],[],[],[],[],[],[],[],"[('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1349,aleju,kontakt@ajung.name,2019-03-29 17:21:21+01:00,cd327a32caf419b9b263e7fe48a28de4487a9294,https://github.com/aleju/imgaug/commit/cd327a32caf419b9b263e7fe48a28de4487a9294,Add UnnormalizedBatch; Allow generators in augment_batches(),4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1350,aleju,kontakt@ajung.name,2019-03-29 17:23:25+01:00,09d22925a9249c400c2fc453859502a58ea08d0a,https://github.com/aleju/imgaug/commit/09d22925a9249c400c2fc453859502a58ea08d0a,Remove normalized setters/getter from Batch,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1351,aleju,kontakt@ajung.name,2019-03-29 17:27:12+01:00,35a056c3ca48e2e2b44f8972f90d104249c870b8,https://github.com/aleju/imgaug/commit/35a056c3ca48e2e2b44f8972f90d104249c870b8,Fix docstring,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1352,aleju,kontakt@ajung.name,2019-03-29 18:50:24+01:00,cc39b6049eef056a092acda1bfcef12abef37554,https://github.com/aleju/imgaug/commit/cc39b6049eef056a092acda1bfcef12abef37554,Add augment_batch() method,3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1353,aleju,kontakt@ajung.name,2019-03-29 19:46:23+01:00,3e20b341c511bf12a22c155fe778440639ff7cd3,https://github.com/aleju/imgaug/commit/3e20b341c511bf12a22c155fe778440639ff7cd3,Add docstring to Augmenter.augment() and .__call__(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1354,aleju,kontakt@ajung.name,2019-03-30 09:00:21+01:00,621c1042b6e1fc961eb97dd89e66bc15122db9a0,https://github.com/aleju/imgaug/commit/621c1042b6e1fc961eb97dd89e66bc15122db9a0,Fix codacy issues,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1355,aleju,kontakt@ajung.name,2019-03-30 09:38:15+01:00,4e6adfb9b51e5ade65d0b2ddb617a15c370fec22,https://github.com/aleju/imgaug/commit/4e6adfb9b51e5ade65d0b2ddb617a15c370fec22,Reorder assert statements,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1356,aleju,kontakt@ajung.name,2019-03-30 09:58:27+01:00,ed7bfe7c177810ddea5a81785bf0e53013de217b,https://github.com/aleju/imgaug/commit/ed7bfe7c177810ddea5a81785bf0e53013de217b,Add more test cases for augment(),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(image_aug[:, 0] == 0)', 'np.all(image_aug[:, 1:] == 255)', 'np.allclose(heatmaps_aug[0][:, 0], 0.0)', 'np.allclose(heatmaps_aug[0][:, 1:], 1.0)', 'np.all(segmaps_aug[0][:, 0] == 0)', 'np.all(segmaps_aug[0][:, 1:] == 1)', 'kps_aug == [(1, 0), (2, 2)]', 'bbs_aug == [(1, 0, 2, 1), (2, 2, 3, 3)]', 'polygons_aug == [(1, 0), (2, 0), (2, 1)]', 'len({shift_image, shift_heatmaps, shift_segmaps,', 'len(set(seen)) > 7', 'len({shift_image, shift_heatmaps, shift_segmaps,', 'len(set(seen)) == 1', 'isinstance(batch_aug.images_aug, list)', 'isinstance(batch_aug.heatmaps_aug, list)', 'isinstance(batch_aug.segmentation_maps_aug, list)', '(', 'len(set(shapes_images)) == 2']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1357,aleju,kontakt@ajung.name,2019-03-30 10:06:51+01:00,c5730f0bf576f069c7aefb4a3ecf4b9c1f766678,https://github.com/aleju/imgaug/commit/c5730f0bf576f069c7aefb4a3ecf4b9c1f766678,Fix outdated changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1358,aleju,kontakt@ajung.name,2019-03-30 10:57:39+01:00,5dfa685b36c2c880516ad8304141dce1cfa3173a,https://github.com/aleju/imgaug/commit/5dfa685b36c2c880516ad8304141dce1cfa3173a,Merge again PR #287 / commit 66d6978,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 1', 'multipoly_clipped[0].exterior_almost_equals(poly.exterior)', 'multipoly_clipped[0].label is None', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 1', 'multipoly_clipped[0].exterior_almost_equals(np.float32([', 'multipoly_clipped[0].label == ', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 2', 'multipoly_clipped[0].exterior_almost_equals(np.float32([', 'multipoly_clipped[0].label == ', 'multipoly_clipped[1].exterior_almost_equals(np.float32([', 'multipoly_clipped[0].label == ', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 0']",[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(multipoly_clipped, ia.MultiPolygon)', 'len(multipoly_clipped.geoms) == 1', 'multipoly_clipped.geoms[0].exterior_almost_equals(poly.exterior)', 'multipoly_clipped.geoms[0].label is None', 'isinstance(multipoly_clipped, ia.MultiPolygon)', 'len(multipoly_clipped.geoms) == 1', 'multipoly_clipped.geoms[0].exterior_almost_equals(np.float32([', 'multipoly_clipped.geoms[0].label == ', 'isinstance(multipoly_clipped, ia.MultiPolygon)', 'len(multipoly_clipped.geoms) == 2', 'multipoly_clipped.geoms[0].exterior_almost_equals(np.float32([', 'multipoly_clipped.geoms[0].label == ', 'multipoly_clipped.geoms[1].exterior_almost_equals(np.float32([', 'multipoly_clipped.geoms[0].label == ', 'isinstance(multipoly_clipped, ia.MultiPolygon)', 'len(multipoly_clipped.geoms) == 0']",[],[],[],[],[],[],[],[],[],[],[],[]
1359,aleju,kontakt@ajung.name,2019-03-30 11:06:39+01:00,5f85518f21f3aa7b7f16145636cd5db9408905f3,https://github.com/aleju/imgaug/commit/5f85518f21f3aa7b7f16145636cd5db9408905f3,Merge again PR #288 / commit ce73593,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1360,aleju,kontakt@ajung.name,2019-03-30 11:31:58+01:00,a594e4d02b669722561f8aedfb810ab88af2496b,https://github.com/aleju/imgaug/commit/a594e4d02b669722561f8aedfb810ab88af2496b,Fix codacy issues,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1361,aleju,kontakt@ajung.name,2019-03-30 11:34:23+01:00,fe3556f66cfd6284b76ed165cab79a8a48881772,https://github.com/aleju/imgaug/commit/fe3556f66cfd6284b76ed165cab79a8a48881772,Fix import issues,7,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1362,aleju,kontakt@ajung.name,2019-03-30 11:44:30+01:00,29dc9a9936550273160938bbcba1239a28bfbaf2,https://github.com/aleju/imgaug/commit/29dc9a9936550273160938bbcba1239a28bfbaf2,Fix error in example of augment(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1363,aleju,kontakt@ajung.name,2019-03-30 11:57:24+01:00,75cf4fc4acecb638094254a44c9aa97f35f5d563,https://github.com/aleju/imgaug/commit/75cf4fc4acecb638094254a44c9aa97f35f5d563,Rename variable,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1364,aleju,kontakt@ajung.name,2019-03-30 12:04:32+01:00,6b443d6e96a845be48ebd2f4c6cc287a0b7961dd,https://github.com/aleju/imgaug/commit/6b443d6e96a845be48ebd2f4c6cc287a0b7961dd,Improve error messages in augment(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1365,aleju,kontakt@ajung.name,2019-03-30 12:05:23+01:00,5ab7e6f8aab03dde955369c2560b8f5f9cbb4748,https://github.com/aleju/imgaug/commit/5ab7e6f8aab03dde955369c2560b8f5f9cbb4748,Fix nb_keys in augment() being bool instead of int,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1366,aleju,kontakt@ajung.name,2019-03-30 12:06:14+01:00,9de8fa00d206fd6938d4f2bef9afda8a3d781f4b,https://github.com/aleju/imgaug/commit/9de8fa00d206fd6938d4f2bef9afda8a3d781f4b,Fix bad check whether image/images was provided in augment(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1367,aleju,kontakt@ajung.name,2019-03-30 12:17:33+01:00,46c855f91335a8cea0202b06bfb13b9c6b884e18,https://github.com/aleju/imgaug/commit/46c855f91335a8cea0202b06bfb13b9c6b884e18,Improve docstring of augment(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1368,aleju,kontakt@ajung.name,2019-03-30 16:30:39+01:00,7c9e8a2ee7795c9e5519542e79b94d91f52f4958,https://github.com/aleju/imgaug/commit/7c9e8a2ee7795c9e5519542e79b94d91f52f4958,"Add DeprecationWarning, warn_deprecated() and 'deprecated' decorator",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1369,aleju,kontakt@ajung.name,2019-03-30 16:31:18+01:00,fc72ca537e6eaf5f4bf04ed4511ec1acdd9eae11,https://github.com/aleju/imgaug/commit/fc72ca537e6eaf5f4bf04ed4511ec1acdd9eae11,Add check script to test 'deprecated' decorator,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1370,aleju,kontakt@ajung.name,2019-03-30 16:33:13+01:00,a3b6cccee2f5faeac5c4257cdc1559b3f317b67d,https://github.com/aleju/imgaug/commit/a3b6cccee2f5faeac5c4257cdc1559b3f317b67d,Switch deprecation warnings to decorator/warn_deprecated (#279),12,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['in str(warning.message)', 'in str(warning.message)']",[],[],[],[],[],[],[],[],[],[],[],[],"['in str(warning.message)', '(']",[],[],[],[],[],[],[],[],[],[],[],[]
1371,aleju,kontakt@ajung.name,2019-03-30 16:36:54+01:00,d5e40b62684d6ae730794e517240ea933c51944d,https://github.com/aleju/imgaug/commit/d5e40b62684d6ae730794e517240ea933c51944d,Update changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1372,aleju,kontakt@ajung.name,2019-03-30 16:50:52+01:00,45b3ecc5634ecd8f7a3980dd10e45fb9c9557863,https://github.com/aleju/imgaug/commit/45b3ecc5634ecd8f7a3980dd10e45fb9c9557863,Disable pylint info,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1373,aleju,kontakt@ajung.name,2019-03-31 10:13:23+02:00,d66b76177eb95eca767d70ab2be813fea7cd9000,https://github.com/aleju/imgaug/commit/d66b76177eb95eca767d70ab2be813fea7cd9000,Remove doc submodule,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1374,aleju,kontakt@ajung.name,2019-03-31 10:44:27+02:00,a987508d608d102339dc9694c8938a306974e0c7,https://github.com/aleju/imgaug/commit/a987508d608d102339dc9694c8938a306974e0c7,Remove outdated files,3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1375,aleju,kontakt@ajung.name,2019-03-31 20:07:49+02:00,1171e6d8c3a1aade07dac0cc8048a21b3216a102,https://github.com/aleju/imgaug/commit/1171e6d8c3a1aade07dac0cc8048a21b3216a102,Fix docstring errors,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1376,aleju,kontakt@ajung.name,2019-03-31 20:08:12+02:00,437306d52ffad3d00f576abaf785fe8782573223,https://github.com/aleju/imgaug/commit/437306d52ffad3d00f576abaf785fe8782573223,"Avoid repetition, make some methods more flexible",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1377,aleju,kontakt@ajung.name,2019-03-31 20:10:30+02:00,630ba422a0d70fe0392f28f462fdac3f45199439,https://github.com/aleju/imgaug/commit/630ba422a0d70fe0392f28f462fdac3f45199439,Add LineString and helper methods,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1378,aleju,kontakt@ajung.name,2019-03-31 20:18:35+02:00,a4fd03b22a82775ace4cd8f1ca48d6aa585ba32e,https://github.com/aleju/imgaug/commit/a4fd03b22a82775ace4cd8f1ca48d6aa585ba32e,Add missing changes to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1379,aleju,kontakt@ajung.name,2019-03-31 20:57:11+02:00,94652525473c24df5a0c6cc9e2c394a90879ac9f,https://github.com/aleju/imgaug/commit/94652525473c24df5a0c6cc9e2c394a90879ac9f,Reduce code repetition in BBs,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1380,aleju,kontakt@ajung.name,2019-03-31 20:57:52+02:00,803d680ebb170b8cc683521fa2e1492b333559cf,https://github.com/aleju/imgaug/commit/803d680ebb170b8cc683521fa2e1492b333559cf,Add LineStringsOnImage,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1381,aleju,kontakt@ajung.name,2019-04-01 21:01:55+02:00,eb437da79de291181586f3e1da1c69b8113e6692,https://github.com/aleju/imgaug/commit/eb437da79de291181586f3e1da1c69b8113e6692,Add lines.py to augmentables init file,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1382,aleju,kontakt@ajung.name,2019-04-01 21:02:30+02:00,80be0caf942b964cb663b9898f2a8bf0be56b9e4,https://github.com/aleju/imgaug/commit/80be0caf942b964cb663b9898f2a8bf0be56b9e4,Add normalization functions for line strings,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed is None', 'isinstance(after, ia.LineString)', 'np.allclose(after.coords, coords1)', 'isinstance(after, ia.LineStringsOnImage)', 'len(after.line_strings) == 1', 'np.allclose(after.line_strings[0].coords, coords1)', 'after.shape == (1, 1, 3)', 'isinstance(after, list)', 'len(after) == 2', 'isinstance(after[0], ia.LineStringsOnImage)', 'isinstance(after[1], ia.LineStringsOnImage)', 'np.allclose(after[0].line_strings[0].coords, coords1)', 'np.allclose(after[1].line_strings[0].coords, coords2)', 'after[0].shape == (1, 1, 3)', 'after[1].shape == (2, 1, 3)', 'isinstance(after, list)', 'len(after) == 1', 'isinstance(after[0], list)', 'len(after[0]) == 1', 'ia.is_np_array(after[0][0])', 'after[0][0].shape == (3, 2)', 'after[0][0].dtype.name == dt.name', 'np.allclose(after[0][0], coords1_arr)', 'isinstance(after, list)', 'len(after) == 1', 'isinstance(after[0], list)', 'len(after[0]) == 5', 'ia.is_np_array(after[0][0])', 'after[0][0].shape == (3, 2)', 'after[0][0].dtype.name == dt.name', 'np.allclose(after[0][0], coords1_arr)', 'isinstance(after, list)', 'isinstance(after[0], list)', 'isinstance(after[1], list)', 'len(after[0]) == 2', 'len(after[1]) == 2', 'np.allclose(after[0][0].coords, coords1)', 'np.allclose(after[0][1].coords, coords2)', 'np.allclose(after[1][0].coords, coords3)', 'np.allclose(after[1][1].coords, coords4)', 'isinstance(after, list)', 'len(after) == 2', 'len(after[0]) == 2', 'len(after[1]) == 2', 'after[0][0] == coords1', 'after[0][1] == coords2', 'after[1][0] == coords3', 'after[1][1] == coords4', 'lss_norm is None', 'isinstance(lss_norm, list)', 'isinstance(lss_norm[0], ia.LineStringsOnImage)', 'len(lss_norm[0].line_strings) == 1', 'np.allclose(lss_norm[0].line_strings[0].coords, coords1_arr)', 'isinstance(lss_norm, list)', 'isinstance(lss_norm[0], ia.LineStringsOnImage)', 'len(lss_norm[0].line_strings) == 1', 'np.allclose(lss_norm[0].line_strings[0].coords, coords1)', 'isinstance(lss_norm, list)', 'isinstance(lss_norm[0], ia.LineStringsOnImage)', 'len(lss_norm[0].line_strings) == 1', 'np.allclose(lss_norm[0].line_strings[0].coords, coords1)', 'lss_norm is None', 'isinstance(lss_norm, list)', 'isinstance(lss_norm[0], ia.LineStringsOnImage)', 'len(lss_norm[0].line_strings) == 1', 'np.allclose(lss_norm[0].line_strings[0].coords, coords1)', 'isinstance(lss_norm[1], ia.LineStringsOnImage)', 'len(lss_norm[1].line_strings) == 1', 'np.allclose(lss_norm[1].line_strings[0].coords, coords2)', 'isinstance(lss_norm, list)', 'isinstance(lss_norm[0], ia.LineStringsOnImage)', 'isinstance(lss_norm[1], ia.LineStringsOnImage)', 'len(lss_norm[0].line_strings) == 2', 'np.allclose(lss_norm[0].line_strings[0].coords, coords1)', 'np.allclose(lss_norm[0].line_strings[1].coords, coords2)', 'len(lss_norm[1].line_strings) == 2', 'np.allclose(lss_norm[1].line_strings[0].coords, coords3)', 'np.allclose(lss_norm[1].line_strings[1].coords, coords4)', 'isinstance(lss_norm, list)', 'isinstance(lss_norm[0], ia.LineStringsOnImage)', 'len(lss_norm[0].line_strings) == 2', 'np.allclose(lss_norm[0].line_strings[0].coords, coords1)', 'np.allclose(lss_norm[0].line_strings[1].coords, coords2)', 'len(lss_norm[0].line_strings) == 2', 'np.allclose(lss_norm[1].line_strings[0].coords, coords3)', 'np.allclose(lss_norm[1].line_strings[1].coords, coords4)', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype ==  % (name,)', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ', 'ntype == ']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1383,aleju,kontakt@ajung.name,2019-04-01 21:11:23+02:00,4fbe2b408a9e79dcfb148b124a315abfead9390b,https://github.com/aleju/imgaug/commit/4fbe2b408a9e79dcfb148b124a315abfead9390b,Fix LineStringsOnImage copy methods having non-optional args,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1384,aleju,kontakt@ajung.name,2019-04-01 21:11:58+02:00,9632e5b345d0de964938821eea420bcdac872d79,https://github.com/aleju/imgaug/commit/9632e5b345d0de964938821eea420bcdac872d79,Add line strings to Batch and Unnorm.Batch,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['batch.data == 7', 'len(keys) >= 14', 'isinstance(observed.line_strings_unaug[0], ia.LineStringsOnImage)', 'observed.line_strings_unaug[0].shape == (101, 101, 3)', 'observed.line_strings_unaug[0].line_strings[0].coords[0, 0] == 1', 'observed.line_strings_unaug[0].line_strings[0].coords[0, 1] == 1', 'observed.line_strings_unaug[0].line_strings[0].coords[1, 0] == 11', 'observed.line_strings_unaug[0].line_strings[0].coords[1, 1] == 1', 'observed.line_strings_unaug[0].line_strings[0].coords[2, 0] == 11', 'observed.line_strings_unaug[0].line_strings[0].coords[2, 1] == 11']",[],[],[],[],[],[],[],[],[],[],[],[],"['batch.data == 6', 'len(keys) >= 12']",[],[],[],[],[],[],[],[],[],[],[],[]
1385,aleju,kontakt@ajung.name,2019-04-02 21:14:18+02:00,e7c54971a7f5626062e3952723c11408eebd232a,https://github.com/aleju/imgaug/commit/e7c54971a7f5626062e3952723c11408eebd232a,Fix array index error in BB.project(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1386,aleju,kontakt@ajung.name,2019-04-02 21:15:12+02:00,07ec714ac8a74ba276b0064992c1886005b847fa,https://github.com/aleju/imgaug/commit/07ec714ac8a74ba276b0064992c1886005b847fa,Add line string augmentation to Augmenter,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1387,aleju,kontakt@ajung.name,2019-04-02 21:15:37+02:00,ce4061128f92f339c93c1515fcd07ca258fe00ed,https://github.com/aleju/imgaug/commit/ce4061128f92f339c93c1515fcd07ca258fe00ed,Add tests for line string augmentation,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(ls_oi_aug, ia.LineStringsOnImage)', 'len(ls_oi_aug.line_strings) == 0', 'ls_oi_aug.shape == (11, 10, 3)', 'isinstance(ls_oi_aug, list)', 'isinstance(ls_oi_aug[0], ia.LineStringsOnImage)', 'len(ls_oi_aug[0].line_strings) == 0', 'ls_oi_aug[0].shape == (11, 10, 3)', 'isinstance(ls_ois_aug, list)', 'isinstance(ls_ois_aug[0], ia.LineStringsOnImage)', 'isinstance(ls_ois_aug[0], ia.LineStringsOnImage)', 'len(ls_ois_aug[0].line_strings) == 2', 'len(ls_ois_aug[1].line_strings) == 2', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'ls_ois_aug[0].shape == (10, 10, 3)', 'ls_ois_aug[1].shape == (10, 10, 3)', 'not np.allclose(points1, points2, atol=1e-2, rtol=0)', 'not np.allclose(points1, points2, atol=1e-2, rtol=0)', 'len(points1) > 1', 'len(points1) > 1', 'np.allclose(points1, points2, atol=1e-2, rtol=0)', 'img_rot_idx == ls_rot_idx', '2 <= len(seen) <= 4  # assert not always the same rot', 'len([', 'translations_points[5] is None', 'np.array_equal(translations_imgs, translations_points)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1388,aleju,kontakt@ajung.name,2019-04-03 22:01:34+02:00,459436892f793206c0af6583199cf804ac0e5a95,https://github.com/aleju/imgaug/commit/459436892f793206c0af6583199cf804ac0e5a95,Add coords_almost_equals() and almost_equals() to LineString(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1389,aleju,kontakt@ajung.name,2019-04-03 22:01:52+02:00,783ce15eb154aa8e88ea6ba620e3eec8644b5f4c,https://github.com/aleju/imgaug/commit/783ce15eb154aa8e88ea6ba620e3eec8644b5f4c,Fix various issues in LineString,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1390,aleju,kontakt@ajung.name,2019-04-03 22:02:58+02:00,745e014161d758ec90ea9bb96b523520e311589d,https://github.com/aleju/imgaug/commit/745e014161d758ec90ea9bb96b523520e311589d,Add tests for LineString,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,1,1,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,222,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestLineString(unittest.TestCase):'],"[('Raises', '(ValueError):')]",['def setUp(self):'],[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(ls.coords, np.float32([[0, 0], [1, 2]]))', 'ls.label is None', 'np.allclose(ls.coords, np.float32([[0, 0], [1, 2]]))', 'ls.label is None', 'ls.coords.shape == (0, 2)', 'ls.label is None', 'ls.coords.shape == (0, 2)', 'ls.label == ', 'np.isclose(ls.length, 2.0)', 'np.isclose(ls.length,', 'np.isclose(ls.length, 0.0)', 'np.isclose(ls.length, 0.0)', 'np.allclose(ls.xx, np.float32([0, 1, 2]))', 'np.allclose(ls.xx, np.zeros((0,), dtype=np.float32))', 'np.allclose(ls.yy, np.float32([0, 1, 2]))', 'np.allclose(ls.yy, np.zeros((0,), dtype=np.float32))', 'ls.xx_int.dtype.name == ', 'np.array_equal(ls.xx_int, np.int32([0, 1, 3]))', 'ls.xx_int.dtype.name == ', 'np.array_equal(ls.xx_int, np.zeros((0,), dtype=np.int32))', 'ls.yy_int.dtype.name == ', 'np.array_equal(ls.yy_int, np.int32([0, 1, 3]))', 'ls.yy_int.dtype.name == ', 'np.array_equal(ls.yy_int, np.zeros((0,), dtype=np.int32))', 'np.isclose(ls.height, 2.6)', 'np.isclose(ls.height, 0.0)', 'np.isclose(ls.width, 2.6)', 'np.isclose(ls.width, 0.0)', 'np.allclose(dists, [np.sqrt(1.4**2), np.sqrt(2.6**2+1**2)])', 'np.allclose(dists, [np.sqrt(1.4**2)])', 'dists.shape == (0,)', 'dists.shape == (0,)', 'np.array_equal(mask, [True, True, False])', 'np.array_equal(mask, [True, True, False])', 'np.array_equal(mask, [True])', 'mask.shape == (0,)', 'np.isclose(ls.compute_distance((0, 0)), 0)', 'np.isclose(ls.compute_distance((1, 0)), 0)', 'np.isclose(ls.compute_distance((0, 1)), 1)', 'np.isclose(ls.compute_distance((-0.5, -0.6)),', 'np.isclose(ls.compute_distance((0, 0)), 0)', 'np.isclose(ls.compute_distance((-0.5, -0.6)),', 'ls.compute_distance((0, 0)) is None', 'ls.compute_distance((0, 0), default=-1) == -1', 'np.isclose(ls.compute_distance(ia.Keypoint(x=0, y=1)), 1)', 'np.isclose(ls.compute_distance(LineString([(0, 0)]), 0))', 'np.isclose(ls.compute_distance(LineString([(0, 1)]), 1))', 'np.isclose(ls.compute_distance(LineString([(0, 0), (0, 1)]), 0))', 'np.isclose(ls.compute_distance(LineString([(-1, 0), (0, 1)]), 1))', 'ls.compute_distance()', 'ls.contains(ia.Keypoint(x=0, y=0))', 'ls.contains(ia.Keypoint(x=1, y=0))', 'not ls.contains(ia.Keypoint(x=100, y=0))', 'ls.contains((0, 0))', 'ls.contains((1, 0))', 'ls.contains((2, 1))', 'ls.contains((0+1e-8, 0))', 'not ls.contains((0+1e-8, 0), distance_threshold=0)', 'not ls.contains((0-1, 0))', 'ls.contains((0-1, 0), distance_threshold=2)', 'ls.contains((0, 0))', 'not ls.contains((1, 0))', 'not ls.contains((0, 0))', 'not ls.contains((1, 0))', 'np.allclose(ls_proj.coords, [(0, 0), (2, 0), (4, 2)])', 'np.allclose(ls_proj.coords, [(0, 0), (2, 0), (4, 1)])', 'np.allclose(ls_proj.coords, [(0, 0), (1, 0), (2, 2)])', 'ls_proj.coords.shape == (0, 2)', 'ls.is_fully_within_image((10, 10))', 'ls.is_fully_within_image((2, 3))', 'not ls.is_fully_within_image((2, 2))', 'not ls.is_fully_within_image((1, 1))', 'not ls.is_fully_within_image((10, 10))', 'not ls.is_fully_within_image((2, 3))', 'not ls.is_fully_within_image((2, 2))', 'not ls.is_fully_within_image((1, 1))', 'ls.is_fully_within_image((10, 10))', 'ls.is_fully_within_image((2, 3))', 'ls.is_fully_within_image((2, 2))', 'ls.is_fully_within_image((1, 1))', 'not ls.is_fully_within_image((10, 10))', 'not ls.is_fully_within_image((2, 3))', 'not ls.is_fully_within_image((2, 2))', 'not ls.is_fully_within_image((1, 1))', 'ls.is_fully_within_image((10, 10), default=True)', 'ls.is_fully_within_image((2, 3), default=True)', 'ls.is_fully_within_image((2, 2), default=True)', 'ls.is_fully_within_image((1, 1), default=True)', 'ls.is_fully_within_image((10, 10), default=None) is None', 'ls.is_partly_within_image((10, 10))', 'ls.is_partly_within_image((2, 3))', 'ls.is_partly_within_image((2, 2))', 'ls.is_partly_within_image((1, 1))', 'ls.is_partly_within_image((10, 10))', 'ls.is_partly_within_image((2, 3))', 'ls.is_partly_within_image((2, 2))', 'not ls.is_partly_within_image((1, 1))', 'ls.is_partly_within_image((100, 100))', 'ls.is_partly_within_image((10, 12))', 'ls.is_partly_within_image((10, 10))', 'ls.is_partly_within_image((1, 1))', 'ls.is_partly_within_image((100, 100))', 'ls.is_partly_within_image((12, 12))', 'not ls.is_partly_within_image((10, 10))', 'ls.is_partly_within_image((100, 100))', 'ls.is_partly_within_image((12, 12))', 'not ls.is_partly_within_image((10, 10))', 'not ls.is_partly_within_image((100, 100))', 'not ls.is_partly_within_image((10, 10))', 'ls.is_partly_within_image((100, 100), default=True)', 'ls.is_partly_within_image((10, 10), default=True)', 'ls.is_partly_within_image((100, 100), default=None) is None', 'ls.is_partly_within_image((10, 10), default=None) is None', 'not ls.is_out_of_image((10, 10))', 'ls.is_out_of_image((1, 1), fully=False, partly=True)', 'not ls.is_out_of_image((1, 1), fully=True, partly=False)', 'ls.is_out_of_image((1, 1), fully=True, partly=True)', 'not ls.is_out_of_image((1, 1), fully=False, partly=False)', 'ls.is_out_of_image((10, 10))', 'not ls.is_out_of_image((10, 10), default=True)', 'not ls.is_out_of_image((10, 10), default=None) is None', 'ls.clip_out_of_image((10, 10)).coords_almost_equals(ls)', 'ls.clip_out_of_image((2, 3)).coords_almost_equals(ls)', 'ls.clip_out_of_image((2, 2)).coords_almost_equals(ls)', 'ls.clip_out_of_image((1, 1)).coords_almost_equals([(0, 0), (1, 0)])', 'ls.clip_out_of_image((10, 10)).coords_almost_equals(ls)', 'ls.clip_out_of_image((2, 3)).coords_almost_equals(ls)', 'ls.clip_out_of_image((2, 2)).coords_almost_equals([(1, 0), (2, 0)])', 'ls.clip_out_of_image((1, 1)).coords_almost_equals([(1, 0)])', 'ls.clip_out_of_image((100, 100)).coords_almost_equals([(0, 5), (11, 5)])', 'ls.clip_out_of_image((10, 12)).coords_almost_equals([(0, 5), (11, 5)])', 'ls.clip_out_of_image((10, 10)).coords_almost_equals([(0, 5), (10, 5)])', 'ls.clip_out_of_image((1, 1)).coords_almost_equals([(0, 5), (1, 5)])', 'ls.clip_out_of_image((100, 100)).coords_almost_equals([(11, 0), (11, 11)])', 'ls.clip_out_of_image((12, 12)).coords_almost_equals([(11, 0), (11, 11)])', 'ls.clip_out_of_image((10, 10)).coords_almost_equals([])', 'ls.clip_out_of_image((100, 100)).coords_almost_equals([(11, 11)])', 'ls.clip_out_of_image((12, 12)).coords_almost_equals([(11, 11)])', 'not ls.clip_out_of_image((10, 10)).coords_almost_equals([])', 'ls.clip_out_of_image((100, 100)).coords_almost_equals([])', 'ls.clip_out_of_image((10, 10)).coords_almost_equals([])', 'ls.shift(top=1).coords_almost_equals([(0, 1), (1, 1), (2, 2)])', 'ls.shift(right=1).coords_almost_equals([(-1, 0), (0, 0), (1, 1)])', 'ls.shift(bottom=1).coords_almost_equals([(0, -1), (1, -1), (2, 0)])', 'ls.shift(left=1).coords_almost_equals([(1, 0), (2, 0), (3, 1)])', 'ls.shift(top=-1).coords_almost_equals([(0, -1), (1, -1), (2, 0)])', 'ls.shift(right=-1).coords_almost_equals([(1, 0), (2, 0), (3, 1)])', 'ls.shift(bottom=-1).coords_almost_equals([(0, 1), (1, 1), (2, 2)])', 'ls.shift(left=-1).coords_almost_equals([(-1, 0), (0, 0), (1, 1)])', 'ls.shift(top=1, right=2, bottom=3, left=4).coords_almost_equals(', 'ls.shift(top=1, right=2, bottom=3, left=4).coords_almost_equals(', 'ls.concat(ls).coords_almost_equals([', 'ls.concat(ls).coords_almost_equals([])', 'ls.concat(LineString([(0, 0)])).coords_almost_equals([(0, 0)])', 'ls.concat(LineString([])).coords_almost_equals([(0, 0)])', 'ls.concat([(0, 0)]).coords_almost_equals([(0, 0)])', 'all([isinstance(kp, ia.Keypoint) for kp in observed])', 'np.isclose(observed.keypoints[0].x, 0)', 'np.isclose(observed.keypoints[0].y, 0)', 'np.isclose(observed.keypoints[1].x, 1)', 'np.isclose(observed.keypoints[1].y, 0)', 'np.isclose(observed.keypoints[2].x, 2)', 'np.isclose(observed.keypoints[2].y, 1)', 'len(ls.to_keypoints()) == 0', 'isinstance(observed, ia.BoundingBox)', 'np.isclose(observed.x1, 0)', 'np.isclose(observed.y1, 0)', 'np.isclose(observed.x2, 1)', 'np.isclose(observed.y2, 1)', 'isinstance(observed, ia.BoundingBox)', 'np.isclose(observed.x1, 0)', 'np.isclose(observed.y1, 0)', 'np.isclose(observed.x2, 0)', 'np.isclose(observed.y2, 0)', 'observed is None', 'isinstance(observed, ia.Polygon)', 'np.allclose(observed, [(0, 0), (1, 0), (1, 1)])', 'isinstance(observed, ia.Polygon)', 'np.allclose(observed, [(0, 0)])', 'observed is None', 'ls.coords_almost_equals(ls)', 'ls.coords_almost_equals([(0, 0), (1, 0), (1, 1)])', 'not ls.shift(top=1).coords_almost_equals(ls)', 'ls.shift(top=1).coords_almost_equals(ls, distance_threshold=1.01)', 'ls.coords_almost_equals([(0, 0), (0.5, 0), (1, 0), (1, 1)])', 'ls.coords_almost_equals([(0, 0), (1, 0), (1, 1)])', 'ls.coords_almost_equals([(0, 0)])', 'not ls.coords_almost_equals([(0+1, 0)])', 'ls.coords_almost_equals([(0+1, 0)], distance_threshold=1.01)', 'ls.coords_almost_equals([])', 'not ls.coords_almost_equals([(0, 0)])', 'not ls.coords_almost_equals([])', 'ls.almost_equals(ls)', 'not ls.shift(top=1).almost_equals(ls)', 'ls.almost_equals(LineString([(0, 0), (1, 0), (1, 1)],', 'not ls.almost_equals(LineString([(0, 0), (1, 0), (1, 1)],', 'not ls.almost_equals(LineString([(0, 0), (1, 0), (1, 1)],', 'ls.almost_equals(LineString([(0, 0), (1, 0), (1, 1)],', 'ls.almost_equals(LineString([]))', 'not ls.almost_equals(LineString([], label=))', 'not ls.almost_equals(LineString([]))', 'ls.almost_equals(LineString([], label=))', 'observed is not ls', 'observed.coords is ls.coords', 'observed.label is ls.label', 'observed.coords_almost_equals([(0, 0)])', 'observed.label is None', 'observed.coords is ls.coords', 'observed.label == ', 'observed is not ls', 'observed.coords is not ls.coords', 'observed.label is None or observed.label is not ls.label', 'observed.coords_almost_equals([(0, 0)])', 'observed.label is None', 'observed.coords is not ls.coords', 'observed.label == ', 'ls.__repr__() == ls.__str__()', 'observed == expected', 'observed == expected', 'observed == expected', 'observed == expected', 'observed == expected']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1391,aleju,kontakt@ajung.name,2019-04-05 19:48:14+02:00,e4ca6cd5b657a4a092f1f962356ec119e0992a7c,https://github.com/aleju/imgaug/commit/e4ca6cd5b657a4a092f1f962356ec119e0992a7c,"Improve extract_from_image(), remove dead code, add comments",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1392,aleju,kontakt@ajung.name,2019-04-05 19:48:35+02:00,7aeedd3183e54de9b02ec2edb1246c64b029b5fc,https://github.com/aleju/imgaug/commit/7aeedd3183e54de9b02ec2edb1246c64b029b5fc,Add more tests for LineString,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,174,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Raises', '(Exception):'), ('Raises', '(Exception):')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(arr[1, 0:5])', 'np.all(arr[1:5, 5])', 'not np.any(arr[0, :])', 'not np.any(arr[2:, 0:5])', 'not np.any(arr)', 'np.isclose(arr[1, 0:5], 0.5)', 'np.isclose(arr[1:5, 5], 0.5)', 'np.allclose(arr[0, :], 0.0)', 'np.allclose(arr[2:, 0:5], 0.0)', 'np.allclose(arr, 0.0)', 'np.isclose(arr[1, 0], 0.5)', 'np.isclose(arr[1, 5], 0.5)', 'np.isclose(arr[5, 5], 0.5)', 'np.allclose(arr[0, :], 0.0)', 'np.allclose(arr[2:, 0:5], 0.0)', 'np.allclose(arr, 0.0)', 'mock_line.call_count == 1', 'mock_points.call_count == 1', 'mock_line.call_args_list[0][0][0] == (10, 10)', 'np.isclose(mock_line.call_args_list[0][1][], 0.9)', 'mock_line.call_args_list[0][1][] == 3', 'mock_line.call_args_list[0][1][] is True', 'mock_line.call_args_list[0][1][] \\', 'mock_points.call_args_list[0][0][0] == (10, 10)', 'np.isclose(mock_points.call_args_list[0][1][], 0.8)', 'mock_points.call_args_list[0][1][] == 5', 'mock_points.call_args_list[0][1][] \\', 'np.allclose(arr[1, 0:5], 0.9)', 'np.allclose(arr[1, 0:5], 0.9)', 'np.allclose(arr[1, 0:5], 0.9)', 'np.allclose(arr[1:5, 5], 0.9)', 'np.allclose(arr[1:5, 5], 0.9)', 'np.allclose(arr[1:5, 5], 0.9)', 'np.allclose(arr[0, 0:2+1], 0.5)', 'np.allclose(arr[2, 0:2+1], 0.5)', 'np.allclose(arr[0, 4:6+1], 0.5)', 'np.allclose(arr[2, 4:6+1], 0.5)', 'np.allclose(arr[4, 4:6+1], 0.5)', 'np.allclose(arr[5, 4:6+1], 0.5)', 'np.allclose(arr[0, 3], 0.0)', 'np.allclose(arr[7:, :], 0.0)', 'arr.shape == (10, 10)', 'np.sum(arr) == 0', 'img.dtype.name == ', 'np.all(img[1, :, 0] == 10)', 'np.all(img[1, :, 1] == 200)', 'np.all(img[1, :, 2] == 20)', 'img.dtype.name == ', 'np.all(img[1, :, 0] == 11)', 'np.all(img[1, :, 1] == 201)', 'np.all(img[1, :, 2] == 21)', 'img.dtype.name == ', 'np.all(img[1, :, 0] == 5)', 'np.all(img[1, :, 1] == 100)', 'np.all(img[1, :, 2] == 10)', 'img.dtype.name == ', 'np.all(img[1, :, 0] == 5+5)', 'np.all(img[1, :, 1] == 5+100)', 'np.all(img[1, :, 2] == 5+10)', 'img.dtype.name == ', 'np.all(img[5-1:5+1+1, :, 0] == 10)', 'np.all(img[5-1:5+1+1, :, 1] == 200)', 'np.all(img[5-1:5+1+1, :, 2] == 20)', 'np.all(img[:5-1, :, :] == 0)', 'np.all(img[5+1+1:, :, :] == 0)', 'img.dtype.name == ', 'np.all(img[5-2, :, :] > 0)', 'np.all(img[5-1:5+1+1, :, 0] == 100)', 'np.all(img[5-1:5+1+1, :, 1] == 100)', 'np.all(img[5-1:5+1+1, :, 2] == 100)', 'np.all(img[5+2, :, :] > 0)', 'img.dtype.name == ', 'np.all(img[0:2, 0:2, 0] == 10)', 'np.all(img[0:2, 0:2, 1] == 255)', 'np.all(img[0:2, 0:2, 2] == 20)', 'np.all(img[0:2, -2:, 0] == 10)', 'np.all(img[0:2, -2:, 1] == 255)', 'np.all(img[0:2, -2:, 2] == 20)', 'img.dtype.name == ', 'np.all(img[0:2, 0:2, 0] == 1+10)', 'np.all(img[0:2, 0:2, 1] == 1+200)', 'np.all(img[0:2, 0:2, 2] == 1+20)', 'np.all(img[0:2, -2:, 0] == 1+10)', 'np.all(img[0:2, -2:, 1] == 1+200)', 'np.all(img[0:2, -2:, 2] == 1+20)', 'np.all(img[0:2, 0:2, 0] == 5)', 'np.all(img[0:2, 0:2, 1] == 100)', 'np.all(img[0:2, 0:2, 2] == 10)', 'np.all(img[0:2, -2:, 0] == 5)', 'np.all(img[0:2, -2:, 1] == 100)', 'np.all(img[0:2, -2:, 2] == 10)', 'np.all(img[0, :, :] == 0)', 'np.all(img[2, :, :] == 0)', 'np.all(img[1, 1, 0] == 10)', 'np.all(img[1, 1, 1] == 200)', 'np.all(img[1, 1, 2] == 20)', 'np.all(img[1, -1, 0] == 10)', 'np.all(img[1, -1, 1] == 200)', 'np.all(img[1, -1, 2] == 20)', 'mock_line.call_count == 1', 'mock_points.call_count == 1', 'mock_line.call_args_list[0][0][0].shape == (10, 10)', 'mock_line.call_args_list[0][1][] == (1, 2, 3)', 'np.isclose(mock_line.call_args_list[0][1][], 0.9)', 'mock_line.call_args_list[0][1][] == 3', 'mock_line.call_args_list[0][1][] is False', 'mock_line.call_args_list[0][1][] \\', 'mock_points.call_args_list[0][0][0] == 1  # mock_line result', 'mock_points.call_args_list[0][1][] == (4, 5, 6)', 'np.isclose(mock_points.call_args_list[0][1][], 0.8)', 'mock_points.call_args_list[0][1][] == 5', 'mock_points.call_args_list[0][1][] \\', 'np.all(img[1, 0:5, 0] == 200)', 'np.all(img[1, 0:5, 1] == 120)', 'np.all(img[1, 0:5, 2] == 40)', 'np.all(img[1:5, 5, 0] == 200)', 'np.all(img[1:5, 5, 1] == 120)', 'np.all(img[1:5, 5, 2] == 40)', 'np.all(img[0:2+1, 0:2+1, 0] == 200)', 'np.all(img[0:2+1, 0:2+1, 1] == 120)', 'np.all(img[0:2+1, 0:2+1, 2] == 40)', 'np.all(img[0:2+1, 4:6+1, 0] == 200)', 'np.all(img[0:2+1, 4:6+1, 1] == 120)', 'np.all(img[0:2+1, 4:6+1, 2] == 40)', 'np.all(img[4:6+1, 4:6+1, 0] == 200)', 'np.all(img[4:6+1, 4:6+1, 1] == 120)', 'np.all(img[4:6+1, 4:6+1, 2] == 40)', 'np.all(img[0, 3, :] == 0)', 'np.all(img[7:, :, :] == 0)', 'img.shape == (10, 10, 3)', 'np.sum(img) == 0', 'extract.shape == (1, 10, 3)', 'np.array_equal(extract, img[5, 0:10, :])', 'extract.shape == (3, 10, 3)', 'np.array_equal(extract, img[4:6+1, 0:10, :])', 'extract.shape[0] > 3', 'extract.shape[1] > 10', 'extract.shape[2] == 3', 'extract.shape == (1, 1, 3)', 'np.sum(extract) == 0', 'extract.shape == (0, 0, 3)', 'extract.shape == (1, 11, 3)', 'np.array_equal(extract[:, 1:], img[5, 0:10, :])', 'np.all(extract[0, 0, :] == 0)', 'extract.shape == (1, 1, 3)', 'np.sum(extract) == img[1:2, 1:2, :]', 'extract.shape == (1, 1, 3)', 'np.sum(extract) == 0', 'extract.shape == (0, 0, 3)', 'np.sum(extract) == 0', 'extract.shape == (1, 1, 3)', 'np.sum(extract) == 0', 'extract.shape == (0, 0, 3)', 'np.sum(extract) == 0', 'np.allclose(observed.exterior, [(0, 0), (1, 0), (1, 1)])', 'np.allclose(observed.exterior, [(0, 0)])', 'isinstance(observed, HeatmapsOnImage)', 'observed.shape == (5, 5)', 'observed.arr_0to1.shape == (5, 5, 1)', 'np.allclose(observed.arr_0to1[0:5, :, :], 0.0)', 'np.allclose(observed.arr_0to1[5, 0:5, :], 1.0)', 'np.allclose(observed.arr_0to1[6:, :, :], 0.0)', 'observed.shape == (5, 5)', 'observed.arr_0to1.shape == (5, 5, 1)', 'np.allclose(observed.arr_0to1, 0.0)', 'isinstance(observed, SegmentationMapOnImage)', 'observed.shape == (5, 5)', 'observed.arr.shape == (5, 5, 1)', 'np.all(observed.arr[0:5, :, :] == 0)', 'np.all(observed.arr[5, 0:5, :] == 1)', 'np.all(observed.arr[6:, :, :] == 0)', 'observed.shape == (5, 5)', 'observed.arr.shape == (5, 5, 1)', 'np.all(observed.arr == 0)']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(observed, [(0, 0), (1, 0), (1, 1)])', 'np.allclose(observed, [(0, 0)])']",[],[],[],[],[],[],[],[],[],[],[],[]
1393,aleju,kontakt@ajung.name,2019-04-06 14:59:58+02:00,3156b5920201c5d9a5631e5604dfe7eab4146d0d,https://github.com/aleju/imgaug/commit/3156b5920201c5d9a5631e5604dfe7eab4146d0d,"Add pad, pad_max to BB.extract...() and refactor that func",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1394,aleju,kontakt@ajung.name,2019-04-06 15:11:11+02:00,147ab3bac16c8c92479ab8f8f52010a906e9e92d,https://github.com/aleju/imgaug/commit/147ab3bac16c8c92479ab8f8f52010a906e9e92d,Prevent HW images in KPSOI.draw_*() and improve single-number color handling,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1395,aleju,kontakt@ajung.name,2019-04-06 15:13:39+02:00,671c5aff43285cb1fd3d39698bd0885b5a4158bc,https://github.com/aleju/imgaug/commit/671c5aff43285cb1fd3d39698bd0885b5a4158bc,Add imgaug.imgaug.flatten(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1396,aleju,kontakt@ajung.name,2019-04-06 15:15:53+02:00,5e780ee6b741bfacf5d5669e54b50825c6fb03bd,https://github.com/aleju/imgaug/commit/5e780ee6b741bfacf5d5669e54b50825c6fb03bd,Make channel axis optional in blend_alpha(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1397,aleju,kontakt@ajung.name,2019-04-06 15:17:04+02:00,1732173127ecce503d069300329727065e16e238,https://github.com/aleju/imgaug/commit/1732173127ecce503d069300329727065e16e238,Fix/Change LineString and tests so that tests run,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,151,0,0,0,0,0,0,0,0,0,0,0,0,103,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],"[('Raises', '(Exception):'), ('Raises', '(Exception):')]",[],[],[],[],[],[],[],[],[],"['np.allclose(dists, [np.sqrt(1.4**2), np.sqrt(1.2**2+1**2)])', 'np.allclose(dists, [np.sqrt(1.4**2)])', 'dists.shape == (0,)', 'dists.shape == (0,)', 'np.allclose(dists, [0,', 'np.allclose(dists, [np.sqrt(1**2 + 1**2),', 'dists == []', 'np.allclose(dists, [0, 5, np.sqrt(5**2 + 5**2)])', 'np.allclose(dists, [np.sqrt(1**2 + 1**2),', 'np.allclose(dists, [0,', 'np.allclose(dists, [np.sqrt(1**2 + 1**2),', 'np.allclose(dists, [np.sqrt(0**2 + 1**2),', 'dists is False', 'np.isclose(ls.compute_distance(LineString([(0, 0)])), 0)', 'np.isclose(ls.compute_distance(LineString([(0, 1)])), 1)', 'np.isclose(ls.compute_distance(LineString([(0, 0), (0, 1)])), 0)', 'np.isclose(ls.compute_distance(LineString([(-1, -1), (-1, 1)])), 1)', 'ls.is_partly_within_image((10, 1))', 'not ls.is_partly_within_image((1, 1))', 'not ls.is_out_of_image((10, 10), default=False)', 'ls.is_out_of_image((10, 10), default=None) is None', 'ls.clip_out_of_image((1, 1)).coords_almost_equals([])', 'ls.clip_out_of_image((10, 1)).coords_almost_equals([(0, 5), (1, 5)])', 'ls.clip_out_of_image((1, 1)).coords_almost_equals([])', 'ls.clip_out_of_image((100, 100)).coords_almost_equals([(11, 0), (11, 11), (0, 11)])', 'ls.clip_out_of_image((12, 12)).coords_almost_equals([(11, 0), (11, 11), (0, 11)])', 'ls.clip_out_of_image((10, 10)).coords_almost_equals([])', '_allclose(arr[1, 0:5], 0.5)', '_allclose(arr[1:5, 5], 0.5)', '_allclose(arr[0, :], 0.0)', '_allclose(arr[2:, 0:5], 0.0)', '_allclose(arr, 0.0)', '_allclose(arr[1, 0], 0.5)', '_allclose(arr[1, 5], 0.5)', '_allclose(arr[5, 5], 0.5)', '_allclose(arr[0, :], 0.0)', '_allclose(arr[2:, 0:5], 0.0)', '_allclose(arr, 0.0)', '_allclose(arr[1, 0:5], 0.9)', '_allclose(arr[1, 0:5], 0.9)', '_allclose(arr[1, 0:5], 0.9)', '_allclose(arr[2:5, 5], 0.9)', '_allclose(arr[2:5, 5], 0.9)', '_allclose(arr[2:5, 5], 0.9)', '_allclose(arr[0, 0:2], 0.5)', '_allclose(arr[2, 0:2], 0.5)', '_allclose(arr[0, 4:6+1], 0.5)', '_allclose(arr[2, 4], 0.5)', '_allclose(arr[2, 6], 0.5)', '_allclose(arr[4, 4], 0.5)', '_allclose(arr[4, 6], 0.5)', '_allclose(arr[6, 4:6+1], 0.5)', '_allclose(arr[0, 3], 0.0)', '_allclose(arr[7:, :], 0.0)', 'np.all(img[0, :, :] == 0)', 'np.all(img[2, :, :] == 0)', 'img.dtype.name == ', 'np.all(img[0, :] == 0)', 'np.all(img[1, :] == 200)', 'np.all(img[2, :] == 0)', 'np.all(img[0, :, :] == 1)', 'np.all(img[1, :, 0] == 10)', 'np.all(img[1, :, 1] == 200)', 'np.all(img[1, :, 2] == 20)', 'np.all(img[2, :, :] == 1)', 'np.all(img[0, :, :] == 0)', 'np.all(img[2, :, :] == 0)', 'np.all(img[0, :, :] == 10)', 'np.all(img[2, :, :] == 10)', 'img.dtype.name == ', 'np.all(img[5-1:5+1+1, :] == 200)', 'np.all(img[:5-1, :] == 0)', 'np.all(img[5+1+1:, :] == 0)', 'img_aa.dtype.name == ', 'np.sum(img) > 5 * 3 * 100', 'np.sum(img_aa) > 5 * 3 * 100', 'not np.array_equal(img, img_aa)', 'np.all(img[:3, -3:, :] == 0)', 'np.all(img_aa[:3, -3:, :] == 0)', 'np.all(img[-3:, :3, :] == 0)', 'np.all(img_aa[-3:, :3, :] == 0)', 'in str(exc)', 'got_exception', 'in str(exc)', 'not got_exception', 'np.all(img[:, 2:-2, :] == 0)', 'np.all(img[0:2, 0:2, 0] == 10)', 'np.all(img[0:2, 0:2, 1] == 200)', 'np.all(img[0:2, 0:2, 2] == 20)', 'np.all(img[0:2, -2:, 0] == 10)', 'np.all(img[0:2, -2:, 1] == 200)', 'np.all(img[0:2, -2:, 2] == 20)', 'np.all(img[:, 2:-2, :] == 1)', 'np.all(img[:, 2:-2, :] == 0)', 'np.all(img[1, 0, 0] == 10)', 'np.all(img[1, 0, 1] == 200)', 'np.all(img[1, 0, 2] == 20)', 'in str(exc)', 'got_exception', 'mock_line.call_args_list[0][0][0].shape == (10, 10, 3)', 'mock_line.call_args_list[0][1][][0] == 4', 'mock_line.call_args_list[0][1][][1] == 5', 'mock_line.call_args_list[0][1][][2] == 6', 'mock_points.call_args_list[0][1][][0] == 7', 'mock_points.call_args_list[0][1][][1] == 8', 'mock_points.call_args_list[0][1][][2] == 9', 'np.all(img[1, 0:5, 0] == 100)', 'np.all(img[1, 0:5, 1] == 60)', 'np.all(img[1, 0:5, 2] == 20)', 'np.all(img[1:5, 5, 0] == 100)', 'np.all(img[1:5, 5, 1] == 60)', 'np.all(img[1:5, 5, 2] == 20)', 'np.all(img[0:2+1, 0:2, 0] >= 50)  # color_points is 0.5*color', 'np.all(img[0:2+1, 0:2, 1] >= 30)', 'np.all(img[0:2+1, 0:2, 2] >= 10)', 'np.all(img[0:2+1, 4:6+1, 0] >= 50)', 'np.all(img[0:2+1, 4:6+1, 1] >= 30)', 'np.all(img[0:2+1, 4:6+1, 2] >= 10)', 'np.all(img[4:6+1, 4:6+1, 0] >= 50)', 'np.all(img[4:6+1, 4:6+1, 1] >= 30)', 'np.all(img[4:6+1, 4:6+1, 2] >= 10)', 'extract.shape == (1, 10, 1)', 'np.array_equal(extract, img[5:6, 0:10, :])', 'extract.shape == (3, 10, 1)', 'extract.shape == (3, 10, 3)', 'np.array_equal(extract, img_rgb[4:6+1, 0:10, :])', 'extract_aa.shape == extract.shape', 'np.sum(extract_aa) > np.sum(extract)', 'extract.shape == (1, 1, 1)', 'extract.shape == (0, 0, 1)', 'extract.shape == (1, 11, 1)', 'np.array_equal(extract[:, 1:], img[5:6, 0:10, :])', 'extract.shape == (1, 1, 1)', 'extract.shape == (1, 1, 1)', 'extract.shape == (1, 1, 1)', 'extract.shape == (1, 1, 1)', 'extract.shape == (0, 0, 1)', 'np.isclose(observed[0].x, 0)', 'np.isclose(observed[0].y, 0)', 'np.isclose(observed[1].x, 1)', 'np.isclose(observed[1].y, 0)', 'np.isclose(observed[2].x, 2)', 'np.isclose(observed[2].y, 1)', 'isinstance(observed, ia.Polygon)', 'len(observed.exterior) == 0', 'observed.shape == (10, 10)', 'observed.arr_0to1.shape == (10, 10, 1)', 'observed.shape == (10, 10)', 'observed.arr.shape == (10, 10, 1)', 'ls.coords is ls.coords', 'observed.label == ls.label']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(dists, [np.sqrt(1.4**2), np.sqrt(2.6**2+1**2)])', 'np.allclose(dists, [np.sqrt(1.4**2)])', 'dists.shape == (0,)', 'dists.shape == (0,)', 'np.isclose(ls.compute_distance(LineString([(0, 0)]), 0))', 'np.isclose(ls.compute_distance(LineString([(0, 1)]), 1))', 'np.isclose(ls.compute_distance(LineString([(0, 0), (0, 1)]), 0))', 'np.isclose(ls.compute_distance(LineString([(-1, 0), (0, 1)]), 1))', 'ls.is_partly_within_image((1, 1))', 'not ls.is_out_of_image((10, 10), default=True)', 'not ls.is_out_of_image((10, 10), default=None) is None', 'ls.clip_out_of_image((1, 1)).coords_almost_equals([(1, 0)])', 'ls.clip_out_of_image((1, 1)).coords_almost_equals([(0, 5), (1, 5)])', 'ls.clip_out_of_image((100, 100)).coords_almost_equals([(11, 0), (11, 11)])', 'ls.clip_out_of_image((12, 12)).coords_almost_equals([(11, 0), (11, 11)])', 'not ls.clip_out_of_image((10, 10)).coords_almost_equals([])', 'np.isclose(arr[1, 0:5], 0.5)', 'np.isclose(arr[1:5, 5], 0.5)', 'np.allclose(arr[0, :], 0.0)', 'np.allclose(arr[2:, 0:5], 0.0)', 'np.allclose(arr, 0.0)', 'np.isclose(arr[1, 0], 0.5)', 'np.isclose(arr[1, 5], 0.5)', 'np.isclose(arr[5, 5], 0.5)', 'np.allclose(arr[0, :], 0.0)', 'np.allclose(arr[2:, 0:5], 0.0)', 'np.allclose(arr, 0.0)', 'np.allclose(arr[1, 0:5], 0.9)', 'np.allclose(arr[1, 0:5], 0.9)', 'np.allclose(arr[1, 0:5], 0.9)', 'np.allclose(arr[1:5, 5], 0.9)', 'np.allclose(arr[1:5, 5], 0.9)', 'np.allclose(arr[1:5, 5], 0.9)', 'np.allclose(arr[0, 0:2+1], 0.5)', 'np.allclose(arr[2, 0:2+1], 0.5)', 'np.allclose(arr[0, 4:6+1], 0.5)', 'np.allclose(arr[2, 4:6+1], 0.5)', 'np.allclose(arr[4, 4:6+1], 0.5)', 'np.allclose(arr[5, 4:6+1], 0.5)', 'np.allclose(arr[0, 3], 0.0)', 'np.allclose(arr[7:, :], 0.0)', 'np.all(img[1, :, 0] == 11)', 'np.all(img[1, :, 1] == 201)', 'np.all(img[1, :, 2] == 21)', 'np.all(img[5-2, :, :] > 0)', 'np.all(img[5-1:5+1+1, :, 0] == 100)', 'np.all(img[5-1:5+1+1, :, 1] == 100)', 'np.all(img[5-1:5+1+1, :, 2] == 100)', 'np.all(img[5+2, :, :] > 0)', 'np.all(img[0:2, 0:2, 0] == 1+10)', 'np.all(img[0:2, 0:2, 1] == 1+200)', 'np.all(img[0:2, 0:2, 2] == 1+20)', 'np.all(img[0:2, -2:, 0] == 1+10)', 'np.all(img[0:2, -2:, 1] == 1+200)', 'np.all(img[0:2, -2:, 2] == 1+20)', 'np.all(img[1, 1, 0] == 10)', 'np.all(img[1, 1, 1] == 200)', 'np.all(img[1, 1, 2] == 20)', 'mock_line.call_args_list[0][0][0].shape == (10, 10)', 'mock_line.call_args_list[0][1][] == (1, 2, 3)', 'mock_points.call_args_list[0][1][] == (4, 5, 6)', 'np.all(img[1, 0:5, 0] == 200)', 'np.all(img[1, 0:5, 1] == 120)', 'np.all(img[1, 0:5, 2] == 40)', 'np.all(img[1:5, 5, 0] == 200)', 'np.all(img[1:5, 5, 1] == 120)', 'np.all(img[1:5, 5, 2] == 40)', 'np.all(img[0:2+1, 0:2+1, 0] == 200)', 'np.all(img[0:2+1, 0:2+1, 1] == 120)', 'np.all(img[0:2+1, 0:2+1, 2] == 40)', 'np.all(img[0:2+1, 4:6+1, 0] == 200)', 'np.all(img[0:2+1, 4:6+1, 1] == 120)', 'np.all(img[0:2+1, 4:6+1, 2] == 40)', 'np.all(img[4:6+1, 4:6+1, 0] == 200)', 'np.all(img[4:6+1, 4:6+1, 1] == 120)', 'np.all(img[4:6+1, 4:6+1, 2] == 40)', 'extract.shape == (1, 10, 3)', 'np.array_equal(extract, img[5, 0:10, :])', 'extract.shape == (3, 10, 3)', 'extract.shape[0] > 3', 'extract.shape[1] > 10', 'extract.shape[2] == 3', 'extract.shape == (1, 1, 3)', 'extract.shape == (0, 0, 3)', 'extract.shape == (1, 11, 3)', 'np.array_equal(extract[:, 1:], img[5, 0:10, :])', 'extract.shape == (1, 1, 3)', 'extract.shape == (1, 1, 3)', 'extract.shape == (0, 0, 3)', 'extract.shape == (1, 1, 3)', 'extract.shape == (0, 0, 3)', 'np.isclose(observed.keypoints[0].x, 0)', 'np.isclose(observed.keypoints[0].y, 0)', 'np.isclose(observed.keypoints[1].x, 1)', 'np.isclose(observed.keypoints[1].y, 0)', 'np.isclose(observed.keypoints[2].x, 2)', 'np.isclose(observed.keypoints[2].y, 1)', 'observed is None', 'observed.shape == (5, 5)', 'observed.arr_0to1.shape == (5, 5, 1)', 'observed.shape == (5, 5)', 'observed.arr.shape == (5, 5, 1)', 'observed.label is None or observed.label is not ls.label']",[],[],[],[],[],[],[],[],[],[],[],[]
1398,aleju,kontakt@ajung.name,2019-04-06 15:34:37+02:00,e430134940380e5cefef767bd3fa486687b896bd,https://github.com/aleju/imgaug/commit/e430134940380e5cefef767bd3fa486687b896bd,Remove dead code,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1399,aleju,kontakt@ajung.name,2019-04-06 16:37:52+02:00,be6bd3777af7fddbf49a2b9bc54d4b5d321895b3,https://github.com/aleju/imgaug/commit/be6bd3777af7fddbf49a2b9bc54d4b5d321895b3,"Improve LSOI (verification, renaming, fixes)",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1400,aleju,kontakt@ajung.name,2019-04-06 16:38:10+02:00,aab54cabf153c927a76cb4519a9f826d5f7f1329,https://github.com/aleju/imgaug/commit/aab54cabf153c927a76cb4519a9f826d5f7f1329,Add tests for LineStringsOnImage,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,122,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestLineStringsOnImage(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['lsoi.line_strings == []', 'lsoi.shape == (10, 10)', 'len(lsoi.line_strings) == 2', 'lsoi.shape == (10, 10, 3)', 'lsoi.empty', 'not lsoi.empty', 'not lsoi.empty', 'all([ls_a.coords_almost_equals(ls_b)', 'lsoi_proj.shape == (100, 100, 3)', 'lsoi_proj.line_strings[0].coords_almost_equals(', 'lsoi_proj.line_strings[1].coords_almost_equals(', 'lsoi_proj.shape == (200, 200, 3)', 'len(lsoi_proj.line_strings) == 0', 'lsoi_proj.shape == (200, 200, 3)', 'len(lsoi.line_strings) == 2', 'lsoi.line_strings[0].coords_almost_equals(arrs[0])', 'lsoi.line_strings[1].coords_almost_equals(arrs[1])', 'len(lsoi.line_strings) == 2', 'lsoi.line_strings[0].coords_almost_equals(arrs[0])', 'lsoi.line_strings[1].coords_almost_equals(arrs[1])', 'len(lsoi.line_strings) == 0', 'len(lsoi.line_strings) == 0', 'isinstance(arrs, list)', 'len(arrs) == 2', 'arrs[0].dtype.name == ', 'arrs[1].dtype.name == ', 'np.allclose(arrs, [', 'isinstance(arrs, list)', 'len(arrs) == 2', 'arrs[0].dtype.name == ', 'arrs[1].dtype.name == ', 'np.allclose(arrs[0], [(0, 0), (10, 10), (5, 10)])', 'np.allclose(arrs[1], [(5, 5), (15, 15), (10, 15), (25, 25)])', 'isinstance(arrs, list)', 'len(arrs) == 2', 'arrs[0].dtype.name == ', 'arrs[1].dtype.name == ', 'arrs[0].shape == (0, 2)', 'np.allclose(arrs[1], [(5, 5), (15, 15), (10, 15), (25, 25)])', 'isinstance(arrs, list)', 'len(arrs) == 0', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'len(observed.line_strings) == 2', 'observed.line_strings[0] is ls1', 'observed.line_strings[1] is ls2', 'len(observed.line_strings) == 0', 'observed.shape == (100, 100, 3)', 'len(observed.line_strings) == 0', 'observed.shape == (100, 100, 3)', 'len(observed.line_strings) == 1', 'observed.line_strings[0] is ls1', 'observed.shape == (100, 100, 3)', 'len(observed.line_strings) == 0', 'observed.shape == (100, 100, 3)', 'len(observed.line_strings) == 0', 'observed.shape == (100, 100, 3)', 'len(observed.line_strings) == 1', 'observed.line_strings[0] is ls1', 'observed.shape == (100, 100, 3)', 'observed.line_strings[0].coords_almost_equals(', 'observed.line_strings[1].coords_almost_equals(', 'observed.shape == (100, 100, 3)', 'len(observed.line_strings) == 0', 'observed.shape == (100, 100, 3)', 'len(observed.line_strings[0].coords) == 0', 'observed.shape == (100, 100, 3)', 'len(observed.line_strings[0].coords) == 0', 'observed.shape == (100, 100, 3)', 'observed.line_strings[0].coords_almost_equals(', 'observed.line_strings[1].coords_almost_equals(', 'observed.shape == (100, 100, 3)', 'len(observed.line_strings) == 0', 'observed.shape == (100, 100, 3)', 'observed.line_strings[0] is ls1', 'observed.line_strings[1] is ls2', 'observed.shape == (100, 100, 3)', 'observed.line_strings[0] is ls1', 'observed.line_strings[1] is ls2', 'observed.line_strings[0].label == ', 'observed.line_strings[1].label == ', 'observed.shape == (100, 100, 3)', 'observed.line_strings == []', 'observed.shape == (100, 100, 3)', 'observed.line_strings[0] is ls1', 'observed.line_strings[1] is ls2', 'observed.shape == (200, 201, 3)', 'observed.line_strings[0] is ls1', 'observed.line_strings[1] is ls2', 'observed.line_strings[0].label == ', 'observed.line_strings[1].label == ', 'observed.shape == (200, 201, 3)', 'observed.line_strings == []', 'observed.shape == (200, 201, 3)', 'observed.line_strings[0] is not ls1', 'observed.line_strings[1] is not ls2', 'observed.line_strings[0].coords_almost_equals(ls1)', 'observed.line_strings[1].coords_almost_equals(ls2)', 'observed.shape == (100, 100, 3)', 'observed.line_strings[0] is not ls1', 'observed.line_strings[1] is not ls2', 'observed.line_strings[0].coords_almost_equals(ls1)', 'observed.line_strings[1].coords_almost_equals(ls2)', 'observed.line_strings[0].label == ', 'observed.line_strings[1].label == ', 'observed.shape == (100, 100, 3)', 'observed.line_strings == []', 'observed.shape == (100, 100, 3)', 'observed.line_strings[0].coords_almost_equals(ls1)', 'observed.line_strings[1].coords_almost_equals(ls2)', 'observed.shape == (200, 201, 3)', 'observed.line_strings[0].coords_almost_equals(ls1)', 'observed.line_strings[1].coords_almost_equals(ls2)', 'observed.line_strings[0].label == ', 'observed.line_strings[1].label == ', 'observed.shape == (200, 201, 3)', 'observed.line_strings == []', 'observed.shape == (200, 201, 3)', 'observed == expected', 'observed == expected']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1401,aleju,kontakt@ajung.name,2019-04-06 20:31:46+02:00,40d4382013c0d25901cae1880c137bcef2361921,https://github.com/aleju/imgaug/commit/40d4382013c0d25901cae1880c137bcef2361921,Fix LS.draw_line_on_image() with out of image points,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['img.dtype.name == ', 'np.all(img[0, :, :] == 0)', 'np.all(img[1, :, 0] == 10)', 'np.all(img[1, :, 1] == 200)', 'np.all(img[1, :, 2] == 20)', 'np.all(img[2, :, :] == 0)', 'img.dtype.name == ', 'np.all(img == 0)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1402,aleju,kontakt@ajung.name,2019-04-07 14:58:58+02:00,757260cde379dfd5f01a27c82e7bff3df5c9f14d,https://github.com/aleju/imgaug/commit/757260cde379dfd5f01a27c82e7bff3df5c9f14d,Fix _project_coords() not copying coords,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1403,aleju,kontakt@ajung.name,2019-04-07 15:00:00+02:00,504084ea6ebb4e9168967390024891a7b28c559e,https://github.com/aleju/imgaug/commit/504084ea6ebb4e9168967390024891a7b28c559e,Rename LS.concat() to concatenate(),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['ls.concatenate(ls).coords_almost_equals([', 'ls.concatenate(ls).coords_almost_equals([])', 'ls.concatenate(LineString([(0, 0)])).coords_almost_equals([(0, 0)])', 'ls.concatenate(LineString([])).coords_almost_equals([(0, 0)])', 'ls.concatenate([(0, 0)]).coords_almost_equals([(0, 0)])']",[],[],[],[],[],[],[],[],[],[],[],[],"['ls.concat(ls).coords_almost_equals([', 'ls.concat(ls).coords_almost_equals([])', 'ls.concat(LineString([(0, 0)])).coords_almost_equals([(0, 0)])', 'ls.concat(LineString([])).coords_almost_equals([(0, 0)])', 'ls.concat([(0, 0)]).coords_almost_equals([(0, 0)])']",[],[],[],[],[],[],[],[],[],[],[],[]
1404,aleju,kontakt@ajung.name,2019-04-07 17:26:55+02:00,3e86601a83223d049c7880c296e9045e7cea8de9,https://github.com/aleju/imgaug/commit/3e86601a83223d049c7880c296e9045e7cea8de9,Fix LS.clip_out_of_image() clipping to exactly image height/width,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['not ls.clip_out_of_image((2, 2)).coords_almost_equals(ls, distance_threshold=1e-6)', 'ls.clip_out_of_image((2, 2)).coords_almost_equals(ls, distance_threshold=1e-3)', 'not ls.clip_out_of_image((1, 1)).coords_almost_equals([(0, 0), (1, 0)], distance_threshold=1e-6)', 'ls.clip_out_of_image((1, 1)).coords_almost_equals([(0, 0), (1, 0)], distance_threshold=1e-3)', 'not ls.clip_out_of_image((2, 3)).coords_almost_equals(ls, distance_threshold=1e-6)', 'ls.clip_out_of_image((2, 3)).coords_almost_equals(ls, distance_threshold=1e-3)', 'not ls.clip_out_of_image((2, 2)).coords_almost_equals([(1, 0), (2, 0)], distance_threshold=1e-6)', 'ls.clip_out_of_image((2, 2)).coords_almost_equals([(1, 0), (2, 0)], distance_threshold=1e-3)', 'ls.clip_out_of_image((h, w)).is_fully_within_image((h, w))', 'ls.clip_out_of_image((h, w)).is_fully_within_image((h, w))']",[],[],[],[],[],[],[],[],[],[],[],[],"['ls.clip_out_of_image((2, 2)).coords_almost_equals(ls)', 'ls.clip_out_of_image((1, 1)).coords_almost_equals([(0, 0), (1, 0)])', 'ls.clip_out_of_image((2, 3)).coords_almost_equals(ls)', 'ls.clip_out_of_image((2, 2)).coords_almost_equals([(1, 0), (2, 0)])']",[],[],[],[],[],[],[],[],[],[],[],[]
1405,aleju,kontakt@ajung.name,2019-04-07 17:28:49+02:00,29f3115ad15961803ac09a53b20cc0d5928709d2,https://github.com/aleju/imgaug/commit/29f3115ad15961803ac09a53b20cc0d5928709d2,Activate AA by default in LS heatmap arr drawing,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1406,aleju,kontakt@ajung.name,2019-04-08 22:18:36+02:00,106027e3d6079cc7b01923dbb8802262a5b70b2c,https://github.com/aleju/imgaug/commit/106027e3d6079cc7b01923dbb8802262a5b70b2c,Fix LS clip not splitting to multiple LS; add LS.find_intersections_with(),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals(ls)', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals(ls)', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals([(0, 0), (1, 0)])', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals(ls)', 'len(lss_clipped) == 0', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals(ls)', 'len(lss_clipped) == 2', 'lss_clipped[0].coords_almost_equals([(0, 0), (1, 0), (2, 0)])', 'lss_clipped[1].coords_almost_equals([(2, 2), (1, 2), (0, 2)])', 'len(lss_clipped) == 2', 'lss_clipped[0].coords_almost_equals([(0, 0), (1, 0)])', 'lss_clipped[1].coords_almost_equals([(1, 2), (0, 2)])', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals(ls)', 'len(lss_clipped) == 2', 'lss_clipped[0].coords_almost_equals([(1, 0), (2, 0)])', 'lss_clipped[1].coords_almost_equals([(2, 2), (1, 2)])', 'len(lss_clipped) == 0', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals(ls)', 'len(lss_clipped) == 2', 'lss_clipped[0].coords_almost_equals([(1, 0), (2, 0)])', 'lss_clipped[1].coords_almost_equals([(2, 1), (1, 2)])', 'len(lss_clipped) == 0', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals(ls)', 'len(lss_clipped) == 3  # from above: 1s line, 2nd+3rd, 4th', 'lss_clipped[0].coords_almost_equals([(1, 0), (2, 0)])', 'lss_clipped[1].coords_almost_equals([(2, 1), (1, 1), (1, 2), (2, 2)])', 'lss_clipped[2].coords_almost_equals([(2, 3), (1, 3)])', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals([(0, y), (3, y)])', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals([(0, y), (1, y)])', 'len(lss_clipped) == 0', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals([(0, y), (1, y)])', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals([(0, y), (3, y), (5, y)])', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals([(0, y), (3, y), (4, y)])', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals([(0, y), (1, y)])', 'len(lss_clipped) == 0', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals([(0, y), (1, y)])', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals([(2, y), (5, y)])', 'lss_clipped[0].coords_almost_equals([(2, y), (4, y)])', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals([(1, y), (2, y), (5, y)])', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals([(1, y), (2, y), (4, y)])', 'len(lss_clipped) == 0', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals([(2, y), (5, y), (6, y)])', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals([(2, y), (4, y)])', 'len(lss_clipped) == 0', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals([(0, y), (5, y)])', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals([(0, y), (4, y)])', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals([(0, 0), (5, 5)])', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals([(0, 0), (4, 4)])', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals(ls)', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals([(1, 0), (3, 0)])', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals(ls)', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals([(1, 0), (4, 0), (5, 0)])', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals([(1, 0), (4, 0)])', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals([(1, 0), (2, 0)])', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals([(0, 0), (5, 0)])', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals([(0, 0), (5, 0)])', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals([(0, 0), (4, 0)])', 'len(lss_clipped) == 1', 'lss_clipped[0].coords_almost_equals(ls)', 'len(lss_clipped) == 0', 'len(lss_clipped) == 0', 'len(lss_clipped) == 2', 'lss_clipped[0].is_fully_within_image((h, w))', 'lss_clipped[1].is_fully_within_image((h, w))', 'len(lss_clipped) == 2', 'lss_clipped[0].is_fully_within_image((h, w))', 'lss_clipped[1].is_fully_within_image((h, w))']",[],[],[],[],[],[],[],[],[],[],[],[],"['ls.clip_out_of_image((10, 10)).coords_almost_equals(ls)', 'ls.clip_out_of_image((2, 3)).coords_almost_equals(ls)', 'not ls.clip_out_of_image((2, 2)).coords_almost_equals(ls, distance_threshold=1e-6)', 'ls.clip_out_of_image((2, 2)).coords_almost_equals(ls, distance_threshold=1e-3)', 'not ls.clip_out_of_image((1, 1)).coords_almost_equals([(0, 0), (1, 0)], distance_threshold=1e-6)', 'ls.clip_out_of_image((1, 1)).coords_almost_equals([(0, 0), (1, 0)], distance_threshold=1e-3)', 'ls.clip_out_of_image((10, 10)).coords_almost_equals(ls)', 'not ls.clip_out_of_image((2, 3)).coords_almost_equals(ls, distance_threshold=1e-6)', 'ls.clip_out_of_image((2, 3)).coords_almost_equals(ls, distance_threshold=1e-3)', 'not ls.clip_out_of_image((2, 2)).coords_almost_equals([(1, 0), (2, 0)], distance_threshold=1e-6)', 'ls.clip_out_of_image((2, 2)).coords_almost_equals([(1, 0), (2, 0)], distance_threshold=1e-3)', 'ls.clip_out_of_image((1, 1)).coords_almost_equals([])', 'ls.clip_out_of_image((100, 100)).coords_almost_equals([(0, 5), (11, 5)])', 'ls.clip_out_of_image((10, 12)).coords_almost_equals([(0, 5), (11, 5)])', 'ls.clip_out_of_image((10, 10)).coords_almost_equals([(0, 5), (10, 5)])', 'ls.clip_out_of_image((10, 1)).coords_almost_equals([(0, 5), (1, 5)])', 'ls.clip_out_of_image((1, 1)).coords_almost_equals([])', 'ls.clip_out_of_image((100, 100)).coords_almost_equals([(11, 0), (11, 11), (0, 11)])', 'ls.clip_out_of_image((12, 12)).coords_almost_equals([(11, 0), (11, 11), (0, 11)])', 'ls.clip_out_of_image((10, 10)).coords_almost_equals([])', 'ls.clip_out_of_image((100, 100)).coords_almost_equals([(11, 11)])', 'ls.clip_out_of_image((12, 12)).coords_almost_equals([(11, 11)])', 'ls.clip_out_of_image((10, 10)).coords_almost_equals([])', 'ls.clip_out_of_image((100, 100)).coords_almost_equals([])', 'ls.clip_out_of_image((10, 10)).coords_almost_equals([])', 'ls.clip_out_of_image((h, w)).is_fully_within_image((h, w))', 'ls.clip_out_of_image((h, w)).is_fully_within_image((h, w))']",[],[],[],[],[],[],[],[],[],[],[],[]
1407,aleju,kontakt@ajung.name,2019-04-09 17:58:28+02:00,8783f8ba4dbc05a60f0c36eedf3241a6105efcb5,https://github.com/aleju/imgaug/commit/8783f8ba4dbc05a60f0c36eedf3241a6105efcb5,Separate shapely normalization from LS.find_intersections_with(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1408,aleju,kontakt@ajung.name,2019-04-09 18:25:50+02:00,826c0e0a2f24797e95a635f12e929f5ee1ede624,https://github.com/aleju/imgaug/commit/826c0e0a2f24797e95a635f12e929f5ee1ede624,Refactor LS.clip*() in minor ways,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1409,aleju,kontakt@ajung.name,2019-04-09 18:30:51+02:00,ad0ab99e8d5d9d38a3cbd3a1c62faf1e8c38f79b,https://github.com/aleju/imgaug/commit/ad0ab99e8d5d9d38a3cbd3a1c62faf1e8c38f79b,Fix LSOI.clip_out_of_image(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1410,aleju,kontakt@ajung.name,2019-04-09 18:45:24+02:00,c3c83706d36c9b87815e1251ea096a5aecfea1b1,https://github.com/aleju/imgaug/commit/c3c83706d36c9b87815e1251ea096a5aecfea1b1,Add augmentables.utils; Move funcs there; Fix projection error,4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1411,aleju,kontakt@ajung.name,2019-04-09 18:59:29+02:00,77156ff454c92468892dc64300878a3242fc57de,https://github.com/aleju/imgaug/commit/77156ff454c92468892dc64300878a3242fc57de,Fix outdated LSOI.clip*() test,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(lsoi.line_strings) == len(expected)', 'ls_obs.coords_almost_equals(ls_exp)', 'len(observed.line_strings) == 0', 'len(observed.line_strings) == 0']",[],[],[],[],[],[],[],[],[],[],[],[],"['observed.line_strings[0].coords_almost_equals(', 'observed.line_strings[1].coords_almost_equals(', 'len(observed.line_strings[0].coords) == 0', 'len(observed.line_strings[0].coords) == 0']",[],[],[],[],[],[],[],[],[],[],[],[]
1412,aleju,kontakt@ajung.name,2019-04-09 19:15:43+02:00,a8ed315f937ace86b3ea35a76e641e3e182c28b8,https://github.com/aleju/imgaug/commit/a8ed315f937ace86b3ea35a76e641e3e182c28b8,Add Polygon.to_line_string(),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(ls.coords) == 0', 'ls.label is None', 'len(ls.coords) == 0', 'ls.label is None', 'len(ls.coords) == 0', 'ls.label == ', 'len(ls.coords) == 1', 'ls.label is None', 'len(ls.coords) == 1', 'ls.coords_almost_equals([(0, 0)])', 'ls.label is None', 'len(ls.coords) == 2', 'ls.coords_almost_equals([(0, 0), (1, 1)])', 'ls.label is None', 'len(ls.coords) == 3', 'ls.coords_almost_equals([(0, 0), (1, 1), (0, 0)])', 'ls.label is None', 'len(ls.coords) == 3', 'ls.coords_almost_equals([(0, 0), (1, 1), (0, 0)])', 'ls.label == ', 'len(ls.coords) == 3', 'ls.coords_almost_equals([(0, 0), (1, 1), (0, 0)])', 'ls.label == ']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1413,aleju,kontakt@ajung.name,2019-04-09 19:29:19+02:00,515c6ca0a44ec981e4c395c84849d2f4d11b7d21,https://github.com/aleju/imgaug/commit/515c6ca0a44ec981e4c395c84849d2f4d11b7d21,Fix Polygon.is_out_of_image() only checking points,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['not poly.is_out_of_image((100, 100, 3), fully=True, partly=True)', 'not poly.is_out_of_image((10, 10, 3), fully=True, partly=False)', 'poly.is_out_of_image((10, 10, 3), fully=False, partly=True)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1414,aleju,kontakt@ajung.name,2019-04-09 20:59:56+02:00,dd722158770cb60f820886bcd99dc9edca70a0bb,https://github.com/aleju/imgaug/commit/dd722158770cb60f820886bcd99dc9edca70a0bb,Add line thickness arg to Polygon.draw_on_image(),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(image_poly[2:9, 8:9, c_idx] == expected)  # right boundary', 'np.all(image_poly[3:8, 3:8, :] == np.round(expected).astype(np.uint8))', 'np.all(image_poly[2:9, 8:9, c_idx] == expected)  # right boundary', 'np.all(image_poly[3:8, 3:8, :] == np.round(expected).astype(np.uint8))']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(', 'np.all(image_poly[3:8, 3:8, :] == expected.astype(np.uint8))', 'np.all(', 'np.all(image_poly[3:8, 3:8, :] == expected.astype(np.uint8))']",[],[],[],[],[],[],[],[],[],[],[],[]
1415,aleju,kontakt@ajung.name,2019-04-09 21:06:02+02:00,7fba29adfa55719e962a1dca7698cda3b76a910e,https://github.com/aleju/imgaug/commit/7fba29adfa55719e962a1dca7698cda3b76a910e,Restrict dilation to size>1 in LS.draw_line_on_image(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1416,aleju,kontakt@ajung.name,2019-04-09 21:15:46+02:00,fb0cbc1f5b9bd9df45fc60dfe3f2c69db83700e2,https://github.com/aleju/imgaug/commit/fb0cbc1f5b9bd9df45fc60dfe3f2c69db83700e2,Align arg names of Polygon/LineString draw_on_image() funcs,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1417,aleju,kontakt@ajung.name,2019-04-09 21:21:48+02:00,fdb7652599d437c5e5192934c017f1dca865ae74,https://github.com/aleju/imgaug/commit/fdb7652599d437c5e5192934c017f1dca865ae74,Rename args from *_fill to *_face in Polygon.draw_on_image(),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1418,aleju,kontakt@ajung.name,2019-04-09 21:28:17+02:00,7093d2e7804e7b489183645e05c40c290b8ccba7,https://github.com/aleju/imgaug/commit/7093d2e7804e7b489183645e05c40c290b8ccba7,Wrap Polygon.project() around LineString,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1419,aleju,kontakt@ajung.name,2019-04-09 21:29:36+02:00,0e03fc0c89c62e5d4f9548f8076deea0bee068bb,https://github.com/aleju/imgaug/commit/0e03fc0c89c62e5d4f9548f8076deea0bee068bb,Fix unnecessary arg in LineString.copy() call,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1420,aleju,kontakt@ajung.name,2019-04-09 21:32:44+02:00,59c024ff9def75a20cf21e4df80f4b43cdc05412,https://github.com/aleju/imgaug/commit/59c024ff9def75a20cf21e4df80f4b43cdc05412,Remove unused method from Polygon,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(mask, np.array([True, True, True, True], dtype=bool))', 'np.array_equal(mask, np.array([True, False, False, False], dtype=bool))', 'np.array_equal(mask, np.array([True, False, False, False], dtype=bool))', 'np.array_equal(mask, np.array([True, False, False, False], dtype=bool))']",[],[],[],[],[],[],[],[],[],[],[],[]
1421,aleju,kontakt@ajung.name,2019-04-09 21:35:13+02:00,498b08b4ff4a901232495876e1190857e91b56fe,https://github.com/aleju/imgaug/commit/498b08b4ff4a901232495876e1190857e91b56fe,Wrap Polygon.shift() around LineString,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1422,aleju,kontakt@ajung.name,2019-04-09 21:56:09+02:00,9f8ba15dceb5755e3b75c31e01e1503e4bccf89c,https://github.com/aleju/imgaug/commit/9f8ba15dceb5755e3b75c31e01e1503e4bccf89c,Wrap Polygon.*_equals methods around LineString,5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,0,0,0,0,0,0,0,0,0,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['_eq(lss_clipped[0], ls)', '_eq(lss_clipped[0], ls)', '_eq(lss_clipped[0], [(0, 0), (1, 0)])', '_eq(lss_clipped[0], ls)', '_eq(lss_clipped[0], ls)', '_eq(lss_clipped[0], [(0, 0), (1, 0), (2, 0)])', '_eq(lss_clipped[1], [(2, 2), (1, 2), (0, 2)])', '_eq(lss_clipped[0], [(0, 0), (1, 0)])', '_eq(lss_clipped[1], [(1, 2), (0, 2)])', '_eq(lss_clipped[0], ls)', '_eq(lss_clipped[0], [(1, 0), (2, 0)])', '_eq(lss_clipped[1], [(2, 2), (1, 2)])', '_eq(lss_clipped[0], ls)', '_eq(lss_clipped[0], [(1, 0), (2, 0)])', '_eq(lss_clipped[1], [(2, 1), (1, 2)])', '_eq(lss_clipped[0], ls)', '_eq(lss_clipped[0], [(1, 0), (2, 0)])', '_eq(lss_clipped[1], [(2, 1), (1, 1), (1, 2), (2, 2)])', '_eq(lss_clipped[2], [(2, 3), (1, 3)])', '_eq(lss_clipped[0], [(0, y), (3, y)])', '_eq(lss_clipped[0], [(0, y), (1, y)])', '_eq(lss_clipped[0], [(0, y), (1, y)])', '_eq(lss_clipped[0], [(0, y), (3, y), (5, y)])', '_eq(lss_clipped[0], [(0, y), (3, y), (4, y)])', '_eq(lss_clipped[0], [(0, y), (1, y)])', '_eq(lss_clipped[0], [(0, y), (1, y)])', '_eq(lss_clipped[0], [(2, y), (5, y)])', '_eq(lss_clipped[0], [(2, y), (4, y)])', '_eq(lss_clipped[0], [(1, y), (2, y), (5, y)])', '_eq(lss_clipped[0], [(1, y), (2, y), (4, y)])', '_eq(lss_clipped[0], [(2, y), (5, y), (6, y)])', '_eq(lss_clipped[0], [(2, y), (4, y)])', '_eq(lss_clipped[0], [(0, y), (5, y)])', '_eq(lss_clipped[0], [(0, y), (4, y)])', '_eq(lss_clipped[0], [(0, 0), (5, 5)])', '_eq(lss_clipped[0], [(0, 0), (4, 4)])', '_eq(lss_clipped[0], ls)', '_eq(lss_clipped[0], [(1, 0), (3, 0)])', '_eq(lss_clipped[0], ls)', '_eq(lss_clipped[0], [(1, 0), (4, 0), (5, 0)])', '_eq(lss_clipped[0], [(1, 0), (4, 0)])', '_eq(lss_clipped[0], [(1, 0), (2, 0)])', '_eq(lss_clipped[0], [(0, 0), (5, 0)])', '_eq(lss_clipped[0], [(0, 0), (5, 0)])', '_eq(lss_clipped[0], [(0, 0), (4, 0)])', '_eq(lss_clipped[0], ls)', 'ls.shift(top=1).coords_almost_equals(ls, max_distance=1.01)', 'ls.coords_almost_equals([(0+1, 0)], max_distance=1.01)']",[],[],[],[],[],[],[],[],[],[],[],[],"['lss_clipped[0].coords_almost_equals(ls)', 'lss_clipped[0].coords_almost_equals(ls)', 'lss_clipped[0].coords_almost_equals([(0, 0), (1, 0)])', 'lss_clipped[0].coords_almost_equals(ls)', 'lss_clipped[0].coords_almost_equals(ls)', 'lss_clipped[0].coords_almost_equals([(0, 0), (1, 0), (2, 0)])', 'lss_clipped[1].coords_almost_equals([(2, 2), (1, 2), (0, 2)])', 'lss_clipped[0].coords_almost_equals([(0, 0), (1, 0)])', 'lss_clipped[1].coords_almost_equals([(1, 2), (0, 2)])', 'lss_clipped[0].coords_almost_equals(ls)', 'lss_clipped[0].coords_almost_equals([(1, 0), (2, 0)])', 'lss_clipped[1].coords_almost_equals([(2, 2), (1, 2)])', 'lss_clipped[0].coords_almost_equals(ls)', 'lss_clipped[0].coords_almost_equals([(1, 0), (2, 0)])', 'lss_clipped[1].coords_almost_equals([(2, 1), (1, 2)])', 'lss_clipped[0].coords_almost_equals(ls)', 'lss_clipped[0].coords_almost_equals([(1, 0), (2, 0)])', 'lss_clipped[1].coords_almost_equals([(2, 1), (1, 1), (1, 2), (2, 2)])', 'lss_clipped[2].coords_almost_equals([(2, 3), (1, 3)])', 'lss_clipped[0].coords_almost_equals([(0, y), (3, y)])', 'lss_clipped[0].coords_almost_equals([(0, y), (1, y)])', 'lss_clipped[0].coords_almost_equals([(0, y), (1, y)])', 'lss_clipped[0].coords_almost_equals([(0, y), (3, y), (5, y)])', 'lss_clipped[0].coords_almost_equals([(0, y), (3, y), (4, y)])', 'lss_clipped[0].coords_almost_equals([(0, y), (1, y)])', 'lss_clipped[0].coords_almost_equals([(0, y), (1, y)])', 'lss_clipped[0].coords_almost_equals([(2, y), (5, y)])', 'lss_clipped[0].coords_almost_equals([(2, y), (4, y)])', 'lss_clipped[0].coords_almost_equals([(1, y), (2, y), (5, y)])', 'lss_clipped[0].coords_almost_equals([(1, y), (2, y), (4, y)])', 'lss_clipped[0].coords_almost_equals([(2, y), (5, y), (6, y)])', 'lss_clipped[0].coords_almost_equals([(2, y), (4, y)])', 'lss_clipped[0].coords_almost_equals([(0, y), (5, y)])', 'lss_clipped[0].coords_almost_equals([(0, y), (4, y)])', 'lss_clipped[0].coords_almost_equals([(0, 0), (5, 5)])', 'lss_clipped[0].coords_almost_equals([(0, 0), (4, 4)])', 'lss_clipped[0].coords_almost_equals(ls)', 'lss_clipped[0].coords_almost_equals([(1, 0), (3, 0)])', 'lss_clipped[0].coords_almost_equals(ls)', 'lss_clipped[0].coords_almost_equals([(1, 0), (4, 0), (5, 0)])', 'lss_clipped[0].coords_almost_equals([(1, 0), (4, 0)])', 'lss_clipped[0].coords_almost_equals([(1, 0), (2, 0)])', 'lss_clipped[0].coords_almost_equals([(0, 0), (5, 0)])', 'lss_clipped[0].coords_almost_equals([(0, 0), (5, 0)])', 'lss_clipped[0].coords_almost_equals([(0, 0), (4, 0)])', 'lss_clipped[0].coords_almost_equals(ls)', 'ls.shift(top=1).coords_almost_equals(ls, distance_threshold=1.01)', 'ls.coords_almost_equals([(0+1, 0)], distance_threshold=1.01)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-4, interpolate=0)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-4, interpolate=1)']",[],[],[],[],[],[],[],[],[],[],[],[]
1423,aleju,kontakt@ajung.name,2019-04-09 22:00:53+02:00,d8d1b64ba98bf08a63000f75d9de0ddfe2aff9e2,https://github.com/aleju/imgaug/commit/d8d1b64ba98bf08a63000f75d9de0ddfe2aff9e2,Use normalize_shape() in Polygon,3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1424,aleju,kontakt@ajung.name,2019-04-10 17:23:13+02:00,8c420744a740a71ce96dd2d910e625f1c56a0d8a,https://github.com/aleju/imgaug/commit/8c420744a740a71ce96dd2d910e625f1c56a0d8a,Use normalize_shape() in BoundingBoxesOnImage,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1425,aleju,kontakt@ajung.name,2019-04-10 17:29:14+02:00,84c147cf48a235b9ce164a75df90d1e4e57e0fc4,https://github.com/aleju/imgaug/commit/84c147cf48a235b9ce164a75df90d1e4e57e0fc4,Use utils.project_coords() in Keypoint.project(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1426,aleju,kontakt@ajung.name,2019-04-10 17:29:57+02:00,f34adff77e1212ecc77835bb5dca25c50dca3f32,https://github.com/aleju/imgaug/commit/f34adff77e1212ecc77835bb5dca25c50dca3f32,Use normalize_shape() in KeypointsOnImage,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1427,aleju,kontakt@ajung.name,2019-04-10 17:31:21+02:00,e27d66780918fdfb5b9d43d9890cde06b65963ce,https://github.com/aleju/imgaug/commit/e27d66780918fdfb5b9d43d9890cde06b65963ce,Use normalize_shape() in KeypointsOnImage.on(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1428,aleju,kontakt@ajung.name,2019-04-10 17:39:17+02:00,2d7c8b884baaa8641d000731eab92024179a32fc,https://github.com/aleju/imgaug/commit/2d7c8b884baaa8641d000731eab92024179a32fc,Add comments,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1429,aleju,kontakt@ajung.name,2019-04-10 17:46:49+02:00,21a61efc6b5db9567ba8623a9ceb0b6181a204d5,https://github.com/aleju/imgaug/commit/21a61efc6b5db9567ba8623a9ceb0b6181a204d5,Rename KeypointsOnImage.from_coords_array(),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1430,aleju,kontakt@ajung.name,2019-04-10 17:53:34+02:00,330e56a6f1d9f28e93e5e99ce39c7b2a5159e954,https://github.com/aleju/imgaug/commit/330e56a6f1d9f28e93e5e99ce39c7b2a5159e954,Rename KeypointsOnImage.from_coords_array(),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1431,aleju,kontakt@ajung.name,2019-04-10 17:55:37+02:00,ad1debca1a1ca5df796309129c8f81df207907e5,https://github.com/aleju/imgaug/commit/ad1debca1a1ca5df796309129c8f81df207907e5,Rename KeypointsOnImage.from_coords_array() arg to xy,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1432,aleju,kontakt@ajung.name,2019-04-10 20:19:16+02:00,2a49808d1b07af1404dfea38f029fa2ebf726014,https://github.com/aleju/imgaug/commit/2a49808d1b07af1404dfea38f029fa2ebf726014,Add Keypoint.draw_on_image(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1433,aleju,kontakt@ajung.name,2019-04-10 21:19:27+02:00,d72bd3696dc0a71c5e4ae813731535d1d1da2128,https://github.com/aleju/imgaug/commit/d72bd3696dc0a71c5e4ae813731535d1d1da2128,Make Keypoint.draw*() draw any part within image plane (+tests),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(image_kp[0, 0, :] == [0, 255, 0])', 'np.all(image_kp[1:, :, :] == 10)', 'np.all(image_kp[:, 1:, :] == 10)', 'np.all(image_kp[4, 4, :] == [0, 255, 0])', 'np.all(image_kp[:4, :, :] == 10)', 'np.all(image_kp[:, :4, :] == 10)', 'np.all(image_kp[2:, 2:, :] == [0, 255, 0])', 'np.all(image_kp[:2, :, :] == 10)', 'np.all(image_kp[:, :2, :] == 10)', 'np.all(image_kp[3:, 3:, :] == [0, 255, 0])', 'np.all(image_kp[:3, :, :] == 10)', 'np.all(image_kp[:, :3, :] == 10)', 'np.all(image_kp[:3, :3, :] == [0, 255, 0])', 'np.all(image_kp[3:, :, :] == 10)', 'np.all(image_kp[:, 3:, :] == 10)', 'np.all(image_kp[:2, :2, :] == [0, 255, 0])', 'np.all(image_kp[2:, :, :] == 10)', 'np.all(image_kp[:, 2:, :] == 10)', 'np.all(image_kp[0, 0, :] == [0 + 5, 100 + 5, 0 + 5])', 'np.all(image_kp[1:, :, :] == 10)', 'np.all(image_kp[:, 1:, :] == 10)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1434,aleju,kontakt@ajung.name,2019-04-10 21:33:42+02:00,44866fb3afcb830e5e3f01acb64e69ba666afa75,https://github.com/aleju/imgaug/commit/44866fb3afcb830e5e3f01acb64e69ba666afa75,Update calls to deprecated methods,6,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(keypoints_norm[0].to_xy_array(), 1)', 'np.allclose(keypoints_norm[0].to_xy_array(), 1)', 'np.allclose(keypoints_norm[0].to_xy_array(), 1)', 'np.allclose(keypoints_norm[0].to_xy_array(), 1)', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'np.allclose(keypoints_aug[0].to_xy_array(),']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(keypoints_norm[0].get_coords_array(), 1)', 'np.allclose(keypoints_norm[0].get_coords_array(), 1)', 'np.allclose(keypoints_norm[0].get_coords_array(), 1)', 'np.allclose(keypoints_norm[0].get_coords_array(), 1)', 'np.allclose(keypoints_aug[0].get_coords_array(),', 'np.allclose(keypoints_aug[0].get_coords_array(),', 'np.allclose(keypoints_aug[0].get_coords_array(),', 'np.allclose(keypoints_aug[0].get_coords_array(),', 'np.allclose(keypoints_aug[0].get_coords_array(),', 'np.allclose(keypoints_aug[0].get_coords_array(),', 'np.allclose(keypoints_aug[0].get_coords_array(),', 'np.allclose(keypoints_aug[0].get_coords_array(),', 'np.allclose(keypoints_aug[0].get_coords_array(),', 'np.allclose(keypoints_aug[0].get_coords_array(),', 'np.allclose(keypoints_aug[0].get_coords_array(),']",[],[],[],[],[],[],[],[],[],[],[],[]
1435,aleju,kontakt@ajung.name,2019-04-10 22:05:53+02:00,d78de1d321d2b00cb70a9fe787ba70a68be28c83,https://github.com/aleju/imgaug/commit/d78de1d321d2b00cb70a9fe787ba70a68be28c83,Increase tolerance for thresholds in LS.clip_out_of_image(),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(lss_clipped) == 2', 'lss_clipped[0].is_fully_within_image((h, w))', 'lss_clipped[1].is_fully_within_image((h, w))', 'len(lss_clipped) == 2', 'lss_clipped[0].is_fully_within_image((h, w))', 'lss_clipped[1].is_fully_within_image((h, w))', 'len(lss_clipped) == 2', 'lss_clipped[0].is_fully_within_image((h, w))', 'lss_clipped[1].is_fully_within_image((h, w))']",[],[],[],[],[],[],[],[],[],[],[],[],"['len(lss_clipped) == 2', 'lss_clipped[0].is_fully_within_image((h, w))', 'lss_clipped[1].is_fully_within_image((h, w))', 'len(lss_clipped) == 2', 'lss_clipped[0].is_fully_within_image((h, w))', 'lss_clipped[1].is_fully_within_image((h, w))']",[],[],[],[],[],[],[],[],[],[],[],[]
1436,aleju,kontakt@ajung.name,2019-04-12 17:46:04+02:00,b1acc90e6226c79de022be27cbc73d540221d784,https://github.com/aleju/imgaug/commit/b1acc90e6226c79de022be27cbc73d540221d784,Rename LS.contains() arg distance_threshold to max_distance,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['not ls.contains((0+1e-8, 0), max_distance=0)', 'ls.contains((0-1, 0), max_distance=2)']",[],[],[],[],[],[],[],[],[],[],[],[],"['not ls.contains((0+1e-8, 0), distance_threshold=0)', 'ls.contains((0-1, 0), distance_threshold=2)']",[],[],[],[],[],[],[],[],[],[],[],[]
1437,aleju,kontakt@ajung.name,2019-04-13 11:20:33+02:00,d96c2e1e3b5262b943e04102858de5c397ff3ba6,https://github.com/aleju/imgaug/commit/d96c2e1e3b5262b943e04102858de5c397ff3ba6,Rename arg 'thickness' to 'size' in BB drawing methods,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1438,aleju,kontakt@ajung.name,2019-04-13 11:23:17+02:00,89160eba39606c08bc1ea357bfaba2c99e76ab08,https://github.com/aleju/imgaug/commit/89160eba39606c08bc1ea357bfaba2c99e76ab08,Evade unnecessary copies in BBsOI drawing,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1439,aleju,kontakt@ajung.name,2019-04-13 11:45:16+02:00,5bf59736e0dd5a87e3e3a9b2a103f876b7b89c1d,https://github.com/aleju/imgaug/commit/5bf59736e0dd5a87e3e3a9b2a103f876b7b89c1d,Add line string feature to readme,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1440,aleju,kontakt@ajung.name,2019-04-13 15:46:30+02:00,ffb8fdf496355d753425bbd980d5f86d0342c9ae,https://github.com/aleju/imgaug/commit/ffb8fdf496355d753425bbd980d5f86d0342c9ae,Move line interpolation to augmentables/utils.py,5,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,0,['class TestUtils(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(', 'np.allclose(', 'len(inter) == 0', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'len(inter) == 0', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'len(inter) == 0', 'np.allclose(']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(', 'np.allclose(', 'len(inter) == 0', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'len(inter) == 0', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'len(inter) == 0', 'np.allclose(']",[],[],[],[],[],[],[],[],[],[],[],[]
1441,aleju,kontakt@ajung.name,2019-04-13 15:48:53+02:00,5d34bef15a2c5661561c08c8316bcdeaf45869e5,https://github.com/aleju/imgaug/commit/5d34bef15a2c5661561c08c8316bcdeaf45869e5,"Add LS.subdivide(), integrate into coords_almost_equals()",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['ls_a.coords_almost_equals(ls_b)', 'not ls_a.coords_almost_equals(ls_b)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1442,aleju,kontakt@ajung.name,2019-04-13 15:54:07+02:00,9466e53f41abf953490e0fe62adab77cb407f9d5,https://github.com/aleju/imgaug/commit/9466e53f41abf953490e0fe62adab77cb407f9d5,Readd point interpolation to Polygon.coords_almost_equals,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1443,aleju,kontakt@ajung.name,2019-04-13 16:11:27+02:00,df41202436e27b5b2f8290fc59b63c878a0cc60e,https://github.com/aleju/imgaug/commit/df41202436e27b5b2f8290fc59b63c878a0cc60e,Add arg points_per_edge to LS.almost_equals(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1444,aleju,kontakt@ajung.name,2019-04-13 17:59:04+02:00,66b9c6c1328ed8646cb97ea22aa429973042285c,https://github.com/aleju/imgaug/commit/66b9c6c1328ed8646cb97ea22aa429973042285c,Fix calling outdated test functions,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1445,aleju,kontakt@ajung.name,2019-04-13 21:30:39+02:00,9dbfef687333678601378e195f78b05b0fd3c2b6,https://github.com/aleju/imgaug/commit/9dbfef687333678601378e195f78b05b0fd3c2b6,Rename *_line to *_lines to LS/poly drawing,5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1446,druzhinin,druzhinin@simicon.com,2019-04-19 13:47:02+03:00,757e3aafa9c6985e4efdace1e67670152a79f00e,https://github.com/aleju/imgaug/commit/757e3aafa9c6985e4efdace1e67670152a79f00e,Add fill parameters for PerspectiveTransform augmentation,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug.mode, iap.Choice)', 'isinstance(aug.mode, iap.Deterministic)', 'aug.mode.value == ', 'isinstance(aug.mode, iap.Choice)', 'len(', 'isinstance(aug.mode, iap.Choice)', 'len(', '(img == 255).all()', '(img == 255).all()', 'not (img == 255).all()', 'params[2].value == 0', 'params[3].value == ']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1447,aleju,kontakt@ajung.name,2019-04-04 19:08:55+02:00,7b75de5edcc1d8c14599c36c4352e02d0a49d7e3,https://github.com/aleju/imgaug/commit/7b75de5edcc1d8c14599c36c4352e02d0a49d7e3,Fix JpegCompression permission denied error (#297),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1448,druzhinin,druzhinin@simicon.com,2019-04-22 11:14:46+03:00,a1157369f8c4f4a1820e44c2cc33e74e7445b6a8,https://github.com/aleju/imgaug/commit/a1157369f8c4f4a1820e44c2cc33e74e7445b6a8,Fixed rewrite original image in PerspectiveTransform cval and mode tests.,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['(img_aug == 255).all()', '(img_aug == 255).all()', 'not (img_aug == 255).all()']",[],[],[],[],[],[],[],[],[],[],[],[],"['(img == 255).all()', '(img == 255).all()', 'not (img == 255).all()']",[],[],[],[],[],[],[],[],[],[],[],[]
1449,druzhinin,druzhinin@simicon.com,2019-04-22 11:24:28+03:00,53a4a1d0ebe7690434714407c99fa77c7e7343fd,https://github.com/aleju/imgaug/commit/53a4a1d0ebe7690434714407c99fa77c7e7343fd,"Change params order in PerspectiveTransform init. Border constant = 0 for heatmaps.
Fixed re-using i in loop.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1450,aleju,kontakt@ajung.name,2019-04-22 15:29:41+02:00,5c0929185b45a508051ba6f3cf5c9002e5c1de25,https://github.com/aleju/imgaug/commit/5c0929185b45a508051ba6f3cf5c9002e5c1de25,Add PR #301 to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1451,aleju,kontakt@ajung.name,2019-04-22 17:54:43+02:00,08c32f330e8b7dcb3a25f072a76fa68caa896bbf,https://github.com/aleju/imgaug/commit/08c32f330e8b7dcb3a25f072a76fa68caa896bbf,Cleanup changelog for 0.2.9,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1452,aleju,kontakt@ajung.name,2019-04-22 18:05:26+02:00,a732e8fe9d1a581b870efc71311ed17e47891738,https://github.com/aleju/imgaug/commit/a732e8fe9d1a581b870efc71311ed17e47891738,Add table of contents to readme,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1453,aleju,kontakt@ajung.name,2019-04-22 18:12:19+02:00,3f8a705852347ecbbc32b5806997dde11231d083,https://github.com/aleju/imgaug/commit/3f8a705852347ecbbc32b5806997dde11231d083,Rename sections in readme,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1454,aleju,kontakt@ajung.name,2019-04-22 18:14:03+02:00,acbb23712a7a5fea9a9b979f3d116f8cdec4ded0,https://github.com/aleju/imgaug/commit/acbb23712a7a5fea9a9b979f3d116f8cdec4ded0,Reorder sections in readme,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1455,aleju,kontakt@ajung.name,2019-04-22 18:19:08+02:00,75b09c194474e4eccb18c8b3b361e909f5bd5fc1,https://github.com/aleju/imgaug/commit/75b09c194474e4eccb18c8b3b361e909f5bd5fc1,Improve feature list,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1456,aleju,kontakt@ajung.name,2019-04-22 18:28:05+02:00,43187328c72717791fc5bc518ab8a33224371346,https://github.com/aleju/imgaug/commit/43187328c72717791fc5bc518ab8a33224371346,Rework documentation section in readme,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1457,aleju,kontakt@ajung.name,2019-04-22 18:29:12+02:00,7eced1ef41b528e35f694323611ad7e4d4f5471f,https://github.com/aleju/imgaug/commit/7eced1ef41b528e35f694323611ad7e4d4f5471f,Change git install link in readme,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1458,aleju,kontakt@ajung.name,2019-04-22 18:30:32+02:00,01278960ace74b50ada64044ac8d6392d1ba5a87,https://github.com/aleju/imgaug/commit/01278960ace74b50ada64044ac8d6392d1ba5a87,Add imgaug-doc to doc section in readme,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1459,aleju,kontakt@ajung.name,2019-04-22 18:32:03+02:00,d8c6f3fd3ffa1cfbbfed171ae07817651263a320,https://github.com/aleju/imgaug/commit/d8c6f3fd3ffa1cfbbfed171ae07817651263a320,Add 0.2.9 to recent changes list,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1460,aleju,kontakt@ajung.name,2019-04-22 18:37:07+02:00,b84818bb5bc37f1b23444621d1bb5833115e5710,https://github.com/aleju/imgaug/commit/b84818bb5bc37f1b23444621d1bb5833115e5710,Reformulate examples section sentence,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1461,aleju,kontakt@ajung.name,2019-04-22 20:06:18+02:00,441f0130b00aece2dde34cad0e19f7b4502795cb,https://github.com/aleju/imgaug/commit/441f0130b00aece2dde34cad0e19f7b4502795cb,Reformulate features list in readme,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1462,aleju,kontakt@ajung.name,2019-04-22 20:56:25+02:00,73efc106974e484953237f2f9eaf331788c1b401,https://github.com/aleju/imgaug/commit/73efc106974e484953237f2f9eaf331788c1b401,Rewrite readme code examples,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1463,aleju,kontakt@ajung.name,2019-04-22 21:04:16+02:00,929faaa3550ea3d103bd72d94fa62689299f3059,https://github.com/aleju/imgaug/commit/929faaa3550ea3d103bd72d94fa62689299f3059,Add features,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1464,aleju,kontakt@ajung.name,2019-05-05 13:09:23+02:00,702a257d5a89252ec0aab597f2cc42cfe82fd42b,https://github.com/aleju/imgaug/commit/702a257d5a89252ec0aab597f2cc42cfe82fd42b,Increase version to 0.2.9,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1465,joncrall,jon.crall@kitware.com,2019-05-06 17:03:22-04:00,0dd292221ab69117fd734c39679ac8e67d988f07,https://github.com/aleju/imgaug/commit/0dd292221ab69117fd734c39679ac8e67d988f07,Fix FlipLR augmentation with floating keypoints,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1466,joncrall,erotemic@gmail.com,2019-05-08 15:44:47-04:00,8e99b7c857c52b69caa05516a563023709f1e5fd,https://github.com/aleju/imgaug/commit/8e99b7c857c52b69caa05516a563023709f1e5fd,Fix Clouds repr,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1467,aleju,kontakt@ajung.name,2019-05-11 11:35:51+02:00,7a3ba3dc3c629e643c94635beb02160a6ff5cfe4,https://github.com/aleju/imgaug/commit/7a3ba3dc3c629e643c94635beb02160a6ff5cfe4,Fix polygon clip for zero-point overlap (#310),4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 1', 'multipoly_clipped[0].exterior_almost_equals(np.float32([', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 1', 'multipoly_clipped[0].exterior_almost_equals(np.float32([']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1468,aleju,kontakt@ajung.name,2019-05-04 16:14:05+02:00,5aabdd0597d6e8be18dbdde080ecfabe99474471,https://github.com/aleju/imgaug/commit/5aabdd0597d6e8be18dbdde080ecfabe99474471,Add output_buffer_size to multicore.Pool,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(times_diffs < timeout)', 'contains_all_ids(result)', 'np.all(times_diffs < timeout)', 'contains_all_ids(result)', 'np.all(times_diffs[0:4-1] < timeout)', 'np.all(times_diffs[4-1:4-1+1] >= timeout)', 'np.all(times_diffs[4-1+1:] < timeout)', 'contains_all_ids(result)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1469,aleju,kontakt@ajung.name,2019-05-11 14:46:01+02:00,113c4013ddd00bc7ce44c5fe64d54368fa6d41a9,https://github.com/aleju/imgaug/commit/113c4013ddd00bc7ce44c5fe64d54368fa6d41a9,Add version info for output_buffer_size in docstrings,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1470,aleju,kontakt@ajung.name,2019-05-11 16:18:57+02:00,61fe5f90c33ae1ae9bc1c50e2914b75d3d7de5b7,https://github.com/aleju/imgaug/commit/61fe5f90c33ae1ae9bc1c50e2914b75d3d7de5b7,Fix multicore not accepting UnnormalizedBatch,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['to_check.call_count == 1', 'to_check.call_args[0][0] == multicore._Pool_starworker', 'to_check.call_args[0][1][0][0] == 0', 'np.array_equal(to_check.call_args[0][1][0][1].images_unaug, batches[0].images_unaug)', 'to_check.call_args[0][1][1][0] == 1', 'np.array_equal(to_check.call_args[0][1][1][1].images_unaug, batches[1].images_unaug)', 'to_check.call_count == 1', 'to_check.call_args[0][0] == multicore._Pool_starworker', 'arg_batches[0][0] == 0', 'np.array_equal(arg_batches[0][1].images_unaug, batches[0].images_unaug)', 'arg_batches[1][0] == 1', 'np.array_equal(arg_batches[1][1].images_unaug, batches[1].images_unaug)']",[],[],[],[],[],[],[],[],[],[],[],[],"['to_check.call_count == 1', 'to_check.call_args[0][0] == multicore._Pool_starworker', 'to_check.call_args[0][1][0][0] == 0', 'np.array_equal(to_check.call_args[0][1][0][1].images_unaug, batches[0].images_unaug)', 'to_check.call_args[0][1][1][0] == 1', 'np.array_equal(to_check.call_args[0][1][1][1].images_unaug, batches[1].images_unaug)', 'to_check.call_count == 1', 'to_check.call_args[0][0] == multicore._Pool_starworker', 'arg_batches[0][0] == 0', 'np.array_equal(arg_batches[0][1].images_unaug, batches[0].images_unaug)', 'arg_batches[1][0] == 1', 'np.array_equal(arg_batches[1][1].images_unaug, batches[1].images_unaug)']",[],[],[],[],[],[],[],[],[],[],[],[]
1471,aleju,kontakt@ajung.name,2019-05-11 16:34:21+02:00,7bcb2dde75c6a053b157290dd301a2cd89176beb,https://github.com/aleju/imgaug/commit/7bcb2dde75c6a053b157290dd301a2cd89176beb,Remove unnecessary import,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1472,joncrall,erotemic@gmail.com,2019-05-11 15:50:45-04:00,21f4474baf7f3ea36d47a15d55df97780e887fec,https://github.com/aleju/imgaug/commit/21f4474baf7f3ea36d47a15d55df97780e887fec,Change Flip augmentations to assume subpixel floating point keypoints,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1473,joncrall,jon.crall@kitware.com,2019-05-21 09:48:15-04:00,3b6450b4822135e6cab10a89fcdb1611fd31f721,https://github.com/aleju/imgaug/commit/3b6450b4822135e6cab10a89fcdb1611fd31f721,Apply diff to fix tests,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.isclose(keypoint_aug.x, keypoint.x) and np.isclose(keypoint_aug.y, keypoint.y) \\']",[],[],[],[],[],[],[],[],[],[],[],[],['(keypoint_aug.x == keypoint.x and keypoint_aug.y == keypoint.y) \\'],[],[],[],[],[],[],[],[],[],[],[],[]
1474,aleju,kontakt@ajung.name,2019-06-01 12:02:43+02:00,5d66fa9e58bfa8bd1752bc0d231699e21ed31895,https://github.com/aleju/imgaug/commit/5d66fa9e58bfa8bd1752bc0d231699e21ed31895,Fix tests in numpy 1.16.4,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['_allclose(image_aug[2, 2], np.float128(value))', '_allclose(arr_pooled, np.float128(value))', '_allclose(arr_pooled, np.float128(value))']",[],[],[],[],[],[],[],[],[],[],[],[],"['_allclose(image_aug[2, 2], float(value))', '_allclose(arr_pooled, float(value))', '_allclose(arr_pooled, float(value))']",[],[],[],[],[],[],[],[],[],[],[],[]
1475,aleju,kontakt@ajung.name,2019-05-19 22:05:50+02:00,d11ce12765559449a518ebef3b30f645b7e81d22,https://github.com/aleju/imgaug/commit/d11ce12765559449a518ebef3b30f645b7e81d22,"Add Canny, edges.py, BinaryImageColorizerIf & RandomColor(...)Colorizer",4,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],2,0,1,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,123,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestRandomColorsBinaryImageColorizer(unittest.TestCase):', 'class TestCanny(unittest.TestCase):']",[],['def setUp(self):'],[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['isinstance(colorizer.color_fg, iap.DiscreteUniform)', 'isinstance(colorizer.color_bg, iap.DiscreteUniform)', 'colorizer.color_fg.a.value == 0', 'colorizer.color_fg.b.value == 255', 'colorizer.color_bg.a.value == 0', 'colorizer.color_bg.b.value == 255', 'isinstance(colorizer.color_fg, iap.Deterministic)', 'isinstance(colorizer.color_bg, iap.Deterministic)', 'colorizer.color_fg.value == 1', 'colorizer.color_bg.value == 2', 'isinstance(colorizer.color_fg, iap.DiscreteUniform)', 'isinstance(colorizer.color_bg, iap.Choice)', 'colorizer.color_fg.a.value == 0', 'colorizer.color_fg.b.value == 100', 'colorizer.color_bg.a[0] == 200', 'colorizer.color_bg.a[1] == 201', 'colorizer.color_bg.a[2] == 202', 'isinstance(colorizer.color_fg, iap.DiscreteUniform)', 'isinstance(colorizer.color_bg, iap.Choice)', 'colorizer.color_fg.a.value == 0', 'colorizer.color_fg.b.value == 100', 'colorizer.color_bg.a[0] == 200', 'colorizer.color_bg.a[1] == 201', 'colorizer.color_bg.a[2] == 202', 'size == (3,)', 'np.array_equal(color_fg, [0, 1, 2])', 'np.array_equal(color_bg, [1, 2, 3])', 'colorizer.color_fg.last_random_state == random_state', 'colorizer.color_bg.last_random_state == random_state', 'image_color.ndim == 3', 'image_color.shape[-1] == 1', 'np.all(image_color[image_binary] == 100)', 'np.all(image_color[~image_binary] == 10)', 'image_color.ndim == 3', 'image_color.shape[-1] == 3', 'np.all(image_color[image_binary] == 100)', 'np.all(image_color[~image_binary] == 10)', 'image_color.ndim == 3', 'image_color.shape[-1] == 4', 'np.all(image_color[image_binary, 0:3] == 100)', 'np.all(image_color[~image_binary, 0:3] == 10)', 'np.all(image_color[:, :, 3:4] == image[:, :, 3:4])', 'isinstance(aug.alpha, iap.Uniform)', 'isinstance(aug.hysteresis_thresholds, tuple)', 'isinstance(aug.sobel_kernel_size, iap.DiscreteUniform)', 'isinstance(aug.colorizer, iaa.RandomColorsBinaryImageColorizer)', 'np.isclose(aug.alpha.a.value, 0.0)', 'np.isclose(aug.alpha.b.value, 1.0)', 'len(aug.hysteresis_thresholds) == 2', 'isinstance(aug.hysteresis_thresholds[0], iap.DiscreteUniform)', 'np.isclose(aug.hysteresis_thresholds[0].a.value, 100-40)', 'np.isclose(aug.hysteresis_thresholds[0].b.value, 100+40)', 'isinstance(aug.hysteresis_thresholds[1], iap.DiscreteUniform)', 'np.isclose(aug.hysteresis_thresholds[1].a.value, 200-40)', 'np.isclose(aug.hysteresis_thresholds[1].b.value, 200+40)', 'aug.sobel_kernel_size.a.value == 3', 'aug.sobel_kernel_size.b.value == 7', 'isinstance(aug.colorizer.color_fg, iap.DiscreteUniform)', 'isinstance(aug.colorizer.color_bg, iap.DiscreteUniform)', 'aug.colorizer.color_fg.a.value == 0', 'aug.colorizer.color_fg.b.value == 255', 'aug.colorizer.color_bg.a.value == 0', 'aug.colorizer.color_bg.b.value == 255', 'isinstance(aug.alpha, iap.Deterministic)', 'isinstance(aug.hysteresis_thresholds, tuple)', 'isinstance(aug.sobel_kernel_size, iap.Choice)', 'isinstance(aug.colorizer, iaa.RandomColorsBinaryImageColorizer)', 'np.isclose(aug.alpha.value, 0.2)', 'len(aug.hysteresis_thresholds) == 2', 'isinstance(aug.hysteresis_thresholds[0], iap.Choice)', 'aug.hysteresis_thresholds[0].a == [0, 1, 2]', 'isinstance(aug.hysteresis_thresholds[1], iap.DiscreteUniform)', 'np.isclose(aug.hysteresis_thresholds[1].a.value, 1)', 'np.isclose(aug.hysteresis_thresholds[1].b.value, 10)', 'isinstance(aug.sobel_kernel_size, iap.Choice)', 'aug.sobel_kernel_size.a == [3, 5]', 'isinstance(aug.colorizer.color_fg, iap.Deterministic)', 'isinstance(aug.colorizer.color_bg, iap.Deterministic)', 'aug.colorizer.color_fg.value == 10', 'aug.colorizer.color_bg.value == 20', 'isinstance(aug.alpha, iap.Deterministic)', 'isinstance(aug.hysteresis_thresholds, iap.Choice)', 'isinstance(aug.sobel_kernel_size, iap.Choice)', 'isinstance(aug.colorizer, iaa.RandomColorsBinaryImageColorizer)', 'np.isclose(aug.alpha.value, 0.2)', 'aug.hysteresis_thresholds.a == [0, 1, 2]', 'isinstance(aug.sobel_kernel_size, iap.Choice)', 'aug.sobel_kernel_size.a == [3, 5]', 'isinstance(aug.colorizer.color_fg, iap.Deterministic)', 'isinstance(aug.colorizer.color_bg, iap.Deterministic)', 'aug.colorizer.color_fg.value == 10', 'aug.colorizer.color_bg.value == 20', 'np.any(invalid)', 'hthresh_expected.shape == (nb_images, 2)', 'not np.any(hthresh_expected[:, 0] > hthresh_expected[:, 1])', 'np.allclose(alpha_samples, alpha_expected)', 'np.allclose(hthresh_samples, hthresh_expected)', 'np.allclose(sobel_samples, sobel_expected)', 'hthresh_expected.shape == (nb_images, 2)', 'not np.any(hthresh_expected[:, 0] > hthresh_expected[:, 1])', 'np.allclose(alpha_samples, alpha_expected)', 'np.allclose(hthresh_samples, hthresh_expected)', 'np.allclose(sobel_samples, sobel_expected)', 'np.array_equal(image_aug, image)', 'np.array_equal(image_aug, image_aug_expected)', 'np.array_equal(image_aug, image_aug_expected)', 'image.ndim == 3', 'image.shape[-1] == 4', 'np.array_equal(image_aug, image_aug_expected)', 'len(color_fg) == 1', 'len(color_bg) == 1', 'len(seen.keys()) == 4', 'all(seen.values())', 'similar == 0', 'match_index is not None', 'len(seen.keys()) == len(images_canny_uint8.keys())', 'all(seen.values())', 'params[0] is alpha', 'params[1] is hysteresis_thresholds', 'params[2] is sobel_kernel_size', 'params[3] is colorizer', 'observed == expected', 'observed == expected']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1476,aleju,kontakt@ajung.name,2019-05-21 19:03:04+02:00,128c6569b80b2c24009332e8baa398df26f31765,https://github.com/aleju/imgaug/commit/128c6569b80b2c24009332e8baa398df26f31765,Fix kernel size issues,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1477,aleju,kontakt@ajung.name,2019-05-21 19:03:24+02:00,a7f763d19a28be34d7a9a745a536c97d59720b24,https://github.com/aleju/imgaug/commit/a7f763d19a28be34d7a9a745a536c97d59720b24,Add check script for canny,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1478,aleju,kontakt@ajung.name,2019-05-21 19:23:00+02:00,1b721f86ffc4881dc3554e441da419bcd8b3d78d,https://github.com/aleju/imgaug/commit/1b721f86ffc4881dc3554e441da419bcd8b3d78d,Rename color_fg/bg to color_true/false; fix tests,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(colorizer.color_true, iap.DiscreteUniform)', 'isinstance(colorizer.color_false, iap.DiscreteUniform)', 'colorizer.color_true.a.value == 0', 'colorizer.color_true.b.value == 255', 'colorizer.color_false.a.value == 0', 'colorizer.color_false.b.value == 255', 'isinstance(colorizer.color_true, iap.Deterministic)', 'isinstance(colorizer.color_false, iap.Deterministic)', 'colorizer.color_true.value == 1', 'colorizer.color_false.value == 2', 'isinstance(colorizer.color_true, iap.DiscreteUniform)', 'isinstance(colorizer.color_false, iap.Choice)', 'colorizer.color_true.a.value == 0', 'colorizer.color_true.b.value == 100', 'colorizer.color_false.a[0] == 200', 'colorizer.color_false.a[1] == 201', 'colorizer.color_false.a[2] == 202', 'isinstance(colorizer.color_true, iap.DiscreteUniform)', 'isinstance(colorizer.color_false, iap.Choice)', 'colorizer.color_true.a.value == 0', 'colorizer.color_true.b.value == 100', 'colorizer.color_false.a[0] == 200', 'colorizer.color_false.a[1] == 201', 'colorizer.color_false.a[2] == 202', 'np.array_equal(color_true, [0, 1, 2])', 'np.array_equal(color_false, [1, 2, 3])', 'colorizer.color_true.last_random_state == random_state', 'colorizer.color_false.last_random_state == random_state', 'isinstance(aug.colorizer.color_true, iap.DiscreteUniform)', 'isinstance(aug.colorizer.color_false, iap.DiscreteUniform)', 'aug.colorizer.color_true.a.value == 0', 'aug.colorizer.color_true.b.value == 255', 'aug.colorizer.color_false.a.value == 0', 'aug.colorizer.color_false.b.value == 255', 'isinstance(aug.colorizer.color_true, iap.Deterministic)', 'isinstance(aug.colorizer.color_false, iap.Deterministic)', 'aug.colorizer.color_true.value == 10', 'aug.colorizer.color_false.value == 20', 'isinstance(aug.colorizer.color_true, iap.Deterministic)', 'isinstance(aug.colorizer.color_false, iap.Deterministic)', 'aug.colorizer.color_true.value == 10', 'aug.colorizer.color_false.value == 20', 'len(color_true) == 1', 'len(color_false) == 1']",[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(colorizer.color_fg, iap.DiscreteUniform)', 'isinstance(colorizer.color_bg, iap.DiscreteUniform)', 'colorizer.color_fg.a.value == 0', 'colorizer.color_fg.b.value == 255', 'colorizer.color_bg.a.value == 0', 'colorizer.color_bg.b.value == 255', 'isinstance(colorizer.color_fg, iap.Deterministic)', 'isinstance(colorizer.color_bg, iap.Deterministic)', 'colorizer.color_fg.value == 1', 'colorizer.color_bg.value == 2', 'isinstance(colorizer.color_fg, iap.DiscreteUniform)', 'isinstance(colorizer.color_bg, iap.Choice)', 'colorizer.color_fg.a.value == 0', 'colorizer.color_fg.b.value == 100', 'colorizer.color_bg.a[0] == 200', 'colorizer.color_bg.a[1] == 201', 'colorizer.color_bg.a[2] == 202', 'isinstance(colorizer.color_fg, iap.DiscreteUniform)', 'isinstance(colorizer.color_bg, iap.Choice)', 'colorizer.color_fg.a.value == 0', 'colorizer.color_fg.b.value == 100', 'colorizer.color_bg.a[0] == 200', 'colorizer.color_bg.a[1] == 201', 'colorizer.color_bg.a[2] == 202', 'np.array_equal(color_fg, [0, 1, 2])', 'np.array_equal(color_bg, [1, 2, 3])', 'colorizer.color_fg.last_random_state == random_state', 'colorizer.color_bg.last_random_state == random_state', 'isinstance(aug.colorizer.color_fg, iap.DiscreteUniform)', 'isinstance(aug.colorizer.color_bg, iap.DiscreteUniform)', 'aug.colorizer.color_fg.a.value == 0', 'aug.colorizer.color_fg.b.value == 255', 'aug.colorizer.color_bg.a.value == 0', 'aug.colorizer.color_bg.b.value == 255', 'isinstance(aug.colorizer.color_fg, iap.Deterministic)', 'isinstance(aug.colorizer.color_bg, iap.Deterministic)', 'aug.colorizer.color_fg.value == 10', 'aug.colorizer.color_bg.value == 20', 'isinstance(aug.colorizer.color_fg, iap.Deterministic)', 'isinstance(aug.colorizer.color_bg, iap.Deterministic)', 'aug.colorizer.color_fg.value == 10', 'aug.colorizer.color_bg.value == 20', 'len(color_fg) == 1', 'len(color_bg) == 1']",[],[],[],[],[],[],[],[],[],[],[],[]
1479,aleju,kontakt@ajung.name,2019-06-01 11:08:54+02:00,3ceb868e497e1270108e64982bcd9e0dfd8e9cf4,https://github.com/aleju/imgaug/commit/3ceb868e497e1270108e64982bcd9e0dfd8e9cf4,Fix pylint warnings,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1480,aleju,kontakt@ajung.name,2019-06-01 16:09:08+02:00,5c6223dd1dbcb6433aad099558e6ca7a951b9e12,https://github.com/aleju/imgaug/commit/5c6223dd1dbcb6433aad099558e6ca7a951b9e12,Fix Rot90 not using subpixel coordinate transformation,4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['psoi_aug.polygons[0].exterior_almost_equals(expected_k1_polys)', 'psoi_aug.polygons[0].exterior_almost_equals(expected_k2_polys)', 'psoi_aug.polygons[0].exterior_almost_equals(expected_k3_polys)', 'np.allclose([kpsoi_aug[0].keypoints[0].x, kpsoi_aug[0].keypoints[0].y], expected_k1_kps[0])', 'np.allclose([kpsoi_aug[0].keypoints[1].x, kpsoi_aug[0].keypoints[1].y], expected_k1_kps[1])', 'np.allclose([kpsoi_aug[1].keypoints[0].x, kpsoi_aug[1].keypoints[0].y], expected_k2_kps[0])', 'np.allclose([kpsoi_aug[1].keypoints[1].x, kpsoi_aug[1].keypoints[1].y], expected_k2_kps[1])', 'np.allclose([kpsoi_aug[2].keypoints[0].x, kpsoi_aug[2].keypoints[0].y], expected_k1_kps[0])', 'np.allclose([kpsoi_aug[2].keypoints[1].x, kpsoi_aug[2].keypoints[1].y], expected_k1_kps[1])', 'np.allclose([kpsoi_aug[3].keypoints[0].x, kpsoi_aug[3].keypoints[0].y], expected_k2_kps[0])', 'np.allclose([kpsoi_aug[3].keypoints[1].x, kpsoi_aug[3].keypoints[1].y], expected_k2_kps[1])', 'psoi_aug[0].polygons[0].exterior_almost_equals(expected_k1_polys)', 'psoi_aug[1].polygons[0].exterior_almost_equals(expected_k2_polys)', 'psoi_aug[2].polygons[0].exterior_almost_equals(expected_k1_polys)', 'psoi_aug[3].polygons[0].exterior_almost_equals(expected_k2_polys)', 'np.allclose(kpsoi_aug.keypoints[0].x, 5 - 2 + kp_offset)', 'np.allclose(kpsoi_aug.keypoints[1].x, 5 - 5 + kp_offset)', 'np.allclose(kpsoi_aug.keypoints[2].x, 5 - 3 + kp_offset)', 'np.allclose(kpsoi_aug[i].keypoints[0].x, 5 - 2 + kp_offset)', 'np.allclose(kpsoi_aug[i].keypoints[1].x, 5 - 5 + kp_offset)', 'np.allclose(kpsoi_aug[i].keypoints[2].x, 5 - 3 + kp_offset)', 'np.allclose(bbsoi_aug.bounding_boxes[0].x1, 5 - 5 + kp_offset)', 'np.allclose(bbsoi_aug.bounding_boxes[0].x2, 5 - 4 + kp_offset)', 'np.allclose(bbsoi_aug.bounding_boxes[1].x1, 5 - 2 + kp_offset)', 'np.allclose(bbsoi_aug.bounding_boxes[1].x2, 5 - 0 + kp_offset)', 'np.allclose(bbsoi_aug[i].bounding_boxes[0].x1, 5 - 5 + kp_offset)', 'np.allclose(bbsoi_aug[i].bounding_boxes[0].x2, 5 - 4 + kp_offset)', 'np.allclose(bbsoi_aug[i].bounding_boxes[1].x1, 5 - 2 + kp_offset)', 'np.allclose(bbsoi_aug[i].bounding_boxes[1].x2, 5 - 0 + kp_offset)', 'found_image', 'found_poly', 'found_image', 'found_ls']",[],[],[],[],[],[],[],[],[],[],[],[],"['psoi_aug.polygons[0].exterior_almost_equals(expected)', 'psoi_aug.polygons[0].exterior_almost_equals(expected)', 'psoi_aug.polygons[0].exterior_almost_equals(expected)', 'np.allclose([kpsoi_aug[0].keypoints[0].x, kpsoi_aug[0].keypoints[0].y], [1, 1])', 'np.allclose([kpsoi_aug[0].keypoints[1].x, kpsoi_aug[0].keypoints[1].y], [0, 2])', 'np.allclose([kpsoi_aug[1].keypoints[0].x, kpsoi_aug[1].keypoints[0].y], [6, 1])', 'np.allclose([kpsoi_aug[1].keypoints[1].x, kpsoi_aug[1].keypoints[1].y], [5, 0])', 'np.allclose([kpsoi_aug[2].keypoints[0].x, kpsoi_aug[2].keypoints[0].y], [1, 1])', 'np.allclose([kpsoi_aug[2].keypoints[1].x, kpsoi_aug[2].keypoints[1].y], [0, 2])', 'np.allclose([kpsoi_aug[3].keypoints[0].x, kpsoi_aug[3].keypoints[0].y], [6, 1])', 'np.allclose([kpsoi_aug[3].keypoints[1].x, kpsoi_aug[3].keypoints[1].y], [5, 0])', 'psoi_aug[0].polygons[0].exterior_almost_equals(expected_rot1)', 'psoi_aug[1].polygons[0].exterior_almost_equals(expected_rot2)', 'psoi_aug[2].polygons[0].exterior_almost_equals(expected_rot1)', 'psoi_aug[3].polygons[0].exterior_almost_equals(expected_rot2)', 'np.allclose(kpsoi_aug.keypoints[0].x, 5 - 2 - 1)', 'np.allclose(kpsoi_aug.keypoints[1].x, 5 - 5 - 1)', 'np.allclose(kpsoi_aug.keypoints[2].x, 5 - 3 - 1)', 'np.allclose(kpsoi_aug[i].keypoints[0].x, 5 - 2 - 1)', 'np.allclose(kpsoi_aug[i].keypoints[1].x, 5 - 5 - 1)', 'np.allclose(kpsoi_aug[i].keypoints[2].x, 5 - 3 - 1)', 'np.allclose(bbsoi_aug.bounding_boxes[0].x1, 5 - 5 - 1)', 'np.allclose(bbsoi_aug.bounding_boxes[0].x2, 5 - 4 - 1)', 'np.allclose(bbsoi_aug.bounding_boxes[1].x1, 5 - 2 - 1)', 'np.allclose(bbsoi_aug.bounding_boxes[1].x2, 5 - 0 - 1)', 'np.allclose(bbsoi_aug[i].bounding_boxes[0].x1, 5 - 5 - 1)', 'np.allclose(bbsoi_aug[i].bounding_boxes[0].x2, 5 - 4 - 1)', 'np.allclose(bbsoi_aug[i].bounding_boxes[1].x1, 5 - 2 - 1)', 'np.allclose(bbsoi_aug[i].bounding_boxes[1].x2, 5 - 0 - 1)']",[],[],[],[],[],[],[],[],[],[],[],[]
1481,aleju,kontakt@ajung.name,2019-06-02 11:11:19+02:00,212101dd364d23e156999d1950e90b60fd43ab7d,https://github.com/aleju/imgaug/commit/212101dd364d23e156999d1950e90b60fd43ab7d,Mark external file as unused,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1482,aleju,kontakt@ajung.name,2019-06-02 11:13:22+02:00,2b9e1ff62673da4481b5d50b0d7857258a004887,https://github.com/aleju/imgaug/commit/2b9e1ff62673da4481b5d50b0d7857258a004887,Add note about not using py3 file,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1483,aleju,kontakt@ajung.name,2019-06-02 11:13:46+02:00,8bb72f883ce72dad6ce7dd7c598e30f7309792cc,https://github.com/aleju/imgaug/commit/8bb72f883ce72dad6ce7dd7c598e30f7309792cc,Fix broken example in docstring,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1484,aleju,kontakt@ajung.name,2019-06-02 11:25:29+02:00,e99f42d2a16bef4373a8ad74dc706e449d694df2,https://github.com/aleju/imgaug/commit/e99f42d2a16bef4373a8ad74dc706e449d694df2,Block pytest 4.6.0 for now due to crashes,2,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1485,aleju,kontakt@ajung.name,2019-06-01 18:23:31+02:00,1e37ac2f0fae3794e3f4a7c67dfc0c6a19c6bfc3,https://github.com/aleju/imgaug/commit/1e37ac2f0fae3794e3f4a7c67dfc0c6a19c6bfc3,Block uint64 + fix missing dtype restore in Invert,3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed.dtype.name == ', 'observed.dtype.name == ', 'observed.dtype.name == ', 'observed.dtype.name == ', 'observed.dtype.name == ', 'observed.dtype.name == ', 'np.array_equal(observed, expected)', 'observed.dtype.name == ', 'np.array_equal(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1486,aleju,kontakt@ajung.name,2019-06-01 18:35:43+02:00,a5f0341255ffe577ea39f17f6a5a7514d1db2633,https://github.com/aleju/imgaug/commit/a5f0341255ffe577ea39f17f6a5a7514d1db2633,Fix gate_dtypes() not handling numpy scalars,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1487,aleju,kontakt@ajung.name,2019-06-01 18:36:54+02:00,024f23eb0cfc9a7ecb0135d5bd855b81da8652c3,https://github.com/aleju/imgaug/commit/024f23eb0cfc9a7ecb0135d5bd855b81da8652c3,Add dtype gating to dtypes.clip_(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1488,aleju,kontakt@ajung.name,2019-05-22 21:50:23+02:00,b9959f2f43a68ffc67057ae24331396592377d8b,https://github.com/aleju/imgaug/commit/b9959f2f43a68ffc67057ae24331396592377d8b,Add AveragePool; Add augmenters/pool.py,5,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestAveragePool(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['len(aug.kernel_size) == 2', 'isinstance(aug.kernel_size[0], iap.Deterministic)', 'aug.kernel_size[0].value == 2', 'aug.kernel_size[1] is None', 'aug.keep_size is True', 'len(aug.kernel_size) == 2', 'isinstance(aug.kernel_size[0], iap.DiscreteUniform)', 'isinstance(aug.kernel_size[1], iap.DiscreteUniform)', 'aug.kernel_size[0].a.value == 2', 'aug.kernel_size[0].b.value == 4', 'aug.kernel_size[1].a.value == 5', 'aug.kernel_size[1].b.value == 6', 'aug.keep_size is False', 'np.array_equal(aug.augment_image(image), image)', 'np.array_equal(aug.augment_image(image), image)', 'image_aug.shape == (3, 3, 3)', 'np.all(diff <= 1)', 'image_aug.shape == (1, 2, 3)', 'np.all(diff <= 1)', 'image_aug.shape == (1, 2, 4)', 'np.all(diff <= 1)', 'image_aug.shape == (1, 2, 3)', 'np.all(diff <= 1)', 'image_aug.shape == (2, 4, 3)', 'np.all(diff <= 1)', 'image_aug.shape == (1, 2, 1)', 'np.all(diff <= 1)', 'len(params) == 2', 'len(params[0]) == 2', 'isinstance(params[0][0], iap.Deterministic)', 'params[0][0].value == 2', 'params[0][1] is None']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1489,aleju,kontakt@ajung.name,2019-05-23 20:21:37+02:00,0d50c6d73c82fdd85c3c3a9dd56a9291ae2e9cb0,https://github.com/aleju/imgaug/commit/0d50c6d73c82fdd85c3c3a9dd56a9291ae2e9cb0,Introduce pool._AbstractPoolBase,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1490,aleju,kontakt@ajung.name,2019-05-23 20:50:15+02:00,250720992c89e322a142c3bbe6827d0981afafa4,https://github.com/aleju/imgaug/commit/250720992c89e322a142c3bbe6827d0981afafa4,Add MaxPool,2,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestMaxPool(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.shape == (1, 2, 3)', 'np.all(diff <= 1)', 'image_aug.shape == (1, 2, 2)', 'np.all(diff <= 1)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1491,aleju,kontakt@ajung.name,2019-05-23 20:50:36+02:00,41cccd227dc265ed317eb9a4445a9d715428e40d,https://github.com/aleju/imgaug/commit/41cccd227dc265ed317eb9a4445a9d715428e40d,Add MaxPool to check script,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1492,aleju,kontakt@ajung.name,2019-05-23 20:52:04+02:00,4889406feeed23bc65382d2ac55d24cdbb621e10,https://github.com/aleju/imgaug/commit/4889406feeed23bc65382d2ac55d24cdbb621e10,Rename multicore.Pool check script,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1493,aleju,kontakt@ajung.name,2019-05-23 20:52:28+02:00,866e2a62791693e00d987d8dc635f089aa74205f,https://github.com/aleju/imgaug/commit/866e2a62791693e00d987d8dc635f089aa74205f,Rename pool augmenters script,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1494,aleju,kontakt@ajung.name,2019-05-23 20:53:10+02:00,3438371ea25d43d66dfa589774b58682c6d15e31,https://github.com/aleju/imgaug/commit/3438371ea25d43d66dfa589774b58682c6d15e31,Add MaxPool to module docstring,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1495,aleju,kontakt@ajung.name,2019-05-23 21:20:54+02:00,9aa2ae7bb32302a49b1270e840a5e266372fda53,https://github.com/aleju/imgaug/commit/9aa2ae7bb32302a49b1270e840a5e266372fda53,Add MinPool,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestMinPool(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.shape == (1, 2, 3)', 'np.all(diff <= 1)', 'image_aug.shape == (1, 2, 2)', 'np.all(diff <= 1)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1496,aleju,kontakt@ajung.name,2019-05-24 16:14:10+02:00,822ab0bbd335f7f50dba9a10ce7b29c54e3a5010,https://github.com/aleju/imgaug/commit/822ab0bbd335f7f50dba9a10ce7b29c54e3a5010,Add MedianPool,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestMedianPool(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.shape == (1, 2, 3)', 'np.all(diff <= 1)', 'image_aug.shape == (1, 3, 2)', 'np.all(diff <= 1)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1497,aleju,kontakt@ajung.name,2019-05-24 16:36:11+02:00,dd94a0901156861be34575f7c8a2a6046ff33fe2,https://github.com/aleju/imgaug/commit/dd94a0901156861be34575f7c8a2a6046ff33fe2,Rename pool to pooling,4,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],3,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestAveragePooling(unittest.TestCase):', 'class TestMaxPooling(unittest.TestCase):', 'class TestMinPooling(unittest.TestCase):']",[],[],[],[],[],[],[],[],[],[],"['class TestAveragePool(unittest.TestCase):', 'class TestMaxPool(unittest.TestCase):', 'class TestMinPool(unittest.TestCase):']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1498,aleju,kontakt@ajung.name,2019-05-24 16:41:27+02:00,875cc102e3f32a77e0b0c434eb740694b1bdb73f,https://github.com/aleju/imgaug/commit/875cc102e3f32a77e0b0c434eb740694b1bdb73f,Improve cvals in pooling,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1499,aleju,kontakt@ajung.name,2019-05-24 16:43:07+02:00,8565e4dbc1dc4d1b3250ea754336a0014bcc5a9b,https://github.com/aleju/imgaug/commit/8565e4dbc1dc4d1b3250ea754336a0014bcc5a9b,Add pooling augmenters to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1500,aleju,kontakt@ajung.name,2019-05-24 17:17:43+02:00,60bc1b26fb770aab19e421f97018da1fd78fd0c6,https://github.com/aleju/imgaug/commit/60bc1b26fb770aab19e421f97018da1fd78fd0c6,Disable pylint warnings,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1501,aleju,kontakt@ajung.name,2019-06-09 18:23:46+02:00,79fcdc7f4552782ce97937f74ac30050342814ad,https://github.com/aleju/imgaug/commit/79fcdc7f4552782ce97937f74ac30050342814ad,Switch arithmetic tests to unittest,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],16,0,16,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,642,0,0,0,0,0,0,0,0,0,0,0,0,646,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestAdd(unittest.TestCase):', 'class TestAddElementwise(unittest.TestCase):', 'class AdditiveGaussianNoise(unittest.TestCase):', 'class TestDropout(unittest.TestCase):', 'class TestCoarseDropout(unittest.TestCase):', 'class TestMultiple(unittest.TestCase):', 'class TestMultiplyElementwise(unittest.TestCase):', 'class TestReplaceElementwise(unittest.TestCase):', 'class TestSaltAndPepper(unittest.TestCase):', 'class TestCoarseSaltAndPepper(unittest.TestCase):', 'class TestSalt(unittest.TestCase):', 'class TestCoarseSalt(unittest.TestCase):', 'class TestPepper(unittest.TestCase):', 'class TestCoarsePepper(unittest.TestCase):', 'class TestInvert(unittest.TestCase):', 'class TestJpegCompression(unittest.TestCase):']",[],"['def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):']",[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['got_exception', 'got_exception', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'img_aug.item(0) == expected', 'np.all(img_aug == expected)', 'img_aug.item(0) == 2', 'img_aug.item(0) == 2', 'img_aug.item(0) == 1', 'img_aug.item(0) == 1', '100 + 1 <= np.average(observed) <= 100 + 10', '100 + 1 <= np.average(observed) <= 100 + 10', '100 - 3 <= np.average(observed) <= 100 + 3', '100 - 3 <= np.average(observed) <= 100 + 3', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'nb_changed_aug >= int(nb_iterations * 0.7)', 'nb_changed_aug_det == 0', '0 in uq', '1 in uq', 'len(uq) == 2', '150 < seen[0] < 250', '150 < seen[1] < 250', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'params[0].value == 1', 'params[1].value == 0', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value + 1)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value + 21)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value - 1)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value + 1)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value)', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) == 1', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) > 1', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) == 1', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) > 1', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value + 1)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value + 21)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, max_value - 1)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, max_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, max_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value + 1)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value)', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-10 - 1e-2 < image_aug, image_aug < 10 + 1e-2))', 'np.allclose(image_aug[1:, :, 0], image_aug[:-1, :, 0])', 'np.allclose(image_aug[..., 0], image_aug[..., 1])', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-10 - 1e-2 < image_aug, image_aug < 10 + 1e-2))', 'not np.allclose(image_aug[:, :, 1:], image_aug[:, :, :-1])', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-10 - 1e-2 < image_aug, image_aug < 10 + 1e-2))', 'np.allclose(image_aug[1:, :, 0], image_aug[:-1, :, 0])', 'np.allclose(image_aug[..., 0], image_aug[..., 1])', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-10 - 1e-2 < image_aug, image_aug < 10 + 1e-2))', 'not np.allclose(image_aug[:, :, 1:], image_aug[:, :, :-1])', 'got_exception', 'got_exception', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'img_aug.item(0) == expected', 'np.all(img_aug == expected)', 'np.min(observed) >= 100 + 1', 'np.max(observed) <= 100 + 10', 'np.min(observed) >= 100 + 1', 'np.max(observed) <= 100 + 10', 'np.min(observed) >= 100 - 3', 'np.max(observed) <= 100 + 3', 'np.min(observed) >= 100 - 3', 'np.max(observed) <= 100 + 3', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'nb_changed_aug >= int(nb_iterations * 0.7)', 'nb_changed_aug_det == 0', 'nb_different > 0.9 * (nb_different + nb_same)', 'all([(value in values) for value in [0, 1, 2, 3]])', '150 < seen[0] < 250', '150 < seen[1] < 250', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'params[0].value == 1', 'params[1].value == 0', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == min_value + 1)', 'np.all(image_aug == min_value + 21)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value - 1)', 'np.all(image_aug == max_value)', 'np.all(image_aug == min_value + 1)', 'np.all(image_aug == min_value)', 'np.all(image_aug == min_value)', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) > 1', 'np.all(image_aug[..., 0] == image_aug[..., 1])', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) > 1', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) > 1', 'np.all(image_aug[..., 0] == image_aug[..., 1])', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) > 1', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value + 1)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value + 21)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, max_value - 1)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, max_value)', '_allclose(image_aug, max_value)', '_allclose(image_aug, min_value + 1)', '_allclose(image_aug, min_value)', '_allclose(image_aug, min_value)', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-10 - 1e-2 < image_aug, image_aug < 10 + 1e-2))', 'not np.allclose(image_aug[1:, :, 0], image_aug[:-1, :, 0])', 'np.allclose(image_aug[..., 0], image_aug[..., 1])', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-10 - 1e-2 < image_aug, image_aug < 10 + 1e-2))', 'not np.allclose(image_aug[:, :, 1:], image_aug[:, :, :-1])', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-10 - 1e-2 < image_aug, image_aug < 10 + 1e-2))', 'not np.allclose(image_aug[1:, :, 0], image_aug[:-1, :, 0])', 'np.allclose(image_aug[..., 0], image_aug[..., 1])', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-10 - 1e-2 < image_aug, image_aug < 10 + 1e-2))', 'not np.allclose(image_aug[:, :, 1:], image_aug[:, :, :-1])', 'np.array_equal(observed, expected)', 'not np.array_equal(observed, images)', 'not np.array_equal(observed, images)', 'not array_equal_lists(observed, images_list)', 'not array_equal_lists(observed, images_list)', 'keypoints_equal(observed, keypoints)', 'keypoints_equal(observed, keypoints)', 'np.min(values) == 0', '0.1 < np.std(values) / 255.0 < 0.4', '54 < np.average(values) < 74 # loc=0.25 should be around 255*0.25=64 average', 'nb_changed_aug >= int(nb_iterations * 0.95)', 'nb_changed_aug_det == 0', 'False', '75 < seen[0] < 125', '75 < seen[1] < 125', 'nb_changed_aug >= int(nb_iterations * 0.95)', 'nb_changed_aug_det == 0', 'seen[2] <= 5', '75 < seen[0] < 125', '75 < seen[1] < 125', 'got_exception', 'got_exception', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'not np.array_equal(observed, images)', '0.35 <= (1 - percent_nonzero) <= 0.65', 'not np.array_equal(observed, images)', '0.35 <= (1 - percent_nonzero) <= 0.65', 'not array_equal_lists(observed, images_list)', '0.35 <= (1 - percent_nonzero) <= 0.65', 'not array_equal_lists(observed, images_list)', '0.35 <= (1 - percent_nonzero) <= 0.65', 'keypoints_equal(observed, keypoints)', 'keypoints_equal(observed, keypoints)', 'nb_changed_aug >= int(nb_iterations * 0.95)', 'nb_changed_aug_det == 0', 'seen[2] <= 10', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'all([v in [0, 100] for v in averages])', '50 - 20 < np.average(averages) < 50 + 20', 'all([v in [0, 100] for v in averages])', '50 - 20 < np.average(averages) < 50 + 20', 'found', 'seen[2] <= 10', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception', 'got_exception', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'nb_changed_aug >= int(nb_iterations * 0.95)', 'nb_changed_aug_det == 0', '0 in uq', '2 in uq', 'len(uq) == 2', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'params[0].value == 1', 'params[1].value == 0', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 10)', 'np.all(image_aug == 100)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 5)', 'np.all(image_aug == 0)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 0)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == -10)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == int(center_value))', 'image_aug.dtype.type == dtype', 'np.all(image_aug == int(1.2 * int(center_value)))', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'np.all(image_aug == max_value)', 'np.all(image_aug == max_value)', 'np.all(image_aug == 0)', 'np.all(image_aug == min_value)', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(5 <= image_aug, image_aug <= 15))', 'len(np.unique(image_aug)) == 1', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(5 <= image_aug, image_aug <= 15))', 'len(np.unique(image_aug)) > 1', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) == 1', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) > 1', '_allclose(image_aug, 10.0)', '_allclose(image_aug, 20.0)', '_allclose(image_aug, min_value)', '_allclose(image_aug, 0.0)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, 0.5*max_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, max_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, 0.0)', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-100 - 1e-1 < image_aug, image_aug < 100 + 1e-1))', 'np.allclose(image_aug[1:, :, 0], image_aug[:-1, :, 0])', 'np.allclose(image_aug[..., 0], image_aug[..., 1])', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-100 - 1e-1 < image_aug, image_aug < 100 + 1e-1))', 'not np.allclose(image_aug[:, :, 1:], image_aug[:, :, :-1])', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-100 - 1e-1 < image_aug, image_aug < 100 + 1e-1))', 'np.allclose(image_aug[1:, :, 0], image_aug[:-1, :, 0])', 'np.allclose(image_aug[..., 0], image_aug[..., 1])', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-100 - 1e-1 < image_aug, image_aug < 100 + 1e-1))', 'not np.allclose(image_aug[:, :, 1:], image_aug[:, :, :-1])', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'nb_changed_aug >= int(nb_iterations * 0.95)', 'nb_changed_aug_det == 0', 'nb_different > 0.95 * (nb_different + nb_same)', 'all([(value in values) for value in [0, 1, 2, 3]])', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'params[0].value == 1', 'params[1].value == 0', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'np.all(image_aug == 10)', 'np.all(image_aug == 100)', 'np.all(image_aug == 5)', 'np.all(image_aug == 0)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 0)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == -10)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == int(center_value))', 'image_aug.dtype.type == dtype', 'np.all(image_aug == int(1.2 * int(center_value)))', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 0)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value)', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(5 <= image_aug, image_aug <= 15))', 'len(np.unique(image_aug)) > 1', 'np.all(image_aug[..., 0] == image_aug[..., 1])', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(5 <= image_aug, image_aug <= 15))', 'len(np.unique(image_aug)) > 1', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) > 1', 'np.all(image_aug[..., 0] == image_aug[..., 1])', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) > 1', 'image_aug.dtype.type == dtype', '_allclose(image_aug, 10.0)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, 20.0)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, 0.0)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, 0.5*max_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, max_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, 0.0)', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-100 - 1e-1 < image_aug, image_aug < 100 + 1e-1))', 'not np.allclose(image_aug[1:, :, 0], image_aug[:-1, :, 0])', 'np.allclose(image_aug[..., 0], image_aug[..., 1])', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-100 - 1e-1 < image_aug, image_aug < 100 + 1e-1))', 'not np.allclose(image_aug[:, :, 1:], image_aug[:, :, :-1])', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-100 - 1e-1 < image_aug, image_aug < 100 + 1e-1))', 'not np.allclose(image_aug[1:, :, 0], image_aug[:-1, :, 0])', 'np.allclose(image_aug[..., 0], image_aug[..., 1])', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(-100 - 1e-1 < image_aug, image_aug < 100 + 1e-1))', 'not np.allclose(image_aug[:, :, 1:], image_aug[:, :, :-1])', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', '0.45 <= p <= 0.55', 'seen[2] <= 10', '150 < seen[0] < 250', '150 < seen[1] < 250', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', '0.45 <= p100 <= 0.55', '0.45 <= p200 <= 0.55', 'all([(value in values) for value in [0, 1, 2, 3]])', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'isinstance(params[2], iap.Deterministic)', '0.5 - 1e-6 < params[0].p.value < 0.5 + 1e-6', 'params[1].value == 2', 'params[2].value == 0', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 1)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 2)', 'np.all(image_aug == max_value)', 'np.all(image_aug == min_value)', 'np.all(np.logical_and(1 <= image_aug, image_aug <= 10))', 'np.all(np.logical_and(1 <= image_aug, image_aug <= 10))', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(0 <= image_aug, image_aug <= 10))', 'len(np.unique(image_aug)) > 2', 'image_aug.dtype.type == dtype', 'np.allclose(image_aug, 1.0)', 'image_aug.dtype.type == dtype', 'np.allclose(image_aug, 2.0)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, max_value)', '_allclose(image_aug, min_value)', 'np.all(np.logical_and(1 <= image_aug, image_aug <= 10))', 'not np.allclose(image_aug[1:, :], image_aug[:-1, :], atol=0.01)', 'np.all(np.logical_and(1 <= image_aug, image_aug <= 10))', 'not np.allclose(image_aug[1:, :], image_aug[:-1, :], atol=0.01)', 'np.all(np.logical_and(0 <= image_aug, image_aug <= 10))', 'not np.allclose(image_aug[:, :, 1:], image_aug[:, :, :-1], atol=0.01)', '0.4 < p < 0.6', 'nb_pepper > 200', 'nb_salt > 200', '0.4 < p < 0.6', '0.4 < np.mean(ps2) < 0.6', 'np.std(ps1)*1.5 < np.std(ps2)', 'seen[2] < 10', '75 < seen[0] < 125', '75 < seen[1] < 125', 'density - tolerance < density < density + tolerance', 'got_exception', 'got_exception', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', '0.4 < p < 0.6', 'np.all(observed >= 127)', 'nb_pepper == 0', 'nb_salt > 200', '0.4 < p < 0.6', '0.4 < np.mean(ps2) < 0.6', 'np.std(ps1)*1.5 < np.std(ps2)', 'seen[2] < 10', '75 < seen[0] < 125', '75 < seen[1] < 125', 'density - tolerance < density < density + tolerance', 'got_exception', 'got_exception', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', '0.4 < p < 0.6', 'np.all(observed <= 128)', 'nb_pepper > 200', 'nb_salt == 0', '0.4 < p < 0.6', '0.4 < np.mean(ps2) < 0.6', 'np.std(ps1)*1.5 < np.std(ps2)', 'seen[2] < 10', '75 < seen[0] < 125', '75 < seen[1] < 125', 'density - tolerance < density < density + tolerance', 'got_exception', 'got_exception', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'observed.dtype.name == ', 'np.array_equal(observed, expected)', 'observed.dtype.name == ', 'np.array_equal(observed, expected)', 'observed.dtype.name == ', 'np.array_equal(observed, expected)', 'observed.dtype.name == ', 'np.array_equal(observed, expected)', 'observed.dtype.name == ', 'np.array_equal(observed, expected)', 'observed.dtype.name == ', 'np.array_equal(observed, expected)', 'observed.dtype.name == ', 'np.array_equal(observed, expected)', '0.75 <= pinv <= 0.85', '0.75 <= pinv <= 0.85', 'len(np.unique(observed)) == 2', 'False', '300 - 75 < seen[0] < 300 + 75', '700 - 75 < seen[1] < 700 + 75', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', '0.5 - 1e-4 < params[0].p.value < 0.5 + 1e-4', 'params[1].value == 0', 'params[2] == 10', 'params[3] == 20', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'image_min_aug.dtype == np.dtype(dtype)', 'image_center_aug.dtype == np.dtype(dtype)', 'image_max_aug.dtype == np.dtype(dtype)', 'np.all(image_min_aug == image_min)', 'np.all(image_max_aug == image_max)', 'np.array_equal(image_min_aug, image_min)', 'np.array_equal(image_center_aug, image_center)', 'np.array_equal(image_max_aug, image_max)', 'np.allclose(image_min_aug, image_min)', 'np.allclose(image_center_aug, image_center)', 'np.allclose(image_max_aug, image_max)', 'image_min_aug.dtype == np.dtype(dtype)', 'image_center_aug.dtype == np.dtype(dtype)', 'image_max_aug.dtype == np.dtype(dtype)', 'np.all(image_min_aug == image_max)', 'np.all(image_max_aug == image_min)', 'np.array_equal(image_min_aug, image_max)', 'np.allclose(image_center_aug, image_center, atol=1.0+1e-4, rtol=0)', 'np.array_equal(image_max_aug, image_min)', 'np.allclose(image_min_aug, image_max)', 'np.allclose(image_max_aug, image_min)', 'image_min_aug.dtype == np.dtype(dtype)', 'image_center_aug.dtype == np.dtype(dtype)', 'image_max_aug.dtype == np.dtype(dtype)', 'np.all(image_min_aug == 1)', 'np.all(image_max_aug == 1)', 'np.array_equal(image_min_aug, image_max)', 'np.allclose(image_center_aug, image_center, atol=1.0+1e-4, rtol=0)', 'np.array_equal(image_max_aug, image_min)', 'np.allclose(image_min_aug, image_max)', 'np.allclose(image_center_aug, image_center)', 'np.allclose(image_max_aug, image_min)', 'image_min_aug.dtype == np.dtype(dtype)', 'image_center_aug.dtype == np.dtype(dtype)', 'image_max_aug.dtype == np.dtype(dtype)', 'not np.any(image_min_aug == 1)', 'not np.any(image_max_aug == 1)', 'np.array_equal(image_min_aug, image_max)', 'np.allclose(image_center_aug, image_center, atol=1.0+1e-4, rtol=0)', 'np.array_equal(image_max_aug, image_min)', 'np.allclose(image_min_aug, image_max)', 'np.allclose(image_center_aug, image_center, atol=0.001*np.finfo(dtype).max)', 'np.allclose(image_center_aug, image_center)', 'np.allclose(image_max_aug, image_min)', 'diff < 1.0', '1.0 < diff < 50.0', 'isinstance(aug.compression, iap.Choice)', 'len(aug.compression.a) == 2', 'aug.compression.a[0] == 0', 'aug.compression.a[1] == 100', 'len(aug.get_parameters()) == 1', 'aug.get_parameters()[0] == aug.compression', 'np.array_equal(imgs_aug[0], img_aug_c0)', 'np.array_equal(imgs_aug[1], img_aug_c100)', 'np.array_equal(imgs_aug[2], img_aug_c0)', 'np.array_equal(imgs_aug[3], img_aug_c100)', 'np.allclose([kp.x, kp.y], [kp_aug.x, kp_aug.y])', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, expected)', 'not np.array_equal(observed, images)', 'not np.array_equal(observed, images)', 'not array_equal_lists(observed, images_list)', 'not array_equal_lists(observed, images_list)', 'keypoints_equal(observed, keypoints)', 'keypoints_equal(observed, keypoints)', 'np.min(values) == 0', '0.1 < np.std(values) / 255.0 < 0.4', '54 < np.average(values) < 74 # loc=0.25 should be around 255*0.25=64 average', 'nb_changed_aug >= int(nb_iterations * 0.95)', 'nb_changed_aug_det == 0', 'False', '75 < seen[0] < 125', '75 < seen[1] < 125', 'nb_changed_aug >= int(nb_iterations * 0.95)', 'nb_changed_aug_det == 0', 'seen[2] <= 5', '75 < seen[0] < 125', '75 < seen[1] < 125', 'got_exception', 'got_exception', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'not np.array_equal(observed, images)', '0.35 <= (1 - percent_nonzero) <= 0.65', 'not np.array_equal(observed, images)', '0.35 <= (1 - percent_nonzero) <= 0.65', 'not array_equal_lists(observed, images_list)', '0.35 <= (1 - percent_nonzero) <= 0.65', 'not array_equal_lists(observed, images_list)', '0.35 <= (1 - percent_nonzero) <= 0.65', 'keypoints_equal(observed, keypoints)', 'keypoints_equal(observed, keypoints)', 'nb_changed_aug >= int(nb_iterations * 0.95)', 'nb_changed_aug_det == 0', 'seen[2] <= 10', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'all([v in [0, 100] for v in averages])', '50 - 20 < np.average(averages) < 50 + 20', 'all([v in [0, 100] for v in averages])', '50 - 20 < np.average(averages) < 50 + 20', 'found', 'seen[2] <= 10', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception', 'got_exception', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'nb_changed_aug >= int(nb_iterations * 0.95)', 'nb_changed_aug_det == 0', '0 in uq', '2 in uq', 'len(uq) == 2', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'params[0].value == 1', 'params[1].value == 0', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 10)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 100)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 5)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 0)', 'np.all(image_aug == -10)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == int(center_value))', 'image_aug.dtype.type == dtype', 'np.all(image_aug == int(1.2 * int(center_value)))', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 0)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value)', 'np.all(np.logical_and(5 <= image_aug, image_aug <= 15))', 'len(np.unique(image_aug)) == 1', 'np.all(np.logical_and(5 <= image_aug, image_aug <= 15))', 'len(np.unique(image_aug)) > 1', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) == 1', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) > 1', 'image_aug.dtype.type == dtype', '_allclose(image_aug, 10.0)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, 20.0)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, 0.0)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, 0.5*max_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, max_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, 0.0)', 'np.all(np.logical_and(-100 - 1e-1 < image_aug, image_aug < 100 + 1e-1))', 'np.allclose(image_aug[1:, :, 0], image_aug[:-1, :, 0])', 'np.allclose(image_aug[..., 0], image_aug[..., 1])', 'np.all(np.logical_and(-100 - 1e-1 < image_aug, image_aug < 100 + 1e-1))', 'not np.allclose(image_aug[:, :, 1:], image_aug[:, :, :-1])', 'np.all(np.logical_and(-100 - 1e-1 < image_aug, image_aug < 100 + 1e-1))', 'np.allclose(image_aug[1:, :, 0], image_aug[:-1, :, 0])', 'np.allclose(image_aug[..., 0], image_aug[..., 1])', 'np.all(np.logical_and(-100 - 1e-1 < image_aug, image_aug < 100 + 1e-1))', 'not np.allclose(image_aug[:, :, 1:], image_aug[:, :, :-1])', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'nb_changed_aug >= int(nb_iterations * 0.95)', 'nb_changed_aug_det == 0', 'nb_different > 0.95 * (nb_different + nb_same)', 'all([(value in values) for value in [0, 1, 2, 3]])', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'params[0].value == 1', 'params[1].value == 0', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 10)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 100)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 5)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 0)', 'np.all(image_aug == -10)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == int(center_value))', 'image_aug.dtype.type == dtype', 'np.all(image_aug == int(1.2 * int(center_value)))', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 0)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value)', 'np.all(np.logical_and(5 <= image_aug, image_aug <= 15))', 'len(np.unique(image_aug)) > 1', 'np.all(image_aug[..., 0] == image_aug[..., 1])', 'np.all(np.logical_and(5 <= image_aug, image_aug <= 15))', 'len(np.unique(image_aug)) > 1', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) > 1', 'np.all(image_aug[..., 0] == image_aug[..., 1])', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) > 1', 'image_aug.dtype.type == dtype', '_allclose(image_aug, 10.0)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, 20.0)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, 0.0)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, 0.5*max_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, max_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, 0.0)', 'np.all(np.logical_and(-100 - 1e-1 < image_aug, image_aug < 100 + 1e-1))', 'not np.allclose(image_aug[1:, :, 0], image_aug[:-1, :, 0])', 'np.allclose(image_aug[..., 0], image_aug[..., 1])', 'np.all(np.logical_and(-100 - 1e-1 < image_aug, image_aug < 100 + 1e-1))', 'not np.allclose(image_aug[:, :, 1:], image_aug[:, :, :-1])', 'np.all(np.logical_and(-100 - 1e-1 < image_aug, image_aug < 100 + 1e-1))', 'not np.allclose(image_aug[1:, :, 0], image_aug[:-1, :, 0])', 'np.allclose(image_aug[..., 0], image_aug[..., 1])', 'np.all(np.logical_and(-100 - 1e-1 < image_aug, image_aug < 100 + 1e-1))', 'not np.allclose(image_aug[:, :, 1:], image_aug[:, :, :-1])', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', '0.45 <= p <= 0.55', 'seen[2] <= 10', '150 < seen[0] < 250', '150 < seen[1] < 250', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', '0.45 <= p100 <= 0.55', '0.45 <= p200 <= 0.55', 'all([(value in values) for value in [0, 1, 2, 3]])', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'isinstance(params[2], iap.Deterministic)', '0.5 - 1e-6 < params[0].p.value < 0.5 + 1e-6', 'params[1].value == 2', 'params[2].value == 0', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 1)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 2)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value)', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(1 <= image_aug, image_aug <= 10))', 'len(np.unique(image_aug)) > 1', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(1 <= image_aug, image_aug <= 10))', 'len(np.unique(image_aug)) > 1', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(0 <= image_aug, image_aug <= 10))', 'len(np.unique(image_aug)) > 2', 'image_aug.dtype.type == dtype', 'np.allclose(image_aug, 1.0)', 'image_aug.dtype.type == dtype', 'np.allclose(image_aug, 2.0)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, max_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value)', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(1 <= image_aug, image_aug <= 10))', 'not np.allclose(image_aug[1:, :], image_aug[:-1, :], atol=0.01)', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(1 <= image_aug, image_aug <= 10))', 'not np.allclose(image_aug[1:, :], image_aug[:-1, :], atol=0.01)', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(0 <= image_aug, image_aug <= 10))', 'not np.allclose(image_aug[:, :, 1:], image_aug[:, :, :-1], atol=0.01)', '0.4 < p < 0.6', 'nb_pepper > 200', 'nb_salt > 200', '0.4 < p < 0.6', '0.4 < np.mean(ps2) < 0.6', 'np.std(ps1)*1.5 < np.std(ps2)', 'seen[2] < 10', '75 < seen[0] < 125', '75 < seen[1] < 125', 'density - tolerance < density < density + tolerance', 'got_exception', 'got_exception', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', '0.4 < p < 0.6', 'np.all(observed >= 127)', 'nb_pepper == 0', 'nb_salt > 200', '0.4 < p < 0.6', '0.4 < np.mean(ps2) < 0.6', 'np.std(ps1)*1.5 < np.std(ps2)', 'seen[2] < 10', '75 < seen[0] < 125', '75 < seen[1] < 125', 'density - tolerance < density < density + tolerance', 'got_exception', 'got_exception', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', '0.4 < p < 0.6', 'np.all(observed <= 128)', 'nb_pepper > 200', 'nb_salt == 0', '0.4 < p < 0.6', '0.4 < np.mean(ps2) < 0.6', 'np.std(ps1)*1.5 < np.std(ps2)', 'seen[2] < 10', '75 < seen[0] < 125', '75 < seen[1] < 125', 'density - tolerance < density < density + tolerance', 'got_exception', 'got_exception', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'img_aug.item(0) == expected', 'np.all(img_aug == expected)', 'img_aug.item(0) == 2', 'img_aug.item(0) == 2', 'img_aug.item(0) == 1', 'img_aug.item(0) == 1', '100 + 1 <= np.average(observed) <= 100 + 10', '100 + 1 <= np.average(observed) <= 100 + 10', '100 - 3 <= np.average(observed) <= 100 + 3', '100 - 3 <= np.average(observed) <= 100 + 3', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'nb_changed_aug >= int(nb_iterations * 0.7)', 'nb_changed_aug_det == 0', '0 in uq', '1 in uq', 'len(uq) == 2', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'params[0].value == 1', 'params[1].value == 0', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value + 1)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value + 21)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value - 1)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value + 1)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value)', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) == 1', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) > 1', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) == 1', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) > 1', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value + 1)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value + 21)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, max_value - 1)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, max_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, max_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value + 1)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value)', 'np.all(np.logical_and(-10 - 1e-2 < image_aug, image_aug < 10 + 1e-2))', 'np.allclose(image_aug[1:, :, 0], image_aug[:-1, :, 0])', 'np.allclose(image_aug[..., 0], image_aug[..., 1])', 'np.all(np.logical_and(-10 - 1e-2 < image_aug, image_aug < 10 + 1e-2))', 'not np.allclose(image_aug[:, :, 1:], image_aug[:, :, :-1])', 'np.all(np.logical_and(-10 - 1e-2 < image_aug, image_aug < 10 + 1e-2))', 'np.allclose(image_aug[1:, :, 0], image_aug[:-1, :, 0])', 'np.allclose(image_aug[..., 0], image_aug[..., 1])', 'np.all(np.logical_and(-10 - 1e-2 < image_aug, image_aug < 10 + 1e-2))', 'not np.allclose(image_aug[:, :, 1:], image_aug[:, :, :-1])', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'img_aug.item(0) == expected', 'np.all(img_aug == expected)', 'np.min(observed) >= 100 + 1', 'np.max(observed) <= 100 + 10', 'np.min(observed) >= 100 + 1', 'np.max(observed) <= 100 + 10', 'np.min(observed) >= 100 - 3', 'np.max(observed) <= 100 + 3', 'np.min(observed) >= 100 - 3', 'np.max(observed) <= 100 + 3', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'nb_changed_aug >= int(nb_iterations * 0.7)', 'nb_changed_aug_det == 0', 'nb_different > 0.9 * (nb_different + nb_same)', 'all([(value in values) for value in [0, 1, 2, 3]])', '150 < seen[0] < 250', '150 < seen[1] < 250', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'params[0].value == 1', 'params[1].value == 0', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 1)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == 0)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value + 1)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value + 21)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value - 1)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value + 1)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value)', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) > 1', 'np.all(image_aug[..., 0] == image_aug[..., 1])', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) > 1', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'np.all(image_aug[..., 0] == image_aug[..., 1])', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value + 1)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value + 21)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, max_value - 1)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, max_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, max_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value + 1)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value)', 'np.all(np.logical_and(-10 - 1e-2 < image_aug, image_aug < 10 + 1e-2))', 'not np.allclose(image_aug[1:, :, 0], image_aug[:-1, :, 0])', 'np.allclose(image_aug[..., 0], image_aug[..., 1])', 'np.all(np.logical_and(-10 - 1e-2 < image_aug, image_aug < 10 + 1e-2))', 'not np.allclose(image_aug[:, :, 1:], image_aug[:, :, :-1])', 'np.all(np.logical_and(-10 - 1e-2 < image_aug, image_aug < 10 + 1e-2))', 'not np.allclose(image_aug[1:, :, 0], image_aug[:-1, :, 0])', 'np.allclose(image_aug[..., 0], image_aug[..., 1])', 'np.all(np.logical_and(-10 - 1e-2 < image_aug, image_aug < 10 + 1e-2))', 'not np.allclose(image_aug[:, :, 1:], image_aug[:, :, :-1])', 'observed.dtype.name == ', 'np.array_equal(observed, expected)', 'observed.dtype.name == ', 'np.array_equal(observed, expected)', 'observed.dtype.name == ', 'np.array_equal(observed, expected)', 'observed.dtype.name == ', 'np.array_equal(observed, expected)', 'observed.dtype.name == ', 'np.array_equal(observed, expected)', 'observed.dtype.name == ', 'np.array_equal(observed, expected)', 'observed.dtype.name == ', 'np.array_equal(observed, expected)', '0.75 <= pinv <= 0.85', '0.75 <= pinv <= 0.85', 'len(np.unique(observed)) == 2', 'False', '300 - 75 < seen[0] < 300 + 75', '700 - 75 < seen[1] < 700 + 75', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', '0.5 - 1e-4 < params[0].p.value < 0.5 + 1e-4', 'params[1].value == 0', 'params[2] == 10', 'params[3] == 20', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'image_min_aug.dtype == np.dtype(dtype)', 'image_center_aug.dtype == np.dtype(dtype)', 'image_max_aug.dtype == np.dtype(dtype)', 'np.all(image_min_aug == image_min)', 'np.all(image_max_aug == image_max)', 'np.array_equal(image_min_aug, image_min)', 'np.array_equal(image_center_aug, image_center)', 'np.array_equal(image_max_aug, image_max)', 'np.allclose(image_min_aug, image_min)', 'np.allclose(image_center_aug, image_center)', 'np.allclose(image_max_aug, image_max)', 'image_min_aug.dtype == np.dtype(dtype)', 'image_center_aug.dtype == np.dtype(dtype)', 'image_max_aug.dtype == np.dtype(dtype)', 'np.all(image_min_aug == image_max)', 'np.all(image_max_aug == image_min)', 'np.array_equal(image_min_aug, image_max)', 'np.allclose(image_center_aug, image_center, atol=1.0+1e-4, rtol=0)', 'np.array_equal(image_max_aug, image_min)', 'np.allclose(image_min_aug, image_max)', 'np.allclose(image_center_aug, image_center)', 'np.allclose(image_max_aug, image_min)', 'image_min_aug.dtype == np.dtype(dtype)', 'image_center_aug.dtype == np.dtype(dtype)', 'image_max_aug.dtype == np.dtype(dtype)', 'np.all(image_min_aug == 1)', 'np.all(image_max_aug == 1)', 'np.array_equal(image_min_aug, image_max)', 'np.allclose(image_center_aug, image_center, atol=1.0+1e-4, rtol=0)', 'np.array_equal(image_max_aug, image_min)', 'np.allclose(image_min_aug, image_max)', 'np.allclose(image_center_aug, image_center)', 'np.allclose(image_max_aug, image_min)', 'image_min_aug.dtype == np.dtype(dtype)', 'image_center_aug.dtype == np.dtype(dtype)', 'image_max_aug.dtype == np.dtype(dtype)', 'not np.any(image_min_aug == 1)', 'not np.any(image_max_aug == 1)', 'np.array_equal(image_min_aug, image_max)', 'np.allclose(image_center_aug, image_center, atol=1.0+1e-4, rtol=0)', 'np.array_equal(image_max_aug, image_min)', 'np.allclose(image_min_aug, image_max)', 'np.allclose(image_center_aug, image_center, atol=0.001*np.finfo(dtype).max)', 'np.allclose(image_max_aug, image_min)', 'diff < 1.0', '1.0 < diff < 50.0', 'isinstance(aug.compression, iap.Choice)', 'len(aug.compression.a) == 2', 'aug.compression.a[0] == 0', 'aug.compression.a[1] == 100', 'len(aug.get_parameters()) == 1', 'aug.get_parameters()[0] == aug.compression', 'np.array_equal(imgs_aug[0], img_aug_c0)', 'np.array_equal(imgs_aug[1], img_aug_c100)', 'np.array_equal(imgs_aug[2], img_aug_c0)', 'np.array_equal(imgs_aug[3], img_aug_c100)', 'np.allclose([kp.x, kp.y], [kp_aug.x, kp_aug.y])', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)']",[],[],[],[],[],[],[],[],[],[],[],[]
1502,aleju,kontakt@ajung.name,2019-06-09 20:59:26+02:00,d3752ba4dae574b890945ae63ff673bc9c05ceb5,https://github.com/aleju/imgaug/commit/d3752ba4dae574b890945ae63ff673bc9c05ceb5,Switch blur tests to unittest,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],4,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,0,0,0,0,0,0,0,0,0,0,0,0,104,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestGaussianBlur(unittest.TestCase):', 'class TestAverageBlur(unittest.TestCase):', 'class TestMedianBlur(unittest.TestCase):', 'class TestMotionBlur(unittest.TestCase):']",[],"['def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, expected)', '100 < observed[0][1, 1] < 255', '(observed[0][outer_pixels[0], outer_pixels[1]] > 0).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 50).all()', '100 < observed[0][1, 1] < 255', '(observed[0][outer_pixels[0], outer_pixels[1]] > 0).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 50).all()', '100 < observed[0][1, 1] < 255', '(observed[0][outer_pixels[0], outer_pixels[1]] > 0).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 50).all()', '100 < observed[0][1, 1] < 255', '(observed[0][outer_pixels[0], outer_pixels[1]] > 0).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 50).all()', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'nb_changed_aug >= int(nb_iterations * 0.8)', 'nb_changed_aug_det == 0', 'image_aug.dtype.type == np.bool_', 'image_aug.dtype.type == dtype', 'np.all(image_aug == image)', 'image_aug.dtype.type == dtype', 'np.allclose(image_aug, image)', 'image_aug.shape == mask_bool.shape', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == expected)', 'image_aug.shape == mask.shape', 'image_aug.dtype.type == dtype', 'np.average(diff) <= 2', 'image_aug.shape == mask.shape', 'image_aug.dtype.type == dtype', 'np.max(diff) < 4', 'np.average(diff) < 2.0', 'image_aug.shape == mask.shape', 'image_aug.dtype.type == dtype', 'np.max(diff) <= 4', 'image_aug.shape == mask.shape', 'image_aug.dtype.type == dtype', 'np.max(diff) < 4.0', 'image_aug.shape == mask.shape', 'image_aug.dtype.type == dtype', 'np.max(diff) <= 4', 'np.max(diff) <= 0.01 * dynamic_range', 'image_aug.shape == mask.shape', 'image_aug.dtype.type == dtype', 'np.max(diff) < np.dtype(dtype).itemsize * 0.01 * np.float128(value)', 'in str(exc)', 'got_exception', 'np.array_equal(observed, self.base_img)', 'np.array_equal(observed, self.blur3x3)', 'np.array_equal(observed, self.blur5x5)', '0.4 <= p_seen[0] <= 0.6', '0.4 <= p_seen[1] <= 0.6', '0.23 <= p_seen[0] <= 0.43', '0.23 <= p_seen[1] <= 0.43', '0.23 <= p_seen[2] <= 0.43', '0.4 <= p_seen[0] <= 0.6', '0.4 <= p_seen[1] <= 0.6', 'all([v > 0 for v in nb_seen.values()])', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'image_aug.dtype.type == np.bool_', 'image_aug.dtype.type == dtype', 'np.all(image_aug == image)', 'image_aug.dtype.type == dtype', 'np.allclose(image_aug, image)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == expected)', 'image_aug.dtype.type == dtype', 'np.max(diff) <= 2', 'image_aug.dtype.type == dtype', 'np.max(diff) < 1.0', 'image_aug.dtype.type == dtype', 'np.max(diff) <= 2**(1 + np.dtype(dtype).itemsize)', 'image_aug.dtype.type == dtype', 'np.max(diff) < 2**(1 + np.dtype(dtype).itemsize)', 'in str(exc)', 'got_exception', 'np.array_equal(observed, self.base_img)', 'np.array_equal(observed, self.blur3x3)', 'np.array_equal(observed, self.blur5x5)', 'all(seen)', 'all(seen)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'np.allclose(matrix_channel, expected)', 'np.allclose(matrix_channel, expected)', 'np.allclose(matrix_channel, expected)', 'np.allclose(matrices_image[0], matrices_image[1])', 'np.allclose(matrices_image[1], matrices_image[2])', 'nb_seen[0] > 0', 'nb_seen[1] > 0', 'np.allclose(matrix_channel, expected)', 'np.allclose(matrices_image[0], matrices_image[1])', 'np.allclose(matrices_image[1], matrices_image[2])', 'nb_seen[0] > 0', 'nb_seen[1] > 0', 'in str(exc)', 'np.allclose(matrix_channel, expected, rtol=0, atol=1e-2)', 'np.allclose(matrix_channel, expected, rtol=0, atol=1e-2)', 'np.allclose(matrices_image[0], matrices_image[1])', 'np.allclose(matrices_image[1], matrices_image[2])', 'nb_seen[0] > 0', 'nb_seen[1] > 0', 'np.allclose(img_aug, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, expected)', '100 < observed[0][1, 1] < 255', '(observed[0][outer_pixels[0], outer_pixels[1]] > 0).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 50).all()', '100 < observed[0][1, 1] < 255', '(observed[0][outer_pixels[0], outer_pixels[1]] > 0).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 50).all()', '100 < observed[0][1, 1] < 255', '(observed[0][outer_pixels[0], outer_pixels[1]] > 0).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 50).all()', '100 < observed[0][1, 1] < 255', '(observed[0][outer_pixels[0], outer_pixels[1]] > 0).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 50).all()', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'nb_changed_aug >= int(nb_iterations * 0.8)', 'nb_changed_aug_det == 0', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == image)', 'image_aug.dtype.type == dtype', 'image_aug.dtype.type == dtype', 'np.allclose(image_aug, image)', 'image_aug.shape == mask_bool.shape', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == expected)', 'image_aug.shape == mask.shape', 'image_aug.dtype.type == dtype', 'np.max(diff) <= 4', 'np.average(diff) <= 2', 'image_aug.shape == mask.shape', 'image_aug.dtype.type == dtype', 'np.max(diff) < 4', 'np.average(diff) < 2.0', 'image_aug.shape == mask.shape', 'image_aug.dtype.type == dtype', 'np.max(diff) <= 4', 'image_aug.shape == mask.shape', 'image_aug.dtype.type == dtype', 'np.max(diff) < 4.0', 'image_aug.shape == mask.shape', 'image_aug.dtype.type == dtype', 'np.max(diff) <= 0.01 * dynamic_range', 'image_aug.shape == mask.shape', 'image_aug.dtype.type == dtype', 'np.max(diff) < np.dtype(dtype).itemsize * 0.01 * np.float128(value)', 'in str(exc)', 'got_exception', 'np.array_equal(observed, base_img)', 'np.array_equal(observed, blur3x3)', 'np.array_equal(observed, blur5x5)', '0.4 <= p_seen[0] <= 0.6', '0.4 <= p_seen[1] <= 0.6', '0.23 <= p_seen[0] <= 0.43', '0.23 <= p_seen[1] <= 0.43', '0.23 <= p_seen[2] <= 0.43', '0.4 <= p_seen[0] <= 0.6', '0.4 <= p_seen[1] <= 0.6', 'all([v > 0 for v in nb_seen.values()])', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == image)', 'image_aug.dtype.type == dtype', 'image_aug.dtype.type == dtype', 'np.allclose(image_aug, image)', 'image_aug.dtype.type == np.bool_', 'np.all(image_aug == expected)', 'image_aug.dtype.type == dtype', 'np.max(diff) <= 2', 'image_aug.dtype.type == dtype', 'np.max(diff) < 1.0', 'image_aug.dtype.type == dtype', 'np.max(diff) <= 2**(1 + np.dtype(dtype).itemsize)', 'image_aug.dtype.type == dtype', 'np.max(diff) < 2**(1 + np.dtype(dtype).itemsize)', 'in str(exc)', 'np.array_equal(observed, base_img)', 'np.array_equal(observed, blur3x3)', 'np.array_equal(observed, blur5x5)', 'all(seen)', 'all(seen)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'np.allclose(matrix_channel, expected)', 'np.allclose(matrix_channel, expected)', 'np.allclose(matrix_channel, expected)', 'np.allclose(matrices_image[0], matrices_image[1])', 'np.allclose(matrices_image[1], matrices_image[2])', 'nb_seen[0] > 0', 'nb_seen[1] > 0', 'np.allclose(matrix_channel, expected)', 'np.allclose(matrices_image[0], matrices_image[1])', 'np.allclose(matrices_image[1], matrices_image[2])', 'nb_seen[0] > 0', 'nb_seen[1] > 0', 'in str(exc)', 'got_exception', 'np.allclose(matrix_channel, expected, rtol=0, atol=1e-2)', 'np.allclose(matrix_channel, expected, rtol=0, atol=1e-2)', 'np.allclose(matrices_image[0], matrices_image[1])', 'np.allclose(matrices_image[1], matrices_image[2])', 'nb_seen[0] > 0', 'nb_seen[1] > 0', 'np.allclose(img_aug, expected)']",[],[],[],[],[],[],[],[],[],[],[],[]
1503,aleju,kontakt@ajung.name,2019-06-10 10:30:18+02:00,b52fcc2e118516a3b58c0134be65b81b9cb9b11b,https://github.com/aleju/imgaug/commit/b52fcc2e118516a3b58c0134be65b81b9cb9b11b,Switch weather tests to unittest,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],4,0,4,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestFastSnowyLandscape(unittest.TestCase):', 'class TestClouds(unittest.TestCase):', 'class TestFog(unittest.TestCase):', 'class TestSnowflakes(unittest.TestCase):']",[],"['def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):']",[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug.lightness_threshold, iap.Choice)', 'len(aug.lightness_threshold.a) == 2', 'aug.lightness_threshold.a[0] == 100', 'aug.lightness_threshold.a[1] == 200', 'isinstance(aug.lightness_multiplier, iap.Choice)', 'len(aug.lightness_multiplier.a) == 2', 'np.allclose(aug.lightness_multiplier.a[0], 1.0)', 'np.allclose(aug.lightness_multiplier.a[1], 4.0)', 'np.array_equal(observed, expected)', 'np.array_equal(observed[0], expected1)', 'np.array_equal(observed[1], expected2)', 'np.array_equal(observed[2], expected1)', 'np.array_equal(observed[3], expected2)', 'np.array_equal(observed[0], expected1)', 'np.array_equal(observed[1], expected2)', 'np.array_equal(observed[2], expected1)', 'np.array_equal(observed[3], expected2)', 'np.array_equal(observed, expected)', '20 < np.average(img_aug) < 250', 'np.max(img_aug) > 150', 'np.sum(np.abs(grad_x)) > 5 * img.shape[1]', 'np.sum(np.abs(grad_y)) > 5 * img.shape[0]', '50 < np.average(img_aug) < 255', 'np.max(img_aug) > 100', 'np.sum(np.abs(grad_x)) > 1 * img.shape[1]', 'np.sum(np.abs(grad_y)) > 1 * img.shape[0]', '0.01 < np.average(img_aug) < 100', 'np.max(img_aug) > 100', 'np.sum(np.abs(grad_x)) > 5 * img.shape[1]', 'np.sum(np.abs(grad_y)) > 5 * img.shape[0]', 'np.average(img_aug_undense) < np.average(img_aug_dense)', '(']",[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug.lightness_threshold, iap.Choice)', 'len(aug.lightness_threshold.a) == 2', 'aug.lightness_threshold.a[0] == 100', 'aug.lightness_threshold.a[1] == 200', 'isinstance(aug.lightness_multiplier, iap.Choice)', 'len(aug.lightness_multiplier.a) == 2', 'np.allclose(aug.lightness_multiplier.a[0], 1.0)', 'np.allclose(aug.lightness_multiplier.a[1], 4.0)', 'np.array_equal(observed, expected)', 'np.array_equal(observed[0], expected1)', 'np.array_equal(observed[1], expected2)', 'np.array_equal(observed[2], expected1)', 'np.array_equal(observed[3], expected2)', 'np.array_equal(observed[0], expected1)', 'np.array_equal(observed[1], expected2)', 'np.array_equal(observed[2], expected1)', 'np.array_equal(observed[3], expected2)', 'np.array_equal(observed, expected)', '20 < np.average(img_aug) < 250', 'np.max(img_aug) > 150', 'np.sum(np.abs(grad_x)) > 5 * img.shape[1]', 'np.sum(np.abs(grad_y)) > 5 * img.shape[0]', '50 < np.average(img_aug) < 255', 'np.max(img_aug) > 100', 'np.sum(np.abs(grad_x)) > 1 * img.shape[1]', 'np.sum(np.abs(grad_y)) > 1 * img.shape[0]', '0.01 < np.average(img_aug) < 100', 'np.max(img_aug) > 100', 'np.sum(np.abs(grad_x)) > 5 * img.shape[1]', 'np.sum(np.abs(grad_y)) > 5 * img.shape[0]', 'np.average(img_aug_undense) < np.average(img_aug_dense)', '_measure_uniformity(img_aug_ununiform) < _measure_uniformity(img_aug_uniform)']",[],[],[],[],[],[],[],[],[],[],[],[]
1504,aleju,kontakt@ajung.name,2019-06-10 11:36:32+02:00,1249e689b2d5cb6ec41db4aa3d8e7dbd1e8cce98,https://github.com/aleju/imgaug/commit/1249e689b2d5cb6ec41db4aa3d8e7dbd1e8cce98,Switch segmentation tests to unittest,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,['class TestSuperpixels(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(observed, expected)', 'self._array_equals_tolerant(observed, expected, 2)', 'self._array_equals_tolerant(observed, expected, 2)', '(', 'all(seen.values())', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', '0.5 - 1e-4 < params[0].p.value < 0.5 + 1e-4', 'params[1].value == 2', 'params[2] == 100', 'params[3] == ', 'img_aug.dtype == img.dtype', 'np.all(img_aug == img)', 'img_aug.dtype == img.dtype', 'np.all(img_aug)', 'img_aug.dtype == np.dtype(dtype)', 'np.array_equal(img_aug, img)', 'img_aug.dtype == np.dtype(dtype)', 'np.all(img_aug == int(np.round((7/8)*v2 + (1/8)*v1)))', 'img_aug.dtype == np.dtype(dtype)', '_allclose(img_aug, img)', 'img_aug.dtype == np.dtype(dtype)', '_allclose(img_aug, (7/8)*v2 + (1/8)*v1)']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(observed, expected)', '_array_equals_tolerant(observed, expected, 2)', '_array_equals_tolerant(observed, expected, 2)', 'np.allclose(observed, base_img) or _array_equals_tolerant(observed, base_img_superpixels, 2)', 'all(seen.values())', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', '0.5 - 1e-4 < params[0].p.value < 0.5 + 1e-4', 'params[1].value == 2', 'params[2] == 100', 'params[3] == ', 'img_aug.dtype == img.dtype', 'np.all(img_aug == img)', 'img_aug.dtype == img.dtype', 'np.all(img_aug)', 'img_aug.dtype == np.dtype(dtype)', 'np.array_equal(img_aug, img)', 'img_aug.dtype == np.dtype(dtype)', 'np.all(img_aug == int(np.round((7/8)*v2 + (1/8)*v1)))', 'img_aug.dtype == np.dtype(dtype)', '_allclose(img_aug, img)', 'img_aug.dtype == np.dtype(dtype)', '_allclose(img_aug, (7/8)*v2 + (1/8)*v1)']",[],[],[],[],[],[],[],[],[],[],[],[]
1505,aleju,kontakt@ajung.name,2019-06-10 20:58:53+02:00,b69a9f7101441a2aebfa7e4e98983c2fa89fd0cd,https://github.com/aleju/imgaug/commit/b69a9f7101441a2aebfa7e4e98983c2fa89fd0cd,Cleanup code and docstrings in weather.py,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1506,aleju,kontakt@ajung.name,2019-05-24 19:33:38+02:00,f5b4e4e745fb96925ab46960dd9889090cdb6d4d,https://github.com/aleju/imgaug/commit/f5b4e4e745fb96925ab46960dd9889090cdb6d4d,Refactor AddToHueAndSaturation and extend tests,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,['class TestAddToHueAndSaturation(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['(', 'not (value is not None and value_hue is not None)', 'not (value is not None and value_saturation is not None)', 'np.allclose(observed, expected)', 'np.all(diff <= 1)', 'np.all(diff <= 1)', 'np.all(diff <= 1)', 'np.array_equal(img_observed, img_expected)', 'np.array_equal(img_observed, img_expected)', 'size == (3,)', 'np.array_equal(img_observed1, img_expected1)', 'np.array_equal(img_observed2, img_expected2)', 'np.array_equal(img_observed3, img_expected3)', 'not np.array_equal(expected_imgs[0], expected_imgs[1])', 'not np.array_equal(expected_imgs[1], expected_imgs[2])', 'not np.array_equal(expected_imgs[0], expected_imgs[2])', 'np.sum(list(seen.values())) == nb_iterations', 'all([n_exp - n_exp_tol < v < n_exp + n_exp_tol']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(observed, expected)', 'np.all(diff <= 1)', 'np.all(diff <= 1)', 'np.all(diff <= 1)', 'not np.array_equal(expected_imgs[0], expected_imgs[1])', 'not np.array_equal(expected_imgs[1], expected_imgs[2])', 'not np.array_equal(expected_imgs[0], expected_imgs[2])', 'np.sum(list(seen.values())) == nb_iterations', 'all([n_exp - n_exp_tol < v < n_exp + n_exp_tol for v in seen.values()])']",[],[],[],[],[],[],[],[],[],[],[],[]
1507,aleju,kontakt@ajung.name,2019-05-25 09:37:16+02:00,f7de8fcd157f058bab3569958c1230927894abd7,https://github.com/aleju/imgaug/commit/f7de8fcd157f058bab3569958c1230927894abd7,Fix and improve docstring of AddToHueAndSaturation,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1508,aleju,kontakt@ajung.name,2019-05-25 11:02:49+02:00,f9cf7cd5135d1b55754ef161d14cfdcab5a95620,https://github.com/aleju/imgaug/commit/f9cf7cd5135d1b55754ef161d14cfdcab5a95620,Add value_hue/_saturation to AddToHueAndSaturation & refactor,4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['value_hue is None and value_saturation is None', 'value_hue is not None or value_saturation is not None', 'isinstance(aug.value, iap.DiscreteUniform)', 'aug.value.a.value == -20', 'aug.value.b.value == 20', 'aug.value_hue is None', 'aug.value_saturation is None', 'isinstance(aug.per_channel, iap.Deterministic)', 'aug.per_channel.value == 0', 'aug.value is None', 'isinstance(aug.value_hue, iap.DiscreteUniform)', 'isinstance(aug.value_saturation, iap.Choice)', 'aug.value_hue.a.value == -20', 'aug.value_hue.b.value == 20', 'aug.value_saturation.a == [0, 5, 10]', 'isinstance(aug.per_channel, iap.Deterministic)', 'aug.per_channel.value == 0', 'aug.value is None', 'aug.value_hue is None', 'aug.value_saturation is None', 'isinstance(aug.per_channel, iap.Binomial)', 'np.isclose(aug.per_channel.p.value, 0.5)', 'np.array_equal(img_observed1, img_expected1)', 'np.array_equal(img_observed2, img_expected2)', 'np.array_equal(img_observed3, img_expected3)', 'np.array_equal(img_observed1, img_expected1)', 'np.array_equal(img_observed2, img_expected2)', 'np.array_equal(img_observed3, img_expected3)', 'np.array_equal(img_observed1, img_expected1)', 'np.array_equal(img_observed2, img_expected2)', 'np.array_equal(img_observed3, img_expected3)', 'isinstance(params[0], iap.DiscreteUniform)', 'params[0].a.value == -20', 'params[0].b.value == 20', 'params[1] is None', 'params[2] is None', 'isinstance(params[3], iap.Binomial)', 'np.isclose(params[3].p.value, 0.5)', 'params[0] is None', 'isinstance(params[1], iap.DiscreteUniform)', 'params[1].a.value == -20', 'params[1].b.value == 20', 'isinstance(params[2], iap.Deterministic)', 'params[2].value == 5', 'isinstance(params[3], iap.Deterministic)', 'params[3].value == 0']",[],[],[],[],[],[],[],[],[],[],[],[],"['(', 'not (value is not None and value_hue is not None)', 'not (value is not None and value_saturation is not None)']",[],[],[],[],[],[],[],[],[],[],[],[]
1509,aleju,kontakt@ajung.name,2019-05-25 11:14:45+02:00,3baf1da0ddbf7a8a7dbe0f42e6b62bca0a162db9,https://github.com/aleju/imgaug/commit/3baf1da0ddbf7a8a7dbe0f42e6b62bca0a162db9,Add AddToHue,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestAddToHue(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug, iaa.AddToHueAndSaturation)', 'isinstance(aug.value_hue, iap.DiscreteUniform)', 'aug.value_hue.a.value == -20', 'aug.value_hue.b.value == 20']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1510,aleju,kontakt@ajung.name,2019-05-25 11:21:34+02:00,591e69f2ecc10862c39cbfb49167e57803a3ea49,https://github.com/aleju/imgaug/commit/591e69f2ecc10862c39cbfb49167e57803a3ea49,Add AddToSaturation,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestAddToSaturation(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug, iaa.AddToHueAndSaturation)', 'isinstance(aug.value_saturation, iap.DiscreteUniform)', 'aug.value_saturation.a.value == -20', 'aug.value_saturation.b.value == 20']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1511,aleju,kontakt@ajung.name,2019-05-25 16:45:43+02:00,32f6052515f399394ea322e197ff110d811bd40f,https://github.com/aleju/imgaug/commit/32f6052515f399394ea322e197ff110d811bd40f,Add WithHueAndSaturation,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestWithHueAndSaturation(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug.children, list)', 'len(aug.children) == 1', 'aug.children[0] is child', 'aug.from_colorspace == ', 'isinstance(aug.children, list)', 'len(aug.children) == 1', 'aug.children[0] is child', 'aug.from_colorspace == ', 'images[0].dtype.name == ', 'image_aug.dtype.name == ', 'np.array_equal(image_aug, image)', 'aug_mock.augment_images.call_count == 1', 'images[0].dtype.name == ', 'not np.array_equal(image_expected, image)', 'ia.is_np_array(images_aug)', 'image_aug.shape == (1, 255, 3)', 'np.array_equal(image_aug, image_expected)', 'images[0].dtype.name == ', 'not np.array_equal(image_expected, image)', 'ia.is_np_array(images_aug)', 'image_aug.shape == (1, 255, 3)', 'np.array_equal(image_aug, image_expected)', 'hmoi_aug.shape == (16, 24, 3)', 'hmoi_aug.arr_0to1.shape == (8, 12, 1)', 'aug_mock.augment_heatmaps.call_count == 1', 'kpsoi_aug.shape == (16, 24, 3)', 'kpsoi.keypoints[0].x == 0', 'kpsoi.keypoints[0].y == 0', 'kpsoi.keypoints[1].x == 5', 'kpsoi.keypoints[1].y == 1', 'aug_mock.augment_keypoints.call_count == 1', 'not aug.deterministic  # ensure copy', 'not aug.children[0].deterministic', 'aug_det.deterministic', 'isinstance(aug_det.children[0], iaa.Noop)', 'aug_det.children[0].deterministic', 'aug.get_parameters()[0] == ', 'len(children_lists) == 1', 'len(children_lists[0]) == 1', 'children_lists[0][0] is child', 'len(children_lists) == 1', 'len(children_lists[0]) == 1', 'children_lists[0][0] is child', 'observed == expected']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1512,aleju,kontakt@ajung.name,2019-05-25 20:46:49+02:00,816a33fe0e857c7b94b4184e1190d4221530e6bf,https://github.com/aleju/imgaug/commit/816a33fe0e857c7b94b4184e1190d4221530e6bf,Add MultiplyHueAndSaturation,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestMultiplyHueAndSaturation(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug, iaa.WithHueAndSaturation)', 'isinstance(aug.children, iaa.Sequential)', 'len(aug.children) == 1', 'isinstance(aug.children[0], iaa.Multiply)', 'isinstance(aug.children[0].mul, iap.Uniform)', 'np.isclose(aug.children[0].mul.a.value, 0.9)', 'np.isclose(aug.children[0].mul.b.value, 1.1)', 'isinstance(aug.children[0].per_channel, iap.Deterministic)', 'aug.children[0].per_channel.value == 1', 'isinstance(aug, iaa.WithHueAndSaturation)', 'isinstance(aug.children, iaa.Sequential)', 'len(aug.children) == 1', 'isinstance(aug.children[0], iaa.WithChannels)', 'aug.children[0].channels == [0]', 'len(aug.children[0].children) == 1', 'isinstance(aug.children[0].children[0], iaa.Multiply)', 'isinstance(aug.children[0].children[0].mul, iap.Uniform)', 'np.isclose(aug.children[0].children[0].mul.a.value, 0.9)', 'np.isclose(aug.children[0].children[0].mul.b.value, 1.1)', 'isinstance(aug, iaa.WithHueAndSaturation)', 'isinstance(aug.children, iaa.Sequential)', 'len(aug.children) == 1', 'isinstance(aug.children[0], iaa.WithChannels)', 'aug.children[0].channels == [1]', 'len(aug.children[0].children) == 1', 'isinstance(aug.children[0].children[0], iaa.Multiply)', 'isinstance(aug.children[0].children[0].mul, iap.Uniform)', 'np.isclose(aug.children[0].children[0].mul.a.value, 0.9)', 'np.isclose(aug.children[0].children[0].mul.b.value, 1.1)', 'isinstance(aug, iaa.WithHueAndSaturation)', 'isinstance(aug.children, iaa.Sequential)', 'len(aug.children) == 2', 'isinstance(aug.children[0], iaa.WithChannels)', 'aug.children[0].channels == [0]', 'len(aug.children[0].children) == 1', 'isinstance(aug.children[0].children[0], iaa.Multiply)', 'isinstance(aug.children[0].children[0].mul, iap.Uniform)', 'np.isclose(aug.children[0].children[0].mul.a.value, 0.9)', 'np.isclose(aug.children[0].children[0].mul.b.value, 1.1)', 'isinstance(aug.children[1], iaa.WithChannels)', 'aug.children[1].channels == [1]', 'len(aug.children[0].children) == 1', 'isinstance(aug.children[1].children[0], iaa.Multiply)', 'isinstance(aug.children[1].children[0].mul, iap.Uniform)', 'np.isclose(aug.children[1].children[0].mul.a.value, 0.8)', 'np.isclose(aug.children[1].children[0].mul.b.value, 1.2)', 'not np.array_equal(image_expected, image)', 'ia.is_np_array(images_aug)', 'image_aug.shape == (1, 255, 3)', 'np.all(diff <= 1)', 'not np.array_equal(image_expected, image)', 'ia.is_np_array(images_aug)', 'image_aug.shape == (1, 255, 3)', 'np.all(diff <= 1)', 'not np.array_equal(image_expected, image)', 'ia.is_np_array(images_aug)', 'image_aug.shape == (1, 255, 3)', 'np.all(diff <= 1)', 'not np.array_equal(image_expected, image)', 'ia.is_np_array(images_aug)', 'image_aug.shape == (1, 255, 3)', 'np.all(diff <= 1)', 'equal', 'not equal', 'equal', 'not equal']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1513,aleju,kontakt@ajung.name,2019-05-25 21:22:11+02:00,348d208c63106a4550af029f933a28afc6cfde0e,https://github.com/aleju/imgaug/commit/348d208c63106a4550af029f933a28afc6cfde0e,Add MultiplyHue; Add MultiplySaturation,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestMultiplyToHue(unittest.TestCase):', 'class TestMultiplyToSaturation(unittest.TestCase):']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug, iaa.WithHueAndSaturation)', 'isinstance(aug.children, iaa.Sequential)', 'len(aug.children) == 1', 'isinstance(aug.children[0], iaa.WithChannels)', 'aug.children[0].channels == [0]', 'len(aug.children[0].children) == 1', 'isinstance(aug.children[0].children[0], iaa.Multiply)', 'isinstance(aug.children[0].children[0].mul, iap.Uniform)', 'np.isclose(aug.children[0].children[0].mul.a.value, 0.9)', 'np.isclose(aug.children[0].children[0].mul.b.value, 1.1)', 'isinstance(aug, iaa.WithHueAndSaturation)', 'isinstance(aug.children, iaa.Sequential)', 'len(aug.children) == 1', 'isinstance(aug.children[0], iaa.WithChannels)', 'aug.children[0].channels == [1]', 'len(aug.children[0].children) == 1', 'isinstance(aug.children[0].children[0], iaa.Multiply)', 'isinstance(aug.children[0].children[0].mul, iap.Uniform)', 'np.isclose(aug.children[0].children[0].mul.a.value, 0.9)', 'np.isclose(aug.children[0].children[0].mul.b.value, 1.1)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1514,aleju,kontakt@ajung.name,2019-05-25 21:25:54+02:00,f05494b380453ae7ee9b37e75d3b64f28910e845,https://github.com/aleju/imgaug/commit/f05494b380453ae7ee9b37e75d3b64f28910e845,Add dtype gating to new color augmenters,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1515,aleju,kontakt@ajung.name,2019-05-25 21:35:08+02:00,d73cce6e1832a32d8e236a6fcbdce777596ce823,https://github.com/aleju/imgaug/commit/d73cce6e1832a32d8e236a6fcbdce777596ce823,Set defaults for AddTo- and Multiply- Hue/Saturation,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1516,aleju,kontakt@ajung.name,2019-05-25 21:35:36+02:00,30a0b17d028f279a9877150ac4eb60b1ce135fa2,https://github.com/aleju/imgaug/commit/30a0b17d028f279a9877150ac4eb60b1ce135fa2,Add check script for MultiplyHueAndSaturation,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1517,aleju,kontakt@ajung.name,2019-05-25 21:35:54+02:00,056de4daf1a00f677d3f9bccebae849dc49e7c48,https://github.com/aleju/imgaug/commit/056de4daf1a00f677d3f9bccebae849dc49e7c48,Add check script for WithHueAndSaturation,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1518,aleju,kontakt@ajung.name,2019-05-26 09:58:55+02:00,f41d621473083edb6051fa55a0cb7f6f1a8bb7bb,https://github.com/aleju/imgaug/commit/f41d621473083edb6051fa55a0cb7f6f1a8bb7bb,Improve code style,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1519,aleju,kontakt@ajung.name,2019-06-01 10:11:10+02:00,87433d40b0c9555c28646fb210dd43192ea8c5ef,https://github.com/aleju/imgaug/commit/87433d40b0c9555c28646fb210dd43192ea8c5ef,Fix pylint warnings,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1520,aleju,kontakt@ajung.name,2019-06-05 16:58:20+02:00,35c3a7df826db76cb332ef2922b1c22cf3c56372,https://github.com/aleju/imgaug/commit/35c3a7df826db76cb332ef2922b1c22cf3c56372,Improve/reformat changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1521,aleju,kontakt@ajung.name,2019-06-14 22:27:16+02:00,a07ec52441edadd4a3d13c32dd26df4acbe44219,https://github.com/aleju/imgaug/commit/a07ec52441edadd4a3d13c32dd26df4acbe44219,Fix PerspectiveTransform producing invalid polygons #310,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1522,aleju,kontakt@ajung.name,2019-06-14 22:35:56+02:00,a6a1579b82da634dbb1c314118f77152dd151ca7,https://github.com/aleju/imgaug/commit/a6a1579b82da634dbb1c314118f77152dd151ca7,Fix float inacc. error in segment intersection search,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1523,aleju,kontakt@ajung.name,2019-06-14 22:40:25+02:00,a9e8b4a1bfb52f4165e25c888c791c90544b640c,https://github.com/aleju/imgaug/commit/a9e8b4a1bfb52f4165e25c888c791c90544b640c,Improve robustness of segment inters. point search in polygon recoverer,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1524,aleju,kontakt@ajung.name,2019-06-14 22:41:31+02:00,3256d970f1dd8f34a91b6f5161ddcb54da83fb9f,https://github.com/aleju/imgaug/commit/3256d970f1dd8f34a91b6f5161ddcb54da83fb9f,Add check script for polygon validity during aug,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1525,aleju,kontakt@ajung.name,2019-06-15 08:51:39+02:00,7b4b174f5cb9699a49d1b5e1ea1f7187c6a02761,https://github.com/aleju/imgaug/commit/7b4b174f5cb9699a49d1b5e1ea1f7187c6a02761,Add PR ID to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1526,aleju,kontakt@ajung.name,2019-06-15 09:53:33+02:00,a669a359b21e99d45d42efb561c84c1d4f56c332,https://github.com/aleju/imgaug/commit/a669a359b21e99d45d42efb561c84c1d4f56c332,Add conda install commands to readme #320,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1527,aleju,kontakt@ajung.name,2019-06-10 15:25:21+02:00,81b7b8a414df07ea163fe5a814a90f3509419b6a,https://github.com/aleju/imgaug/commit/81b7b8a414df07ea163fe5a814a90f3509419b6a,Cleanup convolutional.py code and docstrings,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1528,aleju,kontakt@ajung.name,2019-06-10 15:35:03+02:00,4a7224e16ae27fe76af9c2c09239135c70971e31,https://github.com/aleju/imgaug/commit/4a7224e16ae27fe76af9c2c09239135c70971e31,Decrease code duplication in Convolve random state handling,3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['_allclose(observed, expected1) or _allclose(observed, expected2)']",[],[],[],[],[],[],[],[],[],[],[],[],"['_allclose(observed, expected1) or np.allclose(observed, expected2)']",[],[],[],[],[],[],[],[],[],[],[],[]
1529,Ismael Fernández,ismaelfm_@ciencias.unam.mx,2019-06-24 15:58:25-05:00,d5ad151b4bba7b3c9b376331cae86cc8abdf90fd,https://github.com/aleju/imgaug/commit/d5ad151b4bba7b3c9b376331cae86cc8abdf90fd,Fix Multicore Augmentation Example,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1530,aleju,kontakt@ajung.name,2019-06-01 16:50:08+02:00,04053ed92dbd35d609ea3e4c7ec5931e9503d1aa,https://github.com/aleju/imgaug/commit/04053ed92dbd35d609ea3e4c7ec5931e9503d1aa,Change opencv-python to opencv-python-headless,3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1531,Bruno,bruno.sempere@unibas.ch,2019-07-03 09:35:49+02:00,adef2dfb9896bde97c31673068ce356836f32036,https://github.com/aleju/imgaug/commit/adef2dfb9896bde97c31673068ce356836f32036,Fix the sigmoid option that could not be enabled in blending,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1532,aleju,kontakt@ajung.name,2019-06-10 12:19:16+02:00,a90d8881a45ebeef631d8cbcdb62c97c8d3fcc5b,https://github.com/aleju/imgaug/commit/a90d8881a45ebeef631d8cbcdb62c97c8d3fcc5b,Cleanup code in segmentation.py,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1533,aleju,kontakt@ajung.name,2019-06-10 12:23:44+02:00,6c557fe5b6cf33fc082a292ee5e0e6b6784d3ad1,https://github.com/aleju/imgaug/commit/6c557fe5b6cf33fc082a292ee5e0e6b6784d3ad1,Fix n_segments<=0 breaking in Superpixels,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1534,aleju,kontakt@ajung.name,2019-06-10 11:16:11+02:00,93e97989d118e54d590fa9827f5a536eb44c5609,https://github.com/aleju/imgaug/commit/93e97989d118e54d590fa9827f5a536eb44c5609,Switch convolutional tests to unittest,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],3,0,3,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,61,0,0,0,0,0,0,0,0,0,0,0,0,61,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestConvolve(unittest.TestCase):', 'class TestSharpen(unittest.TestCase):', 'class TestEmboss(unittest.TestCase):']",[],"['def setUp(self):', 'def setUp(self):', 'def setUp(self):']",[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, self.img)', 'np.array_equal(observed, self.img)', 'np.array_equal(observed, self.img)', 'np.array_equal(observed, self.img)', 'np.array_equal(observed, self.img)', 'np.array_equal(observed, self.img)', 'np.array_equal(observed, 2*self.img)', 'np.array_equal(observed, 2*self.img)', 'np.array_equal(observed, 2*img3)', 'np.array_equal(observed, 2*img3)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'found', 'all(seen)', 'in str(exc)', 'got_exception', 'np.array_equal(params[0], matrix)', 'params[1] == ', 'image.dtype.type == np.bool_', 'np.all(image_aug == image)', 'image.dtype.type == dtype', 'np.all(image_aug == image)', 'image.dtype.type == dtype', 'np.allclose(image_aug, image)', 'image.dtype.type == np.bool_', 'np.all(image_aug == expected)', 'image_aug.dtype.type == dtype', 'np.max(diff) <= 2', 'image_aug.dtype.type == dtype', 'np.max(diff) < 1.0', 'image_aug.dtype.type == dtype', 'np.max(diff) <= 2', 'image_aug.dtype.type == dtype', 'np.max(diff) < 1.0', 'in str(exc)', 'got_exception', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected.astype(np.uint8))', 'np.allclose(observed, expected)', '(', 'in str(exc)', 'got_exception', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', '(', 'in str(exc)', 'got_exception', 'self._allclose(observed, expected)', 'self._allclose(observed, expected)', 'self._allclose(observed, expected.astype(np.uint8))', 'self._allclose(observed, expected)', '(', 'in str(exc)', 'got_exception', 'self._allclose(observed, expected)', 'self._allclose(observed, expected)', 'self._allclose(observed, expected)', '(', 'in str(exc)', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, img)', 'np.array_equal(observed, img)', 'np.array_equal(observed, img)', 'np.array_equal(observed, img)', 'np.array_equal(observed, img)', 'np.array_equal(observed, img)', 'np.array_equal(observed, 2*img)', 'np.array_equal(observed, 2*img)', 'np.array_equal(observed, 2*img3)', 'np.array_equal(observed, 2*img3)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'found', 'all(seen)', 'in str(exc)', 'got_exception', 'np.array_equal(params[0], matrix)', 'params[1] == ', 'image.dtype.type == np.bool_', 'np.all(image_aug == image)', 'image.dtype.type == dtype', 'np.all(image_aug == image)', 'image.dtype.type == dtype', 'np.allclose(image_aug, image)', 'image.dtype.type == np.bool_', 'np.all(image_aug == expected)', 'image_aug.dtype.type == dtype', 'np.max(diff) <= 2', 'image_aug.dtype.type == dtype', 'np.max(diff) < 1.0', 'image_aug.dtype.type == dtype', 'np.max(diff) <= 2', 'image_aug.dtype.type == dtype', 'np.max(diff) < 1.0', 'in str(exc)', 'got_exception', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected.astype(np.uint8))', 'np.allclose(observed, expected)', 'np.allclose(observed, expected1) or np.allclose(observed, expected2)', 'in str(exc)', 'got_exception', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected1) or np.allclose(observed, expected2)', 'in str(exc)', 'got_exception', '_allclose(observed, expected)', '_allclose(observed, expected)', '_allclose(observed, expected.astype(np.uint8))', '_allclose(observed, expected)', '_allclose(observed, expected1) or np.allclose(observed, expected2)', 'in str(exc)', 'got_exception', '_allclose(observed, expected)', '_allclose(observed, expected)', '_allclose(observed, expected)', '_allclose(observed, expected1) or _allclose(observed, expected2)', 'in str(exc)', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[]
1535,aleju,kontakt@ajung.name,2019-07-05 17:55:59+02:00,6437b2dde2b25fef4082f91eeb5d16e04941c2e3,https://github.com/aleju/imgaug/commit/6437b2dde2b25fef4082f91eeb5d16e04941c2e3,Fix sharpen test,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1536,aleju,kontakt@ajung.name,2019-06-09 16:00:40+02:00,8d7263dafd1a4b053fb0479b3634c913c2370109,https://github.com/aleju/imgaug/commit/8d7263dafd1a4b053fb0479b3634c913c2370109,Improve arithmetic.py code style and docstrings,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1537,aleju,kontakt@ajung.name,2019-07-05 18:13:45+02:00,f6c9623447d48af6efb7aacf99914cdb01783d0b,https://github.com/aleju/imgaug/commit/f6c9623447d48af6efb7aacf99914cdb01783d0b,Add arithmetic cleanup to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1538,aleju,kontakt@ajung.name,2019-07-05 20:28:39+02:00,a82d620492c2e9a42e3686eab69da2ed5f603b69,https://github.com/aleju/imgaug/commit/a82d620492c2e9a42e3686eab69da2ed5f603b69,Add image-shape-related asserts to SnowflakesLayer,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1539,aleju,kontakt@ajung.name,2019-07-05 20:29:31+02:00,e194c1a3408e959bb3d7807daa6c075d815cde47,https://github.com/aleju/imgaug/commit/e194c1a3408e959bb3d7807daa6c075d815cde47,Fix SnowflakesLayer always changing channel axis to size 3,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1540,aleju,kontakt@ajung.name,2019-07-05 20:30:34+02:00,a96541c1c195bbc0ac5134baf39683c298050cb7,https://github.com/aleju/imgaug/commit/a96541c1c195bbc0ac5134baf39683c298050cb7,Add tests for weather augmenters,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1541,aleju,kontakt@ajung.name,2019-07-06 07:56:28+02:00,a500e83133dbefd834d9282b1af8293632aeb246,https://github.com/aleju/imgaug/commit/a500e83133dbefd834d9282b1af8293632aeb246,Fix ReplaceElementwise gating for int64,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1542,aleju,kontakt@ajung.name,2019-07-06 07:59:44+02:00,a968ff64525d83ecfea6b081f449de5adf9224f1,https://github.com/aleju/imgaug/commit/a968ff64525d83ecfea6b081f449de5adf9224f1,Enforce no-intersection for allowed/disallowed dtypes in gating,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1543,aleju,kontakt@ajung.name,2019-07-06 08:03:26+02:00,0269b66c0ccc24dbbce9b258a03532bbb90a1ff0,https://github.com/aleju/imgaug/commit/0269b66c0ccc24dbbce9b258a03532bbb90a1ff0,Add PR numbers for PR346 to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1544,Christoph Reinders,creinders@outlook.de,2019-07-08 16:50:13+02:00,87ef3925fa6d06cb25ea49f3de60fdde99bc7b3d,https://github.com/aleju/imgaug/commit/87ef3925fa6d06cb25ea49f3de60fdde99bc7b3d,Add scaling of shorter/longer axis to Resize,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1545,Christoph Reinders,creinders@outlook.de,2019-07-08 16:59:26+02:00,579049df59de633c069a83a4757a1467e0ec15f4,https://github.com/aleju/imgaug/commit/579049df59de633c069a83a4757a1467e0ec15f4,Add test for Resize,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed2d.shape == (6, int(6 * aspect_ratio2d))', 'observed3d.shape == (6, int(6 * aspect_ratio3d), 3)', 'observed2d.shape == (int(6 * (1/aspect_ratio2d)), 6)', 'observed3d.shape == (int(6 * (1/aspect_ratio3d)), 6, 3)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1546,aleju,kontakt@ajung.name,2019-07-13 12:15:48+02:00,7860ccff020ca20e06d932b22dae6824a7a9f286,https://github.com/aleju/imgaug/commit/7860ccff020ca20e06d932b22dae6824a7a9f286,Cleanup imgaug.parameters tests,1,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],35,115,28,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,606,0,0,0,0,0,0,0,0,0,0,0,0,798,0,0,0,0,0,0,0,0,0,0,0,0,"['class Test_handle_continuous_param(unittest.TestCase):', 'class Test_handle_discrete_param(unittest.TestCase):', 'class Test_handle_probability_param(unittest.TestCase):', 'class Test_force_np_float_dtype(unittest.TestCase):', 'class Test_both_np_float_if_one_is_float(unittest.TestCase):', 'class Test_draw_distributions_grid(unittest.TestCase):', 'class Test_draw_distributions_graph(unittest.TestCase):', 'class TestStochasticParameter(unittest.TestCase):', 'class TestStochasticParameterOperators(unittest.TestCase):', 'class TestBinomial(unittest.TestCase):', 'class TestChoice(unittest.TestCase):', 'class TestDiscreteUniform(unittest.TestCase):', 'class TestPoisson(unittest.TestCase):', 'class TestNormal(unittest.TestCase):', 'class TestLaplace(unittest.TestCase):', 'class TestChiSquare(unittest.TestCase):', 'class TestWeibull(unittest.TestCase):', 'class TestUniform(unittest.TestCase):', 'class TestBeta(unittest.TestCase):', 'class TestDeterministic(unittest.TestCase):', 'class TestFromLowerResolution(unittest.TestCase):', 'class TestClip(unittest.TestCase):', 'class TestDiscretize(unittest.TestCase):', 'class TestMultiply(unittest.TestCase):', 'class TestDivide(unittest.TestCase):', 'class TestAdd(unittest.TestCase):', 'class TestSubtract(unittest.TestCase):', 'class TestPower(unittest.TestCase):', 'class TestAbsolute(unittest.TestCase):', 'class TestRandomSign(unittest.TestCase):', 'class TestForceSign(unittest.TestCase):', 'class TestPositive(unittest.TestCase):', 'class TestNegative(unittest.TestCase):', 'class TestIterativeNoiseAggregator(unittest.TestCase):', 'class TestSigmoid(unittest.TestCase):']","[('True', '(isinstance(result, iap.Deterministic))'), ('True', '(isinstance(result, iap.Deterministic))'), ('True', '(isinstance(result, iap.Deterministic))'), ('True', '(isinstance(result, iap.Deterministic))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('True', '(isinstance(result, iap.Deterministic))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('True', '(isinstance(result, iap.Deterministic))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('True', '(isinstance(result, iap.Uniform))'), ('True', '(isinstance(result, iap.Uniform))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('True', '(isinstance(result, iap.Choice))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('True', '(isinstance(result, iap.Deterministic))'), ('Raises', '(Exception) as context:'), ('True', '('), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('True', '(isinstance(result, iap.Deterministic))'), ('True', '(isinstance(result, iap.Deterministic))'), ('True', '(isinstance(result, iap.Deterministic))'), ('True', '(isinstance(result, iap.Deterministic))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('True', '(isinstance(result, iap.Deterministic))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('True', '(isinstance(result, iap.Deterministic))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('True', '(isinstance(result, iap.DiscreteUniform))'), ('True', '(isinstance(result, iap.DiscreteUniform))'), ('True', '(isinstance(result, iap.DiscreteUniform))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('True', '(isinstance(result, iap.Choice))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('True', '(isinstance(result, iap.Deterministic))'), ('Raises', '(Exception) as context:'), ('True', '('), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('Raises', '(Exception) as context:'), ('True', '('), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('Raises', '(Exception) as context:'), ('True', '('), ('Raises', '(Exception) as context:'), ('True', '('), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))'), ('Raises', '(Exception) as context:'), ('True', '('), ('Raises', '(Exception) as context:'), ('True', '( in str(context.exception))')]","['def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):']",[],[],[],[],[],[],[],[],['class TestDrawDistributionsGrid(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],"['isinstance(p, iap.Deterministic)', 'p.value == int(val)', 'isinstance(p, iap.Binomial)', 'isinstance(p.p, iap.Deterministic)', 'val-1e-8 < p.p.value < val+1e-8', 'p == det', '(', 'a2.dtype.name == ', 'b2.dtype.name == ', 'a2.dtype.name == ', 'b2.dtype.name == ', 'a2.dtype.name == ', 'b2.dtype.name == ', 'a2.dtype.name == ', 'b2.dtype.name == ', 'grid_observed.shape == (4, 3, 2)', 'graph_img.ndim == 3', 'graph_img.shape[2] == 3', 'nb_white > 0.1 * nb_all', 'graph_img_title.ndim == 3', 'graph_img_title.shape[2] == 3', 'not np.array_equal(graph_img_title, graph_img)', 'isinstance(param_copy, iap.Discretize)', 'isinstance(param_copy.other_param, iap.Uniform)', 'param_copy.other_param.a[0] == param.other_param.a[0]', 'isinstance(param_copy, iap.Discretize)', 'isinstance(param_copy.other_param, iap.Uniform)', 'param_copy.other_param.a[0] != param.other_param.a[0]', 'isinstance(param3, iap.Multiply)', 'param3.other_param == param1', 'param3.val == param2', 'isinstance(param3, iap.Multiply)', 'param3.other_param == param1', 'isinstance(param3.val, iap.Deterministic)', 'param3.val.value == 2', 'isinstance(param3, iap.Multiply)', 'isinstance(param3.other_param, iap.Deterministic)', 'param3.other_param.value == 2', 'param3.val == param1', 'isinstance(param3, iap.Divide)', 'param3.other_param == param1', 'param3.val == param2', 'isinstance(param3, iap.Divide)', 'param3.other_param == param1', 'isinstance(param3.val, iap.Deterministic)', 'param3.val.value == 2', 'isinstance(param3, iap.Divide)', 'isinstance(param3.other_param, iap.Deterministic)', 'param3.other_param.value == 2', 'param3.val == param1', 'isinstance(param3, iap.Divide)', 'param3.other_param == param1', 'param3.val == param2', 'isinstance(param3, iap.Divide)', 'param3.other_param == param1', 'isinstance(param3.val, iap.Deterministic)', 'param3.val.value == 2', 'isinstance(param3, iap.Divide)', 'isinstance(param3.other_param, iap.Deterministic)', 'param3.other_param.value == 2', 'param3.val == param1', 'isinstance(param3, iap.Discretize)', 'isinstance(param3.other_param, iap.Divide)', 'param3.other_param.other_param == param1_int', 'param3.other_param.val == param2_int', 'isinstance(param3, iap.Discretize)', 'isinstance(param3.other_param, iap.Divide)', 'param3.other_param.other_param == param1_int', 'isinstance(param3.other_param.val, iap.Deterministic)', 'param3.other_param.val.value == 2', 'isinstance(param3, iap.Discretize)', 'isinstance(param3.other_param, iap.Divide)', 'isinstance(param3.other_param.other_param, iap.Deterministic)', 'param3.other_param.other_param.value == 2', 'param3.other_param.val == param1_int', 'isinstance(param3, iap.Add)', 'param3.other_param == param1', 'param3.val == param2', 'isinstance(param3, iap.Add)', 'param3.other_param == param1', 'isinstance(param3.val, iap.Deterministic)', 'param3.val.value == 2', 'isinstance(param3, iap.Add)', 'isinstance(param3.other_param, iap.Deterministic)', 'param3.other_param.value == 2', 'param3.val == param1', 'isinstance(param3, iap.Subtract)', 'param3.other_param == param1', 'param3.val == param2', 'isinstance(param3, iap.Subtract)', 'param3.other_param == param1', 'isinstance(param3.val, iap.Deterministic)', 'param3.val.value == 2', 'isinstance(param3, iap.Subtract)', 'isinstance(param3.other_param, iap.Deterministic)', 'param3.other_param.value == 2', 'param3.val == param1', 'isinstance(param3, iap.Power)', 'param3.other_param == param1', 'param3.val == param2', 'isinstance(param3, iap.Power)', 'param3.other_param == param1', 'isinstance(param3.val, iap.Deterministic)', 'param3.val.value == 2', 'isinstance(param3, iap.Power)', 'isinstance(param3.other_param, iap.Deterministic)', 'param3.other_param.value == 2', 'param3.val == param1', '(', '(', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == 0', 'np.all(samples == 0)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == 1', 'np.all(samples == 1)', 'sample.shape == tuple()', 'samples.shape == (10000,)', 'sample in [0, 1]', 'len(unique) == 2', '5000 - 500 < count < 5000 + 500', '5000 - 500 < count < 5000 + 500', 'False', '(', 'nb_p_changed > 15', 'np.array_equal(samples1, samples2)', '(', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [0, 1, 2]', 'np.all(', '(', 'sample in [-1, 1]', 'np.all(np.logical_or(samples == -1, samples == 1))', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '(', 'np.all(', 'sample in []', 'np.all(', 'all([count in [0, 1] for count in seen])', 'len(unique) == 2', '2500 - 500 < count < 2500 + 500', '7500 - 500 < count < 7500 + 500', 'False', 'len(unique) == 3', '2500 - 500 < count < 2500 + 500', '5000 - 500 < count < 5000 + 500', 'False', 'np.array_equal(samples1, samples2)', '(', 'samples.shape == (10, 5)', 'sample in [0, 1, 2]', 'np.all(', '(', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [-1, 0, 1]', 'np.all(', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [-1, 0, 1]', 'np.all(', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [-1, 0, 1]', 'np.all(', 'sample == 1', 'np.all(samples == 1)', 'np.array_equal(samples1, samples2)', '(', 'sample.shape == tuple()', '0 < sample', 'samples.shape == (100, 1000)', 'count_direct - tolerance < count < count_direct + tolerance', 'np.array_equal(samples1, samples2)', '(', 'sample.shape == tuple()', '(', 'False', '500 - 100 < seen[0] < 500 + 100', '500 - 100 < seen[1] < 500 + 100', 'np.std(samples1) < np.std(samples2)', '100 - 10 < np.std(samples2) < 100 + 10', 'np.allclose(samples1, samples2)', '(', 'sample.shape == tuple()', 'samples.shape == (100, 1000)', '(', 'False', '500 - 100 < seen[0] < 500 + 100', '500 - 100 < seen[1] < 500 + 100', 'np.var(samples1) < np.var(samples2)', 'np.all(np.logical_and(', 'np.allclose(samples1, samples2)', '(', 'sample.shape == tuple()', '0 <= sample', 'samples.shape == (100, 1000)', 'np.all(0 <= samples)', '(', 'False', '500 - 100 < seen[0] < 500 + 100', '500 - 100 < seen[1] < 500 + 100', 'np.var(samples1) < np.var(samples2)', '2*1 - 1.0 < np.var(samples1) < 2*1 + 1.0', '2*10 - 5.0 < np.var(samples2) < 2*10 + 5.0', 'np.allclose(samples1, samples2)', '(', 'sample.shape == tuple()', '0 <= sample', 'samples.shape == (100, 1000)', 'np.all(0 <= samples)', '(', 'False', '50 - 25 < seen[0] < 50 + 25', '50 - 25 < seen[1] < 50 + 25', 'np.var(samples1) < np.var(samples2)', '(', '(', 'np.allclose(samples1, samples2)', '(', 'sample.shape == tuple()', '0 - _eps(sample) < sample < 1.0 + _eps(sample)', 'samples.shape == (10, 5)', 'np.all(', '(', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '-1.0 - _eps(sample) < sample < 1.0 + _eps(sample)', 'np.all(', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '-1.0 - _eps(sample) < sample < 1.0 + _eps(sample)', 'np.all(', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '-1.0 - _eps(sample) < sample < 1.0 + _eps(sample)', 'np.all(', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '1.0 - _eps(sample) < sample < 1.0 + _eps(sample)', 'np.all(', 'np.allclose(samples1, samples2)', '(', 'sample.shape == tuple()', '0 - _eps(sample) < sample < 1.0 + _eps(sample)', 'samples.shape == (100, 1000)', 'np.all(', '(', 'False', '50 - 25 < seen[0] < 50 + 25', '50 - 25 < seen[1] < 50 + 25', 'np.var(samples1) < np.var(samples2)', '(', '(', 'np.allclose(samples1, samples2)', '(', 'np.array_equal(samples1, samples2)', 'sample1.shape == tuple()', 'sample1 == sample2', 'sample1.shape == tuple()', 'np.isclose(', 'samples.shape == shape_expected', 'np.all(samples == value)', 'samples.shape == shape_expected', 'np.allclose(samples, value, rtol=0, atol=_eps(samples))', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', '(', '(', 'samples.shape == (8, 8, 1)', 'len(uq) == 2', '0 in uq', '1 in uq', 'samples_nhwc.shape == (1, 8, 8, 1)', 'len(uq) == 2', '0 in uq', '1 in uq', 'samples.shape == (8, 8, 3)', 'len(uq) == 2', '0 in uq', '1 in uq', 'seen_components[0] < seen_components[1]', '(', 'seen_components[0] < seen_components[1]', '(', 'seen_components[0] < seen_components[1]', '(', 'seen_components[0] < seen_components[1]', '(', 'seen_components[0] < seen_components[1]', '(', 'seen_components[0] < seen_components[1]', '(', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', 'np.allclose(samples1, samples2)', '(', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == 0', 'np.all(samples == 0)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == 1', 'np.all(samples == 1)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == -1', 'np.all(samples == -1)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '0.5 - _eps(sample) < sample < 0.5 + _eps(sample)', 'np.all(', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == 1', 'np.all(samples == 1)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == -1', 'np.all(samples == -1)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [0, 1]', 'np.all(np.logical_or(samples == 0, samples == 1))', 'np.array_equal(samples1, samples2)', 'sample == 0', '(', 'sample == 0', '(', 'sample == 0', '(', '(', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == value_expected', 'np.all(samples == value_expected)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [0, 1]', 'np.all(np.logical_or(samples == 0, samples == 1))', 'np.all(np.abs(samples1 - samples2) < 0.2*(10000/3))', 'np.array_equal(samples1, samples2)', '(', 'p.draw_sample() == v1 * v2', 'samples.dtype.kind == ', 'np.array_equal(', 'p.draw_sample() == v1 * v2', 'samples.dtype == np.int64', 'np.array_equal(', 'v1 * v2 - _eps(sample) < sample < v1 * v2 + _eps(sample)', 'samples.dtype.kind == ', 'np.allclose(', 'v1 * v2 - _eps(sample) < sample < v1 * v2 + _eps(sample)', 'samples.dtype.kind == ', 'np.allclose(', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 * 1.0 - _eps(samples))', 'np.all(samples < 1.0 * 2.0 + _eps(samples))', '(', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 * 1.0 - _eps(samples))', 'np.all(samples < 1.0 * 2.0 + _eps(samples))', 'not (', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 * 1.0 - _eps(samples))', 'np.all(samples < 2.0 * 1.0 + _eps(samples))', 'not (', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 * 1.0 - _eps(samples))', 'np.all(samples < 2.0 * 1.0 + _eps(samples))', 'not (', '(', 'sample == (v1 / v2)', 'samples.dtype.kind == ', 'np.array_equal(', 'sample == (v1 / v2)', 'samples.dtype.kind == ', 'np.array_equal(', '(', 'samples.dtype.kind == ', 'np.allclose(', '(', 'samples.dtype.kind == ', 'np.allclose(', 'samples.shape == (10, 20)', 'np.all(samples > (1.0 / 2.0) - _eps(samples))', 'np.all(samples < (1.0 / 1.0) + _eps(samples))', '(', 'samples.shape == (10, 20)', 'np.all(samples > (1.0 / 2.0) - _eps(samples))', 'np.all(samples < (1.0 / 1.0) + _eps(samples))', 'not (', 'samples.shape == (10, 20)', 'np.all(samples > (1.0 / 1.0) - _eps(samples))', 'np.all(samples < (2.0 / 1.0) + _eps(samples))', 'not (', 'samples.shape == (10, 20)', 'np.all(samples > (1.0 / 1.0) - _eps(samples))', 'np.all(samples < (2.0 / 1.0) + _eps(samples))', 'not (', 'samples_unique[0] == 1 and samples_unique[1] == 2', 'sample == 1', '(', 'sample == v1 + v2', 'samples.dtype.kind == ', 'np.array_equal(', 'sample == v1 + v2', 'samples.dtype.kind == ', 'np.array_equal(', 'v1 + v2 - _eps(sample) < sample < v1 + v2 + _eps(sample)', 'samples.dtype.kind == ', 'np.allclose(', 'v1 + v2 - _eps(sample) < sample < v1 + v2 + _eps(sample)', 'samples.dtype.kind == ', 'np.allclose(', 'samples.shape == (10, 20)', 'np.all(samples >= 1.0 + 1.0 - _eps(samples))', 'np.all(samples <= 1.0 + 2.0 + _eps(samples))', '(', 'samples.shape == (10, 20)', 'np.all(samples >= 1.0 + 1.0 - _eps(samples))', 'np.all(samples <= 1.0 + 2.0 + _eps(samples))', 'not (', 'samples.shape == (10, 20)', 'np.all(samples >= 1.0 + 1.0 - _eps(samples))', 'np.all(samples <= 2.0 + 1.0 + _eps(samples))', 'not (', 'samples.shape == (10, 20)', 'np.all(samples >= 1.0 + 1.0 - _eps(samples))', 'np.all(samples <= 2.0 + 1.0 + _eps(samples))', 'not (', '(', 'sample == v1 - v2', 'samples.dtype.kind == ', 'np.array_equal(', 'sample == v1 - v2', 'samples.dtype.kind == ', 'np.array_equal(', 'v1 - v2 - _eps(sample) < sample < v1 - v2 + _eps(sample)', 'samples.dtype.kind == ', 'np.allclose(', 'v1 - v2 - _eps(sample) < sample < v1 - v2 + _eps(sample)', 'samples.dtype.kind == ', 'np.allclose(', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 - 2.0 - _eps(samples))', 'np.all(samples < 1.0 - 1.0 + _eps(samples))', '(', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 - 2.0 - _eps(samples))', 'np.all(samples < 1.0 - 1.0 + _eps(samples))', 'not (', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 - 1.0 - _eps(samples))', 'np.all(samples < 2.0 - 1.0 + _eps(samples))', 'not (', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 - 1.0 - _eps(samples))', 'np.all(samples < 2.0 - 1.0 + _eps(samples))', 'not (', '(', '(', 'samples.dtype.kind == ', 'np.allclose(', '(', 'samples.dtype.kind == ', 'np.allclose(', 'samples.shape == (10, 20)', 'np.all(samples > 1.5 ** 1.0 - 2 * _eps(samples))', 'np.all(samples < 1.5 ** 2.0 + 2 * _eps(samples))', '(', 'samples.shape == (10, 20)', 'np.all(samples > 1.5 ** 1.0 - 2 * _eps(samples))', 'np.all(samples < 1.5 ** 2.0 + 2 * _eps(samples))', 'not (', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 ** 1.0 - 2 * _eps(samples))', 'np.all(samples < 2.0 ** 1.0 + 2 * _eps(samples))', 'not (', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 ** 1.0 - 2 * _eps(samples))', 'np.all(samples < 2.0 ** 1.0 + 2 * _eps(samples))', 'not (', '(', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '(', 'np.all(abs(value) - _eps(samples) < samples)', 'np.all(samples < abs(value) + _eps(samples))', 'sample == abs(value)', 'np.all(samples == abs(value))', 'sample.shape == tuple()', 'sample in [3, 1]', 'samples.shape == (10, 10)', 'len(samples_uq) == 2', 'samples_uq[0] == 1 and samples_uq[1] == 3', '(', 'samples.shape == (1000,)', 'n_positive + n_negative == 1000', '350 < n_positive < 750', 'sample.shape == tuple()', 'n_positive + n_negative == 1000', '350 < n_positive < 750', 'np.sum(seen) == 4000', 'all([700 < v < 1300 for v in seen])', 'samples1.shape == (100, 10)', 'samples2.shape == (100, 10)', 'np.array_equal(samples1, samples2)', 'np.sum(samples1 == -2) > 50', 'np.sum(samples1 == -1) > 50', 'np.sum(samples1 == 1) > 50', 'np.sum(samples1 == 2) > 50', '(', 'sample.shape == tuple()', 'sample == 1', 'sample.shape == tuple()', 'sample == -1', 'samples.shape == (100,)', 'np.all(samples == 1)', 'samples.shape == (100,)', 'np.all(samples == -1)', 'samples.shape == (100,)', 'np.all(samples == 1)', 'samples.shape == (100,)', 'np.all(samples == -1)', 'samples.shape == (1000,)', 'n_twos + n_ones == 1000', '200 < n_twos < 700', '200 < n_ones < 700', 'samples.shape == (1000,)', 'n_twos + n_ones == 1000', 'n_twos > 0', 'n_ones > 0', 'samples.shape == (100,)', 'n_twos + n_ones == 100', 'n_twos < 5', 'samples1.shape == (100, 10)', 'samples2.shape == (100, 10)', 'np.array_equal(samples1, samples2)', 'samples.shape == (100,)', 'np.all(samples == 1)', 'samples.shape == (100,)', 'np.all(samples == -1)', '(', 'sample.shape == tuple()', 'samples.shape == (2, 4)', 'sample == 1', 'np.all(samples == 1)', 'sample.shape == tuple()', 'samples.shape == (2, 4)', '25 - 10 < sample < 25 + 10', 'np.all(np.logical_and(25 - 10 < samples, samples < 25 + 10))', 'sample.shape == tuple()', 'samples.shape == (2, 4)', 'sample == 50', 'np.all(samples == 50)', 'sample.shape == tuple()', 'samples.shape == (2, 4)', 'sample == 0', 'np.all(samples == 0)', 'False', 'seen[2] < 5', '50 - 20 < seen[0] < 50 + 20', '50 - 20 < seen[1] < 50 + 20', 'hist[1] > hist[0]', 'hist[1] > hist[2]', 'False', '300 - 50 < seen[0] < 300 + 50', '100 - 50 < seen[1] < 100 + 50', 'isinstance(param.aggregation_method, iap.Choice)', 'len(param.aggregation_method.a) == 3', '[v in param.aggregation_method.a for v in []]', 'nb_0 + nb_50 == 2 * 1000', '0.25 - 0.05 < nb_0 / (2 * 1000) < 0.25 + 0.05', 'samples1.shape == (100, 10)', 'samples2.shape == (100, 10)', 'np.allclose(samples1, samples2)', 'isinstance(param.aggregation_method, iap.Deterministic)', 'param.aggregation_method.value == ', '(', 'sample.shape == tuple()', 'samples.shape == (5, 10)', 'expected - _eps(sample) < sample < expected + _eps(sample)', 'np.all(', 'sample.shape == tuple()', 'samples.shape == (5, 10)', 'expected - _eps(sample) < sample < expected + _eps(sample)', 'np.all(', 'False', '500 - 150 < seen[0] < 500 + 150', '500 - 150 < seen[1] < 500 + 150', 'False', '500 - 150 < seen[0] < 500 + 150', '500 - 150 < seen[1] < 500 + 150', 'sample.shape == tuple()', 'samples.shape == (2, 3)', '(', 'np.all(', 'samples1.shape == (100, 10)', 'samples2.shape == (100, 10)', 'np.array_equal(samples1, samples2)']",[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Uniform)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Uniform)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Uniform)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Uniform)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Uniform)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception == False', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception == True', 'in str(e)', 'got_exception == False', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception == True', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception is False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception is False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception is False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception is False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception is True', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception is False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception is True', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception is False', 'isinstance(result, iap.Deterministic)', 'in str(e)', 'got_exception is True', 'isinstance(result, iap.DiscreteUniform)', 'in str(e)', 'got_exception is True', 'isinstance(result, iap.DiscreteUniform)', 'in str(e)', 'got_exception is False', 'isinstance(result, iap.DiscreteUniform)', 'in str(e)', 'got_exception is False', 'isinstance(result, iap.DiscreteUniform)', 'in str(e)', 'got_exception is False', 'isinstance(result, iap.DiscreteUniform)', 'in str(e)', 'got_exception is True', 'isinstance(result, iap.DiscreteUniform)', 'in str(e)', 'got_exception is True', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception is True', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception is False', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception is True', 'isinstance(result, iap.Choice)', 'in str(e)', 'got_exception is True', 'in str(e)', 'got_exception is False', 'in str(e)', 'got_exception is True', 'isinstance(p, iap.Deterministic)', 'p.value == int(val)', 'isinstance(p, iap.Binomial)', 'isinstance(p.p, iap.Deterministic)', 'val-1e-8 < p.p.value < val+1e-8', 'p == det', 'in str(exc)', 'got_exception', 'got_exception', 'got_exception', 'iap.force_np_float_dtype(np.zeros((1,), dtype=dtype_in)).dtype == dtype_out,\\', 'a2.dtype.type == np.float16, a2.dtype.type', 'b2.dtype.type == np.float32, b2.dtype.type', 'a2.dtype.type == np.float16, a2.dtype.type', 'b2.dtype.type == np.float64, b2.dtype.type', 'a2.dtype.type == np.float64, a2.dtype.type', 'b2.dtype.type == np.float16, b2.dtype.type', 'a2.dtype.type == np.float64, a2.dtype.type', 'b2.dtype.type == np.float64, b2.dtype.type', 'grid_observed.shape == (4, 3, 2)', 'graph_img.ndim == 3', 'graph_img.shape[2] == 3', 'nb_white > 0.1 * nb_all', 'graph_img_title.ndim == 3', 'graph_img_title.shape[2] == 3', 'not np.array_equal(graph_img_title, graph_img)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == 0', 'np.all(samples == 0)', 'param.__str__() == param.__repr__() == ', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == 1', 'np.all(samples == 1)', 'param.__str__() == param.__repr__() == ', 'sample.shape == tuple()', 'samples.shape == (10000,)', 'sample in [0, 1]', 'len(unique) == 2', '5000 - 500 < count < 5000 + 500', '5000 - 500 < count < 5000 + 500', 'False', '(0.25 - 0.05 < p < 0.25 + 0.05) or (0.75 - 0.05 < p < 0.75 + 0.05)', 'nb_p_changed > 15', 'np.array_equal(samples1, samples2)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [0, 1, 2]', 'np.all(np.logical_or(np.logical_or(samples == 0, samples == 1), samples==2))', 'param.__str__() == param.__repr__() == ', 'expected - expected_tolerance < count < expected + expected_tolerance', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [-1, 1]', 'np.all(np.logical_or(samples == -1, samples == 1))', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '-1.2 - _eps(sample) < sample < -1.2 + _eps(sample) or 1.7 - _eps(sample) < sample < 1.7 + _eps(sample)', 'np.all(', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in []', 'np.all(', 'all([count in [0, 1] for count in seen])', 'len(unique) == 2', '2500 - 500 < count < 2500 + 500', '7500 - 500 < count < 7500 + 500', 'False', 'len(unique) == 3', '2500 - 500 < count < 2500 + 500', '5000 - 500 < count < 5000 + 500', 'False', 'np.array_equal(samples1, samples2)', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [0, 1, 2]', 'np.all(np.logical_or(np.logical_or(samples == 0, samples == 1), samples==2))', 'param.__str__() == param.__repr__() == ', 'expected - expected_tolerance < count < expected + expected_tolerance', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [-1, 0, 1]', 'np.all(np.logical_or(np.logical_or(samples == -1, samples == 0), samples==1))', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [-1, 0, 1]', 'np.all(np.logical_or(np.logical_or(samples == -1, samples == 0), samples==1))', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [-1, 0, 1]', 'np.all(np.logical_or(np.logical_or(samples == -1, samples == 0), samples==1))', 'sample == 1', 'np.all(samples == 1)', 'np.array_equal(samples1, samples2)', 'sample.shape == tuple()', 'samples.shape == (100, 1000)', '0 < sample', 'param.__str__() == param.__repr__() == ', 'count_direct - tolerance < count < count_direct + tolerance', 'np.array_equal(samples1, samples2)', 'sample.shape == tuple()', 'samples.shape == (100, 1000)', 'param.__str__() == param.__repr__() == ', 'density_direct - tolerance < density < density_direct + tolerance', 'False', '500 - 100 < seen[0] < 500 + 100', '500 - 100 < seen[1] < 500 + 100', 'np.std(samples1) < np.std(samples2)', '100 - 10 < np.std(samples2) < 100 + 10', 'np.allclose(samples1, samples2)', 'sample.shape == tuple()', 'samples.shape == (100, 1000)', 'param.__str__() == param.__repr__() == ', 'density_direct - tolerance < density < density_direct + tolerance', 'False', '500 - 100 < seen[0] < 500 + 100', '500 - 100 < seen[1] < 500 + 100', 'np.var(samples1) < np.var(samples2)', 'np.all(np.logical_and(', 'np.allclose(samples1, samples2)', 'sample.shape == tuple()', 'samples.shape == (100, 1000)', '0 <= sample', 'np.all(0 <= samples)', 'param.__str__() == param.__repr__() == ', 'density_direct - tolerance < density < density_direct + tolerance', 'False', '500 - 100 < seen[0] < 500 + 100', '500 - 100 < seen[1] < 500 + 100', 'np.var(samples1) < np.var(samples2)', '2*1 - 1.0 < np.var(samples1) < 2*1 + 1.0', '2*10 - 5.0 < np.var(samples2) < 2*10 + 5.0', 'np.allclose(samples1, samples2)', 'sample.shape == tuple()', 'samples.shape == (100, 1000)', '0 <= sample', 'np.all(0 <= samples)', 'param.__str__() == param.__repr__() == ', 'density_direct - tolerance < density < density_direct + tolerance', 'False', '50 - 25 < seen[0] < 50 + 25', '50 - 25 < seen[1] < 50 + 25', 'np.var(samples1) < np.var(samples2)', 'expected_first - 0.2 * expected_first < np.var(samples1) < expected_first + 0.2 * expected_first', 'expected_second - 0.2 * expected_second < np.var(samples2) < expected_second + 0.2 * expected_second', 'np.allclose(samples1, samples2)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '0 - _eps(sample) < sample < 1.0 + _eps(sample)', 'np.all(np.logical_and(0 - _eps(samples) < samples, samples < 1.0 + _eps(samples)))', 'param.__str__() == param.__repr__() == ', 'density_expected - density_tolerance < density < density_expected + density_tolerance', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '-1.0 - _eps(sample) < sample < 1.0 + _eps(sample)', 'np.all(np.logical_and(-1.0 - _eps(samples) < samples, samples < 1.0 + _eps(samples)))', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '-1.0 - _eps(sample) < sample < 1.0 + _eps(sample)', 'np.all(np.logical_and(-1.0 - _eps(samples) < samples, samples < 1.0 + _eps(samples)))', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '-1.0 - _eps(sample) < sample < 1.0 + _eps(sample)', 'np.all(np.logical_and(-1.0 - _eps(samples) < samples, samples < 1.0 + _eps(samples)))', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '1.0 - _eps(sample) < sample < 1.0 + _eps(sample)', 'np.all(np.logical_and(1.0 - _eps(samples) < samples, samples < 1.0 + _eps(samples)))', 'np.allclose(samples1, samples2)', 'sample.shape == tuple()', 'samples.shape == (100, 1000)', '0 - _eps(sample) < sample < 1.0 + _eps(sample)', 'np.all(np.logical_and(0 - _eps(sample) <= samples, samples <= 1.0 + _eps(sample)))', 'param.__str__() == param.__repr__() == \\', 'density_direct - tolerance < density < density_direct + tolerance', 'False', '50 - 25 < seen[0] < 50 + 25', '50 - 25 < seen[1] < 50 + 25', 'np.var(samples1) < np.var(samples2)', 'expected_first - 0.1 * expected_first < np.var(samples1) < expected_first + 0.1 * expected_first', 'expected_second - 0.1 * expected_second < np.var(samples2) < expected_second + 0.1 * expected_second', 'np.allclose(samples1, samples2)', 'sample1.shape == tuple()', 'sample1 == sample2', 'samples1.shape == (10,)', 'samples2.shape == (10,)', 'samples3.shape == (5, 3)', 'samples4.shape == (5, 3)', 'samples5.shape == (4, 5, 3)', 'samples6.shape == (4, 5, 3)', 'len(samples1_unique) == 1 and samples1_unique[0] == value', 'len(samples2_unique) == 1 and samples2_unique[0] == value', 'len(samples3_unique) == 1 and samples3_unique[0] == value', 'len(samples4_unique) == 1 and samples4_unique[0] == value', 'len(samples5_unique) == 1 and samples5_unique[0] == value', 'len(samples6_unique) == 1 and samples6_unique[0] == value', 'np.array_equal(', 'sample1.shape == tuple()', 'sample1 - _eps(sample1) < sample2 < sample1 + _eps(sample1)', 'samples1.shape == (10,)', 'samples2.shape == (10,)', 'samples3.shape == (5, 3)', 'samples4.shape == (5, 3)', 'samples5.shape == (4, 5, 3)', 'samples6.shape == (4, 5, 3)', 'samples1_sorted[0] - _eps(samples1_sorted[0]) < samples1_sorted[-1] < samples1_sorted[0] + _eps(samples1_sorted[0])', 'samples2_sorted[0] - _eps(samples2_sorted[0]) < samples2_sorted[-1] < samples2_sorted[0] + _eps(samples2_sorted[0])', 'samples3_sorted[0] - _eps(samples3_sorted[0]) < samples3_sorted[-1] < samples3_sorted[0] + _eps(samples3_sorted[0])', 'samples4_sorted[0] - _eps(samples4_sorted[0]) < samples4_sorted[-1] < samples4_sorted[0] + _eps(samples4_sorted[0])', 'samples5_sorted[0] - _eps(samples5_sorted[0]) < samples5_sorted[-1] < samples5_sorted[0] + _eps(samples5_sorted[0])', 'samples6_sorted[0] - _eps(samples6_sorted[0]) < samples6_sorted[-1] < samples6_sorted[0] + _eps(samples6_sorted[0])', 'np.allclose(', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', 'in str(exc)', 'got_exception', 'samples.shape == (8, 8, 1)', 'len(uq) == 2 and (0 in uq or 1 in uq)', 'samples_nhwc.shape == (1, 8, 8, 1)', 'len(uq) == 2 and (0 in uq or 1 in uq)', 'in str(exc)', 'got_exception', 'samples.shape == (8, 8, 3)', 'len(uq) == 2 and (0 in uq or 1 in uq)', 'seen_components[0] < seen_components[1]', 'seen_pixels[0] / seen_components[0] > seen_pixels[1] / seen_components[1]', 'seen_components[0] < seen_components[1]', 'seen_pixels[0] / seen_components[0] > seen_pixels[1] / seen_components[1]', 'seen_components[0] < seen_components[1]', 'seen_pixels[0] / seen_components[0] > seen_pixels[1] / seen_components[1]', 'in str(exc)', 'got_exception', 'seen_components[0] < seen_components[1]', 'seen_pixels[0] / seen_components[0] > seen_pixels[1] / seen_components[1]', 'seen_components[0] < seen_components[1]', 'seen_pixels[0] / seen_components[0] > seen_pixels[1] / seen_components[1]', 'seen_components[0] < seen_components[1]', 'seen_pixels[0] / seen_components[0] > seen_pixels[1] / seen_components[1]', 'in str(exc)', 'got_exception', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', 'in str(exc)', 'got_exception', 'np.allclose(samples1, samples2)', 'param.__str__() == param.__repr__() == ', 'param.__str__() == param.__repr__() == ', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == 0', 'np.all(samples == 0)', 'param.__str__() == param.__repr__() == ', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == 1', 'np.all(samples == 1)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == -1', 'np.all(samples == -1)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', '0.5 - _eps(sample) < sample < 0.5 + _eps(sample)', 'np.all(np.logical_and(0.5 - _eps(sample) <= samples, samples <= 0.5 + _eps(sample)))', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == 1', 'np.all(samples == 1)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample == -1', 'np.all(samples == -1)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [0, 1]', 'np.all(np.logical_or(samples == 0, samples == 1))', 'np.array_equal(samples1, samples2)', 'sample == 0', 'param.__str__() == param.__repr__() == ', 'sample == 0', 'param.__str__() == param.__repr__() == ', 'sample == 0', 'param.__str__() == param.__repr__() == ', 'sample == value_expected', 'np.all(samples == value_expected)', 'sample.shape == tuple()', 'samples.shape == (10, 5)', 'sample in [0, 1]', 'np.all(np.logical_or(samples == 0, samples == 1))', 'np.all(np.abs(samples1 - samples2) < 0.2*(10000/3))', 'np.array_equal(samples1, samples2)', 'param.__str__() == param.__repr__() == ', 'p.draw_sample() == v1 * v2', 'samples.dtype.kind == ', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.int64) + v1 * v2)', 'p.draw_sample() == v1 * v2', 'samples.dtype == np.int64', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.int64) + v1 * v2)', 'v1 * v2 - _eps(sample) < sample < v1 * v2 + _eps(sample)', 'samples.dtype.kind == ', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 * v2)', 'v1 * v2 - _eps(sample) < sample < v1 * v2 + _eps(sample)', 'samples.dtype.kind == ', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 * v2)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 * 1.0 - _eps(samples))', 'np.all(samples < 1.0 * 2.0 + _eps(samples))', 'samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0])', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 * 1.0 - _eps(samples))', 'np.all(samples < 1.0 * 2.0 + _eps(samples))', 'not (samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0]))', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 * 1.0 - _eps(samples))', 'np.all(samples < 2.0 * 1.0 + _eps(samples))', 'not (samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0]))', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 * 1.0 - _eps(samples))', 'np.all(samples < 2.0 * 1.0 + _eps(samples))', 'not (samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0]))', 'param.__str__() == param.__repr__() == ', 'p.draw_sample() == (v1 / v2)', 'samples.dtype.kind == ', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.float64) + (v1 / v2))', 'p.draw_sample() == (v1 / v2)', 'samples.dtype.kind == ', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.float64) + (v1 / v2))', '(v1 / v2) - _eps(sample) <= sample <= (v1 / v2) + _eps(sample)', 'samples.dtype.kind == ', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + (v1 / v2))', '(v1 / v2) - _eps(sample) <= sample <= (v1 / v2) + _eps(sample)', 'samples.dtype.kind == ', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + (v1 / v2))', 'samples.shape == (10, 20)', 'np.all(samples > (1.0 / 2.0) - _eps(samples))', 'np.all(samples < (1.0 / 1.0) + _eps(samples))', 'samples_sorted[0] - _eps(samples) < samples_sorted[-1] < samples_sorted[0] + _eps(samples)', 'samples.shape == (10, 20)', 'np.all(samples > (1.0 / 2.0) - _eps(samples))', 'np.all(samples < (1.0 / 1.0) + _eps(samples))', 'not (samples_sorted[0] - _eps(samples) < samples_sorted[-1] < samples_sorted[0] + _eps(samples))', 'samples.shape == (10, 20)', 'np.all(samples > (1.0 / 1.0) - _eps(samples))', 'np.all(samples < (2.0 / 1.0) + _eps(samples))', 'not (samples_sorted[0] - _eps(samples) < samples_sorted[-1] < samples_sorted[0] + _eps(samples))', 'sample == 1', 'samples.shape == (10, 20)', 'np.all(samples > (1.0 / 1.0) - _eps(samples))', 'np.all(samples < (2.0 / 1.0) + _eps(samples))', 'not (samples_sorted[0] - _eps(samples_sorted) < samples_sorted[-1]', 'samples_unique[0] == 1 and samples_unique[1] == 2', 'param.__str__() == param.__repr__() == ', 'p.draw_sample() == v1 + v2', 'samples.dtype.kind == ', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.int64) + v1 + v2)', 'p.draw_sample() == v1 + v2', 'samples.dtype.kind == ', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.int64) + v1 + v2)', 'v1 + v2 - _eps(sample) < sample < v1 + v2 + _eps(sample)', 'samples.dtype.kind == ', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 + v2)', 'v1 + v2 - _eps(sample) < sample < v1 + v2 + _eps(sample)', 'samples.dtype.kind == ', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 + v2)', 'samples.shape == (10, 20)', 'np.all(samples >= 1.0 + 1.0 - _eps(samples))', 'np.all(samples <= 1.0 + 2.0 + _eps(samples))', 'samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0])', 'samples.shape == (10, 20)', 'np.all(samples >= 1.0 + 1.0 - _eps(samples))', 'np.all(samples <= 1.0 + 2.0 + _eps(samples))', 'not (samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0]))', 'samples.shape == (10, 20)', 'np.all(samples >= 1.0 + 1.0 - _eps(samples))', 'np.all(samples <= 2.0 + 1.0 + _eps(samples))', 'not (samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0]))', 'samples.shape == (10, 20)', 'np.all(samples >= 1.0 + 1.0 - _eps(samples))', 'np.all(samples <= 2.0 + 1.0 + _eps(samples))', 'not (samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0]))', 'param.__str__() == param.__repr__() == ', 'p.draw_sample() == v1 - v2', 'samples.dtype.kind == ', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.int64) + v1 - v2)', 'p.draw_sample() == v1 - v2', 'samples.dtype.kind == ', 'np.array_equal(samples, np.zeros((2, 3), dtype=np.int64) + v1 - v2)', 'v1 - v2 - _eps(sample) < sample < v1 - v2 + _eps(sample)', 'samples.dtype.kind == ', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 - v2)', 'v1 - v2 - _eps(sample) < sample < v1 - v2 + _eps(sample)', 'samples.dtype.kind == ', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 - v2)', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 - 2.0 - _eps(samples))', 'np.all(samples < 1.0 - 1.0 + _eps(samples))', 'samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0])', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 - 2.0 - _eps(samples))', 'np.all(samples < 1.0 - 1.0 + _eps(samples))', 'not (samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0]))', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 - 1.0 - _eps(samples))', 'np.all(samples < 2.0 - 1.0 + _eps(samples))', 'not (samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0]))', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 - 1.0 - _eps(samples))', 'np.all(samples < 2.0 - 1.0 + _eps(samples))', 'not (samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0]))', 'param.__str__() == param.__repr__() == ', 'v1 ** v2 - _eps(sample) < sample < v1 ** v2 + _eps(sample)', 'samples.dtype.kind == ', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 ** v2)', 'v1 ** v2 - _eps(sample) < sample < v1 ** v2 + _eps(sample)', 'samples.dtype.kind == ', 'np.allclose(samples, np.zeros((2, 3), dtype=np.float64) + v1 ** v2)', 'samples.shape == (10, 20)', 'np.all(samples > 1.5 ** 1.0 - 2 * _eps(samples))', 'np.all(samples < 1.5 ** 2.0 + 2 * _eps(samples))', 'samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0])', 'samples.shape == (10, 20)', 'np.all(samples > 1.5 ** 1.0 - 2 * _eps(samples))', 'np.all(samples < 1.5 ** 2.0 + 2 * _eps(samples))', 'not (samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0]))', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 ** 1.0 - 2 * _eps(samples))', 'np.all(samples < 2.0 ** 1.0 + 2 * _eps(samples))', 'not (samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0]))', 'samples.shape == (10, 20)', 'np.all(samples > 1.0 ** 1.0 - 2 * _eps(samples))', 'np.all(samples < 2.0 ** 1.0 + 2 * _eps(samples))', 'not (samples_sorted[0] - _eps(samples_sorted[0]) < samples_sorted[-1] < samples_sorted[0] + _eps(samples_sorted[0]))', 'param.__str__() == param.__repr__() == ', 'abs(value) - _eps(sample) < sample < abs(value) + _eps(sample)', 'np.all(abs(value) - _eps(samples) < samples)', 'np.all(samples < abs(value) + _eps(samples))', 'sample == abs(value)', 'np.all(samples == abs(value))', 'sample.shape == tuple()', 'sample in [3, 1]', 'samples.shape == (10, 10)', 'len(samples_uq) == 2', 'samples_uq[0] == 1 and samples_uq[1] == 3', 'param.__str__() == param.__repr__() == ', 'samples.shape == (1000,)', 'n_positive + n_negative == 1000', '350 < n_positive < 750', 'n_positive + n_negative == 1000', '350 < n_positive < 750', 'np.sum(seen) == 4000', 'all([700 < v < 1300 for v in seen])', 'samples1.shape == (100, 10)', 'samples2.shape == (100, 10)', 'np.array_equal(samples1, samples2)', 'np.sum(samples == -2) > 50', 'np.sum(samples == -1) > 50', 'np.sum(samples == 1) > 50', 'np.sum(samples == 2) > 50', 'param.__str__() == param.__repr__() == ', 'sample.shape == tuple()', 'sample == 1', 'sample.shape == tuple()', 'sample == -1', 'samples.shape == (100,)', 'np.all(samples == 1)', 'samples.shape == (100,)', 'np.all(samples == -1)', 'samples.shape == (100,)', 'np.all(samples == 1)', 'samples.shape == (100,)', 'np.all(samples == -1)', 'samples.shape == (1000,)', 'n_twos + n_ones == 1000', '200 < n_twos < 700', '200 < n_ones < 700', 'samples.shape == (1000,)', 'n_twos + n_ones == 1000', 'n_twos > 0', 'n_ones > 0', 'samples.shape == (100,)', 'n_twos + n_ones == 100', 'n_twos < 5', 'samples1.shape == (100, 10)', 'samples2.shape == (100, 10)', 'np.array_equal(samples1, samples2)', 'param.__str__() == param.__repr__() == ', 'samples.shape == (100,)', 'np.all(samples == 1)', 'samples.shape == (100,)', 'np.all(samples == -1)', 'sample.shape == tuple()', 'samples.shape == (2, 4)', 'sample == 1', 'np.all(samples == 1)', 'sample.shape == tuple()', 'samples.shape == (2, 4)', '25 - 10 < sample < 25 + 10', 'np.all(np.logical_and(25 - 10 < samples, samples < 25 + 10))', 'sample.shape == tuple()', 'samples.shape == (2, 4)', 'sample == 50', 'np.all(samples == 50)', 'sample.shape == tuple()', 'samples.shape == (2, 4)', 'sample == 0', 'np.all(samples == 0)', 'False', 'seen[2] < 5', '50 - 20 < seen[0] < 50 + 20', '50 - 20 < seen[1] < 50 + 20', 'hist[1] > hist[0]', 'hist[1] > hist[2]', 'False', '300 - 50 < seen[0] < 300 + 50', '100 - 50 < seen[1] < 100 + 50', 'isinstance(param.aggregation_method, iap.Choice)', 'len(param.aggregation_method.a) == 3', '[v in param.aggregation_method.a for v in []]', 'nb_0 + nb_50 == 2 * 1000', '0.25 - 0.05 < nb_0 / (2 * 1000) < 0.25 + 0.05', 'samples1.shape == (100, 10)', 'samples2.shape == (100, 10)', 'np.allclose(samples1, samples2)', 'isinstance(param.aggregation_method, iap.Deterministic)', 'param.aggregation_method.value == ', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'param.__str__() == param.__repr__() == ', 'sample.shape == tuple()', 'samples.shape == (5, 10)', 'expected - _eps(sample) < sample < expected + _eps(sample)', 'np.all(np.logical_and(expected - _eps(samples) < samples, samples < expected + _eps(samples)))', 'sample.shape == tuple()', 'samples.shape == (5, 10)', 'expected - _eps(sample) < sample < expected + _eps(sample)', 'np.all(np.logical_and(expected - _eps(sample) < samples, samples < expected + _eps(sample)))', 'False', '500 - 150 < seen[0] < 500 + 150', '500 - 150 < seen[1] < 500 + 150', 'False', '500 - 150 < seen[0] < 500 + 150', '500 - 150 < seen[1] < 500 + 150', 'sample.shape == tuple()', 'samples.shape == (2, 3)', 'expected - 5*_eps(sample) < sample < expected + 5*_eps(sample)', 'np.all(np.logical_and(expected - 5*_eps(sample) < samples, samples < expected + 5*_eps(sample)))', 'samples1.shape == (100, 10)', 'samples2.shape == (100, 10)', 'np.array_equal(samples1, samples2)', 'param.__str__() == param.__repr__() == \\', 'isinstance(param3, iap.Multiply)', 'param3.other_param == param1', 'param3.val == param2', 'isinstance(param3, iap.Multiply)', 'param3.other_param == param1', 'isinstance(param3.val, iap.Deterministic)', 'param3.val.value == 2', 'isinstance(param3, iap.Multiply)', 'isinstance(param3.other_param, iap.Deterministic)', 'param3.other_param.value == 2', 'param3.val == param1', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'isinstance(param3, iap.Divide)', 'param3.other_param == param1', 'param3.val == param2', 'isinstance(param3, iap.Divide)', 'param3.other_param == param1', 'isinstance(param3.val, iap.Deterministic)', 'param3.val.value == 2', 'isinstance(param3, iap.Divide)', 'isinstance(param3.other_param, iap.Deterministic)', 'param3.other_param.value == 2', 'param3.val == param1', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'isinstance(param3, iap.Divide)', 'param3.other_param == param1', 'param3.val == param2', 'isinstance(param3, iap.Divide)', 'param3.other_param == param1', 'isinstance(param3.val, iap.Deterministic)', 'param3.val.value == 2', 'in str(exc)', 'got_exception', 'isinstance(param3, iap.Divide)', 'isinstance(param3.other_param, iap.Deterministic)', 'param3.other_param.value == 2', 'param3.val == param1', 'in str(exc)', 'got_exception', 'isinstance(param3, iap.Discretize)', 'isinstance(param3.other_param, iap.Divide)', 'param3.other_param.other_param == param1_int', 'param3.other_param.val == param2_int', 'isinstance(param3, iap.Discretize)', 'isinstance(param3.other_param, iap.Divide)', 'param3.other_param.other_param == param1_int', 'isinstance(param3.other_param.val, iap.Deterministic)', 'param3.other_param.val.value == 2', 'isinstance(param3, iap.Discretize)', 'isinstance(param3.other_param, iap.Divide)', 'isinstance(param3.other_param.other_param, iap.Deterministic)', 'param3.other_param.other_param.value == 2', 'param3.other_param.val == param1_int', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'isinstance(param3, iap.Add)', 'param3.other_param == param1', 'param3.val == param2', 'isinstance(param3, iap.Add)', 'param3.other_param == param1', 'isinstance(param3.val, iap.Deterministic)', 'param3.val.value == 2', 'isinstance(param3, iap.Add)', 'isinstance(param3.other_param, iap.Deterministic)', 'param3.other_param.value == 2', 'param3.val == param1', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'isinstance(param3, iap.Subtract)', 'param3.other_param == param1', 'param3.val == param2', 'isinstance(param3, iap.Subtract)', 'param3.other_param == param1', 'isinstance(param3.val, iap.Deterministic)', 'param3.val.value == 2', 'isinstance(param3, iap.Subtract)', 'isinstance(param3.other_param, iap.Deterministic)', 'param3.other_param.value == 2', 'param3.val == param1', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'isinstance(param3, iap.Power)', 'param3.other_param == param1', 'param3.val == param2', 'isinstance(param3, iap.Power)', 'param3.other_param == param1', 'isinstance(param3.val, iap.Deterministic)', 'param3.val.value == 2', 'isinstance(param3, iap.Power)', 'isinstance(param3.other_param, iap.Deterministic)', 'param3.other_param.value == 2', 'param3.val == param1', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'isinstance(param_copy, iap.Discretize)', 'isinstance(param_copy.other_param, iap.Uniform)', 'param_copy.other_param.a[0] == param.other_param.a[0]', 'isinstance(param_copy, iap.Discretize)', 'isinstance(param_copy.other_param, iap.Uniform)', 'param_copy.other_param.a[0] != param.other_param.a[0]']",[],[],[],[],[],[],[],[],[],[],[],[]
1547,aleju,kontakt@ajung.name,2019-07-14 15:24:18+02:00,61e71810bb5c95adf96e2bd94576d4bfa816d131,https://github.com/aleju/imgaug/commit/61e71810bb5c95adf96e2bd94576d4bfa816d131,Cleanup tests for dtypes.py,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],2,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,"['class Test_clip_(unittest.TestCase):', 'class Test_copy_dtpyes_for_restore(unittest.TestCase):']",[],[],[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, np.int32([0, 1, 2, 3, 4, 5]))', 'np.array_equal(observed, np.int32([0, 1, 2, 3, 4, 5]))', 'np.array_equal(observed, np.int32([0, 1, 2, 3, 4, 4]))', 'np.allclose(observed, np.float32([0.0]))', 'np.allclose(observed, np.float32([-1.0]))', 'np.array_equal(observed, np.uint32([0]))', 'np.array_equal(observed, np.uint32([1]))', 'np.array_equal(observed, np.uint32([1]))', 'np.array_equal(observed, np.uint32([1]))', 'np.array_equal(observed, np.uint32([1]))', 'np.array_equal(observed, np.int8([127]))', 'np.array_equal(observed, np.int8([127]))', 'np.array_equal(observed, np.int8([127]))', 'np.array_equal(observed, np.int8([1]))', 'np.array_equal(observed, np.int8([1]))', 'np.array_equal(observed, np.int8([1]))', 'np.array_equal(observed, np.int8([1]))', 'np.array_equal(observed, np.int8([-1]))', 'np.array_equal(observed, np.int8(-10))', 'np.array_equal(observed, np.int8(-1))', 'np.array_equal(observed, np.int8(1))', 'np.all([', 'isinstance(dtypes_copy, np.dtype)', 'dtypes_copy.name == np.dtype(dt).name', 'isinstance(dtypes_copy, list)', 'np.all([']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, np.int32([0, 1, 2, 3, 4, 5]))', 'np.array_equal(observed, np.int32([0, 1, 2, 3, 4, 5]))', 'np.array_equal(observed, np.int32([0, 1, 2, 3, 4, 4]))', 'np.allclose(observed, np.float32([0.0]))', 'np.allclose(observed, np.float32([-1.0]))', 'np.array_equal(observed, np.uint32([0]))', 'np.array_equal(observed, np.uint32([1]))', 'np.array_equal(observed, np.uint32([1]))', 'np.array_equal(observed, np.uint32([1]))', 'np.array_equal(observed, np.uint32([1]))', 'np.array_equal(observed, np.int8([127]))', 'np.array_equal(observed, np.int8([127]))', 'np.array_equal(observed, np.int8([127]))', 'np.array_equal(observed, np.int8([1]))', 'np.array_equal(observed, np.int8([1]))', 'np.array_equal(observed, np.int8([1]))', 'np.array_equal(observed, np.int8([1]))', 'np.array_equal(observed, np.int8([-1]))', 'np.array_equal(observed, np.int8(-10))', 'np.array_equal(observed, np.int8(-1))', 'np.array_equal(observed, np.int8(1))', 'all([dtype_i.type == dtype_j for dtype_i, dtype_j in zip(dtypes_copy, [np.uint8, np.float32, np.int32])])', 'isinstance(dtypes_copy, np.dtype)', 'dtypes_copy.type == dt', 'isinstance(dtypes_copy, list)', 'all([dtype_i.type == dt for dtype_i in dtypes_copy])']",[],[],[],[],[],[],[],[],[],[],[],[]
1548,aleju,kontakt@ajung.name,2019-07-14 15:56:58+02:00,63c14619bf1451342c159ed941c1b03e47fa8d15,https://github.com/aleju/imgaug/commit/63c14619bf1451342c159ed941c1b03e47fa8d15,Cleanup multicore tests,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestBatchLoader(unittest.TestCase):', 'class TestBackgroundAugmenter(unittest.TestCase):']",[],"['def setUp(self):', 'def setUp(self):']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['mock_Pool.call_args[0][0] is None', 'mock_Pool.call_args[0][0] == expected', 'np.array_equal(', 'np.array_equal(', 'np.array_equal(', 'np.array_equal(', 'len(loaded) == 20*nb_workers, \\', 'loader.all_finished()', 'len(loaded) == 20*nb_workers, \\', 'loader.all_finished()', 'len(caught_warnings) > 0', 'in str(warning.message)', 'isinstance(batch_aug, ia.Batch)', 'batch_aug.images_unaug is not None', 'batch_aug.images_unaug.dtype == np.uint8', 'batch_aug.images_unaug.shape == (1, 4, 8, 3)', 'np.array_equal(', 'batch_aug.images_aug is not None', 'batch_aug.images_aug.dtype == np.uint8', 'batch_aug.images_aug.shape == (1, 4, 8, 3)', 'np.array_equal(', 'finished_signal is None', 'source_finished_signal is None', 'queue_source.empty()', 'queue_target.empty()']",[],[],[],[],[],[],[],[],[],[],[],[],"['mock_Pool.call_args[0][0] is None', 'mock_Pool.call_args[0][0] == expected', 'np.array_equal(to_check.call_args[0][1][0][1].images_unaug, batches[0].images_unaug)', 'np.array_equal(to_check.call_args[0][1][1][1].images_unaug, batches[1].images_unaug)', 'np.array_equal(arg_batches[0][1].images_unaug, batches[0].images_unaug)', 'np.array_equal(arg_batches[1][1].images_unaug, batches[1].images_unaug)', 'len(loaded) == 20*nb_workers, \\', 'loader.all_finished()', 'len(loaded) == 20*nb_workers, \\', 'loader.all_finished()', 'isinstance(batch_aug, ia.Batch)', 'batch_aug.images_unaug is not None', 'batch_aug.images_unaug.dtype == np.uint8', 'batch_aug.images_unaug.shape == (1, 4, 8, 3)', 'np.array_equal(batch_aug.images_unaug, np.zeros((1, 4, 8, 3), dtype=np.uint8))', 'batch_aug.images_aug is not None', 'batch_aug.images_aug.dtype == np.uint8', 'batch_aug.images_aug.shape == (1, 4, 8, 3)', 'np.array_equal(batch_aug.images_aug, np.zeros((1, 4, 8, 3), dtype=np.uint8) + 1)', 'finished_signal is None', 'source_finished_signal is None', 'queue_source.empty()', 'queue_target.empty()', 'len(caught_warnings) > 0', 'in str(warning.message)']",[],[],[],[],[],[],[],[],[],[],[],[]
1549,aleju,kontakt@ajung.name,2019-07-14 16:10:11+02:00,b35c984e4a040d2b4209e85ca3ddc8cf6838c2e7,https://github.com/aleju/imgaug/commit/b35c984e4a040d2b4209e85ca3ddc8cf6838c2e7,Cleanup augmentables.utils tests,1,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],3,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class Test_interpolate_point_pair(unittest.TestCase):', 'class Test_interpolate_points(unittest.TestCase):', 'class Test_interpolate_points_by_max_distance(unittest.TestCase):']",[],[],[],[],[],[],[],[],[],[],['class TestUtils(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1550,aleju,kontakt@ajung.name,2019-07-14 17:15:26+02:00,5b05452e67216ecadf5d02e3e445af9cc8ece816,https://github.com/aleju/imgaug/commit/5b05452e67216ecadf5d02e3e445af9cc8ece816,Cleanup tests for keypoints,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,205,0,0,0,0,0,0,0,0,0,0,0,0,199,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestKeypoint(unittest.TestCase):', 'class TestKeypointsOnImage(unittest.TestCase):']","[('Raises', '(Exception) as context:'), ('Raises', '(Exception) as context:'), ('Raises', '(Exception) as context:'), ('Raises', '(Exception) as context:')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['kp.y == 1', 'kp.x == 2', 'kp.y == -1', 'kp.x == -2', 'np.isclose(kp.y, 1.5)', 'np.isclose(kp.x, 2.5)', 'kp.x == 2', 'kp.x_int == 2', 'np.isclose(kp.x, 2.7)', 'kp.x_int == 3', 'kp.y == 1', 'kp.y_int == 1', 'np.isclose(kp.y, 1.7)', 'kp.y_int == 2', 'kp2.y == 1', 'kp2.x == 2', 'kp2.y == 2', 'kp2.x == 2', 'kp2.y == 1', 'kp2.x == 4', 'kp2.y == 2', 'kp2.x == 4', 'kp2.y == 2', 'kp2.x == 2', 'kp2.y == 0', 'kp2.x == 2', 'kp2.y == 1', 'kp2.x == 3', 'kp2.y == 1', 'kp2.x == 1', 'kp2.y == 2', 'kp2.x == 4', 'np.all(image_kp[0, 0, :] == [0, 255, 0])', 'np.all(image_kp[1:, :, :] == 10)', 'np.all(image_kp[:, 1:, :] == 10)', 'np.all(image_kp[4, 4, :] == [0, 255, 0])', 'np.all(image_kp[:4, :, :] == 10)', 'np.all(image_kp[:, :4, :] == 10)', 'np.all(image_kp[:3, :3, :] == [0, 255, 0])', 'np.all(image_kp[3:, :, :] == 10)', 'np.all(image_kp[:, 3:, :] == 10)', 'np.all(image_kp[0, 0, :] == [0 + 5, 100 + 5, 0 + 5])', 'np.all(image_kp[1:, :, :] == 10)', 'np.all(image_kp[:, 1:, :] == 10)', 'np.all(image_kp[2:, 2:, :] == [0, 255, 0])', 'np.all(image_kp[:2, :, :] == 10)', 'np.all(image_kp[:, :2, :] == 10)', 'np.all(image_kp[3:, 3:, :] == [0, 255, 0])', 'np.all(image_kp[:3, :, :] == 10)', 'np.all(image_kp[:, :3, :] == 10)', 'np.all(image_kp[:2, :2, :] == [0, 255, 0])', 'np.all(image_kp[2:, :, :] == 10)', 'np.all(image_kp[:, 2:, :] == 10)', 'len(kps_manhatten) == 1', 'kps_manhatten[0].y == 4', 'kps_manhatten[0].x == 5', 'len(kps_manhatten) == 5', 'any([', 'kps_manhatten.shape == (5, 2)', 'any([', '(', '(', 'kpi.height == 10', 'kpi.width == 20', 'kpi.shape == (10, 20, 3)', 'np.all([', 'kpi2.keypoints[0].x == 2', 'kpi2.keypoints[0].y == 4', 'kpi2.keypoints[1].x == 6', 'kpi2.keypoints[1].y == 8', 'kpi2.keypoints[0].x == 2', 'kpi2.keypoints[0].y == 4', 'kpi2.keypoints[1].x == 6', 'kpi2.keypoints[1].y == 8', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == bg_plus_color_at_alpha)', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask_size3] == [0, 255, 0])', 'np.all(image_kps[~kps_mask_size3] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [0, 0, 255])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [255, 255, 255])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image2 == image_kps)', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image2[kps_mask] == [0, 255, 0])', 'np.all(image2[~kps_mask] == [10, 10, 10])', 'in str(context.exception)', 'in str(context.exception)', 'kpi2.keypoints[0].x == kpi.keypoints[0].x', 'kpi2.keypoints[0].y == kpi.keypoints[0].y', 'kpi2.keypoints[1].x == kpi.keypoints[1].x', 'kpi2.keypoints[1].y == kpi.keypoints[1].y', 'kpi2.keypoints[0].x == kpi.keypoints[0].x + 1', 'kpi2.keypoints[0].y == kpi.keypoints[0].y', 'kpi2.keypoints[1].x == kpi.keypoints[1].x + 1', 'kpi2.keypoints[1].y == kpi.keypoints[1].y', 'kpi2.keypoints[0].x == kpi.keypoints[0].x - 1', 'kpi2.keypoints[0].y == kpi.keypoints[0].y', 'kpi2.keypoints[1].x == kpi.keypoints[1].x - 1', 'kpi2.keypoints[1].y == kpi.keypoints[1].y', 'kpi2.keypoints[0].x == kpi.keypoints[0].x', 'kpi2.keypoints[0].y == kpi.keypoints[0].y + 1', 'kpi2.keypoints[1].x == kpi.keypoints[1].x', 'kpi2.keypoints[1].y == kpi.keypoints[1].y + 1', 'kpi2.keypoints[0].x == kpi.keypoints[0].x', 'kpi2.keypoints[0].y == kpi.keypoints[0].y - 1', 'kpi2.keypoints[1].x == kpi.keypoints[1].x', 'kpi2.keypoints[1].y == kpi.keypoints[1].y - 1', 'kpi2.keypoints[0].x == kpi.keypoints[0].x + 1', 'kpi2.keypoints[0].y == kpi.keypoints[0].y + 2', 'kpi2.keypoints[1].x == kpi.keypoints[1].x + 1', 'kpi2.keypoints[1].y == kpi.keypoints[1].y + 2', 'np.allclose(observed, expected)', 'np.isclose(kpi.keypoints[0].x, 1)', 'np.isclose(kpi.keypoints[0].y, 2)', 'np.isclose(kpi.keypoints[1].x, 3)', 'np.isclose(kpi.keypoints[1].y, 4)', 'np.all(image[kps_mask] == 255)', 'np.all(image[~kps_mask] == 0)', 'np.all(image[kps_mask] >= 128)', 'np.all(image[~kps_mask] == 0)', 'kpi2.shape == (5, 5, 3)', 'len(kpi2.keypoints) == 2', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[1].x == 3', 'kpi2.shape == (5, 5, 3)', 'len(kpi2.keypoints) == 2', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[1].y == -2', 'kpi2.keypoints[1].x == -1', 'kpi2.shape == (5, 5, 3)', 'len(kpi2.keypoints) == 2', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[1].y == -2', 'kpi2.keypoints[1].x == -1', 'kpi2.shape == (5, 5, 3)', 'len(kpi2.keypoints) == 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1', 'in str(context.exception)', 'distance_map.shape == (5, 5, 1)', 'np.allclose(distance_map, expected)', 'distance_map.shape == (5, 5, 1)', 'np.allclose(distance_map, expected_inv)', 'np.allclose(np.min(distance_map, axis=2), expected)', 'np.allclose(np.max(distance_map_inv, axis=2), expected_inv)', 'len(kpi.keypoints) == 2', 'kpi.keypoints[0].x == 2', 'kpi.keypoints[0].y == 2', 'kpi.keypoints[1].x == 4', 'kpi.keypoints[1].y == 2', 'kpi.shape == (4, 5)', 'len(kpi.keypoints) == 2', 'kpi.keypoints[0].x == 2', 'kpi.keypoints[0].y == 2', 'kpi.keypoints[1].x == 4', 'kpi.keypoints[1].y == 2', 'kpi.shape == (4, 5, 4)', 'len(kpi.keypoints) == 2', 'kpi.keypoints[0].x == 2', 'kpi.keypoints[0].y == 2', 'kpi.keypoints[1].x == 4', 'kpi.keypoints[1].y == 2', 'kpi.shape == (4, 5)', 'len(kpi.keypoints) == 2', 'kpi.keypoints[0].x == 2', 'kpi.keypoints[0].y == 2', 'kpi.keypoints[1].x == 1', 'kpi.keypoints[1].y == 1', 'kpi.shape == (4, 5)', 'len(kpi.keypoints) == 2', 'kpi.keypoints[0].x == 2', 'kpi.keypoints[0].y == 2', 'kpi.keypoints[1].x == 1', 'kpi.keypoints[1].y == 2', 'kpi.shape == (4, 5)', 'len(kpi.keypoints) == 1', 'kpi.keypoints[0].x == 2', 'kpi.keypoints[0].y == 2', 'kpi.shape == (4, 5)', 'in str(context.exception)', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[0].x == 100', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[1].y == 4', '(']",[],[],[],[],[],[],[],[],[],[],[],[],"['kp.y == 1', 'kp.x == 2', 'kp.y_int == 1', 'kp.x_int == 2', '1.1 - eps < kp.y < 1.1 + eps', '2.7 - eps < kp.x < 2.7 + eps', 'kp.y_int == 1', 'kp.x_int == 3', 'kp2.y == 1', 'kp2.x == 2', 'kp2.y == 2', 'kp2.x == 2', 'kp2.y == 1', 'kp2.x == 4', 'kp2.y == 2', 'kp2.x == 4', 'kp2.y == 2', 'kp2.x == 2', 'kp2.y == 0', 'kp2.x == 2', 'kp2.y == 1', 'kp2.x == 3', 'kp2.y == 1', 'kp2.x == 1', 'kp2.y == 2', 'kp2.x == 4', 'np.all(image_kp[0, 0, :] == [0, 255, 0])', 'np.all(image_kp[1:, :, :] == 10)', 'np.all(image_kp[:, 1:, :] == 10)', 'np.all(image_kp[4, 4, :] == [0, 255, 0])', 'np.all(image_kp[:4, :, :] == 10)', 'np.all(image_kp[:, :4, :] == 10)', 'np.all(image_kp[2:, 2:, :] == [0, 255, 0])', 'np.all(image_kp[:2, :, :] == 10)', 'np.all(image_kp[:, :2, :] == 10)', 'np.all(image_kp[3:, 3:, :] == [0, 255, 0])', 'np.all(image_kp[:3, :, :] == 10)', 'np.all(image_kp[:, :3, :] == 10)', 'np.all(image_kp[:3, :3, :] == [0, 255, 0])', 'np.all(image_kp[3:, :, :] == 10)', 'np.all(image_kp[:, 3:, :] == 10)', 'np.all(image_kp[:2, :2, :] == [0, 255, 0])', 'np.all(image_kp[2:, :, :] == 10)', 'np.all(image_kp[:, 2:, :] == 10)', 'np.all(image_kp[0, 0, :] == [0 + 5, 100 + 5, 0 + 5])', 'np.all(image_kp[1:, :, :] == 10)', 'np.all(image_kp[:, 1:, :] == 10)', 'len(kps_manhatten) == 1', 'kps_manhatten[0].y == 4', 'kps_manhatten[0].x == 5', 'len(kps_manhatten) == 5', 'any([np.allclose([y, x], [kp_manhatten.y, kp_manhatten.x]) for kp_manhatten in kps_manhatten])', 'kps_manhatten.shape == (5, 2)', 'any([np.allclose([y, x], [kp_manhatten_y, kp_manhatten_x])', 'kp.__repr__() == kp.__str__() == ', 'kp.__repr__() == kp.__str__() == ', 'kpi.height == 10', 'kpi.width == 20', 'kpi.shape == (10, 20, 3)', 'all([kp_i.x == kp_j.x and kp_i.y == kp_j.y for kp_i, kp_j in zip(kpi.keypoints, kpi2.keypoints)])', 'kpi2.keypoints[0].x == 2', 'kpi2.keypoints[0].y == 4', 'kpi2.keypoints[1].x == 6', 'kpi2.keypoints[1].y == 8', 'kpi2.keypoints[0].x == 2', 'kpi2.keypoints[0].y == 4', 'kpi2.keypoints[1].x == 6', 'kpi2.keypoints[1].y == 8', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [int(0.5*10+0), int(0.5*10+0.5*255), int(10*0.5+0)])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask_size3] == [0, 255, 0])', 'np.all(image_kps[~kps_mask_size3] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [0, 0, 255])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [255, 255, 255])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image2 == image_kps)', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'np.all(image2[kps_mask] == [0, 255, 0])', 'np.all(image2[~kps_mask] == [10, 10, 10])', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'got_exception', 'np.all(image_kps[kps_mask] == [0, 255, 0])', 'np.all(image_kps[~kps_mask] == [10, 10, 10])', 'got_exception', 'kpi2.keypoints[0].x == kpi.keypoints[0].x', 'kpi2.keypoints[0].y == kpi.keypoints[0].y', 'kpi2.keypoints[1].x == kpi.keypoints[1].x', 'kpi2.keypoints[1].y == kpi.keypoints[1].y', 'kpi2.keypoints[0].x == kpi.keypoints[0].x + 1', 'kpi2.keypoints[0].y == kpi.keypoints[0].y', 'kpi2.keypoints[1].x == kpi.keypoints[1].x + 1', 'kpi2.keypoints[1].y == kpi.keypoints[1].y', 'kpi2.keypoints[0].x == kpi.keypoints[0].x - 1', 'kpi2.keypoints[0].y == kpi.keypoints[0].y', 'kpi2.keypoints[1].x == kpi.keypoints[1].x - 1', 'kpi2.keypoints[1].y == kpi.keypoints[1].y', 'kpi2.keypoints[0].x == kpi.keypoints[0].x', 'kpi2.keypoints[0].y == kpi.keypoints[0].y + 1', 'kpi2.keypoints[1].x == kpi.keypoints[1].x', 'kpi2.keypoints[1].y == kpi.keypoints[1].y + 1', 'kpi2.keypoints[0].x == kpi.keypoints[0].x', 'kpi2.keypoints[0].y == kpi.keypoints[0].y - 1', 'kpi2.keypoints[1].x == kpi.keypoints[1].x', 'kpi2.keypoints[1].y == kpi.keypoints[1].y - 1', 'kpi2.keypoints[0].x == kpi.keypoints[0].x + 1', 'kpi2.keypoints[0].y == kpi.keypoints[0].y + 2', 'kpi2.keypoints[1].x == kpi.keypoints[1].x + 1', 'kpi2.keypoints[1].y == kpi.keypoints[1].y + 2', 'np.allclose(observed, expected)', '1 - eps < kpi.keypoints[0].x < 1 + eps', '2 - eps < kpi.keypoints[0].y < 2 + eps', '3 - eps < kpi.keypoints[1].x < 3 + eps', '4 - eps < kpi.keypoints[1].y < 4 + eps', 'np.all(image[kps_mask] == 255)', 'np.all(image[~kps_mask] == 0)', 'np.all(image_size3[kps_mask] == 255)', 'np.all(image_size3[kps_mask_size3] >= 128)', 'np.all(image_size3[~kps_mask_size3] == 0)', 'kpi2.shape == (5, 5, 3)', 'len(kpi2.keypoints) == 2', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[1].x == 3', 'kpi2.shape == (5, 5, 3)', 'len(kpi2.keypoints) == 2', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[1].y == -2', 'kpi2.keypoints[1].x == -1', 'kpi2.shape == (5, 5, 3)', 'len(kpi2.keypoints) == 2', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[1].y == -2', 'kpi2.keypoints[1].x == -1', 'kpi2.shape == (5, 5, 3)', 'len(kpi2.keypoints) == 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1', 'in str(exc)', 'got_exception', 'distance_map.shape == (5, 5, 1)', 'np.allclose(distance_map, expected[..., np.newaxis])', 'np.allclose(distance_map_inv, expected_inv[..., np.newaxis])', 'np.allclose(np.min(distance_map, axis=2), expected)', 'np.allclose(np.max(distance_map_inv, axis=2), expected_inv)', 'len(kpi.keypoints) == 2', 'kpi.keypoints[0].x == 2', 'kpi.keypoints[0].y == 2', 'kpi.keypoints[1].x == 4', 'kpi.keypoints[1].y == 2', 'kpi.shape == (4, 5, 4)', 'len(kpi.keypoints) == 2', 'kpi.keypoints[0].x == 2', 'kpi.keypoints[0].y == 2', 'kpi.keypoints[1].x == 4', 'kpi.keypoints[1].y == 2', 'kpi.shape == (4, 5)', 'len(kpi.keypoints) == 2', 'kpi.keypoints[0].x == 2', 'kpi.keypoints[0].y == 2', 'kpi.keypoints[1].x == 1', 'kpi.keypoints[1].y == 1', 'kpi.shape == (4, 5)', 'len(kpi.keypoints) == 2', 'kpi.keypoints[0].x == 2', 'kpi.keypoints[0].y == 2', 'kpi.keypoints[1].x == 1', 'kpi.keypoints[1].y == 2', 'kpi.shape == (4, 5)', 'len(kpi.keypoints) == 1', 'kpi.keypoints[0].x == 2', 'kpi.keypoints[0].y == 2', 'kpi.shape == (4, 5)', 'in str(exc)', 'got_exception', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[0].x == 100', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[1].y == 4', 'kpi.__repr__() == kpi.__str__() == expected']",[],[],[],[],[],[],[],[],[],[],[],[]
1551,aleju,kontakt@ajung.name,2019-07-14 20:36:04+02:00,1b3ebb0069164ee35c802f32175c5877cc9df10b,https://github.com/aleju/imgaug/commit/1b3ebb0069164ee35c802f32175c5877cc9df10b,Fix BoundingBox.deepcopy() shallow copying labels,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1552,aleju,kontakt@ajung.name,2019-07-14 20:36:40+02:00,df6507cd57329b9a254bfa3db1924ad239a73529,https://github.com/aleju/imgaug/commit/df6507cd57329b9a254bfa3db1924ad239a73529,Cleanup BoundingBox tests,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,363,0,0,0,0,0,0,0,0,0,0,0,0,343,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestBoundingBox(unittest.TestCase):', 'class TestBoundingBoxesOnImage(unittest.TestCase):']","[('Raises', '(Exception) as context:')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['bb.y1 == 10', 'bb.x1 == 20', 'bb.y2 == 30', 'bb.x2 == 40', 'bb.label is None', 'np.isclose(bb.y1, 10.1)', 'np.isclose(bb.x1, 20.2)', 'np.isclose(bb.y2, 30.3)', 'np.isclose(bb.x2, 40.4)', 'bb.label is None', 'bb.y1 == 10', 'bb.x1 == 20', 'bb.y2 == 30', 'bb.x2 == 40', 'bb.label == ', 'bb.y1 == 10', 'bb.x1 == 20', 'bb.y2 == 30', 'bb.x2 == 40', 'bb.y1 == 10', 'bb.x1 == 20', 'bb.y2 == 30', 'bb.x2 == 40', 'bb.y1_int == 10', 'bb.x1_int == 20', 'bb.y2_int == 30', 'bb.x2_int == 40', 'bb.y1_int == 10', 'bb.x1_int == 20', 'bb.y2_int == 31', 'bb.x2_int == 41', 'bb.width == 40 - 20', 'np.isclose(bb.width, 40.4 - 20.2)', 'bb.height == 30 - 10', 'np.isclose(bb.height, 30.3 - 10.1)', 'np.isclose(bb.center_x, expected)', 'np.isclose(bb.center_x, expected)', 'np.isclose(bb.center_y, expected)', 'np.isclose(bb.center_y, expected)', 'bb.area == (30-10) * (40-20)', 'np.isclose(bb.area, (30.3-10.1) * (40.4-20.2))', 'bb.contains(ia.Keypoint(x=2.5, y=1.5)) is True', 'bb.contains(ia.Keypoint(x=2, y=1)) is True', 'bb.contains(ia.Keypoint(x=0, y=0)) is False', 'np.isclose(bb2.y1, 10)', 'np.isclose(bb2.x1, 20)', 'np.isclose(bb2.y2, 30)', 'np.isclose(bb2.x2, 40)', 'np.isclose(bb2.y1, 10*2)', 'np.isclose(bb2.x1, 20*2)', 'np.isclose(bb2.y2, 30*2)', 'np.isclose(bb2.x2, 40*2)', 'np.isclose(bb2.y1, 10*0.5)', 'np.isclose(bb2.x1, 20*0.5)', 'np.isclose(bb2.y2, 30*0.5)', 'np.isclose(bb2.x2, 40*0.5)', 'np.isclose(bb2.y1, 10*1)', 'np.isclose(bb2.x1, 20*2)', 'np.isclose(bb2.y2, 30*1)', 'np.isclose(bb2.x2, 40*2)', 'np.isclose(bb2.y1, 10*2)', 'np.isclose(bb2.x1, 20*1)', 'np.isclose(bb2.y2, 30*2)', 'np.isclose(bb2.x2, 40*1)', 'bb2.y1 == 10-1', 'bb2.y2 == 30+1', 'bb2.x1 == 20-1', 'bb2.x2 == 40+1', 'bb2.y1 == 10-(-1)', 'bb2.y2 == 30+(-1)', 'bb2.x1 == 20-(-1)', 'bb2.x2 == 40+(-1)', 'bb2.y1 == 10-1', 'bb2.y2 == 30+0', 'bb2.x1 == 20-0', 'bb2.x2 == 40+0', 'bb2.y1 == 10-0', 'bb2.y2 == 30+0', 'bb2.x1 == 20-0', 'bb2.x2 == 40+1', 'bb2.y1 == 10-0', 'bb2.y2 == 30+1', 'bb2.x1 == 20-0', 'bb2.x2 == 40+0', 'bb2.y1 == 10-0', 'bb2.y2 == 30+0', 'bb2.x1 == 20-1', 'bb2.x2 == 40+0', 'bb_inter.x1 == 39', 'bb_inter.x2 == 40', 'bb_inter.y1 == 10', 'bb_inter.y2 == 30', 'bb_inter is False', 'bb_union.x1 == 20', 'bb_union.x2 == 59', 'bb_union.y1 == 10', 'bb_union.y2 == 30', 'np.isclose(iou, 1.0)', 'np.isclose(iou, 0.0)', 'np.isclose(iou, iou_expected)', 'bb.is_fully_within_image((100, 100, 3)) is True', 'bb.is_fully_within_image((20, 100, 3)) is False', 'bb.is_fully_within_image((100, 30, 3)) is False', 'bb.is_fully_within_image((1, 1, 3)) is False', 'bb.is_partly_within_image((100, 100, 3)) is True', 'bb.is_partly_within_image((20, 100, 3)) is True', 'bb.is_partly_within_image((100, 30, 3)) is True', 'bb.is_partly_within_image((1, 1, 3)) is False', 'observed is expected', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', 'bb_cut.y2 == 30', 'bb_cut.x2 == 40', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', 'bb_cut.y2 == 30', 'bb_cut.x2 == 40', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', 'np.isclose(bb_cut.y2, 20)', 'bb_cut.x2 == 40', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', 'bb_cut.y2 == 30', 'np.isclose(bb_cut.x2, 30)', 'bb_top.y1 == 10', 'bb_top.x1 == 20', 'bb_top.y2 == 30', 'bb_top.x2 == 40', 'bb_right.y1 == 10', 'bb_right.x1 == 20', 'bb_right.y2 == 30', 'bb_right.x2 == 40', 'bb_bottom.y1 == 10', 'bb_bottom.x1 == 20', 'bb_bottom.y2 == 30', 'bb_bottom.x2 == 40', 'bb_left.y1 == 10', 'bb_left.x1 == 20', 'bb_left.y2 == 30', 'bb_left.x2 == 40', 'bb_top.y1 == 10+1', 'bb_top.x1 == 20', 'bb_top.y2 == 30+1', 'bb_top.x2 == 40', 'bb_right.y1 == 10', 'bb_right.x1 == 20-1', 'bb_right.y2 == 30', 'bb_right.x2 == 40-1', 'bb_bottom.y1 == 10-1', 'bb_bottom.x1 == 20', 'bb_bottom.y2 == 30-1', 'bb_bottom.x2 == 40', 'bb_left.y1 == 10', 'bb_left.x1 == 20+1', 'bb_left.y2 == 30', 'bb_left.x2 == 40+1', 'bb_top.y1 == 10-1', 'bb_top.x1 == 20', 'bb_top.y2 == 30-1', 'bb_top.x2 == 40', 'bb_right.y1 == 10', 'bb_right.x1 == 20+1', 'bb_right.y2 == 30', 'bb_right.x2 == 40+1', 'bb_bottom.y1 == 10+1', 'bb_bottom.x1 == 20', 'bb_bottom.y2 == 30+1', 'bb_bottom.x2 == 40', 'bb_left.y1 == 10', 'bb_left.x1 == 20-1', 'bb_left.y2 == 30', 'bb_left.x2 == 40-1', 'bb_mix.y1 == 10+1-2', 'bb_mix.x1 == 20+3-4', 'bb_mix.y2 == 30+3-4', 'bb_mix.x2 == 40+1-2', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image == 0)', 'np.all(image_bb[bb_mask] == [255, 0, 0])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [128, 128, 128])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [150, 150, 150])', 'np.all(image_bb[~bb_mask] == [100, 100, 100])', 'np.sum(np.abs((image_bb - [150, 150, 150])[bb_mask])) < 0.1', 'np.sum(np.abs((image_bb - [100, 100, 100])[~bb_mask])) < 0.1', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image[bb_mask] == [255, 255, 255])', 'np.all(image[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'in str(context.exception)', 'np.array_equal(image_sub, image[1:3, 1:3, :])', 'np.array_equal(image_sub, image[1:3, 1:3])', 'np.array_equal(image_sub, image_pad[8:11, 8:11, :])', 'np.array_equal(image_sub, image_pad[8:11, 8:11])', 'np.array_equal(image_sub, image_pad[0:4, 0:5, :])', 'np.array_equal(image_sub, image[1:1+1, 1:1+1, :])', 'np.array_equal(image_sub, image[1:1+1, 2:4, :])', 'np.array_equal(image_sub, image[1:1+1, 2:2+1, :])', 'len(kps) == 4', 'kps[0].y == 1', 'kps[0].x == 1', 'kps[1].y == 1', 'kps[1].x == 3', 'kps[2].y == 3', 'kps[2].x == 3', 'kps[3].y == 3', 'kps[3].x == 1', 'bb2.y1 == 1', 'bb2.y2 == 3', 'bb2.x1 == 1', 'bb2.x2 == 3', 'bb2.label == ', 'bb2.y1 == 10', 'bb2.x1 == 20', 'bb2.y2 == 30', 'bb2.x2 == 40', 'bb2.label == ', 'bb2.y1 == 1', 'bb2.y2 == 3', 'bb2.x1 == 1', 'bb2.x2 == 3', 'bb2.label[0] == ', 'bb.label[0] == ', 'bb2.y1 == 10', 'bb2.y2 == 30', 'bb2.x1 == 15', 'bb2.x2 == 35', 'bb2.label == ', 'bb.label == ', '(', '(', 'bbsoi.bounding_boxes == [bb1, bb2]', 'bbsoi.shape == (40, 50, 3)', 'bbsoi.bounding_boxes == [bb1, bb2]', 'bbsoi.shape == (40, 50, 3)', 'bbsoi.height == 40', 'bbsoi.width == 50', 'not bbsoi.empty', 'bbsoi.empty', 'bbsoi_projected.bounding_boxes[0].y1 == 10', 'bbsoi_projected.bounding_boxes[0].x1 == 20', 'bbsoi_projected.bounding_boxes[0].y2 == 30', 'bbsoi_projected.bounding_boxes[0].x2 == 40', 'bbsoi_projected.bounding_boxes[1].y1 == 15', 'bbsoi_projected.bounding_boxes[1].x1 == 25', 'bbsoi_projected.bounding_boxes[1].y2 == 35', 'bbsoi_projected.bounding_boxes[1].x2 == 45', 'bbsoi_projected.bounding_boxes[0].y1 == 10*2', 'bbsoi_projected.bounding_boxes[0].x1 == 20*2', 'bbsoi_projected.bounding_boxes[0].y2 == 30*2', 'bbsoi_projected.bounding_boxes[0].x2 == 40*2', 'bbsoi_projected.bounding_boxes[1].y1 == 15*2', 'bbsoi_projected.bounding_boxes[1].x1 == 25*2', 'bbsoi_projected.bounding_boxes[1].y2 == 35*2', 'bbsoi_projected.bounding_boxes[1].x2 == 45*2', 'bbsoi_projected.bounding_boxes[0].y1 == 10*2', 'bbsoi_projected.bounding_boxes[0].x1 == 20*2', 'bbsoi_projected.bounding_boxes[0].y2 == 30*2', 'bbsoi_projected.bounding_boxes[0].x2 == 40*2', 'bbsoi_projected.bounding_boxes[1].y1 == 15*2', 'bbsoi_projected.bounding_boxes[1].x1 == 25*2', 'bbsoi_projected.bounding_boxes[1].y2 == 35*2', 'bbsoi_projected.bounding_boxes[1].x2 == 45*2', 'len(bbsoi.bounding_boxes) == 2', 'np.allclose(bbsoi.bounding_boxes[0].x1, 0.0)', 'np.allclose(bbsoi.bounding_boxes[0].y1, 0.0)', 'np.allclose(bbsoi.bounding_boxes[0].x2, 1.0)', 'np.allclose(bbsoi.bounding_boxes[0].y2, 1.0)', 'np.allclose(bbsoi.bounding_boxes[1].x1, 1.0)', 'np.allclose(bbsoi.bounding_boxes[1].y1, 2.0)', 'np.allclose(bbsoi.bounding_boxes[1].x2, 3.0)', 'np.allclose(bbsoi.bounding_boxes[1].y2, 4.0)', 'bbsoi.shape == (40, 50, 3)', 'len(bbsoi.bounding_boxes) == 2', 'np.allclose(bbsoi.bounding_boxes[0].x1, 0.0)', 'np.allclose(bbsoi.bounding_boxes[0].y1, 0.0)', 'np.allclose(bbsoi.bounding_boxes[0].x2, 1.0)', 'np.allclose(bbsoi.bounding_boxes[0].y2, 1.0)', 'np.allclose(bbsoi.bounding_boxes[1].x1, 1.0)', 'np.allclose(bbsoi.bounding_boxes[1].y1, 2.0)', 'np.allclose(bbsoi.bounding_boxes[1].x2, 3.0)', 'np.allclose(bbsoi.bounding_boxes[1].y2, 4.0)', 'bbsoi.shape == (40, 50, 3)', 'len(bbsoi.bounding_boxes) == 0', 'bbsoi.shape == (40, 50, 3)', 'np.allclose(xyxy, xyxy_out)', 'xyxy_out.dtype == np.float32', 'np.allclose(xyxy.astype(np.int32), xyxy_out)', 'xyxy_out.dtype == np.int32', 'xyxy_out.shape == (0, 4)', 'np.all(image_drawn[10-1, 20-1, :] == [0, 0, 0])', 'np.all(image_drawn[10-1, 20-0, :] == [0, 0, 0])', 'np.all(image_drawn[10-0, 20-1, :] == [0, 0, 0])', 'np.all(image_drawn[10-0, 20-0, :] == [0, 255, 0])', 'np.all(image_drawn[10+1, 20+1, :] == [0, 0, 0])', 'np.all(image_drawn[30-1, 40-1, :] == [0, 0, 0])', 'np.all(image_drawn[30+1, 40-0, :] == [0, 0, 0])', 'np.all(image_drawn[30+0, 40+1, :] == [0, 0, 0])', 'np.all(image_drawn[30+0, 40+0, :] == [0, 255, 0])', 'np.all(image_drawn[30+1, 40+1, :] == [0, 0, 0])', 'np.all(image_drawn[15-1, 25-1, :] == [0, 0, 0])', 'np.all(image_drawn[15-1, 25-0, :] == [0, 0, 0])', 'np.all(image_drawn[15-0, 25-1, :] == [0, 0, 0])', 'np.all(image_drawn[15-0, 25-0, :] == [0, 255, 0])', 'np.all(image_drawn[15+1, 25+1, :] == [0, 0, 0])', 'np.all(image_drawn[35-1, 45-1, :] == [0, 0, 0])', 'np.all(image_drawn[35+1, 45+0, :] == [0, 0, 0])', 'np.all(image_drawn[35+0, 45+1, :] == [0, 0, 0])', 'np.all(image_drawn[35+0, 45+0, :] == [0, 255, 0])', 'np.all(image_drawn[35+1, 45+1, :] == [0, 0, 0])', 'len(bbsoi_removed.bounding_boxes) == 1', 'bbsoi_removed.bounding_boxes[0] == bb1', 'len(bbsoi_clip.bounding_boxes) == 2', 'bbsoi_clip.bounding_boxes[0].y1 == 10', 'bbsoi_clip.bounding_boxes[0].x1 == 20', 'bbsoi_clip.bounding_boxes[0].y2 == 30', 'bbsoi_clip.bounding_boxes[0].x2 == 40', 'bbsoi_clip.bounding_boxes[1].y1 == 15', 'bbsoi_clip.bounding_boxes[1].x1 == 25', 'bbsoi_clip.bounding_boxes[1].y2 == 35', 'np.isclose(bbsoi_clip.bounding_boxes[1].x2, 50)', 'len(bbsoi_shifted.bounding_boxes) == 2', 'bbsoi_shifted.bounding_boxes[0].y1 == 10', 'bbsoi_shifted.bounding_boxes[0].x1 == 20 - 1', 'bbsoi_shifted.bounding_boxes[0].y2 == 30', 'bbsoi_shifted.bounding_boxes[0].x2 == 40 - 1', 'bbsoi_shifted.bounding_boxes[1].y1 == 15', 'bbsoi_shifted.bounding_boxes[1].x1 == 25 - 1', 'bbsoi_shifted.bounding_boxes[1].y2 == 35', 'bbsoi_shifted.bounding_boxes[1].x2 == 51 - 1', 'len(bbsoi.bounding_boxes) == 2', 'bbsoi_copy.bounding_boxes[0].y1 == 10', 'bbsoi_copy.bounding_boxes[0].x1 == 20', 'bbsoi_copy.bounding_boxes[0].y2 == 30', 'bbsoi_copy.bounding_boxes[0].x2 == 40', 'bbsoi_copy.bounding_boxes[1].y1 == 15', 'bbsoi_copy.bounding_boxes[1].x1 == 25', 'bbsoi_copy.bounding_boxes[1].y2 == 35', 'bbsoi_copy.bounding_boxes[1].x2 == 51', 'bbsoi.bounding_boxes[0].y1 == 0', 'bbsoi_copy.bounding_boxes[0].y1 == 0', 'len(bbsoi.bounding_boxes) == 2', 'bbsoi_copy.bounding_boxes[0].y1 == 10', 'bbsoi_copy.bounding_boxes[0].x1 == 20', 'bbsoi_copy.bounding_boxes[0].y2 == 30', 'bbsoi_copy.bounding_boxes[0].x2 == 40', 'bbsoi_copy.bounding_boxes[1].y1 == 15', 'bbsoi_copy.bounding_boxes[1].x1 == 25', 'bbsoi_copy.bounding_boxes[1].y2 == 35', 'bbsoi_copy.bounding_boxes[1].x2 == 51', 'bbsoi.bounding_boxes[0].y1 == 10', 'bbsoi_copy.bounding_boxes[0].y1 == 0', '(', '(']",[],[],[],[],[],[],[],[],[],[],[],[],"['bb.y1_int == 10', 'bb.x1_int == 20', 'bb.y2_int == 30', 'bb.x2_int == 40', 'bb.width == 40 - 20', 'bb.height == 30 - 10', 'center_x - eps < bb.center_x < center_x + eps', 'center_y - eps < bb.center_y < center_y + eps', 'bb.y1_int == 10', 'bb.x1_int == 20', 'bb.y2_int == 30', 'bb.x2_int == 40', 'bb.y1_int == 10', 'bb.x1_int == 20', 'bb.y2_int == 31', 'bb.x2_int == 41', 'bb.width == 40.9 - 20.1', 'bb.height == 30.9 - 10.1', 'center_x - eps < bb.center_x < center_x + eps', 'center_y - eps < bb.center_y < center_y + eps', 'bb.area == (30-10) * (40-20)', 'bb.contains(ia.Keypoint(x=2.5, y=1.5)) is True', 'bb.contains(ia.Keypoint(x=2, y=1)) is True', 'bb.contains(ia.Keypoint(x=0, y=0)) is False', '10 - eps < bb2.y1 < 10 + eps', '20 - eps < bb2.x1 < 20 + eps', '30 - eps < bb2.y2 < 30 + eps', '40 - eps < bb2.x2 < 40 + eps', '10*2 - eps < bb2.y1 < 10*2 + eps', '20*2 - eps < bb2.x1 < 20*2 + eps', '30*2 - eps < bb2.y2 < 30*2 + eps', '40*2 - eps < bb2.x2 < 40*2 + eps', '10*0.5 - eps < bb2.y1 < 10*0.5 + eps', '20*0.5 - eps < bb2.x1 < 20*0.5 + eps', '30*0.5 - eps < bb2.y2 < 30*0.5 + eps', '40*0.5 - eps < bb2.x2 < 40*0.5 + eps', '10*1 - eps < bb2.y1 < 10*1 + eps', '20*2 - eps < bb2.x1 < 20*2 + eps', '30*1 - eps < bb2.y2 < 30*1 + eps', '40*2 - eps < bb2.x2 < 40*2 + eps', '10*2 - eps < bb2.y1 < 10*2 + eps', '20*1 - eps < bb2.x1 < 20*1 + eps', '30*2 - eps < bb2.y2 < 30*2 + eps', '40*1 - eps < bb2.x2 < 40*1 + eps', 'bb2.y1 == 10-1', 'bb2.y2 == 30+1', 'bb2.x1 == 20-1', 'bb2.x2 == 40+1', 'bb2.y1 == 10-(-1)', 'bb2.y2 == 30+(-1)', 'bb2.x1 == 20-(-1)', 'bb2.x2 == 40+(-1)', 'bb2.y1 == 10-1', 'bb2.y2 == 30+0', 'bb2.x1 == 20-0', 'bb2.x2 == 40+0', 'bb2.y1 == 10-0', 'bb2.y2 == 30+0', 'bb2.x1 == 20-0', 'bb2.x2 == 40+1', 'bb2.y1 == 10-0', 'bb2.y2 == 30+1', 'bb2.x1 == 20-0', 'bb2.x2 == 40+0', 'bb2.y1 == 10-0', 'bb2.y2 == 30+0', 'bb2.x1 == 20-1', 'bb2.x2 == 40+0', 'bb_inter.x1 == 39', 'bb_inter.x2 == 40', 'bb_inter.y1 == 10', 'bb_inter.y2 == 30', 'bb_inter is False', 'bb_union.x1 == 20', 'bb_union.x2 == 59', 'bb_union.y1 == 10', 'bb_union.y2 == 30', '1.0 - eps < iou < 1.0 + eps', '0.0 - eps < iou < 0.0 + eps', 'iou_expected - eps < iou < iou_expected + eps', 'bb.is_fully_within_image((100, 100, 3)) is True', 'bb.is_fully_within_image((20, 100, 3)) is False', 'bb.is_fully_within_image((100, 30, 3)) is False', 'bb.is_fully_within_image((1, 1, 3)) is False', 'bb.is_partly_within_image((100, 100, 3)) is True', 'bb.is_partly_within_image((20, 100, 3)) is True', 'bb.is_partly_within_image((100, 30, 3)) is True', 'bb.is_partly_within_image((1, 1, 3)) is False', 'bb.is_out_of_image((100, 100, 3), partly=True, fully=True) is False', 'bb.is_out_of_image((100, 100, 3), partly=False, fully=True) is False', 'bb.is_out_of_image((100, 100, 3), partly=True, fully=False) is False', 'bb.is_out_of_image((20, 100, 3), partly=True, fully=True) is True', 'bb.is_out_of_image((20, 100, 3), partly=False, fully=True) is False', 'bb.is_out_of_image((20, 100, 3), partly=True, fully=False) is True', 'bb.is_out_of_image((100, 30, 3), partly=True, fully=True) is True', 'bb.is_out_of_image((100, 30, 3), partly=False, fully=True) is False', 'bb.is_out_of_image((100, 30, 3), partly=True, fully=False) is True', 'bb.is_out_of_image((1, 1, 3), partly=True, fully=True) is True', 'bb.is_out_of_image((1, 1, 3), partly=False, fully=True) is True', 'bb.is_out_of_image((1, 1, 3), partly=True, fully=False) is False', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', 'bb_cut.y2 == 30', 'bb_cut.x2 == 40', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', 'bb_cut.y2 == 30', 'bb_cut.x2 == 40', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', '20 - 2*eps < bb_cut.y2 < 20', 'bb_cut.x2 == 40', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', 'bb_cut.y2 == 30', '30 - 2*eps < bb_cut.x2 < 30', 'bb_top.y1 == 10', 'bb_top.x1 == 20', 'bb_top.y2 == 30', 'bb_top.x2 == 40', 'bb_right.y1 == 10', 'bb_right.x1 == 20', 'bb_right.y2 == 30', 'bb_right.x2 == 40', 'bb_bottom.y1 == 10', 'bb_bottom.x1 == 20', 'bb_bottom.y2 == 30', 'bb_bottom.x2 == 40', 'bb_left.y1 == 10', 'bb_left.x1 == 20', 'bb_left.y2 == 30', 'bb_left.x2 == 40', 'bb_top.y1 == 10+1', 'bb_top.x1 == 20', 'bb_top.y2 == 30+1', 'bb_top.x2 == 40', 'bb_right.y1 == 10', 'bb_right.x1 == 20-1', 'bb_right.y2 == 30', 'bb_right.x2 == 40-1', 'bb_bottom.y1 == 10-1', 'bb_bottom.x1 == 20', 'bb_bottom.y2 == 30-1', 'bb_bottom.x2 == 40', 'bb_left.y1 == 10', 'bb_left.x1 == 20+1', 'bb_left.y2 == 30', 'bb_left.x2 == 40+1', 'bb_top.y1 == 10-1', 'bb_top.x1 == 20', 'bb_top.y2 == 30-1', 'bb_top.x2 == 40', 'bb_right.y1 == 10', 'bb_right.x1 == 20+1', 'bb_right.y2 == 30', 'bb_right.x2 == 40+1', 'bb_bottom.y1 == 10+1', 'bb_bottom.x1 == 20', 'bb_bottom.y2 == 30+1', 'bb_bottom.x2 == 40', 'bb_left.y1 == 10', 'bb_left.x1 == 20-1', 'bb_left.y2 == 30', 'bb_left.x2 == 40-1', 'bb_mix.y1 == 10+1-2', 'bb_mix.x1 == 20+3-4', 'bb_mix.y2 == 30+3-4', 'bb_mix.x2 == 40+1-2', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image == 0)', 'np.all(image_bb[bb_mask] == [255, 0, 0])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [128, 128, 128])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [150, 150, 150])', 'np.all(image_bb[~bb_mask] == [100, 100, 100])', 'np.sum(np.abs((image_bb - [150, 150, 150])[bb_mask])) < 0.1', 'np.sum(np.abs((image_bb - [100, 100, 100])[~bb_mask])) < 0.1', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image[bb_mask] == [255, 255, 255])', 'np.all(image[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'np.all(image_bb[bb_mask] == [255, 255, 255])', 'np.all(image_bb[~bb_mask] == [0, 0, 0])', 'got_exception is False', 'got_exception is True', 'np.array_equal(image_sub, image[1:3, 1:3, :])', 'np.array_equal(image_sub, image[1:3, 1:3])', 'np.array_equal(image_sub, image[1:3, 1:3])', 'np.array_equal(image_sub, image_pad[8:11, 8:11, :])', 'np.array_equal(image_sub, image_pad[8:11, 8:11])', 'np.array_equal(image_sub, image_pad[0:4, 0:5, :])', 'np.array_equal(image_sub, image[1:1+1, 1:1+1, :])', 'np.array_equal(image_sub, image[1:1+1, 2:4, :])', 'np.array_equal(image_sub, image[1:1+1, 2:2+1, :])', 'kps[0].y == 1', 'kps[0].x == 1', 'kps[1].y == 1', 'kps[1].x == 3', 'kps[2].y == 3', 'kps[2].x == 3', 'kps[3].y == 3', 'kps[3].x == 1', 'bb2.y1 == 1', 'bb2.y2 == 3', 'bb2.x1 == 1', 'bb2.x2 == 3', 'bb2.label == ', 'bb2.y1 == 10', 'bb2.x1 == 20', 'bb2.y2 == 30', 'bb2.x2 == 40', 'bb2.label == ', 'bb2.y1 == 1', 'bb2.y2 == 3', 'bb2.x1 == 1', 'bb2.x2 == 3', 'bb2.label[0] == ', 'bb.__repr__() == ', 'bb.__str__() == ', 'bbsoi.height == 40', 'bbsoi.width == 50', 'bbsoi.height == 40', 'bbsoi.width == 50', 'not bbsoi.empty', 'bbsoi.empty', 'bbsoi_projected.bounding_boxes[0].y1 == 10', 'bbsoi_projected.bounding_boxes[0].x1 == 20', 'bbsoi_projected.bounding_boxes[0].y2 == 30', 'bbsoi_projected.bounding_boxes[0].x2 == 40', 'bbsoi_projected.bounding_boxes[1].y1 == 15', 'bbsoi_projected.bounding_boxes[1].x1 == 25', 'bbsoi_projected.bounding_boxes[1].y2 == 35', 'bbsoi_projected.bounding_boxes[1].x2 == 45', 'bbsoi_projected.bounding_boxes[0].y1 == 10*2', 'bbsoi_projected.bounding_boxes[0].x1 == 20*2', 'bbsoi_projected.bounding_boxes[0].y2 == 30*2', 'bbsoi_projected.bounding_boxes[0].x2 == 40*2', 'bbsoi_projected.bounding_boxes[1].y1 == 15*2', 'bbsoi_projected.bounding_boxes[1].x1 == 25*2', 'bbsoi_projected.bounding_boxes[1].y2 == 35*2', 'bbsoi_projected.bounding_boxes[1].x2 == 45*2', 'bbsoi_projected.bounding_boxes[0].y1 == 10*2', 'bbsoi_projected.bounding_boxes[0].x1 == 20*2', 'bbsoi_projected.bounding_boxes[0].y2 == 30*2', 'bbsoi_projected.bounding_boxes[0].x2 == 40*2', 'bbsoi_projected.bounding_boxes[1].y1 == 15*2', 'bbsoi_projected.bounding_boxes[1].x1 == 25*2', 'bbsoi_projected.bounding_boxes[1].y2 == 35*2', 'bbsoi_projected.bounding_boxes[1].x2 == 45*2', 'len(bbsoi.bounding_boxes) == 2', 'np.allclose(bbsoi.bounding_boxes[0].x1, 0.0)', 'np.allclose(bbsoi.bounding_boxes[0].y1, 0.0)', 'np.allclose(bbsoi.bounding_boxes[0].x2, 1.0)', 'np.allclose(bbsoi.bounding_boxes[0].y2, 1.0)', 'np.allclose(bbsoi.bounding_boxes[1].x1, 1.0)', 'np.allclose(bbsoi.bounding_boxes[1].y1, 2.0)', 'np.allclose(bbsoi.bounding_boxes[1].x2, 3.0)', 'np.allclose(bbsoi.bounding_boxes[1].y2, 4.0)', 'bbsoi.shape == (40, 50, 3)', 'len(bbsoi.bounding_boxes) == 2', 'np.allclose(bbsoi.bounding_boxes[0].x1, 0.0)', 'np.allclose(bbsoi.bounding_boxes[0].y1, 0.0)', 'np.allclose(bbsoi.bounding_boxes[0].x2, 1.0)', 'np.allclose(bbsoi.bounding_boxes[0].y2, 1.0)', 'np.allclose(bbsoi.bounding_boxes[1].x1, 1.0)', 'np.allclose(bbsoi.bounding_boxes[1].y1, 2.0)', 'np.allclose(bbsoi.bounding_boxes[1].x2, 3.0)', 'np.allclose(bbsoi.bounding_boxes[1].y2, 4.0)', 'bbsoi.shape == (40, 50, 3)', 'len(bbsoi.bounding_boxes) == 0', 'bbsoi.shape == (40, 50, 3)', 'np.allclose(xyxy_arr, xyxy_arr_out)', 'xyxy_arr_out.dtype == np.float32', 'np.allclose(xyxy_arr.astype(np.int32), xyxy_arr_out)', 'xyxy_arr_out.dtype == np.int32', 'xyxy_arr_out.shape == (0, 4)', 'np.all(image[10-1, 20-1, :] == [0, 0, 0])', 'np.all(image[10-1, 20-0, :] == [0, 0, 0])', 'np.all(image[10-0, 20-1, :] == [0, 0, 0])', 'np.all(image[10-0, 20-0, :] == [0, 255, 0])', 'np.all(image[10+1, 20+1, :] == [0, 0, 0])', 'np.all(image[30-1, 40-1, :] == [0, 0, 0])', 'np.all(image[30+1, 40-0, :] == [0, 0, 0])', 'np.all(image[30+0, 40+1, :] == [0, 0, 0])', 'np.all(image[30+0, 40+0, :] == [0, 255, 0])', 'np.all(image[30+1, 40+1, :] == [0, 0, 0])', 'np.all(image[15-1, 25-1, :] == [0, 0, 0])', 'np.all(image[15-1, 25-0, :] == [0, 0, 0])', 'np.all(image[15-0, 25-1, :] == [0, 0, 0])', 'np.all(image[15-0, 25-0, :] == [0, 255, 0])', 'np.all(image[15+1, 25+1, :] == [0, 0, 0])', 'np.all(image[35-1, 45-1, :] == [0, 0, 0])', 'np.all(image[35+1, 45+0, :] == [0, 0, 0])', 'np.all(image[35+0, 45+1, :] == [0, 0, 0])', 'np.all(image[35+0, 45+0, :] == [0, 255, 0])', 'np.all(image[35+1, 45+1, :] == [0, 0, 0])', 'len(bbsoi_slim.bounding_boxes) == 1', 'bbsoi_slim.bounding_boxes[0] == bb1', 'len(bbsoi_clip.bounding_boxes) == 2', 'bbsoi_clip.bounding_boxes[0].y1 == 10', 'bbsoi_clip.bounding_boxes[0].x1 == 20', 'bbsoi_clip.bounding_boxes[0].y2 == 30', 'bbsoi_clip.bounding_boxes[0].x2 == 40', 'bbsoi_clip.bounding_boxes[1].y1 == 15', 'bbsoi_clip.bounding_boxes[1].x1 == 25', 'bbsoi_clip.bounding_boxes[1].y2 == 35', '50 - 2*eps < bbsoi_clip.bounding_boxes[1].x2 < 50', 'len(bbsoi_shifted.bounding_boxes) == 2', 'bbsoi_shifted.bounding_boxes[0].y1 == 10', 'bbsoi_shifted.bounding_boxes[0].x1 == 20 - 1', 'bbsoi_shifted.bounding_boxes[0].y2 == 30', 'bbsoi_shifted.bounding_boxes[0].x2 == 40 - 1', 'bbsoi_shifted.bounding_boxes[1].y1 == 15', 'bbsoi_shifted.bounding_boxes[1].x1 == 25 - 1', 'bbsoi_shifted.bounding_boxes[1].y2 == 35', 'bbsoi_shifted.bounding_boxes[1].x2 == 51 - 1', 'len(bbsoi.bounding_boxes) == 2', 'bbsoi_copy.bounding_boxes[0].y1 == 10', 'bbsoi_copy.bounding_boxes[0].x1 == 20', 'bbsoi_copy.bounding_boxes[0].y2 == 30', 'bbsoi_copy.bounding_boxes[0].x2 == 40', 'bbsoi_copy.bounding_boxes[1].y1 == 15', 'bbsoi_copy.bounding_boxes[1].x1 == 25', 'bbsoi_copy.bounding_boxes[1].y2 == 35', 'bbsoi_copy.bounding_boxes[1].x2 == 51', 'bbsoi_copy.bounding_boxes[0].y1 == 0', 'len(bbsoi.bounding_boxes) == 2', 'bbsoi_copy.bounding_boxes[0].y1 == 10', 'bbsoi_copy.bounding_boxes[0].x1 == 20', 'bbsoi_copy.bounding_boxes[0].y2 == 30', 'bbsoi_copy.bounding_boxes[0].x2 == 40', 'bbsoi_copy.bounding_boxes[1].y1 == 15', 'bbsoi_copy.bounding_boxes[1].x1 == 25', 'bbsoi_copy.bounding_boxes[1].y2 == 35', 'bbsoi_copy.bounding_boxes[1].x2 == 51', 'bbsoi_copy.bounding_boxes[0].y1 == 10', 'bbsoi.__repr__() == bbsoi.__str__() == expected']",[],[],[],[],[],[],[],[],[],[],[],[]
1553,aleju,kontakt@ajung.name,2019-07-14 20:37:58+02:00,a085d97213498f86b84b88606e8faa2528d2d06e,https://github.com/aleju/imgaug/commit/a085d97213498f86b84b88606e8faa2528d2d06e,Add PR id to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1554,aleju,kontakt@ajung.name,2019-07-16 21:23:54+02:00,9245a5fac1ffa7065a38d14ffad25849eee47e98,https://github.com/aleju/imgaug/commit/9245a5fac1ffa7065a38d14ffad25849eee47e98,Cleanup tests for batches.py,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)', 'observed.images_unaug is not images', 'observed.heatmaps_unaug is not heatmaps', 'observed.segmentation_maps_unaug is not segmentation_maps', 'observed.keypoints_unaug is not keypoints', 'observed.bounding_boxes_unaug is not bounding_boxes', 'observed.polygons_unaug is not polygons', 'observed.line_strings_unaug is not line_strings', 'observed.data is not data', 'observed.heatmaps_unaug[0] is not heatmaps[0]', 'observed.segmentation_maps_unaug[0] is not segmentation_maps[0]', 'observed.keypoints_unaug[0] is not keypoints[0]', 'observed.bounding_boxes_unaug[0] is not bounding_boxes[0]', 'observed.polygons_unaug[0] is not polygons[0]', 'observed.line_strings_unaug[0] is not line_strings[0]', 'observed.data[]', 'observed.images_unaug.shape == (1, 1, 1, 3)']",[],[],[],[],[],[],[],[],[],[],[],[],"['len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)', 'len(caught_warnings) == 2', 'in str(caught_warnings[-1].message)', 'len(caught_warnings) == 3', 'in str(caught_warnings[-1].message)', 'len(caught_warnings) == 4', 'in str(caught_warnings[-1].message)', 'len(caught_warnings) == 5', 'in str(caught_warnings[-1].message)', 'observed.images_unaug.shape == (1, 1, 3)']",[],[],[],[],[],[],[],[],[],[],[],[]
1555,aleju,kontakt@ajung.name,2019-07-17 21:44:33+02:00,f4f699b80960f5049c3c7b8a7eca395412d6efd0,https://github.com/aleju/imgaug/commit/f4f699b80960f5049c3c7b8a7eca395412d6efd0,Cleanup line string tests,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,138,0,0,0,0,0,0,0,0,0,0,0,0,161,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Raises', '(Exception) as context:'), ('Raises', '(Exception) as context:')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.isclose(ls.compute_distance(point), expected)', 'np.isclose(ls.compute_distance(point), expected)', 'np.isclose(ls.compute_distance(LineString(point)),', 'ls.contains(point) is expected', '(', '(', '_coords_eq(lss_clipped[0], ls)', '_coords_eq(lss_clipped[0], ls)', '_coords_eq(lss_clipped[0], [(0, 0), (1, 0)])', '_coords_eq(lss_clipped[0], ls)', '_coords_eq(lss_clipped[0], ls)', '_coords_eq(lss_clipped[0], [(0, 0), (1, 0), (2, 0)])', '_coords_eq(lss_clipped[1], [(2, 2), (1, 2), (0, 2)])', '_coords_eq(lss_clipped[0], [(0, 0), (1, 0)])', '_coords_eq(lss_clipped[1], [(1, 2), (0, 2)])', '_coords_eq(lss_clipped[0], ls)', '_coords_eq(lss_clipped[0], [(1, 0), (2, 0)])', '_coords_eq(lss_clipped[1], [(2, 2), (1, 2)])', '_coords_eq(lss_clipped[0], ls)', '_coords_eq(lss_clipped[0], [(1, 0), (2, 0)])', '_coords_eq(lss_clipped[1], [(2, 1), (1, 2)])', '_coords_eq(lss_clipped[0], ls)', '_coords_eq(lss_clipped[0], [(1, 0), (2, 0)])', '_coords_eq(lss_clipped[1], [(2, 1), (1, 1), (1, 2), (2, 2)])', '_coords_eq(lss_clipped[2], [(2, 3), (1, 3)])', 'len(lss_clipped) == 1', '_coords_eq(lss_clipped[0], [(0, y), (3, y)])', '_coords_eq(lss_clipped[0], [(0, y), (1, y)])', 'len(lss_clipped) == 0', 'len(lss_clipped) == 1', '_coords_eq(lss_clipped[0], [(0, y), (1, y)])', 'len(lss_clipped) == 1', '_coords_eq(lss_clipped[0], [(0, y), (3, y), (5, y)])', 'len(lss_clipped) == 1', '_coords_eq(lss_clipped[0], [(0, y), (3, y), (4, y)])', '_coords_eq(lss_clipped[0], [(0, y), (1, y)])', 'len(lss_clipped) == 0', 'len(lss_clipped) == 1', '_coords_eq(lss_clipped[0], [(0, y), (1, y)])', 'len(lss_clipped) == 1', '_coords_eq(lss_clipped[0], [(2, y), (5, y)])', '_coords_eq(lss_clipped[0], [(2, y), (4, y)])', 'len(lss_clipped) == 1', '_coords_eq(lss_clipped[0], [(1, y), (2, y), (5, y)])', 'len(lss_clipped) == 1', '_coords_eq(lss_clipped[0], [(1, y), (2, y), (4, y)])', 'len(lss_clipped) == 0', 'len(lss_clipped) == 1', '_coords_eq(lss_clipped[0], [(2, y), (5, y), (6, y)])', 'len(lss_clipped) == 1', '_coords_eq(lss_clipped[0], [(2, y), (4, y)])', 'len(lss_clipped) == 0', '_coords_eq(lss_clipped[0], [(0, y), (5, y)])', '_coords_eq(lss_clipped[0], [(0, y), (4, y)])', '_coords_eq(lss_clipped[0], [(0, 0), (5, 5)])', '_coords_eq(lss_clipped[0], [(0, 0), (4, 4)])', '_coords_eq(lss_clipped[0], ls)', '_coords_eq(lss_clipped[0], [(1, 0), (3, 0)])', '_coords_eq(lss_clipped[0], ls)', '_coords_eq(lss_clipped[0], [(1, 0), (4, 0), (5, 0)])', '_coords_eq(lss_clipped[0], [(1, 0), (4, 0)])', '_coords_eq(lss_clipped[0], [(1, 0), (2, 0)])', '_coords_eq(lss_clipped[0], [(0, 0), (5, 0)])', '_coords_eq(lss_clipped[0], [(0, 0), (5, 0)])', '_coords_eq(lss_clipped[0], [(0, 0), (4, 0)])', '_coords_eq(lss_clipped[0], ls)', 'ls.shift(top=1).coords_almost_equals(', 'ls.shift(right=1).coords_almost_equals(', 'ls.shift(bottom=1).coords_almost_equals(', 'ls.shift(left=1).coords_almost_equals(', 'ls.shift(top=-1).coords_almost_equals(', 'ls.shift(right=-1).coords_almost_equals(', 'ls.shift(bottom=-1).coords_almost_equals(', 'ls.shift(left=-1).coords_almost_equals(', '_drawing_allclose(arr[1, 0:5], 0.5)', '_drawing_allclose(arr[1:5, 5], 0.5)', '_drawing_allclose(arr[0, :], 0.0)', '_drawing_allclose(arr[2:, 0:5], 0.0)', '_drawing_allclose(arr, 0.0)', '_drawing_allclose(arr[1, 0], 0.5)', '_drawing_allclose(arr[1, 5], 0.5)', '_drawing_allclose(arr[5, 5], 0.5)', '_drawing_allclose(arr[0, :], 0.0)', '_drawing_allclose(arr[2:, 0:5], 0.0)', '_drawing_allclose(arr, 0.0)', '_drawing_allclose(arr[1, 0:5], 0.9)', '_drawing_allclose(arr[1, 0:5], 0.9)', '_drawing_allclose(arr[1, 0:5], 0.9)', '_drawing_allclose(arr[2:5, 5], 0.9)', '_drawing_allclose(arr[2:5, 5], 0.9)', '_drawing_allclose(arr[2:5, 5], 0.9)', '_drawing_allclose(arr[0, 0:2], 0.5)', '_drawing_allclose(arr[2, 0:2], 0.5)', '_drawing_allclose(arr[0, 4:6 + 1], 0.5)', '_drawing_allclose(arr[2, 4], 0.5)', '_drawing_allclose(arr[2, 6], 0.5)', '_drawing_allclose(arr[4, 4], 0.5)', '_drawing_allclose(arr[4, 6], 0.5)', '_drawing_allclose(arr[6, 4:6 + 1], 0.5)', '_drawing_allclose(arr[0, 3], 0.0)', '_drawing_allclose(arr[7:, :], 0.0)', 'in str(context.exception)', 'in str(context.exception)', 'mock_line.call_count == 1', 'mock_points.call_count == 1', 'mock_line.call_args_list[0][0][0].shape == (10, 10, 3)', 'mock_line.call_args_list[0][1][][0] == 4', 'mock_line.call_args_list[0][1][][1] == 5', 'mock_line.call_args_list[0][1][][2] == 6', 'np.isclose(mock_line.call_args_list[0][1][], 0.9)', 'mock_line.call_args_list[0][1][] == 3', 'mock_line.call_args_list[0][1][] is False', 'mock_line.call_args_list[0][1][] \\', 'mock_points.call_args_list[0][0][0] == 1  # mock_line result', 'mock_points.call_args_list[0][1][][0] == 7', 'mock_points.call_args_list[0][1][][1] == 8', 'mock_points.call_args_list[0][1][][2] == 9', 'np.isclose(mock_points.call_args_list[0][1][], 0.8)', 'mock_points.call_args_list[0][1][] == 5', 'mock_points.call_args_list[0][1][] \\', 'ls_concat.coords_almost_equals([', 'ls_concat.coords_almost_equals([])', 'ls_concat.coords_almost_equals([(0, 0)])', 'ls_concat.coords_almost_equals([(0, 0)])', 'ls_concat.coords_almost_equals([(0, 0)])', 'not ls.coords_almost_equals([])', 'not ls.almost_equals(ls_shifted)', 'observed is not ls', 'observed.coords is ls.coords', 'observed.label is ls.label', 'observed is not ls', 'observed.coords is not ls.coords', 'observed.label == ls.label', 'ls.__repr__() == ls.__str__()', 'observed == expected', 'lsoi.line_strings == []', 'lsoi.shape == (10, 10)', 'np.all([ls_a.coords_almost_equals(ls_b)']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.isclose(ls.compute_distance((0, 0)), 0)', 'np.isclose(ls.compute_distance((1, 0)), 0)', 'np.isclose(ls.compute_distance((0, 1)), 1)', 'np.isclose(ls.compute_distance((-0.5, -0.6)),', 'np.isclose(ls.compute_distance((0, 0)), 0)', 'np.isclose(ls.compute_distance((-0.5, -0.6)),', 'np.isclose(ls.compute_distance(LineString([(0, 0)])), 0)', 'np.isclose(ls.compute_distance(LineString([(0, 1)])), 1)', 'np.isclose(ls.compute_distance(LineString([(0, 0), (0, 1)])), 0)', 'np.isclose(ls.compute_distance(LineString([(-1, -1), (-1, 1)])), 1)', 'ls.contains(ia.Keypoint(x=0, y=0))', 'ls.contains(ia.Keypoint(x=1, y=0))', 'not ls.contains(ia.Keypoint(x=100, y=0))', 'ls.contains((0, 0))', 'ls.contains((1, 0))', 'ls.contains((2, 1))', 'ls.contains((0+1e-8, 0))', 'not ls.contains((0+1e-8, 0), max_distance=0)', 'not ls.contains((0-1, 0))', 'ls.contains((0-1, 0), max_distance=2)', '_eq(lss_clipped[0], ls)', '_eq(lss_clipped[0], ls)', '_eq(lss_clipped[0], [(0, 0), (1, 0)])', '_eq(lss_clipped[0], ls)', '_eq(lss_clipped[0], ls)', '_eq(lss_clipped[0], [(0, 0), (1, 0), (2, 0)])', '_eq(lss_clipped[1], [(2, 2), (1, 2), (0, 2)])', '_eq(lss_clipped[0], [(0, 0), (1, 0)])', '_eq(lss_clipped[1], [(1, 2), (0, 2)])', '_eq(lss_clipped[0], ls)', '_eq(lss_clipped[0], [(1, 0), (2, 0)])', '_eq(lss_clipped[1], [(2, 2), (1, 2)])', '_eq(lss_clipped[0], ls)', '_eq(lss_clipped[0], [(1, 0), (2, 0)])', '_eq(lss_clipped[1], [(2, 1), (1, 2)])', '_eq(lss_clipped[0], ls)', '_eq(lss_clipped[0], [(1, 0), (2, 0)])', '_eq(lss_clipped[1], [(2, 1), (1, 1), (1, 2), (2, 2)])', '_eq(lss_clipped[2], [(2, 3), (1, 3)])', 'len(lss_clipped) == 1', '_eq(lss_clipped[0], [(0, y), (3, y)])', 'len(lss_clipped) == 1', '_eq(lss_clipped[0], [(0, y), (1, y)])', 'len(lss_clipped) == 0', '_eq(lss_clipped[0], [(0, y), (1, y)])', 'len(lss_clipped) == 1', '_eq(lss_clipped[0], [(0, y), (3, y), (5, y)])', 'len(lss_clipped) == 1', '_eq(lss_clipped[0], [(0, y), (3, y), (4, y)])', 'len(lss_clipped) == 1', '_eq(lss_clipped[0], [(0, y), (1, y)])', 'len(lss_clipped) == 0', '_eq(lss_clipped[0], [(0, y), (1, y)])', 'len(lss_clipped) == 1', '_eq(lss_clipped[0], [(2, y), (5, y)])', '_eq(lss_clipped[0], [(2, y), (4, y)])', 'len(lss_clipped) == 1', '_eq(lss_clipped[0], [(1, y), (2, y), (5, y)])', 'len(lss_clipped) == 1', '_eq(lss_clipped[0], [(1, y), (2, y), (4, y)])', 'len(lss_clipped) == 0', 'len(lss_clipped) == 1', '_eq(lss_clipped[0], [(2, y), (5, y), (6, y)])', 'len(lss_clipped) == 1', '_eq(lss_clipped[0], [(2, y), (4, y)])', 'len(lss_clipped) == 0', '_eq(lss_clipped[0], [(0, y), (5, y)])', '_eq(lss_clipped[0], [(0, y), (4, y)])', '_eq(lss_clipped[0], [(0, 0), (5, 5)])', '_eq(lss_clipped[0], [(0, 0), (4, 4)])', '_eq(lss_clipped[0], ls)', '_eq(lss_clipped[0], [(1, 0), (3, 0)])', '_eq(lss_clipped[0], ls)', '_eq(lss_clipped[0], [(1, 0), (4, 0), (5, 0)])', '_eq(lss_clipped[0], [(1, 0), (4, 0)])', '_eq(lss_clipped[0], [(1, 0), (2, 0)])', '_eq(lss_clipped[0], [(0, 0), (5, 0)])', '_eq(lss_clipped[0], [(0, 0), (5, 0)])', '_eq(lss_clipped[0], [(0, 0), (4, 0)])', '_eq(lss_clipped[0], ls)', 'ls.shift(top=1).coords_almost_equals([(0, 1), (1, 1), (2, 2)])', 'ls.shift(right=1).coords_almost_equals([(-1, 0), (0, 0), (1, 1)])', 'ls.shift(bottom=1).coords_almost_equals([(0, -1), (1, -1), (2, 0)])', 'ls.shift(left=1).coords_almost_equals([(1, 0), (2, 0), (3, 1)])', 'ls.shift(top=-1).coords_almost_equals([(0, -1), (1, -1), (2, 0)])', 'ls.shift(right=-1).coords_almost_equals([(1, 0), (2, 0), (3, 1)])', 'ls.shift(bottom=-1).coords_almost_equals([(0, 1), (1, 1), (2, 2)])', 'ls.shift(left=-1).coords_almost_equals([(-1, 0), (0, 0), (1, 1)])', '_allclose(arr[1, 0:5], 0.5)', '_allclose(arr[1:5, 5], 0.5)', '_allclose(arr[0, :], 0.0)', '_allclose(arr[2:, 0:5], 0.0)', '_allclose(arr, 0.0)', '_allclose(arr[1, 0], 0.5)', '_allclose(arr[1, 5], 0.5)', '_allclose(arr[5, 5], 0.5)', '_allclose(arr[0, :], 0.0)', '_allclose(arr[2:, 0:5], 0.0)', '_allclose(arr, 0.0)', '_allclose(arr[1, 0:5], 0.9)', '_allclose(arr[1, 0:5], 0.9)', '_allclose(arr[1, 0:5], 0.9)', '_allclose(arr[2:5, 5], 0.9)', '_allclose(arr[2:5, 5], 0.9)', '_allclose(arr[2:5, 5], 0.9)', '_allclose(arr[0, 0:2], 0.5)', '_allclose(arr[2, 0:2], 0.5)', '_allclose(arr[0, 4:6+1], 0.5)', '_allclose(arr[2, 4], 0.5)', '_allclose(arr[2, 6], 0.5)', '_allclose(arr[4, 4], 0.5)', '_allclose(arr[4, 6], 0.5)', '_allclose(arr[6, 4:6+1], 0.5)', '_allclose(arr[0, 3], 0.0)', '_allclose(arr[7:, :], 0.0)', 'in str(exc)', 'got_exception', 'in str(exc)', 'not got_exception', 'in str(exc)', 'got_exception', 'mock_line.call_count == 1', 'mock_points.call_count == 1', 'mock_line.call_args_list[0][0][0].shape == (10, 10, 3)', 'mock_line.call_args_list[0][1][][0] == 4', 'mock_line.call_args_list[0][1][][1] == 5', 'mock_line.call_args_list[0][1][][2] == 6', 'np.isclose(mock_line.call_args_list[0][1][], 0.9)', 'mock_line.call_args_list[0][1][] == 3', 'mock_line.call_args_list[0][1][] is False', 'mock_line.call_args_list[0][1][] \\', 'mock_points.call_args_list[0][0][0] == 1  # mock_line result', 'mock_points.call_args_list[0][1][][0] == 7', 'mock_points.call_args_list[0][1][][1] == 8', 'mock_points.call_args_list[0][1][][2] == 9', 'np.isclose(mock_points.call_args_list[0][1][], 0.8)', 'mock_points.call_args_list[0][1][] == 5', 'mock_points.call_args_list[0][1][] \\', 'ls.concatenate(ls).coords_almost_equals([', 'ls.concatenate(ls).coords_almost_equals([])', 'ls.concatenate(LineString([(0, 0)])).coords_almost_equals([(0, 0)])', 'ls.concatenate(LineString([])).coords_almost_equals([(0, 0)])', 'ls.concatenate([(0, 0)]).coords_almost_equals([(0, 0)])', 'not ls.coords_almost_equals([])', 'not ls.shift(top=1).almost_equals(ls)', 'observed is not ls', 'ls.coords is ls.coords', 'observed.coords is ls.coords', 'observed.label is ls.label', 'observed is not ls', 'observed.coords is not ls.coords', 'observed.label == ls.label', 'ls.__repr__() == ls.__str__()', 'observed == expected', 'observed == expected', 'observed == expected', 'observed == expected', 'observed == expected', 'lsoi.line_strings == []', 'lsoi.shape == (10, 10)', 'all([ls_a.coords_almost_equals(ls_b)']",[],[],[],[],[],[],[],[],[],[],[],[]
1556,aleju,kontakt@ajung.name,2019-07-19 09:03:59+02:00,675fa98c5938bec4be7daffdbbceb9eaa664903f,https://github.com/aleju/imgaug/commit/675fa98c5938bec4be7daffdbbceb9eaa664903f,Add dtype support docstrings to pooling augmenters,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1557,aleju,kontakt@ajung.name,2019-07-19 09:27:05+02:00,854eb3b37dd6c2232096d0d81fe401538f8c0129,https://github.com/aleju/imgaug/commit/854eb3b37dd6c2232096d0d81fe401538f8c0129,Fix unittest assert always being true,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['observed.name == expected'],[],[],[],[],[],[],[],[],[],[],[],[],['('],[],[],[],[],[],[],[],[],[],[],[],[]
1558,aleju,kontakt@ajung.name,2019-07-19 18:27:59+02:00,f069b9500be1465ac9b4f5e9235a8a24c0e99a80,https://github.com/aleju/imgaug/commit/f069b9500be1465ac9b4f5e9235a8a24c0e99a80,Add imgaug.imgaug.np_is_scalar(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1559,aleju,kontakt@ajung.name,2019-07-19 18:28:39+02:00,c8ebacc75ae08031af5d6041c86618a3c157b4d3,https://github.com/aleju/imgaug/commit/c8ebacc75ae08031af5d6041c86618a3c157b4d3,Add pytest-subtests as tests requirement,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1560,aleju,kontakt@ajung.name,2019-07-19 20:56:34+02:00,2a1bd4c93a998d16516d82893401b346d66a95e9,https://github.com/aleju/imgaug/commit/2a1bd4c93a998d16516d82893401b346d66a95e9,Rework dtypes module and add tests,5,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],12,13,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,177,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,"['class Test_normalize_dtypes(unittest.TestCase):', 'class Test_normalize_dtype(unittest.TestCase):', 'class Test_change_dtype_(unittest.TestCase):', 'class Test_change_dtypes_(unittest.TestCase):', 'class Test_copy_dtypes_for_restore(unittest.TestCase):', 'class Test_increase_itemsize_of_dtype(unittest.TestCase):', 'class Test_get_minimal_dtype(unittest.TestCase):', 'class Test_promote_array_dtypes_(unittest.TestCase):', 'class Test_increase_array_resolutions_(unittest.TestCase):', 'class Test_get_value_range_of_dtype(unittest.TestCase):', 'class Test_clip_to_dtype_value_range(unittest.TestCase):', 'class Test_gate_dtypes(unittest.TestCase):']","[('Raises', '(AssertionError) as context:'), ('Raises', '(Exception) as context:'), ('Raises', '(TypeError) as context:'), ('Raises', '(AssertionError) as context:'), ('Raises', '(AssertionError) as context:'), ('Raises', '(AssertionError) as context:'), ('Raises', '(AssertionError) as context:'), ('Raises', '(AssertionError) as context:'), ('Raises', '(ValueError) as context:'), ('Raises', '(ValueError) as context:'), ('Raises', '(ValueError) as context:'), ('Raises', '(ValueError) as context:'), ('Raises', '(ValueError) as context:')]",[],[],[],[],[],[],[],[],[],['class Test_copy_dtpyes_for_restore(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],"['dtypes == []', 'mock_nd.call_count == 1', 'mock_nd.call_args_list[0][0][0] == ', 'isinstance(dtypes, list)', 'len(dtypes) == 1', 'isinstance(dtypes[0], np.dtype)', 'dtypes[0].name == ', 'isinstance(dtypes, list)', 'len(dtypes) == 0', 'dtypes == []', 'mock_nd.call_count == 2', 'mock_nd.call_args_list[0][0][0] == ', 'mock_nd.call_args_list[1][0][0] == ', 'isinstance(dtype, np.dtype)', 'dtype.name == ', 'isinstance(dtype, np.dtype)', 'dtype.name == ', 'isinstance(dtype, np.dtype)', 'dtype.name == ', 'isinstance(dtype, np.dtype)', 'dtype.name == ', 'isinstance(dtype, np.dtype)', 'dtype.name == ', 'isinstance(dtype, np.dtype)', 'dtype.name == ', 'observed.dtype.name == ', 'np.array_equal(observed, expected)', 'observed.dtype.name == ', 'np.array_equal(observed, expected)', 'observed is arr', 'observed is arr', 'mock_round.call_count == 0', 'observed.dtype.name == ', 'np.array_equal(observed, expected)', 'mock_round.call_count == 0', 'observed.shape == (1,)', 'observed.dtype.name == ', 'np.all(observed == 1)', 'observed.shape == (1,)', 'observed.dtype.name == ', 'np.all(observed == -128)', 'observed.shape == (1,)', 'observed.dtype.name == ', 'np.all(observed == 1)', 'observed.shape == (1,)', 'observed.dtype.name == ', 'np.all(observed == 1)', 'observed.shape == (1,)', 'observed.dtype.name == ', 'np.all(observed == 1)', 'observed.dtype.name == ', 'np.array_equal(observed, expected)', 'observed.dtype.name == ', 'np.array_equal(observed, expected)', 'observed.dtype.name == ', 'np.array_equal(observed, expected)', '(', 'observed.dtype.name == ', 'np.array_equal(observed, expected)', 'observed.dtype.name == ', 'observed.shape == (0, 5)', 'len(observed) == 0', 'len(observed) == 2', 'observed[0].dtype.name == ', 'observed[1].dtype.name == ', 'np.array_equal(observed[0], expected[0])', 'np.array_equal(observed[1], expected[1])', 'len(observed) == 2', 'observed[0].dtype.name == ', 'observed[1].dtype.name == ', 'np.array_equal(observed[0], expected[0])', 'np.array_equal(observed[1], expected[1])', 'in str(context.exception)', 'observed.dtype.name == ', 'np.allclose(observed, expected)', 'observed.dtype.name == ', 'np.allclose(observed, expected)', 'observed.dtype.name == ', 'np.allclose(observed, expected)', 'observed.dtype.name == ', 'np.allclose(observed, expected)', 'np.all([', 'isinstance(dtypes_copy, np.dtype)', 'dtypes_copy.name == dt', 'isinstance(dtypes_copy, list)', 'np.all([dtype_i.name == dt for dtype_i in dtypes_copy])', 'dt_increased.name == dt.name', 'dt_increased.name == expected.name', 'dt_increased.name == expected.name', '(', 'promoted_dt.name == np.dtype(dt_func).name', 'promoted_dt.name == dt.name', 'promoted_dt.name == dt.name', 'promoted_dt.name == expected.name', 'mock_iibf.call_count == 1', 'mock_gmd.call_count == 1', 'mock_cd.call_count == 1', 'mock_gmd.call_args_list[0][0][0][0].name == ', 'mock_gmd.call_args_list[0][1][] == 1', 'mock_cd.call_args_list[0][0][0] is arrays', 'observed == ', 'mock_gmd.call_count == 1', 'mock_cd.call_count == 1', 'mock_gmd.call_args_list[0][0][0][0] == ', 'mock_gmd.call_args_list[0][1][] == 1', 'mock_cd.call_args_list[0][0][0] is arrays', 'observed == ', 'mock_gmd.call_count == 1', 'mock_cd.call_count == 1', 'mock_gmd.call_args_list[0][0][0][0].name == ', 'mock_gmd.call_args_list[0][1][] == 2', 'mock_cd.call_args_list[0][0][0] is arrays', 'observed == ', 'observed.dtype.name == ', 'observed.dtype.name == ', 'observed.dtype.name == ', 'observed.dtype.name == ', 'observed[0].dtype.name == ', 'observed[0].dtype.name == ', 'observed[1].dtype.name == ', 'observed[0].dtype.name == ', 'observed[1].dtype.name == ', 'observed[0].dtype.name == ', 'observed[1].dtype.name == ', 'observed[2].dtype.name == ', 'observed.dtype.name == ', 'observed.dtype.name == ', 'observed[0].dtype.name == ', 'observed[0].dtype.name == ', 'observed[1].dtype.name == ', 'minv == 0', 'center is None', 'maxv == 1', '(', 'minv == 0', 'np.isclose(center, 0.5*255)', 'maxv == 255', 'minv == 0', 'np.isclose(center, 0.5*65535)', 'maxv == 65535', 'minv == -128', 'np.isclose(center, -0.5)', 'maxv == 127', 'minv == -32768', 'np.isclose(center, -0.5)', 'maxv == 32767', 'minv < 100.0', 'np.isclose(center, 0.0)', 'maxv > 100.0', 'np.array_equal(arr_clipped, arr)', 'arr_clipped.dtype.name == ', 'np.array_equal(arr_clipped, arr)', 'arr_clipped.dtype.name == ', 'np.array_equal(arr_clipped, arr)', 'arr_clipped.dtype.name == ', 'np.array_equal(arr_clipped, arr)', 'arr_clipped.dtype.name == ', 'np.array_equal(arr_clipped, expected)', 'arr_clipped.dtype.name == ', 'np.array_equal(arr_clipped, arr)', 'arr_clipped.dtype.name == ', 'np.array_equal(arr_clipped, arr)', 'arr_clipped.dtype.name == ', '(', '(', '(', '(', '(', 'in str(context.exception)', 'in str(context.exception)', 'in str(context.exception)', 'in str(context.exception)', 'in str(context.exception)', 'len(caught_warnings) == 1', '(', 'len(caught_warnings) == 1', '(']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.all([', 'isinstance(dtypes_copy, np.dtype)', 'dtypes_copy.name == np.dtype(dt).name', 'isinstance(dtypes_copy, list)', 'np.all([', 'image_result.dtype.type == np.int32', 'image_result.dtype.type == np.int32', 'images.dtype.type == np.uint8', 'images_result.dtype.type == np.int32', 'all([image.dtype.type == np.uint8 for image in images])', 'all([image_result.dtype.type == np.int32 for image_result in images_result])', 'images.dtype.type == np.uint8', 'images_restored.dtype.type == np.int32', 'all([image.dtype.type == np.uint8 for image in images])', 'all([image_restored.dtype.type == np.int32 for image_restored in images_restored])']",[],[],[],[],[],[],[],[],[],[],[],[]
1561,aleju,kontakt@ajung.name,2019-07-19 20:57:29+02:00,031d358316332bd3c7562a82447d1f0a058cc278,https://github.com/aleju/imgaug/commit/031d358316332bd3c7562a82447d1f0a058cc278,Update changelog wrt dtype changes,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1562,aleju,kontakt@ajung.name,2019-07-19 21:00:17+02:00,d981668f1800577ef49a7a9767aa15e76ee554fb,https://github.com/aleju/imgaug/commit/d981668f1800577ef49a7a9767aa15e76ee554fb,Add PR number to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1563,aleju,kontakt@ajung.name,2019-07-20 11:45:21+02:00,0c2817526aee44f57ab3e8a341c649158a7270a8,https://github.com/aleju/imgaug/commit/0c2817526aee44f57ab3e8a341c649158a7270a8,Add todo,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1564,aleju,kontakt@ajung.name,2019-07-20 11:46:12+02:00,171887070562bedbcb8d554c25b547599230ef94,https://github.com/aleju/imgaug/commit/171887070562bedbcb8d554c25b547599230ef94,Add imgaug.warn(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1565,aleju,kontakt@ajung.name,2019-07-20 11:49:50+02:00,8a8cc2a0d9b271f2b2001dd30fb6016359e7ab4c,https://github.com/aleju/imgaug/commit/8a8cc2a0d9b271f2b2001dd30fb6016359e7ab4c,Add warning to Pool if cpu_count() not found; rework comments; add todo,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1566,aleju,kontakt@ajung.name,2019-07-20 11:50:04+02:00,6472ec2cb18f896d6d5855184fb12012c5e8a69e,https://github.com/aleju/imgaug/commit/6472ec2cb18f896d6d5855184fb12012c5e8a69e,Add tests for multicore,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class Test_Pool_initialize_worker(unittest.TestCase):', 'class Test_Pool_worker(unittest.TestCase):', 'class Test_Pool_starworker(unittest.TestCase):']",[],[],[],"['def tearDown(self):', 'def tearDown(self):', 'def tearDown(self):']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['mock_cpu_count.call_count == 1', 'mock_pool.call_count == 1', 'mock_pool.call_args_list[0][0][0] is None', 'len(caught_warnings) == 1', '(', 'mock_pool.join.call_count == 1', 'mock_ia_pool._WORKER_SEED_START == 1', 'mock_ia_pool._WORKER_AUGSEQ is augseq', 'augseq.localize_random_state_.call_count == 1', 'mock_time_ns.call_count == 1', 'mock_ia_seed.call_count == 1', 'augseq.reseed.call_count == 1', 'seed_global != seed_local', 'mock_time.call_count == 1', 'mock_ia_seed.call_count == 1', 'augseq.reseed.call_count == 1', 'seed_global != seed_local', '(', 'mock_ia_seed.call_count == 2', 'augseq.reseed.call_count == 2', 'result == ', 'augseq.augment_batch.call_count == 1', 'result == ', 'augseq.augment_batch.call_count == 1', 'result == ']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1567,aleju,kontakt@ajung.name,2019-07-20 12:19:37+02:00,4f60f9d3874adc7553004b381dae7c9054b37a6c,https://github.com/aleju/imgaug/commit/4f60f9d3874adc7553004b381dae7c9054b37a6c,Improve code style of multicore.py,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1568,aleju,kontakt@ajung.name,2019-07-20 12:32:56+02:00,161c13b89e8a1a85008f4ad03db563a4c6d9b494,https://github.com/aleju/imgaug/commit/161c13b89e8a1a85008f4ad03db563a4c6d9b494,Improve error messages in multicore.py,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1569,aleju,kontakt@ajung.name,2019-07-20 12:33:33+02:00,3f69de9459570b54b1d0e66118783ce74e179ccc,https://github.com/aleju/imgaug/commit/3f69de9459570b54b1d0e66118783ce74e179ccc,Add test for Pool.__init__() seed arg out of bounds,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Raises', '(AssertionError) as context:')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['in str(context.exception)'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1570,aleju,kontakt@ajung.name,2019-07-20 12:34:57+02:00,6027fc8c572896ac9f74c886c447a39c7f48eb22,https://github.com/aleju/imgaug/commit/6027fc8c572896ac9f74c886c447a39c7f48eb22,Add multicore changes to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1571,aleju,kontakt@ajung.name,2019-07-20 12:41:50+02:00,49cc853f55a4f3838666e0639b9c327255a101cf,https://github.com/aleju/imgaug/commit/49cc853f55a4f3838666e0639b9c327255a101cf,Add PR numbers to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1572,aleju,kontakt@ajung.name,2019-07-20 12:43:25+02:00,5c85d60e8644c6dd08efc8d104ed470dcad95e67,https://github.com/aleju/imgaug/commit/5c85d60e8644c6dd08efc8d104ed470dcad95e67,Switch methods to classmethods to fix pylint warnings,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1573,aleju,kontakt@ajung.name,2019-07-20 14:33:11+02:00,11a132e46e1da6bb768680b8b1b4ab0751136ef4,https://github.com/aleju/imgaug/commit/11a132e46e1da6bb768680b8b1b4ab0751136ef4,Fix test failing in python <3.7,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1574,aleju,kontakt@ajung.name,2019-07-20 14:51:49+02:00,baea2392e345914ca0469080b316c14cbbd326d4,https://github.com/aleju/imgaug/commit/baea2392e345914ca0469080b316c14cbbd326d4,Add tests for old overlay module,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],5,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class Test_blend_alpha(unittest.TestCase):', 'class TestAlpha(unittest.TestCase):', 'class TestAlphaElementwise(unittest.TestCase):', 'class TestSimplexNoiseAlpha(unittest.TestCase):', 'class TestFrequencyNoiseAlpha(unittest.TestCase):']",[],[],[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['len(caught_warnings) == 1', '(', 'len(caught_warnings) == 1', '(', 'len(caught_warnings) == 1', '(', 'len(caught_warnings) == 1', '(', 'len(caught_warnings) == 1', '(']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1575,aleju,kontakt@ajung.name,2019-07-20 16:48:08+02:00,7eeff4ce708410fd526b111f9fd4221b94887344,https://github.com/aleju/imgaug/commit/7eeff4ce708410fd526b111f9fd4221b94887344,Add imgaug.min_pool(),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.min([0, 1, 4, 5]))', 'arr_pooled[0, 1] == int(np.min([2, 3, 6, 7]))', 'arr_pooled[1, 0] == int(np.min([8, 9, 12, 13]))', 'arr_pooled[1, 1] == int(np.min([10, 11, 14, 15]))']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1576,aleju,kontakt@ajung.name,2019-07-20 16:49:11+02:00,d7661d8cdc7340a123713fbf90b0e00d9d75b223,https://github.com/aleju/imgaug/commit/d7661d8cdc7340a123713fbf90b0e00d9d75b223,Refactor MinPooling to use min_pool(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1577,aleju,kontakt@ajung.name,2019-07-20 17:00:10+02:00,b4de28425e87cfaf669f4cf49a8fb0e5ec08d3a4,https://github.com/aleju/imgaug/commit/b4de28425e87cfaf669f4cf49a8fb0e5ec08d3a4,Add imgaug.median_pool(),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.median([0, 1, 4, 5]))', 'arr_pooled[0, 1] == int(np.median([2, 3, 6, 7]))', 'arr_pooled[1, 0] == int(np.median([8, 9, 12, 13]))', 'arr_pooled[1, 1] == int(np.median([10, 11, 14, 15]))']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1578,aleju,kontakt@ajung.name,2019-07-20 17:02:09+02:00,c2ef2eece9b05d9dbf6bf61da486306d738a8d98,https://github.com/aleju/imgaug/commit/c2ef2eece9b05d9dbf6bf61da486306d738a8d98,Refactor MedianPooling to use median_pool(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1579,aleju,kontakt@ajung.name,2019-07-20 20:37:10+02:00,dbbecf47b35f8661a8d9190a33ba0a3a04afeb14,https://github.com/aleju/imgaug/commit/dbbecf47b35f8661a8d9190a33ba0a3a04afeb14,Add imgaug.compute_paddings_to_reach_multiples_of(),3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class Test_compute_paddings_to_reach_multiples_of(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['paddings == (1, 0, 1, 0)', 'paddings == (0, 1, 0, 1)', 'paddings == (0, 0, 0, 0)', 'paddings == (0, 1, 0, 0)', 'paddings == (0, 0, 1, 0)', 'paddings == (0, 1, 0, 0)', 'paddings == (0, 0, 1, 0)', 'paddings == expected', 'paddings == expected']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1580,aleju,kontakt@ajung.name,2019-07-20 20:38:36+02:00,21f3c1e688de0b3239b6ca93ea578a652dd723b0,https://github.com/aleju/imgaug/commit/21f3c1e688de0b3239b6ca93ea578a652dd723b0,Add imgaug.pad_to_multiples_of(),3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class Test_pad_to_multiples_of(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['arr_padded == ', 'arr_padded == ', 'paddings == (1, 2, 3, 4)', 'arr_padded.shape == (7, 11)', 'np.sum(arr_padded) == 1*base_area + 2*new_area', 'arr_padded.shape == (7, 11, nb_channels)', 'np.sum(arr_padded) == 1*base_area + 2*new_area']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1581,aleju,kontakt@ajung.name,2019-07-20 20:39:26+02:00,ed57dd83683a9572ec35a51ae0a323f491a27177,https://github.com/aleju/imgaug/commit/ed57dd83683a9572ec35a51ae0a323f491a27177,Improve comments & codestyle of pad functions,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1582,aleju,kontakt@ajung.name,2019-07-20 21:40:40+02:00,6ef49339a4ffe8279aade7e0fa7349c87747e80b,https://github.com/aleju/imgaug/commit/6ef49339a4ffe8279aade7e0fa7349c87747e80b,Change imgaug.pool() to use imgaug.pad(),5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.average([0, 1, 4, 5]))', 'arr_pooled[0, 1] == int(np.average([2, 2, 6, 6]))', 'arr_pooled[1, 0] == int(np.average([8, 9, 8, 9]))', 'arr_pooled[1, 1] == int(np.average([10, 10, 10, 10]))', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'np.isclose(arr_pooled[0, 0], np.average([0, 1, 4, 5]))', 'np.isclose(arr_pooled[0, 1], np.average([2, 2, 6, 6]))', 'np.isclose(arr_pooled[1, 0], np.average([8, 9, 8, 9]))', 'np.isclose(arr_pooled[1, 1], np.average([10, 10, 10, 10]))']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1583,aleju,kontakt@ajung.name,2019-07-21 09:41:36+02:00,302b05d2ec015e9805fe16c4215965dde03c6654,https://github.com/aleju/imgaug/commit/302b05d2ec015e9805fe16c4215965dde03c6654,Add pad_mode to avg/min/max/median pooling,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1584,aleju,kontakt@ajung.name,2019-07-21 09:50:20+02:00,479203412d14d172661a5ed5acd9d365070f4b83,https://github.com/aleju/imgaug/commit/479203412d14d172661a5ed5acd9d365070f4b83,Change avg_pool default pad_mode to reflect,5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1585,aleju,kontakt@ajung.name,2019-07-21 09:54:06+02:00,2f76fb179b706b7b293cad1843dbe529ff0d2d5c,https://github.com/aleju/imgaug/commit/2f76fb179b706b7b293cad1843dbe529ff0d2d5c,Change max_pool default pad_mode to edge,4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1586,aleju,kontakt@ajung.name,2019-07-21 09:57:20+02:00,e4a5159c0c82424bdfbe50f031f1fd5166c5c8d3,https://github.com/aleju/imgaug/commit/e4a5159c0c82424bdfbe50f031f1fd5166c5c8d3,Change min_pool default pad_mode to edge,4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1587,aleju,kontakt@ajung.name,2019-07-21 10:00:33+02:00,e7d11353a1764bf37750b36681ea26928991c0d4,https://github.com/aleju/imgaug/commit/e7d11353a1764bf37750b36681ea26928991c0d4,Change median_pool default pad_mode to reflect,4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1588,aleju,kontakt@ajung.name,2019-07-21 10:04:16+02:00,18f725473ef3a88fd2840cd10cd8d46d8ead2a49,https://github.com/aleju/imgaug/commit/18f725473ef3a88fd2840cd10cd8d46d8ead2a49,Improve docstrings and code style of pool funcs,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1589,Christoph Reinders,creinders@outlook.de,2019-07-22 11:12:15+02:00,8d69b2750f55cb7049a8f4d6f4343b13015f5e25,https://github.com/aleju/imgaug/commit/8d69b2750f55cb7049a8f4d6f4343b13015f5e25,"Rename Resize arguments

short to shorter-side and long to longer-side",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1590,aleju,kontakt@ajung.name,2019-07-06 16:00:44+02:00,5efb312453ca5340ee30e702b2281586734dafb9,https://github.com/aleju/imgaug/commit/5efb312453ca5340ee30e702b2281586734dafb9,Add KMeansColorQuantization and quantize_colors_kmeans(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1591,aleju,kontakt@ajung.name,2019-07-06 16:01:12+02:00,9c1a95dd27c250ac02707a16184be99d12d8bc66,https://github.com/aleju/imgaug/commit/9c1a95dd27c250ac02707a16184be99d12d8bc66,Add tests for KMeansColorQuantization and quantize_colors_kmeans(),1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestKMeansColorQuantization(unittest.TestCase):', 'class Test_quantize_colors_kmeans(unittest.TestCase):']",[],"['def setUp(self):', 'def setUp(self):']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug.n_colors, iap.DiscreteUniform)', 'aug.n_colors.a.value == 2', 'aug.n_colors.b.value == 16', 'aug.from_colorspace == iaa.ChangeColorspace.RGB', 'isinstance(aug.to_colorspace, list)', 'aug.to_colorspace == [iaa.ChangeColorspace.RGB,', 'aug.max_size == 128', 'aug.interpolation == ', 'isinstance(aug.n_colors, iap.DiscreteUniform)', 'aug.n_colors.a.value == 5', 'aug.n_colors.b.value == 8', 'aug.from_colorspace == iaa.ChangeColorspace.BGR', 'isinstance(aug.to_colorspace, list)', 'aug.to_colorspace == [iaa.ChangeColorspace.HSV,', 'aug.max_size is None', 'aug.interpolation == ', 'mock_quantize_func.call_args_list[0][0][1] == 5', 'all([2 <= n_colors_i <= 1000 for n_colors_i in n_colors])', 'len(set(n_colors)) > 1', 'np.array_equal(mock_quantize_func.call_args_list[0][0][0],', '(', '(', 'image_aug.shape == image.shape', 'mock_imresize.call_count == 0', 'mock_imresize.call_count == 2', 'mock_imresize.call_args_list[0][0][1] == (100, 50)', 'mock_imresize.call_args_list[1][0][1] == image.shape[0:2]', 'image_aug.shape == image.shape', 'mock_imresize.call_count == 0', 'mock_imresize.call_args_list[0][0][1] == (100, 50)', 'mock_imresize.call_args_list[0][1][', 'mock_imresize.call_args_list[1][0][1] == image.shape[0:2]', 'mock_imresize.call_args_list[1][1][', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'isinstance(params[0], iap.DiscreteUniform)', 'params[0].a.value == 5', 'params[0].b.value == 8', 'params[1] == iaa.ChangeColorspace.BGR', 'isinstance(params[2], list)', 'params[2] == [iaa.ChangeColorspace.HSV,', 'params[3] is None', 'params[4] == ', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'in str(exc)', 'got_exception', 'np.array_equal(image_quantized, images_quantized[0])']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1592,aleju,kontakt@ajung.name,2019-07-06 16:03:55+02:00,fc22674f512b0d2aff7b7dca857d0e60f5010e81,https://github.com/aleju/imgaug/commit/fc22674f512b0d2aff7b7dca857d0e60f5010e81,Fix unittest breaking in 2.7 on 'assert all(...)',7,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,86,0,0,0,0,0,0,0,0,0,0,0,0,86,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.all([', 'np.all(found)', 'np.all(found)', 'np.all(found)', 'np.all(found)', 'np.all([v > 0 for v in nb_seen.values()])', 'np.all(seen)', 'np.all(seen)', 'np.all(seen)', 'np.all(seen.values())', 'np.all(seen.values())', 'np.all([images_clipped[i][0, 0] == 15 for i in sm.xrange(len(images))])', 'np.all([images_clipped[i][0, 1] == 20 for i in sm.xrange(len(images))])', 'np.all([images_clipped[i][0, 2] == 25 for i in sm.xrange(len(images))])', 'np.all([images_clipped[i][0, 0] == 15 for i in sm.xrange(len(images))])', 'np.all([images_clipped[i][0, 1] == 20 for i in sm.xrange(len(images))])', 'np.all([images_clipped[i][0, 2] == 25 for i in sm.xrange(len(images))])', 'np.all([isinstance(kpsoi, ia.KeypointsOnImage) for kpsoi in kpsois]) # assert original list not changed', 'np.all([image.ndim == 3 and 48 <= image.shape[0] <= 62 and 48 <= image.shape[1] <= 62 and image.shape[2] == 3 for image in observed])', 'np.all([image.ndim == 3 and 48 <= image.shape[0] <= 62 and 48 <= image.shape[1] <= 62  and image.shape[2] == 1 for image in observed])', 'np.all([image.ndim == 2 and 48 <= image.shape[0] <= 62 and 48 <= image.shape[1] <= 62 for image in observed])', 'np.all(seen)', 'np.all([obs.shape == (3, 3, 3) for obs in [observed0, observed1, observed2, observed3]])', 'np.all([0 - 1e-6 < obs.min_value < 0 + 1e-6 for obs in [observed0, observed1, observed2, observed3]])', 'np.all([1 - 1e-6 < obs.max_value < 1 + 1e-6 for obs in [observed0, observed1, observed2, observed3]])', 'np.all(seen)', 'np.all(seen)', 'np.all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'np.all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'np.all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'np.all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'np.all([img.shape in [(8, 8, 3)] for img in observed])', 'np.all([img.shape in [(8, 8, 3)] for img in observed])', 'np.all([img.shape in [(8, 8, 3)] for img in observed])', 'np.all([img.shape in [(8, 8, 3)] for img in observed])', 'np.all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'np.all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'np.all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'np.all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'np.all([16 <= img.shape[0] <= 30 and img.shape[1:] == (32, 3) for img in observed])', 'np.all([16 <= img.shape[0] <= 30 and img.shape[1:] == (32, 3) for img in observed])', 'np.all([16 <= img.shape[0] <= 30 and img.shape[1:] == (32, 3) for img in observed])', 'np.all([16 <= img.shape[0] <= 30 and img.shape[1:] == (32, 3) for img in observed])', 'np.all([img.shape in [(8, 8, 3)] for img in observed])', 'np.all([img.shape in [(8, 8, 3)] for img in observed])', 'np.all([img.shape in [(8, 8, 3)] for img in observed])', 'np.all([img.shape in [(8, 8, 3)] for img in observed])', 'np.all([img.shape in [(8, 8, 3)] for img in observed])', 'np.all([img.shape in [(8, 8, 3)] for img in observed])', 'np.all([img.shape in [(8, 8, 3)] for img in observed])', 'np.all([img.shape in [(8, 8, 3)] for img in observed])', 'np.all(seen)', 'np.all(seen)', 'np.all(seen)', 'np.all(seen)', 'np.all(seen)', 'np.all(seen)', 'np.all(seen)', 'np.all(seen)', 'np.all(seen.values())', 'np.all(seen2d)', 'np.all(seen3d)', 'np.all(seen2d)', 'np.all(seen3d)', 'np.all(seen2d)', 'np.all(seen3d)', 'np.all(seen2d)', 'np.all(seen3d)', 'np.all(seen2d)', 'np.all(seen3d)', 'np.all(seen2d)', 'np.all(seen3d)', 'np.all(seen2d)', 'np.all(seen3d)', 'np.all(seen2d)', 'np.all(seen3d)', 'np.all([100 - 50 < v < 100 + 50 for v in seen])', 'np.all([v in aug.pad_mode.a for v in expected])', 'np.all([v in aug.pad_mode.a for v in expected])', 'np.all([100 - 50 < v < 100 + 50 for v in seen])', 'np.all([v in aug.pad_cval.a for v in expected])', 'np.all([100 - 50 < v < 100 + 50 for v in seen])', 'np.all([v > 30 for v in seen])', 'np.all([v > 30 for v in seen])', 'np.all([v > 30 for v in seen])', 'np.all([v > 30 for v in seen])']",[],[],[],[],[],[],[],[],[],[],[],[],"['all([', 'all(found)', 'all(found)', 'all(found)', 'all(found)', 'all([v > 0 for v in nb_seen.values()])', 'all(seen)', 'all(seen)', 'all(seen)', 'all(seen.values())', 'all(seen.values())', 'all([images_clipped[i][0, 0] == 15 for i in sm.xrange(len(images))])', 'all([images_clipped[i][0, 1] == 20 for i in sm.xrange(len(images))])', 'all([images_clipped[i][0, 2] == 25 for i in sm.xrange(len(images))])', 'all([images_clipped[i][0, 0] == 15 for i in sm.xrange(len(images))])', 'all([images_clipped[i][0, 1] == 20 for i in sm.xrange(len(images))])', 'all([images_clipped[i][0, 2] == 25 for i in sm.xrange(len(images))])', 'all([isinstance(kpsoi, ia.KeypointsOnImage) for kpsoi in kpsois]) # assert original list not changed', 'all([image.ndim == 3 and 48 <= image.shape[0] <= 62 and 48 <= image.shape[1] <= 62 and image.shape[2] == 3 for image in observed])', 'all([image.ndim == 3 and 48 <= image.shape[0] <= 62 and 48 <= image.shape[1] <= 62  and image.shape[2] == 1 for image in observed])', 'all([image.ndim == 2 and 48 <= image.shape[0] <= 62 and 48 <= image.shape[1] <= 62 for image in observed])', 'all(seen)', 'all([obs.shape == (3, 3, 3) for obs in [observed0, observed1, observed2, observed3]])', 'all([0 - 1e-6 < obs.min_value < 0 + 1e-6 for obs in [observed0, observed1, observed2, observed3]])', 'all([1 - 1e-6 < obs.max_value < 1 + 1e-6 for obs in [observed0, observed1, observed2, observed3]])', 'all(seen)', 'all(seen)', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'all([16 <= img.shape[0] <= 30 and img.shape[1:] == (32, 3) for img in observed])', 'all([16 <= img.shape[0] <= 30 and img.shape[1:] == (32, 3) for img in observed])', 'all([16 <= img.shape[0] <= 30 and img.shape[1:] == (32, 3) for img in observed])', 'all([16 <= img.shape[0] <= 30 and img.shape[1:] == (32, 3) for img in observed])', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'all([img.shape in [(8, 8, 3)] for img in observed])', 'all(seen)', 'all(seen)', 'all(seen)', 'all(seen)', 'all(seen)', 'all(seen)', 'all(seen)', 'all(seen)', 'all(seen.values())', 'all(seen2d)', 'all(seen3d)', 'all(seen2d)', 'all(seen3d)', 'all(seen2d)', 'all(seen3d)', 'all(seen2d)', 'all(seen3d)', 'all(seen2d)', 'all(seen3d)', 'all(seen2d)', 'all(seen3d)', 'all(seen2d)', 'all(seen3d)', 'all(seen2d)', 'all(seen3d)', 'all([100 - 50 < v < 100 + 50 for v in seen])', 'all([v in aug.pad_mode.a for v in expected])', 'all([v in aug.pad_mode.a for v in expected])', 'all([100 - 50 < v < 100 + 50 for v in seen])', 'all([v in aug.pad_cval.a for v in expected])', 'all([100 - 50 < v < 100 + 50 for v in seen])', 'all([v > 30 for v in seen])', 'all([v > 30 for v in seen])', 'all([v > 30 for v in seen])', 'all([v > 30 for v in seen])']",[],[],[],[],[],[],[],[],[],[],[],[]
1593,aleju,kontakt@ajung.name,2019-07-06 16:04:30+02:00,7c8818b87c0c4933e285ec5b21e814324e246a8c,https://github.com/aleju/imgaug/commit/7c8818b87c0c4933e285ec5b21e814324e246a8c,Make image resizing code in Superpixels more re-useable,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1594,aleju,kontakt@ajung.name,2019-07-06 16:11:30+02:00,ceea47abec2d62457e38d36b3d75434cff5ac68c,https://github.com/aleju/imgaug/commit/ceea47abec2d62457e38d36b3d75434cff5ac68c,Fix pylint warnings,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1595,aleju,kontakt@ajung.name,2019-07-06 16:13:27+02:00,062d82bc8fdc932399d2548aea57e5cf80db3c70,https://github.com/aleju/imgaug/commit/062d82bc8fdc932399d2548aea57e5cf80db3c70,Add color quantization changes to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1596,aleju,kontakt@ajung.name,2019-07-07 22:35:48+02:00,6816bcfd22160ea7568eac26e4102cf463ac6a31,https://github.com/aleju/imgaug/commit/6816bcfd22160ea7568eac26e4102cf463ac6a31,Add check script for KMeansColorQuantization,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1597,aleju,kontakt@ajung.name,2019-07-08 20:55:02+02:00,f67da129fd48c42a79797fd65bf7d17a8f4304d0,https://github.com/aleju/imgaug/commit/f67da129fd48c42a79797fd65bf7d17a8f4304d0,Reactivate color quantization tests,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1598,aleju,kontakt@ajung.name,2019-07-08 21:34:41+02:00,24e0e767a23f97fba4bb7820e6fee62d98672440,https://github.com/aleju/imgaug/commit/24e0e767a23f97fba4bb7820e6fee62d98672440,Add _AbstractColorQuantization to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1599,aleju,kontakt@ajung.name,2019-07-08 21:42:09+02:00,f527dc1b6c06341f2eb07fa9619a252134083b5f,https://github.com/aleju/imgaug/commit/f527dc1b6c06341f2eb07fa9619a252134083b5f,Add UniformColorQuantization and quantize_colors_uniform(),4,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,['class Test_quantize_colors_uniform(unittest.TestCase):'],[],"['def setUp(self):', 'def setUp(self):']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['in str(exc)', 'isinstance(aug.n_colors, iap.DiscreteUniform)', 'aug.n_colors.a.value == 2', 'aug.n_colors.b.value == 16', 'aug.from_colorspace == iaa.ChangeColorspace.RGB', 'isinstance(aug.to_colorspace, list)', 'aug.to_colorspace == [iaa.ChangeColorspace.RGB,', 'aug.max_size is None', 'aug.interpolation == ', 'isinstance(aug.n_colors, iap.DiscreteUniform)', 'aug.n_colors.a.value == 5', 'aug.n_colors.b.value == 8', 'aug.from_colorspace == iaa.ChangeColorspace.BGR', 'isinstance(aug.to_colorspace, list)', 'aug.to_colorspace == [iaa.ChangeColorspace.HSV,', 'aug.max_size == 128', 'aug.interpolation == ', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'int(c1) == 32', 'int(c2) == 96', 'int(c3) == 160', 'int(c4) == 224', 'np.array_equal(observed, expected)', 'in str(exc)', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],['in str(exc)'],[],[],[],[],[],[],[],[],[],[],[],[]
1600,aleju,kontakt@ajung.name,2019-07-09 19:36:27+02:00,26135ea56d7c54f1c42eb068cb5a5b6f0ff96aae,https://github.com/aleju/imgaug/commit/26135ea56d7c54f1c42eb068cb5a5b6f0ff96aae,Allow None as 'to_colorspace' in *ColorQuantization,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(mock_quantize_func.call_args_list[0][0][0],']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1601,aleju,kontakt@ajung.name,2019-07-09 19:49:46+02:00,1e70c74daffa9191ac318c2fc944d886341121c4,https://github.com/aleju/imgaug/commit/1e70c74daffa9191ac318c2fc944d886341121c4,Change to_colorspace default in UniformColorQuant. to None,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['aug.to_colorspace is None', '(', '(']",[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug.to_colorspace, list)', 'aug.to_colorspace == [iaa.ChangeColorspace.RGB,']",[],[],[],[],[],[],[],[],[],[],[],[]
1602,aleju,kontakt@ajung.name,2019-07-07 22:06:58+02:00,9b8fd7df45bf687308fb95124b6392f37c10c835,https://github.com/aleju/imgaug/commit/9b8fd7df45bf687308fb95124b6392f37c10c835,Add imgaug.imgaug.normalize_random_state(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1603,aleju,kontakt@ajung.name,2019-07-07 22:07:33+02:00,90e11ca290c5dcc3d90824d2ba06ef8fb8c886c1,https://github.com/aleju/imgaug/commit/90e11ca290c5dcc3d90824d2ba06ef8fb8c886c1,Add todo,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1604,aleju,kontakt@ajung.name,2019-07-07 22:10:28+02:00,d903d851dc8b010741f8200a6653afafd67022d3,https://github.com/aleju/imgaug/commit/d903d851dc8b010741f8200a6653afafd67022d3,Change segmentation imports as preparation for Voronoi,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1605,aleju,kontakt@ajung.name,2019-07-07 22:11:58+02:00,e2105d79c68cb08e7fc5afa98acdeff15b5ab556,https://github.com/aleju/imgaug/commit/e2105d79c68cb08e7fc5afa98acdeff15b5ab556,Refactor Superpixels as preparation for Voronoi,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1606,aleju,kontakt@ajung.name,2019-07-07 22:15:11+02:00,d2906638fc52b28761cf01d529c39ec81cfd4883,https://github.com/aleju/imgaug/commit/d2906638fc52b28761cf01d529c39ec81cfd4883,Add PointsSamplerIf,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1607,aleju,kontakt@ajung.name,2019-07-07 22:20:22+02:00,13656a1de58223c75687eb7dfaf9a6d926e3e609,https://github.com/aleju/imgaug/commit/13656a1de58223c75687eb7dfaf9a6d926e3e609,Add RegularGridPointsSampler,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1608,aleju,kontakt@ajung.name,2019-07-07 22:22:04+02:00,b31a342b598bd15bb178351e928ad20d326b21e8,https://github.com/aleju/imgaug/commit/b31a342b598bd15bb178351e928ad20d326b21e8,Add RelativeRegularGridPointsSampler,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1609,aleju,kontakt@ajung.name,2019-07-07 22:23:35+02:00,300919b7d5ea8036e6c6883ef4e1d8c1e184283d,https://github.com/aleju/imgaug/commit/300919b7d5ea8036e6c6883ef4e1d8c1e184283d,Add DropoutPointsSampler,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1610,aleju,kontakt@ajung.name,2019-07-07 22:25:26+02:00,2bf8a1fc303067fe5e5532c63f7438044e84682a,https://github.com/aleju/imgaug/commit/2bf8a1fc303067fe5e5532c63f7438044e84682a,Add SubsamplingPointsSampler,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1611,aleju,kontakt@ajung.name,2019-07-07 22:25:53+02:00,464ef95a0c140b691a7be11ec347a2c0a88647d2,https://github.com/aleju/imgaug/commit/464ef95a0c140b691a7be11ec347a2c0a88647d2,Add todos,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1612,aleju,kontakt@ajung.name,2019-07-07 22:28:38+02:00,ada6635091ec92b6f9f72e6b6a03ecb43e60b100,https://github.com/aleju/imgaug/commit/ada6635091ec92b6f9f72e6b6a03ecb43e60b100,Add segment_voronoi() and related functions,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1613,aleju,kontakt@ajung.name,2019-07-07 22:29:35+02:00,3f85fbd540226029003b18013cec85b60f18a965,https://github.com/aleju/imgaug/commit/3f85fbd540226029003b18013cec85b60f18a965,Add Voronoi,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1614,aleju,kontakt@ajung.name,2019-07-07 22:30:51+02:00,01c60410eb34fe0bb87781e46345cc81c2e0b203,https://github.com/aleju/imgaug/commit/01c60410eb34fe0bb87781e46345cc81c2e0b203,Add check script for Voronoi,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1615,aleju,kontakt@ajung.name,2019-07-07 22:32:49+02:00,68b796dd16294a3e3645de7ee973f572a7f790d8,https://github.com/aleju/imgaug/commit/68b796dd16294a3e3645de7ee973f572a7f790d8,Add tests for segment_voronoi(),1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class Test_segment_voronoi(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(image, image_seg)', 'np.array_equal(image_seg, image_expected)', 'np.array_equal(image_seg, image)', 'np.array_equal(image_seg, image_expected)', 'np.array_equal(image_seg, image_expected)', 'np.array_equal(image_seg, image)', 'np.array_equal(image_seg, image)', 'np.array_equal(image_seg, image)', 'np.array_equal(image_seg, image)', 'np.array_equal(image_seg, image)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1616,aleju,kontakt@ajung.name,2019-07-07 22:33:18+02:00,9f556c6cba94e1bbf690a1aed4c7ed4b6b08c48b,https://github.com/aleju/imgaug/commit/9f556c6cba94e1bbf690a1aed4c7ed4b6b08c48b,Add tests for Voronoi,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestVoronoi(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['aug.point_sampler is sampler', 'isinstance(aug.p_replace, iap.Deterministic)', 'aug.p_replace.value == 1', 'aug.max_size == 128', 'aug.interpolation == ', 'aug.point_sampler is sampler', 'isinstance(aug.p_replace, iap.Binomial)', 'np.isclose(aug.p_replace.p.value, 0.5)', 'aug.max_size is None', 'aug.interpolation == ', 'mock_imresize.call_count == 0', 'mock_imresize.call_count == 0', 'mock_imresize.call_count == 1', 'mock_imresize.call_args_list[0][0][1] == (5, 10)', 'mock_imresize.call_count == 1', 'mock_imresize.call_args_list[0][1][', 'sampler.call_count == 1', 'np.array_equal(image_aug, image)', 'image_aug.shape == image.shape', 'not np.any(replace_mask)', 'np.all(replace_mask)', '0.4 <= replace_fraction <= 0.6', 'not same_within_a1', 'not same_within_a2', 'not same_within_b1', 'not same_within_b2', 'not same_between_a1_a2', 'same_between_b1_b2', 'params[0] is sampler', 'isinstance(params[1], iap.Binomial)', 'np.isclose(params[1].p.value, 0.5)', 'params[2] is None', 'params[3] == ']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1617,aleju,kontakt@ajung.name,2019-07-07 22:33:51+02:00,6f282dfa512529dd55af88770c5eb21d9a9cde04,https://github.com/aleju/imgaug/commit/6f282dfa512529dd55af88770c5eb21d9a9cde04,Add tests for all point samplers,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],4,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestRegularGridPointSampler(unittest.TestCase):', 'class TestRelativeRegularGridPointSampler(unittest.TestCase):', 'class TestDropoutPointsSampler(unittest.TestCase):', 'class TestSubsamplingPointSampler(unittest.TestCase):']",[],"['def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(sampler.n_rows, iap.DiscreteUniform)', 'sampler.n_rows.a.value == 1', 'sampler.n_rows.b.value == 10', 'sampler.n_cols.value == 20', 'len(points) == 1', 'np.allclose(points[0], [10.0, 5.0])', 'len(points) == 4', 'np.allclose(points, [', 'len(points) in [1, 2]', 'matches_single_point or matches_two_points', 'len(points) == 1', 'matches_single_point', 'len(points) == 1', 'matches_single_point', 'len(points) == 1', 'matches_single_point', 'len(points) == 1', 'matches_single_point', 'points_seed1_1.shape == points_seed1_2.shape', 'points_seed1_1.shape != points_seed2_1.shape', 'isinstance(sampler.n_rows_frac, iap.Uniform)', 'np.isclose(sampler.n_rows_frac.a.value, 0.1)', 'np.isclose(sampler.n_rows_frac.b.value, 0.2)', 'np.isclose(sampler.n_cols_frac.value, 0.1)', 'len(points) == 1', 'np.allclose(points[0], [10.0, 5.0])', 'len(points) == 4', 'np.allclose(points, [', 'len(points) in [1, 2]', 'matches_single_point or matches_two_points', 'len(points) == 1', 'matches_single_point', 'len(points) == 1', 'matches_single_point', 'points_seed1_1.shape == points_seed1_2.shape', 'points_seed1_1.shape != points_seed2_1.shape', 'sampler.other_points_sampler is other', 'isinstance(sampler.p_drop, iap.Binomial)', 'np.isclose(sampler.p_drop.p.value, 0.5)', 'np.allclose(observed, points)', 'len(observed) == 1', '0.0 + 0.9 - eps <= observed[0][0] <= 1000.0 - 0.9 + eps', '0.0 + 0.9 - eps <= observed[0][1] <= 1000.0 - 0.9 + eps', '50000 - 1000 <= len(observed) <= 50000 + 1000', 'np.allclose(observed_s1_1, observed_s1_2)', '(observed_s1_1.shape != observed_s2_1.shape', 'all_s1_identical', 'not all_s1s2_identical', 'sampler.other_points_sampler is other', 'sampler.n_points_max == 100', 'len(observed) == 0', 'len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)', 'len(observed) == 4', 'np.allclose(observed, [', 'len(observed) == 5*5', '9 in counts_uq', '10 in counts_uq', '11 not in counts_uq', 'all_s1_identical', 'not all_s1s2_identical']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1618,aleju,kontakt@ajung.name,2019-07-13 16:53:59+02:00,9d714b6bdc8daf5deedf33e6849936b5d3d76312,https://github.com/aleju/imgaug/commit/9d714b6bdc8daf5deedf33e6849936b5d3d76312,Add UniformPointsSampler,4,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestUniformPointsSampler(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(sampler.n_points, iap.Deterministic)', 'sampler.n_points.value == 100', 'n_points == 3', 'n_points_uq == 3', 'np.all(n_points_per_quadrant > 0.8*(10000/4))', 'np.all(points_bincounts_x > 0.8*(10000/10))', 'np.all(points_bincounts_y > 0.8*(10000/10))', 'len(points) == 2', 'len(points[0]) == 1000', 'len(points[1]) == 1000', 'not np.allclose(points[0], points[1])', 'np.any(points[0][:, 1] < 20)', 'np.any(points[0][:, 1] > 0.9*100)', 'np.any(points[0][:, 0] < 20)', 'np.any(points[0][:, 0] > 0.9*500)', 'np.any(points[1][:, 1] < 20)', 'np.any(points[1][:, 1] > 0.9*500)', 'np.any(points[1][:, 0] < 20)', 'np.any(points[1][:, 0] > 0.9*100)', 'len(points) == 1', 'len(list(seen.keys())) == 2', 'all(seen.values())', 'len(points) == 50', 'len(list(point_counts)) == 2', '1 in point_counts', '10 in point_counts', 'np.allclose(observed_s1_1, observed_s1_2)', 'not np.allclose(observed_s1_1, observed_s2_1)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1619,aleju,kontakt@ajung.name,2019-07-13 18:20:54+02:00,8ad20f9be00026193ee6e9917c801a48365d7bf8,https://github.com/aleju/imgaug/commit/8ad20f9be00026193ee6e9917c801a48365d7bf8,Add UniformVoronoi,4,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestUniformVoronoi(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['mock_voronoi.call_count == 1', 'isinstance(mock_voronoi.call_args_list[0][1][],', 'np.isclose(mock_voronoi.call_args_list[0][1][],', 'mock_voronoi.call_args_list[0][1][] == 5', 'mock_voronoi.call_args_list[0][1][', 'mock_voronoi.call_args_list[0][1][', 'mock_voronoi.call_args_list[0][1][] is True', 'mock_voronoi.call_args_list[0][1][] is rs', 'aug.points_sampler.n_points.value == 100', 'np.isclose(aug.p_replace.p.value, 0.5)', 'aug.max_size == 5', 'aug.interpolation == ', 'aug.name == ', 'aug.deterministic is True', 'aug.random_state is rs']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1620,aleju,kontakt@ajung.name,2019-07-13 20:14:45+02:00,6470f3cd4003ed682d5a9c07409a073e62e224e2,https://github.com/aleju/imgaug/commit/6470f3cd4003ed682d5a9c07409a073e62e224e2,Add RegularGridVoronoi,4,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestRegularGridVoronoi(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['mock_voronoi.call_count == 1', 'isinstance(ps, iaa.DropoutPointsSampler)', 'isinstance(ps.other_points_sampler,', 'np.isclose(ps.p_drop.p.value, 1-0.6)', 'ps.other_points_sampler.n_rows.value == 10', 'ps.other_points_sampler.n_cols.value == 20', 'np.isclose(mock_voronoi.call_args_list[0][1][],', 'mock_voronoi.call_args_list[0][1][] == 5', 'mock_voronoi.call_args_list[0][1][', 'mock_voronoi.call_args_list[0][1][', 'mock_voronoi.call_args_list[0][1][] is True', 'mock_voronoi.call_args_list[0][1][] is rs', 'np.isclose(aug.points_sampler.p_drop.p.value, 1-0.4)', 'aug.points_sampler.other_points_sampler.n_rows.value == 10', 'isinstance(aug.points_sampler.other_points_sampler.n_cols,', 'aug.points_sampler.other_points_sampler.n_cols.a.value == 10', 'aug.points_sampler.other_points_sampler.n_cols.b.value == 30', 'np.isclose(aug.p_replace.p.value, 0.5)', 'aug.max_size == 5', 'aug.interpolation == ', 'aug.name == ', 'aug.deterministic is True', 'aug.random_state is rs']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1621,aleju,kontakt@ajung.name,2019-07-13 20:31:28+02:00,7187dfcc5d34e81ca2f28591a67c7a3a90f734be,https://github.com/aleju/imgaug/commit/7187dfcc5d34e81ca2f28591a67c7a3a90f734be,Add str and repr methods to point samplers,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sampler.__str__() == sampler.__repr__() == expected', 'sampler.__str__() == sampler.__repr__() == expected', 'sampler.__str__() == sampler.__repr__() == expected', 'sampler.__str__() == sampler.__repr__() == expected', 'sampler.__str__() == sampler.__repr__() == expected']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1622,aleju,kontakt@ajung.name,2019-07-13 20:32:11+02:00,9206388a6c525181f65b8751550da5951b1f7e0a,https://github.com/aleju/imgaug/commit/9206388a6c525181f65b8751550da5951b1f7e0a,Fix broken tests,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['aug.points_sampler is sampler', 'aug.points_sampler is sampler']",[],[],[],[],[],[],[],[],[],[],[],[],"['aug.point_sampler is sampler', 'aug.point_sampler is sampler']",[],[],[],[],[],[],[],[],[],[],[],[]
1623,aleju,kontakt@ajung.name,2019-07-20 15:31:40+02:00,81103afac6a1877c7b0964218c83a305d3917d15,https://github.com/aleju/imgaug/commit/81103afac6a1877c7b0964218c83a305d3917d15,Add RelativeRegularGridVoronoi,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestRelativeRegularGridVoronoi(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['mock_voronoi.call_count == 1', 'isinstance(ps, iaa.DropoutPointsSampler)', 'isinstance(ps.other_points_sampler,', 'np.isclose(ps.p_drop.p.value, 1-0.6)', 'np.isclose(ps.other_points_sampler.n_rows_frac.value, 0.1)', 'np.isclose(ps.other_points_sampler.n_cols_frac.value, 0.2)', 'np.isclose(mock_voronoi.call_args_list[0][1][],', 'mock_voronoi.call_args_list[0][1][] == 5', 'mock_voronoi.call_args_list[0][1][', 'mock_voronoi.call_args_list[0][1][', 'mock_voronoi.call_args_list[0][1][] is True', 'mock_voronoi.call_args_list[0][1][] is rs', 'np.isclose(aug.points_sampler.p_drop.p.value, 1-0.4)', 'np.isclose(ps.other_points_sampler.n_rows_frac.value, 0.1)', 'isinstance(ps.other_points_sampler.n_cols_frac, iap.Uniform)', 'np.isclose(ps.other_points_sampler.n_cols_frac.a.value, 0.1)', 'np.isclose(ps.other_points_sampler.n_cols_frac.b.value, 0.3)', 'np.isclose(aug.p_replace.p.value, 0.5)', 'aug.max_size == 5', 'aug.interpolation == ', 'aug.name == ', 'aug.deterministic is True', 'aug.random_state is rs']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1624,aleju,kontakt@ajung.name,2019-07-20 15:33:23+02:00,5638d61198cecc2f287dc28ecec6392bebc66daa,https://github.com/aleju/imgaug/commit/5638d61198cecc2f287dc28ecec6392bebc66daa,Add voronoi PR IDs to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1625,aleju,kontakt@ajung.name,2019-07-23 19:56:40+02:00,d375bcb4ebe07739f6354298be33f65c601f4fee,https://github.com/aleju/imgaug/commit/d375bcb4ebe07739f6354298be33f65c601f4fee,Add pooling PR id to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1626,aleju,kontakt@ajung.name,2019-07-23 19:58:52+02:00,77cb39cc2e7c55fd5a889fd6fb309b157ea9d48d,https://github.com/aleju/imgaug/commit/77cb39cc2e7c55fd5a889fd6fb309b157ea9d48d,Add PR #349 to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1627,aleju,kontakt@ajung.name,2019-07-23 20:00:56+02:00,22b859a726325e327e5d095603c243d060beac98,https://github.com/aleju/imgaug/commit/22b859a726325e327e5d095603c243d060beac98,Add PR #309 to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1628,aleju,kontakt@ajung.name,2019-07-23 20:03:45+02:00,603cc0a55c59eafa52fa583d55cd4229d013004b,https://github.com/aleju/imgaug/commit/603cc0a55c59eafa52fa583d55cd4229d013004b,Add PR #343 to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1629,aleju,kontakt@ajung.name,2019-07-23 20:05:35+02:00,0a2bef4c8071c24ab5b679b3c26f89bb51f2ce53,https://github.com/aleju/imgaug/commit/0a2bef4c8071c24ab5b679b3c26f89bb51f2ce53,Add PR #345 to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1630,aleju,kontakt@ajung.name,2019-04-20 21:45:37+02:00,35c5d75acecabb001f48e225dd2e418588d0b854,https://github.com/aleju/imgaug/commit/35c5d75acecabb001f48e225dd2e418588d0b854,"Rework SegMapsOnImage to be integer-based

- Rename SegmentationMapOnImage to
  SegmentationMapsOnImage.
- Internal array is now
  - Always int32.
  - Always of shape (H,W,C), with C
    being the channels and not the classes.
  - No longer generated via np.eye(),
    i.e. memory demand does not grow with
    number of classes.
- Remove nb_classes arg.
- Change .input_was attribute content.
- SegMapsOnImage no longer accepts float32
  array inputs.
- SegMapsOnImage no longer accepts uint
  inputs if they are 32bit or more.
  Only uint8 and uint16 are accepted.
- Remove background_class_id args.
- Remove background_threshold args.
- draw() and draw_on_image() now return
  lists of arrays, one per C.
- Refactor draw() to be thin wrapper
  around draw_on_image().
- copy() has now args 'arr' and 'shape'.
- deepcopy() has now args 'arr' and 'shape'.
- pad(), pad_to_aspect_ratio(), resize()
  now call deepcopy() to generate new
  SegMapsOnImage instances.
- Removed SegMapsOnImage.to_heatmaps()
  and .from_heatmaps().
- Remove SegMapsOnImage.get_arr_int().
- Add SegMapsOnImage.get_arr().
- SegMapsOnImage.resize() now uses NN
  interpolation by default.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1631,aleju,kontakt@ajung.name,2019-04-20 21:57:24+02:00,9fb98db13ccb8cfeeaf7c57c14a28aba26b2d5c6,https://github.com/aleju/imgaug/commit/9fb98db13ccb8cfeeaf7c57c14a28aba26b2d5c6,"Adapt segmap normalization to new class name + (H,W,C)",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1632,aleju,kontakt@ajung.name,2019-04-20 21:59:04+02:00,049170dc0e1f891c7e4bbad9afc08d82ef0d2ce6,https://github.com/aleju/imgaug/commit/049170dc0e1f891c7e4bbad9afc08d82ef0d2ce6,Change calls/docs from SegMapOnImage to SegMapsOnImage,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1633,aleju,kontakt@ajung.name,2019-04-20 21:59:37+02:00,883849ac0d72e61b22ffeadcbd6615f27336d602,https://github.com/aleju/imgaug/commit/883849ac0d72e61b22ffeadcbd6615f27336d602,"Update SegMapsOnImage name, change float to int",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1634,aleju,kontakt@ajung.name,2019-04-20 22:03:14+02:00,5cfd414bbb23568bc7e121971294c978a723ff22,https://github.com/aleju/imgaug/commit/5cfd414bbb23568bc7e121971294c978a723ff22,Add dedicated SegMap aug to Augmenter + update SegMap class names,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1635,aleju,kontakt@ajung.name,2019-04-20 22:03:46+02:00,65e24611ced81dcdd00aa183ca01e1949ef6513c,https://github.com/aleju/imgaug/commit/65e24611ced81dcdd00aa183ca01e1949ef6513c,Add dedicated SegMap aug to meta augmenters,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1636,aleju,kontakt@ajung.name,2019-04-20 22:04:06+02:00,fee5d3a7467fa9547d5deea82f87aba416eaa882,https://github.com/aleju/imgaug/commit/fee5d3a7467fa9547d5deea82f87aba416eaa882,Add dedicated SegMap aug to blend augmenters,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1637,aleju,kontakt@ajung.name,2019-04-20 22:04:28+02:00,5e9f0147bebf94c2b7b526eb1ce349234903f572,https://github.com/aleju/imgaug/commit/5e9f0147bebf94c2b7b526eb1ce349234903f572,Add dedicated SegMap aug to color augmenters,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1638,aleju,kontakt@ajung.name,2019-04-20 22:04:48+02:00,9942e2981039049ecac14ec0c65aeedf954fd212,https://github.com/aleju/imgaug/commit/9942e2981039049ecac14ec0c65aeedf954fd212,Add dedicated SegMap aug to flip augmenters,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1639,aleju,kontakt@ajung.name,2019-04-20 22:05:11+02:00,a8f31a57ecd0c98caeaf2a032016ad437f293ccd,https://github.com/aleju/imgaug/commit/a8f31a57ecd0c98caeaf2a032016ad437f293ccd,Add dedicated SegMap aug to geometric augmenters,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1640,aleju,kontakt@ajung.name,2019-04-20 22:05:29+02:00,3da21ac48193da3660eed47c488d2fa5bb8225d9,https://github.com/aleju/imgaug/commit/3da21ac48193da3660eed47c488d2fa5bb8225d9,Add dedicated SegMap aug to size augmenters,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1641,aleju,kontakt@ajung.name,2019-04-20 22:06:47+02:00,8c21a9ff3a02bd5078dc6c4e3eabbc09d89d6bfd,https://github.com/aleju/imgaug/commit/8c21a9ff3a02bd5078dc6c4e3eabbc09d89d6bfd,Add tests for dedicated SegMap aug,10,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,392,0,0,0,0,0,0,0,0,0,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(observed, SegmentationMapsOnImage)', 'after.shape == (1, 1, 1, 1)', 'isinstance(after, ia.SegmentationMapsOnImage)', 'after[0].shape == (1, 1, 1)', 'isinstance(after[0], ia.SegmentationMapsOnImage)', 'isinstance(segmaps_norm[0], ia.SegmentationMapsOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 0], 1)', 'isinstance(segmaps_norm[0], ia.SegmentationMapsOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 0], 1)', 'isinstance(segmaps_norm[0], ia.SegmentationMapsOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 0], 0 + 1)', 'isinstance(segmaps_norm[0], ia.SegmentationMapsOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 0], 1)', 'isinstance(segmaps_norm[0], ia.SegmentationMapsOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 0], 1)', 'isinstance(segmaps_norm[0], ia.SegmentationMapsOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 0], 1)', 'ntype == ', 'ntype == ', 'segmap.shape == img_shape', 'segmap.arr.dtype.name == ', 'segmap.arr.shape == (3, 3, 1)', 'np.array_equal(segmap.arr,', 'segmap.shape == img_shape', 'segmap.arr.dtype.name == ', 'segmap.arr.shape == (3, 3, 5)', 'np.array_equal(segmap.arr, arr.astype(np.int32))', 'segmap.shape == (3, 3)', 'segmap.arr.dtype.name == ', 'segmap.arr.shape == (3, 3, 1)', 'np.array_equal(segmap.arr,', 'segmap.shape == (3, 3)', 'segmap.arr.dtype.name == ', 'segmap.arr.shape == (3, 3, 5)', 'np.array_equal(segmap.arr, arr.astype(np.int32))', 'in str(exc)', 'arr.dtype.kind == ', 'np.array_equal(', 'segmap.get_arr().dtype.name == arr.dtype.name', 'np.array_equal(segmap.get_arr(), arr)', 'segmap.arr.dtype.name == ', 'segmap.arr.ndim == 3', 'np.array_equal(observed, arr)', 'observed.dtype.name == dtype.name', 'observed.ndim == ndim', 'np.array_equal(observed, arr)', 'segmap.arr.dtype.name == ', 'segmap.arr.ndim == 3', 'np.array_equal(observed, arr)', 'observed.dtype.kind == ', 'observed.ndim == ndim', 'np.array_equal(observed, arr)', 'isinstance(observed, list)', 'len(observed) == 1', 'np.array_equal(observed[0], expected)', 'isinstance(observed, list)', 'len(observed) == 1', 'np.array_equal(observed[0], expected)', 'isinstance(observed, list)', 'len(observed) == 1', 'np.array_equal(observed[0], expected)', 'isinstance(observed, list)', 'len(observed) == 3', 'np.array_equal(observed[0], expected_channel_1)', 'np.array_equal(observed[1], expected_channel_2)', 'np.array_equal(observed[2], expected_channel_3)', 'isinstance(observed, list)', 'len(observed) == 1', 'np.array_equal(observed[0], image)', 'isinstance(observed, list)', 'len(observed) == 1', 'np.array_equal(observed[0], expected)', 'isinstance(observed, list)', 'len(observed) == 1', 'np.array_equal(observed[0], expected)', 'isinstance(observed, list)', 'len(observed) == 3', 'np.array_equal(observed[0], expected_channel_1)', 'np.array_equal(observed[1], expected_channel_2)', 'np.array_equal(observed[2], expected_channel_3)', 'isinstance(observed, list)', 'len(observed) == 1', 'observed[0].shape == expected.shape', 'isinstance(observed, list)', 'len(observed) == 1', 'observed[0].shape == expected.shape', 'isinstance(observed, list)', 'len(observed) == 1', 'observed[0].shape == expected.shape', 'isinstance(observed, list)', 'len(observed) == 1', 'observed[0].shape == expected.shape', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(segmap_scaled.arr, expected)', 'np.array_equal(observed.arr, segmap.arr)', 'segmap.arr[0, 0, 0] == 10', 'arr[0, 0, 0] == 10', 'observed.arr.shape == (1, 1, 1)', 'observed.arr[0, 0, 0] == 10', 'observed.input_was == segmap.input_was', 'observed.shape == (10, 11, 3)', 'segmap.shape != (10, 11, 3)', 'np.array_equal(observed.arr, segmap.arr)', 'segmap.arr[0, 0, 0] != 10', 'arr[0, 0, 0] != 10', 'observed.arr.shape == (1, 1, 1)', 'observed.arr[0, 0, 0] == 10', 'segmap.arr[0, 0, 0] != 10', 'observed.input_was == segmap.input_was', 'observed.shape == (10, 11, 3)', 'segmap.shape != (10, 11, 3)', 'observed.input_was == segmap.input_was', 'observed.shape == segmaps.shape', 'np.array_equal(observed.get_arr(), segmaps_arr_r1)', 'observed.shape == segmaps.shape', 'np.array_equal(observed.get_arr(), segmaps_arr_l1)', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.get_arr(), segmaps_arr_r1)', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.get_arr(), segmaps_arr_l1)', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.get_arr(), segmaps_arr_r1)', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.get_arr(), segmaps_arr_l1)', 'observed.shape == segmaps.shape', 'np.array_equal(observed.get_arr(), expected)', 'observed.shape == segmaps.shape', 'np.array_equal(observed.get_arr(), expected)', 'observed.shape == segmaps.shape', 'np.array_equal(observed.get_arr(), expected)', 'observed.shape == segmaps.shape', 'np.array_equal(observed.get_arr(), expected)', 'observed.shape == segmaps.shape', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == segmaps.shape', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == segmaps.shape', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'nb_labels == 4', 'nb_labels == 4', '(same / img_aug_mask.size) >= 0.95', 'observed.shape == segmaps.shape', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == segmaps.shape', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == segmaps.shape', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', '100.0-75.0 > np.average(observed[~mask]) > np.average(img[~mask])', '(100.0-75.0)/255.0 > np.average(observed_arr[~mask]) > np.average(heatmaps_arr[~mask])', 'observed.shape == segmaps.shape', 'np.average(observed_arr_left_col == 1) > 0.98', 'np.average(observed_arr_right_col == 1) > 0.98', 'np.average(observed_arr[~mask] == 0) > 0.9', 'observed.shape == segmaps.shape', 'np.array_equal(observed_arr, segmaps_arr)', 'observed1.shape == segmaps.shape', 'observed2.shape == segmaps.shape', 'np.average(observed1_arr[~mask] == 0) > np.average(observed2_arr[~mask] == 0)', 'heatmaps.min_value - 1e-6 < hm_aug.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < hm_aug.max_value < heatmaps.max_value + 1e-6', 'segmap_aug.shape == (60, 80, 3)', '(same / img_aug_mask.size) >= 0.9', 'segmaps_aug.shape == (60, 80, 3)', 'segmaps_aug.arr.shape == (30, 40+10, 1)', '(same / img_aug_mask.size) >= 0.9', 'np.sum([observed.get_arr()[:, :] > 0]) == 0', 'all([abs(s1-s2) <= 1 for s1, s2 in zip(segmaps_aug.shape, expected)])', 'all([abs(s1-s2) <= 1 for s1, s2 in zip(segmaps_aug.arr.shape, expected + (1,))])', '(same / img_aug_mask.size) >= 0.99', 'all([abs(s1-s2) <= 1 for s1, s2 in zip(seg_aug.shape, expected)])', 'all([abs(s1-s2) <= 1 for s1, s2 in zip(seg_aug.arr.shape, expected_small)])', '(same / img_aug_mask.size) >= 0.92', 'observed.shape == segmaps.shape', 'np.average(observed.get_arr() != expected) < 0.05', 'observed.shape == segmaps.shape', 'np.sum(observed.get_arr()[mask]) < np.sum(segmaps.get_arr()[mask])', 'np.sum(observed.get_arr()[~mask]) > np.sum(segmaps.get_arr()[~mask])', 'observed1.shape == segmaps.shape', 'observed2.shape == segmaps.shape', 'np.sum(observed1.get_arr()[mask]) > np.sum(observed2.get_arr()[mask])', 'np.sum(observed1.get_arr()[~mask]) < np.sum(observed2.get_arr()[~mask])', 'observed.shape == segmaps.shape', 'np.sum(observed.get_arr() > 0) == 0', 'segmaps_aug.shape == (80, 80)', 'segmaps_aug.arr.shape == (80, 80, 1)', '(same / img_aug_mask.size) >= 0.99', 'segmaps_aug.shape == (80, 80)', 'segmaps_aug.arr.shape == (40, 40, 1)', '(same / img_aug_mask.size) >= 0.94', 'segmaps_aug.arr.dtype == segmaps.arr.dtype', 'np.allclose(segmaps_aug.arr, segmaps.arr)', 'segmaps_aug.shape == segmaps.shape', 'segmaps_aug.arr.dtype == segmaps.arr.dtype', 'np.allclose(segmaps_aug.arr, np.rot90(segmaps.arr, 1, axes=(1, 0)))', 'segmaps_aug.shape == (4, 4, 3)', 'segmaps_smaller_aug.arr.dtype == segmaps_smaller.arr.dtype', 'np.allclose(segmaps_smaller_aug.arr,', 'segmaps_smaller_aug.shape == (8, 4, 3)', 'segmaps_aug.arr.dtype == segmaps.arr.dtype', 'np.allclose(segmaps_aug.arr, np.rot90(segmaps.arr, 2, axes=(1, 0)))', 'segmaps_aug.shape == (4, 4, 3)', 'segmaps_smaller_aug.arr.dtype == segmaps_smaller.arr.dtype', 'np.allclose(segmaps_smaller_aug.arr,', 'segmaps_smaller_aug.shape == (4, 8, 3)', 'segmaps_aug.arr.dtype == segmaps.arr.dtype', 'np.allclose(segmaps_aug.arr,', 'segmaps_aug.shape == (4, 4, 3)', 'segmaps_smaller_aug.arr.dtype == segmaps_smaller.arr.dtype', 'np.allclose(segmaps_smaller_aug.arr,', 'segmaps_smaller_aug.shape == (8, 4, 3)', 'segmaps_aug.arr.dtype == segmaps.arr.dtype', 'np.allclose(segmaps_aug.arr,', 'segmaps_aug.shape == (4, 4, 3)', 'segmaps_smaller_aug.arr.dtype == segmaps_smaller.arr.dtype', 'np.allclose(segmaps_smaller_aug.arr, segmaps_smaller_rot)', 'segmaps_smaller_aug.shape == (4, 8, 3)', 'segmaps_aug[0].shape == (8, 4, 3)', 'segmaps_aug[1].shape == (4, 8, 3)', 'segmaps_aug[2].shape == (8, 4, 3)', 'segmaps_aug[3].shape == (4, 8, 3)', 'np.allclose(segmaps_aug[0].arr, np.rot90(segmaps_smaller.arr, 1, axes=(1, 0)))', 'np.allclose(segmaps_aug[1].arr, np.rot90(segmaps_smaller.arr, 2, axes=(1, 0)))', 'np.allclose(segmaps_aug[2].arr, np.rot90(segmaps_smaller.arr, 1, axes=(1, 0)))', 'np.allclose(segmaps_aug[3].arr, np.rot90(segmaps_smaller.arr, 2, axes=(1, 0)))', 'np.allclose(observed.arr_0to1, heatmaps.arr_0to1)', 'np.allclose(observed.arr_0to1, heatmaps.arr_0to1)', 'np.array_equal(observed.arr, segmaps.arr)', 'np.array_equal(observed.arr, segmaps.arr)', 'observed.shape == lsoi.shape', 'len(observed.line_strings) == 1', 'observed.shape == lsoi.shape', 'len(observed.line_strings) == 1', 'observed.line_strings[0].coords_almost_equals(lsoi.line_strings[0])', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.get_arr(), segmaps_arr_aug)', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.get_arr(), segmaps_arr_aug)', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.get_arr(), segmaps.get_arr())', 'errored', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.get_arr(), segmaps.get_arr())', 'errored', 'observed.shape == (3, 4, 3)', 'np.array_equal(observed.get_arr(), segmaps.get_arr())', 'observed.shape == (3, 4, 3)', 'np.array_equal(observed.get_arr(), segmaps.get_arr())', 'observed.shape == (3, 4, 3)', 'np.array_equal(observed.get_arr(), heatmaps.get_arr())', 'observed.shape == (3, 4, 3)', 'np.array_equal(observed.get_arr(), segmaps.get_arr())', 'observed.shape == (3, 4, 3)', 'np.array_equal(observed.get_arr(), segmaps.get_arr())', 'observed.shape == (3, 4, 3)', 'np.array_equal(observed.get_arr(), segmaps.get_arr())', 'errored', 'observed.shape == (3, 4, 3)', 'np.array_equal(observed.get_arr(), heatmaps.get_arr())', 'observed.shape == (3, 4, 3)', 'np.array_equal(observed.get_arr(), heatmaps.get_arr())', 'errored', 'np.array_equal(segmap_aug.arr, segmap.arr)', 'np.array_equal(segmap_aug.arr, segmap.arr)', 'np.array_equal(segmap_aug.arr, segmap.arr)', 'np.array_equal(segmap_aug.arr, segmap.arr)', 'np.array_equal(segmap_aug.arr, expected)', 'np.array_equal(segmap_aug.arr, expected)', 'np.array_equal(segmap_aug.arr, segmap.arr)', 'np.array_equal(segmap_aug.arr, segmap.arr)', 'np.array_equal(segmap_aug.arr, expected)', 'np.array_equal(segmap_aug.arr, expected)', 'np.array_equal(segmap_aug.arr, segmap.arr)', 'np.array_equal(segmap_aug.arr, segmap.arr)', 'np.allclose(segmap_aug.arr, arr)', 'np.array_equal(segmaps_aug[0].arr, segmaps.arr)', 'np.array_equal(segmaps_aug[0].arr, segmaps.arr)', 'np.array_equal(segmaps_aug[0].arr, segmaps.arr)', 'np.array_equal(segmaps_aug[0].arr, segmaps.arr)', 'np.array_equal(segmaps_aug[0].arr, segmaps.arr)', 'np.array_equal(segmaps_aug[0].arr, segmaps.arr)', 'np.array_equal(segmaps_aug[0].arr, segmaps.arr)', 'np.allclose(observed.get_arr(), heatmaps_arr_expected)', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.get_arr(), segmaps_arr_expected)', 'nb_segmaps_first_second_unrandom == nb_iterations', 'nb_segmaps_second_first_unrandom == 0', 'False', 'all(seen)', 'np.allclose(obs.get_arr(), exp)', 'all([obs.shape == (3, 3, 3) for obs in [observed0, observed1, observed2, observed3]])', 'observed.shape == segmaps.shape', 'np.array_equal(observed.get_arr(), segmaps_arr_lr)', 'observed.shape == segmaps.shape', 'np.array_equal(observed.get_arr(), heatmaps_arr_ud)', 'heatmap_aug.shape == (3, 3, 3)', 'np.allclose(heatmap_aug.get_arr(), heatmap_arr)', 'heatmap_aug.shape == (3, 3, 3)', 'np.allclose(heatmap_aug.get_arr(), heatmap_arr_shifted)', 'segmap_aug.shape == (3, 3, 3)', 'np.array_equal(segmap_aug.get_arr(), segmap_arr)', 'segmap_aug.shape == (3, 3, 3)', 'np.array_equal(segmap_aug.get_arr(), segmap_arr_shifted)', 'segmap_aug.shape == (4, 4, 3)', 'segmap_aug.arr.shape == (1, 3, 1)', 'np.array_equal(segmap.arr, segmap_aug.arr)', 'segmaps_aug.shape == (8, 12, 3)', 'segmaps_aug.arr.shape == (8, 12, nb_channels if nb_channels is not None else 1)', 'np.all(segmaps_aug.arr[0, 1:-1, :] == 0)', 'np.all(segmaps_aug.arr[-1, 1:-1, :] == 0)', 'np.all(segmaps_aug.arr[1:-1, 0, :] == 0)', 'np.all(segmaps_aug.arr[1:-1, -1, :] == 0)', 'np.all(segmaps_aug.arr[2:-2, 2:-2, :] == 1)', 'segmaps_aug.shape == (16, int(base_img3d.shape[1]*2*2), 3)', 'segmaps_aug.arr.shape == (8, 16, 1)', 'np.all(segmaps_aug.arr[0, 1:-1, :] == 0)', 'np.all(segmaps_aug.arr[-1, 1:-1, :] == 0)', 'np.all(segmaps_aug.arr[1:-1, 0, :] == 0)', 'np.all(segmaps_aug.arr[1:-1, -1, :] == 0)', 'np.all(segmaps_aug.arr[2:-2, 2:-2, :] == 1)', 'observed.shape == base_img_padded.shape', 'np.array_equal(observed.get_arr(), segmaps_arr_padded)', 'observed.shape == (10, 24)', 'observed.arr.shape == (10, 6, 1)', 'np.array_equal(observed.arr[..., 0], segmaps_arr_small_padded)', 'observed.shape == (6, 16)', 'observed.arr.shape == (6, 4, 1)', 'np.array_equal(', 'np.sum(observed.get_arr() == 0) == 3', 'np.sum(observed.get_arr() > 0) == 0', 'observed.shape == (12, 24)', 'observed.arr.shape == (12, 6, 1)', 'np.array_equal(observed.arr[..., 0], segmaps_arr_small_padded)', 'observed.shape == (6, 16)', 'observed.arr.shape == (6, 4, 1)', 'np.array_equal(', 'observed.shape == base_img_cropped.shape', 'np.array_equal(observed.get_arr(), segmaps_arr_cropped)', 'observed.shape == (4, 8)', 'observed.arr.shape == (4, 4, 1)', 'np.array_equal(observed.arr[..., 0], segmaps_arr_small_cropped)', 'observed.shape == (6, 16)', 'observed.arr.shape == (6, 8, 1)', 'np.array_equal(', 'observed.shape == (8, 16)', 'observed.arr.shape == (4, 6, 1)', 'np.array_equal(observed.arr[..., 0], segmaps_arr_small_cropped)', 'observed.shape == (16, 32)', 'observed.arr.shape == (8, 12, 1)', 'np.allclose(', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.arr, expected)', 'observed.shape == (32, 32, 3)', 'np.array_equal(observed.arr, expected)', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.arr, expected)', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.arr, expected)', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.arr, expected)', 'observed.shape == (32, 32, 3)', 'np.array_equal(observed.arr, expected)', 'in samples', 'in samples_segmaps', 'len(set(samples_segmaps)) == 1', 'iaa.KeepSizeByResize.NO_RESIZE in samples_segmaps', 'len(set(samples_segmaps)) == 1', 'cv2.INTER_CUBIC in samples_segmaps', 'len(set(samples_segmaps)) == 1', 'in samples_segmaps', 'in samples_segmaps', 'len(set(samples_segmaps)) == 3', '0.5 - 0.1 < np.sum(samples == samples_segmaps) / samples_segmaps.size < 0.5 + 0.1', 'in samples_segmaps', 'in samples_segmaps', 'len(set(samples_segmaps)) == 2', 'segmaps_oi_aug.arr.shape == (4, 4, 1)', 'np.array_equal(segmaps_oi_aug.arr, segmaps_oi_nearest.arr)', 'segmaps_oi_aug.arr.shape == (4, 4, 1)', 'np.array_equal(segmaps_oi_aug.arr, segmaps_oi_nearest.arr)', 'segmaps_oi_aug.arr.shape == (3, 4, 1)', 'np.array_equal(segmaps_oi_aug.arr, segmaps_oi.arr[1:, :, :])', 'np.allclose(np.average(segmap.arr), 0.3016427, rtol=0, atol=1e-2)', 'np.allclose(np.average(segmap.arr), 0.450353, rtol=0, atol=1e-2)', 'np.allclose(np.average(segmap.arr), 0.30160266, rtol=0, atol=1e-2)']",[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(observed, SegmentationMapOnImage)', 'after.shape == (1, 1, 1)', 'isinstance(after, ia.SegmentationMapOnImage)', 'after[0].shape == (1, 1)', 'isinstance(after[0], ia.SegmentationMapOnImage)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 1)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 1)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 0 + 1)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 1)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 1)', 'isinstance(segmaps_norm[0], ia.SegmentationMapOnImage)', 'np.allclose(segmaps_norm[0].arr[..., 1], 1)', 'ntype == ', 'ntype == ', 'arr.dtype.type == np.bool_', 'observed.dtype.type == np.int32', 'np.array_equal(arr, observed)', 'arr.dtype.type == np.bool_', 'observed.dtype.type == np.int32', 'np.array_equal(arr, observed)', 'observed.dtype.type == np.int32', 'np.array_equal(arr, observed)', 'observed.dtype.type == np.int32', 'np.array_equal(observed, expected)', 'in str(exc)', 'observed.dtype.type == np.int32', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed_fg, expected_fg)', 'np.array_equal(observed, expected)', 'np.array_equal(observed_fg, expected_fg)', 'np.array_equal(observed, image)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'observed.shape == expected.shape', 'observed.shape == expected.shape', 'observed.shape == expected.shape', 'observed.shape == expected.shape', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.array_equal(segmap_scaled.get_arr_int(), np.int32([', 'np.allclose(observed, expected)', 'np.array_equal(segmap_scaled.get_arr_int(), np.int32([', 'np.allclose(observed, expected)', 'np.array_equal(segmap_scaled.get_arr_int(), np.int32([', 'np.allclose(heatmaps.arr_0to1, expected)', 'np.allclose(heatmaps.arr_0to1, expected)', 'len(class_indices) == 3', '[idx in class_indices for idx in [0, 1, 2]]', 'np.allclose(heatmaps.arr_0to1, expected)', 'len(class_indices) == 2', '[idx in class_indices for idx in [0, 2]]', 'heatmaps is None', 'len(class_indices) == 0', 'np.allclose(heatmaps.arr_0to1, np.zeros((2, 2), dtype=np.float32))', 'len(class_indices) == 1', '[idx in class_indices for idx in [0]]', 'np.allclose(segmap.arr, arr)', 'np.allclose(segmap.arr, expected)', 'np.allclose(observed.arr, segmap.arr)', 'observed.shape == (2, 2)', 'observed.nb_classes == segmap.nb_classes', 'observed.input_was == segmap.input_was', 'np.array_equal(observed.get_arr_int(), arr)', 'observed.nb_classes == 10', 'np.allclose(observed.arr, segmap.arr)', 'observed.shape == (2, 2)', 'observed.nb_classes == segmap.nb_classes', 'not np.allclose(observed.arr, segmap.arr)', 'np.array_equal(observed.get_arr_int(), segmap.get_arr_int())', 'observed.nb_classes == 10', 'not np.array_equal(observed.get_arr_int(), segmap.get_arr_int())', '75.0 > np.average(observed[~mask]) > np.average(img[~mask])', '75.0/255.0 > np.average(observed_arr[~mask]) > np.average(heatmaps_arr[~mask])', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.allclose(segmap_aug.arr, segmap.arr)', 'np.allclose(segmap_aug.arr, segmap.arr)', 'np.allclose(segmap_aug.arr, expected)', 'np.allclose(segmap_aug.arr, expected)', 'np.allclose(segmap_aug.arr, segmap.arr)', 'np.allclose(segmap_aug.arr, segmap.arr)', 'np.allclose(segmap_aug.arr, expected)', 'np.allclose(segmap_aug.arr, expected)', 'np.allclose(segmap_aug.arr, segmap.arr)', 'np.allclose(segmap_aug.arr, segmap.arr)', 'np.allclose(segmap_aug.arr, expected)', 'np.allclose(segmap_aug.arr, segmap.arr)', 'np.allclose(segmap_aug.arr, np.rot90(segmap.arr, -1))', 'np.allclose(segmaps_aug[0].arr, segmaps.arr)', 'np.allclose(segmaps_aug[0].arr, segmaps.arr)', 'np.allclose(segmaps_aug[0].arr, segmaps.arr)', 'np.allclose(segmaps_aug[0].arr, segmaps.arr)', 'np.allclose(segmaps_aug[0].arr, segmaps.arr)', 'np.allclose(segmaps_aug[0].arr, segmaps.arr)', 'np.allclose(segmaps_aug[0].arr, segmaps.arr)', 'np.array_equal(observed.get_arr(), heatmaps_arr_expected)', 'in samples', 'np.allclose(np.average(segmap.arr), 0.3016427)', 'np.allclose(np.average(segmap.arr), 0.450353)', 'np.allclose(np.average(segmap.arr), 0.30160266)']",[],[],[],[],[],[],[],[],[],[],[],[]
1642,aleju,kontakt@ajung.name,2019-04-20 22:07:20+02:00,ba097eae6b6edf610bd328f5e3c1467d1367dd6f,https://github.com/aleju/imgaug/commit/ba097eae6b6edf610bd328f5e3c1467d1367dd6f,Adjust SegMap aug check to new SegMap class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1643,aleju,kontakt@ajung.name,2019-04-20 22:07:39+02:00,e1ff861d61ace01a6d802f81f8c040ac1f4da291,https://github.com/aleju/imgaug/commit/e1ff861d61ace01a6d802f81f8c040ac1f4da291,Add SegMap changes to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1644,aleju,kontakt@ajung.name,2019-04-20 22:42:11+02:00,4db4b1342ad78ec1f2184c4bdf51f333fce33e22,https://github.com/aleju/imgaug/commit/4db4b1342ad78ec1f2184c4bdf51f333fce33e22,Fix errors in tests,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed.segmentation_maps_unaug[0].arr.shape == (1, 1, 1)']",[],[],[],[],[],[],[],[],[],[],[],[],"['observed.segmentation_maps_unaug[0].arr.shape == (1, 1, 20)']",[],[],[],[],[],[],[],[],[],[],[],[]
1645,aleju,kontakt@ajung.name,2019-05-06 16:43:27+02:00,d4182ee398db34c6f2b3e759fa068a6619d1d6f6,https://github.com/aleju/imgaug/commit/d4182ee398db34c6f2b3e759fa068a6619d1d6f6,Make some segmap changes less breaking,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1646,aleju,kontakt@ajung.name,2019-05-06 17:17:18+02:00,4a0b276b1d8ae565d0f096efbf7bc3088decf393,https://github.com/aleju/imgaug/commit/4a0b276b1d8ae565d0f096efbf7bc3088decf393,Improve changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1647,aleju,kontakt@ajung.name,2019-05-11 11:23:52+02:00,88d3f5b2f3d4e8b382c5336b5131bdb69422b0b4,https://github.com/aleju/imgaug/commit/88d3f5b2f3d4e8b382c5336b5131bdb69422b0b4,Rename input_was to _input_was in segmaps,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed._input_was == segmap._input_was', 'observed._input_was == segmap._input_was', 'observed._input_was == segmap._input_was', 'observed._input_was == segmap._input_was', 'observed._input_was == segmap._input_was', 'observed._input_was == segmap._input_was']",[],[],[],[],[],[],[],[],[],[],[],[],"['observed.input_was == segmap.input_was', 'observed.input_was == segmap.input_was', 'observed.input_was == segmap.input_was', 'observed.input_was == segmap.input_was', 'observed.input_was == segmap.input_was', 'observed.input_was == segmap.input_was']",[],[],[],[],[],[],[],[],[],[],[],[]
1648,aleju,kontakt@ajung.name,2019-07-05 19:46:53+02:00,25bef0daeec59b3d420003a9dc38c331e1c79b45,https://github.com/aleju/imgaug/commit/25bef0daeec59b3d420003a9dc38c331e1c79b45,Cleanup changelog for segmap changes,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1649,aleju,kontakt@ajung.name,2019-07-05 19:59:30+02:00,3f9f729c2f7f6e700ac01be27c4f41c6cc7cbdd1,https://github.com/aleju/imgaug/commit/3f9f729c2f7f6e700ac01be27c4f41c6cc7cbdd1,Fix segmap aug failing in PerspectiveTransform,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1650,aleju,kontakt@ajung.name,2019-07-22 20:50:41+02:00,3c53b99df5dc9f77c4897a358e02bb16de08aa74,https://github.com/aleju/imgaug/commit/3c53b99df5dc9f77c4897a358e02bb16de08aa74,Fix segmentation map test for Resize,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1651,aleju,kontakt@ajung.name,2019-07-22 21:17:37+02:00,69cb0ac914f48a5ed1f72676af29567ef498759a,https://github.com/aleju/imgaug/commit/69cb0ac914f48a5ed1f72676af29567ef498759a,Improve backwards compatibility of SegMaps init,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestSegmentationMapOnImage(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['segmap.arr.dtype.name == ', 'segmap.arr.shape == (1, 1, 1)', 'segmap.shape == (1, 1, 3)', 'len(caught_warnings) == 1', 'in str(caught_warnings[0].message)', 'np.array_equal(segmap.arr, arr_expected)', 'segmap.shape == (1, 1, 3)', 'len(caught_warnings) == 1', '(', 'np.array_equal(segmap.arr, arr_expected)', 'segmap.shape == (1, 1, 3)', 'len(caught_warnings) == 1', '(']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1652,aleju,kontakt@ajung.name,2019-07-22 21:28:17+02:00,edf6c9ef11948515f2c0d4e3eea078e7e5530cee,https://github.com/aleju/imgaug/commit/edf6c9ef11948515f2c0d4e3eea078e7e5530cee,Improve backwards compatibility of SegMaps.draw_on_image(),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(caught_warnings) == 1', '(', 'len(caught_warnings) == 1', '(']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1653,aleju,kontakt@ajung.name,2019-07-23 20:31:42+02:00,0efba8d9bc7a147eeb324207c5dffc4d8fe53fa2,https://github.com/aleju/imgaug/commit/0efba8d9bc7a147eeb324207c5dffc4d8fe53fa2,Extend migration steps for segmap changes,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1654,aleju,kontakt@ajung.name,2019-07-24 20:33:42+02:00,facac397bdafeb4120116a6ce71dc53c662237dd,https://github.com/aleju/imgaug/commit/facac397bdafeb4120116a6ce71dc53c662237dd,Replace dtype restoring in SegMap.get_arr() by simple astype(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1655,aleju,kontakt@ajung.name,2019-07-24 20:34:19+02:00,170b92e55d1f6b57220bf02a8d094dab886f7799,https://github.com/aleju/imgaug/commit/170b92e55d1f6b57220bf02a8d094dab886f7799,Fix typo,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1656,aleju,kontakt@ajung.name,2019-07-24 20:48:38+02:00,9fe351bfc8c3dfbec8a438a127a358b4800a7bd4,https://github.com/aleju/imgaug/commit/9fe351bfc8c3dfbec8a438a127a358b4800a7bd4,Re-enable background_class_id in SegMap.draw_on_image(),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(observed, list)', 'len(observed) == 1', 'observed[0].shape == expected.shape', 'd_max <= 1.0 + 1e-4']",[],[],[],[],[],[],[],[],[],[],[],[],"['len(caught_warnings) == 1', '(']",[],[],[],[],[],[],[],[],[],[],[],[]
1657,aleju,kontakt@ajung.name,2019-07-24 20:50:12+02:00,b5549a2c420d32ef778e1c9197f8b2bbd8d701e9,https://github.com/aleju/imgaug/commit/b5549a2c420d32ef778e1c9197f8b2bbd8d701e9,Change SegMap.pad() cval default from 0.0 to 0,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1658,aleju,kontakt@ajung.name,2019-07-24 20:50:39+02:00,60e7052d574cc30889e7233bb378c61fb802521a,https://github.com/aleju/imgaug/commit/60e7052d574cc30889e7233bb378c61fb802521a,Change SegMap.pad_to_aspect_ratio() cval default from 0.0 to 0,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1659,aleju,kontakt@ajung.name,2019-07-24 21:03:02+02:00,f468f640d5b07a4c3bea1c2b234acb11f697f7b3,https://github.com/aleju/imgaug/commit/f468f640d5b07a4c3bea1c2b234acb11f697f7b3,Forbid int64 and above in SegMap init,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['in str(exc)', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1660,aleju,kontakt@ajung.name,2019-07-24 21:27:55+02:00,4d594e01f1bebb81b5eab3ae07f388edaf83cc8e,https://github.com/aleju/imgaug/commit/4d594e01f1bebb81b5eab3ae07f388edaf83cc8e,Extend datatype support of 'size' arg in SegMap.draw(),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(observed, list)', 'len(observed) == 1', 'np.array_equal(observed[0], expected)', 'isinstance(observed, list)', 'len(observed) == 1', 'np.array_equal(observed[0], expected)']",[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(observed, list)', 'len(observed) == 1', 'np.array_equal(observed[0], expected)']",[],[],[],[],[],[],[],[],[],[],[],[]
1661,aleju,kontakt@ajung.name,2019-08-03 09:10:01+02:00,eeb420c9ed199952716f3a5ea505bb8ab089ad7b,https://github.com/aleju/imgaug/commit/eeb420c9ed199952716f3a5ea505bb8ab089ad7b,Improve docstrings and add examples,15,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1662,aleju,kontakt@ajung.name,2019-08-03 09:12:22+02:00,5b35f04f06232f2d624821f608685452013cc363,https://github.com/aleju/imgaug/commit/5b35f04f06232f2d624821f608685452013cc363,Fix AssertShape not using check_segmentation_maps,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1663,aleju,kontakt@ajung.name,2019-08-03 11:10:57+02:00,5c3263034b520f02c7d8e163285b6d1147580a3a,https://github.com/aleju/imgaug/commit/5c3263034b520f02c7d8e163285b6d1147580a3a,Improve/Fix cv2 backend in AddToHueAndSat.; add tests,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['table_hue[0, iv] == _hue(iv-255)  # add value: -255', 'table_hue[1, iv] == _hue(iv-254)  # add value: -254', 'table_hue[254, iv] == _hue(iv-1)  # add value: -1', 'table_hue[255, iv] == _hue(iv-0)  # add value: 0', 'table_hue[256, iv] == _hue(iv+1)  # add value: 1', 'table_hue[509, iv] == _hue(iv+254)  # add value: 254', 'table_hue[510, iv] == _hue(iv+255)  # add value: 255', 'table_saturation[0, iv] == _sat(iv-255)  # input: -255', 'table_saturation[1, iv] == _sat(iv-254)  # input: -254', 'table_saturation[254, iv] == _sat(iv-1)  # input: -1', 'table_saturation[255, iv] == _sat(iv+0)  # input: 0', 'table_saturation[256, iv] == _sat(iv+1)  # input: 1', 'table_saturation[509, iv] == _sat(iv+254)  # input: 254', 'table_saturation[510, iv] == _sat(iv+255)  # input: 255', 'np.array_equal(img_observed1, img_observed2)', 'np.array_equal(img_observed, img_expected)', 'np.array_equal(img_observed, img_expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1664,aleju,kontakt@ajung.name,2019-08-03 13:09:19+02:00,3daf123566918253738b0b82e0bc7a171ad0b0b0,https://github.com/aleju/imgaug/commit/3daf123566918253738b0b82e0bc7a171ad0b0b0,Remove unused import,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1665,aleju,kontakt@ajung.name,2019-08-03 13:23:25+02:00,cb3b2a320ae2c94cf94a1fa6f00b4faed5b70209,https://github.com/aleju/imgaug/commit/cb3b2a320ae2c94cf94a1fa6f00b4faed5b70209,Fix segmap normalization test accidentally using int64,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1666,aleju,kontakt@ajung.name,2019-08-03 14:53:58+02:00,d5573267e6b4a2a204b79daab2909bbc2753b625,https://github.com/aleju/imgaug/commit/d5573267e6b4a2a204b79daab2909bbc2753b625,Deactivate pad() linear_ramp test due to failure in np 1.17,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['arr_pad.shape == (5, 1)', 'arr_pad.dtype == np.dtype(dtype)', 'arr_pad[0, 0] == 0', 'arr_pad[1, 0] == 25', 'arr_pad[2, 0] == 50', 'arr_pad[3, 0] == 75', 'arr_pad[4, 0] == 100']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1667,aleju,kontakt@ajung.name,2019-08-03 20:14:35+02:00,e15651a5c8b66043995584ae79af86515549aadc,https://github.com/aleju/imgaug/commit/e15651a5c8b66043995584ae79af86515549aadc,"Adapt library to numpy 1.17 clip() behaviour

numpy.clip() in 1.17 no longer returns int64 for int64 inputs,
but instead float64 (+warning if using out=...). This causes
cascading failures throughout the library. Many augmenters
now no longer support int64 and some lower-resolution dtypes
or can give less guarantuees. This commit adapts various
augmenters to this new situation (actually, in most cases
just quick fixes to get running again). It also limits most
stochastic parameter's returned dtypes to uint32, int32
and float32 to ensure that no higher-resolution dtypes
are necessary during augmentation.",10,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,62,0,0,0,0,0,0,0,0,0,0,0,0,80,0,0,0,0,0,0,0,0,0,0,0,0,['class TestMultiply(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],['class TestMultiple(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'np.all(image_aug == min_value)', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(5 <= image_aug, image_aug <= 15))', 'len(np.unique(image_aug)) == 1', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(5 <= image_aug, image_aug <= 15))', 'len(np.unique(image_aug)) > 1', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) == 1', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) > 1', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 0)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == -10)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(5 <= image_aug, image_aug <= 15))', 'len(np.unique(image_aug)) > 1', 'np.all(image_aug[..., 0] == image_aug[..., 1])', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(5 <= image_aug, image_aug <= 15))', 'len(np.unique(image_aug)) > 1', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) > 1', 'np.all(image_aug[..., 0] == image_aug[..., 1])', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) > 1', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, max_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value)', 'np.all([val in aug.params1d[0].a for val in [1, 2]])', 'np.all(seen)', 'np.all([val in aug.params1d[0].a for val in [1, 2]])', 'np.all([np.allclose(val, val_choice) for val, val_choice in zip([0.25, 0.75], aug.params1d[1].a)])', 'np.all(seen)', 'np.all([val in aug.params1d[0].a for val in [1, 2]])', 'np.all(seen)', 'np.all([val in aug.params1d[0].a for val in [1, 2]])', 'np.all(seen)', 'np.all(seen)', 'np.all([isinstance(params[i], iap.Deterministic) for i in [0, 3]])', 'np.all(seen)', 'np.all([obs.shape == (3, 3, 3) for obs in [observed0, observed1, observed2, observed3]])', 'np.all(seen.values())', 'samples.dtype.name == ', 'np.isclose(sample, v1 * v2, atol=1e-3, rtol=0)', 'np.isclose(sample, v1 * v2, atol=1e-3, rtol=0)', 'np.isclose(sample, v1 + v2, atol=1e-3, rtol=0)', 'np.isclose(sample, v1 + v2, atol=1e-3, rtol=0)']",[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value)', 'np.all(np.logical_and(5 <= image_aug, image_aug <= 15))', 'len(np.unique(image_aug)) == 1', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(5 <= image_aug, image_aug <= 15))', 'len(np.unique(image_aug)) > 1', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) == 1', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) > 1', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 100)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == 0)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == -10)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == int(1.2 * int(center_value)))', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value)', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(5 <= image_aug, image_aug <= 15))', 'len(np.unique(image_aug)) > 1', 'np.all(image_aug[..., 0] == image_aug[..., 1])', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(5 <= image_aug, image_aug <= 15))', 'len(np.unique(image_aug)) > 1', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) > 1', 'np.all(image_aug[..., 0] == image_aug[..., 1])', 'image_aug.dtype.type == dtype', 'np.all(np.logical_and(10 <= image_aug, image_aug <= 30))', 'len(np.unique(image_aug)) > 1', 'image_aug.dtype.type == dtype', '_allclose(image_aug, 20.0)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == max_value)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == min_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, max_value)', 'image_aug.dtype.type == dtype', '_allclose(image_aug, min_value)', 'all([val in aug.params1d[0].a for val in [1, 2]])', 'all(seen)', 'all([val in aug.params1d[0].a for val in [1, 2]])', 'all([np.allclose(val, val_choice) for val, val_choice in zip([0.25, 0.75], aug.params1d[1].a)])', 'all(seen)', 'all([val in aug.params1d[0].a for val in [1, 2]])', 'all(seen)', 'all([val in aug.params1d[0].a for val in [1, 2]])', 'all(seen)', 'all(seen)', 'all([isinstance(params[i], iap.Deterministic) for i in [0, 3]])', 'all(seen)', 'all([obs.shape == (3, 3, 3) for obs in [observed0, observed1, observed2, observed3]])', 'all(seen.values())', 'samples.dtype == np.int64', 'v1 * v2 - _eps(sample) < sample < v1 * v2 + _eps(sample)', 'v1 * v2 - _eps(sample) < sample < v1 * v2 + _eps(sample)', 'v1 + v2 - _eps(sample) < sample < v1 + v2 + _eps(sample)', 'v1 + v2 - _eps(sample) < sample < v1 + v2 + _eps(sample)']",[],[],[],[],[],[],[],[],[],[],[],[]
1668,aleju,kontakt@ajung.name,2019-08-04 22:00:40+02:00,ad144cf86aa080c30859551c5b80a1cb20ab092b,https://github.com/aleju/imgaug/commit/ad144cf86aa080c30859551c5b80a1cb20ab092b,Introduce module imgaug.random,20,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(caught_warnings) == 4', 'len(caught_warnings) == 1', 'np.any(hits)', 'not all_same', 'all_same', 'len(caught_warnings) == 4', 'len(caught_warnings) == 1', 'np.any(hits)', 'np.any(img_ex > 10)', 'psoi_aug.shape == image.shape', 'count_bad <= 3', 'aug.random_state is iarandom.get_global_rng()', 'aug.random_state is not iarandom.get_global_rng()', 'iarandom.is_rng_identical_with(', 'len(caught_warnings) == 3', 'len(caught_warnings) == 1', 'np.any(hits)', 'aug.random_state is iarandom.get_global_rng()', 'aug_localized.random_state is not iarandom.get_global_rng()', '_same_rs(aug0_copy.random_state,', '_same_rs(aug0_copy[0].random_state, expected)', '_same_rs(aug0_copy.random_state,', '_same_rs(aug0_copy[0].random_state, expected)', 'not np.all(same)', 'not np.all(same)', 'not np.all(same)', 'not np.all(same)', 'len(caught_warnings) == 4', 'len(caught_warnings) == 1', 'np.any(hits)', 'iarandom.is_rng_identical_with(rs_s1_1, rs_s1_2)', 'not iarandom.is_rng_identical_with(rs_s1_1, rs_s2_1)', 'iarandom.is_rng_identical_with(rs_s1_1, rs_s1_2)', 'not iarandom.is_rng_identical_with(rs_s1_1, rs_s2_1)', 'seen[2] <= 2  # around 0.0', 'seen[3] <= 2  # 0.0+eps <= x < 15.0 or 35.0 < x < 50.0 or >50.0']",[],[],[],[],[],[],[],[],[],[],[],[],"['len(caught_warnings) == 1', '\\', 'not np.array_equal(result1, result2)', 'np.array_equal(result1, result2)', 'len(caught_warnings) == 1', '\\', 'img_aug[y, x] > 10', 'psoi_aug.shape == (100, 100)', 'count_bad <= 2', 'aug.random_state == ia.CURRENT_RANDOM_STATE', 'aug.random_state != ia.CURRENT_RANDOM_STATE', 'aug.random_state.randint(0, 10**6) == np.random.RandomState(123).randint(0, 10**6)', 'len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)', 'aug.random_state == ia.CURRENT_RANDOM_STATE', 'aug_localized.random_state != ia.CURRENT_RANDOM_STATE', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', 'aug0_copy.random_state.randint(0, 10**6) == expected', 'aug0_copy.random_state.randint(0, 10**6) == expected', 'not np.allclose(points1, points2, atol=1e-2, rtol=0)', 'len(points1) > 1', 'not np.allclose(points1, points2, atol=1e-2, rtol=0)', 'len(points1) > 1', 'len(points1) > 1', 'len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)', 'all_s1_identical', 'not all_s1s2_identical', 'all_s1_identical', 'not all_s1s2_identical', 'False', 'seen[2] < 5']",[],[],[],[],[],[],[],[],[],[],[],[]
1669,aleju,kontakt@ajung.name,2019-08-07 20:58:26+02:00,e8e61cc0d25d63e9325c75938e82a8f6a27e9848,https://github.com/aleju/imgaug/commit/e8e61cc0d25d63e9325c75938e82a8f6a27e9848,Refactor library to directly call new random module everywhere,29,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(caught_warnings) == 1', '(', 'len(caught_warnings) == 1', '(', 'len(caught_warnings) == 1', '(', 'len(caught_warnings) == 1', '(', '20 < np.average(imgs_aug) < 250', 'np.max(imgs_aug) > 150', 'np.sum(np.abs(grad_x)) > 5 * img.shape[1]', 'np.sum(np.abs(grad_y)) > 5 * img.shape[0]', '50 < np.average(imgs_aug) < 255', 'np.max(imgs_aug) > 100', 'np.sum(np.abs(grad_x)) > 1 * img.shape[1]', 'np.sum(np.abs(grad_y)) > 1 * img.shape[0]', '0.01 < np.average(imgs_aug) < 100', 'np.max(imgs_aug) > 100', 'np.sum(np.abs(grad_x)) > 5 * img.shape[1]', 'np.sum(np.abs(grad_y)) > 5 * img.shape[0]', '(', 'ununiform_uniformity < uniform_uniformity']",[],[],[],[],[],[],[],[],[],[],[],[],"['len(caught_warnings) == 4', 'len(caught_warnings) == 1', 'np.any(hits)', 'len(caught_warnings) == 4', 'len(caught_warnings) == 1', 'np.any(hits)', 'len(caught_warnings) == 3', 'len(caught_warnings) == 1', 'np.any(hits)', 'len(caught_warnings) == 4', 'len(caught_warnings) == 1', 'np.any(hits)', '20 < np.average(img_aug) < 250', 'np.max(img_aug) > 150', 'np.sum(np.abs(grad_x)) > 5 * img.shape[1]', 'np.sum(np.abs(grad_y)) > 5 * img.shape[0]', '50 < np.average(img_aug) < 255', 'np.max(img_aug) > 100', 'np.sum(np.abs(grad_x)) > 1 * img.shape[1]', 'np.sum(np.abs(grad_y)) > 1 * img.shape[0]', '0.01 < np.average(img_aug) < 100', 'np.max(img_aug) > 100', 'np.sum(np.abs(grad_x)) > 5 * img.shape[1]', 'np.sum(np.abs(grad_y)) > 5 * img.shape[0]', 'np.average(img_aug_undense) < np.average(img_aug_dense)', '(']",[],[],[],[],[],[],[],[],[],[],[],[]
1670,Ben Cook,jbenjamincook@gmail.com,2019-08-08 10:08:32-05:00,3caa234478928b3a06eae517e787cdd7387bbcb2,https://github.com/aleju/imgaug/commit/3caa234478928b3a06eae517e787cdd7387bbcb2,get fix for new numpy,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1671,aleju,kontakt@ajung.name,2019-08-10 10:54:49+02:00,5e44e584a3150ff87e754676d8f677123e5516af,https://github.com/aleju/imgaug/commit/5e44e584a3150ff87e754676d8f677123e5516af,Fix bad test for Poisson,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['0 <= sample'],[],[],[],[],[],[],[],[],[],[],[],[],['0 < sample'],[],[],[],[],[],[],[],[],[],[],[],[]
1672,aleju,kontakt@ajung.name,2019-08-10 10:57:22+02:00,7a588d0e2ade8d991fe069d3abb7737377d7a5c1,https://github.com/aleju/imgaug/commit/7a588d0e2ade8d991fe069d3abb7737377d7a5c1,Fix sometimes failing NP 1.17 check,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1673,aleju,kontakt@ajung.name,2019-08-10 10:57:43+02:00,9aa7db6d3ccd79641cfe1c9e25519e79900c7143,https://github.com/aleju/imgaug/commit/9aa7db6d3ccd79641cfe1c9e25519e79900c7143,Simplify RNG functions,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1674,aleju,kontakt@ajung.name,2019-08-10 21:58:37+02:00,9961341e2bc13d2603f01ea08c3b9e995188d7f2,https://github.com/aleju/imgaug/commit/9961341e2bc13d2603f01ea08c3b9e995188d7f2,Introduce class imgaug.random.RNG,20,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['colorizer.color_true.last_random_state.equals(random_state)', 'colorizer.color_false.last_random_state.equals(random_state)', 'aug.random_state.generator is iarandom.get_global_rng().generator', 'aug.random_state.generator is rs.generator', 'aug.random_state.equals(iarandom.RNG(123))', 'aug.random_state.is_global_rng()', '_same_rs(aug0_copy.random_state, iarandom.RNG(123))', 'target_cprs.random_state.equals(source_alt.random_state)', 'target_cprs[i].random_state.equals(source_alt[i].random_state)', 'target_cprs[0].deterministic is True', 'aug.random_state.equals(rs)', 'aug.random_state.equals(rs)', 'aug.random_state.equals(rs)', 'rs_s1_1.equals(rs_s1_2)', 'not rs_s1_1.equals(rs_s2_1)', 'rs_s1_1.equals(rs_s1_2)', 'not rs_s1_1.equals(rs_s2_1)']",[],[],[],[],[],[],[],[],[],[],[],[],"['colorizer.color_true.last_random_state == random_state', 'colorizer.color_false.last_random_state == random_state', 'aug.random_state is iarandom.get_global_rng()', 'aug.random_state == rs', 'iarandom.is_rng_identical_with(', 'aug.random_state is iarandom.get_global_rng()', '_same_rs(aug0_copy.random_state,', 'target_cprs[0].deterministic == True', 'aug.random_state is rs', 'aug.random_state is rs', 'aug.random_state is rs', 'iarandom.is_rng_identical_with(rs_s1_1, rs_s1_2)', 'not iarandom.is_rng_identical_with(rs_s1_1, rs_s2_1)', 'iarandom.is_rng_identical_with(rs_s1_1, rs_s1_2)', 'not iarandom.is_rng_identical_with(rs_s1_1, rs_s2_1)']",[],[],[],[],[],[],[],[],[],[],[],[]
1675,aleju,kontakt@ajung.name,2019-08-11 09:53:52+02:00,a39951376bb880c89239cbdfd69ca769785b83f5,https://github.com/aleju/imgaug/commit/a39951376bb880c89239cbdfd69ca769785b83f5,Improve function and argument names in imgaug.random,6,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['aug.random_state.is_global_rng()', 'not aug.random_state.is_global_rng()', 'not aug_localized.random_state.is_global_rng()']",[],[],[],[],[],[],[],[],[],[],[],[],"['aug.random_state.generator is iarandom.get_global_rng().generator', 'aug.random_state is not iarandom.get_global_rng()', 'aug_localized.random_state is not iarandom.get_global_rng()']",[],[],[],[],[],[],[],[],[],[],[],[]
1676,aleju,kontakt@ajung.name,2019-08-11 12:33:58+02:00,dbb28a19e7eae06aa75931f1e92354d86a193a77,https://github.com/aleju/imgaug/commit/dbb28a19e7eae06aa75931f1e92354d86a193a77,Fix random.seed() crashing in numpy <=1.16,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1677,aleju,kontakt@ajung.name,2019-08-11 14:50:06+02:00,fccb1d53430813dc3daa6c8e5d674419b84e5977,https://github.com/aleju/imgaug/commit/fccb1d53430813dc3daa6c8e5d674419b84e5977,Fix comparison for RandomStates,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1678,aleju,kontakt@ajung.name,2019-08-11 14:50:47+02:00,3326e5fcae11a6723c0f6a8db0bf56c3a8d04eef,https://github.com/aleju/imgaug/commit/3326e5fcae11a6723c0f6a8db0bf56c3a8d04eef,Remove RNG copies wherever possible,15,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1679,aleju,kontakt@ajung.name,2019-08-11 18:22:32+02:00,774161497936bcd330b7b53c8038801e8e1799ce,https://github.com/aleju/imgaug/commit/774161497936bcd330b7b53c8038801e8e1799ce,Add and improve docstrings in imgaug.random module,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1680,aleju,kontakt@ajung.name,2019-08-13 13:29:11+02:00,b0f5220c429de3161b410378ecad277c3a50bf46,https://github.com/aleju/imgaug/commit/b0f5220c429de3161b410378ecad277c3a50bf46,Fix various issues in .random and clean up code,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1681,aleju,kontakt@ajung.name,2019-08-13 13:30:41+02:00,fa4ec0890a553789e5b8fb95f035f1c6e61cc977,https://github.com/aleju/imgaug/commit/fa4ec0890a553789e5b8fb95f035f1c6e61cc977,Add tests for functions in .random,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,25,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,167,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class _Base(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],"['not IS_NP_117_OR_HIGHER,', 'not IS_NP_117_OR_HIGHER,', 'not IS_NP_117_OR_HIGHER,', 'not IS_NP_117_OR_HIGHER,', 'not IS_NP_117_OR_HIGHER,', 'not IS_NP_117_OR_HIGHER,', 'not IS_NP_117_OR_HIGHER,', 'not IS_NP_117_OR_HIGHER,', 'not IS_NP_117_OR_HIGHER,', 'not IS_NP_117_OR_HIGHER,', 'not IS_NP_117_OR_HIGHER,', 'not IS_NP_117_OR_HIGHER,', 'not IS_NP_117_OR_HIGHER,', 'not IS_NP_117_OR_HIGHER,', 'not IS_NP_117_OR_HIGHER,', 'not IS_NP_117_OR_HIGHER,', 'not IS_NP_117_OR_HIGHER,', 'not IS_NP_117_OR_HIGHER,', 'not IS_NP_117_OR_HIGHER,', 'not IS_NP_117_OR_HIGHER,', 'not IS_NP_117_OR_HIGHER,', 'not IS_NP_117_OR_HIGHER,', 'not IS_NP_117_OR_HIGHER,', 'not IS_NP_117_OR_HIGHER,', 'not IS_NP_117_OR_HIGHER,']",[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['iarandom.SUPPORTS_NEW_NP_RNG_STYLE is IS_NP_117_OR_HIGHER', 'iarandom.GLOBAL_RNG is not None', 'iarandom.supports_new_numpy_rng_style() is IS_NP_117_OR_HIGHER', 'rng is not None', 'rng.equals(expected)', 'mock_np116.call_count == 0', 'mock_np117.call_count == 0', 'iarandom.GLOBAL_RNG.equals(iarandom.RNG(1))', 'iarandom.CURRENT_RANDOM_STATE is iarandom.GLOBAL_RNG', 'mock_subfunc.call_count == 1', 'mock_subfunc.call_args[0][0] is not inputs', 'mock_subfunc.call_args[0][0] == inputs', 'result == ', 'result == ', 'mock_np116.call_count == 0', 'result == ', 'mock_np117.call_count == 0', 'result is iarandom.get_global_rng().generator', 'iarandom.is_generator_equal_to(result, expected)', 'result.bit_generator is bgen', 'result is gen', 'iarandom.is_generator_equal_to(result, expected)', 'result is rs', 'iarandom.is_generator_equal_to(result, expected)', 'result == ', 'mock_np116.call_count == 0', 'result == ', 'mock_np117.call_count == 0', 'iarandom.is_generator_equal_to(gen, expected)', 'iarandom.is_generator_equal_to(gen, expected)', 'iarandom.is_generator_equal_to(gen, expected)', 'iarandom.is_generator_equal_to(gen, expected)', 'result == ', 'mock_np116.call_count == 0', 'result == ', 'mock_np117.call_count == 0', 'iarandom.is_generator_equal_to(', 'iarandom.is_generator_equal_to(result, np.random.RandomState(1))', 'len(seeds) == 2', 'ia.is_np_array(seeds)', 'seeds.dtype.name == ', 'gen_copy == ', 'gen_copy == ', 'gen is not gen_copy', 'iarandom.is_generator_equal_to(gen, gen_copy)', 'gen is not gen_copy', 'iarandom.is_generator_equal_to(gen, gen_copy)', 'mock_copy.call_count == 0', 'result is gen', 'result == ', 'result == ', 'mock_np116.call_count == 0', 'result == ', 'mock_np117.call_count == 0', 'iarandom.is_generator_equal_to(gen_cache_reset,', 'not iarandom.is_generator_equal_to(gen_cache_reset,', 'iarandom.is_generator_equal_to(gen_cache_reset,', 'not iarandom.is_generator_equal_to(gen_cache_reset,', 'gen_derived == ', 'not iarandom.is_generator_equal_to(gen_derived, gen_copy)', 'not iarandom.is_generator_equal_to(gen_copy, gen)', 'result == ', 'mock_np117.call_count == 0', 'result == ', 'mock_np116.call_count == 0', 'len(result) == 2', 'np.all([isinstance(gen, np.random.Generator)', 'not iarandom.is_generator_equal_to(result[0], gen_copy)', 'not iarandom.is_generator_equal_to(result[1], gen_copy)', 'not iarandom.is_generator_equal_to(result[0], result[1])', 'not iarandom.is_generator_equal_to(gen, gen_copy)', 'len(result) == 2', 'np.all([isinstance(gen, np.random.RandomState)', 'not iarandom.is_generator_equal_to(result[0], gen_copy)', 'not iarandom.is_generator_equal_to(result[1], gen_copy)', 'not iarandom.is_generator_equal_to(result[0], result[1])', 'not iarandom.is_generator_equal_to(gen, gen_copy)', 'result == ', 'mock_np117.call_count == 0', 'result == ', 'mock_np116.call_count == 0', 'str(state) == str(gen.bit_generator.state)', 'str(state) == str(gen.bit_generator.state)', 'mock_np117.call_count == 0', 'mock_np116.call_count == 0', 'iarandom.is_generator_equal_to(gen2, gen1)', 'iarandom.is_generator_equal_to(gen1, gen1_copy)', 'not iarandom.is_generator_equal_to(gen2, gen2_copy)', 'np.allclose(samples1, samples2)', 'np.allclose(samples1, samples1_copy)', 'not np.allclose(samples2, samples2_copy)', 'iarandom.is_generator_equal_to(gen2, gen1)', 'iarandom.is_generator_equal_to(gen1, gen1_copy)', 'not iarandom.is_generator_equal_to(gen2, gen2_copy)', 'np.allclose(samples1, samples2)', 'np.allclose(samples1, samples1_copy)', 'not np.allclose(samples2, samples2_copy)', 'result == ', 'mock_np117.call_count == 0', 'result == ', 'mock_np116.call_count == 0', 'result is True', 'result is True', 'result is True', 'result is True', 'result is True', 'result is True', 'result is False', 'result is False', 'result is True', 'result is True', 'mock_np117.call_count == 0', 'mock_np116.call_count == 0', 'iarandom.is_generator_equal_to(gen, copylib.deepcopy(gen))', 'not iarandom.is_generator_equal_to(gen_copy1, gen_copy2)', 'not iarandom.is_generator_equal_to(gen_copy2, gen)', 'not iarandom.is_generator_equal_to(gen_copy1, gen)', 'iarandom.is_generator_equal_to(gen, copylib.deepcopy(gen))', 'not iarandom.is_generator_equal_to(gen_copy1, gen_copy2)', 'not iarandom.is_generator_equal_to(gen_copy2, gen)', 'not iarandom.is_generator_equal_to(gen_copy1, gen)', 'not np.isclose(sample_after, sample_before, rtol=0)', 'not np.isclose(sample_after_after, sample_after, rtol=0)', 'not np.isclose(sample_after_after, sample_before, rtol=0)', 'not np.isclose(sample_after, sample_before, rtol=0)', 'not np.isclose(sample_after_after, sample_after, rtol=0)', 'not np.isclose(sample_after_after, sample_before, rtol=0)', 'result == ', 'result == ', 'result == ', 'result == ', 'result == ', 'result == ', 'result.dtype.name == ', 'np.all(result >= 1)', 'np.all(result < 10)', 'result.dtype.name == ', 'np.all(result >= 1)', 'np.all(result <= 10)', 'result.dtype.name == ', 'np.all(result >= 1)', 'np.all(result < 10)', 'result.dtype.name == ', 'np.all(result >= 1)', 'np.all(result <= 10)', 'result.dtype.name == ', 'result == ', 'result.dtype.name == ', 'result == ', 'result.dtype.name == ', 'np.all(result >= 0)', 'np.all(result < 1.0)', 'result.dtype.name == ', 'np.all(result >= 0)', 'np.all(result < 1.0)', 'result.dtype.name == ', 'np.all(result >= 0)', 'np.all(result < 1.0)', 'np.any(out > 0.9)', 'np.all(out >= 0)', 'np.all(out < 1.0)', 'result.dtype.name == ', 'np.all(result >= 0)', 'np.all(result < 1.0)', 'np.any(out > 0.9)', 'np.all(out >= 0)', 'np.all(out < 1.0)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1682,aleju,kontakt@ajung.name,2019-08-13 17:00:12+02:00,6e3bd7a4d9f45f147fed6a9e59f5251e8f63e308,https://github.com/aleju/imgaug/commit/6e3bd7a4d9f45f147fed6a9e59f5251e8f63e308,Fix ignored out arg in .random & fix docstring errors,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1683,aleju,kontakt@ajung.name,2019-08-13 17:00:49+02:00,32d7651009b1d708a498da67959abef9c7310a62,https://github.com/aleju/imgaug/commit/32d7651009b1d708a498da67959abef9c7310a62,Add tests for random.RNG,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['rng2.generator is rng1.generator', 'result == ', 'result is rng', 'result == rng1', 'rng1.is_global_rng() is True', 'rng1.is_global_rng() is False', 'rng1.equals_global_rng() is True', 'rng1.equals_global_rng() is False', 'seed == -1', 'seeds == [-1, -2]', 'result is rng', 'result.generator is gen', 'result[0].generator is gen1', 'result[1].generator is gen2', 'result == ', 'rng1.equals(rng2)', 'rng1.equals(rng2)', 'not rng1.equals(rng2)', 'not rng1.equals(rng2)', 'result is rng', 'result.generator is rng2.generator', 'result is rng', 'mock_copy.call_count == 0', 'result is ', 'rngs == [rng]', 'rngs == [rng, rng]', 'rng.generator is gen', 'result.generator is rng.generator', 'result == ', 'result == ', 'result == ', 'result == ', 'np.allclose(result, arr_result)', 'np.allclose(arr_out, arr_result)', 'result == ', 'np.allclose(result, arr_result)', 'np.allclose(arr_out, arr_result)', 'result == ', 'np.allclose(result, arr_result)', 'np.allclose(arr_out, arr_result)', 'result == ']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1684,aleju,kontakt@ajung.name,2019-08-13 19:22:01+02:00,9ffc68df7165e10b87aa4f9cafefc814083a3a69,https://github.com/aleju/imgaug/commit/9ffc68df7165e10b87aa4f9cafefc814083a3a69,Update docstrings for random_state args wrt supported datatypes,16,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1685,aleju,kontakt@ajung.name,2019-08-14 09:11:44+02:00,5c86abf1a068a25b31630825111d4fd817cd7ec1,https://github.com/aleju/imgaug/commit/5c86abf1a068a25b31630825111d4fd817cd7ec1,Improve sampling order of parameters,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1686,aleju,kontakt@ajung.name,2019-08-14 09:52:39+02:00,0c84bc1e62278518f68222c2af1679608f0ce380,https://github.com/aleju/imgaug/commit/0c84bc1e62278518f68222c2af1679608f0ce380,Fix .random tests for numpy <1.17 and older mock versions,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['mock_bitgen.call_count == 1', 'mock_rs.call_count == 1', 'mock_get_global_rng.call_count == 1', 'mock_get_global_rng.call_count == 1', 'str(state) == str(gen.get_state())']",[],[],[],[],[],[],[],[],[],[],[],[],"['iarandom.CURRENT_RANDOM_STATE is iarandom.GLOBAL_RNG', 'str(state) == str(gen.bit_generator.state)']",[],[],[],[],[],[],[],[],[],[],[],[]
1687,aleju,kontakt@ajung.name,2019-08-14 09:54:13+02:00,d896828906244bd7e8411430d18e1604f2c87442,https://github.com/aleju/imgaug/commit/d896828906244bd7e8411430d18e1604f2c87442,"Remove CURRENT_RANDOM_STATE, remove default for n in derive_generators_()",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1688,aleju,kontakt@ajung.name,2019-08-14 10:10:32+02:00,d78f2e542942b1c2a78312c20e356749307c9462,https://github.com/aleju/imgaug/commit/d78f2e542942b1c2a78312c20e356749307c9462,Remove todo,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1689,aleju,kontakt@ajung.name,2019-08-14 10:31:38+02:00,4d9c706384b957da18ea5126752c14431b732da3,https://github.com/aleju/imgaug/commit/4d9c706384b957da18ea5126752c14431b732da3,Rename copy_generator_unless_global_rng() to *_global_generator(),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1690,aleju,kontakt@ajung.name,2019-08-14 10:55:39+02:00,965888aeb7daaad0fd41df046dd22b1e46d451e4,https://github.com/aleju/imgaug/commit/965888aeb7daaad0fd41df046dd22b1e46d451e4,Refactor in-place marking of seed(),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1691,aleju,kontakt@ajung.name,2019-08-14 10:56:08+02:00,63150cd5a719dd521678ab9fa4ee045dc769999f,https://github.com/aleju/imgaug/commit/63150cd5a719dd521678ab9fa4ee045dc769999f,Switch call of imgaug.seed() to imgaug.random.seed(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1692,aleju,kontakt@ajung.name,2019-08-14 10:56:37+02:00,5a70bec209d283e25aa001ba54127f8763c02195,https://github.com/aleju/imgaug/commit/5a70bec209d283e25aa001ba54127f8763c02195,Remove deprecation warning from imgaug.imgaug.seed(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1693,aleju,kontakt@ajung.name,2019-08-14 11:23:08+02:00,cfe083ba9446f74fb076f72d0cc6f2353f7d32c2,https://github.com/aleju/imgaug/commit/cfe083ba9446f74fb076f72d0cc6f2353f7d32c2,"Refactor, fix and improve docs of old random functions",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1694,aleju,kontakt@ajung.name,2019-08-14 11:23:35+02:00,1224234bd7eefe0150bd49af31c6a19f306205c7,https://github.com/aleju/imgaug/commit/1224234bd7eefe0150bd49af31c6a19f306205c7,Reactivate and adapt tests for old random functions,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['rng.is_global_rng()', 'len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)', 'mock_rng.create_pseudo_random_.call_count == 1', 'len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)', 'mock_rng.create_fully_random.call_count == 1', 'len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)', 'len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)', 'len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)', 'mock_copy_gen.call_count == 0', 'len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)', 'mock_copy_gen_glob.call_count == 0', 'len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)', 'len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)', 'len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)', 'len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)']",[],[],[],[],[],[],[],[],[],[],[],[],"['ia.CURRENT_RANDOM_STATE.randint(0, 1000*1000) == rs.randint(0, 1000*1000)', 'ia.current_random_state() == ia.CURRENT_RANDOM_STATE', 'rs_observed.randint(0, 10**6) == rs_expected.randint(0, 10**6)', 'rs_observed1.randint(0, 10**6) != rs_observed2.randint(0, 10**6)', 'rs_observed.randint(0, 10**6) != rs_not_expected.randint(0, 10**6)', 'rs_observed1.randint(0, 10**6) != rs_observed2.randint(0, 10**6)', 'rs_observed1.randint(0, 10**6) == rs_observed2.randint(0, 10**6) == rs_expected.randint(0, 10**6)', 'ia.dummy_random_state().randint(0, 10**6) == np.random.RandomState(1).randint(0, 10**6)', 'rs != rs_copy', 'rs.randint(0, 10**6) == rs_copy.randint(0, 10**6)', 'ia.copy_random_state(np.random) == np.random', 'ia.copy_random_state(np.random, force_copy=True) != np.random', 'rs_observed.randint(0, 10**6) == rs_expected.randint(0, 10**6)', 'rs_observed1.randint(0, 10**6) == rs_expected1.randint(0, 10**6)', 'rs_observed2.randint(0, 10**6) == rs_expected2.randint(0, 10**6)', 'rs1.randint(0, 10**6) == rs2.randint(0, 10**6)']",[],[],[],[],[],[],[],[],[],[],[],[]
1695,aleju,kontakt@ajung.name,2019-08-14 11:24:41+02:00,76b40a5e0365f3fe5aabbd087b9dbc5c31f6e3db,https://github.com/aleju/imgaug/commit/76b40a5e0365f3fe5aabbd087b9dbc5c31f6e3db,Remove redundant deprecation markers,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1696,aleju,kontakt@ajung.name,2019-08-14 11:35:02+02:00,a84290d52af025de83911e65a186e41b50d6d9d4,https://github.com/aleju/imgaug/commit/a84290d52af025de83911e65a186e41b50d6d9d4,Change global RNG default seed & add seed constant,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1697,aleju,kontakt@ajung.name,2019-08-14 13:32:21+02:00,01f0f03f17c29775498ab9f8e6d283145982f2f6,https://github.com/aleju/imgaug/commit/01f0f03f17c29775498ab9f8e6d283145982f2f6,Fix TruncatedNormal crashing with RNG,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1698,aleju,kontakt@ajung.name,2019-08-14 13:32:36+02:00,2d5ee317682f7fe8bf8b1bf6e68652c10a065986,https://github.com/aleju/imgaug/commit/2d5ee317682f7fe8bf8b1bf6e68652c10a065986,Add tests for TruncatedNormal,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestTruncatedNormal(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['(', '(', 'np.allclose(samples, 0.5)', 'np.std(samples1) < np.std(samples2)', 'np.isclose(np.std(samples1), 0.1, rtol=0, atol=0.20)', 'np.isclose(np.std(samples2), 5.0, rtol=0, atol=0.40)', 'False', 'np.isclose(seen[0], 100, rtol=0, atol=20)', 'np.isclose(seen[1], 100, rtol=0, atol=20)', 'np.all(samples >= -5.0 - 1e-4)', 'np.all(samples <= 7.5 + 1e-4)', 'np.any(samples <= -4.5)', 'np.any(samples >= 7.0)', 'np.any(np.abs(samples) < 0.5)', 'np.allclose(samples1, samples2)', 'not np.allclose(samples1, samples2)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1699,aleju,kontakt@ajung.name,2019-08-14 13:37:19+02:00,6be0ea1137b1db1d98eae361c315c3e418f45b5b,https://github.com/aleju/imgaug/commit/6be0ea1137b1db1d98eae361c315c3e418f45b5b,Update changelog with .random changes,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1700,aleju,kontakt@ajung.name,2019-08-14 13:54:47+02:00,fba8ce4ef3b02062a5dceffd310dae569492829f,https://github.com/aleju/imgaug/commit/fba8ce4ef3b02062a5dceffd310dae569492829f,Decrease stochasticity of test,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1701,aleju,kontakt@ajung.name,2019-08-14 13:55:14+02:00,c0a11bce703380849863cd22b9feb227b6f2333a,https://github.com/aleju/imgaug/commit/c0a11bce703380849863cd22b9feb227b6f2333a,Add module-level docstring for .random module,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1702,aleju,kontakt@ajung.name,2019-08-14 14:10:37+02:00,44f9f3bf78341f53d862286860303fc0a1b84156,https://github.com/aleju/imgaug/commit/44f9f3bf78341f53d862286860303fc0a1b84156,Fix test failing in py2.7,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1703,aleju,kontakt@ajung.name,2019-08-14 20:24:49+02:00,46bf1030715b6fd7b3e945a9b2821eeec2149f36,https://github.com/aleju/imgaug/commit/46bf1030715b6fd7b3e945a9b2821eeec2149f36,Add --durations to travis pytest,1,False,False,False,False,False,True,True,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1704,aleju,kontakt@ajung.name,2019-08-15 14:54:45+02:00,1c29a460f378ff1c9f53cfde803c635c3a12ee02,https://github.com/aleju/imgaug/commit/1c29a460f378ff1c9f53cfde803c635c3a12ee02,"Change docstrings from multiline datatypes to singleline datatypes

This patch changes how the datatypes of parameter are formatted
in docstrings.

For some datatype definitions of parameters in docstrings, the
different allowed datatypes were split over multiple lines to
make them easier to read and to avoid breaking the line length
limit. This is now changed so that these datatype definitions
always only consist of a single line, even if that severely
breaks the line length limit.

This is often horrendously ugly and very hard to read.
Unfortunately it seems to be the only format that is both
understood by Sphinx (when generating ReadTheDocs pages)
and PyCharm. Various ways seem to exist that make multiline
datatype definitions work in either of these cases, but
none that works in both cases. That is why it is now changed
to singleline definitions.",11,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1705,aleju,kontakt@ajung.name,2019-08-15 22:23:46+02:00,71afa342221a18100c3b13373b8995d5b85e470c,https://github.com/aleju/imgaug/commit/71afa342221a18100c3b13373b8995d5b85e470c,"Add error messages to all asserts, replace do_assert by assert",28,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(list1, list), (', 'isinstance(list2, list), (']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1706,aleju,kontakt@ajung.name,2019-08-15 22:24:58+02:00,dcd466a66e9f69e43c232800567d856f5821bf00,https://github.com/aleju/imgaug/commit/dcd466a66e9f69e43c232800567d856f5821bf00,Add PR ID to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1707,aleju,kontakt@ajung.name,2019-08-16 09:35:01+02:00,562976ee11aaf0eef7190b71c05172112299cd52,https://github.com/aleju/imgaug/commit/562976ee11aaf0eef7190b71c05172112299cd52,Improve code style of blend module,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1708,aleju,kontakt@ajung.name,2019-08-16 10:05:43+02:00,4e28ad08101388d4611eddf79f2c8eeeed1f9d75,https://github.com/aleju/imgaug/commit/4e28ad08101388d4611eddf79f2c8eeeed1f9d75,Improve code style of blur module,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1709,aleju,kontakt@ajung.name,2019-08-16 10:48:12+02:00,1439ff31bd2062be2854505a87ceedf1170e5309,https://github.com/aleju/imgaug/commit/1439ff31bd2062be2854505a87ceedf1170e5309,Improve code style of contrast module,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1710,aleju,kontakt@ajung.name,2019-08-16 10:52:14+02:00,e2ce1a2c4d7f27195d443978aa9311c0901ff6e3,https://github.com/aleju/imgaug/commit/e2ce1a2c4d7f27195d443978aa9311c0901ff6e3,Improve code style of flip module,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1711,aleju,kontakt@ajung.name,2019-08-16 14:09:18+02:00,f98d7f30e941330e575412670a310a979bc21eba,https://github.com/aleju/imgaug/commit/f98d7f30e941330e575412670a310a979bc21eba,Improve code style in geometric module,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1712,aleju,kontakt@ajung.name,2019-08-16 22:21:21+02:00,ec083887bfaf010fd44149c56af2f5fbc04cd6d0,https://github.com/aleju/imgaug/commit/ec083887bfaf010fd44149c56af2f5fbc04cd6d0,Improve code style and docstrings of .meta module,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1713,aleju,kontakt@ajung.name,2019-08-17 11:01:46+02:00,6b575f0d396596fabfb44db05078ce007649e278,https://github.com/aleju/imgaug/commit/6b575f0d396596fabfb44db05078ce007649e278,Improve code style and docstrings of .segmentation module,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1714,aleju,kontakt@ajung.name,2019-08-17 14:26:26+02:00,9779f3c90b1aee03264b67c83862dd52491f7ce7,https://github.com/aleju/imgaug/commit/9779f3c90b1aee03264b67c83862dd52491f7ce7,Improve code style and docstrings of .size module,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1715,aleju,kontakt@ajung.name,2019-08-17 14:43:38+02:00,6c52c0454a973ec83c7ca24cf7fad6ff8fc1cdea,https://github.com/aleju/imgaug/commit/6c52c0454a973ec83c7ca24cf7fad6ff8fc1cdea,Improve code style and docstrings of .weather module,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1716,aleju,kontakt@ajung.name,2019-08-17 18:48:28+02:00,875770d071d1577801ac3b8cda8058d722942363,https://github.com/aleju/imgaug/commit/875770d071d1577801ac3b8cda8058d722942363,Improve code style and docstrings of .parameters module,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1717,aleju,kontakt@ajung.name,2019-08-17 21:16:40+02:00,72551f95a792df1f338c60585227c19150ced9d9,https://github.com/aleju/imgaug/commit/72551f95a792df1f338c60585227c19150ced9d9,Fix docstring example errors and pylint warnings,3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1718,aleju,kontakt@ajung.name,2019-08-18 10:28:46+02:00,139749d3a2d3cb1a6401100e16fd88b40d4245db,https://github.com/aleju/imgaug/commit/139749d3a2d3cb1a6401100e16fd88b40d4245db,Improve code style and docstrings of .imgaug module,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1719,aleju,kontakt@ajung.name,2019-08-18 10:49:55+02:00,50c1b7a5150b75e4ce0d1b07646afde1fc1574e3,https://github.com/aleju/imgaug/commit/50c1b7a5150b75e4ce0d1b07646afde1fc1574e3,Improve code style and docstrings of .augmentables.utils module,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1720,aleju,kontakt@ajung.name,2019-08-18 21:33:16+02:00,bfa3bde9c1edb9a0c0fa53c3278275d07369febb,https://github.com/aleju/imgaug/commit/bfa3bde9c1edb9a0c0fa53c3278275d07369febb,Migrate tests for .meta to unittest,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],22,42,23,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,879,0,0,0,0,0,0,0,0,0,0,0,0,1031,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestNoop(unittest.TestCase):', 'class TestLambda(unittest.TestCase):', 'class TestAssertLambda(unittest.TestCase):', 'class TestAssertShape(unittest.TestCase):', 'class TestAugmenter(unittest.TestCase):', 'class TestAugmenter_augment_batches(unittest.TestCase):', 'class TestAugmenter_augment_segmentation_maps(unittest.TestCase):', 'class TestAugmenter_draw_grid(unittest.TestCase):', 'class TestAugmenter_augment(unittest.TestCase):', 'class TestAugmenter___call__(unittest.TestCase):', 'class TestAugmenter_pool(unittest.TestCase):', 'class TestAugmenter_find_augmenters_by_name(unittest.TestCase):', 'class TestAugmenter_find_augmenters(unittest.TestCase):', 'class TestAugmenter_remove(unittest.TestCase):', 'class TestAugmenter_copy_random_state(unittest.TestCase):', 'class TestAugmenterHooks(unittest.TestCase):', 'class TestSequential(unittest.TestCase):', 'class TestSomeOf(unittest.TestCase):', 'class TestOneOf(unittest.TestCase):', 'class TestSometimes(unittest.TestCase):', 'class TestWithChannels(unittest.TestCase):', 'class TestChannelShuffle(unittest.TestCase):']","[('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(Exception):'), ('Raises', '(NotImplementedError):'), ('Raises', '(NotImplementedError):'), ('Raises', '(Exception):'), ('Raises', '(Exception):'), ('Raises', '(Exception):')]","['def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):']",[],[],[],"['not IS_PY36_OR_HIGHER,', 'not IS_PY36_OR_HIGHER,', 'not IS_PY36_OR_HIGHER,', 'not IS_PY36_OR_HIGHER,', 'not IS_PY36_OR_HIGHER,', 'not IS_PY36_OR_HIGHER,', 'not IS_PY36_OR_HIGHER,', 'not IS_PY36_OR_HIGHER,', 'not IS_PY36_OR_HIGHER,', 'not IS_PY36_OR_HIGHER,', 'not IS_PY36_OR_HIGHER,', 'not IS_PY36_OR_HIGHER,', 'not IS_PY36_OR_HIGHER,', 'IS_PY36_OR_HIGHER,', 'IS_PY36_OR_HIGHER,']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(kps2, KeypointsOnImage)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.allclose(observed.arr_0to1, heatmaps.arr_0to1)', 'np.allclose(observed.arr_0to1, heatmaps.arr_0to1)', 'np.array_equal(observed.arr, segmaps.arr)', 'np.array_equal(observed.arr, segmaps.arr)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'observed.shape == psoi.shape', 'len(observed.polygons) == 1', 'observed.polygons[0].exterior_almost_equals(psoi.polygons[0])', 'observed.shape == psoi.shape', 'len(observed.polygons) == 1', 'observed.polygons[0].exterior_almost_equals(psoi.polygons[0])', 'observed.shape == lsoi.shape', 'len(observed.line_strings) == 1', 'observed.shape == lsoi.shape', 'len(observed.line_strings) == 1', 'observed.line_strings[0].coords_almost_equals(', 'observed.shape == (4, 5, 3)', 'len(observed.keypoints) == 0', 'observed.shape == (4, 5, 3)', 'len(observed.polygons) == 0', 'iaa.Noop().get_parameters() == []', 'image_aug.dtype.type == image.dtype.type', 'image_aug.dtype.name == dtype', 'np.array_equal(image_aug, image)', 'image_aug.dtype.name == dtype', 'np.all(image_aug == image)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'array_equal_lists(observed, expected)', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_aug)', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_aug)', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.get_arr(), segmaps_arr_aug)', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.get_arr(), segmaps_arr_aug)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == expected_psoi[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == expected_psoi[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed.keypoints) == 0', 'observed.shape == (1, 2, 3)', 'len(observed.polygons) == 0', 'observed.shape == (1, 2, 3)', 'image_aug.dtype.name == ', 'np.all(image_aug == expected)', 'image_aug.dtype.name == dtype', 'np.array_equal(image_aug, expected)', 'image_aug.dtype.name == dtype', 'np.all(image_aug == expected)', 'array_equal_lists(observed, expected)', 'array_equal_lists(observed, expected)', 'np.allclose(observed.get_arr(), self.heatmaps.get_arr())', 'np.allclose(observed.get_arr(), self.heatmaps.get_arr())', 'np.array_equal(observed.get_arr(), self.segmaps.get_arr())', 'np.array_equal(observed.get_arr(), self.segmaps.get_arr())', 'keypoints_equal(observed, expected)', 'len(observed.polygons) == 1', 'observed.polygons[0].exterior_almost_equals(', 'observed.shape == expected.shape', 'observed.polygons[0].is_valid', 'len(observed.polygons) == 1', 'observed.polygons[0].exterior_almost_equals(', 'observed.shape == expected.shape', 'observed.polygons[0].is_valid', 'image_aug.dtype.name == image.dtype.name', 'np.all(image_aug == image)', 'image_aug.dtype.name == dtype', 'np.array_equal(image_aug, image)', 'image_aug.dtype.name == dtype', 'np.all(image_aug == image)', 'array_equal_lists(observed, expected)', 'array_equal_lists(observed, expected)', 'np.allclose(observed.get_arr(), self.heatmaps.get_arr())', 'np.allclose(observed.get_arr(), self.heatmaps.get_arr())', 'np.array_equal(observed.get_arr(), self.segmaps.get_arr())', 'np.array_equal(observed.get_arr(), self.segmaps.get_arr())', 'len(observed.polygons) == 1', 'observed.shape == expected.shape', 'observed.polygons[0].exterior_almost_equals(', 'observed.polygons[0].is_valid', 'len(observed.polygons) == 1', 'observed.shape == expected.shape', 'observed.polygons[0].exterior_almost_equals(', 'observed.polygons[0].is_valid', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'observed.shape == (3, 4, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), self.heatmaps.get_arr())', 'observed.shape == (3, 4, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), self.heatmaps.get_arr())', 'observed.shape == (3, 4, 3)', 'np.array_equal(observed.get_arr(), self.heatmaps.get_arr())', 'observed.shape == (3, 4, 3)', 'np.array_equal(observed.get_arr(), self.segmaps.get_arr())', 'len(observed.polygons) == 1', 'observed.shape == expected.shape', 'observed.polygons[0].exterior_almost_equals(', 'observed.polygons[0].is_valid', 'len(observed.polygons) == 1', 'observed.shape == expected.shape', 'observed.polygons[0].exterior_almost_equals(', 'observed.polygons[0].is_valid', 'np.allclose(observed.get_arr(), self.heatmaps.get_arr())', 'np.allclose(observed.get_arr(), self.heatmaps.get_arr())', 'np.array_equal(observed.get_arr(), self.segmaps.get_arr())', 'np.array_equal(observed.get_arr(), self.segmaps.get_arr())', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'len(observed.polygons) == 1', 'observed.shape == expected.shape', 'observed.polygons[0].exterior_almost_equals(', 'observed.polygons[0].is_valid', 'len(observed.polygons) == 1', 'observed.shape == expected.shape', 'observed.polygons[0].exterior_almost_equals(', 'observed.polygons[0].is_valid', 'np.allclose(observed.get_arr(), self.heatmaps.get_arr())', 'np.allclose(observed.get_arr(), self.heatmaps.get_arr())', 'np.array_equal(observed.get_arr(), self.heatmaps.get_arr())', 'np.array_equal(observed.get_arr(), self.heatmaps.get_arr())', 'len(observed.polygons) == 1', 'observed.shape == expected.shape', 'observed.polygons[0].exterior_almost_equals(', 'observed.polygons[0].is_valid', 'len(observed.polygons) == 1', 'observed.shape == expected.shape', 'observed.polygons[0].exterior_almost_equals(', 'observed.polygons[0].is_valid', 'in str(exc)', 'got_exception', 'image_aug.dtype.type == image.dtype.type', 'np.all(image_aug == image)', 'image_aug.dtype.name == dtype', 'np.array_equal(image_aug, image)', 'image_aug.dtype.name == dtype', 'np.all(image_aug == image)', 'np.all(imgs_clipped[:, 0, 0] == 15)', 'np.all(imgs_clipped[:, 0, 1] == 20)', 'np.all(imgs_clipped[:, 0, 2] == 25)', 'isinstance(imgs_clipped, list)', 'np.all([imgs_clipped[i][0, 0] == 15 for i in sm.xrange(len(images))])', 'np.all([imgs_clipped[i][0, 1] == 20 for i in sm.xrange(len(images))])', 'np.all([imgs_clipped[i][0, 2] == 25 for i in sm.xrange(len(images))])', 'np.all(imgs_clipped[:, 0, 0] == 15)', 'np.all(imgs_clipped[:, 0, 1] == 20)', 'np.all(imgs_clipped[:, 0, 2] == 25)', 'isinstance(imgs_clipped, list)', 'np.all([imgs_clipped[i][0, 0] == 15 for i in sm.xrange(len(images))])', 'np.all([imgs_clipped[i][0, 1] == 20 for i in sm.xrange(len(images))])', 'np.all([imgs_clipped[i][0, 2] == 25 for i in sm.xrange(len(images))])', 'np.all([', 'original list not changed', 'not aug.deterministic', 'aug.random_state.is_global_rng()', 'aug.deterministic', 'not aug.random_state.is_global_rng()', 'aug.random_state.generator is rs.generator', 'aug.random_state.equals(iarandom.RNG(123))', 'len(caught_warnings) == 1', '(', 'len(nb_channels) == 20', 'image.ndim == 2', 'image.ndim == 3', 'image.shape[2] == c', '48 <= image.shape[0] <= 62', '48 <= image.shape[1] <= 62', 'seen[0] <= 3', 'seen[1] >= 17', 'np.array_equal(observed, images_flipped)', 'np.array_equal(observed, images)', 'array_equal_lists(observed, images_flipped_list)', 'array_equal_lists(observed, images_list)', 'array_equal_lists(observed, images_flipped_list2d3d)', 'array_equal_lists(observed, images_list2d3d)', 'len(kpsoi_aug.keypoints) == 1', 'kpsoi_aug.keypoints[0].x == 11', 'np.allclose(kpsoi_aug.keypoints[0].x, 5 - 2 + kp_offset)', 'np.allclose(kpsoi_aug.keypoints[0].y, 1)', 'np.allclose(kpsoi_aug.keypoints[1].x, 5 - 5 + kp_offset)', 'np.allclose(kpsoi_aug.keypoints[1].y, 2)', 'np.allclose(kpsoi_aug.keypoints[2].x, 5 - 3 + kp_offset)', 'np.allclose(kpsoi_aug.keypoints[2].y, 3)', 'np.allclose(kpsoi_aug[i].keypoints[0].x, 5 - 2 + kp_offset)', 'np.allclose(kpsoi_aug[i].keypoints[0].y, 1)', 'np.allclose(kpsoi_aug[i].keypoints[1].x, 5 - 5 + kp_offset)', 'np.allclose(kpsoi_aug[i].keypoints[1].y, 2)', 'np.allclose(kpsoi_aug[i].keypoints[2].x, 5 - 3 + kp_offset)', 'np.allclose(kpsoi_aug[i].keypoints[2].y, 3)', 'len(kpsoi_aug) == 1', 'len(kpsoi_aug[0].keypoints) == 0', 'len(kpsoi_aug) == 2', 'len(kpsoi_aug[0].keypoints) == 0', 'len(kpsoi_aug[1].keypoints) == 1', 'kpsoi_aug[1].keypoints[0].x == 11', 'len([kpresult', 'translations_kps[5] is None', 'np.array_equal(translations_imgs, translations_kps)', 'bb_aug.x1 == 1+1', 'bb_aug.y1 == 4', 'bb_aug.x2 == 2+1', 'bb_aug.y2 == 5', 'len(bbsois_aug) == 1', 'bbsois_aug[0].bounding_boxes == []', 'bbsois_aug == []', 'np.allclose(bb_aug.x1, bb.x1)', 'np.allclose(bb_aug.x2, bb.x2)', 'np.allclose(bb_aug.y1, bb.y1)', 'np.allclose(bb_aug.y2, bb.y2)', 'np.allclose(bb0.x1, 5 - 5 + kp_offset)', 'np.allclose(bb0.x2, 5 - 4 + kp_offset)', 'np.allclose(bb0.y1, 1)', 'np.allclose(bb0.y2, 3)', 'np.allclose(bb1.x1, 5 - 2 + kp_offset)', 'np.allclose(bb1.x2, 5 - 0 + kp_offset)', 'np.allclose(bb1.y1, 2.5)', 'np.allclose(bb1.y2, 3)', 'np.allclose(bb0.x1, 5 - 5 + kp_offset)', 'np.allclose(bb0.x2, 5 - 4 + kp_offset)', 'np.allclose(bb0.y1, 1)', 'np.allclose(bb0.y2, 3)', 'np.allclose(bb1.x1, 5 - 2 + kp_offset)', 'np.allclose(bb1.x2, 5 - 0 + kp_offset)', 'np.allclose(bb1.y1, 2.5)', 'np.allclose(bb1.y2, 3)', 'np.allclose(heatmap_aug.arr_0to1, heatmap.arr_0to1)', 'np.allclose(heatmap_aug.arr_0to1, np.rot90(heatmap.arr_0to1, -1))', 'np.allclose(hm.arr_0to1, np.rot90(heatmap.arr_0to1, -1))', 'aug_localized is not aug', 'aug.random_state.is_global_rng()', 'not aug_localized.random_state.is_global_rng()', '_same_rs(aug0.random_state, aug0_copy.random_state)', '_same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', 'not _same_rs(aug0.random_state, aug0_copy.random_state)', 'not _same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', '_same_rs(aug0.random_state, aug0_copy.random_state)', '_same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', 'not _same_rs(aug0.random_state, aug0_copy.random_state)', 'not _same_rs(aug0[0].random_state, aug0_copy[0].random_state)', 'not _same_rs(aug0[1].random_state, aug0_copy[1].random_state)', '_same_rs(aug0.random_state, aug0_copy.random_state)', '_same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', 'not _same_rs(aug0.random_state, aug0_copy.random_state)', 'not _same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0_copy.random_state, iarandom.RNG(123))', '_same_rs(aug0_copy[0].random_state, expected)', '_same_rs(aug0.random_state, aug0_copy.random_state)', '_same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', 'not _same_rs(aug0.random_state, aug0_copy.random_state)', 'not _same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', '_same_rs(aug0_copy.random_state,', '_same_rs(aug0_copy[0].random_state, expected)', 'isinstance(children, list)', 'children[0] == aug1', 'children[1] == aug2', 'children[2] == aug21', 'isinstance(children, list)', 'children[0] == aug1', 'children[1] == aug2', 'isinstance(children[2], list)', 'children[2][0] == aug21', 'aug1.__repr__() == aug1.__str__() == expected1', 'aug2.__repr__() == aug2.__str__() == expected2', 'isinstance(batches_aug, list)', 'len(batches_aug) == 1', 'isinstance(batches_aug[0], list)', 'len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)', 'isinstance(batches_aug, list)', 'len(batches_aug) == 1', 'array_equal_lists(batches_aug, image_batches)', 'len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)', 'isinstance(batches_aug, list)', 'len(batches_aug) == 1', 'array_equal_lists(batches_aug[0], image_batches[0])', 'len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'np.array_equal(baug0.images_aug[0], image_flipped)', 'baug0.keypoints_aug[0].keypoints[0].x == kp_flipped.x', 'baug0.keypoints_aug[0].keypoints[0].y == kp_flipped.y', 'np.array_equal(baug0.images_unaug[0], image)', 'baug0.keypoints_unaug[0].keypoints[0].x == keypoint.x', 'baug0.keypoints_unaug[0].keypoints[0].y == keypoint.y', 'np.array_equal(baug0.images_aug, np.uint8([image_flipped]))', 'baug0.keypoints_aug[0].keypoints[0].x == kp_flipped.x', 'baug0.keypoints_aug[0].keypoints[0].y == kp_flipped.y', 'np.array_equal(baug0.images_unaug, np.uint8([image]))', 'baug0.keypoints_unaug[0].keypoints[0].x == keypoint.x', 'baug0.keypoints_unaug[0].keypoints[0].y == keypoint.y', 'img_matches_unflipped or img_matches_flipped', 'kp_matches_flipped or kp_matches_unflipped', '0.4*nb_iterations <= nb_flipped_images <= 0.6*nb_iterations', 'nb_flipped_images == nb_flipped_keypoints', 'nb_changed > 0', 'nb_changed == 0', 'np.array_equal(segmap_aug.arr, segmap.arr)', 'np.array_equal(segmap_aug.arr, segmap.arr)', 'np.array_equal(segmap_aug.arr, expected)', 'np.array_equal(segmap_aug.arr, expected)', 'np.array_equal(segmap_aug.arr, expected)', 'np.array_equal(segmap_aug.arr, expected)', 'np.allclose(segmaps_aug[i].arr, np.rot90(segmap.arr, -1))', 'np.array_equal(grid, grid_expected)', 'np.array_equal(grid, grid_expected)', 'np.array_equal(grid, grid_expected)', 'np.array_equal(grid, grid_expected)', 'np.array_equal(grid, grid_expected)', 'isinstance(poly_oi_aug, self._ObjOnImageClass)', 'len(self._entities(poly_oi_aug)) == 0', 'poly_oi_aug.shape == (11, 10, 3)', 'isinstance(poly_oi_aug, list)', 'isinstance(poly_oi_aug[0], self._ObjOnImageClass)', 'len(self._entities(poly_oi_aug[0])) == 0', 'poly_oi_aug[0].shape == (11, 10, 3)', 'isinstance(poly_ois_aug, list)', 'isinstance(poly_ois_aug[0], self._ObjOnImageClass)', 'isinstance(poly_ois_aug[0], self._ObjOnImageClass)', 'len(self._entities(poly_ois_aug[0])) == 2', 'len(self._entities(poly_ois_aug[1])) == 2', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'poly_ois_aug[0].shape == (10, 10, 3)', 'poly_ois_aug[1].shape == (10, 10, 3)', 'not np.allclose(points1, points2, atol=1e-2, rtol=0)', 'not np.all(same)', 'len(points1) > 1', 'not np.all(same)', 'np.allclose(points1, points2, atol=1e-2, rtol=0)', 'found_image', 'found_poly', 'img_rot_idx == poly_rot_idx', '2 <= len(seen) <= 4  # assert not always the same rot', 'len([', 'translations_points[5] is None', 'np.array_equal(translations_imgs, translations_points)', 'image_aug.shape == image.shape', 'np.array_equal(image_aug, image)', 'images_aug[0].shape == image.shape', 'np.array_equal(images_aug[0], image)', 'np.array_equal(images_aug[0], image)', 'np.allclose(heatmaps_aug[0].arr_0to1, heatmaps.arr_0to1)', 'np.array_equal(images_aug[0], image)', 'np.allclose(segmaps_aug[0].arr, segmaps.arr)', 'np.array_equal(images_aug[0], image)', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'np.array_equal(images_aug[0], image)', 'np.allclose(bbs_aug[0].to_xyxy_array(), bbs.to_xyxy_array())', 'np.array_equal(images_aug[0], image)', 'polygon_aug.exterior_almost_equals(polygon)', 'np.array_equal(image, image_aug)', 'np.array_equal(images_aug[0], image)', 'np.allclose(heatmaps_aug[0].arr_0to1, heatmaps.arr_0to1)', 'np.array_equal(images_aug[0], image)', 'np.allclose(segmaps_aug[0].arr, segmaps.arr)', 'np.array_equal(images_aug[0], image)', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'np.array_equal(images_aug[0], image)', 'np.allclose(bbs_aug[0].to_xyxy_array(), bbs.to_xyxy_array())', 'np.array_equal(images_aug[0], image)', 'polygon_aug.exterior_almost_equals(polygon)', 'np.allclose(segmaps_aug[0].arr, segmaps.arr)', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'polygon_aug.exterior_almost_equals(polygon)', 'np.allclose(segmaps_aug[0].arr, segmaps.arr)', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'polygon_aug.exterior_almost_equals(polygon)', 'np.all(image_aug[:, 0] == 0)', 'np.all(image_aug[:, 1:] == 255)', 'np.allclose(heatmaps_aug[0][:, 0], 0.0)', 'np.allclose(heatmaps_aug[0][:, 1:], 1.0)', 'np.all(segmaps_aug[0][:, 0] == 0)', 'np.all(segmaps_aug[0][:, 1:] == 1)', 'kps_aug == [(1, 0), (2, 2)]', 'bbs_aug == [(1, 0, 2, 1), (2, 2, 3, 3)]', 'polygons_aug == [(1, 0), (2, 0), (2, 1)]', 'len({shift_image, shift_heatmaps, shift_segmaps,', 'len(set(seen)) > 7', 'len({shift_image, shift_heatmaps, shift_segmaps,', 'len(set(seen)) == 1', 'isinstance(batch_aug.images_aug, list)', 'isinstance(batch_aug.heatmaps_aug, list)', 'isinstance(batch_aug.segmentation_maps_aug, list)', '(', 'len(set(shapes_images)) == 2', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'polygon_aug.exterior_almost_equals(polygon)', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'polygon_aug.exterior_almost_equals(polygon)', 'np.array_equal(images_aug[0], image)', 'np.allclose(heatmaps_aug[0].arr_0to1, heatmaps.arr_0to1)', 'np.array_equal(images_aug[0], image)', 'np.array_equal(segmaps_aug[0].arr, segmaps.arr)', 'np.array_equal(images_aug[0], image)', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'np.array_equal(images_aug[0], image)', 'np.allclose(bbs_aug[0].to_xyxy_array(), bbs.to_xyxy_array())', 'np.array_equal(images_aug[0], image)', 'polygon_aug.exterior_almost_equals(polygon)', 'np.array_equal(images_aug[0], image)', 'np.allclose(heatmaps_aug[0].arr_0to1, heatmaps.arr_0to1)', 'np.array_equal(segmaps_aug[0].arr, segmaps.arr)', 'np.array_equal(segmaps_aug[0].arr, segmaps.arr)', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'polygon_aug.exterior_almost_equals(polygon)', 'np.array_equal(images_aug[0], image)', 'np.allclose(heatmaps_aug[0].arr_0to1, heatmaps.arr_0to1)', 'np.array_equal(segmaps_aug[0].arr, segmaps.arr)', 'np.array_equal(segmaps_aug[0].arr, segmaps.arr)', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'polygon_aug.exterior_almost_equals(polygon)', 'np.array_equal(images_aug[0], image)', 'np.allclose(heatmaps_aug[0].arr_0to1, heatmaps.arr_0to1)', 'np.array_equal(segmaps_aug[0].arr, segmaps.arr)', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'np.allclose(bbs_aug[0].to_xyxy_array(), bbs.to_xyxy_array())', 'polygon_aug.exterior_almost_equals(polygon)', 'np.array_equal(images_aug[0], image)', 'np.allclose(heatmaps_aug[0].arr_0to1, heatmaps.arr_0to1)', 'np.array_equal(segmaps_aug[0].arr, segmaps.arr)', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'np.allclose(bbs_aug[0].to_xyxy_array(), bbs.to_xyxy_array())', 'polygon_aug.exterior_almost_equals(polygon)', 'msg in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'np.array_equal(images_aug[0], image)', 'np.allclose(heatmaps_aug[0].arr_0to1, heatmaps.arr_0to1)', 'mock_Pool.call_count == 1', 'mock_Pool.__enter__.call_count == 1', 'mock_Pool.__exit__.call_count == 1', 'mock_Pool.call_args[0][0] == augseq', 'mock_Pool.call_args[1][] == 2', 'mock_Pool.call_args[1][] == 10', 'mock_Pool.call_args[1][] == 17', 'len(augs) == 1', 'augs[0] == seq1', 'len(augs) == 1', 'augs[0] == seq2', 'len(augs) == 2', 'augs[0] == seq1', 'augs[1] == seq2', 'len(augs) == 2', 'augs[0] == seq1', 'augs[1] == seq2', 'len(augs) == 2', 'augs[0] == seq1', 'augs[1] == seq2', 'len(augs) == 1', 'augs[0] == seq2', 'len(augs) == 2', 'augs[0] == seq1', 'augs[1] == [seq2]', 'len(seqs) == 1', 'seqs[0].name == ', 'len(seqs) == 2', 'seqs[0].name == ', 'seqs[1].name == ', 'augs is not None', 'isinstance(augs, iaa.Noop)', 'expected in str(exc)', 'got_exception', 'augs is None', 'target_cprs.random_state.equals(source_alt.random_state)', 'target_cprs[i].random_state.equals(', 'np.array_equal(images_aug_source, images_aug_target)', 'target_cprs[0].deterministic is True', 'np.array_equal(images_aug_source, images_aug_target)', 'np.array_equal(images_aug_source, images_aug_target)', 'np.array_equal(images_aug_source1, images_aug_source2)', 'np.array_equal(images_aug_target1, images_aug_target2)', 'np.array_equal(images_aug_source1, images_aug_target1)', 'np.array_equal(images_aug_source2, images_aug_target2)', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'len(caught_warnings) == 1', '(', 'np.array_equal(images_aug[0], expected)', 'np.array_equal(images_aug[0], expected)', 'np.array_equal(images_aug[0], self.image)', 'np.array_equal(images_aug[0], self.image_lr)', 'keypoints_equal([keypoints_aug], [kpsoi])', 'np.array_equal(observed, self.images_lr_ud)', 'np.array_equal(observed, self.images_lr_ud)', 'array_equal_lists(observed, [self.image_lr_ud])', 'array_equal_lists(observed, [self.image_lr_ud])', 'keypoints_equal(observed, [self.keypoints_aug])', 'keypoints_equal(observed, [self.keypoints_aug])', 'observed.shape == polygons.shape', 'observed.polygons[0].exterior_almost_equals(', 'observed.polygons[0].is_valid', 'len(observed.polygons) == 1', 'observed.shape == polygons.shape', 'observed.polygons[0].exterior_almost_equals(', 'observed.polygons[0].is_valid', 'observed.shape == (3, 3, 1)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1.0 - 1e-6 < observed.max_value < 1.0 + 1e-6', 'np.allclose(observed.get_arr(),', 'observed.shape == (3, 3, 1)', 'np.array_equal(observed.get_arr(),', 'np.array_equal(observed, image)', 'np.array_equal(observed, image)', 'np.array_equal(observed, np.fliplr(image))', 'np.array_equal(observed, np.fliplr(image))', 'np.array_equal(observed, np.fliplr(np.flipud(image)))', 'np.isclose(frac_same, 0.25, rtol=0, atol=0.1)', '(', 'np.any([np.array_equal(observed_aug, expected_i)', 'np.isclose(frac_12, 0.5, 0.075)', 'frac_12 >= 1.0 - 1e-4', '(frac_12 >= 1.0-1e-4 or frac_12 <= 0.0+1e-4)', 'False', 'False', 'np.all(seen)', 'False', 'np.all(seen)', 'False', 'np.all(seen)', 'False', 'np.all(seen)', 'False', 'np.all(seen)', 'np.array_equal(observed, np.fliplr(image))', 'np.array_equal(observed, np.fliplr(np.flipud(image)))', 'aug1.get_parameters() == [False]', 'aug2.get_parameters() == [True]', 'aug.get_children_lists() == [aug]', 'aug.__str__() == aug.__repr__() == expected', 'image_aug.dtype.name == ', 'np.all(image_aug == image)', 'image_aug.dtype.name == dtype', 'np.array_equal(image_aug, image)', 'image_aug.dtype.name == dtype', 'np.all(image_aug == image)', 'image_aug.dtype.name == ', 'np.all(image_aug == expected)', 'image_aug.dtype.name == dtype', 'np.array_equal(image_aug, expected)', 'image_aug.dtype.name == dtype', 'np.all(image_aug == expected)', 'np.array_equal(observed, zeros)', 'np.array_equal(observed, zeros)', 'np.sum(observed) in expected', 'np.isclose(p_observed[0], 0.25, rtol=0, atol=0.1)', 'np.isclose(p_observed[1], 0.5, rtol=0, atol=0.1)', 'np.isclose(p_observed[2], 0.5, rtol=0, atol=0.1)', 'np.isclose(p_observed[3], 0.5, rtol=0, atol=0.1)', 'observed.shape == (3, 3, 3)', 'np.isclose(observed.min_value, 0.0)', 'np.isclose(observed.max_value, 1.0)', 'np.any(matches)', 'observed.shape == (3, 3, 3)', 'np.any(matches)', 'len(kpsoi_aug.keypoints) == 2', 'kpsoi_aug.shape == (5, 6, 3)', 'np.any(matches)', 'len(psoi_aug.polygons) == 1', 'psoi_aug.shape == (5, 6, 3)', 'polygon.is_valid', 'np.any(matches)', 'len(kpsoi_aug.keypoints) == 0', 'kpsoi_aug.shape == (5, 6, 3)', 'len(psoi_aug.polygons) == 0', 'psoi_aug.shape == (5, 6, 3)', 'np.isclose(p_observed[0], 1.0, rtol=0, atol=1e-8)', 'np.isclose(p_observed[1], 0.0, rtol=0, atol=1e-8)', 'np.isclose(p_observed[0], 0.5, rtol=0, atol=0.15)', 'np.isclose(p_observed[1], 0.5, rtol=0, atol=0.15)', 'keypoints_equal([kpsoi_aug], [kpsoi])', 'keypoints_equal([kpsoi_aug], [kpsoi_x])', 'keypoints_equal([kpsoi_aug], [kpsoi_y])', 'keypoints_equal([kpsoi_aug], [kpsoi_xy])', 'False', 'np.all(seen)', 'polygon.exterior_almost_equals(psoi.polygons[0])', 'polygon.exterior_almost_equals(psoi_x.polygons[0])', 'polygon.exterior_almost_equals(psoi_y.polygons[0])', 'polygon.exterior_almost_equals(psoi_xy.polygons[0])', 'False', 'np.all(seen)', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'isinstance(observed, list)', 'np.all([img.shape in expected_shapes for img in observed])', 'isinstance(observed, list)', 'np.all([img.shape in expected_shapes for img in observed])', 'isinstance(observed, list)', 'np.all([img.shape in expected_shapes for img in observed])', 'isinstance(observed, list)', 'np.all([img.shape in expected_shapes for img in observed])', 'ia.is_np_array(image)', 'observed.shape in expected_shapes', 'ia.is_np_array(observed)', 'np.all([img.shape in expected_shapes for img in observed])', 'isinstance(observed, list)', 'np.all([img.shape in expected_shapes for img in observed])', 'ia.is_np_array(observed)', 'np.all([img.shape in expected_shapes for img in observed])', 'isinstance(observed, list)', 'np.all([img.shape in expected_shapes for img in observed])', 'ia.is_np_array(observed)', 'observed.shape in expected_shapes', 'image_aug.dtype.name == image.dtype.name', 'np.all(image_aug == image)', 'image_aug.dtype.name == dtype', 'np.array_equal(image_aug, image)', 'image_aug.dtype.name == dtype', 'np.all(image_aug == image)', 'image_aug.dtype.name == image.dtype.name', 'any([np.all(image_aug == expected_i)', 'image_aug.dtype.name == dtype', 'any([np.all(image_aug == expected_i)', 'image_aug.dtype.name == dtype', 'any([np.all(image_aug == expected_i)', 'isinstance(aug, iaa.SomeOf)', 'aug.n == 1', 'aug[0] is child', 'np.array_equal(observed, zeros + 1)', 'np.array_equal(observed, zeros + 1)', 'np.array_equal(observed, zeros + 1)', 'np.isclose(val, expected, rtol=0, atol=tolerance)', 'len(list(results.keys())) == 3', 'np.array_equal(observed, self.images_lr)', 'np.array_equal(observed, self.images_lr)', 'array_equal_lists(observed, [self.images_lr[0]])', 'array_equal_lists(observed, [self.images_lr[0]])', 'keypoints_equal(observed, self.keypoints_lr)', 'keypoints_equal(observed, self.keypoints_lr)', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.polygons.shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.polygons.shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'observed.shape == self.heatmaps.shape', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.array_equal(observed.get_arr(), self.heatmaps_lr.get_arr())', 'observed.shape == self.segmaps.shape', 'np.array_equal(observed.get_arr(), self.segmaps_lr.get_arr())', 'np.array_equal(observed, self.images_ud)', 'np.array_equal(observed, self.images_ud)', 'array_equal_lists(observed, [self.images_ud[0]])', 'array_equal_lists(observed, [self.images_ud[0]])', 'keypoints_equal(observed, [self.keypoints_ud])', 'keypoints_equal(observed, [self.keypoints_ud])', 'observed.shape == self.polygons.shape', 'observed.polygons[0].exterior_almost_equals(', 'observed.polygons[0].is_valid', 'len(observed.polygons) == 1', 'observed.shape == self.polygons.shape', 'observed.polygons[0].exterior_almost_equals(', 'observed.polygons[0].is_valid', 'observed.shape == self.heatmaps.shape', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.array_equal(observed.get_arr(), self.heatmaps_ud.get_arr())', 'observed.shape == self.segmaps.shape', 'np.array_equal(observed.get_arr(), self.segmaps_ud.get_arr())', 'np.isclose(p_if_branch, 0.5, rtol=0, atol=0.1)', 'np.isclose(p_else_branch, 0.5, rtol=0, atol=0.1)', 'np.isclose(p_changed, 0.5, rtol=0, atol=0.1)', 'nb_changed_aug_det == 0', 'np.isclose(p_if_branch, 0.5, rtol=0, atol=0.15)', 'np.isclose(p_else_branch, 0.5, rtol=0, atol=0.15)', 'np.isclose(p_if_branch, 0.5, rtol=0, atol=0.15)', 'np.isclose(p_else_branch, 0.5, rtol=0, atol=0.15)', 'np.isclose(p_if_branch, 0.5, rtol=0, atol=0.1)', 'np.isclose(p_else_branch, 0.5, rtol=0, atol=0.1)', 'np.isclose(p_changed, 0.5, rtol=0, atol=0.1)', 'nb_changed_aug_det == 0', 'np.isclose(p_if_branch, 0.5, rtol=0, atol=0.15)', 'np.isclose(p_else_branch, 0.5, rtol=0, atol=0.15)', 'np.isclose(p_if_branch, 0.5, rtol=0, atol=0.15)', 'np.isclose(p_else_branch, 0.5, rtol=0, atol=0.15)', 'len(observed.keypoints) == 0', 'observed.shape == (1, 2, 3)', 'len(observed.polygons) == 0', 'observed.shape == (1, 2, 3)', 'len(uq) == 1', 'seen[0] > 20', 'seen[1] > 20', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'np.array_equal(observed, image)', 'np.array_equal(observed1, image + 10)', 'np.array_equal(observed2, image)', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', '0.75 - 1e-8 < params[0].p.value < 0.75 + 1e-8', 'observed_str == expected', 'observed_repr == expected', 'observed_str == expected', 'observed_repr == expected', 'np.all([img.shape in expected_shapes for img in images])', 'isinstance(observed, list) or ia.is_np_array(observed)', 'isinstance(observed, list)', 'isinstance(observed, list) or ia.is_np_array(observed)', 'isinstance(observed, list)', 'ia.is_np_array(image)', 'np.all([', 'isinstance(observed, list) or ia.is_np_array(observed)', 'isinstance(observed, list)', 'isinstance(observed, list)  or ia.is_np_array(observed)', 'isinstance(observed, list)', 'ia.is_np_array(image)', 'np.all([img.shape in expected_shapes for img in images])', 'ia.is_np_array(observed)', 'isinstance(observed, list)', 'ia.is_np_array(observed)', 'isinstance(observed, list)', 'ia.is_np_array(observed)', 'np.all([img.shape in expected_shapes for img in images])', 'ia.is_np_array(observed)', 'isinstance(observed, list)', 'ia.is_np_array(observed)', 'isinstance(observed, list)', 'ia.is_np_array(observed)', 'image_aug.dtype.name == image.dtype.name', 'np.all(image_aug == image)', 'image_aug.dtype.name == dtype', 'np.array_equal(image_aug, image)', 'image_aug.dtype.name == dtype', 'np.all(image_aug == image)', 'image_aug.dtype.name == image.dtype.name', 'image_aug.dtype.name == dtype', 'False', 'np.all(seen)', 'image_aug.dtype.name == dtype', 'False', 'np.all(seen)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'heatmap_aug.shape == (3, 3, 3)', 'np.allclose(heatmap_aug.get_arr(), heatmap_arr)', 'heatmap_aug.shape == (3, 3, 3)', 'np.allclose(heatmap_aug.get_arr(), heatmap_arr_shifted)', 'segmap_aug.shape == (3, 3, 3)', 'np.array_equal(segmap_aug.get_arr(), segmap_arr)', 'segmap_aug.shape == (3, 3, 3)', 'np.array_equal(segmap_aug.get_arr(), segmap_arr_shifted)', 'len(kpsoi_aug.keypoints) == 2', 'kpsoi_aug.shape == (5, 6, 3)', 'keypoints_equal([kpsoi_aug], [kpsoi])', 'len(kpsoi_aug.keypoints) == 2', 'kpsoi_aug.shape == (5, 6, 3)', 'keypoints_equal([kpsoi_aug], [kpsoi_x])', 'len(kpsoi_aug.keypoints) == 2', 'kpsoi_aug.shape == (5, 6, 3)', 'keypoints_equal([kpsoi_aug], [kpsoi_x])', 'len(kpsoi_aug.keypoints) == 0', 'kpsoi_aug.shape == (5, 6, 3)', 'len(psoi_aug.polygons) == 1', 'psoi_aug.shape == (5, 6, 3)', 'psoi_aug.polygons[0].exterior_almost_equals(psoi.polygons[0])', 'psoi_aug.polygons[0].is_valid', 'len(psoi_aug.polygons) == 1', 'psoi_aug.shape == (5, 6, 3)', 'psoi_aug.polygons[0].exterior_almost_equals(psoi_x.polygons[0])', 'psoi_aug.polygons[0].is_valid', 'len(psoi_aug.polygons) == 1', 'psoi_aug.shape == (5, 6, 3)', 'psoi_aug.polygons[0].exterior_almost_equals(psoi_x.polygons[0])', 'psoi_aug.polygons[0].is_valid', 'len(psoi_aug.polygons) == 0', 'psoi_aug.shape == (5, 6, 3)', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'len(params) == 1', 'params[0] == [1]', 'aug.get_children_lists() == [children]', 'aug.__repr__() == expected', 'aug.__str__() == expected', 'image_aug.dtype.name == image.dtype.name', 'image_aug.dtype.name == dtype', 'np.array_equal(image_aug, image)', 'image_aug.dtype.name == dtype', 'np.all(image_aug == image)', 'image_aug.dtype.name == image.dtype.name', 'image_aug.dtype.name == dtype', 'np.array_equal(image_aug, expected)', 'image_aug.dtype.name == dtype', 'np.all(image_aug == expected)', 'isinstance(aug.p, iap.Binomial)', 'isinstance(aug.p.p, iap.Deterministic)', 'np.allclose(aug.p.p.value, 0.9)', 'aug.channels == [0, 2]', 'False', 'np.all(seen)', 'np.array_equal(img_aug, img)', 'aug.get_parameters()[0] == aug.p', 'aug.get_parameters()[1] == aug.channels', 'hm_aug.shape == (4, 4, 3)', 'hm_aug.arr_0to1.shape == (1, 3, 1)', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'segmap_aug.shape == (4, 4, 3)', 'segmap_aug.arr.shape == (1, 3, 1)', 'np.array_equal(segmap.arr, segmap_aug.arr)', 'kpsoi_aug.shape == (10, 10, 3)', 'np.allclose(kpsoi_aug.keypoints[0].x, 3)', 'np.allclose(kpsoi_aug.keypoints[0].y, 1)', 'np.allclose(kpsoi_aug.keypoints[1].x, 2)', 'np.allclose(kpsoi_aug.keypoints[1].y, 4)', 'psoi_aug.shape == (10, 10, 3)', 'psoi_aug.polygons[0].exterior_almost_equals(psoi.polygons[0])', 'image_aug.dtype.name == image.dtype.name', 'image_aug.dtype.name == dtype', 'False', 'np.all(seen)', 'image_aug.dtype.name == dtype', 'False', 'np.all(seen)']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.allclose(observed.arr_0to1, heatmaps.arr_0to1)', 'np.allclose(observed.arr_0to1, heatmaps.arr_0to1)', 'np.array_equal(observed.arr, segmaps.arr)', 'np.array_equal(observed.arr, segmaps.arr)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'observed.shape == psoi.shape', 'len(observed.polygons) == 1', 'np.allclose(observed.polygons[0].exterior, psoi.polygons[0].exterior)', 'observed.shape == psoi.shape', 'len(observed.polygons) == 1', 'np.allclose(observed.polygons[0].exterior, psoi.polygons[0].exterior)', 'observed.shape == lsoi.shape', 'len(observed.line_strings) == 1', 'observed.shape == lsoi.shape', 'len(observed.line_strings) == 1', 'observed.line_strings[0].coords_almost_equals(lsoi.line_strings[0])', 'observed.shape == (4, 5, 3)', 'len(observed.keypoints) == 0', 'observed.shape == (4, 5, 3)', 'len(observed.polygons) == 0', 'iaa.Noop().get_parameters() == []', 'image_aug.dtype.type == image.dtype.type', 'np.all(image_aug == image)', 'image_aug.dtype.type == dtype', 'np.array_equal(image_aug, image)', 'image_aug.dtype.type == dtype', 'array_equal_lists(observed, expected)', 'array_equal_lists(observed, expected)', 'np.allclose(observed.get_arr(), heatmaps_arr_aug)', 'np.allclose(observed.get_arr(), heatmaps_arr_aug)', 'np.array_equal(observed.get_arr(), segmaps_arr_aug)', 'np.array_equal(observed.get_arr(), segmaps_arr_aug)', 'keypoints_equal(observed, expected)', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == expected[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == expected[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed.keypoints) == 0', 'observed.shape == (1, 2, 3)', 'len(observed.polygons) == 0', 'observed.shape == (1, 2, 3)', 'image_aug.dtype.type == image.dtype.type', 'np.all(image_aug == expected)', 'image_aug.dtype.type == dtype', 'np.array_equal(image_aug, expected)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == expected)', 'np.array_equal(observed, expected)', 'errored', 'np.array_equal(observed, expected)', 'errored', 'array_equal_lists(observed, expected)', 'errored', 'array_equal_lists(observed, expected)', 'errored', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'errored', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'errored', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.get_arr(), segmaps.get_arr())', 'errored', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.get_arr(), segmaps.get_arr())', 'errored', 'keypoints_equal(observed, expected)', 'errored', 'keypoints_equal(observed, expected)', 'errored', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].shape == expected[0].shape', 'observed[0].polygons[0].is_valid', 'errored', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].shape == expected[0].shape', 'observed[0].polygons[0].is_valid', 'errored', 'image_aug.dtype.type == image.dtype.type', 'np.all(image_aug == image)', 'image_aug.dtype.type == dtype', 'np.array_equal(image_aug, image)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == image)', 'got_exception', 'got_exception', 'got_exception', 'array_equal_lists(observed, expected)', 'array_equal_lists(observed, expected)', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'np.array_equal(observed.get_arr(), segmaps.get_arr())', 'np.array_equal(observed.get_arr(), segmaps.get_arr())', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == expected[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == expected[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'errored', 'errored', 'errored', 'errored', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'np.array_equal(observed.get_arr(), heatmaps.get_arr())', 'np.array_equal(observed.get_arr(), segmaps.get_arr())', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == expected[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == expected[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'errored', 'errored', 'errored', 'errored', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'np.array_equal(observed.get_arr(), segmaps.get_arr())', 'np.array_equal(observed.get_arr(), segmaps.get_arr())', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == expected[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == expected[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'errored', 'errored', 'errored', 'errored', 'errored', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'observed.shape == (3, 4, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'observed.shape == (3, 4, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps.get_arr())', 'observed.shape == (3, 4, 3)', 'np.array_equal(observed.get_arr(), heatmaps.get_arr())', 'observed.shape == (3, 4, 3)', 'np.array_equal(observed.get_arr(), heatmaps.get_arr())', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == expected[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == expected[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'errored', 'errored', 'errored', 'errored', 'errored', 'in str(exc)', 'got_exception', 'image_aug.dtype.type == image.dtype.type', 'np.all(image_aug == image)', 'image_aug.dtype.type == dtype', 'np.array_equal(image_aug, image)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == image)', 'got_exception', 'got_exception', 'got_exception', 'np.all(images_clipped[:, 0, 0] == 15)', 'np.all(images_clipped[:, 0, 1] == 20)', 'np.all(images_clipped[:, 0, 2] == 25)', 'isinstance(images_clipped, list)', 'np.all([images_clipped[i][0, 0] == 15 for i in sm.xrange(len(images))])', 'np.all([images_clipped[i][0, 1] == 20 for i in sm.xrange(len(images))])', 'np.all([images_clipped[i][0, 2] == 25 for i in sm.xrange(len(images))])', 'np.all(images_clipped[:, 0, 0] == 15)', 'np.all(images_clipped[:, 0, 1] == 20)', 'np.all(images_clipped[:, 0, 2] == 25)', 'isinstance(images_clipped, list)', 'np.all([images_clipped[i][0, 0] == 15 for i in sm.xrange(len(images))])', 'np.all([images_clipped[i][0, 1] == 20 for i in sm.xrange(len(images))])', 'np.all([images_clipped[i][0, 2] == 25 for i in sm.xrange(len(images))])', 'np.all([isinstance(kpsoi, ia.KeypointsOnImage) for kpsoi in kpsois]) # assert original list not changed', 'aug.random_state.is_global_rng()', 'not aug.random_state.is_global_rng()', 'aug.random_state.generator is rs.generator', 'aug.random_state.equals(iarandom.RNG(123))', 'isinstance(batches_aug, list)', 'len(batches_aug) == 1', 'isinstance(batches_aug[0], list)', 'isinstance(batches_aug, list)', 'len(batches_aug) == 1', 'array_equal_lists(batches_aug, image_batches)', 'isinstance(batches_aug, list)', 'len(batches_aug) == 1', 'array_equal_lists(batches_aug[0], image_batches[0])', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'len(caught_warnings) == 1', '(', 'got_exception', 'np.all([image.ndim == 3 and 48 <= image.shape[0] <= 62 and 48 <= image.shape[1] <= 62 and image.shape[2] == 3 for image in observed])', 'seen[0] <= 3', 'seen[1] >= 17', 'np.all([image.ndim == 3 and 48 <= image.shape[0] <= 62 and 48 <= image.shape[1] <= 62  and image.shape[2] == 1 for image in observed])', 'seen[0] <= 3', 'seen[1] >= 17', 'np.all([image.ndim == 2 and 48 <= image.shape[0] <= 62 and 48 <= image.shape[1] <= 62 for image in observed])', 'seen[0] <= 3', 'seen[1] >= 17', 'image.ndim == 2', 'image.ndim == 3', 'image.shape[2] == c', '48 <= image.shape[0] <= 62', '48 <= image.shape[1] <= 62', 'seen[0] == 0', 'seen[1] == 20', 'got_exception', 'got_exception', 'got_exception', 'bb_aug.x1 == 1+1', 'bb_aug.y1 == 4', 'bb_aug.x2 == 2+1', 'bb_aug.y2 == 5', 'len(bbsois_aug) == 1', 'bbsois_aug[0].bounding_boxes == []', 'bbsois_aug == []', 'np.array_equal(grid, grid_expected)', 'np.array_equal(grid, grid_expected)', 'got_exception', 'np.array_equal(grid, grid_expected)', 'np.array_equal(grid, grid_expected)', 'np.array_equal(grid, grid_expected)', 'got_exception', 'aug.random_state.is_global_rng()', 'not aug_localized.random_state.is_global_rng()', '_same_rs(aug0.random_state, aug0_copy.random_state)', '_same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', 'not _same_rs(aug0.random_state, aug0_copy.random_state)', 'not _same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', '_same_rs(aug0.random_state, aug0_copy.random_state)', '_same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', 'not _same_rs(aug0.random_state, aug0_copy.random_state)', 'not _same_rs(aug0[0].random_state, aug0_copy[0].random_state)', 'not _same_rs(aug0[1].random_state, aug0_copy[1].random_state)', '_same_rs(aug0.random_state, aug0_copy.random_state)', '_same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', 'not _same_rs(aug0.random_state, aug0_copy.random_state)', 'not _same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0_copy.random_state, iarandom.RNG(123))', '_same_rs(aug0_copy[0].random_state, expected)', '_same_rs(aug0.random_state, aug0_copy.random_state)', '_same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', 'not _same_rs(aug0.random_state, aug0_copy.random_state)', 'not _same_rs(aug0[0].random_state, aug0_copy[0].random_state)', '_same_rs(aug0[1].random_state, aug0_copy[1].random_state)', '_same_rs(aug0_copy.random_state,', '_same_rs(aug0_copy[0].random_state, expected)', 'got_exception', 'isinstance(children, list)', 'children[0] == aug1', 'children[1] == aug2', 'children[2] == aug21', 'isinstance(children, list)', 'children[0] == aug1', 'children[1] == aug2', 'isinstance(children[2], list)', 'children[2][0] == aug21', 'aug.__repr__() == aug.__str__() == \\', 'aug.__repr__() == aug.__str__() == \\', 'np.array_equal(batches_aug[0].images_aug[0], image_flipped)', 'batches_aug[0].keypoints_aug[0].keypoints[0].x == kp_flipped.x', 'batches_aug[0].keypoints_aug[0].keypoints[0].y == kp_flipped.y', 'np.array_equal(batches_aug[0].images_unaug[0], image)', 'batches_aug[0].keypoints_unaug[0].keypoints[0].x == keypoint.x', 'batches_aug[0].keypoints_unaug[0].keypoints[0].y == keypoint.y', 'np.array_equal(batches_aug[0].images_aug, np.uint8([image_flipped]))', 'batches_aug[0].keypoints_aug[0].keypoints[0].x == kp_flipped.x', 'batches_aug[0].keypoints_aug[0].keypoints[0].y == kp_flipped.y', 'np.array_equal(batches_aug[0].images_unaug, np.uint8([image]))', 'batches_aug[0].keypoints_unaug[0].keypoints[0].x == keypoint.x', 'batches_aug[0].keypoints_unaug[0].keypoints[0].y == keypoint.y', 'np.array_equal(image_aug, image) or np.array_equal(image_aug, image_flipped)', '(keypoint_aug.x == keypoint.x and keypoint_aug.y == keypoint.y) \\', '0.4*nb_iterations <= nb_flipped_images <= 0.6*nb_iterations', 'nb_flipped_images == nb_flipped_keypoints', 'np.array_equal(image_aug, image) or np.array_equal(image_aug, image_flipped)', 'np.isclose(keypoint_aug.x, keypoint.x) and np.isclose(keypoint_aug.y, keypoint.y) \\', '0.4*nb_iterations <= nb_flipped_images <= 0.6*nb_iterations', 'nb_flipped_images == nb_flipped_keypoints', 'np.array_equal(image_aug, image) or np.array_equal(image_aug, image_flipped)', '0.4*nb_iterations <= nb_flipped_images <= 0.6*nb_iterations', 'np.array_equal(image_aug, image) or np.array_equal(image_aug, image_flipped)', '0.4*nb_iterations <= nb_flipped_images <= 0.6*nb_iterations', '(keypoint_aug.x == keypoint.x and keypoint_aug.y == keypoint.y) \\', '0.4*nb_iterations <= nb_flipped_keypoints <= 0.6*nb_iterations', 'nb_changed > 0', 'nb_changed == 0', 'np.allclose(heatmap_aug.arr_0to1, heatmap.arr_0to1)', 'np.allclose(heatmap_aug.arr_0to1, np.rot90(heatmap.arr_0to1, -1))', 'np.allclose(heatmaps_aug[i].arr_0to1, np.rot90(heatmap.arr_0to1, -1))', 'len(kpsoi_aug) == 2', 'len(kpsoi_aug[0].keypoints) == 0', 'len(kpsoi_aug[1].keypoints) == 1', 'kpsoi_aug[1].keypoints[0].x == 11', 'len(kpsoi_aug) == 2', 'len(kpsoi_aug[0].keypoints) == 0', 'len(kpsoi_aug[1].keypoints) == 0', 'len([kpresult for kpresult in translations_kps if kpresult is None]) == 1', 'translations_kps[5] is None', 'np.array_equal(translations_imgs, translations_kps)', 'np.allclose(kp_aug.x, kp.x)', 'np.allclose(kp_aug.y, kp.y)', 'np.allclose(kpsoi_aug.keypoints[0].x, 5 - 2 + kp_offset)', 'np.allclose(kpsoi_aug.keypoints[0].y, 1)', 'np.allclose(kpsoi_aug.keypoints[1].x, 5 - 5 + kp_offset)', 'np.allclose(kpsoi_aug.keypoints[1].y, 2)', 'np.allclose(kpsoi_aug.keypoints[2].x, 5 - 3 + kp_offset)', 'np.allclose(kpsoi_aug.keypoints[2].y, 3)', 'np.allclose(kpsoi_aug[i].keypoints[0].x, 5 - 2 + kp_offset)', 'np.allclose(kpsoi_aug[i].keypoints[0].y, 1)', 'np.allclose(kpsoi_aug[i].keypoints[1].x, 5 - 5 + kp_offset)', 'np.allclose(kpsoi_aug[i].keypoints[1].y, 2)', 'np.allclose(kpsoi_aug[i].keypoints[2].x, 5 - 3 + kp_offset)', 'np.allclose(kpsoi_aug[i].keypoints[2].y, 3)', 'np.allclose(bb_aug.x1, bb.x1)', 'np.allclose(bb_aug.x2, bb.x2)', 'np.allclose(bb_aug.y1, bb.y1)', 'np.allclose(bb_aug.y2, bb.y2)', 'np.allclose(bbsoi_aug.bounding_boxes[0].x1, 5 - 5 + kp_offset)', 'np.allclose(bbsoi_aug.bounding_boxes[0].x2, 5 - 4 + kp_offset)', 'np.allclose(bbsoi_aug.bounding_boxes[0].y1, 1)', 'np.allclose(bbsoi_aug.bounding_boxes[0].y2, 3)', 'np.allclose(bbsoi_aug.bounding_boxes[1].x1, 5 - 2 + kp_offset)', 'np.allclose(bbsoi_aug.bounding_boxes[1].x2, 5 - 0 + kp_offset)', 'np.allclose(bbsoi_aug.bounding_boxes[1].y1, 2.5)', 'np.allclose(bbsoi_aug.bounding_boxes[1].y2, 3)', 'np.allclose(bbsoi_aug[i].bounding_boxes[0].x1, 5 - 5 + kp_offset)', 'np.allclose(bbsoi_aug[i].bounding_boxes[0].x2, 5 - 4 + kp_offset)', 'np.allclose(bbsoi_aug[i].bounding_boxes[0].y1, 1)', 'np.allclose(bbsoi_aug[i].bounding_boxes[0].y2, 3)', 'np.allclose(bbsoi_aug[i].bounding_boxes[1].x1, 5 - 2 + kp_offset)', 'np.allclose(bbsoi_aug[i].bounding_boxes[1].x2, 5 - 0 + kp_offset)', 'np.allclose(bbsoi_aug[i].bounding_boxes[1].y1, 2.5)', 'np.allclose(bbsoi_aug[i].bounding_boxes[1].y2, 3)', 'isinstance(poly_oi_aug, ia.PolygonsOnImage)', 'len(poly_oi_aug.polygons) == 0', 'poly_oi_aug.shape == (11, 10, 3)', 'isinstance(poly_oi_aug, list)', 'isinstance(poly_oi_aug[0], ia.PolygonsOnImage)', 'len(poly_oi_aug[0].polygons) == 0', 'poly_oi_aug[0].shape == (11, 10, 3)', 'isinstance(poly_ois_aug, list)', 'isinstance(poly_ois_aug[0], ia.PolygonsOnImage)', 'isinstance(poly_ois_aug[0], ia.PolygonsOnImage)', 'len(poly_ois_aug[0].polygons) == 2', 'len(poly_ois_aug[1].polygons) == 2', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'poly_ois_aug[0].shape == (10, 10, 3)', 'poly_ois_aug[1].shape == (10, 10, 3)', 'not np.allclose(points1, points2, atol=1e-2, rtol=0)', 'not np.all(same)', 'len(points1) > 1', 'not np.all(same)', 'np.allclose(points1, points2, atol=1e-2, rtol=0)', 'found_image', 'found_poly', 'img_rot_idx == poly_rot_idx', '2 <= len(seen) <= 4  # assert not always the same rot', 'len([', 'translations_points[5] is None', 'np.array_equal(translations_imgs, translations_points)', 'isinstance(ls_oi_aug, ia.LineStringsOnImage)', 'len(ls_oi_aug.line_strings) == 0', 'ls_oi_aug.shape == (11, 10, 3)', 'isinstance(ls_oi_aug, list)', 'isinstance(ls_oi_aug[0], ia.LineStringsOnImage)', 'len(ls_oi_aug[0].line_strings) == 0', 'ls_oi_aug[0].shape == (11, 10, 3)', 'isinstance(ls_ois_aug, list)', 'isinstance(ls_ois_aug[0], ia.LineStringsOnImage)', 'isinstance(ls_ois_aug[0], ia.LineStringsOnImage)', 'len(ls_ois_aug[0].line_strings) == 2', 'len(ls_ois_aug[1].line_strings) == 2', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'ls_ois_aug[0].shape == (10, 10, 3)', 'ls_ois_aug[1].shape == (10, 10, 3)', 'not np.allclose(points1, points2, atol=1e-2, rtol=0)', 'not np.all(same)', 'not np.all(same)', 'np.allclose(points1, points2, atol=1e-2, rtol=0)', 'found_image', 'found_ls', 'img_rot_idx == ls_rot_idx', '2 <= len(seen) <= 4  # assert not always the same rot', 'len([', 'translations_points[5] is None', 'np.array_equal(translations_imgs, translations_points)', 'np.array_equal(segmap_aug.arr, segmap.arr)', 'np.array_equal(segmap_aug.arr, segmap.arr)', 'np.array_equal(segmap_aug.arr, segmap.arr)', 'np.array_equal(segmap_aug.arr, segmap.arr)', 'np.array_equal(segmap_aug.arr, expected)', 'np.array_equal(segmap_aug.arr, expected)', 'np.array_equal(segmap_aug.arr, segmap.arr)', 'np.array_equal(segmap_aug.arr, segmap.arr)', 'np.array_equal(segmap_aug.arr, expected)', 'np.array_equal(segmap_aug.arr, expected)', 'np.array_equal(segmap_aug.arr, segmap.arr)', 'np.array_equal(segmap_aug.arr, segmap.arr)', 'np.allclose(segmap_aug.arr, arr)', 'np.allclose(segmap_aug.arr, expected)', 'np.allclose(segmaps_aug[i].arr, np.rot90(segmap.arr, -1))', 'image_aug.shape == image.shape', 'np.array_equal(image, image_aug)', 'np.array_equal(images_aug[0], image)', 'np.allclose(heatmaps_aug[0].arr_0to1, heatmaps.arr_0to1)', 'np.array_equal(images_aug[0], image)', 'np.allclose(segmaps_aug[0].arr, segmaps.arr)', 'np.array_equal(images_aug[0], image)', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'np.array_equal(images_aug[0], image)', 'np.allclose(bbs_aug[0].to_xyxy_array(), bbs.to_xyxy_array())', 'np.array_equal(images_aug[0], image)', 'polygon_aug.exterior_almost_equals(polygon)', 'np.array_equal(image, image_aug)', 'np.array_equal(images_aug[0], image)', 'np.allclose(heatmaps_aug[0].arr_0to1, heatmaps.arr_0to1)', 'np.array_equal(images_aug[0], image)', 'np.allclose(segmaps_aug[0].arr, segmaps.arr)', 'np.array_equal(images_aug[0], image)', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'np.array_equal(images_aug[0], image)', 'np.allclose(bbs_aug[0].to_xyxy_array(), bbs.to_xyxy_array())', 'np.array_equal(images_aug[0], image)', 'polygon_aug.exterior_almost_equals(polygon)', 'np.array_equal(images_aug[0], image)', 'np.allclose(segmaps_aug[0].arr, segmaps.arr)', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'polygon_aug.exterior_almost_equals(polygon)', 'np.array_equal(images_aug[0], image)', 'np.allclose(segmaps_aug[0].arr, segmaps.arr)', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'polygon_aug.exterior_almost_equals(polygon)', 'np.all(image_aug[:, 0] == 0)', 'np.all(image_aug[:, 1:] == 255)', 'np.allclose(heatmaps_aug[0][:, 0], 0.0)', 'np.allclose(heatmaps_aug[0][:, 1:], 1.0)', 'np.all(segmaps_aug[0][:, 0] == 0)', 'np.all(segmaps_aug[0][:, 1:] == 1)', 'kps_aug == [(1, 0), (2, 2)]', 'bbs_aug == [(1, 0, 2, 1), (2, 2, 3, 3)]', 'polygons_aug == [(1, 0), (2, 0), (2, 1)]', 'len({shift_image, shift_heatmaps, shift_segmaps,', 'len(set(seen)) > 7', 'len({shift_image, shift_heatmaps, shift_segmaps,', 'len(set(seen)) == 1', 'isinstance(batch_aug.images_aug, list)', 'isinstance(batch_aug.heatmaps_aug, list)', 'isinstance(batch_aug.segmentation_maps_aug, list)', '(', 'len(set(shapes_images)) == 2', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'polygon_aug.exterior_almost_equals(polygon)', 'np.array_equal(images_aug[0], image)', 'np.allclose(heatmaps_aug[0].arr_0to1, heatmaps.arr_0to1)', 'np.array_equal(images_aug[0], image)', 'np.array_equal(segmaps_aug[0].arr, segmaps.arr)', 'np.array_equal(images_aug[0], image)', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'np.array_equal(images_aug[0], image)', 'np.allclose(bbs_aug[0].to_xyxy_array(), bbs.to_xyxy_array())', 'np.array_equal(images_aug[0], image)', 'polygon_aug.exterior_almost_equals(polygon)', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'polygon_aug.exterior_almost_equals(polygon)', 'np.array_equal(images_aug[0], image)', 'np.allclose(heatmaps_aug[0].arr_0to1, heatmaps.arr_0to1)', 'np.array_equal(segmaps_aug[0].arr, segmaps.arr)', 'np.array_equal(images_aug[0], image)', 'np.array_equal(segmaps_aug[0].arr, segmaps.arr)', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'polygon_aug.exterior_almost_equals(polygon)', 'np.array_equal(images_aug[0], image)', 'np.allclose(heatmaps_aug[0].arr_0to1, heatmaps.arr_0to1)', 'np.array_equal(segmaps_aug[0].arr, segmaps.arr)', 'np.array_equal(images_aug[0], image)', 'np.array_equal(segmaps_aug[0].arr, segmaps.arr)', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'polygon_aug.exterior_almost_equals(polygon)', 'np.array_equal(images_aug[0], image)', 'np.allclose(heatmaps_aug[0].arr_0to1, heatmaps.arr_0to1)', 'np.array_equal(segmaps_aug[0].arr, segmaps.arr)', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'np.allclose(bbs_aug[0].to_xyxy_array(), bbs.to_xyxy_array())', 'polygon_aug.exterior_almost_equals(polygon)', 'np.array_equal(images_aug[0], image)', 'np.allclose(heatmaps_aug[0].arr_0to1, heatmaps.arr_0to1)', 'np.array_equal(segmaps_aug[0].arr, segmaps.arr)', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'np.allclose(bbs_aug[0].to_xyxy_array(), bbs.to_xyxy_array())', 'polygon_aug.exterior_almost_equals(polygon)', 'msg in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'np.array_equal(images_aug[0], image)', 'np.allclose(heatmaps_aug[0].arr_0to1, heatmaps.arr_0to1)', 'mock_Pool.call_count == 1', 'mock_Pool.__enter__.call_count == 1', 'mock_Pool.__exit__.call_count == 1', 'mock_Pool.call_args[0][0] == augseq', 'mock_Pool.call_args[1][] == 2', 'mock_Pool.call_args[1][] == 10', 'mock_Pool.call_args[1][] == 17', 'len(augs) == 1', 'augs[0] == seq1', 'len(augs) == 1', 'augs[0] == seq2', 'len(augs) == 2', 'augs[0] == seq1', 'augs[1] == seq2', 'len(augs) == 2', 'augs[0] == seq1', 'augs[1] == seq2', 'len(augs) == 2', 'augs[0] == seq1', 'augs[1] == seq2', 'len(augs) == 1', 'augs[0] == seq2', 'len(augs) == 2', 'augs[0] == seq1', 'augs[1] == [seq2]', 'len(seqs) == 1', 'seqs[0].name == ', 'len(seqs) == 2', 'seqs[0].name == ', 'seqs[1].name == ', 'augs is not None', 'isinstance(augs, iaa.Noop)', 'in str(exc)', 'got_exception', 'augs is None', 'np.array_equal(images_aug[0], expected)', 'np.array_equal(images_aug[0], expected)', 'np.array_equal(images_aug[0], image)', 'np.array_equal(images_aug[0], image_lr)', 'keypoints_equal(keypoints_aug, keypoints)', 'target_cprs.random_state.equals(source_alt.random_state)', 'target_cprs[i].random_state.equals(source_alt[i].random_state)', 'np.array_equal(images_aug_source, images_aug_target)', 'target_cprs[0].deterministic is True', 'np.array_equal(images_aug_source, images_aug_target)', 'np.array_equal(images_aug_source, images_aug_target)', 'np.array_equal(images_aug_source1, images_aug_source2)', 'np.array_equal(images_aug_target1, images_aug_target2)', 'np.array_equal(images_aug_source1, images_aug_target1)', 'np.array_equal(images_aug_source2, images_aug_target2)', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'len(caught_warnings) == 1', '(', 'np.array_equal(observed, images_lr_ud)', 'np.array_equal(observed, images_lr_ud)', 'array_equal_lists(observed, images_lr_ud_list)', 'array_equal_lists(observed, images_lr_ud_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == polygons[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == polygons[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1.0 - 1e-6 < observed.max_value < 1.0 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_expected)', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.get_arr(), segmaps_arr_expected)', 'np.array_equal(observed_aug, images) \\', 'np.array_equal(observed_aug_det, images) \\', '(0.25 - 0.10) <= (1 - (nb_changed_aug / nb_iterations)) <= (0.25 + 0.10)', 'nb_changed_aug_det == 0', 'nb_changed_aug == 0', 'nb_changed_aug_det == 0', '(0.5 - 0.1) * nb_iterations <= nb_changed_aug_random <= (0.5 + 0.1) * nb_iterations', 'nb_changed_aug_random_det == 0', 'nb_images_first_second_unrandom == nb_iterations', 'nb_images_second_first_unrandom == 0', 'nb_heatmaps_first_second_unrandom == nb_iterations', 'nb_heatmaps_second_first_unrandom == 0', 'nb_segmaps_first_second_unrandom == nb_iterations', 'nb_segmaps_second_first_unrandom == 0', 'nb_keypoints_first_second_unrandom == nb_iterations', 'nb_keypoints_second_first_unrandom == 0', '(0.50 - 0.1) <= nb_images_first_second_random / nb_iterations <= (0.50 + 0.1)', '(0.50 - 0.1) <= nb_images_second_first_random / nb_iterations <= (0.50 + 0.1)', '(0.50 - 0.1) <= nb_keypoints_first_second_random / nb_iterations <= (0.50 + 0.1)', '(0.50 - 0.1) <= nb_keypoints_second_first_random / nb_iterations <= (0.50 + 0.1)', 'False', 'np.all(seen)', 'False', 'np.all(seen)', 'np.array_equal(observed, image)', 'np.array_equal(observed, image)', 'np.array_equal(observed, np.fliplr(image))', 'np.array_equal(observed, np.fliplr(image))', 'np.array_equal(observed, np.fliplr(np.flipud(image)))', 'np.array_equal(observed, np.fliplr(image))', 'np.array_equal(observed, np.fliplr(np.flipud(image)))', 'aug.get_parameters() == [False]', 'aug.get_parameters() == [True]', 'aug.get_children_lists() == [aug]', 'aug.__str__() == aug.__repr__() == expected', 'image_aug.dtype.type == image.dtype.type', 'np.all(image_aug == image)', 'image_aug.dtype.type == dtype', 'np.array_equal(image_aug, image)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == image)', 'image_aug.dtype.type == image.dtype.type', 'np.all(image_aug == expected)', 'image_aug.dtype.type == dtype', 'np.array_equal(image_aug, expected)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == expected)', 'np.array_equal(observed, zeros)', 'np.array_equal(observed, zeros)', 'np.array_equal(observed, zeros)', 'np.sum(observed) in [9*1, 9*2, 9*3]', 'np.sum(observed) in [9*1+9*2, 9*1+9*3, 9*2+9*3]', 'np.sum(observed) in [9*1+9*2+9*3]', 'np.sum(observed) in [9*1+9*2+9*3]', 'len(kpsoi_aug.keypoints) == 2', 'kpsoi_aug.shape == (5, 6, 3)', 'keypoints_equal([kpsoi_aug], [kpsoi])', 'len(kpsoi_aug.keypoints) == 2', 'kpsoi_aug.shape == (5, 6, 3)', 'keypoints_equal([kpsoi_aug], [kpsoi_x]) or keypoints_equal([kpsoi_aug], [kpsoi_y])', 'len(kpsoi_aug.keypoints) == 2', 'kpsoi_aug.shape == (5, 6, 3)', 'keypoints_equal([kpsoi_aug], [kpsoi_xy])', 'len(kpsoi_aug.keypoints) == 2', 'kpsoi_aug.shape == (5, 6, 3)', 'keypoints_equal([kpsoi_aug], [kpsoi_xy])', 'len(kpsoi_aug.keypoints) == 0', 'kpsoi_aug.shape == (5, 6, 3)', 'len(psoi_aug.polygons) == 1', 'psoi_aug.shape == (5, 6, 3)', 'psoi_aug.polygons[0].exterior_almost_equals(psoi.polygons[0])', 'psoi_aug.polygons[0].is_valid', 'len(psoi_aug.polygons) == 1', 'psoi_aug.shape == (5, 6, 3)', '(psoi_aug.polygons[0].exterior_almost_equals(psoi_x.polygons[0])', 'psoi_aug.polygons[0].is_valid', 'len(psoi_aug.polygons) == 1', 'psoi_aug.shape == (5, 6, 3)', 'psoi_aug.polygons[0].exterior_almost_equals(psoi_xy.polygons[0])', 'psoi_aug.polygons[0].is_valid', 'len(psoi_aug.polygons) == 1', 'psoi_aug.shape == (5, 6, 3)', 'psoi_aug.polygons[0].exterior_almost_equals(psoi_xy.polygons[0])', 'psoi_aug.polygons[0].is_valid', 'len(psoi_aug.polygons) == 0', 'psoi_aug.shape == (5, 6, 3)', 'np.all([obs.shape == (3, 3, 3) for obs in [observed0, observed1, observed2, observed3]])', 'np.all([0 - 1e-6 < obs.min_value < 0 + 1e-6 for obs in [observed0, observed1, observed2, observed3]])', 'np.all([1 - 1e-6 < obs.max_value < 1 + 1e-6 for obs in [observed0, observed1, observed2, observed3]])', 'np.allclose(obs.get_arr(), exp)', 'np.all([obs.shape == (3, 3, 3) for obs in [observed0, observed1, observed2, observed3]])', 'np.array_equal(obs.get_arr(), exp)', '0.25-0.1 <= p_observed[0] <= 0.25+0.1', '0.5-0.1 <= p_observed[1] <= 0.5+0.1', '0.5-0.1 <= p_observed[2] <= 0.5+0.1', '0.5-0.1 <= p_observed[3] <= 0.5+0.1', 'np.sum(observed) == 9*100', '0.5-0.1 <= p_observed[0] <= 0.5+0.1', '0.5-0.1 <= p_observed[1] <= 0.5+0.1', 'keypoints_equal([kpsoi_aug], [kpsoi])', 'keypoints_equal([kpsoi_aug], [kpsoi_x])', 'keypoints_equal([kpsoi_aug], [kpsoi_y])', 'keypoints_equal([kpsoi_aug], [kpsoi_xy])', 'False', 'np.all(seen)', 'psoi_aug.polygons[0].exterior_almost_equals(psoi.polygons[0])', 'psoi_aug.polygons[0].exterior_almost_equals(psoi_x.polygons[0])', 'psoi_aug.polygons[0].exterior_almost_equals(psoi_y.polygons[0])', 'psoi_aug.polygons[0].exterior_almost_equals(psoi_xy.polygons[0])', 'False', 'np.all(seen)', 'in str(exc)', 'got_exception', 'np.array_equal(observed, np.flipud(np.fliplr(image)))', 'found == 1', '200 - 50 < seen[0] < 200 + 50', '200 - 50 < seen[1] + seen[2] + seen[3] < 200 + 50', 'in str(exc)', 'got_exception', 'False', 'seen[0] > 10', 'seen[1] > 10', 'in str(exc)', 'got_exception', 'isinstance(observed, list)', 'np.all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'np.all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'np.all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'np.all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'ia.is_np_array(image)', 'observed.shape in [(4, 8, 3), (6, 8, 3)]', 'ia.is_np_array(observed)', 'np.all([img.shape in [(8, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'np.all([img.shape in [(8, 8, 3)] for img in observed])', 'ia.is_np_array(observed)', 'np.all([img.shape in [(8, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'np.all([img.shape in [(8, 8, 3)] for img in observed])', 'ia.is_np_array(observed)', 'observed.shape in [(8, 8, 3)]', 'image_aug.dtype.type == image.dtype.type', 'np.all(image_aug == image)', 'image_aug.dtype.type == dtype', 'np.array_equal(image_aug, image)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == image)', 'image_aug.dtype.type == image.dtype.type', 'any([np.all(image_aug == expected_i) for expected_i in expected])', 'image_aug.dtype.type == dtype', 'any([np.all(image_aug == expected_i) for expected_i in expected])', 'image_aug.dtype.type == dtype', 'any([np.all(image_aug == expected_i) for expected_i in expected])', 'np.array_equal(observed, zeros + 1)', 'np.array_equal(observed, zeros + 1)', 'np.array_equal(observed, zeros + 1)', 'expected - expected_tolerance < val < expected + expected_tolerance', 'np.array_equal(observed, images_lr)', 'np.array_equal(observed, images_lr)', 'array_equal_lists(observed, images_lr_list)', 'array_equal_lists(observed, images_lr_list)', 'keypoints_equal(observed, keypoints_lr)', 'keypoints_equal(observed, keypoints_lr)', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == polygons[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == polygons[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'observed.shape == heatmaps.shape', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.array_equal(observed.get_arr(), heatmaps_arr_lr)', 'observed.shape == segmaps.shape', 'np.array_equal(observed.get_arr(), segmaps_arr_lr)', 'np.array_equal(observed, images_ud)', 'np.array_equal(observed, images_ud)', 'array_equal_lists(observed, images_ud_list)', 'array_equal_lists(observed, images_ud_list)', 'keypoints_equal(observed, keypoints_ud)', 'keypoints_equal(observed, keypoints_ud)', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == polygons[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == polygons[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'observed.shape == heatmaps.shape', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.array_equal(observed.get_arr(), heatmaps_arr_ud)', 'observed.shape == segmaps.shape', 'np.array_equal(observed.get_arr(), heatmaps_arr_ud)', '(0.50 - 0.10) <= nb_images_if_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= nb_images_else_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= nb_keypoints_if_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= nb_keypoints_else_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= nb_polygons_if_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= nb_polygons_else_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= (1 - (nb_changed_aug / nb_iterations)) <= (0.50 + 0.10) # should be the same in roughly 50% of all cases', 'nb_changed_aug_det == 0', '(0.50 - 0.10) <= nb_images_if_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= nb_images_else_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= nb_keypoints_if_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= nb_keypoints_else_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= nb_polygons_if_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= nb_polygons_else_branch / nb_iterations <= (0.50 + 0.10)', '(0.50 - 0.10) <= (1 - (nb_changed_aug / nb_iterations)) <= (0.50 + 0.10)', 'nb_changed_aug_det == 0', 'len(observed.keypoints) == 0', 'observed.shape == (1, 2, 3)', 'len(observed.polygons) == 0', 'observed.shape == (1, 2, 3)', 'len(uq) == 1', 'False', 'seen[0] > 20', 'seen[1] > 20', 'in str(exc)', 'got_exception', 'np.array_equal(observed, image)', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'np.array_equal(observed1, image + 10)', 'np.array_equal(observed2, image)', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', '0.75 - 1e-8 < params[0].p.value < 0.75 + 1e-8', 'aug.__repr__() == aug.__str__() == expected', 'aug.__repr__() == aug.__str__() == expected', 'isinstance(observed, list) \\', 'np.all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'np.all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'isinstance(observed, list) \\', 'np.all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'np.all([img.shape in [(4, 8, 3), (6, 8, 3)] for img in observed])', 'ia.is_np_array(image)', 'observed.shape in [(4, 8, 3), (6, 8, 3)]', 'isinstance(observed, list) \\', 'np.all([16 <= img.shape[0] <= 30 and img.shape[1:] == (32, 3) for img in observed])', 'isinstance(observed, list)', 'np.all([16 <= img.shape[0] <= 30 and img.shape[1:] == (32, 3) for img in observed])', 'isinstance(observed, list) \\', 'np.all([16 <= img.shape[0] <= 30 and img.shape[1:] == (32, 3) for img in observed])', 'isinstance(observed, list)', 'np.all([16 <= img.shape[0] <= 30 and img.shape[1:] == (32, 3) for img in observed])', 'ia.is_np_array(image)', '16 <= observed.shape[0] <= 30 and observed.shape[1:] == (32, 3)', 'ia.is_np_array(observed)', 'np.all([img.shape in [(8, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'np.all([img.shape in [(8, 8, 3)] for img in observed])', 'ia.is_np_array(observed)', 'np.all([img.shape in [(8, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'np.all([img.shape in [(8, 8, 3)] for img in observed])', 'ia.is_np_array(observed)', 'observed.shape in [(8, 8, 3)]', 'ia.is_np_array(observed)', 'np.all([img.shape in [(8, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'np.all([img.shape in [(8, 8, 3)] for img in observed])', 'ia.is_np_array(observed)', 'np.all([img.shape in [(8, 8, 3)] for img in observed])', 'isinstance(observed, list)', 'np.all([img.shape in [(8, 8, 3)] for img in observed])', 'ia.is_np_array(observed)', 'observed.shape in [(8, 8, 3)]', 'image_aug.dtype.type == image.dtype.type', 'np.all(image_aug == image)', 'image_aug.dtype.type == dtype', 'np.array_equal(image_aug, image)', 'image_aug.dtype.type == dtype', 'np.all(image_aug == image)', 'image_aug.dtype.type == image.dtype.type', 'False', 'np.all(seen)', 'image_aug.dtype.type == dtype', 'np.all(seen)', 'image_aug.dtype.type == dtype', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'array_equal_lists(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'heatmap_aug.shape == (3, 3, 3)', 'np.allclose(heatmap_aug.get_arr(), heatmap_arr)', 'heatmap_aug.shape == (3, 3, 3)', 'np.allclose(heatmap_aug.get_arr(), heatmap_arr_shifted)', 'segmap_aug.shape == (3, 3, 3)', 'np.array_equal(segmap_aug.get_arr(), segmap_arr)', 'segmap_aug.shape == (3, 3, 3)', 'np.array_equal(segmap_aug.get_arr(), segmap_arr_shifted)', 'len(kpsoi_aug.keypoints) == 2', 'kpsoi_aug.shape == (5, 6, 3)', 'keypoints_equal([kpsoi_aug], [kpsoi])', 'len(kpsoi_aug.keypoints) == 2', 'kpsoi_aug.shape == (5, 6, 3)', 'keypoints_equal([kpsoi_aug], [kpsoi_x])', 'len(kpsoi_aug.keypoints) == 2', 'kpsoi_aug.shape == (5, 6, 3)', 'keypoints_equal([kpsoi_aug], [kpsoi_x])', 'len(kpsoi_aug.keypoints) == 0', 'kpsoi_aug.shape == (5, 6, 3)', 'len(psoi_aug.polygons) == 1', 'psoi_aug.shape == (5, 6, 3)', 'psoi_aug.polygons[0].exterior_almost_equals(psoi.polygons[0])', 'psoi_aug.polygons[0].is_valid', 'len(psoi_aug.polygons) == 1', 'psoi_aug.shape == (5, 6, 3)', 'psoi_aug.polygons[0].exterior_almost_equals(psoi_x.polygons[0])', 'psoi_aug.polygons[0].is_valid', 'len(psoi_aug.polygons) == 1', 'psoi_aug.shape == (5, 6, 3)', 'psoi_aug.polygons[0].exterior_almost_equals(psoi_x.polygons[0])', 'psoi_aug.polygons[0].is_valid', 'len(psoi_aug.polygons) == 0', 'psoi_aug.shape == (5, 6, 3)', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'len(params) == 1', 'params[0] == [1]', 'aug.get_children_lists() == [children]', 'aug.__repr__() == aug.__str__() == expected', 'image_aug.dtype.type == image.dtype.type', 'np.all(image_aug == image)', 'image_aug.dtype.type == dtype', 'np.array_equal(image_aug, image)', 'image_aug.dtype.type == dtype', 'image_aug.dtype.type == image.dtype.type', 'np.all(image_aug == expected)', 'image_aug.dtype.type == dtype', 'np.array_equal(image_aug, expected)', 'image_aug.dtype.type == dtype', 'False', 'np.all(seen)', 'np.array_equal(img_aug, img)', 'False', 'np.all(seen)', 'isinstance(aug.p, iap.Binomial)', 'isinstance(aug.p.p, iap.Deterministic)', 'np.allclose(aug.p.p.value, 0.9)', 'aug.channels == [0, 2]', 'aug.get_parameters()[0] == aug.p', 'aug.get_parameters()[1] == aug.channels', 'hm_aug.shape == (4, 4, 3)', 'hm_aug.arr_0to1.shape == (1, 3, 1)', 'np.allclose(hm.arr_0to1, hm_aug.arr_0to1)', 'segmap_aug.shape == (4, 4, 3)', 'segmap_aug.arr.shape == (1, 3, 1)', 'np.array_equal(segmap.arr, segmap_aug.arr)', 'kpsoi_aug.shape == (10, 10, 3)', 'np.allclose(kpsoi_aug.keypoints[0].x, 3)', 'np.allclose(kpsoi_aug.keypoints[0].y, 1)', 'np.allclose(kpsoi_aug.keypoints[1].x, 2)', 'np.allclose(kpsoi_aug.keypoints[1].y, 4)', 'psoi_aug.shape == (10, 10, 3)', 'psoi_aug.polygons[0].exterior_almost_equals(psoi.polygons[0])', 'image_aug.dtype.type == image.dtype.type', 'False', 'np.all(seen)', 'image_aug.dtype.type == dtype', 'image_aug.dtype.type == dtype', 'np.array_equal(observed, images_flipped)', 'np.array_equal(observed, images)', 'array_equal_lists(observed, images_flipped_list)', 'array_equal_lists(observed, images_list)', 'array_equal_lists(observed, images_flipped_list2d3d)', 'array_equal_lists(observed, images_list2d3d)']",[],[],[],[],[],[],[],[],[],[],[],[]
1721,aleju,kontakt@ajung.name,2019-08-24 12:34:37+02:00,d8269666f219758d67823475c15f4bd8983cd1cc,https://github.com/aleju/imgaug/commit/d8269666f219758d67823475c15f4bd8983cd1cc,Add refactoring changes to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1722,aleju,kontakt@ajung.name,2019-08-24 13:34:53+02:00,afbe84c4bd13acea3d994ecb29b3cc711547f8be,https://github.com/aleju/imgaug/commit/afbe84c4bd13acea3d994ecb29b3cc711547f8be,Fix broken example in docstring,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1723,aleju,kontakt@ajung.name,2019-08-14 16:33:54+02:00,d27ed52554552636f8047872c1594a5651bc2c48,https://github.com/aleju/imgaug/commit/d27ed52554552636f8047872c1594a5651bc2c48,Fix Affine crashing for heatmaps with >4 channels (#376),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1724,aleju,kontakt@ajung.name,2019-08-14 16:34:44+02:00,1a81fab73abba32bb766b8c4ef2b2cb3552db4f7,https://github.com/aleju/imgaug/commit/1a81fab73abba32bb766b8c4ef2b2cb3552db4f7,Add test for unusual channel numbers in Affine,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestAffine(unittest.TestCase):'],[],[],[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['image_aug.shape == (3, 3, nb_channels)', 'heatmap_aug.arr_0to1.shape == (3, 3, nb_channels)', 'heatmap_aug.shape == image.shape', 'np.allclose(image_aug[:, 0:2, :], 128, rtol=0, atol=2)', 'np.allclose(image_aug[:, 2:3, 0:3], 255, rtol=0, atol=2)', 'np.allclose(image_aug[:, 2:3, 3:], 255, rtol=0, atol=2)', 'np.allclose(hm_aug_arr[:, 0:2, :], 0.5, rtol=0,', 'np.allclose(hm_aug_arr[:, 2:3, :], 0.0, rtol=0,']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1725,aleju,kontakt@ajung.name,2019-08-14 16:43:20+02:00,37adb168debc516394afcb58323914d98b0aba90,https://github.com/aleju/imgaug/commit/37adb168debc516394afcb58323914d98b0aba90,Remove shape check for cv2 warp in Affine,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1726,aleju,kontakt@ajung.name,2019-08-14 16:47:25+02:00,3f50bcbdecb9e2df977b80641b263baf7fae3518,https://github.com/aleju/imgaug/commit/3f50bcbdecb9e2df977b80641b263baf7fae3518,Fix bad error message in Affine,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1727,aleju,kontakt@ajung.name,2019-08-14 16:50:45+02:00,628792de475ac2703dd56fe04ac1fe0286b3c57a,https://github.com/aleju/imgaug/commit/628792de475ac2703dd56fe04ac1fe0286b3c57a,Add latest Affine changes to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1728,aleju,kontakt@ajung.name,2019-08-24 14:29:34+02:00,6220995448de4fc65c429f857d09bf708a5b2187,https://github.com/aleju/imgaug/commit/6220995448de4fc65c429f857d09bf708a5b2187,Add PR ID to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1729,aleju,kontakt@ajung.name,2019-08-14 17:26:06+02:00,36f67dd0a4f922a3699dcaa4eff0bb653ce3da93,https://github.com/aleju/imgaug/commit/36f67dd0a4f922a3699dcaa4eff0bb653ce3da93,Fix Polygon.clip_out_of_image() crashing on edge/point intersections (#310),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1730,aleju,kontakt@ajung.name,2019-08-14 17:26:34+02:00,1a9d7a5d1cbb27eff6d3306d72a14a1e423fa9ee,https://github.com/aleju/imgaug/commit/1a9d7a5d1cbb27eff6d3306d72a14a1e423fa9ee,Extend test for Polygon.clip_out_of_image(),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 0', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 1', 'multipoly_clipped[0].exterior_almost_equals(np.float32([', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 0', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 1', 'multipoly_clipped[0].exterior_almost_equals(np.float32([']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1731,aleju,kontakt@ajung.name,2019-08-14 18:15:27+02:00,7dafcde0b789aa0fb9c2e31e5848c08af4f4b4f3,https://github.com/aleju/imgaug/commit/7dafcde0b789aa0fb9c2e31e5848c08af4f4b4f3,Fix/Improve Poly.clip_out_of_image() for 0/1/2-point polygons,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1732,aleju,kontakt@ajung.name,2019-08-14 18:17:14+02:00,ef50c188bbf20a76a43cc094548e70cd676bcf22,https://github.com/aleju/imgaug/commit/ef50c188bbf20a76a43cc094548e70cd676bcf22,Fix Polygon.is_out_of_image() failing in corner case,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1733,aleju,kontakt@ajung.name,2019-08-14 18:17:45+02:00,ef073558a3af5a9396e6266b912248a24a3873d4,https://github.com/aleju/imgaug/commit/ef073558a3af5a9396e6266b912248a24a3873d4,Add Poly.is_out_of_image() corner case test,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['not poly.is_out_of_image((100, 100, 3), fully=True, partly=False)', 'poly.is_out_of_image((100, 100, 3), fully=False, partly=True)', 'not poly.is_out_of_image((1, 1, 3), fully=True, partly=False)', 'poly.is_out_of_image((1, 1, 3), fully=False, partly=True)', 'poly.is_out_of_image((1, 1, 3), fully=True, partly=True)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1734,aleju,kontakt@ajung.name,2019-08-14 18:30:58+02:00,b005400564583483b7b8a5da1d8926fe2388135c,https://github.com/aleju/imgaug/commit/b005400564583483b7b8a5da1d8926fe2388135c,Add test cases for Polygon.is_out_of_image(),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['not poly.is_out_of_image((100, 100, 3), fully=True, partly=False)', 'not poly.is_out_of_image((100, 100, 3), fully=False, partly=True)', 'not poly.is_out_of_image((3, 3, 3), fully=True, partly=False)', 'poly.is_out_of_image((3, 3, 3), fully=False, partly=True)', 'poly.is_out_of_image((1, 1, 3), fully=True, partly=False)', 'not poly.is_out_of_image((1, 1, 3), fully=False, partly=True)', 'not poly.is_out_of_image((100, 100, 3), fully=True, partly=False)', 'not poly.is_out_of_image((100, 100, 3), fully=False, partly=True)', 'poly.is_out_of_image((1, 1, 3), fully=True, partly=False)', 'not poly.is_out_of_image((1, 1, 3), fully=False, partly=True)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1735,aleju,kontakt@ajung.name,2019-08-14 18:45:03+02:00,8bdf80d8d364e9451fddb561bf54969f1093fe55,https://github.com/aleju/imgaug/commit/8bdf80d8d364e9451fddb561bf54969f1093fe55,Add more tests for Polygon.clip_out_of_image(),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 1', 'multipoly_clipped[0].exterior_almost_equals(np.float32([', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 1', 'multipoly_clipped[0].exterior_almost_equals(np.float32([', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 1', 'multipoly_clipped[0].exterior_almost_equals(np.float32([', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 0']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1736,aleju,kontakt@ajung.name,2019-08-14 20:20:06+02:00,eec47106d0022ad4b35fd0c9706d75ac5ae7fcf3,https://github.com/aleju/imgaug/commit/eec47106d0022ad4b35fd0c9706d75ac5ae7fcf3,Add Polygon fixes to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1737,aleju,kontakt@ajung.name,2019-08-14 20:21:33+02:00,b7214c94bdf13854ad2c0c4c0fb54d40960f067a,https://github.com/aleju/imgaug/commit/b7214c94bdf13854ad2c0c4c0fb54d40960f067a,Add PR ID to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1738,aleju,kontakt@ajung.name,2019-08-15 11:31:52+02:00,98a525122f28d2f322ac967f2f87658d001fc611,https://github.com/aleju/imgaug/commit/98a525122f28d2f322ac967f2f87658d001fc611,Add check script to analyze performance of flip methods,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1739,aleju,kontakt@ajung.name,2019-08-15 11:32:31+02:00,38b649a858d1c7bcd51912cee3fddb6177d6ba97,https://github.com/aleju/imgaug/commit/38b649a858d1c7bcd51912cee3fddb6177d6ba97,Improve Fliplr performance,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1740,aleju,kontakt@ajung.name,2019-08-15 12:35:32+02:00,3c0a4c07485e79f1ce07303afaa6d636f51ad65f,https://github.com/aleju/imgaug/commit/3c0a4c07485e79f1ce07303afaa6d636f51ad65f,Add flip.fliplr() and refactor Fliplr to use that function,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1741,aleju,kontakt@ajung.name,2019-08-15 12:36:04+02:00,983e0f739577a71233571823290c6805b8f8eba6,https://github.com/aleju/imgaug/commit/983e0f739577a71233571823290c6805b8f8eba6,Add tests for flip.fliplr(),1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class Test_fliplr(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['mock_sliced.call_count == 0', 'mock_cv2.call_count == 0', 'arr_flipped.dtype.name == ', 'arr_flipped.shape == arr.shape', 'np.array_equal(arr_flipped, expected)', 'arr_flipped.dtype.name == ', 'arr_flipped.shape == (4, 0, 1)', 'arr_flipped.dtype.name == ', 'arr_flipped.shape == (4, 0, 1)', 'arr_flipped.dtype.name == ', 'arr_flipped.shape == (1, 3)', 'np.array_equal(arr_flipped, expected)', 'arr_flipped.dtype.name == dt.name', 'arr_flipped.shape == (1, 3)', 'np.array_equal(arr_flipped, expected)', 'arr_flipped.dtype.name == dt.name', 'arr_flipped.shape == (1, 3)', 'np.allclose(arr_flipped, expected, rtol=0, atol=atol)', 'arr_flipped.dtype.name == dt.name', 'arr_flipped.shape == (1, 3)', 'np.allclose(arr_flipped, expected, rtol=0, atol=atol)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1742,aleju,kontakt@ajung.name,2019-08-15 13:39:53+02:00,08d3c1fcb633da29c906b52dd33353cd3fab84a2,https://github.com/aleju/imgaug/commit/08d3c1fcb633da29c906b52dd33353cd3fab84a2,Extend check script to analyze vertical flips,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1743,aleju,kontakt@ajung.name,2019-08-15 13:40:13+02:00,1e1c48de0c4f037cd8704619446f8cb270196c64,https://github.com/aleju/imgaug/commit/1e1c48de0c4f037cd8704619446f8cb270196c64,Improve performance of Flipud,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1744,aleju,kontakt@ajung.name,2019-08-15 13:53:39+02:00,d61d04b9b66f5a44148b1ab40717a086bcb984c5,https://github.com/aleju/imgaug/commit/d61d04b9b66f5a44148b1ab40717a086bcb984c5,Add flip.flipud() function,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1745,aleju,kontakt@ajung.name,2019-08-15 13:53:56+02:00,1259185d6159278fac3bd1380737000f684f2791,https://github.com/aleju/imgaug/commit/1259185d6159278fac3bd1380737000f684f2791,Add tests for flip.flipud(),1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class Test_flipud(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['arr_flipped.dtype.name == ', 'arr_flipped.shape == arr.shape', 'np.array_equal(arr_flipped, expected)', 'arr_flipped.dtype.name == ', 'arr_flipped.shape == (4, 0, 1)', 'arr_flipped.dtype.name == ', 'arr_flipped.shape == (0, 4, 1)', 'arr_flipped.dtype.name == ', 'arr_flipped.shape == (3, 1)', 'np.array_equal(arr_flipped, expected)', 'arr_flipped.dtype.name == dt.name', 'arr_flipped.shape == (3, 1)', 'np.array_equal(arr_flipped, expected)', 'arr_flipped.dtype.name == dt.name', 'arr_flipped.shape == (3, 1)', 'np.allclose(arr_flipped, expected, rtol=0, atol=atol)', 'arr_flipped.dtype.name == dt.name', 'arr_flipped.shape == (3, 1)', 'np.allclose(arr_flipped, expected, rtol=0, atol=atol)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1746,aleju,kontakt@ajung.name,2019-08-15 13:55:55+02:00,c3901eb51bc8c60f83327c71f9d9e65f00c467e0,https://github.com/aleju/imgaug/commit/c3901eb51bc8c60f83327c71f9d9e65f00c467e0,Fix flip._fliplr_cv2,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['arr_flipped.dtype.name == ', 'arr_flipped.shape == (0, 4, 1)', 'arr_flipped.dtype.name == ', 'arr_flipped.shape == (0, 4, 1)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1747,aleju,kontakt@ajung.name,2019-08-15 14:00:05+02:00,854c64071934be3423ed69a3ba294bc04bd9f30b,https://github.com/aleju/imgaug/commit/854c64071934be3423ed69a3ba294bc04bd9f30b,Fix Fliplr/ud KP and img aug using different conditions,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1748,aleju,kontakt@ajung.name,2019-08-15 14:01:53+02:00,dc52fc74cbc9838e3e1036ee9b3a3b166cc19383,https://github.com/aleju/imgaug/commit/dc52fc74cbc9838e3e1036ee9b3a3b166cc19383,Update Flipud dtype docstring and fix typo,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1749,aleju,kontakt@ajung.name,2019-08-15 14:05:35+02:00,03165075709596ddfc3858dc6cdf38e1b3905db3,https://github.com/aleju/imgaug/commit/03165075709596ddfc3858dc6cdf38e1b3905db3,Add flip changes to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1750,aleju,kontakt@ajung.name,2019-08-15 14:09:49+02:00,709cd84039a3b53e6d89fbb3d069383f953110bc,https://github.com/aleju/imgaug/commit/709cd84039a3b53e6d89fbb3d069383f953110bc,Add PR ID to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1751,aleju,kontakt@ajung.name,2019-08-24 15:23:09+02:00,630ca51eaf0d96b4b0dad3d5e50b3e20584546d1,https://github.com/aleju/imgaug/commit/630ca51eaf0d96b4b0dad3d5e50b3e20584546d1,Deactivate pylint info,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1752,aleju,kontakt@ajung.name,2019-08-14 14:48:40+02:00,063c6abd022d8f179d4664e4f79338c9dfc273d3,https://github.com/aleju/imgaug/commit/063c6abd022d8f179d4664e4f79338c9dfc273d3,Make _augment_keypoints() default to noop,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1753,aleju,kontakt@ajung.name,2019-08-14 14:52:56+02:00,606d24a4bd876a96450d8f61fd2e4e6a57748044,https://github.com/aleju/imgaug/commit/606d24a4bd876a96450d8f61fd2e4e6a57748044,Make _augment_heatmaps() default to noop,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1754,aleju,kontakt@ajung.name,2019-08-14 15:06:48+02:00,a297548128fc845f898cd4427d2a7c9b60b6642c,https://github.com/aleju/imgaug/commit/a297548128fc845f898cd4427d2a7c9b60b6642c,Remove noop _augment_keypoints()/*_heatmaps() implementations,10,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1755,aleju,kontakt@ajung.name,2019-08-14 15:10:32+02:00,e280bee556a790021235aec2deca3442c7bde9f6,https://github.com/aleju/imgaug/commit/e280bee556a790021235aec2deca3442c7bde9f6,Add changes of PR to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1756,aleju,kontakt@ajung.name,2019-08-14 15:12:07+02:00,325f4a52e504ac83c42877064b54dd1fe7106e04,https://github.com/aleju/imgaug/commit/325f4a52e504ac83c42877064b54dd1fe7106e04,Add PR ID to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1757,aleju,kontakt@ajung.name,2019-08-24 15:46:57+02:00,5e362681116e88d9dc784c52a1b16966f9cc761b,https://github.com/aleju/imgaug/commit/5e362681116e88d9dc784c52a1b16966f9cc761b,Adapt meta tests to removed noop augment_heatmaps/_keypoints,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1758,aleju,kontakt@ajung.name,2019-08-24 20:22:53+02:00,9c8f8d95901f2aa5530061d2ca6bd891969b19bf,https://github.com/aleju/imgaug/commit/9c8f8d95901f2aa5530061d2ca6bd891969b19bf,Improve docstring of augment(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1759,aleju,kontakt@ajung.name,2019-08-24 20:56:11+02:00,46e05182f654a7089fe18b2a20021053c429baf0,https://github.com/aleju/imgaug/commit/46e05182f654a7089fe18b2a20021053c429baf0,Synchronize requirements.txt and setup.py,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1760,aleju,kontakt@ajung.name,2019-08-24 21:01:41+02:00,f07785dd973eb319bba7e7c8ab34fcf16ce0ac56,https://github.com/aleju/imgaug/commit/f07785dd973eb319bba7e7c8ab34fcf16ce0ac56,Add scikit-image version change to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1761,aleju,kontakt@ajung.name,2019-08-24 21:05:46+02:00,0fb0d90ddb207ef8c24a6f894762fa89c8de8a31,https://github.com/aleju/imgaug/commit/0fb0d90ddb207ef8c24a6f894762fa89c8de8a31,Add more python versions to travis,1,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1762,aleju,kontakt@ajung.name,2019-08-24 20:44:24+02:00,dec6b93d0401497ae0c210f5174128e0f8e4b7e0,https://github.com/aleju/imgaug/commit/dec6b93d0401497ae0c210f5174128e0f8e4b7e0,Mark clip functions in augmenters.meta as deprecated,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_clipped[0, 0] == 15', 'image_clipped[0, 1] == 20', 'image_clipped[0, 2] == 25', 'len(caught_warnings) >= 1', 'in str(caught_warnings[-1].message)', 'image_clipped[0, 0] == 15', 'image_clipped[0, 1] == 20', 'image_clipped[0, 2] == 25', 'len(caught_warnings) >= 1', 'in str(caught_warnings[-1].message)', 'np.all(imgs_clipped[:, 0, 0] == 15)', 'np.all(imgs_clipped[:, 0, 1] == 20)', 'np.all(imgs_clipped[:, 0, 2] == 25)', 'isinstance(imgs_clipped, list)', 'np.all([imgs_clipped[i][0, 0] == 15', 'np.all([imgs_clipped[i][0, 1] == 20', 'np.all([imgs_clipped[i][0, 2] == 25', 'len(caught_warnings) >= 1', 'in str(caught_warnings[-1].message)', 'np.all(imgs_clipped[:, 0, 0] == 15)', 'np.all(imgs_clipped[:, 0, 1] == 20)', 'np.all(imgs_clipped[:, 0, 2] == 25)', 'isinstance(imgs_clipped, list)', 'np.all([imgs_clipped[i][0, 0] == 15', 'np.all([imgs_clipped[i][0, 1] == 20', 'np.all([imgs_clipped[i][0, 2] ==', 'len(caught_warnings) >= 1', 'in str(caught_warnings[-1].message)']",[],[],[],[],[],[],[],[],[],[],[],[],"['image_clipped[0, 0] == 15', 'image_clipped[0, 1] == 20', 'image_clipped[0, 2] == 25', 'image_clipped[0, 0] == 15', 'image_clipped[0, 1] == 20', 'image_clipped[0, 2] == 25', 'np.all(imgs_clipped[:, 0, 0] == 15)', 'np.all(imgs_clipped[:, 0, 1] == 20)', 'np.all(imgs_clipped[:, 0, 2] == 25)', 'isinstance(imgs_clipped, list)', 'np.all([imgs_clipped[i][0, 0] == 15 for i in sm.xrange(len(images))])', 'np.all([imgs_clipped[i][0, 1] == 20 for i in sm.xrange(len(images))])', 'np.all([imgs_clipped[i][0, 2] == 25 for i in sm.xrange(len(images))])', 'np.all(imgs_clipped[:, 0, 0] == 15)', 'np.all(imgs_clipped[:, 0, 1] == 20)', 'np.all(imgs_clipped[:, 0, 2] == 25)', 'isinstance(imgs_clipped, list)', 'np.all([imgs_clipped[i][0, 0] == 15 for i in sm.xrange(len(images))])', 'np.all([imgs_clipped[i][0, 1] == 20 for i in sm.xrange(len(images))])', 'np.all([imgs_clipped[i][0, 2] == 25 for i in sm.xrange(len(images))])']",[],[],[],[],[],[],[],[],[],[],[],[]
1763,aleju,kontakt@ajung.name,2019-08-24 20:45:43+02:00,6e972dd05714a08d2afda0c7118467b70e6e82b1,https://github.com/aleju/imgaug/commit/6e972dd05714a08d2afda0c7118467b70e6e82b1,Add PR ID to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1764,aleju,kontakt@ajung.name,2019-08-24 21:16:08+02:00,279d6e3b7d392945bc3446eb86ddaf6a8bcb3768,https://github.com/aleju/imgaug/commit/279d6e3b7d392945bc3446eb86ddaf6a8bcb3768,Switch from warnings.warn() to imgaug.warn(),8,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1765,aleju,kontakt@ajung.name,2019-08-24 21:17:34+02:00,765bec6aa6b2afa159bdc870dd60fc48dbf3c122,https://github.com/aleju/imgaug/commit/765bec6aa6b2afa159bdc870dd60fc48dbf3c122,Add imgaug.warn() switch to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1766,aleju,kontakt@ajung.name,2019-08-25 09:18:28+02:00,e2051ea9d382926dd982239a641ef5d4bba8dec3,https://github.com/aleju/imgaug/commit/e2051ea9d382926dd982239a641ef5d4bba8dec3,Remove unnecessary imports,5,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1767,aleju,kontakt@ajung.name,2019-08-24 16:37:25+02:00,008f115b4fa3268aa49b9681b080b6004711c7cb,https://github.com/aleju/imgaug/commit/008f115b4fa3268aa49b9681b080b6004711c7cb,Add test cases for is_callable(),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['ia.is_callable(value) is True', 'ia.is_callable(value) is False']",[],[],[],[],[],[],[],[],[],[],[],[],"['ia.is_callable(value) == True', 'ia.is_callable(value) == False']",[],[],[],[],[],[],[],[],[],[],[],[]
1768,aleju,kontakt@ajung.name,2019-08-24 16:44:42+02:00,5140b6df3556a2118075746adc96c8696c8d7024,https://github.com/aleju/imgaug/commit/5140b6df3556a2118075746adc96c8696c8d7024,Switch Convolve matrix callable check to is_callable(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1769,aleju,kontakt@ajung.name,2019-08-24 16:50:59+02:00,2f9747f8bb62536824516a61b9a3e4457a6a649f,https://github.com/aleju/imgaug/commit/2f9747f8bb62536824516a61b9a3e4457a6a649f,Switch Sharpen from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1770,aleju,kontakt@ajung.name,2019-08-24 16:54:52+02:00,d57f8b30dc9d3f7129467dbbe19292bda802f1c1,https://github.com/aleju/imgaug/commit/d57f8b30dc9d3f7129467dbbe19292bda802f1c1,Switch Emboss from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1771,aleju,kontakt@ajung.name,2019-08-24 17:00:36+02:00,d8af56c420bc923f457f33b87ca9f204e8dda6cc,https://github.com/aleju/imgaug/commit/d8af56c420bc923f457f33b87ca9f204e8dda6cc,Switch EdgeDetect from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1772,aleju,kontakt@ajung.name,2019-08-24 17:05:42+02:00,fb329c0433deb20b14e8389a404bd0865c4a67d0,https://github.com/aleju/imgaug/commit/fb329c0433deb20b14e8389a404bd0865c4a67d0,Switch DirectedEdgeDetect from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1773,aleju,kontakt@ajung.name,2019-08-24 17:15:39+02:00,5cbae0a1aee4687731a666c475fcb6f4da751b7e,https://github.com/aleju/imgaug/commit/5cbae0a1aee4687731a666c475fcb6f4da751b7e,Switch AdditiveGaussianNoise from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1774,aleju,kontakt@ajung.name,2019-08-24 17:19:07+02:00,1c7412505646c4a17d9b21977cfb1b0e8406b0eb,https://github.com/aleju/imgaug/commit/1c7412505646c4a17d9b21977cfb1b0e8406b0eb,Switch AdditiveLaplaceNoise from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1775,aleju,kontakt@ajung.name,2019-08-24 17:22:19+02:00,ffe6e35e1677789d2df68742bc207ce8d80b2f98,https://github.com/aleju/imgaug/commit/ffe6e35e1677789d2df68742bc207ce8d80b2f98,Switch AdditivePoissonNoise from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1776,aleju,kontakt@ajung.name,2019-08-24 17:26:19+02:00,7e7567dbdc29e557723e3c02a65f1cf78d343469,https://github.com/aleju/imgaug/commit/7e7567dbdc29e557723e3c02a65f1cf78d343469,Switch Dropout from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1777,aleju,kontakt@ajung.name,2019-08-24 17:29:44+02:00,ea9421a6830e4469734463c6b0d37320f3b7c602,https://github.com/aleju/imgaug/commit/ea9421a6830e4469734463c6b0d37320f3b7c602,Switch DropoutCoarse from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1778,aleju,kontakt@ajung.name,2019-08-24 17:37:06+02:00,3907d60c23ca57a20f749edf81ed259c5fd760d9,https://github.com/aleju/imgaug/commit/3907d60c23ca57a20f749edf81ed259c5fd760d9,Switch SaltAndPepper and ImpulseNoise from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1779,aleju,kontakt@ajung.name,2019-08-24 17:40:50+02:00,c75c819707c4e174e84e7611579483c4333580f5,https://github.com/aleju/imgaug/commit/c75c819707c4e174e84e7611579483c4333580f5,Switch CoarseSaltAndPepper from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1780,aleju,kontakt@ajung.name,2019-08-24 17:42:08+02:00,65a83cf9b540b1b247164e64b1d85dbdea90cf39,https://github.com/aleju/imgaug/commit/65a83cf9b540b1b247164e64b1d85dbdea90cf39,Switch Salt from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1781,aleju,kontakt@ajung.name,2019-08-24 17:43:26+02:00,fdbee8e1b0924e0b5620b1f5b8949f1033ca3217,https://github.com/aleju/imgaug/commit/fdbee8e1b0924e0b5620b1f5b8949f1033ca3217,Switch CoarseSalt from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1782,aleju,kontakt@ajung.name,2019-08-24 17:44:30+02:00,4c9e119a3c53f755b845951553472aa02b96eb40,https://github.com/aleju/imgaug/commit/4c9e119a3c53f755b845951553472aa02b96eb40,Switch Pepper from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1783,aleju,kontakt@ajung.name,2019-08-24 17:45:40+02:00,40061f7209763c3d73b02a66045e6727b22f06fa,https://github.com/aleju/imgaug/commit/40061f7209763c3d73b02a66045e6727b22f06fa,Switch CoarsePepper from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1784,aleju,kontakt@ajung.name,2019-08-24 17:55:41+02:00,488132b1356d7a9b678fa3a387303906aaf408ac,https://github.com/aleju/imgaug/commit/488132b1356d7a9b678fa3a387303906aaf408ac,Mark imgaug.augmenters.arithmetic.ContrastNormalization as deprecated,2,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestContrastNormalization(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(caught_warnings) == 1', '(', 'isinstance(aug, contrast_lib._ContrastFuncWrapper)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1785,aleju,kontakt@ajung.name,2019-08-24 17:58:58+02:00,010863cb3c4a0e2722d90b9eddc00c61ea2211c0,https://github.com/aleju/imgaug/commit/010863cb3c4a0e2722d90b9eddc00c61ea2211c0,Switch SimplexNoiseAlpha function->class & improve code style,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1786,aleju,kontakt@ajung.name,2019-08-24 18:00:54+02:00,98dadfcc1bedc96f563620b2e380d0efcd57a003,https://github.com/aleju/imgaug/commit/98dadfcc1bedc96f563620b2e380d0efcd57a003,Switch FrequencyNoiseAlpha function->class & improve code style,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1787,aleju,kontakt@ajung.name,2019-08-24 18:03:15+02:00,fe277109dc863564ea5e03adf8cd190cde8e7601,https://github.com/aleju/imgaug/commit/fe277109dc863564ea5e03adf8cd190cde8e7601,Switch MotionBlur function->class & improve code style,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1788,aleju,kontakt@ajung.name,2019-08-24 18:06:00+02:00,40b7957b7d524dd4377f1261967be7ea0a340018,https://github.com/aleju/imgaug/commit/40b7957b7d524dd4377f1261967be7ea0a340018,Switch MultiplyHueAndSaturation function->class & remove Noop output,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1789,aleju,kontakt@ajung.name,2019-08-24 18:07:20+02:00,ae68bc7d3abeeead477895a7d0eac3e13ea65b42,https://github.com/aleju/imgaug/commit/ae68bc7d3abeeead477895a7d0eac3e13ea65b42,Switch MultiplyHue from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1790,aleju,kontakt@ajung.name,2019-08-24 18:08:34+02:00,a28fa9e9e7b38ebab176f637759e3b689aeda232,https://github.com/aleju/imgaug/commit/a28fa9e9e7b38ebab176f637759e3b689aeda232,Switch MultiplySaturation from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1791,aleju,kontakt@ajung.name,2019-08-24 18:09:40+02:00,e4cff322cf8e9d66ae09e566fba5c6083ae54710,https://github.com/aleju/imgaug/commit/e4cff322cf8e9d66ae09e566fba5c6083ae54710,Switch AddToHue from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1792,aleju,kontakt@ajung.name,2019-08-24 18:10:38+02:00,1ebecd8069a94d5db2f40013c12e7e7d388fa548,https://github.com/aleju/imgaug/commit/1ebecd8069a94d5db2f40013c12e7e7d388fa548,Switch AddToSaturation from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1793,aleju,kontakt@ajung.name,2019-08-24 18:11:44+02:00,216b8a8a033c79bf45babd8d0002138488e60082,https://github.com/aleju/imgaug/commit/216b8a8a033c79bf45babd8d0002138488e60082,Switch Grayscale from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1794,aleju,kontakt@ajung.name,2019-08-24 18:13:00+02:00,ec89a24e826db435b90383c11a1570dc0e60f2bf,https://github.com/aleju/imgaug/commit/ec89a24e826db435b90383c11a1570dc0e60f2bf,Move _ContrastFuncWrapper definition within file,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1795,aleju,kontakt@ajung.name,2019-08-24 18:14:05+02:00,b6370b3263b1c0fa519a78a01afdddf335537cdc,https://github.com/aleju/imgaug/commit/b6370b3263b1c0fa519a78a01afdddf335537cdc,Switch GammaContrast from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1796,aleju,kontakt@ajung.name,2019-08-24 18:15:18+02:00,0341e5bbca6d4cf6a2d6c0f088a0c0f4b3608f62,https://github.com/aleju/imgaug/commit/0341e5bbca6d4cf6a2d6c0f088a0c0f4b3608f62,Switch SigmoidContrast from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1797,aleju,kontakt@ajung.name,2019-08-24 18:16:18+02:00,4b6159439f36eee369c92337ffdabe64bfc189a1,https://github.com/aleju/imgaug/commit/4b6159439f36eee369c92337ffdabe64bfc189a1,Switch LogContrast from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1798,aleju,kontakt@ajung.name,2019-08-24 18:17:45+02:00,84ba333809415cbe148ab341eac5a3dc681b5789,https://github.com/aleju/imgaug/commit/84ba333809415cbe148ab341eac5a3dc681b5789,Switch LinearContrast from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1799,aleju,kontakt@ajung.name,2019-08-24 18:22:12+02:00,802a56179281b05df1c42088f5ff8626c635b608,https://github.com/aleju/imgaug/commit/802a56179281b05df1c42088f5ff8626c635b608,Switch OneOf from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1800,aleju,kontakt@ajung.name,2019-08-24 18:24:41+02:00,cb9cb6fe34e6a6230d7df6096f702c3a1c0994dd,https://github.com/aleju/imgaug/commit/cb9cb6fe34e6a6230d7df6096f702c3a1c0994dd,Switch AssertLambda from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1801,aleju,kontakt@ajung.name,2019-08-24 18:27:04+02:00,5103d2745b335e0fbebd1a66472c286c49e09298,https://github.com/aleju/imgaug/commit/5103d2745b335e0fbebd1a66472c286c49e09298,Switch AssertShape from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1802,aleju,kontakt@ajung.name,2019-08-24 18:30:54+02:00,36e5ae01cca72f8c6d74defb814858fa3c79462f,https://github.com/aleju/imgaug/commit/36e5ae01cca72f8c6d74defb814858fa3c79462f,Switch Pad from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1803,aleju,kontakt@ajung.name,2019-08-24 18:32:21+02:00,1f23959b78a7fe7d14d96fc63a8c21441f0d9f92,https://github.com/aleju/imgaug/commit/1f23959b78a7fe7d14d96fc63a8c21441f0d9f92,Switch Crop from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1804,aleju,kontakt@ajung.name,2019-08-24 18:34:07+02:00,f11cf6b2e533bf11a69eb97cefa4e016c73fef42,https://github.com/aleju/imgaug/commit/f11cf6b2e533bf11a69eb97cefa4e016c73fef42,Switch Clouds from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1805,aleju,kontakt@ajung.name,2019-08-24 18:36:10+02:00,c19e794067d066ac8e67c2543b0edfc34efa529b,https://github.com/aleju/imgaug/commit/c19e794067d066ac8e67c2543b0edfc34efa529b,Switch Fog from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1806,aleju,kontakt@ajung.name,2019-08-24 18:36:58+02:00,70bd7c5602b36f84d8f09eaf02b6b22dee693901,https://github.com/aleju/imgaug/commit/70bd7c5602b36f84d8f09eaf02b6b22dee693901,Move SnowflakesLayer within file,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1807,aleju,kontakt@ajung.name,2019-08-24 18:39:21+02:00,0a36f483c9face81f5040f409eb044ad9c9fe1f8,https://github.com/aleju/imgaug/commit/0a36f483c9face81f5040f409eb044ad9c9fe1f8,Switch Snowflakes from function to class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1808,aleju,kontakt@ajung.name,2019-08-24 18:51:45+02:00,28ca81a4d4d3fc832ce1a25b6afedcd681656847,https://github.com/aleju/imgaug/commit/28ca81a4d4d3fc832ce1a25b6afedcd681656847,Update changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1809,aleju,kontakt@ajung.name,2019-08-24 19:03:26+02:00,0a2ca3c354b139a0ae05470dd5784d03f0b50395,https://github.com/aleju/imgaug/commit/0a2ca3c354b139a0ae05470dd5784d03f0b50395,Remove deprecated ContrastNormalization from some tests,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1810,aleju,kontakt@ajung.name,2019-08-24 19:05:43+02:00,ab1a5bf0a4b9625a9bd3653f24faeaeae78c4018,https://github.com/aleju/imgaug/commit/ab1a5bf0a4b9625a9bd3653f24faeaeae78c4018,Add PR IDs to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1811,aleju,kontakt@ajung.name,2019-08-24 20:04:04+02:00,f4234c5a0ed5995bc43f8bfdc5e72f3d3a088af3,https://github.com/aleju/imgaug/commit/f4234c5a0ed5995bc43f8bfdc5e72f3d3a088af3,Fix test failing in py2.7,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug, contrast_lib._ContrastFuncWrapper)']",[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug, contrast_lib._ContrastFuncWrapper)']",[],[],[],[],[],[],[],[],[],[],[],[]
1812,aleju,kontakt@ajung.name,2019-08-24 20:33:02+02:00,3035a8b0e5464d7e8d29ab5cca3edc9868631f5c,https://github.com/aleju/imgaug/commit/3035a8b0e5464d7e8d29ab5cca3edc9868631f5c,Fix test in py2.7,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1813,aleju,kontakt@ajung.name,2019-08-24 20:51:15+02:00,20c60efd878334e2d6799b240f1cab8fb19b4617,https://github.com/aleju/imgaug/commit/20c60efd878334e2d6799b240f1cab8fb19b4617,Deactivate test in 2.7,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],"['sys.version_info[0] <= 2,']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1814,aleju,kontakt@ajung.name,2019-08-24 20:54:32+02:00,1e1987cf04d72f44caa1f9c7073bcc370720f231,https://github.com/aleju/imgaug/commit/1e1987cf04d72f44caa1f9c7073bcc370720f231,Remove bad calls of caller_name(),4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1815,aleju,kontakt@ajung.name,2019-08-25 09:56:54+02:00,991b59feef18ff356339dc7fd8d6b670e1253665,https://github.com/aleju/imgaug/commit/991b59feef18ff356339dc7fd8d6b670e1253665,Improve code style & docs in augmentables.bbs,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1816,aleju,kontakt@ajung.name,2019-08-25 10:35:30+02:00,f8a87086b46db2038b9436b11181984adb9b8d85,https://github.com/aleju/imgaug/commit/f8a87086b46db2038b9436b11181984adb9b8d85,Improve code style & docs in augmentables.heatmaps,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1817,aleju,kontakt@ajung.name,2019-08-25 10:41:35+02:00,795a34a1806ce54017194e4bfa92b6fcbb8d7e90,https://github.com/aleju/imgaug/commit/795a34a1806ce54017194e4bfa92b6fcbb8d7e90,Rename argument of compute_geometric_median(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1818,aleju,kontakt@ajung.name,2019-08-25 11:13:33+02:00,bc87005e5dce729044e1a10286f9124d652e34d6,https://github.com/aleju/imgaug/commit/bc87005e5dce729044e1a10286f9124d652e34d6,Improve code style & docs in augmentables.kps,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1819,aleju,kontakt@ajung.name,2019-08-25 13:36:17+02:00,b4a00488a38877958f8afd84e87550904289da91,https://github.com/aleju/imgaug/commit/b4a00488a38877958f8afd84e87550904289da91,Improve code style & docs in augmentables.heatmaps,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1820,aleju,kontakt@ajung.name,2019-08-25 13:36:26+02:00,c24b5d3d35d21220799e10deb3d9cb7402e2b1a4,https://github.com/aleju/imgaug/commit/c24b5d3d35d21220799e10deb3d9cb7402e2b1a4,Improve code style & docs in augmentables.segmaps,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1821,aleju,kontakt@ajung.name,2019-08-25 14:28:43+02:00,614dcffaa4ce3f23e36a91d0a22d33d53c680c1a,https://github.com/aleju/imgaug/commit/614dcffaa4ce3f23e36a91d0a22d33d53c680c1a,Improve code style & docs in augmentables.kps,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1822,aleju,kontakt@ajung.name,2019-08-25 14:28:51+02:00,467a6c574af58e2424ee67a718c129e40106e8ff,https://github.com/aleju/imgaug/commit/467a6c574af58e2424ee67a718c129e40106e8ff,Improve code style & docs in augmentables.lines,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1823,aleju,kontakt@ajung.name,2019-08-25 15:44:54+02:00,4c12c8cdab06db931eee76e983b356f5a0aee109,https://github.com/aleju/imgaug/commit/4c12c8cdab06db931eee76e983b356f5a0aee109,Improve code style & docs in augmentables.polys,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1824,aleju,kontakt@ajung.name,2019-08-25 15:49:30+02:00,22071cf54e54b17f9a8a88545e807d26fbe44d15,https://github.com/aleju/imgaug/commit/22071cf54e54b17f9a8a88545e807d26fbe44d15,Improve code style & docs in augmentables.normalization,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1825,aleju,kontakt@ajung.name,2019-08-25 15:52:56+02:00,fe44ed18a907d5643b00c4514ea7a3c0c97feae1,https://github.com/aleju/imgaug/commit/fe44ed18a907d5643b00c4514ea7a3c0c97feae1,Add style improvements to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1826,aleju,kontakt@ajung.name,2019-08-25 17:54:37+02:00,d194cb900fff7636de96dfce26646698435aa16e,https://github.com/aleju/imgaug/commit/d194cb900fff7636de96dfce26646698435aa16e,Improve heatmaps module code style,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1827,aleju,kontakt@ajung.name,2019-08-25 20:19:39+02:00,81923aaa8910e9e763df65d31392c1fe60834d3c,https://github.com/aleju/imgaug/commit/81923aaa8910e9e763df65d31392c1fe60834d3c,Migrate .blend tests to unittest,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],3,0,3,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,246,0,0,0,0,0,0,0,0,0,0,0,0,240,0,0,0,0,0,0,0,0,0,0,0,0,"['class Test_blend_alpha(unittest.TestCase):', 'class TestAlpha(unittest.TestCase):', 'class TestAlphaElementwise(unittest.TestCase):']",[],"['def setUp(self):', 'def setUp(self):', 'def setUp(self):']",[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['img_blend.dtype.name == np.dtype(np.bool_)', 'img_blend.shape == (3, 3, 1)', 'np.all(img_blend == 0)', 'img_blend.dtype.name == np.dtype(np.bool_)', 'img_blend.shape == (3, 3, 1)', 'np.all(img_blend == 1)', 'img_blend.dtype.name == np.dtype(np.bool_)', 'img_blend.shape == (3, 3, 1)', 'np.all(img_blend == 1)', 'img_blend.dtype.name == np.dtype(np.bool_)', 'img_blend.shape == (3, 3, 2)', 'np.all(img_blend[:, :, 0] == 0)', 'np.all(img_blend[:, :, 1] == 1)', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, 1)', 'np.all(img_blend == v1_scalar)', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, 1)', 'np.all(img_blend == v1_scalar)', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, 1)', 'np.all(img_blend == v2_scalar)', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, c)', 'np.all(diff < 1.01)', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, 2)', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, 2)', 'np.all(img_blend[:, :, 0] == v1_scalar)', 'np.all(img_blend[:, :, 1] == v2_scalar)', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (1, 2, 3)', 'np.all(img_blend[0, 0, :] == v1_scalar)', 'np.all(img_blend[0, 1, :] == v2_scalar)', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (1, 2, 3)', 'np.all(img_blend[0, 0, :] == v1_scalar)', 'np.all(img_blend[0, 1, :] == v2_scalar)', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (1, 2, 3)', 'np.all(img_blend[0, 0, [0, 2]] == v1_scalar)', 'np.all(img_blend[0, 1, [0, 2]] == v2_scalar)', 'np.all(img_blend[0, 0, 1] == v2_scalar)', 'np.all(img_blend[0, 1, 1] == v1_scalar)', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, 1)', '_allclose(img_blend, max_float_dt(v1))', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, 1)', '_allclose(img_blend, max_float_dt(v1))', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, 1)', '_allclose(img_blend, max_float_dt(v2))', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, c)', '_allclose(', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, 2)', '_allclose(img_blend[:, :, 0], max_float_dt(v1))', '_allclose(img_blend[:, :, 1], max_float_dt(v2))', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (1, 2, 3)', '_allclose(img_blend[0, 0, :], v1_scalar)', '_allclose(img_blend[0, 1, :], v2_scalar)', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (1, 2, 3)', '_allclose(img_blend[0, 0, :], v1_scalar)', '_allclose(img_blend[0, 1, :], v2_scalar)', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (1, 2, 3)', '_allclose(img_blend[0, 0, [0, 2]], v1_scalar)', '_allclose(img_blend[0, 1, [0, 2]], v2_scalar)', '_allclose(img_blend[0, 0, 1], v2_scalar)', '_allclose(img_blend[0, 1, 1], v1_scalar)', 'np.allclose(observed, expected)', 'observed.shape == self.heatmaps.shape', '0 - 1e-6 < self.heatmaps.min_value < 0 + 1e-6', '1 - 1e-6 < self.heatmaps.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(),', 'observed.shape == self.segmaps.shape', 'np.array_equal(observed.get_arr(),', 'np.allclose(observed, expected)', 'observed.shape == self.heatmaps.shape', '0 - 1e-6 < self.heatmaps.min_value < 0 + 1e-6', '1 - 1e-6 < self.heatmaps.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(),', 'observed.shape == self.segmaps.shape', 'np.array_equal(observed.get_arr(),', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.isclose(density, density_expected,', 'in str(exc)', 'got_exception', 'len(uq) > 1', 'np.max(observed) > 80', 'np.min(observed) < 20', 'len(uq) > 1', 'np.max(observed) > 80', 'np.min(observed) < 20', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', 'in str(exc)', 'got_exception', 'np.array_equal(observed, image)', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'False', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', 'len(observed.keypoints) == 0', 'observed.shape == (1, 2, 3)', 'keypoints_equal([observed], [self.kpsoi])', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'False', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', 'len(observed.polygons) == 0', 'observed.shape == (1, 2, 3)', 'observed.polygons[0].exterior_almost_equals(', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', '0.65 - 1e-6 < params[0].value < 0.65 + 1e-6', 'params[1].value == 1', 'len(children_lsts) == 2', 'ia.is_iterable([lst for lst in children_lsts])', 'first in children_lsts[0]', 'second == children_lsts[1]', 'np.allclose(observed, expected)', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), self.heatmaps_r1.get_arr())', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.get_arr(), self.segmaps_r1.get_arr())', 'np.allclose(observed, expected)', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), self.heatmaps_l1.get_arr())', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.get_arr(), self.segmaps_l1.get_arr())', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.isclose(density, density_expected,', 'in str(exc)', 'got_exception', 'len(set(observed.flatten())) > 1', 'in str(exc)', 'got_exception', 'np.array_equal(observed, image)', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), self.heatmaps_r1.get_arr())', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), self.heatmaps_l1.get_arr())', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.get_arr(), self.segmaps_r1.get_arr())', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.get_arr(), self.segmaps_l1.get_arr())', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'False', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', 'len(observed.keypoints) == 0', 'observed.shape == (1, 2, 3)', 'keypoints_equal([observed], [self.kpsoi])', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'False', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', 'len(observed.polygons) == 0', 'observed.shape == (1, 2, 3)', 'observed.polygons[0].exterior_almost_equals(']",[],[],[],[],[],[],[],[],[],[],[],[],"['img_blend.dtype.name == np.dtype(np.bool_)', 'img_blend.shape == (3, 3, 1)', 'np.all(img_blend == 0)', 'img_blend.dtype.name == np.dtype(np.bool_)', 'img_blend.shape == (3, 3, 1)', 'np.all(img_blend == 1)', 'img_blend.dtype.name == np.dtype(np.bool_)', 'img_blend.shape == (3, 3, 1)', 'np.all(img_blend == 1)', 'img_blend.dtype.name == np.dtype(np.bool_)', 'img_blend.shape == (3, 3, 2)', 'np.all(img_blend[:, :, 0] == 0)', 'np.all(img_blend[:, :, 1] == 1)', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, 1)', 'np.all(img_blend == dtype(v1))', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, 1)', 'np.all(img_blend == dtype(v1))', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, 1)', 'np.all(img_blend == dtype(v2))', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, c)', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, 2)', 'np.all(diff < 1.01)', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, 2)', 'np.all(img_blend[:, :, 0] == dtype(v1))', 'np.all(img_blend[:, :, 1] == dtype(v2))', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (1, 2, 3)', 'np.all(img_blend[0, 0, :] == dtype(v1))', 'np.all(img_blend[0, 1, :] == dtype(v2))', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (1, 2, 3)', 'np.all(img_blend[0, 0, :] == dtype(v1))', 'np.all(img_blend[0, 1, :] == dtype(v2))', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (1, 2, 3)', 'np.all(img_blend[0, 0, [0, 2]] == dtype(v1))', 'np.all(img_blend[0, 1, [0, 2]] == dtype(v2))', 'np.all(img_blend[0, 0, 1] == dtype(v2))', 'np.all(img_blend[0, 1, 1] == dtype(v1))', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, 1)', '_allclose(img_blend, max_float_dt(v1))', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, 1)', '_allclose(img_blend, max_float_dt(v1))', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, 1)', '_allclose(img_blend, max_float_dt(v2))', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, c)', '_allclose(img_blend, 0.75*max_float_dt(v1) + 0.25*max_float_dt(v2))', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (3, 3, 2)', '_allclose(img_blend[:, :, 0], max_float_dt(v1))', '_allclose(img_blend[:, :, 1], max_float_dt(v2))', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (1, 2, 3)', '_allclose(img_blend[0, 0, :], dtype(v1))', '_allclose(img_blend[0, 1, :], dtype(v2))', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (1, 2, 3)', '_allclose(img_blend[0, 0, :], dtype(v1))', '_allclose(img_blend[0, 1, :], dtype(v2))', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.shape == (1, 2, 3)', '_allclose(img_blend[0, 0, [0, 2]], dtype(v1))', '_allclose(img_blend[0, 1, [0, 2]], dtype(v2))', '_allclose(img_blend[0, 0, 1], dtype(v2))', '_allclose(img_blend[0, 1, 1], dtype(v1))', 'np.allclose(observed, expected)', 'observed.shape == heatmaps.shape', '0 - 1e-6 < heatmaps.min_value < 0 + 1e-6', '1 - 1e-6 < heatmaps.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_r1)', 'observed.shape == segmaps.shape', 'np.array_equal(observed.get_arr(), segmaps_arr_r1)', 'np.allclose(observed, expected)', 'observed.shape == heatmaps.shape', '0 - 1e-6 < heatmaps.min_value < 0 + 1e-6', '1 - 1e-6 < heatmaps.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_l1)', 'observed.shape == segmaps.shape', 'np.array_equal(observed.get_arr(), segmaps_arr_l1)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'density_expected - density_tolerance < density < density_expected + density_tolerance', 'in str(exc)', 'got_exception', 'len(uq) > 1', 'np.max(observed) > 80', 'np.min(observed) < 20', 'len(uq) > 1', 'np.max(observed) > 80', 'np.min(observed) < 20', 'False', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', 'in str(exc)', 'got_exception', 'np.array_equal(observed, image)', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'False', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', 'len(observed.keypoints) == 0', 'observed.shape == (1, 2, 3)', 'keypoints_equal([observed], [kpsoi])', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(psoi.polygons[0])', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(psoi.polygons[0])', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(expected.polygons[0])', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(expected.polygons[0])', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(psoi.polygons[0])', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(expected.polygons[0])', 'observed[0].polygons[0].is_valid', 'False', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', 'len(observed.polygons) == 0', 'observed.shape == (1, 2, 3)', 'observed.polygons[0].exterior_almost_equals(psoi.polygons[0])', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', '0.65 - 1e-6 < params[0].value < 0.65 + 1e-6', 'params[1].value == 1', 'len(children_lsts) == 2', 'ia.is_iterable([lst for lst in children_lsts])', 'first in children_lsts[0]', 'second == children_lsts[1]', 'np.allclose(observed, expected)', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_r1)', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.get_arr(), segmaps_arr_r1)', 'np.allclose(observed, expected)', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_l1)', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.get_arr(), segmaps_arr_l1)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'density_expected - density_tolerance < density < density_expected + density_tolerance', 'len(set(observed.flatten())) > 1', 'np.array_equal(observed, image)', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_r1)', 'observed.shape == (3, 3, 3)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.get_arr(), heatmaps_arr_l1)', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.get_arr(), segmaps_arr_r1)', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.get_arr(), segmaps_arr_l1)', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'False', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', 'keypoints_equal([observed], [kpsoi])', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(psoi.polygons[0])', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(psoi.polygons[0])', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(expected.polygons[0])', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(expected.polygons[0])', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(psoi.polygons[0])', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(expected.polygons[0])', 'observed[0].polygons[0].is_valid', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', 'len(observed.polygons) == 0', 'observed.shape == (1, 2, 3)', 'observed.polygons[0].exterior_almost_equals(psoi.polygons[0])']",[],[],[],[],[],[],[],[],[],[],[],[]
1828,aleju,kontakt@ajung.name,2019-08-25 20:39:20+02:00,c6b8a28f10e865c8444e9e8ffb6eee5dbd428192,https://github.com/aleju/imgaug/commit/c6b8a28f10e865c8444e9e8ffb6eee5dbd428192,Cleanup .blur tests,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed.shape == image.shape', 'observed.dtype.name == ', 'np.all(observed[2, 2] < 255)', 'np.sum(observed[mask]) > (5*5-1)', 'np.array_equal(observed[..., c],', 'np.array_equal(cargs[0][0], image)', 'isinstance(cargs[0][1], tuple)', 'np.allclose(', 'np.isclose(cargs[1][], sigma)', 'np.isclose(cargs[1][], sigma)', 'cargs[1][] == cv2.BORDER_REFLECT_101', '(', 'np.max(diff) < max_diff', 'np.max(diff) < max_diff']",[],[],[],[],[],[],[],[],[],[],[],[],"['observed.shape == image.shape', 'observed.dtype.name == ', 'np.all(observed[2, 2] < 255)', 'np.sum(observed[mask]) > (5*5-1)', 'np.array_equal(observed[..., c], observed[..., 0])', 'np.array_equal(mock_GaussianBlur.call_args[0][0], image)', 'isinstance(mock_GaussianBlur.call_args[0][1], tuple)', 'np.allclose(np.float32(mock_GaussianBlur.call_args[0][1]),', 'np.isclose(mock_GaussianBlur.call_args[1][], sigma)', 'np.isclose(mock_GaussianBlur.call_args[1][], sigma)', 'mock_GaussianBlur.call_args[1][] == cv2.BORDER_REFLECT_101', 'in str(caught_warnings[-1].message)', 'np.max(diff) < np.dtype(dtype).itemsize * 0.01 * np.float128(value)', 'np.max(diff) < np.dtype(dtype).itemsize * 0.01 * np.float128(value)']",[],[],[],[],[],[],[],[],[],[],[],[]
1829,aleju,kontakt@ajung.name,2019-08-25 20:43:51+02:00,af003107680ef2dd735ad5b91314e235d902188c,https://github.com/aleju/imgaug/commit/af003107680ef2dd735ad5b91314e235d902188c,Migrate .color tests to unittest and cleanup,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,['class TestGrayscale(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(observed, expected)', 'np.allclose(observed, expected.astype(np.uint8))', 'np.allclose(observed, expected.astype(np.uint8))', '0 - 1e-4 < min(distances) < 0.1', '0.4 < np.average(distances) < 0.6', '0.9 < max(distances) < 1.0 + 1e-4', 'np.isclose(density, density_expected,']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(observed, expected)', 'np.allclose(observed, expected.astype(np.uint8))', 'np.allclose(observed, expected.astype(np.uint8))', '0 - 1e-4 < min(distances) < 0.1', '0.4 < np.average(distances) < 0.6', '0.9 < max(distances) < 1.0 + 1e-4', 'density_expected - density_tolerance < density < density_expected + density_tolerance']",[],[],[],[],[],[],[],[],[],[],[],[]
1830,aleju,kontakt@ajung.name,2019-08-25 21:50:10+02:00,77a3d644c3aad2d2e74a2e16af77aac2429b86f1,https://github.com/aleju/imgaug/commit/77a3d644c3aad2d2e74a2e16af77aac2429b86f1,Migrate .contrast tests to unittest and cleanup,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],5,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,0,0,0,0,0,0,0,0,0,0,0,0,127,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestGammaContrast(unittest.TestCase):', 'class TestSigmoidContrast(unittest.TestCase):', 'class TestLogContrast(unittest.TestCase):', 'class TestLinearContrast(unittest.TestCase):', 'class Test_adjust_contrast_linear(unittest.TestCase):']",[],"['def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug.params1d[0], iap.Uniform)', 'isinstance(aug.params1d[0].a, iap.Deterministic)', 'isinstance(aug.params1d[0].b, iap.Deterministic)', 'aug.params1d[0].a.value == 1', 'aug.params1d[0].b.value == 2', 'isinstance(aug.params1d[0], iap.Choice)', 'np.all([val in aug.params1d[0].a for val in [1, 2]])', 'img_aug.dtype.name == ', 'img3d_aug.dtype.name == ', 'np.array_equal(', 'np.array_equal(', 'img_aug.dtype.name == ', 'np.all(seen)', 'keypoints_equal([kpsoi], kpsoi_aug)', 'np.allclose(heatmaps.arr_0to1, heatmaps_aug.arr_0to1)', 'image_aug.dtype.name == dtype.name', 'len(np.unique(image_aug)) == 1', 'image_aug.shape == (3, 3, nb_channels)', 'image_aug.dtype.name == dtype.name', 'len(np.unique(image_aug)) <= nb_channels', 'diff <= tolerance', 'image_aug.dtype == np.dtype(dtype)', '_allclose(image_aug, expected)', 'image_aug.shape == (3, 3, nb_channels)', 'image_aug.dtype.name == dtype.name', '_allclose(value_aug, value_expected)', 'isinstance(aug.params1d[0], iap.Uniform)', 'isinstance(aug.params1d[0].a, iap.Deterministic)', 'isinstance(aug.params1d[0].b, iap.Deterministic)', 'aug.params1d[0].a.value == 1', 'aug.params1d[0].b.value == 2', 'isinstance(aug.params1d[1], iap.Uniform)', 'isinstance(aug.params1d[1].a, iap.Deterministic)', 'isinstance(aug.params1d[1].b, iap.Deterministic)', 'np.allclose(aug.params1d[1].a.value, 0.25)', 'np.allclose(aug.params1d[1].b.value, 0.75)', 'isinstance(aug.params1d[0], iap.Choice)', 'np.all([val in aug.params1d[0].a for val in [1, 2]])', 'isinstance(aug.params1d[1], iap.Choice)', 'np.all([', 'img_aug.dtype.name == ', 'img3d_aug.dtype.name == ', 'np.array_equal(', 'np.array_equal(', 'img_aug.dtype.name == ', 'np.all(seen)', 'keypoints_equal([kpsoi], kpsoi_aug)', 'np.allclose(heatmaps.arr_0to1, heatmaps_aug.arr_0to1)', 'image_aug.dtype.name == dtype.name', 'len(np.unique(image_aug)) == 1', 'diff <= tolerance', 'image_aug.dtype.name == dtype.name', '_allclose(image_aug, expected)', 'img_aug.dtype.name == ', 'img3d_aug.dtype.name == ', 'np.array_equal(', 'np.array_equal(', 'isinstance(aug.params1d[0], iap.Uniform)', 'isinstance(aug.params1d[0].a, iap.Deterministic)', 'isinstance(aug.params1d[0].b, iap.Deterministic)', 'aug.params1d[0].a.value == 1', 'aug.params1d[0].b.value == 2', 'isinstance(aug.params1d[0], iap.Choice)', 'np.all([val in aug.params1d[0].a for val in [1, 2]])', 'img_aug.dtype.name == ', 'np.all(seen)', 'keypoints_equal([kpsoi], kpsoi_aug)', 'np.allclose(heatmaps.arr_0to1, heatmaps_aug.arr_0to1)', 'image_aug.dtype.name == dtype.name', 'len(np.unique(image_aug)) == 1', 'diff <= tolerance', 'image_aug.dtype.name == dtype', '_allclose(image_aug, expected)', 'img_aug.dtype.name == ', 'img3d_aug.dtype.name == ', 'np.array_equal(', 'np.array_equal(', 'isinstance(aug.params1d[0], iap.Uniform)', 'isinstance(aug.params1d[0].a, iap.Deterministic)', 'isinstance(aug.params1d[0].b, iap.Deterministic)', 'aug.params1d[0].a.value == 1', 'aug.params1d[0].b.value == 2', 'isinstance(aug.params1d[0], iap.Choice)', 'np.all([val in aug.params1d[0].a for val in [1, 2]])', 'img_aug.dtype.name == ', 'np.all(seen)', 'keypoints_equal([kpsoi], kpsoi_aug)', 'np.allclose(heatmaps.arr_0to1, heatmaps_aug.arr_0to1)', 'kind == ', 'observed.dtype.name == dtype.name', 'observed.shape == img.shape', '_compare(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(clist[0][0][0], img3d[..., 0])', 'np.array_equal(clist[1][0][0], img3d[..., 1])', 'np.array_equal(clist[2][0][0], img3d[..., 2])', 'mock_createCLAHE.call_count == nb_calls_exp_i', '(', '(', 'np.all([', 'icba.change_colorspace.from_colorspace == iaa.CLAHE.BGR', 'icba.change_colorspace.to_colorspace.value == iaa.CLAHE.HSV', 'icba.change_colorspace_inv.from_colorspace == iaa.CLAHE.HSV', 'icba.change_colorspace_inv.to_colorspace.value == iaa.CLAHE.BGR', 'mock_change_cs.call_count == 0', 'mock_change_cs.call_count == 1', 'np.array_equal(mock_change_cs.call_args_list[0][0][0][0], img3d)', 'mock_change_cs.call_count == 1', 'np.array_equal(mock_change_cs.call_args_list[0][0][0][0],', 'mock_change_cs.call_count == 0', 'mock_change_cs.call_count == (1 if with_3d_images else 0)', 'mock_change_colorspace_inv.call_count == (', 'isinstance(mock_change_cs.call_args_list[0][0][0], list)', 'isinstance(', 'len(mock_change_cs.call_args_list[0][0][0]) == 3', '(', 'mock_change_cs.call_count == (1 if with_color_conversion else 0)', 'mock_change_colorspace_inv.call_count == (', 'isinstance(mock_change_cs.call_args_list[0][0][0], list)', 'isinstance(', 'len(mock_change_cs.call_args_list[0][0][0]) == nb_images', '(', 'isinstance(', '(icba.change_colorspace.from_colorspace', '(icba.change_colorspace.to_colorspace.value', 'len(caught_warns) == 1']",[],[],[],[],[],[],[],[],[],[],[],[],"['img_aug.dtype.type == np.uint8', 'img3d_aug.dtype.type == np.uint8', 'np.array_equal(img_aug, skimage.exposure.adjust_gamma(img, gamma=gamma))', 'np.array_equal(img3d_aug, skimage.exposure.adjust_gamma(img3d, gamma=gamma))', 'isinstance(aug.params1d[0], iap.Uniform)', 'isinstance(aug.params1d[0].a, iap.Deterministic)', 'isinstance(aug.params1d[0].b, iap.Deterministic)', 'aug.params1d[0].a.value == 1', 'aug.params1d[0].b.value == 2', 'isinstance(aug.params1d[0], iap.Choice)', 'np.all([val in aug.params1d[0].a for val in [1, 2]])', 'img_aug.dtype.type == np.uint8', 'np.all(seen)', 'keypoints_equal([kpsoi], kpsoi_aug)', 'np.allclose(heatmaps.arr_0to1, heatmaps_aug.arr_0to1)', 'image_aug.dtype == np.dtype(dtype)', 'len(np.unique(image_aug)) == 1', 'diff <= tolerance', 'image_aug.shape == (3, 3, nb_channels)', 'image_aug.dtype == np.dtype(dtype)', 'len(np.unique(image_aug)) <= nb_channels', 'image_aug.dtype == np.dtype(dtype)', '_allclose(image_aug, expected)', 'image_aug.shape == (3, 3, nb_channels)', 'image_aug.dtype == np.dtype(dtype)', '_allclose(value_aug, value_expected)', 'img_aug.dtype.type == np.uint8', 'img3d_aug.dtype.type == np.uint8', 'np.array_equal(img_aug, skimage.exposure.adjust_sigmoid(img, gain=gain, cutoff=cutoff))', 'np.array_equal(img3d_aug, skimage.exposure.adjust_sigmoid(img3d, gain=gain, cutoff=cutoff))', 'isinstance(aug.params1d[0], iap.Uniform)', 'isinstance(aug.params1d[0].a, iap.Deterministic)', 'isinstance(aug.params1d[0].b, iap.Deterministic)', 'aug.params1d[0].a.value == 1', 'aug.params1d[0].b.value == 2', 'isinstance(aug.params1d[1], iap.Uniform)', 'isinstance(aug.params1d[1].a, iap.Deterministic)', 'isinstance(aug.params1d[1].b, iap.Deterministic)', 'np.allclose(aug.params1d[1].a.value, 0.25)', 'np.allclose(aug.params1d[1].b.value, 0.75)', 'isinstance(aug.params1d[0], iap.Choice)', 'np.all([val in aug.params1d[0].a for val in [1, 2]])', 'isinstance(aug.params1d[1], iap.Choice)', 'np.all([np.allclose(val, val_choice) for val, val_choice in zip([0.25, 0.75], aug.params1d[1].a)])', 'img_aug.dtype.type == np.uint8', 'np.all(seen)', 'keypoints_equal([kpsoi], kpsoi_aug)', 'np.allclose(heatmaps.arr_0to1, heatmaps_aug.arr_0to1)', 'image_aug.dtype == np.dtype(dtype)', 'len(np.unique(image_aug)) == 1', 'diff <= tolerance', 'image_aug.dtype == np.dtype(dtype)', '_allclose(image_aug, expected)', 'img_aug.dtype.type == np.uint8', 'img3d_aug.dtype.type == np.uint8', 'np.array_equal(img_aug, skimage.exposure.adjust_log(img, gain=gain))', 'np.array_equal(img3d_aug, skimage.exposure.adjust_log(img3d, gain=gain))', 'isinstance(aug.params1d[0], iap.Uniform)', 'isinstance(aug.params1d[0].a, iap.Deterministic)', 'isinstance(aug.params1d[0].b, iap.Deterministic)', 'aug.params1d[0].a.value == 1', 'aug.params1d[0].b.value == 2', 'isinstance(aug.params1d[0], iap.Choice)', 'np.all([val in aug.params1d[0].a for val in [1, 2]])', 'img_aug.dtype.type == np.uint8', 'np.all(seen)', 'keypoints_equal([kpsoi], kpsoi_aug)', 'np.allclose(heatmaps.arr_0to1, heatmaps_aug.arr_0to1)', 'image_aug.dtype == np.dtype(dtype)', 'len(np.unique(image_aug)) == 1', 'diff <= tolerance', 'image_aug.dtype == np.dtype(dtype)', '_allclose(image_aug, expected)', 'img_aug.dtype.type == np.uint8', 'img3d_aug.dtype.type == np.uint8', 'np.array_equal(img_aug, contrast_lib.adjust_contrast_linear(img, alpha=alpha))', 'np.array_equal(img3d_aug, contrast_lib.adjust_contrast_linear(img3d, alpha=alpha))', 'isinstance(aug.params1d[0], iap.Uniform)', 'isinstance(aug.params1d[0].a, iap.Deterministic)', 'isinstance(aug.params1d[0].b, iap.Deterministic)', 'aug.params1d[0].a.value == 1', 'aug.params1d[0].b.value == 2', 'isinstance(aug.params1d[0], iap.Choice)', 'np.all([val in aug.params1d[0].a for val in [1, 2]])', 'img_aug.dtype.type == np.uint8', 'np.all(seen)', 'keypoints_equal([kpsoi], kpsoi_aug)', 'np.allclose(heatmaps.arr_0to1, heatmaps_aug.arr_0to1)', 'kind == ', 'observed.dtype == np.dtype(dtype)', 'observed.shape == img.shape', '_compare(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(mock_clahe.apply.call_args_list[0][0][0], img3d[..., 0])', 'np.array_equal(mock_clahe.apply.call_args_list[1][0][0], img3d[..., 1])', 'np.array_equal(mock_clahe.apply.call_args_list[2][0][0], img3d[..., 2])', 'mock_createCLAHE.call_count == nb_calls_expected_i', 'min_value <= np.min(img_aug) <= min_value + 0.2 * dynamic_range', 'max_value - 0.2 * dynamic_range <= np.max(img_aug) <= max_value', 'np.all([isinstance(params[i], iap.Deterministic) for i in [0, 3]])', 'clahe.intensity_channel_based_applier.change_colorspace.from_colorspace == iaa.CLAHE.BGR', 'clahe.intensity_channel_based_applier.change_colorspace.to_colorspace.value == iaa.CLAHE.HSV', 'clahe.intensity_channel_based_applier.change_colorspace_inv.from_colorspace == iaa.CLAHE.HSV', 'clahe.intensity_channel_based_applier.change_colorspace_inv.to_colorspace.value == iaa.CLAHE.BGR', 'mock_change_colorspace.call_count == 0', 'mock_change_colorspace.call_count == 1', 'np.array_equal(mock_change_colorspace.call_args_list[0][0][0][0], img3d)', 'mock_change_colorspace.call_count == 1', 'np.array_equal(mock_change_colorspace.call_args_list[0][0][0][0], img4d[..., 0:3])', 'mock_change_colorspace.call_count == 0', 'mock_change_colorspace.call_count == (1 if with_3d_images else 0)', 'mock_change_colorspace_inv.call_count == (1 if with_3d_images else 0)', 'isinstance(mock_change_colorspace.call_args_list[0][0][0], list)', 'isinstance(mock_change_colorspace_inv.call_args_list[0][0][0], list)', 'len(mock_change_colorspace.call_args_list[0][0][0]) == 3', 'len(mock_all_channel_clahe.call_args_list[0][0][0]) == 5 if with_3d_images else 2', 'mock_change_colorspace.call_count == (1 if with_color_conversion else 0)', 'mock_change_colorspace_inv.call_count == (1 if with_color_conversion else 0)', 'isinstance(mock_change_colorspace.call_args_list[0][0][0], list)', 'isinstance(mock_change_colorspace_inv.call_args_list[0][0][0], list)', 'len(mock_change_colorspace.call_args_list[0][0][0]) == nb_images', 'len(mock_change_colorspace_inv.call_args_list[0][0][0]) == nb_images', 'isinstance(aug.all_channel_histogram_equalization, iaa.AllChannelsHistogramEqualization)', 'icba.change_colorspace.from_colorspace == iaa.HistogramEqualization.BGR', 'icba.change_colorspace.to_colorspace.value == iaa.HistogramEqualization.HSV', 'len(caught_warnings) == 1']",[],[],[],[],[],[],[],[],[],[],[],[]
1831,aleju,kontakt@ajung.name,2019-08-26 08:14:17+02:00,03a99396a02b4dbe2254168c0585184917743767,https://github.com/aleju/imgaug/commit/03a99396a02b4dbe2254168c0585184917743767,Remove outdated main() calls from test files,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1832,aleju,kontakt@ajung.name,2019-08-26 08:17:26+02:00,84ce96797c1d747cb0eb1833d781c4d3ae9eb8bf,https://github.com/aleju/imgaug/commit/84ce96797c1d747cb0eb1833d781c4d3ae9eb8bf,Cleanup tests for .convolutional,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['(', '(']",[],[],[],[],[],[],[],[],[],[],[],[],"['density_expected - density_tolerance < density < density_expected + density_tolerance', 'density_expected - density_tolerance < density < density_expected + density_tolerance']",[],[],[],[],[],[],[],[],[],[],[],[]
1833,aleju,kontakt@ajung.name,2019-08-26 08:18:14+02:00,eaa58467f5d11f539b7e55c161545f9689003dd9,https://github.com/aleju/imgaug/commit/eaa58467f5d11f539b7e55c161545f9689003dd9,Cleanup tests for .edges,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1834,aleju,kontakt@ajung.name,2019-08-26 21:27:56+02:00,67912a56b3caea17d6d383cdd276d9ba0acb8118,https://github.com/aleju/imgaug/commit/67912a56b3caea17d6d383cdd276d9ba0acb8118,Migrate tests for .flip to unittest,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],2,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,0,0,0,0,0,0,0,0,0,0,0,0,102,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestHorizontalFlip(unittest.TestCase):', 'class TestVerticalFlip(unittest.TestCase):']","[('Raises', '(Exception):')]","['def setUp(self):', 'def setUp(self):', 'def setUp(self):']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug, iaa.Fliplr)', 'np.allclose(aug.p.p.value, 0.5)', 'isinstance(aug, iaa.Flipud)', 'np.allclose(aug.p.p.value, 0.5)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.psoi[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.psoi[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'observed.shape == heatmaps.shape', 'np.isclose(observed.min_value, heatmaps.min_value,', 'np.isclose(observed.max_value, heatmaps.max_value,', 'np.array_equal(observed.get_arr(), heatmaps.get_arr())', 'observed.shape == self.segmaps.shape', 'np.array_equal(observed.get_arr(), self.segmaps.get_arr())', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.psoi[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'observed[0].shape == self.psoi[0].shape', 'observed.shape == heatmaps.shape', 'np.isclose(observed.min_value, heatmaps.min_value,', 'np.isclose(observed.max_value, heatmaps.max_value,', 'np.array_equal(observed.get_arr(),', 'observed.shape == self.segmaps.shape', 'np.array_equal(observed.get_arr(),', 'np.isclose(nb_images_flipped/nb_iterations,', 'nb_images_flipped_det in [0, nb_iterations]', 'np.isclose(nb_keypoints_flipped/nb_iterations,', 'nb_keypoints_flipped_det in [0, nb_iterations]', 'np.isclose(nb_polygons_flipped/nb_iterations,', 'nb_polygons_flipped_det in [0, nb_iterations]', 'np.allclose(nb_flipped_by_pos,', 'val in [0, nb_iterations]', 'False', 'np.allclose(seen, [700, 300], rtol=0, atol=75)', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', '0.5 - 1e-4 < params[0].p.value < 0.5 + 1e-4', 'image_aug.dtype.type == image.dtype.type', 'np.all(image_aug == expected)', 'image_aug.dtype.name == dtype', 'np.array_equal(image_aug, expected)', 'image_aug.dtype.name == dtype', 'np.allclose(image_aug, expected, atol=atol)']",[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug, iaa.Fliplr)', 'np.allclose(aug.p.p.value, 0.5)', 'isinstance(aug, iaa.Flipud)', 'np.allclose(aug.p.p.value, 0.5)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'observed[0].shape == polygons[0].shape', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), expected)', 'observed.shape == segmaps.shape', 'np.array_equal(observed.get_arr(), expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == polygons[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), expected)', 'observed.shape == segmaps.shape', 'np.array_equal(observed.get_arr(), expected)', 'int(nb_iterations * 0.3) <= nb_images_flipped <= int(nb_iterations * 0.7)', 'int(nb_iterations * 0.3) <= nb_keypoints_flipped <= int(nb_iterations * 0.7)', 'int(nb_iterations * 0.3) <= nb_polygons_flipped <= int(nb_iterations * 0.7)', 'nb_images_flipped_det in [0, nb_iterations]', 'nb_keypoints_flipped_det in [0, nb_iterations]', 'nb_polygons_flipped_det in [0, nb_iterations]', 'int(nb_iterations * 0.3) <= val <= int(nb_iterations * 0.7)', 'val in [0, nb_iterations]', 'False', '700 - 75 < seen[0] < 700 + 75', '300 - 75 < seen[1] < 300 + 75', 'got_exception', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', '0.5 - 1e-4 < params[0].p.value < 0.5 + 1e-4', 'image_aug.dtype.type == image.dtype.type', 'np.all(image_aug == expected)', 'image_aug.dtype.type == dtype', 'np.array_equal(image_aug, expected)', 'image_aug.dtype.type == dtype', 'np.allclose(image_aug, expected, atol=atol)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == polygons[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), expected)', 'observed.shape == segmaps.shape', 'np.array_equal(observed.get_arr(), expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == polygons[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'observed.shape == heatmaps.shape', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.array_equal(observed.get_arr(), expected)', 'observed.shape == segmaps.shape', 'np.array_equal(observed.get_arr(), expected)', 'int(nb_iterations * 0.3) <= nb_images_flipped <= int(nb_iterations * 0.7)', 'int(nb_iterations * 0.3) <= nb_keypoints_flipped <= int(nb_iterations * 0.7)', 'int(nb_iterations * 0.3) <= nb_polygons_flipped <= int(nb_iterations * 0.7)', 'nb_images_flipped_det in [0, nb_iterations]', 'nb_keypoints_flipped_det in [0, nb_iterations]', 'nb_polygons_flipped_det in [0, nb_iterations]', 'int(nb_iterations * 0.3) <= val <= int(nb_iterations * 0.7)', 'val in [0, nb_iterations]', 'False', '700 - 75 < seen[0] < 700 + 75', '300 - 75 < seen[1] < 300 + 75', 'got_exception', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', '0.5 - 1e-4 < params[0].p.value < 0.5 + 1e-4', 'image_aug.dtype.type == image.dtype.type', 'np.all(image_aug == expected)', 'image_aug.dtype.type == dtype', 'np.array_equal(image_aug, expected)', 'image_aug.dtype.type == dtype', 'np.allclose(image_aug, expected, atol=atol)']",[],[],[],[],[],[],[],[],[],[],[],[]
1835,aleju,kontakt@ajung.name,2019-08-29 21:36:40+02:00,9db57673552fb8d989cb81a2a3472fed8df5b2bf,https://github.com/aleju/imgaug/commit/9db57673552fb8d989cb81a2a3472fed8df5b2bf,Migrate tests for .size to unittest,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],7,0,7,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,657,0,0,0,0,0,0,0,0,0,0,0,0,652,0,0,0,0,0,0,0,0,0,0,0,0,"['class Test__handle_position_parameter(unittest.TestCase):', 'class TestResize(unittest.TestCase):', 'class TestPad(unittest.TestCase):', 'class TestCrop(unittest.TestCase):', 'class TestPadToFixedSize(unittest.TestCase):', 'class TestCropToFixedSize(unittest.TestCase):', 'class TestKeepSizeByResize(unittest.TestCase):']",[],"['def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):']",[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['isinstance(observed, tuple)', 'len(observed) == 2', 'isinstance(observed[i], iap.Uniform)', 'isinstance(observed[i].a, iap.Deterministic)', 'isinstance(observed[i].b, iap.Deterministic)', '0.0 - 1e-4 < observed[i].a.value < 0.0 + 1e-4', '1.0 - 1e-4 < observed[i].b.value < 1.0 + 1e-4', 'isinstance(observed, tuple)', 'len(observed) == 2', 'isinstance(observed[i], iap.Deterministic)', '0.5 - 1e-4 < observed[i].value < 0.5 + 1e-4', 'isinstance(observed, tuple)', 'len(observed) == 2', 'isinstance(observed[i], iap.Clip)', 'isinstance(observed[i].other_param, iap.Normal)', 'isinstance(observed[i].other_param.loc, iap.Deterministic)', 'isinstance(observed[i].other_param.scale, iap.Deterministic)', '0.5 - 1e-4 < observed[i].other_param.loc.value < 0.5 + 1e-4', '0.35/2 - 1e-4 < observed[i].other_param.scale.value < 0.35/2 + 1e-4', 'isinstance(observed[0], iap.Deterministic)', 'x_val - 1e-4 < observed[0].value < x_val + 1e-4', 'isinstance(observed[1], iap.Deterministic)', 'y_val - 1e-4 < observed[1].value < y_val + 1e-4', 'isinstance(observed, iap.Poisson)', 'isinstance(observed, tuple)', 'len(observed) == 2', 'isinstance(observed[0], iap.Deterministic)', '0.4 - 1e-4 < observed[0].value < 0.4 + 1e-4', 'isinstance(observed[1], iap.Deterministic)', '0.6 - 1e-4 < observed[1].value < 0.6 + 1e-4', 'in str(e)', 'got_exception', 'isinstance(observed[0], iap.Poisson)', 'isinstance(observed[0].lam, iap.Deterministic)', '2 - 1e-4 < observed[0].lam.value < 2 + 1e-4', 'isinstance(observed[1], iap.Poisson)', 'isinstance(observed[1].lam, iap.Deterministic)', '3 - 1e-4 < observed[1].lam.value < 3 + 1e-4', 'isinstance(observed, tuple)', 'len(observed) == 2', 'isinstance(observed[0], iap.Deterministic)', '0.4 - 1e-4 < observed[0].value < 0.4 + 1e-4', 'isinstance(observed[1], iap.Poisson)', 'isinstance(observed[1].lam, iap.Deterministic)', '3 - 1e-4 < observed[1].lam.value < 3 + 1e-4', 'in str(e)', 'got_exception', 'observed2d.shape == (12, 12)', 'observed3d.shape == (12, 12, 3)', '50 < np.average(observed2d) < 205', '50 < np.average(observed3d) < 205', 'observed2d.shape == (2, 4)', 'observed3d.shape == (2, 4, 3)', '50 < np.average(observed2d) < 205', '50 < np.average(observed3d) < 205', 'heatmaps_aug.shape == (8, 12, 3)', '0 - 1e-6 < heatmaps_aug.min_value < 0 + 1e-6', '1 - 1e-6 < heatmaps_aug.max_value < 1 + 1e-6', 'np.average(heatmaps_aug.get_arr()[0, :]) < 0.05', 'np.average(heatmaps_aug.get_arr()[-1, :]) < 0.05', 'np.average(heatmaps_aug.get_arr()[:, 0]) < 0.05', '0.8 < np.average(heatmaps_aug.get_arr()[2:6, 2:10]) < 1 + 1e-6', 'segmaps_aug.shape == (8, 12, 3)', 'segmaps_aug.arr.shape == (8, 12, nb_channels if nb_channels is not None else 1)', 'np.all(segmaps_aug.arr[0, 1:-1, :] == 0)', 'np.all(segmaps_aug.arr[-1, 1:-1, :] == 0)', 'np.all(segmaps_aug.arr[1:-1, 0, :] == 0)', 'np.all(segmaps_aug.arr[1:-1, -1, :] == 0)', 'np.all(segmaps_aug.arr[2:-2, 2:-2, :] == 1)', 'heatmaps_aug.shape == (16, int(self.image3d.shape[1]*2*2), 3)', 'heatmaps_aug.arr_0to1.shape == (8, 16, 1)', '0 - 1e-6 < heatmaps_aug.min_value < 0 + 1e-6', '1 - 1e-6 < heatmaps_aug.max_value < 1 + 1e-6', 'np.average(heatmaps_aug.get_arr()[0, :]) < 0.05', 'np.average(heatmaps_aug.get_arr()[-1:, :]) < 0.05', 'np.average(heatmaps_aug.get_arr()[:, 0]) < 0.05', '0.8 < np.average(heatmaps_aug.get_arr()[2:6, 2:10]) < 1 + 1e-6', 'segmaps_aug.shape == (16, int(self.image3d.shape[1]*2*2), 3)', 'segmaps_aug.arr.shape == (8, 16, 1)', 'len(kpsoi_aug.keypoints) == 2', 'kpsoi_aug.shape == (8, 12, 3)', 'np.allclose(kpsoi_aug.keypoints[0].x, 1.5)', 'np.allclose(kpsoi_aug.keypoints[0].y, 4)', 'np.allclose(kpsoi_aug.keypoints[1].x, 6)', 'np.allclose(kpsoi_aug.keypoints[1].y, 2)', 'len(psoi_aug.polygons) == 2', 'psoi_aug.shape == (8, 12, 3)', 'psoi_aug.polygons[0].exterior_almost_equals(', 'psoi_aug.polygons[1].exterior_almost_equals(', 'len(kpsoi_aug.keypoints) == 2', 'kpsoi_aug.shape == (8, 24)', 'np.allclose(kpsoi_aug.keypoints[0].x, 3)', 'np.allclose(kpsoi_aug.keypoints[0].y, 4)', 'np.allclose(kpsoi_aug.keypoints[1].x, 12)', 'np.allclose(kpsoi_aug.keypoints[1].y, 2)', 'len(psoi_aug.polygons) == 2', 'psoi_aug.shape == (8, 24)', 'psoi_aug.polygons[0].exterior_almost_equals(', 'psoi_aug.polygons[1].exterior_almost_equals(', 'len(kpsoi_aug.keypoints) == 0', 'kpsoi_aug.shape == (8, 12, 3)', 'len(psoi_aug.polygons) == 0', 'psoi_aug.shape == (8, 12, 3)', 'observed2d.shape in [(12, 12), (14, 14)]', 'observed3d.shape in [(12, 12, 3), (14, 14, 3)]', 'np.all(seen2d)', 'np.all(seen3d)', 'observed2d.shape in [(12, 12), (13, 13), (14, 14)]', 'observed3d.shape in [(12, 12, 3), (13, 13, 3), (14, 14, 3)]', 'np.all(seen2d)', 'np.all(seen3d)', 'observed2d.shape == self.image2d.shape', 'observed3d.shape == self.image3d.shape', 'observed2d.shape == self.image2d.shape', 'observed3d.shape == self.image3d.shape', 'observed2d.shape == self.image2d.shape', 'observed3d.shape == self.image3d.shape', 'observed2d.shape == (11, self.image2d.shape[1])', 'observed3d.shape == (11, self.image3d.shape[1], 3)', 'observed2d.shape == (self.image2d.shape[0], 13)', 'observed3d.shape == (self.image3d.shape[0], 13, 3)', 'observed2d.shape == (12, 13)', 'observed3d.shape == (12, 13, 3)', 'observed2d.shape == (12, self.image2d.shape[1])', 'observed3d.shape == (12, self.image3d.shape[1], 3)', 'observed2d.shape == (self.image2d.shape[0], 12)', 'observed3d.shape == (self.image3d.shape[0], 12, 3)', 'observed2d.shape == (12, int(12 * aspect_ratio2d))', 'observed3d.shape == (12, int(12 * aspect_ratio3d), 3)', 'observed2d.shape == (int(12 * (1/aspect_ratio2d)), 12)', 'observed3d.shape == (int(12 * (1/aspect_ratio3d)), 12, 3)', 'observed2d.shape == (6, int(6 * aspect_ratio2d))', 'observed3d.shape == (6, int(6 * aspect_ratio3d), 3)', 'observed2d.shape == (int(6 * (1/aspect_ratio2d)), 6)', 'observed3d.shape == (int(6 * (1/aspect_ratio3d)), 6, 3)', 'observed2d.shape in [(12, 12), (14, 12)]', 'observed3d.shape in [(12, 12, 3), (14, 12, 3)]', 'np.all(seen2d)', 'np.all(seen3d)', 'observed2d.shape in [(12, 12), (12, 14)]', 'observed3d.shape in [(12, 12, 3), (12, 14, 3)]', 'np.all(seen2d)', 'np.all(seen3d)', 'observed2d.shape in [(12, 12), (12, 14)]', 'observed3d.shape in [(12, 12, 3), (12, 14, 3)]', 'np.all(seen2d)', 'np.all(seen3d)', 'observed2d.shape in [(12, 12), (13, 12), (14, 12)]', 'observed3d.shape in [(12, 12, 3), (13, 12, 3), (14, 12, 3)]', 'np.all(seen2d)', 'np.all(seen3d)', 'observed2d.shape == (self.image2d.shape[0]*2,', 'observed3d.shape == (self.image3d.shape[0]*2,', 'intensity_low < np.average(observed2d) < intensity_high', 'intensity_low < np.average(observed3d) < intensity_high', 'observed2d.shape in expected_shapes_2d', 'observed3d.shape in expected_shapes_3d', 'np.all(seen2d)', 'np.all(seen3d)', 'observed2d.shape in expected_shapes_2d', 'observed3d.shape in expected_shapes_3d', 'np.all(seen2d)', 'np.all(seen3d)', 'observed2d.shape in possible2d', 'observed3d.shape in possible3d', 'not not_seen2d', 'not not_seen3d', 'observed2d.shape in possible2d', 'observed3d.shape in possible3d', 'not not_seen2d', 'not not_seen3d', 'in str(exc)', 'got_exception', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'params[0].value == 1', 'params[1].value == ', 'isinstance(aug.pad_mode, iap.Choice)', 'len(aug.pad_mode.a) == len(expected)', 'np.all([v in aug.pad_mode.a for v in expected])', 'isinstance(aug.pad_mode, iap.Choice)', 'len(aug.pad_mode.a) == len(expected)', 'np.all([v in aug.pad_mode.a for v in expected])', 'isinstance(aug.pad_cval, iap.Choice)', 'len(aug.pad_cval.a) == len(expected)', 'np.all([v in aug.pad_cval.a for v in expected])', 'np.array_equal(observed, np.array([base_img_padded]))', 'array_equal_lists(observed, [base_img_padded])', 'observed[0].shape == tuple(image_padded_shape)', 'keypoints_equal(observed, expected)', 'observed.shape == tuple(image_padded_shape)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.array_equal(observed.get_arr(), heatmaps_arr_padded)', 'observed.shape == tuple(image_padded_shape)', 'np.array_equal(observed.get_arr(), segmaps_arr_padded)', 'any([val == 1 for val in matches])', 'any([val == 1 for val in matches])', 'any([', 'any([', 'len(set(movements)) == 3', 'len(set(movements_det)) == 1', 'any([val == 1 for val in matches])', 'any([val == 1 for val in matches])', 'any([', 'any([', 'len(set(movements)) == 2', 'len(set(movements_det)) == 1', 'observed.shape == (10, 24)', 'observed.arr_0to1.shape == (10, 6, 1)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.arr_0to1[..., 0], heatmaps_arr_small_padded)', 'observed.shape == (10, 24)', 'observed.arr.shape == (10, 6, 1)', 'np.array_equal(observed.arr[..., 0], segmaps_arr_small_padded)', 'observed.shape == (6, 16)', 'observed.arr_0to1.shape == (6, 4, 1)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(', 'observed.shape == (6, 16)', 'observed.arr.shape == (6, 4, 1)', 'np.array_equal(', 'kpsoi_aug.shape == (10, 8, 3)', 'len(kpsoi_aug.keypoints) == 2', 'np.allclose(kpsoi_aug.keypoints[0].x, 4+1)', 'np.allclose(kpsoi_aug.keypoints[0].y, 2+2)', 'np.allclose(kpsoi_aug.keypoints[1].x, 4+3)', 'np.allclose(kpsoi_aug.keypoints[1].y, 2+0)', 'kpsoi_aug.shape == (4, 4, 3)', 'len(kpsoi_aug.keypoints) == 2', 'np.allclose(kpsoi_aug.keypoints[0].x, ((4+1)/8)*4)', 'np.allclose(kpsoi_aug.keypoints[0].y, ((2+2)/10)*4)', 'np.allclose(kpsoi_aug.keypoints[1].x, ((4+3)/8)*4)', 'np.allclose(kpsoi_aug.keypoints[1].y, ((2+0)/10)*4)', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (10, 8, 3)', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (4, 4, 3)', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(', 'False', 'np.all([100 - 50 < v < 100 + 50 for v in seen])', 'in str(exc)', 'got_exception', 'np.sum(observed.get_arr() <= 1e-4) == 3', 'np.sum(observed.get_arr() == 0) == 3', 'observed[0, 0] == 0', 'observed[0, 1] == 100', 'False', 'np.all([100 - 50 < v < 100 + 50 for v in seen])', 'False', 'np.all([100 - 50 < v < 100 + 50 for v in seen])', 'in str(exc)', 'got_exception', 'np.sum(observed.get_arr() > 1e-4) == 0', 'np.sum(observed.get_arr() > 0) == 0', 'observed.shape == (4+4+4, 4+4+4)', 'np.sum(observed[4:-4, 4:-4]) == 4*4', 'np.sum(observed) == 4*4', 'observed.shape == (4+4+4, 4+4+4)', 'np.sum(observed[4:-4, 4:-4]) == 4*4', 'np.sum(observed) == 4*4', 'np.sum(observed) == 4*4', '(observed.shape[0] - 4) % 2 == 0', '(observed.shape[1] - 4) % 2 == 0', 'in str(exc)', 'got_exception', 'np.array_equal(observed, image_padded)', 'keypoints_equal(observed, keypoints_moved)', 'observed.shape == (12, 24)', 'observed.arr_0to1.shape == (12, 6, 1)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.arr_0to1[..., 0], heatmaps_arr_small_padded)', 'observed.shape == (12, 24)', 'observed.arr.shape == (12, 6, 1)', 'np.array_equal(observed.arr[..., 0], segmaps_arr_small_padded)', 'observed.shape == (6, 16)', 'observed.arr_0to1.shape == (6, 4, 1)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(', 'observed.shape == (6, 16)', 'observed.arr.shape == (6, 4, 1)', 'np.array_equal(', 'kpsoi_aug.shape == (10, 8, 3)', 'len(kpsoi_aug.keypoints) == 2', 'np.allclose(kpsoi_aug.keypoints[0].x, 4+1)', 'np.allclose(kpsoi_aug.keypoints[0].y, 2+2)', 'np.allclose(kpsoi_aug.keypoints[1].x, 4+3)', 'np.allclose(kpsoi_aug.keypoints[1].y, 2+0)', 'kpsoi_aug.shape == (4, 4, 3)', 'len(kpsoi_aug.keypoints) == 2', 'np.allclose(kpsoi_aug.keypoints[0].x, ((4+1)/8)*4)', 'np.allclose(kpsoi_aug.keypoints[0].y, ((2+2)/10)*4)', 'np.allclose(kpsoi_aug.keypoints[1].x, ((4+3)/8)*4)', 'np.allclose(kpsoi_aug.keypoints[1].y, ((2+0)/10)*4)', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (10, 8, 3)', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (4, 4, 3)', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(', 'np.all([v > 30 for v in seen])', 'np.all([v > 30 for v in seen])', '250 - 50 < seen[0] < 250 + 50', 'seen[1] == 0', 'seen[2] == 0', 'seen[3] == 0', '250 - 50 < seen[4] < 250 + 50', '250 - 50 < seen[0] < 250 + 50', 'seen[1] == 0', 'seen[2] == 0', 'seen[3] == 0', '250 - 50 < seen[4] < 250 + 50', 'image_aug.dtype.name == image.dtype.name', 'image_aug.shape == (4, 3)', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == 1)', 'image_aug.dtype.name == dtype', 'image_aug.shape == (4, 3)', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == value)', 'image_aug.dtype == np.dtype(dtype)', 'image_aug.shape == (4, 3)', 'np.all(_isclose(image_aug[~mask], 0))', 'np.all(_isclose(image_aug[mask],', 'np.array_equal(observed, np.array([base_img_cropped]))', 'array_equal_lists(observed, [base_img_cropped])', 'keypoints_equal(observed, keypoints_moved)', 'observed.shape == base_img_cropped.shape', 'np.array_equal(observed.get_arr(), heatmaps_arr_cropped)', 'observed.shape == base_img_cropped.shape', 'np.array_equal(observed.get_arr(), segmaps_arr_cropped)', 'any([val == 1 for val in matches])', 'any([val == 1 for val in matches])', 'any([array_equal_lists(observed, [base_img_cropped])', 'any([keypoints_equal(observed, [kp])', 'len(set(movements)) == 3', 'len(set(movements_det)) == 1', 'any([val == 1 for val in matches])', 'any([val == 1 for val in matches])', 'any([array_equal_lists(observed, [base_img_cropped])', 'any([keypoints_equal(observed, [kp])', 'len(set(movements)) == 2', 'len(set(movements_det)) == 1', 'observed.shape == (4, 8)', 'observed.arr_0to1.shape == (4, 4, 1)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.arr_0to1[..., 0],', 'observed.shape == (4, 8)', 'observed.arr.shape == (4, 4, 1)', 'np.array_equal(observed.arr[..., 0], segmaps_arr_small_cropped)', 'observed.shape == (6, 16)', 'observed.arr_0to1.shape == (6, 8, 1)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(', 'observed.shape == (6, 16)', 'observed.arr.shape == (6, 8, 1)', 'np.array_equal(', 'kpsoi_aug.shape == (9, 10, 3)', 'len(kpsoi_aug.keypoints) == 2', 'np.allclose(kpsoi_aug.keypoints[0].x, 3-4)', 'np.allclose(kpsoi_aug.keypoints[0].y, 6-1)', 'np.allclose(kpsoi_aug.keypoints[1].x, 8-4)', 'np.allclose(kpsoi_aug.keypoints[1].y, 5-1)', 'kpsoi_aug.shape == (14, 14, 3)', 'len(kpsoi_aug.keypoints) == 2', 'np.allclose(kpsoi_aug.keypoints[0].x, ((3-4)/10)*14)', 'np.allclose(kpsoi_aug.keypoints[0].y, ((6-1)/9)*14)', 'np.allclose(kpsoi_aug.keypoints[1].x, ((8-4)/10)*14)', 'np.allclose(kpsoi_aug.keypoints[1].y, ((5-1)/9)*14)', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (5, 6, 3)', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (10, 10, 3)', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(', 'observed.shape == (40, 40)', 'np.all(observed == image[5:-5, 5:-5])', 'observed.shape == (40, 40)', 'np.all(observed == image[5:-5, 5:-5])', '30 <= observed.shape[0] <= 40', '30 <= observed.shape[1] <= 40', 'in str(exc)', 'got_exception', 'np.array_equal(observed, image_cropped)', 'keypoints_equal(observed, keypoints_moved)', 'observed.shape == (8, 16)', 'observed.arr_0to1.shape == (4, 6, 1)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.arr_0to1[..., 0], heatmaps_arr_small_cropped)', 'observed.shape == (8, 16)', 'observed.arr.shape == (4, 6, 1)', 'np.array_equal(observed.arr[..., 0], segmaps_arr_small_cropped)', 'observed.shape == (16, 32)', 'observed.arr_0to1.shape == (8, 12, 1)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(', 'observed.shape == (16, 32)', 'observed.arr.shape == (8, 12, 1)', 'np.allclose(', 'kpsoi_aug.shape == (4, 18, 3)', 'len(kpsoi_aug.keypoints) == 2', 'np.allclose(kpsoi_aug.keypoints[0].x, 12-2)', 'np.allclose(kpsoi_aug.keypoints[0].y, 10-4)', 'np.allclose(kpsoi_aug.keypoints[1].x, 8-2)', 'np.allclose(kpsoi_aug.keypoints[1].y, 12-4)', 'kpsoi_aug.shape == (16, 20, 3)', 'len(kpsoi_aug.keypoints) == 2', 'np.allclose(kpsoi_aug.keypoints[0].x, ((12-2)/18)*20)', 'np.allclose(kpsoi_aug.keypoints[0].y, ((10-4)/4)*16)', 'np.allclose(kpsoi_aug.keypoints[1].x, ((8-2)/18)*20)', 'np.allclose(kpsoi_aug.keypoints[1].y, ((12-4)/4)*16)', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (3, 9, 3)', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (10, 10, 3)', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(', 'np.all([v > 30 for v in seen])', 'np.all([v > 30 for v in seen])', '250 - 50 < seen[0] < 250 + 50', 'seen[1] == 0', 'seen[2] == 0', 'seen[3] == 0', '250 - 50 < seen[4] < 250 + 50', '250 - 50 < seen[0] < 250 + 50', 'seen[1] == 0', 'seen[2] == 0', 'seen[3] == 0', '250 - 50 < seen[4] < 250 + 50', 'image_aug.dtype.name == image.dtype.name', 'image_aug.shape == (2, 3)', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == 1)', 'image_aug.dtype.name == dtype', 'image_aug.shape == (2, 3)', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == value)', 'image_aug.dtype == np.dtype(dtype)', 'image_aug.shape == (2, 3)', 'np.all(_isclose(image_aug[~mask], 0))', 'np.all(_isclose(image_aug[mask],', 'observed.dtype.name == ', 'observed.dtype.name == ', 'observed.shape == (5, 5, 1)', 'observed.dtype.name == ', 'observed.shape == (5, 5, 3)', 'observed.dtype.name == dtype', 'observed.shape == (5, 5)', 'observed.dtype.name == ', 'observed.shape == (5, 5, 3)', 'observed.dtype.name == ', 'observed.shape == (5, 5, 3)', 'observed.dtype.name == ', 'observed.shape == (5, 5, 3)', 'np.array_equal(observed, img5x5)', 'observed.dtype.name == ', 'observed.shape == (6, 6, 3)', 'np.array_equal(observed, img6x6)', 'observed.dtype.name == ', 'observed.shape == (4, 4)', 'np.array_equal(observed, expected)', 'observed.dtype.name == ', 'observed.shape == (3, 3)', 'np.array_equal(observed, expected)', 'observed.dtype.name == ', 'observed.shape == (3, 3)', 'np.array_equal(observed, expected)', 'observed.dtype.name == ', 'observed.shape == (3, 3)', 'np.array_equal(observed, expected)', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed.shape == (3, 3, 3)', 'np.allclose(observed.arr_0to1, expected)', 'observed.shape == (32, 32, 3)', 'np.allclose(observed.arr_0to1, expected)', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.arr, expected)', 'observed.shape == (32, 32, 3)', 'np.array_equal(observed.arr, expected)', 'image_aug.dtype.name == image.dtype.name', 'image_aug.shape == (4, 3)', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == 1)', 'image_aug.dtype.name == dtype', 'image_aug.shape == (4, 3)', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == value)', 'image_aug.dtype.name == dtype', 'image_aug.shape == (4, 3)', 'np.all(_isclose(image_aug[~mask], 0))', 'np.all(_isclose(image_aug[mask],', 'observed.dtype.name == ', 'observed.dtype.name == ', 'observed.shape == (1, 1, 1)', 'observed.dtype.name == ', 'observed.shape == (1, 1, 3)', 'observed.dtype.name == dtype', 'observed.shape == (1, 1)', 'observed.dtype.name == ', 'observed.shape == (1, 5, 3)', 'observed.dtype.name == ', 'observed.shape == (5, 1, 3)', 'observed.dtype.name == ', 'observed.shape == (5, 5, 3)', 'np.array_equal(observed, img5x5)', 'observed.dtype.name == ', 'observed.shape == (4, 4, 3)', 'np.array_equal(observed, img4x4)', 'observed.dtype.name == ', 'observed.shape == (3, 3)', 'np.array_equal(observed, expected)', 'observed.dtype.name == ', 'observed.shape == (3, 3)', 'np.array_equal(observed, expected)', 'observed.dtype.name == ', 'observed.shape == (3, 3)', 'np.array_equal(observed, expected)', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed.shape == (3, 3, 3)', 'np.allclose(observed.arr_0to1, expected)', 'observed.shape == (3, 3, 3)', 'np.allclose(observed.arr_0to1, expected)', 'observed.shape == (3, 3, 3)', 'np.allclose(observed.arr_0to1, expected)', 'observed.shape == (32, 32, 3)', 'np.allclose(observed.arr_0to1, expected)', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.arr, expected)', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.arr, expected)', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.arr, expected)', 'observed.shape == (32, 32, 3)', 'np.array_equal(observed.arr, expected)', 'image_aug.dtype.name == image.dtype.name', 'image_aug.shape == (2, 3)', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == 1)', 'image_aug.dtype.name == dtype', 'image_aug.shape == (2, 3)', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == value)', 'image_aug.dtype.name == dtype', 'image_aug.shape == (2, 3)', 'np.all(_isclose(image_aug[~mask], 0))', 'np.all(_isclose(image_aug[mask],', 'in samples', 'len(set(samples)) == 1', 'in samples_heatmaps', 'len(set(samples_heatmaps)) == 1', 'in samples_segmaps', 'len(set(samples_segmaps)) == 1', 'cv2.INTER_LINEAR in samples', 'len(set(samples)) == 1', 'cv2.INTER_NEAREST in samples_heatmaps', 'len(set(samples_heatmaps)) == 1', 'cv2.INTER_CUBIC in samples_segmaps', 'len(set(samples_segmaps)) == 1', 'iaa.KeepSizeByResize.NO_RESIZE in samples', 'len(set(samples)) == 1', 'iaa.KeepSizeByResize.NO_RESIZE in samples_heatmaps', 'len(set(samples_heatmaps)) == 1', 'iaa.KeepSizeByResize.NO_RESIZE in samples_segmaps', 'len(set(samples_segmaps)) == 1', 'in samples', 'in samples', 'len(set(samples)) == 2', 'in samples_heatmaps', 'in samples_heatmaps', 'len(set(samples_heatmaps)) == 3', 'np.isclose(', 'in samples_segmaps', 'in samples_segmaps', 'len(set(samples_segmaps)) == 3', 'np.isclose(', 'in samples', 'in samples', 'len(set(samples)) == 2', 'in samples_heatmaps', 'in samples_heatmaps', 'len(set(samples_heatmaps)) == 2', 'in samples_segmaps', 'in samples_segmaps', 'len(set(samples_segmaps)) == 2', 'observed.shape == (4, 4, 3)', 'observed.dtype.type == np.uint8', 'np.allclose(observed, expected)', 'observed.shape == (3, 4, 3)', 'observed.dtype.type == np.uint8', 'np.allclose(observed, expected)', 'kpoi_aug.shape == (4, 4, 3)', 'np.isclose(kpoi_aug.keypoints[0].x, 0, rtol=0, atol=1e-4)', 'np.isclose(kpoi_aug.keypoints[0].y,', 'np.isclose(kpoi_aug.keypoints[1].x, 1, rtol=0, atol=1e-4)', 'np.isclose(kpoi_aug.keypoints[1].y,', 'np.isclose(kpoi_aug.keypoints[2].x, 2, rtol=0, atol=1e-4)', 'np.isclose(kpoi_aug.keypoints[2].y,', 'kpoi_aug.shape == (3, 4, 3)', 'np.isclose(kpoi_aug.keypoints[0].x, 0, rtol=0, atol=1e-4)', 'np.isclose(kpoi_aug.keypoints[0].y, 0, rtol=0, atol=1e-4)', 'np.isclose(kpoi_aug.keypoints[1].x, 1, rtol=0, atol=1e-4)', 'np.isclose(kpoi_aug.keypoints[1].y, 0, rtol=0, atol=1e-4)', 'np.isclose(kpoi_aug.keypoints[2].x, 2, rtol=0, atol=1e-4)', 'np.isclose(kpoi_aug.keypoints[2].y, 2, rtol=0, atol=1e-4)', 'heatmaps_oi_aug.arr_0to1.shape == (4, 4, 1)', 'np.allclose(heatmaps_oi_aug.arr_0to1,', 'hmoi_aug.arr_0to1.shape == (4, 4, 1)', '(', 'heatmaps_oi_aug.arr_0to1.shape == (3, 4, 1)', 'np.allclose(', 'heatmaps_oi_aug.arr_0to1.shape == (4, 4, 1)', 'np.allclose(', 'segmaps_oi_aug.arr.shape == (4, 4, 1)', 'np.array_equal(segmaps_oi_aug.arr, segmaps_oi_nearest.arr)', 'segmaps_oi_aug.arr.shape == (4, 4, 1)', 'np.array_equal(segmaps_oi_aug.arr, segmaps_oi_nearest.arr)', 'segmaps_oi_aug.arr.shape == (3, 4, 1)', 'np.array_equal(segmaps_oi_aug.arr, segmaps_oi.arr[1:, :, :])']",[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(observed, tuple)', 'len(observed) == 2', 'isinstance(observed[i], iap.Uniform)', 'isinstance(observed[i].a, iap.Deterministic)', 'isinstance(observed[i].b, iap.Deterministic)', '0.0 - 1e-4 < observed[i].a.value < 0.0 + 1e-4', '1.0 - 1e-4 < observed[i].b.value < 1.0 + 1e-4', 'isinstance(observed, tuple)', 'len(observed) == 2', 'isinstance(observed[i], iap.Deterministic)', '0.5 - 1e-4 < observed[i].value < 0.5 + 1e-4', 'isinstance(observed, tuple)', 'len(observed) == 2', 'isinstance(observed[i], iap.Clip)', 'isinstance(observed[i].other_param, iap.Normal)', 'isinstance(observed[i].other_param.loc, iap.Deterministic)', 'isinstance(observed[i].other_param.scale, iap.Deterministic)', '0.5 - 1e-4 < observed[i].other_param.loc.value < 0.5 + 1e-4', '0.35/2 - 1e-4 < observed[i].other_param.scale.value < 0.35/2 + 1e-4', 'isinstance(observed[0], iap.Deterministic)', 'x_val - 1e-4 < observed[0].value < x_val + 1e-4', 'isinstance(observed[1], iap.Deterministic)', 'y_val - 1e-4 < observed[1].value < y_val + 1e-4', 'isinstance(observed, iap.Poisson)', 'isinstance(observed, tuple)', 'len(observed) == 2', 'isinstance(observed[0], iap.Deterministic)', '0.4 - 1e-4 < observed[0].value < 0.4 + 1e-4', 'isinstance(observed[1], iap.Deterministic)', '0.6 - 1e-4 < observed[1].value < 0.6 + 1e-4', 'in str(e)', 'got_exception', 'isinstance(observed[0], iap.Poisson)', 'isinstance(observed[0].lam, iap.Deterministic)', '2 - 1e-4 < observed[0].lam.value < 2 + 1e-4', 'isinstance(observed[1], iap.Poisson)', 'isinstance(observed[1].lam, iap.Deterministic)', '3 - 1e-4 < observed[1].lam.value < 3 + 1e-4', 'isinstance(observed, tuple)', 'len(observed) == 2', 'isinstance(observed[0], iap.Deterministic)', '0.4 - 1e-4 < observed[0].value < 0.4 + 1e-4', 'isinstance(observed[1], iap.Poisson)', 'isinstance(observed[1].lam, iap.Deterministic)', '3 - 1e-4 < observed[1].lam.value < 3 + 1e-4', 'in str(e)', 'got_exception', 'observed2d.shape == (12, 12)', 'observed3d.shape == (12, 12, 3)', '50 < np.average(observed2d) < 205', '50 < np.average(observed3d) < 205', 'heatmaps_aug.shape == (8, 12, 3)', '0 - 1e-6 < heatmaps_aug.min_value < 0 + 1e-6', '1 - 1e-6 < heatmaps_aug.max_value < 1 + 1e-6', 'np.average(heatmaps_aug.get_arr()[0, :]) < 0.05', 'np.average(heatmaps_aug.get_arr()[-1, :]) < 0.05', 'np.average(heatmaps_aug.get_arr()[:, 0]) < 0.05', '0.8 < np.average(heatmaps_aug.get_arr()[2:6, 2:10]) < 1 + 1e-6', 'segmaps_aug.shape == (8, 12, 3)', 'segmaps_aug.arr.shape == (8, 12, nb_channels if nb_channels is not None else 1)', 'heatmaps_aug.shape == (16, int(base_img3d.shape[1]*2*2), 3)', 'heatmaps_aug.arr_0to1.shape == (8, 16, 1)', '0 - 1e-6 < heatmaps_aug.min_value < 0 + 1e-6', '1 - 1e-6 < heatmaps_aug.max_value < 1 + 1e-6', 'np.average(heatmaps_aug.get_arr()[0, :]) < 0.05', 'np.average(heatmaps_aug.get_arr()[-1:, :]) < 0.05', 'np.average(heatmaps_aug.get_arr()[:, 0]) < 0.05', '0.8 < np.average(heatmaps_aug.get_arr()[2:6, 2:10]) < 1 + 1e-6', 'segmaps_aug.shape == (16, int(base_img3d.shape[1]*2*2), 3)', 'segmaps_aug.arr.shape == (8, 16, 1)', 'np.all(segmaps_aug.arr[0, 1:-1, :] == 0)', 'np.all(segmaps_aug.arr[-1, 1:-1, :] == 0)', 'np.all(segmaps_aug.arr[1:-1, 0, :] == 0)', 'np.all(segmaps_aug.arr[1:-1, -1, :] == 0)', 'np.all(segmaps_aug.arr[2:-2, 2:-2, :] == 1)', 'len(kpsoi_aug.keypoints) == 2', 'kpsoi_aug.shape == (8, 12, 3)', 'np.allclose(kpsoi_aug.keypoints[0].x, 1.5)', 'np.allclose(kpsoi_aug.keypoints[0].y, 4)', 'np.allclose(kpsoi_aug.keypoints[1].x, 6)', 'np.allclose(kpsoi_aug.keypoints[1].y, 2)', 'len(psoi_aug.polygons) == 2', 'psoi_aug.shape == (8, 12, 3)', 'psoi_aug.polygons[0].exterior_almost_equals(', 'psoi_aug.polygons[1].exterior_almost_equals(', 'len(kpsoi_aug.keypoints) == 2', 'kpsoi_aug.shape == (8, 24)', 'np.allclose(kpsoi_aug.keypoints[0].x, 3)', 'np.allclose(kpsoi_aug.keypoints[0].y, 4)', 'np.allclose(kpsoi_aug.keypoints[1].x, 12)', 'np.allclose(kpsoi_aug.keypoints[1].y, 2)', 'len(psoi_aug.polygons) == 2', 'psoi_aug.shape == (8, 24)', 'psoi_aug.polygons[0].exterior_almost_equals(', 'psoi_aug.polygons[1].exterior_almost_equals(', 'len(kpsoi_aug.keypoints) == 0', 'kpsoi_aug.shape == (8, 12, 3)', 'len(psoi_aug.polygons) == 0', 'psoi_aug.shape == (8, 12, 3)', 'observed2d.shape in [(12, 12), (14, 14)]', 'observed3d.shape in [(12, 12, 3), (14, 14, 3)]', 'np.all(seen2d)', 'np.all(seen3d)', 'observed2d.shape in [(12, 12), (13, 13), (14, 14)]', 'observed3d.shape in [(12, 12, 3), (13, 13, 3), (14, 14, 3)]', 'np.all(seen2d)', 'np.all(seen3d)', 'observed2d.shape == base_img2d.shape', 'observed3d.shape == base_img3d.shape', 'observed2d.shape == base_img2d.shape', 'observed3d.shape == base_img3d.shape', 'observed2d.shape == base_img2d.shape', 'observed3d.shape == base_img3d.shape', 'observed2d.shape == (11, base_img2d.shape[1])', 'observed3d.shape == (11, base_img3d.shape[1], 3)', 'observed2d.shape == (base_img2d.shape[0], 13)', 'observed3d.shape == (base_img3d.shape[0], 13, 3)', 'observed2d.shape == (12, 13)', 'observed3d.shape == (12, 13, 3)', 'observed2d.shape == (12, base_img2d.shape[1])', 'observed3d.shape == (12, base_img3d.shape[1], 3)', 'observed2d.shape == (base_img2d.shape[0], 12)', 'observed3d.shape == (base_img3d.shape[0], 12, 3)', 'observed2d.shape == (12, int(12 * aspect_ratio2d))', 'observed3d.shape == (12, int(12 * aspect_ratio3d), 3)', 'observed2d.shape == (int(12 * (1/aspect_ratio2d)), 12)', 'observed3d.shape == (int(12 * (1/aspect_ratio3d)), 12, 3)', 'observed2d.shape == (6, int(6 * aspect_ratio2d))', 'observed3d.shape == (6, int(6 * aspect_ratio3d), 3)', 'observed2d.shape == (int(6 * (1/aspect_ratio2d)), 6)', 'observed3d.shape == (int(6 * (1/aspect_ratio3d)), 6, 3)', 'observed2d.shape in [(12, 12), (14, 12)]', 'observed3d.shape in [(12, 12, 3), (14, 12, 3)]', 'np.all(seen2d)', 'np.all(seen3d)', 'observed2d.shape in [(12, 12), (12, 14)]', 'observed3d.shape in [(12, 12, 3), (12, 14, 3)]', 'np.all(seen2d)', 'np.all(seen3d)', 'observed2d.shape in [(12, 12), (12, 14)]', 'observed3d.shape in [(12, 12, 3), (12, 14, 3)]', 'np.all(seen2d)', 'np.all(seen3d)', 'observed2d.shape in [(12, 12), (13, 12), (14, 12)]', 'observed3d.shape in [(12, 12, 3), (13, 12, 3), (14, 12, 3)]', 'np.all(seen2d)', 'np.all(seen3d)', 'observed2d.shape == (base_img2d.shape[0]*2, base_img2d.shape[1]*2)', 'observed3d.shape == (base_img3d.shape[0]*2, base_img3d.shape[1]*2, 3)', 'intensity_low < np.average(observed2d) < intensity_high', 'intensity_low < np.average(observed3d) < intensity_high', 'observed2d.shape in [(base_img2d.shape[0]*2, base_img2d.shape[1]*2),', 'observed3d.shape in [(base_img3d.shape[0]*2, base_img3d.shape[1]*2, 3),', 'np.all(seen2d)', 'np.all(seen3d)', 'observed2d.shape in [(base_img2d.shape[0]*2, base_img2d.shape[1]*2),', 'observed3d.shape in [(base_img3d.shape[0]*2, base_img3d.shape[1]*2, 3),', 'np.all(seen2d)', 'np.all(seen3d)', 'observed2d.shape in possible2d', 'observed3d.shape in possible3d', 'not not_seen2d', 'not not_seen3d', 'observed2d.shape in possible2d', 'observed3d.shape in possible3d', 'not not_seen2d', 'not not_seen3d', 'in str(exc)', 'got_exception', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'params[0].value == 1', 'params[1].value == ', 'np.array_equal(observed, np.array([base_img_padded]))', 'array_equal_lists(observed, [base_img_padded])', 'keypoints_equal(observed, keypoints_moved)', 'observed.shape == base_img_padded.shape', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.array_equal(observed.get_arr(), heatmaps_arr_padded)', 'observed.shape == base_img_padded.shape', 'np.array_equal(observed.get_arr(), segmaps_arr_padded)', 'any([val == 1 for val in matches])', 'any([val == 1 for val in matches])', 'any([array_equal_lists(observed, [base_img_padded])', 'any([keypoints_equal(observed, [kp]) for kp in keypoints_padded])', 'len(set(movements)) == 3', 'len(set(movements_det)) == 1', 'any([val == 1 for val in matches])', 'any([val == 1 for val in matches])', 'any([array_equal_lists(observed, [base_img_padded])', 'any([keypoints_equal(observed, [kp]) for kp in keypoints_padded])', 'len(set(movements)) == 2', 'len(set(movements_det)) == 1', 'observed.shape == (10, 24)', 'observed.arr_0to1.shape == (10, 6, 1)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.arr_0to1[..., 0], heatmaps_arr_small_padded)', 'observed.shape == (10, 24)', 'observed.arr.shape == (10, 6, 1)', 'np.array_equal(observed.arr[..., 0], segmaps_arr_small_padded)', 'observed.shape == (6, 16)', 'observed.arr_0to1.shape == (6, 4, 1)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(', 'observed.shape == (6, 16)', 'observed.arr.shape == (6, 4, 1)', 'np.array_equal(', 'kpsoi_aug.shape == (10, 8, 3)', 'len(kpsoi_aug.keypoints) == 2', 'np.allclose(kpsoi_aug.keypoints[0].x, 4+1)', 'np.allclose(kpsoi_aug.keypoints[0].y, 2+2)', 'np.allclose(kpsoi_aug.keypoints[1].x, 4+3)', 'np.allclose(kpsoi_aug.keypoints[1].y, 2+0)', 'kpsoi_aug.shape == (4, 4, 3)', 'len(kpsoi_aug.keypoints) == 2', 'np.allclose(kpsoi_aug.keypoints[0].x, ((4+1)/8)*4)', 'np.allclose(kpsoi_aug.keypoints[0].y, ((2+2)/10)*4)', 'np.allclose(kpsoi_aug.keypoints[1].x, ((4+3)/8)*4)', 'np.allclose(kpsoi_aug.keypoints[1].y, ((2+0)/10)*4)', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (10, 8, 3)', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (4, 4, 3)', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(', 'False', 'np.all([100 - 50 < v < 100 + 50 for v in seen])', 'isinstance(aug.pad_mode, iap.Choice)', 'len(aug.pad_mode.a) == len(expected)', 'np.all([v in aug.pad_mode.a for v in expected])', 'isinstance(aug.pad_mode, iap.Choice)', 'len(aug.pad_mode.a) == len(expected)', 'np.all([v in aug.pad_mode.a for v in expected])', 'in str(exc)', 'got_exception', 'np.sum(observed.get_arr() <= 1e-4) == 3', 'np.sum(observed.get_arr() == 0) == 3', 'observed[0, 0] == 0', 'observed[0, 1] == 100', 'False', 'np.all([100 - 50 < v < 100 + 50 for v in seen])', 'isinstance(aug.pad_cval, iap.Choice)', 'len(aug.pad_cval.a) == len(expected)', 'np.all([v in aug.pad_cval.a for v in expected])', 'False', 'np.all([100 - 50 < v < 100 + 50 for v in seen])', 'in str(exc)', 'got_exception', 'np.sum(observed.get_arr() > 1e-4) == 0', 'np.sum(observed.get_arr() > 0) == 0', 'observed.shape == (4+4+4, 4+4+4)', 'np.sum(observed[4:-4, 4:-4]) == 4*4', 'np.sum(observed) == 4*4', 'observed.shape == (4+4+4, 4+4+4)', 'np.sum(observed[4:-4, 4:-4]) == 4*4', 'np.sum(observed) == 4*4', 'np.sum(observed) == 4*4', '(observed.shape[0] - 4) % 2 == 0', '(observed.shape[1] - 4) % 2 == 0', 'in str(exc)', 'got_exception', 'np.array_equal(observed, image_padded)', 'keypoints_equal(observed, keypoints_moved)', 'observed.shape == (12, 24)', 'observed.arr_0to1.shape == (12, 6, 1)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.arr_0to1[..., 0], heatmaps_arr_small_padded)', 'observed.shape == (12, 24)', 'observed.arr.shape == (12, 6, 1)', 'np.array_equal(observed.arr[..., 0], segmaps_arr_small_padded)', 'observed.shape == (6, 16)', 'observed.arr_0to1.shape == (6, 4, 1)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(', 'observed.shape == (6, 16)', 'observed.arr.shape == (6, 4, 1)', 'np.array_equal(', 'kpsoi_aug.shape == (10, 8, 3)', 'len(kpsoi_aug.keypoints) == 2', 'np.allclose(kpsoi_aug.keypoints[0].x, 4+1)', 'np.allclose(kpsoi_aug.keypoints[0].y, 2+2)', 'np.allclose(kpsoi_aug.keypoints[1].x, 4+3)', 'np.allclose(kpsoi_aug.keypoints[1].y, 2+0)', 'kpsoi_aug.shape == (4, 4, 3)', 'len(kpsoi_aug.keypoints) == 2', 'np.allclose(kpsoi_aug.keypoints[0].x, ((4+1)/8)*4)', 'np.allclose(kpsoi_aug.keypoints[0].y, ((2+2)/10)*4)', 'np.allclose(kpsoi_aug.keypoints[1].x, ((4+3)/8)*4)', 'np.allclose(kpsoi_aug.keypoints[1].y, ((2+0)/10)*4)', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (10, 8, 3)', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (4, 4, 3)', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(', 'np.all([v > 30 for v in seen])', 'np.all([v > 30 for v in seen])', '250 - 50 < seen[0] < 250 + 50', 'seen[1] == 0', 'seen[2] == 0', 'seen[3] == 0', '250 - 50 < seen[4] < 250 + 50', '250 - 50 < seen[0] < 250 + 50', 'seen[1] == 0', 'seen[2] == 0', 'seen[3] == 0', '250 - 50 < seen[4] < 250 + 50', 'image_aug.dtype == image.dtype', 'image_aug.shape == (4, 3)', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == 1)', 'image_aug.dtype == np.dtype(dtype)', 'image_aug.shape == (4, 3)', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == value)', 'image_aug.dtype == np.dtype(dtype)', 'image_aug.shape == (4, 3)', 'np.all(_isclose(image_aug[~mask], 0))', 'np.all(_isclose(image_aug[mask], np.float128(value)))', 'np.array_equal(observed, np.array([base_img_cropped]))', 'array_equal_lists(observed, [base_img_cropped])', 'keypoints_equal(observed, keypoints_moved)', 'observed.shape == base_img_cropped.shape', 'np.array_equal(observed.get_arr(), heatmaps_arr_cropped)', 'observed.shape == base_img_cropped.shape', 'np.array_equal(observed.get_arr(), segmaps_arr_cropped)', 'any([val == 1 for val in matches])', 'any([val == 1 for val in matches])', 'any([array_equal_lists(observed, [base_img_cropped])', 'any([keypoints_equal(observed, [kp]) for kp in keypoints_cropped])', 'len(set(movements)) == 3', 'len(set(movements_det)) == 1', 'any([val == 1 for val in matches])', 'any([val == 1 for val in matches])', 'any([array_equal_lists(observed, [base_img_cropped])', 'any([keypoints_equal(observed, [kp]) for kp in keypoints_cropped])', 'len(set(movements)) == 2', 'len(set(movements_det)) == 1', 'observed.shape == (4, 8)', 'observed.arr_0to1.shape == (4, 4, 1)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.arr_0to1[..., 0], heatmaps_arr_small_cropped)', 'observed.shape == (4, 8)', 'observed.arr.shape == (4, 4, 1)', 'np.array_equal(observed.arr[..., 0], segmaps_arr_small_cropped)', 'observed.shape == (6, 16)', 'observed.arr_0to1.shape == (6, 8, 1)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(', 'observed.shape == (6, 16)', 'observed.arr.shape == (6, 8, 1)', 'np.array_equal(', 'kpsoi_aug.shape == (9, 10, 3)', 'len(kpsoi_aug.keypoints) == 2', 'np.allclose(kpsoi_aug.keypoints[0].x, 3-4)', 'np.allclose(kpsoi_aug.keypoints[0].y, 6-1)', 'np.allclose(kpsoi_aug.keypoints[1].x, 8-4)', 'np.allclose(kpsoi_aug.keypoints[1].y, 5-1)', 'kpsoi_aug.shape == (14, 14, 3)', 'len(kpsoi_aug.keypoints) == 2', 'np.allclose(kpsoi_aug.keypoints[0].x, ((3-4)/10)*14)', 'np.allclose(kpsoi_aug.keypoints[0].y, ((6-1)/9)*14)', 'np.allclose(kpsoi_aug.keypoints[1].x, ((8-4)/10)*14)', 'np.allclose(kpsoi_aug.keypoints[1].y, ((5-1)/9)*14)', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (5, 6, 3)', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (10, 10, 3)', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(', 'observed.shape == (40, 40)', 'np.all(observed == image[5:-5, 5:-5])', 'observed.shape == (40, 40)', 'np.all(observed == image[5:-5, 5:-5])', '30 <= observed.shape[0] <= 40', '30 <= observed.shape[1] <= 40', 'in str(exc)', 'got_exception', 'np.array_equal(observed, image_cropped)', 'keypoints_equal(observed, keypoints_moved)', 'observed.shape == (8, 16)', 'observed.arr_0to1.shape == (4, 6, 1)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(observed.arr_0to1[..., 0], heatmaps_arr_small_cropped)', 'observed.shape == (8, 16)', 'observed.arr.shape == (4, 6, 1)', 'np.array_equal(observed.arr[..., 0], segmaps_arr_small_cropped)', 'observed.shape == (16, 32)', 'observed.arr_0to1.shape == (8, 12, 1)', '0 - 1e-6 < observed.min_value < 0 + 1e-6', '1 - 1e-6 < observed.max_value < 1 + 1e-6', 'np.allclose(', 'observed.shape == (16, 32)', 'observed.arr.shape == (8, 12, 1)', 'np.allclose(', 'kpsoi_aug.shape == (4, 18, 3)', 'len(kpsoi_aug.keypoints) == 2', 'np.allclose(kpsoi_aug.keypoints[0].x, 12-2)', 'np.allclose(kpsoi_aug.keypoints[0].y, 10-4)', 'np.allclose(kpsoi_aug.keypoints[1].x, 8-2)', 'np.allclose(kpsoi_aug.keypoints[1].y, 12-4)', 'kpsoi_aug.shape == (16, 20, 3)', 'len(kpsoi_aug.keypoints) == 2', 'np.allclose(kpsoi_aug.keypoints[0].x, ((12-2)/18)*20)', 'np.allclose(kpsoi_aug.keypoints[0].y, ((10-4)/4)*16)', 'np.allclose(kpsoi_aug.keypoints[1].x, ((8-2)/18)*20)', 'np.allclose(kpsoi_aug.keypoints[1].y, ((12-4)/4)*16)', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (3, 9, 3)', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (10, 10, 3)', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(', 'np.all([v > 30 for v in seen])', 'np.all([v > 30 for v in seen])', '250 - 50 < seen[0] < 250 + 50', 'seen[1] == 0', 'seen[2] == 0', 'seen[3] == 0', '250 - 50 < seen[4] < 250 + 50', '250 - 50 < seen[0] < 250 + 50', 'seen[1] == 0', 'seen[2] == 0', 'seen[3] == 0', '250 - 50 < seen[4] < 250 + 50', 'image_aug.dtype == image.dtype', 'image_aug.shape == (2, 3)', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == 1)', 'image_aug.dtype == np.dtype(dtype)', 'image_aug.shape == (2, 3)', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == value)', 'image_aug.dtype == np.dtype(dtype)', 'image_aug.shape == (2, 3)', 'np.all(_isclose(image_aug[~mask], 0))', 'np.all(_isclose(image_aug[mask], np.float128(value)))', 'observed.dtype.type == np.uint8', 'observed.shape == (5, 5)', 'observed.dtype.type == np.uint8', 'observed.shape == (5, 5, 1)', 'observed.dtype.type == np.uint8', 'observed.shape == (5, 5, 3)', 'observed.dtype.type == dtype', 'observed.dtype.type == np.uint8', 'observed.shape == (5, 5, 3)', 'observed.dtype.type == np.uint8', 'observed.shape == (5, 5, 3)', 'observed.dtype.type == np.uint8', 'observed.shape == (5, 5, 3)', 'np.array_equal(observed, img5x5)', 'observed.dtype.type == np.uint8', 'observed.shape == (6, 6, 3)', 'np.array_equal(observed, img6x6)', 'observed.dtype.type == np.uint8', 'observed.shape == (4, 4)', 'np.array_equal(observed, expected)', 'observed.dtype.type == np.uint8', 'observed.shape == (3, 3)', 'np.array_equal(observed, expected)', 'observed.dtype.type == np.uint8', 'observed.shape == (3, 3)', 'np.array_equal(observed, expected)', 'observed.dtype.type == np.uint8', 'observed.shape == (3, 3)', 'np.array_equal(observed, expected)', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed.shape == (3, 3, 3)', 'np.allclose(observed.arr_0to1, expected)', 'observed.shape == (32, 32, 3)', 'np.allclose(observed.arr_0to1, expected)', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.arr, expected)', 'observed.shape == (32, 32, 3)', 'np.array_equal(observed.arr, expected)', 'image_aug.dtype == image.dtype', 'image_aug.shape == (4, 3)', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == 1)', 'image_aug.dtype == np.dtype(dtype)', 'image_aug.shape == (4, 3)', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == value)', 'image_aug.dtype == np.dtype(dtype)', 'image_aug.shape == (4, 3)', 'np.all(_isclose(image_aug[~mask], 0))', 'np.all(_isclose(image_aug[mask], np.float128(value)))', 'observed.dtype.type == np.uint8', 'observed.shape == (1, 1)', 'observed.dtype.type == np.uint8', 'observed.shape == (1, 1, 1)', 'observed.dtype.type == np.uint8', 'observed.shape == (1, 1, 3)', 'observed.dtype.type == dtype', 'observed.dtype.type == np.uint8', 'observed.shape == (3, 5, 3)', 'observed.dtype.type == np.uint8', 'observed.shape == (5, 3, 3)', 'observed.dtype.type == np.uint8', 'observed.shape == (5, 5, 3)', 'np.array_equal(observed, img5x5)', 'observed.dtype.type == np.uint8', 'observed.shape == (4, 4, 3)', 'np.array_equal(observed, img4x4)', 'observed.dtype.type == np.uint8', 'observed.shape == (3, 3)', 'np.array_equal(observed, expected)', 'observed.dtype.type == np.uint8', 'observed.shape == (3, 3)', 'np.array_equal(observed, expected)', 'observed.dtype.type == np.uint8', 'observed.shape == (3, 3)', 'np.array_equal(observed, expected)', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed.shape == (3, 3, 3)', 'np.allclose(observed.arr_0to1, expected)', 'observed.shape == (3, 3, 3)', 'np.allclose(observed.arr_0to1, expected)', 'observed.shape == (3, 3, 3)', 'np.allclose(observed.arr_0to1, expected)', 'observed.shape == (32, 32, 3)', 'np.allclose(observed.arr_0to1, expected)', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.arr, expected)', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.arr, expected)', 'observed.shape == (3, 3, 3)', 'np.array_equal(observed.arr, expected)', 'observed.shape == (32, 32, 3)', 'np.array_equal(observed.arr, expected)', 'image_aug.dtype == image.dtype', 'image_aug.shape == (2, 3)', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == 1)', 'image_aug.dtype == np.dtype(dtype)', 'image_aug.shape == (2, 3)', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == value)', 'image_aug.dtype == np.dtype(dtype)', 'image_aug.shape == (2, 3)', 'np.all(_isclose(image_aug[~mask], 0))', 'np.all(_isclose(image_aug[mask], np.float128(value)))', 'in samples', 'len(set(samples)) == 1', 'in samples_heatmaps', 'len(set(samples_heatmaps)) == 1', 'in samples_segmaps', 'len(set(samples_segmaps)) == 1', 'iaa.KeepSizeByResize.NO_RESIZE in samples', 'len(set(samples)) == 1', 'iaa.KeepSizeByResize.NO_RESIZE in samples_heatmaps', 'len(set(samples_heatmaps)) == 1', 'iaa.KeepSizeByResize.NO_RESIZE in samples_segmaps', 'len(set(samples_segmaps)) == 1', 'cv2.INTER_LINEAR in samples', 'len(set(samples)) == 1', 'cv2.INTER_NEAREST in samples_heatmaps', 'len(set(samples_heatmaps)) == 1', 'cv2.INTER_CUBIC in samples_segmaps', 'len(set(samples_segmaps)) == 1', 'in samples', 'in samples', 'len(set(samples)) == 2', 'in samples_heatmaps', 'in samples_heatmaps', 'len(set(samples_heatmaps)) == 3', '0.5 - 0.1 < np.sum(samples == samples_heatmaps) / samples_heatmaps.size < 0.5 + 0.1', 'in samples_segmaps', 'in samples_segmaps', 'len(set(samples_segmaps)) == 3', '0.5 - 0.1 < np.sum(samples == samples_segmaps) / samples_segmaps.size < 0.5 + 0.1', 'in samples', 'in samples', 'len(set(samples)) == 2', 'in samples_heatmaps', 'in samples_heatmaps', 'len(set(samples_heatmaps)) == 2', 'in samples_segmaps', 'in samples_segmaps', 'len(set(samples_segmaps)) == 2', 'observed.shape == (4, 4, 3)', 'observed.dtype.type == np.uint8', 'np.allclose(observed, expected)', 'observed.shape == (3, 4, 3)', 'observed.dtype.type == np.uint8', 'np.allclose(observed, expected)', 'kpoi_aug.shape == (4, 4, 3)', '0 - 1e-4 < kpoi_aug.keypoints[0].x < 0 + 1e-4', '((1-1)/3)*4 - 1e-4 < kpoi_aug.keypoints[0].y < ((1-1)/3)*4 + 1e-4', '1 - 1e-4 < kpoi_aug.keypoints[1].x < 1 + 1e-4', '((1-1)/3)*4 - 1e-4 < kpoi_aug.keypoints[1].y < ((1-1)/3)*4 + 1e-4', '2 - 1e-4 < kpoi_aug.keypoints[2].x < 2 + 1e-4', '((3-1)/3)*4 - 1e-4 < kpoi_aug.keypoints[2].y < ((3-1)/3)*4 + 1e-4', 'kpoi_aug.shape == (3, 4, 3)', '0 - 1e-4 < kpoi_aug.keypoints[0].x < 0 + 1e-4', '0 - 1e-4 < kpoi_aug.keypoints[0].y < 0 + 1e-4', '1 - 1e-4 < kpoi_aug.keypoints[1].x < 1 + 1e-4', '0 - 1e-4 < kpoi_aug.keypoints[1].y < 0 + 1e-4', '2 - 1e-4 < kpoi_aug.keypoints[2].x < 2 + 1e-4', '2 - 1e-4 < kpoi_aug.keypoints[2].y < 2 + 1e-4', 'heatmaps_oi_aug.arr_0to1.shape == (4, 4, 1)', 'np.allclose(heatmaps_oi_aug.arr_0to1, heatmaps_oi_nearest.arr_0to1)', 'heatmaps_oi_aug.arr_0to1.shape == (4, 4, 1)', 'np.allclose(heatmaps_oi_aug.arr_0to1, heatmaps_oi_nearest.arr_0to1) \\', 'heatmaps_oi_aug.arr_0to1.shape == (3, 4, 1)', 'np.allclose(heatmaps_oi_aug.arr_0to1, heatmaps_oi.arr_0to1[1:, :, :])', 'heatmaps_oi_aug.arr_0to1.shape == (4, 4, 1)', 'np.allclose(heatmaps_oi_aug.arr_0to1, heatmaps_oi_cubic.arr_0to1)', 'segmaps_oi_aug.arr.shape == (4, 4, 1)', 'np.array_equal(segmaps_oi_aug.arr, segmaps_oi_nearest.arr)', 'segmaps_oi_aug.arr.shape == (4, 4, 1)', 'np.array_equal(segmaps_oi_aug.arr, segmaps_oi_nearest.arr)', 'segmaps_oi_aug.arr.shape == (3, 4, 1)', 'np.array_equal(segmaps_oi_aug.arr, segmaps_oi.arr[1:, :, :])']",[],[],[],[],[],[],[],[],[],[],[],[]
1836,aleju,kontakt@ajung.name,2019-08-30 22:20:45+02:00,bdf2142281710cba0154bc5d63b3e8c55486509d,https://github.com/aleju/imgaug/commit/bdf2142281710cba0154bc5d63b3e8c55486509d,Migrate tests for .augmentables.polys to unittest,1,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],41,4,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,416,0,0,0,0,0,0,0,0,0,0,0,0,426,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestPolygon___init__(unittest.TestCase):', 'class TestPolygon_xx(unittest.TestCase):', 'class TestPolygon_yy(unittest.TestCase):', 'class TestPolygon_xx_int(unittest.TestCase):', 'class TestPolygon_yy_int(unittest.TestCase):', 'class TestPolygon_is_valid(unittest.TestCase):', 'class TestPolygon_area(unittest.TestCase):', 'class TestPolygon_height(unittest.TestCase):', 'class TestPolygon_width(unittest.TestCase):', 'class TestPolygon_project(unittest.TestCase):', 'class TestPolygon_find_closest_point_idx(unittest.TestCase):', 'class TestPolygon_is_fully_within_image(unittest.TestCase):', 'class TestPolygon_is_partly_within_image(unittest.TestCase):', 'class TestPolygon_is_out_of_image(unittest.TestCase):', 'class TestPolygon_cut_out_of_image(unittest.TestCase):', 'class TestPolygon_clip_out_of_image(unittest.TestCase):', 'class TestPolygon_shift(unittest.TestCase):', 'class TestPolygon_draw_on_image(unittest.TestCase):', 'class TestPolygon_extract_from_image(unittest.TestCase):', 'class TestPolygon_change_first_point_by_coords(unittest.TestCase):', 'class TestPolygon_change_first_point_by_index(unittest.TestCase):', 'class TestPolygon_to_shapely_line_string(unittest.TestCase):', 'class TestPolygon_to_shapely_polygon(unittest.TestCase):', 'class TestPolygon_to_bounding_box(unittest.TestCase):', 'class TestPolygon_to_line_string(unittest.TestCase):', 'class TestPolygon_from_shapely(unittest.TestCase):', 'class TestPolygon_copy(unittest.TestCase):', 'class TestPolygon_deepcopy(unittest.TestCase):', 'class TestPolygon___repr___and___str__(unittest.TestCase):', 'class TestPolygon_exterior_almost_equals(unittest.TestCase):', 'class TestPolygon_almost_equals(unittest.TestCase):', 'class TestPolygonsOnImage___init__(unittest.TestCase):', 'class TestPolygonsOnImage_empty(unittest.TestCase):', 'class TestPolygonsOnImage_on(unittest.TestCase):', 'class TestPolygonsOnImage_draw_on_image(unittest.TestCase):', 'class TestPolygonsOnImage_remove_out_of_image(unittest.TestCase):', 'class TestPolygonsOnImage_clip_out_of_image(unittest.TestCase):', 'class TestPolygonsOnImage_shift(unittest.TestCase):', 'class TestPolygonsOnImage_copy(unittest.TestCase):', 'class TestPolygonsOnImage_deepcopy(unittest.TestCase):', 'class TestPolygonsOnImage___repr___and___str__(unittest.TestCase):']","[('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(Exception):'), ('Raises', '(Exception):')]",[],[],[],[],[],[],[],[],[],['class TestPolygonsOnImage(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],"['poly.exterior.dtype.name == ', 'np.allclose(', 'poly.exterior.dtype.name == ', 'np.allclose(', 'poly.exterior.dtype.name == ', 'np.allclose(', 'poly.exterior.dtype.name == ', 'np.allclose(', 'poly.exterior.dtype.name == ', 'np.allclose(', 'poly.exterior.dtype.name == ', 'poly.exterior.shape == (0, 2)', 'poly.exterior.dtype.name == ', 'poly.exterior.shape == (0, 2)', 'poly.label is None', 'poly.label == ', 'poly.xx.dtype.name == ', 'np.allclose(poly.xx, np.float32([0.0, 1.0, 1.5, 4.1, 2.9]))', 'poly.xx.dtype.name == ', 'poly.xx.shape == (0,)', 'poly.yy.dtype.name == ', 'np.allclose(poly.yy, np.float32([0.0, 1.0, 1.5, 4.1, 2.9]))', 'poly.yy.dtype.name == ', 'poly.yy.shape == (0,)', 'poly.xx_int.dtype.name == ', 'np.allclose(poly.xx_int, np.int32([0, 1, 2, 4, 3]))', 'poly.xx_int.dtype.name == ', 'poly.xx_int.shape == (0,)', 'poly.yy_int.dtype.name == ', 'np.allclose(poly.yy_int, np.int32([0, 1, 2, 4, 3]))', 'poly.yy_int.dtype.name == ', 'poly.yy_int.shape == (0,)', 'poly.is_valid', 'not poly.is_valid', 'not poly.is_valid', 'not poly.is_valid', 'not poly.is_valid', 'poly.is_valid', '1.0 - 1e-8 < poly.area < 1.0 + 1e-8', '2.0 - 1e-8 < poly.area < 2.0 + 1e-8', '1/2 - 1e-8 < poly.area < 1/2 + 1e-8', 'in str(exc)', 'got_exception', 'np.allclose(poly.height, 1.0, atol=1e-8, rtol=0)', 'np.allclose(poly.height, 2.0, atol=1e-8, rtol=0)', 'np.allclose(poly.height, 1.0, atol=1e-8, rtol=0)', 'np.allclose(poly.height, 1.0, atol=1e-8, rtol=0)', 'np.allclose(poly.height, 0.0, atol=1e-8, rtol=0)', 'np.allclose(poly.width, 1.0, atol=1e-8, rtol=0)', 'np.allclose(poly.width, 2.0, atol=1e-8, rtol=0)', 'np.allclose(poly.width, 1.0, atol=1e-8, rtol=0)', 'np.allclose(poly.width, 1.0, atol=1e-8, rtol=0)', 'np.allclose(poly.width, 0.0, atol=1e-8, rtol=0)', 'poly_proj.exterior.dtype.name == ', 'poly_proj.exterior.shape == (4, 2)', 'np.allclose(', 'poly_proj.exterior.dtype.name == ', 'poly_proj.exterior.shape == (4, 2)', 'np.allclose(', 'poly_proj.exterior.dtype.name == ', 'poly_proj.exterior.shape == (4, 2)', 'np.allclose(', 'poly_proj.exterior.dtype.name == ', 'poly_proj.exterior.shape == (0, 2)', 'closest_idx == expected_index', 'closest_idx == expected_index', 'np.allclose(distance, expected_dist)', 'poly.is_fully_within_image((1, 1, 3))', 'poly.is_fully_within_image((1, 1))', 'poly.is_fully_within_image(', 'not poly.is_fully_within_image((1, 1, 3))', 'not poly.is_fully_within_image((1, 1))', 'not poly.is_fully_within_image(', 'not poly.is_fully_within_image((1, 1, 3))', 'poly.is_partly_within_image((1, 1, 3))', 'poly.is_partly_within_image((1, 1))', 'poly.is_partly_within_image(', 'poly.is_partly_within_image((1, 1, 3))', 'poly.is_partly_within_image((1, 1))', 'poly.is_partly_within_image(np.zeros((1, 1, 3), dtype=np.uint8))', 'not poly.is_partly_within_image((1, 1, 3))', 'not poly.is_partly_within_image((1, 1))', 'not poly.is_partly_within_image(', 'not is_ooi(shape, partly=False, fully=False)', 'not is_ooi(shape, partly=True, fully=False)', 'not is_ooi(shape, partly=False, fully=True)', 'not is_ooi(shape, partly=True, fully=True)', 'not poly.is_out_of_image(shape, partly=False, fully=False)', 'poly.is_out_of_image(shape, partly=True, fully=False)', 'not poly.is_out_of_image(shape, partly=False, fully=True)', 'poly.is_out_of_image(shape, partly=True, fully=True)', 'not poly.is_out_of_image(shape, partly=False, fully=False)', 'not poly.is_out_of_image(shape, partly=True, fully=False)', 'poly.is_out_of_image(shape, partly=False, fully=True)', 'poly.is_out_of_image(shape, partly=True, fully=True)', 'not poly.is_out_of_image((100, 100, 3), fully=True, partly=True)', 'not poly.is_out_of_image((10, 10, 3), fully=True, partly=False)', 'poly.is_out_of_image((10, 10, 3), fully=False, partly=True)', 'not poly.is_out_of_image((100, 100, 3), fully=True, partly=False)', 'poly.is_out_of_image((100, 100, 3), fully=False, partly=True)', 'not poly.is_out_of_image((1, 1, 3), fully=True, partly=False)', 'poly.is_out_of_image((1, 1, 3), fully=False, partly=True)', 'poly.is_out_of_image((1, 1, 3), fully=True, partly=True)', 'not poly.is_out_of_image((100, 100, 3), fully=True, partly=False)', 'not poly.is_out_of_image((100, 100, 3), fully=False, partly=True)', 'not poly.is_out_of_image((3, 3, 3), fully=True, partly=False)', 'poly.is_out_of_image((3, 3, 3), fully=False, partly=True)', 'poly.is_out_of_image((1, 1, 3), fully=True, partly=False)', 'not poly.is_out_of_image((1, 1, 3), fully=False, partly=True)', 'not poly.is_out_of_image((100, 100, 3), fully=True, partly=False)', 'not poly.is_out_of_image((100, 100, 3), fully=False, partly=True)', 'poly.is_out_of_image((1, 1, 3), fully=True, partly=False)', 'not poly.is_out_of_image((1, 1, 3), fully=False, partly=True)', '(', 'got_exception', 'in str(caught_warnings[0].message)', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 1', 'multipoly_clipped[0].exterior_almost_equals(poly.exterior)', 'multipoly_clipped[0].label is None', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 1', 'multipoly_clipped[0].exterior_almost_equals(np.float32([', 'multipoly_clipped[0].label == ', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 0', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 1', 'multipoly_clipped[0].exterior_almost_equals(np.float32([', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 0', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 1', 'multipoly_clipped[0].exterior_almost_equals(np.float32([', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 2', 'multipoly_clipped[0].exterior_almost_equals(np.float32([', 'multipoly_clipped[0].label == ', 'multipoly_clipped[1].exterior_almost_equals(np.float32([', 'multipoly_clipped[0].label == ', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 0', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 1', 'multipoly_clipped[0].exterior_almost_equals(np.float32([', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 1', 'multipoly_clipped[0].exterior_almost_equals(np.float32([', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 1', 'multipoly_clipped[0].exterior_almost_equals(np.float32([', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 1', 'multipoly_clipped[0].exterior_almost_equals(np.float32([', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 1', 'multipoly_clipped[0].exterior_almost_equals(np.float32([', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 0', 'np.allclose(poly.exterior, np.float32([', 'np.allclose(poly_shifted.exterior, np.float32([', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))', 'np.all(image_poly[2:9, 2:3, c_idx]', 'np.all(image_poly[2:9, 8:9, c_idx]', 'np.all(image_poly[2:3, 2:9, c_idx]', 'np.all(image_poly[8:9, 2:9, c_idx]', 'np.all(image_poly[3:8, 3:8, :] == expected)', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))', 'np.all(image_poly[2:9, 2:3, c_idx]', 'np.all(image_poly[2:9, 8:9, c_idx]', 'np.all(image_poly[2:3, 2:9, c_idx]', 'np.all(image_poly[8:9, 2:9, c_idx]', 'np.all(image_poly[3:8, 3:8, :] == expected)', 'image_poly.dtype.type == np.float32', 'image_poly.shape == (10, 10, 3)', 'np.allclose(image_poly[2:9, 2:3, c_idx],', 'np.allclose(image_poly[2:9, 8:9, c_idx],', 'np.allclose(image_poly[2:3, 2:9, c_idx],', 'np.allclose(image_poly[8:9, 2:9, c_idx],', 'np.allclose(image_poly[3:8, 3:8, :], expected)', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))', 'np.all(image_poly[2+5:, 2:3, c_idx]', 'np.all(image_poly[2+5:, 8:9, c_idx]', 'np.all(image_poly[2+5:3+5, 2:9, c_idx]', 'np.all(image_poly[3+5:, 3:8, :] == expected)', 'in str(exc)', 'not got_exception', 'np.array_equal(image_poly, image)', 'in str(exc)', 'got_exception', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))', 'np.all(image_poly[2:9, 2:3, c_idx]', 'np.all(image_poly[3:8, 3:8, :] == image[3:8, 3:8, :])', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))', 'np.all(image_poly[2:8, 2:8, :] == expected)', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.all(image_poly[2:9, 8:9, c_idx] == expected)', 'np.all(image_poly[3:8, 3:8, :]', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.all(image_poly[2:9, 8:9, c_idx] == expected)', 'np.all(image_poly[3:8, 3:8, :]', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.all(image_cp == image_poly)', 'not np.all(image_cp == image)', 'np.all(image_poly[2:9, 2:3, c_idx]', 'np.all(image_cp[2:9, 2:3, c_idx]', 'np.all(image_poly[3:8, 3:8, :] == expected)', 'np.all(image_cp[3:8, 3:8, :] == expected)', 'np.array_equal(subimage, self.image[0:10, 0:10, :])', 'np.array_equal(subimage, self.image[1:9, 1:9, :])', 'np.array_equal(subimage, expected)', 'np.array_equal(subimage, expected)', 'np.array_equal(subimage, expected)', 'np.array_equal(subimage, self.image[0:10, 0:10, :])', 'np.array_equal(subimage, self.image[0:9, 0:9, :])', 'np.array_equal(subimage, self.image[1:9, 1:9, :])', 'in str(exc)', 'got_exception', 'np.allclose(poly.exterior, poly_reordered.exterior)', 'np.allclose(poly.exterior, np.float32([[0, 0], [1, 0], [1, 1]]))', 'np.allclose(poly_reordered.exterior,', 'np.allclose(poly_reordered.exterior,', 'np.allclose(poly_reordered.exterior,', 'np.allclose(poly_reordered.exterior,', 'in str(exc)', 'got_exception', 'np.allclose(poly_reordered.exterior,', 'np.allclose(poly_reordered.exterior, np.float32([[0, 0]]))', 'in str(exc)', 'got_exception', 'np.allclose(poly.exterior, poly_reordered.exterior)', 'np.allclose(poly.exterior,', 'np.allclose(poly_reordered.exterior,', 'np.allclose(poly_reordered.exterior,', 'np.allclose(poly_reordered.exterior,', 'np.allclose(poly_reordered.exterior, np.float32([[0, 0]]))', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'np.allclose(ls.coords, np.float32([[0, 0], [1, 0], [1, 1]]))', 'np.allclose(ls.coords, np.float32([[0, 0], [1, 0]]))', '(', 'got_exception', '(', 'got_exception', 'np.allclose(ls.coords,', 'np.allclose(', 'np.allclose(ls.coords, np.float32([', 'np.allclose(', 'np.isclose(x_obs, x_exp, rtol=0, atol=1e-8)', 'np.isclose(y_obs, y_exp, rtol=0, atol=1e-8)', '0 - 1e-8 < bb.x1 < 0 + 1e-8', '0 - 1e-8 < bb.y1 < 0 + 1e-8', '1 - 1e-8 < bb.x2 < 1 + 1e-8', '1 - 1e-8 < bb.y2 < 1 + 1e-8', '0 - 1e-8 < bb.x1 < 0 + 1e-8', '0 - 1e-8 < bb.y1 < 0 + 1e-8', '1 - 1e-8 < bb.x2 < 1 + 1e-8', '1 - 1e-8 < bb.y2 < 1 + 1e-8', '0.5 - 1e-8 < bb.x1 < 0.5 + 1e-8', '0.1 - 1e-8 < bb.y1 < 0.1 + 1e-8', '2.0 - 1e-8 < bb.x2 < 2.0 + 1e-8', '1.0 - 1e-8 < bb.y2 < 1.0 + 1e-8', 'len(ls.coords) == 0', 'ls.label is None', 'len(ls.coords) == 0', 'ls.label is None', 'len(ls.coords) == 0', 'ls.label == ', 'len(ls.coords) == 1', 'ls.label is None', 'len(ls.coords) == 1', 'ls.coords_almost_equals([(0, 0)])', 'ls.label is None', 'len(ls.coords) == 2', 'ls.coords_almost_equals([(0, 0), (1, 1)])', 'ls.label is None', 'len(ls.coords) == 3', 'ls.coords_almost_equals([(0, 0), (1, 1), (0, 0)])', 'ls.label is None', 'len(ls.coords) == 3', 'ls.coords_almost_equals([(0, 0), (1, 1), (0, 0)])', 'ls.label == ', 'len(ls.coords) == 3', 'ls.coords_almost_equals([(0, 0), (1, 1), (0, 0)])', 'ls.label == ', 'x_exp - 1e-8 < x_obs < x_exp + 1e-8', 'y_exp - 1e-8 < y_obs < y_exp + 1e-8', 'len(poly.exterior) == 0', 'poly.exterior.dtype.type == poly_cp.exterior.dtype.type', 'poly.exterior.shape == poly_cp.exterior.shape', 'np.allclose(poly.exterior, poly_cp.exterior)', 'poly.label == poly_cp.label', 'poly.exterior.dtype.type == poly_cp.exterior.dtype.type', 'poly.exterior.shape == poly_cp.exterior.shape', 'np.allclose(poly.exterior, poly_cp.exterior)', 'poly.label == poly_cp.label', 'poly.exterior.dtype.type == poly_cp.exterior.dtype.type', 'poly.exterior.shape == poly_cp.exterior.shape', 'not np.allclose(poly.exterior, poly_cp.exterior)', 'not poly.label == poly_cp.label', 'poly.__repr__() == expected', 'poly.__str__() == expected', 'poly.__repr__() == expected', 'poly.__str__() == expected', 'poly.__repr__() == expected', 'poly.__str__() == expected', 'poly.__repr__() == expected', 'poly.__str__() == expected', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-3)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-9)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-9)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-9)', 'poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals()', 'self._any_point_close(poly_oi_clip.polygons[0].exterior,', 'self._any_point_close(poly_oi_clip.polygons[0].exterior,', 'self._any_point_close(poly_oi_clip.polygons[0].exterior,', 'self._any_point_close(poly_oi_clip.polygons[1].exterior,', 'poly_oi.shape == (10, 11, 3)', 'poly_oi_copy.shape == (20, 30, 3)', 'poly_oi.shape == (10, 11, 3)', 'poly_oi_copy.shape == (20, 30, 3)', 'poly_oi.__repr__() == expected', 'poly_oi.__str__() == expected', 'poly_oi.__repr__() == expected', 'poly_oi.__str__() == expected', 'np.allclose(p_obs, p_exp, atol=atol, rtol=rtol), (', 'poly_concave.is_valid', 'np.all(found)', 'np.allclose(points_deduplicated, expected_i)', '_norm([1, 0], points_jittered[2]) >= 1e-4', '_norm([1, 0], points_jittered[3]) >= 1e-4', '_norm([1, 0], points_jittered[4]) >= 1e-4', '_norm([1, 0], points_jittered[2]) >= 1e-4', '_norm([1, 0], points_jittered[4]) >= 1e-4', '_norm([1, 0], points_jittered[6]) >= 1e-4', '_norm([1, 0], points_jittered[7]) >= 1e-4', '_norm([1, 0], points_jittered[8]) >= 1e-4', '_norm([0, 0], points_jittered[2]) >= 1e-4', '_norm([1, 0], points_jittered[3]) >= 1e-4', '_norm([1, 0], points_jittered[5]) >= 1e-4', '_norm([1, 0], points_jittered[7]) >= 1e-4', '_norm([1, 0], points_jittered[8]) >= 1e-4', '_norm([1, 0], points_jittered[9]) >= 1e-4', 'len(observed) == len(expected), (', 'max_count == len(expected), (']",[],[],[],[],[],[],[],[],[],[],[],[],"['poly.exterior.dtype.type == np.float32', 'np.allclose(', 'poly.exterior.dtype.type == np.float32', 'np.allclose(', 'poly.exterior.dtype.type == np.float32', 'np.allclose(', 'poly.exterior.dtype.type == np.float32', 'np.allclose(', 'poly.exterior.dtype.type == np.float32', 'np.allclose(', 'poly.exterior.dtype.type == np.float32', 'poly.exterior.shape == (0, 2)', 'poly.exterior.dtype.type == np.float32', 'poly.exterior.shape == (0, 2)', 'got_exception', 'poly.label is None', 'poly.label == ', 'poly.xx.dtype.type == np.float32', 'np.allclose(poly.xx, np.float32([0.0, 1.0, 1.5, 4.1, 2.9]))', 'poly.xx.dtype.type == np.float32', 'poly.xx.shape == (0,)', 'poly.yy.dtype.type == np.float32', 'np.allclose(poly.yy, np.float32([0.0, 1.0, 1.5, 4.1, 2.9]))', 'poly.yy.dtype.type == np.float32', 'poly.yy.shape == (0,)', 'poly.xx_int.dtype.type == np.int32', 'np.allclose(poly.xx_int, np.int32([0, 1, 2, 4, 3]))', 'poly.xx_int.dtype.type == np.int32', 'poly.xx_int.shape == (0,)', 'poly.yy_int.dtype.type == np.int32', 'np.allclose(poly.yy_int, np.int32([0, 1, 2, 4, 3]))', 'poly.yy_int.dtype.type == np.int32', 'poly.yy_int.shape == (0,)', 'poly.is_valid', 'not poly.is_valid', 'not poly.is_valid', 'not poly.is_valid', 'not poly.is_valid', 'poly.is_valid', '1.0 - 1e-8 < poly.area < 1.0 + 1e-8', '2.0 - 1e-8 < poly.area < 2.0 + 1e-8', '1/2 - 1e-8 < poly.area < 1/2 + 1e-8', 'in str(exc)', 'got_exception', 'np.allclose(poly.height, 1.0, atol=1e-8, rtol=0)', 'np.allclose(poly.height, 2.0, atol=1e-8, rtol=0)', 'np.allclose(poly.height, 1.0, atol=1e-8, rtol=0)', 'np.allclose(poly.height, 1.0, atol=1e-8, rtol=0)', 'np.allclose(poly.height, 0.0, atol=1e-8, rtol=0)', 'np.allclose(poly.width, 1.0, atol=1e-8, rtol=0)', 'np.allclose(poly.width, 2.0, atol=1e-8, rtol=0)', 'np.allclose(poly.width, 1.0, atol=1e-8, rtol=0)', 'np.allclose(poly.width, 1.0, atol=1e-8, rtol=0)', 'np.allclose(poly.width, 0.0, atol=1e-8, rtol=0)', 'poly_proj.exterior.dtype.type == np.float32', 'poly_proj.exterior.shape == (4, 2)', 'np.allclose(', 'poly_proj.exterior.dtype.type == np.float32', 'poly_proj.exterior.shape == (4, 2)', 'np.allclose(', 'poly_proj.exterior.dtype.type == np.float32', 'poly_proj.exterior.shape == (4, 2)', 'np.allclose(', 'poly_proj.exterior.dtype.type == np.float32', 'poly_proj.exterior.shape == (0, 2)', 'closest_idx == 0', 'closest_idx == 1', 'closest_idx == 1', 'closest_idx == 0', 'closest_idx == 0', 'np.allclose(distance, 0.0)', 'closest_idx == 0', 'np.allclose(distance, np.sqrt((0.1**2) + (0.15**2)))', 'closest_idx == 1', 'np.allclose(distance, np.sqrt(((1.0-0.9)**2) + (0.15**2)))', 'poly.is_fully_within_image((1, 1, 3))', 'poly.is_fully_within_image((1, 1))', 'poly.is_fully_within_image(np.zeros((1, 1, 3), dtype=np.uint8))', 'not poly.is_fully_within_image((1, 1, 3))', 'not poly.is_fully_within_image((1, 1))', 'not poly.is_fully_within_image(np.zeros((1, 1, 3), dtype=np.uint8))', 'not poly.is_fully_within_image((1, 1, 3))', 'poly.is_partly_within_image((1, 1, 3))', 'poly.is_partly_within_image((1, 1))', 'poly.is_partly_within_image(np.zeros((1, 1, 3), dtype=np.uint8))', 'poly.is_partly_within_image((1, 1, 3))', 'poly.is_partly_within_image((1, 1))', 'poly.is_partly_within_image(np.zeros((1, 1, 3), dtype=np.uint8))', 'not poly.is_partly_within_image((1, 1, 3))', 'not poly.is_partly_within_image((1, 1))', 'not poly.is_partly_within_image(np.zeros((1, 1, 3), dtype=np.uint8))', 'not poly.is_out_of_image(shape, partly=False, fully=False)', 'not poly.is_out_of_image(shape, partly=True, fully=False)', 'not poly.is_out_of_image(shape, partly=False, fully=True)', 'not poly.is_out_of_image(shape, partly=True, fully=True)', 'not poly.is_out_of_image(shape, partly=False, fully=False)', 'poly.is_out_of_image(shape, partly=True, fully=False)', 'not poly.is_out_of_image(shape, partly=False, fully=True)', 'poly.is_out_of_image(shape, partly=True, fully=True)', 'not poly.is_out_of_image(shape, partly=False, fully=False)', 'not poly.is_out_of_image(shape, partly=True, fully=False)', 'poly.is_out_of_image(shape, partly=False, fully=True)', 'poly.is_out_of_image(shape, partly=True, fully=True)', 'not poly.is_out_of_image((100, 100, 3), fully=True, partly=True)', 'not poly.is_out_of_image((10, 10, 3), fully=True, partly=False)', 'poly.is_out_of_image((10, 10, 3), fully=False, partly=True)', 'not poly.is_out_of_image((100, 100, 3), fully=True, partly=False)', 'poly.is_out_of_image((100, 100, 3), fully=False, partly=True)', 'not poly.is_out_of_image((1, 1, 3), fully=True, partly=False)', 'poly.is_out_of_image((1, 1, 3), fully=False, partly=True)', 'poly.is_out_of_image((1, 1, 3), fully=True, partly=True)', 'not poly.is_out_of_image((100, 100, 3), fully=True, partly=False)', 'not poly.is_out_of_image((100, 100, 3), fully=False, partly=True)', 'not poly.is_out_of_image((3, 3, 3), fully=True, partly=False)', 'poly.is_out_of_image((3, 3, 3), fully=False, partly=True)', 'poly.is_out_of_image((1, 1, 3), fully=True, partly=False)', 'not poly.is_out_of_image((1, 1, 3), fully=False, partly=True)', 'not poly.is_out_of_image((100, 100, 3), fully=True, partly=False)', 'not poly.is_out_of_image((100, 100, 3), fully=False, partly=True)', 'poly.is_out_of_image((1, 1, 3), fully=True, partly=False)', 'not poly.is_out_of_image((1, 1, 3), fully=False, partly=True)', 'in str(exc)', 'got_exception', 'np.all([', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 1', 'multipoly_clipped[0].exterior_almost_equals(poly.exterior)', 'multipoly_clipped[0].label is None', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 1', 'multipoly_clipped[0].exterior_almost_equals(np.float32([', 'multipoly_clipped[0].label == ', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 0', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 1', 'multipoly_clipped[0].exterior_almost_equals(np.float32([', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 0', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 1', 'multipoly_clipped[0].exterior_almost_equals(np.float32([', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 2', 'multipoly_clipped[0].exterior_almost_equals(np.float32([', 'multipoly_clipped[0].label == ', 'multipoly_clipped[1].exterior_almost_equals(np.float32([', 'multipoly_clipped[0].label == ', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 0', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 1', 'multipoly_clipped[0].exterior_almost_equals(np.float32([', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 1', 'multipoly_clipped[0].exterior_almost_equals(np.float32([', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 1', 'multipoly_clipped[0].exterior_almost_equals(np.float32([', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 1', 'multipoly_clipped[0].exterior_almost_equals(np.float32([', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 1', 'multipoly_clipped[0].exterior_almost_equals(np.float32([', 'isinstance(multipoly_clipped, list)', 'len(multipoly_clipped) == 0', 'np.allclose(poly.exterior, np.float32([', 'np.allclose(poly_shifted.exterior, np.float32([', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))  # draw did not change original image (copy=True)', 'np.all(image_poly[2:9, 2:3, c_idx] == np.zeros((7, 1), dtype=np.uint8) + value)  # left boundary', 'np.all(image_poly[2:9, 8:9, c_idx] == np.zeros((7, 1), dtype=np.uint8) + value)  # right boundary', 'np.all(image_poly[2:3, 2:9, c_idx] == np.zeros((1, 7), dtype=np.uint8) + value)  # top boundary', 'np.all(image_poly[8:9, 2:9, c_idx] == np.zeros((1, 7), dtype=np.uint8) + value)  # bottom boundary', 'np.all(image_poly[3:8, 3:8, :] == expected)', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))  # draw did not change original image (copy=True)', 'np.all(image_poly[2:9, 2:3, c_idx] == np.zeros((7, 1), dtype=np.uint8) + value)  # left boundary', 'np.all(image_poly[2:9, 8:9, c_idx] == np.zeros((7, 1), dtype=np.uint8) + value)  # right boundary', 'np.all(image_poly[2:3, 2:9, c_idx] == np.zeros((1, 7), dtype=np.uint8) + value)  # top boundary', 'np.all(image_poly[8:9, 2:9, c_idx] == np.zeros((1, 7), dtype=np.uint8) + value)  # bottom boundary', 'np.all(image_poly[3:8, 3:8, :] == expected)', 'image_poly.dtype.type == np.float32', 'image_poly.shape == (10, 10, 3)', 'np.allclose(image_poly[2:9, 2:3, c_idx], np.zeros((7, 1), dtype=np.float32) + value)  # left boundary', 'np.allclose(image_poly[2:9, 8:9, c_idx], np.zeros((7, 1), dtype=np.float32) + value)  # right boundary', 'np.allclose(image_poly[2:3, 2:9, c_idx], np.zeros((1, 7), dtype=np.float32) + value)  # top boundary', 'np.allclose(image_poly[8:9, 2:9, c_idx], np.zeros((1, 7), dtype=np.float32) + value)  # bottom boundary', 'np.allclose(image_poly[3:8, 3:8, :], expected)', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))  # draw did not change original image (copy=True)', 'np.all(image_poly[2+5:, 2:3, c_idx] == np.zeros((3, 1), dtype=np.uint8) + value)  # left boundary', 'np.all(image_poly[2+5:, 8:9, c_idx] == np.zeros((3, 1), dtype=np.uint8) + value)  # right boundary', 'np.all(image_poly[2+5:3+5, 2:9, c_idx] == np.zeros((1, 7), dtype=np.uint8) + value)  # top boundary', 'np.all(image_poly[3+5:, 3:8, :] == expected)', 'in str(exc)', 'not got_exception  # only polygons fully outside of the image plane lead to exceptions', 'np.array_equal(image_poly, image)', 'in str(exc)', 'got_exception', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))  # draw did not change original image (copy=True)', 'np.all(image_poly[2:9, 2:3, c_idx] == np.zeros((7, 1), dtype=np.uint8) + value)  # left boundary', 'np.all(image_poly[3:8, 3:8, :] == image[3:8, 3:8, :])', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.sum(image) == 3 * np.sum(np.arange(100))  # draw did not change original image (copy=True)', 'np.all(image_poly[2:8, 2:8, :] == expected)', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.all(image_poly[2:9, 8:9, c_idx] == expected)  # right boundary', 'np.all(image_poly[3:8, 3:8, :] == np.round(expected).astype(np.uint8))', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.all(image_poly[2:9, 8:9, c_idx] == expected)  # right boundary', 'np.all(image_poly[3:8, 3:8, :] == np.round(expected).astype(np.uint8))', 'image_poly.dtype.type == np.uint8', 'image_poly.shape == (10, 10, 3)', 'np.all(image_cp == image_poly)', 'not np.all(image_cp == image)', 'np.all(image_poly[2:9, 2:3, c_idx] == np.zeros((6, 1, 3), dtype=np.uint8) + value)  # left boundary', 'np.all(image_cp[2:9, 2:3, c_idx] == np.zeros((6, 1, 3), dtype=np.uint8) + value)  # left boundary', 'np.all(image_poly[3:8, 3:8, :] == expected)', 'np.all(image_cp[3:8, 3:8, :] == expected)', 'np.array_equal(subimage, image[0:10, 0:10, :])', 'np.array_equal(subimage, image[1:9, 1:9, :])', 'np.array_equal(subimage, expected)', 'np.array_equal(subimage, expected)', 'np.array_equal(subimage, expected)', 'np.array_equal(subimage, image[0:10, 0:10, :])', 'np.array_equal(subimage, image[0:9, 0:9, :])', 'np.array_equal(subimage, image[1:9, 1:9, :])', 'in str(exc)', 'got_exception', 'np.allclose(poly.exterior, poly_reordered.exterior)', 'np.allclose(poly.exterior, np.float32([[0, 0], [1, 0], [1, 1]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [1, 1], [0, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 1], [0, 0], [1, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [1, 1], [0, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [1, 1], [0, 0]]))', 'in str(exc)', 'got_exception', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [0, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[0, 0]]))', 'in str(exc)', 'got_exception', 'np.allclose(poly.exterior, poly_reordered.exterior)', 'np.allclose(poly.exterior, np.float32([[0, 0], [1, 0], [1, 1]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [1, 1], [0, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 1], [0, 0], [1, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[1, 0], [0, 0]]))', 'np.allclose(poly_reordered.exterior, np.float32([[0, 0]]))', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'np.allclose(ls.coords, np.float32([[0, 0], [1, 0], [1, 1]]))', 'np.allclose(ls.coords, np.float32([[0, 0], [1, 0]]))', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'np.allclose(ls.coords, np.float32([[0, 0], [1, 0], [1, 1], [0, 0]]))', 'np.allclose(ls.coords, np.float32([[0, 0], [0.5, 0], [1, 0], [1, 0.5], [1, 1], [0.5, 0.5]]))', 'np.allclose(ls.coords, np.float32([', 'np.allclose(ls.coords, np.float32([[0, 0], [0.5, 0], [1, 0], [1, 0.5], [1, 1], [0.5, 0.5], [0, 0]]))', 'x_exp - 1e-8 < x_obs < x_exp + 1e-8', 'y_exp - 1e-8 < y_obs < y_exp + 1e-8', '0 - 1e-8 < bb.x1 < 0 + 1e-8', '0 - 1e-8 < bb.y1 < 0 + 1e-8', '1 - 1e-8 < bb.x2 < 1 + 1e-8', '1 - 1e-8 < bb.y2 < 1 + 1e-8', '0 - 1e-8 < bb.x1 < 0 + 1e-8', '0 - 1e-8 < bb.y1 < 0 + 1e-8', '1 - 1e-8 < bb.x2 < 1 + 1e-8', '1 - 1e-8 < bb.y2 < 1 + 1e-8', '0.5 - 1e-8 < bb.x1 < 0.5 + 1e-8', '0.1 - 1e-8 < bb.y1 < 0.1 + 1e-8', '2.0 - 1e-8 < bb.x2 < 2.0 + 1e-8', '1.0 - 1e-8 < bb.y2 < 1.0 + 1e-8', 'len(ls.coords) == 0', 'ls.label is None', 'len(ls.coords) == 0', 'ls.label is None', 'len(ls.coords) == 0', 'ls.label == ', 'len(ls.coords) == 1', 'ls.label is None', 'len(ls.coords) == 1', 'ls.coords_almost_equals([(0, 0)])', 'ls.label is None', 'len(ls.coords) == 2', 'ls.coords_almost_equals([(0, 0), (1, 1)])', 'ls.label is None', 'len(ls.coords) == 3', 'ls.coords_almost_equals([(0, 0), (1, 1), (0, 0)])', 'ls.label is None', 'len(ls.coords) == 3', 'ls.coords_almost_equals([(0, 0), (1, 1), (0, 0)])', 'ls.label == ', 'len(ls.coords) == 3', 'ls.coords_almost_equals([(0, 0), (1, 1), (0, 0)])', 'ls.label == ', 'x_exp - 1e-8 < x_obs < x_exp + 1e-8', 'y_exp - 1e-8 < y_obs < y_exp + 1e-8', 'len(poly.exterior) == 0', 'poly.exterior.dtype.type == poly_cp.exterior.dtype.type', 'poly.exterior.shape == poly_cp.exterior.shape', 'np.allclose(poly.exterior, poly_cp.exterior)', 'poly.label == poly_cp.label', 'poly.exterior.dtype.type == poly_cp.exterior.dtype.type', 'poly.exterior.shape == poly_cp.exterior.shape', 'np.allclose(poly.exterior, poly_cp.exterior)', 'poly.label == poly_cp.label', 'poly.exterior.dtype.type == poly_cp.exterior.dtype.type', 'poly.exterior.shape == poly_cp.exterior.shape', 'not np.allclose(poly.exterior, poly_cp.exterior)', 'not poly.label == poly_cp.label', 's ==  \\', 's ==  \\', 's ==  \\', 's == ', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-3)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-9)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-9)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'not poly_a.exterior_almost_equals(poly_b)', 'poly_a.exterior_almost_equals(poly_b, max_distance=1e-2)', 'not poly_a.exterior_almost_equals(poly_b, max_distance=1e-9)', 'poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals(poly_b)', 'not poly_a.almost_equals()', '_any_point_close(poly_oi_clip.polygons[0].exterior,', '_any_point_close(poly_oi_clip.polygons[0].exterior,', '_any_point_close(poly_oi_clip.polygons[0].exterior,', '_any_point_close(poly_oi_clip.polygons[1].exterior,', 'poly_oi.shape == (10, 11, 3)', 'poly_oi_copy.shape == (20, 30, 3)', 'poly_oi.shape == (10, 11, 3)', 'poly_oi_copy.shape == (20, 30, 3)', 'poly_oi.__repr__() == ', 'poly_oi.__repr__() == (', 'poly_oi.__repr__() == ', 'poly_oi.__repr__() == (', 'np.allclose(p_obs, p_exp, atol=atol, rtol=rtol),  % (i,)', 'poly_concave.is_valid', 'np.all(found)', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[2])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[3])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[4])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[2])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[4])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[6])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[7])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[8])) >= 1e-4', 'np.linalg.norm(np.float32([0, 0]) - np.float32(points_jittered[2])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[3])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[5])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[7])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[8])) >= 1e-4', 'np.linalg.norm(np.float32([1, 0]) - np.float32(points_jittered[9])) >= 1e-4', 'len(observed) == len(expected),  % (len(observed), len(expected))', 'max_count == len(expected),  % (max_count, len(expected))']",[],[],[],[],[],[],[],[],[],[],[],[]
1837,aleju,kontakt@ajung.name,2019-08-31 09:19:36+02:00,ac5b28e1690bbf983853e2d57fc4ddfe60d8420b,https://github.com/aleju/imgaug/commit/ac5b28e1690bbf983853e2d57fc4ddfe60d8420b,Migrate tests for .augmentables.heatmaps to unittest,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestHeatmapsOnImage_draw(unittest.TestCase):', 'class TestHeatmapsOnImage_draw_on_image(unittest.TestCase):', 'class TestHeatmapsOnImage_invert(unittest.TestCase):', 'class TestHeatmapsOnImage_pad(unittest.TestCase):', 'class TestHeatmapsOnImage_pad_to_aspect_ratio(unittest.TestCase):', 'class TestHeatmapsOnImage_avg_pool(unittest.TestCase):', 'class TestHeatmapsOnImage_max_pool(unittest.TestCase):', 'class TestHeatmapsOnImage_resize(unittest.TestCase):', 'class TestHeatmapsOnImage_from_uint8(unittest.TestCase):', 'class TestHeatmapsOnImage_change_normalization(unittest.TestCase):']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['heatmaps_drawn.shape == (4, 4, 3)', 'np.allclose(heatmaps_drawn[y, x], v3)', 'heatmaps_drawn.shape == (4, 4, 3)', 'np.allclose(heatmaps_drawn[y, x], v1)', 'np.allclose(heatmaps_drawn[y, x], v2)', 'heatmaps_drawn.shape == (4, 4, 3)', 'np.all(heatmaps_drawn[0:4, 0:2, :] == 0)', '(', '(', 'heatmaps_drawn.shape == (2, 2, 3)', 'np.all(heatmaps_drawn[0:2, 0, :] == 0)', '(', 'np.allclose(heatmaps.get_arr(), heatmaps_arr)', 'np.allclose(heatmaps.invert().get_arr(), expected)', 'np.allclose(heatmaps.get_arr(),', 'np.allclose(heatmaps.invert().get_arr(),', 'heatmaps_padded.arr_0to1.shape == (2+(1+3), 2+(4+2), 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (2+(1+3), 2+(4+2), 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (2+(1+3), 2+(4+2), 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (3, 3, 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (3, 3, 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (3, 3, 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (2, 4, 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (12, 3, 1)', 'np.allclose(', 'heatmaps_pooled.arr_0to1.shape == (2, 2, 1)', 'np.allclose(', 'heatmaps_pooled.arr_0to1.shape == (2, 2, 1)', 'np.allclose(', 'heatmaps_scaled.arr_0to1.shape == (4, 4, 1)', 'heatmaps_scaled.arr_0to1.dtype.name == ', 'np.allclose(', 'heatmaps_scaled.arr_0to1.shape == (2, 4, 1)', 'heatmaps_scaled.arr_0to1.dtype.name == ', 'np.allclose(', 'hm.shape == (20, 30, 3)', 'hm.arr_0to1.shape == (2, 3, 1)', 'np.allclose(hm.arr_0to1[..., 0], np.float32([', 'hm.shape == (20, 30, 3)', 'hm.arr_0to1.shape == (2, 3, 1)', 'np.allclose(hm.arr_0to1[..., 0], np.float32([', 'hm.shape == (20, 30, 3)', 'hm.arr_0to1.shape == (2, 3, 1)', 'np.allclose(hm.arr_0to1[..., 0], np.float32([', 'np.allclose(hm.min_value, -1.0)', 'np.allclose(hm.max_value, 2.0)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],"['heatmaps_drawn.shape == (4, 4, 3)', 'np.allclose(heatmaps_drawn[y, x], v1)', 'np.allclose(heatmaps_drawn[y, x], v2)', 'np.allclose(heatmaps_drawn[y, x], v3)', 'heatmaps_drawn.shape == (4, 4, 3)', 'heatmaps_drawn.shape == (4, 4, 3)', 'np.all(heatmaps_drawn[0:4, 0:2, :] == 0)', 'np.all(heatmaps_drawn[0:4, 2:3, :] == 128) or np.all(heatmaps_drawn[0:4, 2:3, :] == 127)', 'np.all(heatmaps_drawn[0:4, 3:4, :] == 255) or np.all(heatmaps_drawn[0:4, 3:4, :] == 254)', 'heatmaps_drawn.shape == (2, 2, 3)', 'np.all(heatmaps_drawn[0:2, 0, :] == 0)', 'np.all(heatmaps_drawn[0:2, 1, :] == 128) or np.all(heatmaps_drawn[0:2, 1, :] == 127)', 'np.allclose(heatmaps.get_arr(), heatmaps_arr)', 'np.allclose(heatmaps.invert().get_arr(), expected)', 'np.allclose(heatmaps.get_arr(), heatmaps_arr[..., np.newaxis])', 'np.allclose(heatmaps.invert().get_arr(), expected[..., np.newaxis])', 'heatmaps_padded.arr_0to1.shape == (2+(1+3), 2+(4+2), 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (2+(1+3), 2+(4+2), 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (2+(1+3), 2+(4+2), 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (3, 3, 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (3, 3, 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (3, 3, 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (2, 4, 1)', 'np.allclose(', 'heatmaps_padded.arr_0to1.shape == (12, 3, 1)', 'np.allclose(', 'heatmaps_pooled.arr_0to1.shape == (2, 2, 1)', 'np.allclose(', 'heatmaps_pooled.arr_0to1.shape == (2, 2, 1)', 'np.allclose(', 'heatmaps_scaled.arr_0to1.shape == (4, 4, 1)', 'heatmaps_scaled.arr_0to1.dtype.type == np.float32', 'np.allclose(', 'heatmaps_scaled.arr_0to1.shape == (2, 4, 1)', 'heatmaps_scaled.arr_0to1.dtype.type == np.float32', 'np.allclose(', 'hm.shape == (20, 30, 3)', 'hm.arr_0to1.shape == (2, 3, 1)', 'np.allclose(hm.arr_0to1[..., 0], np.float32([', 'hm.shape == (20, 30, 3)', 'hm.arr_0to1.shape == (2, 3, 1)', 'np.allclose(hm.arr_0to1[..., 0], np.float32([', 'hm.shape == (20, 30, 3)', 'hm.arr_0to1.shape == (2, 3, 1)', 'np.allclose(hm.arr_0to1[..., 0], np.float32([', 'np.allclose(hm.min_value, -1.0)', 'np.allclose(hm.max_value, 2.0)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[]
1838,aleju,kontakt@ajung.name,2019-08-31 10:04:52+02:00,e2e56c9c0702719c643584fc88dfeb3331e44a74,https://github.com/aleju/imgaug/commit/e2e56c9c0702719c643584fc88dfeb3331e44a74,Migrate tests for .augmentables.segmaps to unittest,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,0,119,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestSegmentationMapsOnImage___init__(unittest.TestCase):', 'class TestSegmentationMapsOnImage_get_arr(unittest.TestCase):', 'class TestSegmentationMapsOnImage_draw(unittest.TestCase):', 'class TestSegmentationMapsOnImage_draw_on_image(unittest.TestCase):', 'class TestSegmentationMapsOnImage_pad(unittest.TestCase):', 'class TestSegmentationMapsOnImage_pad_to_aspect_ratio(unittest.TestCase):', 'class TestSegmentationMapsOnImage_resize(unittest.TestCase):', 'class TestSegmentationMapsOnImage_copy(unittest.TestCase):', 'class TestSegmentationMapsOnImage_deepcopy(unittest.TestCase):']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['segmap.shape == img_shape', 'segmap.arr.dtype.name == ', 'segmap.arr.shape == (3, 3, 1)', 'np.array_equal(segmap.arr,', 'segmap.shape == img_shape', 'segmap.arr.dtype.name == ', 'segmap.arr.shape == (3, 3, 5)', 'np.array_equal(segmap.arr, arr.astype(np.int32))', 'segmap.shape == (3, 3)', 'segmap.arr.shape == (3, 3, 5)', 'np.array_equal(segmap.arr, arr.astype(np.int32))', 'arr.dtype.kind == ', 'np.array_equal(', 'segmap.get_arr().dtype.name == arr.dtype.name', 'np.array_equal(segmap.get_arr(), arr)', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'np.array_equal(segmap.arr, arr_expected)', 'segmap.shape == (1, 1, 3)', 'len(caught_warnings) == 1', '(', 'np.array_equal(segmap.arr, arr_expected)', 'segmap.shape == (1, 1, 3)', 'len(caught_warnings) == 1', '(', 'segmap.arr.dtype.name == ', 'segmap.arr.ndim == 3', 'np.array_equal(observed, arr)', 'observed.dtype.name == dtype.name', 'observed.ndim == ndim', 'np.array_equal(observed, arr)', 'segmap.arr.dtype.name == ', 'segmap.arr.ndim == 3', 'np.array_equal(observed, arr)', 'observed.dtype.kind == ', 'observed.ndim == ndim', 'np.array_equal(observed, arr)', 'isinstance(observed, list)', 'len(observed) == 1', 'np.array_equal(observed[0], expected)', 'isinstance(observed, list)', 'len(observed) == 1', 'np.array_equal(observed[0], expected)', 'isinstance(observed, list)', 'len(observed) == 1', 'np.array_equal(observed[0], expected)', 'isinstance(observed, list)', 'len(observed) == 1', 'np.array_equal(observed[0], expected)', 'isinstance(observed, list)', 'len(observed) == 3', 'np.array_equal(observed[0], expected_channel_1)', 'np.array_equal(observed[1], expected_channel_2)', 'np.array_equal(observed[2], expected_channel_3)', 'isinstance(observed, list)', 'len(observed) == 1', 'np.array_equal(observed[0], self.image)', 'isinstance(observed, list)', 'len(observed) == 3', 'np.array_equal(observed[0], expected_channel_1)', 'np.array_equal(observed[1], expected_channel_2)', 'np.array_equal(observed[2], expected_channel_3)', 'isinstance(observed, list)', 'len(observed) == 1', 'observed[0].shape == expected.shape', 'd_max <= 1.0 + 1e-4', 'isinstance(observed, list)', 'len(observed) == 1', 'observed[0].shape == expected.shape', 'd_max <= 1.0 + 1e-4', 'isinstance(observed, list)', 'len(observed) == 1', 'observed[0].shape == expected.shape', 'd_max <= 1.0 + 1e-4', 'isinstance(observed, list)', 'len(observed) == 1', 'observed[0].shape == expected.shape', 'd_max <= 1.0 + 1e-4', 'isinstance(observed, list)', 'len(observed) == 1', 'observed[0].shape == expected.shape', 'd_max <= 1.0 + 1e-4', 'len(caught_warnings) == 1', '(', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'pad_amounts == (2, 0, 2, 0)', 'np.array_equal(observed, expected)', 'np.array_equal(observed.arr, segmap.arr)', 'observed.shape == (2, 2)', 'observed._input_was == segmap._input_was', 'segmap.arr[0, 0, 0] == 10', 'observed.arr.shape == (1, 1, 1)', 'observed.arr[0, 0, 0] == 10', 'observed._input_was == segmap._input_was', 'observed.shape == (10, 11, 3)', 'segmap.shape != (10, 11, 3)', 'observed._input_was == segmap._input_was', 'np.array_equal(observed.arr, segmap.arr)', 'observed.shape == (2, 2)', 'observed._input_was == segmap._input_was', 'segmap.arr[0, 0, 0] != 10', 'observed.arr.shape == (1, 1, 1)', 'observed.arr[0, 0, 0] == 10', 'segmap.arr[0, 0, 0] != 10', 'observed._input_was == segmap._input_was', 'observed.shape == (10, 11, 3)', 'segmap.shape != (10, 11, 3)', 'observed._input_was == segmap._input_was']",[],[],[],[],[],[],[],[],[],[],[],[],"['segmap.shape == img_shape', 'segmap.shape == img_shape', 'segmap.arr.dtype.name == ', 'segmap.arr.shape == (3, 3, 5)', 'np.array_equal(segmap.arr, arr.astype(np.int32))', 'segmap.arr.shape == (3, 3, 1)', 'np.array_equal(segmap.arr,', 'segmap.shape == (3, 3)', 'segmap.arr.dtype.name == ', 'segmap.arr.shape == (3, 3, 5)', 'np.array_equal(segmap.arr, arr.astype(np.int32))', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'np.array_equal(segmap.arr, arr_expected)', 'segmap.shape == (1, 1, 3)', 'len(caught_warnings) == 1', '(', 'np.array_equal(segmap.arr, arr_expected)', 'segmap.shape == (1, 1, 3)', 'len(caught_warnings) == 1', '(', 'arr.dtype.kind == ', 'np.array_equal(', 'segmap.get_arr().dtype.name == arr.dtype.name', 'np.array_equal(segmap.get_arr(), arr)', 'segmap.arr.dtype.name == ', 'segmap.arr.ndim == 3', 'np.array_equal(observed, arr)', 'observed.dtype.name == dtype.name', 'observed.ndim == ndim', 'np.array_equal(observed, arr)', 'segmap.arr.dtype.name == ', 'segmap.arr.ndim == 3', 'np.array_equal(observed, arr)', 'observed.dtype.kind == ', 'observed.ndim == ndim', 'np.array_equal(observed, arr)', 'isinstance(observed, list)', 'len(observed) == 1', 'np.array_equal(observed[0], expected)', 'isinstance(observed, list)', 'len(observed) == 1', 'np.array_equal(observed[0], expected)', 'isinstance(observed, list)', 'len(observed) == 3', 'np.array_equal(observed[0], expected_channel_1)', 'np.array_equal(observed[1], expected_channel_2)', 'np.array_equal(observed[2], expected_channel_3)', 'len(caught_warnings) == 1', '(', 'isinstance(observed, list)', 'len(observed) == 1', 'np.array_equal(observed[0], image)', 'isinstance(observed, list)', 'len(observed) == 1', 'np.array_equal(observed[0], expected)', 'isinstance(observed, list)', 'len(observed) == 1', 'np.array_equal(observed[0], expected)', 'isinstance(observed, list)', 'len(observed) == 3', 'np.array_equal(observed[0], expected_channel_1)', 'np.array_equal(observed[1], expected_channel_2)', 'np.array_equal(observed[2], expected_channel_3)', 'isinstance(observed, list)', 'len(observed) == 1', 'observed[0].shape == expected.shape', 'd_max <= 1.0 + 1e-4', 'isinstance(observed, list)', 'len(observed) == 1', 'observed[0].shape == expected.shape', 'd_max <= 1.0 + 1e-4', 'isinstance(observed, list)', 'len(observed) == 1', 'observed[0].shape == expected.shape', 'd_max <= 1.0 + 1e-4', 'isinstance(observed, list)', 'len(observed) == 1', 'observed[0].shape == expected.shape', 'd_max <= 1.0 + 1e-4', 'isinstance(observed, list)', 'len(observed) == 1', 'observed[0].shape == expected.shape', 'd_max <= 1.0 + 1e-4', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'pad_amounts == (2, 0, 2, 0)', 'np.array_equal(segmap_scaled.arr, expected)', 'np.array_equal(observed.arr, segmap.arr)', 'observed.shape == (2, 2)', 'observed._input_was == segmap._input_was', 'segmap.arr[0, 0, 0] == 10', 'arr[0, 0, 0] == 10', 'observed.arr.shape == (1, 1, 1)', 'observed.arr[0, 0, 0] == 10', 'observed._input_was == segmap._input_was', 'observed.shape == (10, 11, 3)', 'segmap.shape != (10, 11, 3)', 'observed._input_was == segmap._input_was', 'np.array_equal(observed.arr, segmap.arr)', 'observed.shape == (2, 2)', 'observed._input_was == segmap._input_was', 'segmap.arr[0, 0, 0] != 10', 'arr[0, 0, 0] != 10', 'observed.arr.shape == (1, 1, 1)', 'observed.arr[0, 0, 0] == 10', 'segmap.arr[0, 0, 0] != 10', 'observed._input_was == segmap._input_was', 'observed.shape == (10, 11, 3)', 'segmap.shape != (10, 11, 3)', 'observed._input_was == segmap._input_was']",[],[],[],[],[],[],[],[],[],[],[],[]
1839,aleju,kontakt@ajung.name,2019-08-31 10:45:48+02:00,8d2603bda09169adf162cb8198b5480d4469d23b,https://github.com/aleju/imgaug/commit/8d2603bda09169adf162cb8198b5480d4469d23b,Remove dead code,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1840,aleju,kontakt@ajung.name,2019-08-31 10:46:22+02:00,9cc2b74e21d548dd4db082401b46dc21530152e5,https://github.com/aleju/imgaug/commit/9cc2b74e21d548dd4db082401b46dc21530152e5,Add todo,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1841,aleju,kontakt@ajung.name,2019-08-31 10:58:52+02:00,6d27324706e7faa19c4e91255dec6c99d9c8526d,https://github.com/aleju/imgaug/commit/6d27324706e7faa19c4e91255dec6c99d9c8526d,Cleanup test_mixed_files.py,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(kp_image_aug_rev.keypoints) == len(kp_aug.keypoints), (']",[],[],[],[],[],[],[],[],[],[],[],[],"['len(kp_image_aug_rev.keypoints) == len(kp_aug.keypoints),\\']",[],[],[],[],[],[],[],[],[],[],[],[]
1842,aleju,kontakt@ajung.name,2019-08-31 14:55:20+02:00,7db0cd2afbee585a6f1daaf9e13af6a96aea5481,https://github.com/aleju/imgaug/commit/7db0cd2afbee585a6f1daaf9e13af6a96aea5481,Cleanup tests for geometric augmenters,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,159,0,0,0,0,0,0,0,0,0,0,0,0,159,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.isclose(observed.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(observed.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', 'np.isclose(observed.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(observed.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', 'np.isclose(observed.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(observed.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', '(', '(', '(', '(', 'image_aug.dtype.name == image.dtype.name', 'image_aug.dtype.name == dtype', 'image_aug.dtype.name == dtype', 'image_aug.dtype.name == image.dtype.name', 'image_aug.dtype.name == dtype', '_compute_matching(', '_compute_matching(', 'image_aug.dtype.name == dtype', '_compute_matching(', '_compute_matching(', 'image_aug.dtype.name == image.dtype.name', 'image_aug.dtype.name == dtype', 'image_aug.dtype.name == dtype', 'image_aug.dtype.name == image.dtype.name', 'image_aug.dtype.name == dtype', 'image_aug.dtype.name == dtype', '(', 'np.isclose(observed.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(observed.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', 'np.isclose(observed.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(observed.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', 'np.isclose(observed.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(observed.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', '(', '(', '(', '(', 'np.isclose(observed.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(observed.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', '(', '(', 'np.isclose(observed.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(observed.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', 'np.isclose(observed1.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(observed1.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', 'np.isclose(observed2.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(observed2.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', '(', 'np.isclose(hm_aug.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(hm_aug.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', 'all([', 'all([', 'all([', 'image_aug.dtype.name == image.dtype.name', 'image_aug.dtype.name == dtype', 'image_aug.dtype.name == dtype', 'all([', 'np.average(', 'all([', 'all([', 'all([', 'all([', 'all([', 'all([', 'all([', 'all([', 'np.average(', 'np.isclose(observed.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(observed.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', 'np.average(', '(', '(', 'image_aug.dtype.name == image.dtype.name', 'image_aug.dtype.name == dtype', 'image_aug.dtype.name == dtype', '(', '(', '(', 'np.isclose(observed.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(observed.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', '(', '(', '(', '(', 'np.isclose(observed1.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(observed1.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', 'np.isclose(observed2.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(observed2.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', '(', '(', '(', '(', 'np.isclose(observed.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(observed.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', 'all([', 'image_aug.dtype.name == dtype', 'image_aug.dtype.name == dtype', 'image_aug.dtype.name == dtype', 'not np.all(', 'np.any(', 'image_aug.dtype.name == dtype', 'not np.all(', 'np.any(', 'not np.all(', 'np.any(', 'img_aug.dtype.name == ', 'hms_aug.arr_0to1.dtype.name == hms.arr_0to1.dtype.name', 'segmaps_aug.arr.dtype.name == segmaps.arr.dtype.name', 'img_aug.dtype.name == ', 'hms_aug.arr_0to1.dtype.name == hms.arr_0to1.dtype.name', 'np.allclose(', '(', 'np.allclose(', 'segmaps_aug.arr.dtype.name == segmaps.arr.dtype.name', 'np.allclose(', '(', 'np.allclose(', 'img_aug.dtype.name == ', 'hms_aug.arr_0to1.dtype.name == hms.arr_0to1.dtype.name', 'np.allclose(', '(hms_smaller_aug.arr_0to1.dtype.name', 'np.allclose(', 'np.allclose(', '(segmaps_smaller_aug.arr.dtype.name', 'np.allclose(', 'img_aug.dtype.name == ', '(hms_aug.arr_0to1.dtype.name', 'np.allclose(', '(hms_smaller_aug.arr_0to1.dtype.name', 'np.allclose(', '(segmaps_aug.arr.dtype.name', 'np.allclose(', '(segmaps_smaller_aug.arr.dtype.name', 'np.allclose(', 'img_aug.dtype.name == ', 'hms_aug.arr_0to1.dtype.name == hms.arr_0to1.dtype.name', 'np.allclose(', '(hms_smaller_aug.arr_0to1.dtype.name', '(segmaps_aug.arr.dtype.name', '(segmaps_smaller_aug.arr.dtype.name', 'np.allclose(hms_aug[0].arr_0to1, _rot_hm(hms_smaller, 1))', 'np.allclose(hms_aug[1].arr_0to1, _rot_hm(hms_smaller, 2))', 'np.allclose(hms_aug[2].arr_0to1, _rot_hm(hms_smaller, 1))', 'np.allclose(hms_aug[3].arr_0to1, _rot_hm(hms_smaller, 2))', 'np.allclose(segmaps_aug[0].arr, _rot_sm(segmaps_smaller, 1))', 'np.allclose(segmaps_aug[1].arr, _rot_sm(segmaps_smaller, 2))', 'np.allclose(segmaps_aug[2].arr, _rot_sm(segmaps_smaller, 1))', 'np.allclose(segmaps_aug[3].arr, _rot_sm(segmaps_smaller, 2))', 'np.allclose(kpxy_aug(kpsoi_aug, 0, 0), expected_k1_kps[0])', 'np.allclose(kpxy_aug(kpsoi_aug, 0, 1), expected_k1_kps[1])', 'np.allclose(kpxy_aug(kpsoi_aug, 1, 0), expected_k2_kps[0])', 'np.allclose(kpxy_aug(kpsoi_aug, 1, 1), expected_k2_kps[1])', 'np.allclose(kpxy_aug(kpsoi_aug, 2, 0), expected_k1_kps[0])', 'np.allclose(kpxy_aug(kpsoi_aug, 2, 1), expected_k1_kps[1])', 'np.allclose(kpxy_aug(kpsoi_aug, 3, 0), expected_k2_kps[0])', 'np.allclose(kpxy_aug(kpsoi_aug, 3, 1), expected_k2_kps[1])', 'image_aug.dtype.name == image.dtype.name', 'image_aug.dtype.name == dtype', 'image_aug.dtype.name == dtype']",[],[],[],[],[],[],[],[],[],[],[],[],"['heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', '(pixels_sums_aug[outer_pixels] > int(nb_iterations * (2/8 * 0.4))).all()', '(pixels_sums_aug[outer_pixels] < int(nb_iterations * (2/8 * 2.0))).all()', 'len(aug.mode.a) == 2 and  in aug.mode.a', 'len(aug.mode.a) == 2 and  in aug.mode.a', 'image_aug.dtype == image.dtype', 'image_aug.dtype == np.dtype(dtype)', 'image_aug.dtype == np.dtype(dtype)', 'image_aug.dtype == image.dtype', 'image_aug.dtype == np.dtype(dtype)', '_compute_matching(image_aug, image_exp, mask_inner) > thresh_inner', '_compute_matching(image_aug, image_exp, mask_outer) > thresh_outer', 'image_aug.dtype == np.dtype(dtype)', '_compute_matching(image_aug, image_exp, mask_inner) > thresh_inner_float', '_compute_matching(image_aug, image_exp, mask_outer) > thresh_outer_float', 'image_aug.dtype == image.dtype', 'image_aug.dtype == np.dtype(dtype)', 'image_aug.dtype == np.dtype(dtype)', 'image_aug.dtype == image.dtype', 'image_aug.dtype == np.dtype(dtype)', 'image_aug.dtype == np.dtype(dtype)', '(np.sum(_isclose(image_aug, image_exp)) / image.size) > 0.9', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', '(pixels_sums_aug[outer_pixels] > int(nb_iterations * (2/8 * 0.4))).all()', '(pixels_sums_aug[outer_pixels] < int(nb_iterations * (2/8 * 2.0))).all()', 'len(aug.mode.a) == 2 and  in aug.mode.a', 'len(aug.mode.a) == 2 and  in aug.mode.a', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', '100.0/255.0 < np.average(observed_arr[mask]) < np.average(heatmaps_arr[mask])', '(100.0-75.0)/255.0 > np.average(observed_arr[~mask]) > np.average(heatmaps_arr[~mask])', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'heatmaps.min_value - 1e-6 < observed1.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed1.max_value < heatmaps.max_value + 1e-6', 'heatmaps.min_value - 1e-6 < observed2.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed2.max_value < heatmaps.max_value + 1e-6', 'np.average(observed1_arr[~mask] == 0) > np.average(observed2_arr[~mask] == 0)', 'heatmaps.min_value - 1e-6 < hm_aug.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < hm_aug.max_value < heatmaps.max_value + 1e-6', 'all([v in aug.mode.a for v in []])', 'all([v in aug.mode.a for v in []])', 'all([v in aug.mode.a for v in []])', 'image_aug.dtype == image.dtype', 'image_aug.dtype == np.dtype(dtype)', 'image_aug.dtype == np.dtype(dtype)', 'all([abs(s1-s2) <= 1 for s1, s2 in zip(observed.shape, expected.shape)])', 'np.average(np.abs(observed.astype(np.int32) - expected.astype(np.int32))) < 30.0', 'all([abs(s1-s2) <= 1 for s1, s2 in zip(hm_aug.shape, expected)])', 'all([abs(s1-s2) <= 1 for s1, s2 in zip(hm_aug.arr_0to1.shape, expected + (1,))])', 'all([abs(s1-s2) <= 1 for s1, s2 in zip(segmaps_aug.shape, expected)])', 'all([abs(s1-s2) <= 1 for s1, s2 in zip(segmaps_aug.arr.shape, expected + (1,))])', 'all([abs(s1-s2) <= 1 for s1, s2 in zip(hm_aug.shape, expected)])', 'all([abs(s1-s2) <= 1 for s1, s2 in zip(hm_aug.arr_0to1.shape, expected_small)])', 'all([abs(s1-s2) <= 1 for s1, s2 in zip(seg_aug.shape, expected)])', 'all([abs(s1-s2) <= 1 for s1, s2 in zip(seg_aug.arr.shape, expected_small)])', 'np.average(np.abs(observed.astype(np.int32) - expected.astype(np.int32))) < 30.0', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.average(np.abs(observed_i.astype(np.int32) - expected.astype(np.int32))) < 30.0', 'len(', 'len(', 'image_aug.dtype == image.dtype', 'image_aug.dtype == image.dtype', 'image_aug.dtype == image.dtype', '(np.sum(_isclose(image_aug, expected)) / expected.size) > 0.7', 'np.sum(observed[mask_nonsquare]) < np.sum(img_nonsquare[mask_nonsquare])', 'np.sum(observed[~mask_nonsquare]) > np.sum(img_nonsquare[~mask_nonsquare])', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'np.sum(observed.get_arr()[mask]) < np.sum(heatmaps.get_arr()[mask])', 'np.sum(observed.get_arr()[~mask]) > np.sum(heatmaps.get_arr()[~mask])', 'np.sum(observed.get_arr()[mask]) < np.sum(segmaps.get_arr()[mask])', 'np.sum(observed.get_arr()[~mask]) > np.sum(segmaps.get_arr()[~mask])', 'heatmaps.min_value - 1e-6 < observed1.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed1.max_value < heatmaps.max_value + 1e-6', 'heatmaps.min_value - 1e-6 < observed2.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed2.max_value < heatmaps.max_value + 1e-6', 'np.sum(observed1.get_arr()[mask]) > np.sum(observed2.get_arr()[mask])', 'np.sum(observed1.get_arr()[~mask]) < np.sum(observed2.get_arr()[~mask])', 'np.sum(observed1.get_arr()[mask]) > np.sum(observed2.get_arr()[mask])', 'np.sum(observed1.get_arr()[~mask]) < np.sum(observed2.get_arr()[~mask])', 'heatmaps.min_value - 1e-6 < observed.min_value < heatmaps.min_value + 1e-6', 'heatmaps.max_value - 1e-6 < observed.max_value < heatmaps.max_value + 1e-6', 'all([mode in aug.mode.a for mode in []])', 'image_aug.dtype.name == dtype.name', 'image_aug.dtype.name == dtype.name', 'image_aug.dtype.name == dtype.name', 'not np.all(np.isclose(image_aug, max_value, rtol=0, atol=atol))', 'np.any(np.isclose(image_aug[~mask], max_value, rtol=0, atol=atol))', 'image_aug.dtype.name == dtype.name', 'not np.all(_isclose(image_aug, np.float128(value)))', 'np.any(_isclose(image_aug[~mask], np.float128(value)))', 'not np.all(np.isclose(image_aug, np.float128(value), rtol=0, atol=atol))', 'np.any(np.isclose(image_aug[~mask], np.float128(value), rtol=0, atol=atol))', 'img_aug.dtype == np.uint8', 'hms_aug.arr_0to1.dtype == hms.arr_0to1.dtype', 'segmaps_aug.arr.dtype == segmaps.arr.dtype', 'img_aug.dtype == np.uint8', 'hms_aug.arr_0to1.dtype == hms.arr_0to1.dtype', 'np.allclose(hms_aug.arr_0to1, np.rot90(hms.arr_0to1, 1, axes=(1, 0)))', 'hms_smaller_aug.arr_0to1.dtype == hms_smaller.arr_0to1.dtype', 'np.allclose(hms_smaller_aug.arr_0to1, np.rot90(hms_smaller.arr_0to1, 1, axes=(1, 0)))', 'segmaps_aug.arr.dtype == segmaps.arr.dtype', 'np.allclose(segmaps_aug.arr, np.rot90(segmaps.arr, 1, axes=(1, 0)))', 'segmaps_smaller_aug.arr.dtype == segmaps_smaller.arr.dtype', 'np.allclose(segmaps_smaller_aug.arr,', 'img_aug.dtype == np.uint8', 'hms_aug.arr_0to1.dtype == hms.arr_0to1.dtype', 'np.allclose(hms_aug.arr_0to1, np.rot90(hms.arr_0to1, 2, axes=(1, 0)))', 'hms_smaller_aug.arr_0to1.dtype == hms_smaller.arr_0to1.dtype', 'np.allclose(hms_smaller_aug.arr_0to1, np.rot90(hms_smaller.arr_0to1, 2, axes=(1, 0)))', 'np.allclose(segmaps_aug.arr, np.rot90(segmaps.arr, 2, axes=(1, 0)))', 'segmaps_smaller_aug.arr.dtype == segmaps_smaller.arr.dtype', 'np.allclose(segmaps_smaller_aug.arr,', 'img_aug.dtype == np.uint8', 'hms_aug.arr_0to1.dtype == hms.arr_0to1.dtype', 'np.allclose(hms_aug.arr_0to1, np.rot90(hms.arr_0to1, 3, axes=(1, 0)))', 'hms_smaller_aug.arr_0to1.dtype == hms_smaller.arr_0to1.dtype', 'np.allclose(hms_smaller_aug.arr_0to1, np.rot90(hms_smaller.arr_0to1, 3, axes=(1, 0)))', 'segmaps_aug.arr.dtype == segmaps.arr.dtype', 'np.allclose(segmaps_aug.arr,', 'segmaps_smaller_aug.arr.dtype == segmaps_smaller.arr.dtype', 'np.allclose(segmaps_smaller_aug.arr,', 'img_aug.dtype == np.uint8', 'hms_aug.arr_0to1.dtype == hms.arr_0to1.dtype', 'np.allclose(hms_aug.arr_0to1, np.rot90(hms.arr_0to1, 1, axes=(1, 0)))', 'hms_smaller_aug.arr_0to1.dtype == hms_smaller.arr_0to1.dtype', 'segmaps_aug.arr.dtype == segmaps.arr.dtype', 'segmaps_smaller_aug.arr.dtype == segmaps_smaller.arr.dtype', 'np.allclose(hms_aug[0].arr_0to1, np.rot90(hms_smaller.arr_0to1, 1, axes=(1, 0)))', 'np.allclose(hms_aug[1].arr_0to1, np.rot90(hms_smaller.arr_0to1, 2, axes=(1, 0)))', 'np.allclose(hms_aug[2].arr_0to1, np.rot90(hms_smaller.arr_0to1, 1, axes=(1, 0)))', 'np.allclose(hms_aug[3].arr_0to1, np.rot90(hms_smaller.arr_0to1, 2, axes=(1, 0)))', 'np.allclose(segmaps_aug[0].arr, np.rot90(segmaps_smaller.arr, 1, axes=(1, 0)))', 'np.allclose(segmaps_aug[1].arr, np.rot90(segmaps_smaller.arr, 2, axes=(1, 0)))', 'np.allclose(segmaps_aug[2].arr, np.rot90(segmaps_smaller.arr, 1, axes=(1, 0)))', 'np.allclose(segmaps_aug[3].arr, np.rot90(segmaps_smaller.arr, 2, axes=(1, 0)))', 'np.allclose([kpsoi_aug[0].keypoints[0].x, kpsoi_aug[0].keypoints[0].y], expected_k1_kps[0])', 'np.allclose([kpsoi_aug[0].keypoints[1].x, kpsoi_aug[0].keypoints[1].y], expected_k1_kps[1])', 'np.allclose([kpsoi_aug[1].keypoints[0].x, kpsoi_aug[1].keypoints[0].y], expected_k2_kps[0])', 'np.allclose([kpsoi_aug[1].keypoints[1].x, kpsoi_aug[1].keypoints[1].y], expected_k2_kps[1])', 'np.allclose([kpsoi_aug[2].keypoints[0].x, kpsoi_aug[2].keypoints[0].y], expected_k1_kps[0])', 'np.allclose([kpsoi_aug[2].keypoints[1].x, kpsoi_aug[2].keypoints[1].y], expected_k1_kps[1])', 'np.allclose([kpsoi_aug[3].keypoints[0].x, kpsoi_aug[3].keypoints[0].y], expected_k2_kps[0])', 'np.allclose([kpsoi_aug[3].keypoints[1].x, kpsoi_aug[3].keypoints[1].y], expected_k2_kps[1])', 'image_aug.dtype == image.dtype', 'image_aug.dtype == np.dtype(dtype)', 'image_aug.dtype == np.dtype(dtype)']",[],[],[],[],[],[],[],[],[],[],[],[]
1843,aleju,kontakt@ajung.name,2019-09-01 12:44:19+02:00,7f475f31414f70636c4fceb5c38b620bfe3b2646,https://github.com/aleju/imgaug/commit/7f475f31414f70636c4fceb5c38b620bfe3b2646,Migrate tests for Affine to unittest,1,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],11,9,5,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,313,0,0,0,0,0,0,0,0,0,0,0,0,333,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestAffine(unittest.TestCase):', 'class TestAffine___init__(unittest.TestCase):', 'class TestAffine_noop(unittest.TestCase):', 'class TestAffine_scale(unittest.TestCase):', 'class TestAffine_translate(unittest.TestCase):', 'class TestAffine_rotate(unittest.TestCase):', 'class TestAffine_cval(unittest.TestCase):', 'class TestAffine_fit_output(unittest.TestCase):', 'class TestAffine_alignment(unittest.TestCase):', 'class TestAffine_other_dtypes(unittest.TestCase):', 'class TestAffine_other(unittest.TestCase):']","[('Raises', '(Exception):'), ('Raises', '(Exception):'), ('Raises', '(Exception):'), ('Raises', '(Exception):'), ('Raises', '(Exception):'), ('Raises', '(Exception):'), ('Raises', '(Exception):'), ('Raises', '(Exception):'), ('Raises', '(AssertionError):')]","['def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):']",[],[],[],[],[],[],[],[],['class TestAffine(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],"['isinstance(params[0], iap.Deterministic)  # scale', 'isinstance(params[1], iap.Deterministic)  # translate', 'isinstance(params[2], iap.Deterministic)  # rotate', 'isinstance(params[3], iap.Deterministic)  # shear', 'params[0].value == 1  # scale', 'params[1].value == 2  # translate', 'params[2].value == 3  # rotate', 'params[3].value == 4  # shear', 'params[4].value == 1  # order', 'params[5].value == 0  # cval', 'params[6].value ==   # mode', 'params[7] ==   # backend', 'params[8] is True  # fit_output', 'isinstance(aug.scale, iap.Uniform)', 'isinstance(aug.scale.a, iap.Deterministic)', 'isinstance(aug.scale.b, iap.Deterministic)', '0.7 - 1e-8 < aug.scale.a.value < 0.7 + 1e-8', '0.9 - 1e-8 < aug.scale.b.value < 0.9 + 1e-8', 'isinstance(aug.translate, iap.Uniform)', 'isinstance(aug.translate.a, iap.Deterministic)', 'isinstance(aug.translate.b, iap.Deterministic)', '0.7 - 1e-8 < aug.translate.a.value < 0.7 + 1e-8', '0.9 - 1e-8 < aug.translate.b.value < 0.9 + 1e-8', 'isinstance(aug.translate, iap.DiscreteUniform)', 'isinstance(aug.translate.a, iap.Deterministic)', 'isinstance(aug.translate.b, iap.Deterministic)', 'aug.translate.a.value == 1', 'aug.translate.b.value == 10', 'isinstance(aug.rotate, iap.Uniform)', 'isinstance(aug.rotate.a, iap.Deterministic)', 'aug.rotate.a.value == 10', 'isinstance(aug.rotate.b, iap.Deterministic)', 'aug.rotate.b.value == 20', 'isinstance(aug.shear, iap.Uniform)', 'isinstance(aug.shear.a, iap.Deterministic)', 'aug.shear.a.value == 10', 'isinstance(aug.shear.b, iap.Deterministic)', 'aug.shear.b.value == 20', 'isinstance(aug.cval, iap.Uniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 0', 'aug.cval.b.value == 255', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 1', 'aug.cval.b.value == 5', 'isinstance(aug.mode, iap.Choice)', 'isinstance(aug.mode, iap.Deterministic)', 'aug.mode.value == ', 'isinstance(aug.mode, iap.Choice)', '(', 'isinstance(aug.mode, iap.Choice)', '(', 'aug.fit_output is True', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'array_equal_lists(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y > 2', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y > 2', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y == 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y == 2', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y == 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y == 2', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0].keypoints[0].x == 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x == 2', 'observed[0].keypoints[2].y > 2', 'observed[0].keypoints[0].x == 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x == 2', 'observed[0].keypoints[2].y > 2', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', 'keypoints_equal(observed, self.scale_zoom_out_kpsoi_aug)', 'keypoints_equal(observed, self.scale_zoom_out_kpsoi_aug)', 'nb_changed_aug >= int(nb_iterations * 0.8)', 'nb_changed_aug_det == 0', 'poly.is_valid', 'ext[0][0] < ext[2][0] < ext[1][0]', 'ext[0][1] < ext[2][1]', 'np.allclose(ext[0][1], ext[1][1])', 'np.array_equal(observed, self.images_1px_right)', 'np.array_equal(observed, self.images_1px_right)', 'array_equal_lists(observed, [self.image_1px_right])', 'array_equal_lists(observed, [self.image_1px_right])', 'keypoints_equal(observed, self.kpsoi_1px_right)', 'keypoints_equal(observed, self.kpsoi_1px_right)', 'np.array_equal(observed, self.images_1px_right)', 'np.array_equal(observed, self.images_1px_right)', 'np.array_equal(observed, self.images_1px_right)', 'np.array_equal(observed, self.images_1px_right)', 'np.array_equal(observed, self.images_1px_right)', 'np.array_equal(observed, self.images_1px_bottom)', 'np.array_equal(observed, self.images_1px_bottom)', 'array_equal_lists(observed, [self.image_1px_bottom])', 'array_equal_lists(observed, [self.image_1px_bottom])', 'keypoints_equal(observed, self.kpsoi_1px_bottom)', 'keypoints_equal(observed, self.kpsoi_1px_bottom)', 'np.array_equal(observed, self.images_1px_right)', 'np.array_equal(observed, self.images_1px_right)', 'array_equal_lists(observed, [self.image_1px_right])', 'array_equal_lists(observed, [self.image_1px_right])', 'keypoints_equal(observed, self.kpsoi_1px_right)', 'keypoints_equal(observed, self.kpsoi_1px_right)', 'np.array_equal(observed, self.images_1px_bottom)', 'np.array_equal(observed, self.images_1px_bottom)', 'array_equal_lists(observed, [self.image_1px_bottom])', 'array_equal_lists(observed, [self.image_1px_bottom])', 'keypoints_equal(observed, self.kpsoi_1px_bottom)', 'keypoints_equal(observed, self.kpsoi_1px_bottom)', 'len(observed_aug[0].nonzero()[0]) == 1', 'nb_changed_aug >= int(nb_iterations * 0.7)', '(centers_aug > int(nb_iterations * (1/9 * 0.6))).all()', '(centers_aug < int(nb_iterations * (1/9 * 1.4))).all()', 'len(observed_aug_det[0].nonzero()[0]) == 1', 'nb_changed_aug_det == 0', 'observed.shape == actual.shape', 'np.isclose(observed.min_value, actual.min_value,', 'np.isclose(observed.max_value, actual.max_value,', 'np.array_equal(observed.get_arr(),', 'np.array_equal(observed.get_arr(),', 'np.array_equal(observed.get_arr(),', 'np.array_equal(observed.get_arr(),', 'np.array_equal(observed.get_arr(),', 'np.array_equal(observed.get_arr(),', 'np.array_equal(observed, self.images_rot90)', 'np.array_equal(observed, self.images_rot90)', 'array_equal_lists(observed, [self.image_rot90])', 'array_equal_lists(observed, [self.image_rot90])', 'keypoints_equal(observed, self.kpsoi_rot90)', 'keypoints_equal(observed, self.kpsoi_rot90)', 'nb_changed_aug >= int(nb_iterations * 0.9)', 'pixels_sums_aug[1, 1] > (nb_iterations * 0.98)', 'pixels_sums_aug[1, 1] < (nb_iterations * 1.02)', '(', '(', 'nb_changed_aug_det == 0', 'pixels_sums_aug_det[1, 1] > (nb_iterations * 0.98)', 'pixels_sums_aug_det[1, 1] < (nb_iterations * 1.02)', 'hm_aug.shape == (7, 6)', 'hm_aug.arr_0to1.shape == (7, 6, 1)', '(same / img_aug_mask.size) >= 0.95', 'hm_aug.shape == (56, 48)', 'hm_aug.arr_0to1.shape == (28, 24, 1)', '(same / img_aug_mask.size) >= 0.9', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', 'nb_changed_aug >= int(nb_iterations * 0.9)', 'nb_changed_aug_det == 0', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'np.allclose(observed.arr_0to1, expected.arr_0to1)', 'nb_labels == 4', 'nb_labels == 4', 'nb_labels == 4', '(same / img_aug_mask.size) >= 0.95', '(same / img_aug_mask.size) >= 0.95', 'nb_labels == 4', 'nb_labels == 4', '(same / img_aug_mask.size) >= 0.95', '(same / img_aug_mask.size) >= 0.95', 'kps_aug.shape == (100, 200, 3)', 'not np.allclose(', 'kps_aug.shape == (200, 100, 3)', 'not np.allclose(', 'kps_aug.shape == (200, 100, 3)', 'len(kps_aug.keypoints) == 0', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (100, 200, 3)', 'not psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[0].is_valid', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (200, 100, 3)', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[0].is_valid', 'psoi_aug.shape == (200, 100, 3)', 'len(psoi_aug.polygons) == 0', 'kpsois_aug[0].shape == img.shape', 'kpsois_aug[1].shape == img.shape', 'False', 'False', 'np.array_equal(img_aug_indices, kpsois_aug_indices)', 'len(set(img_aug_indices)) == 2', 'len(set(kpsois_aug_indices)) == 2', 'psois_aug[0].shape == img.shape', 'psois_aug[1].shape == img.shape', 'psois_aug[0].polygons[0].is_valid', 'psois_aug[1].polygons[0].is_valid', 'False', 'False', 'np.array_equal(img_aug_indices, psois_aug_indices)', 'len(set(img_aug_indices)) == 2', 'len(set(psois_aug_indices)) == 2', 'np.all(image_aug[~self.translate_mask] == 0)', 'np.all(image_aug[self.translate_mask] == 1)', 'np.all(image_aug[~self.translate_mask] == 0)', 'np.all(image_aug[self.translate_mask] == value)', 'image_aug.dtype.name == dtype', 'np.all(_isclose(image_aug[~self.translate_mask], 0))', 'np.all(_isclose(image_aug[self.translate_mask],', 'image_aug.dtype.name == image.dtype.name', '(', 'image_aug.dtype.name == dtype', '_compute_matching(', '_compute_matching(', 'image_aug.dtype.name == dtype', '_compute_matching(', '_compute_matching(', 'np.all(image_aug[~self.translate_mask] == 0)', 'np.all(image_aug[self.translate_mask] == 1)', 'image_aug.dtype.name == dtype', 'np.all(image_aug[~self.translate_mask] == 0)', 'np.all(image_aug[self.translate_mask] == value)', 'image_aug.dtype.name == dtype', 'np.all(_isclose(image_aug[~self.translate_mask], 0))', 'np.all(_isclose(image_aug[self.translate_mask],', 'image_aug.dtype.name == image.dtype.name', '(np.sum(image_aug == image_exp) / image.size) > 0.9', 'image_aug.dtype.name == dtype', '(', 'image_aug.dtype.name == dtype', '(']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'array_equal_lists(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y > 2', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y > 2', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y == 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y == 2', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y == 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y == 2', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0].keypoints[0].x == 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x == 2', 'observed[0].keypoints[2].y > 2', 'observed[0].keypoints[0].x == 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x == 2', 'observed[0].keypoints[2].y > 2', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'nb_changed_aug >= int(nb_iterations * 0.8)', 'nb_changed_aug_det == 0', 'isinstance(aug.scale, iap.Uniform)', 'isinstance(aug.scale.a, iap.Deterministic)', 'isinstance(aug.scale.b, iap.Deterministic)', '0.7 - 1e-8 < aug.scale.a.value < 0.7 + 1e-8', '0.9 - 1e-8 < aug.scale.b.value < 0.9 + 1e-8', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'len(observed_aug[0].nonzero()[0]) == 1', 'len(observed_aug_det[0].nonzero()[0]) == 1', 'nb_changed_aug >= int(nb_iterations * 0.7)', 'nb_changed_aug_det == 0', '(centers_aug > int(nb_iterations * (1/9 * 0.6))).all()', '(centers_aug < int(nb_iterations * (1/9 * 1.4))).all()', 'isinstance(aug.translate, iap.Uniform)', 'isinstance(aug.translate.a, iap.Deterministic)', 'isinstance(aug.translate.b, iap.Deterministic)', '0.7 - 1e-8 < aug.translate.a.value < 0.7 + 1e-8', '0.9 - 1e-8 < aug.translate.b.value < 0.9 + 1e-8', 'isinstance(aug.translate, iap.DiscreteUniform)', 'isinstance(aug.translate.a, iap.Deterministic)', 'isinstance(aug.translate.b, iap.Deterministic)', 'aug.translate.a.value == 1', 'aug.translate.b.value == 10', 'observed.shape == heatmaps.shape', 'np.isclose(observed.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(observed.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == heatmaps.shape', 'np.isclose(observed.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(observed.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == heatmaps.shape', 'np.isclose(observed.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(observed.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == segmaps.shape', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == segmaps.shape', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == segmaps.shape', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'isinstance(aug.rotate, iap.Uniform)', 'isinstance(aug.rotate.a, iap.Deterministic)', 'aug.rotate.a.value == 10', 'isinstance(aug.rotate.b, iap.Deterministic)', 'aug.rotate.b.value == 20', 'nb_changed_aug >= int(nb_iterations * 0.9)', 'nb_changed_aug_det == 0', 'pixels_sums_aug[1, 1] > (nb_iterations * 0.98)', 'pixels_sums_aug[1, 1] < (nb_iterations * 1.02)', '(', '(', 'hm_aug.shape == (7, 6)', 'hm_aug.arr_0to1.shape == (7, 6, 1)', '(same / img_aug_mask.size) >= 0.95', 'hm_aug.shape == (56, 48)', 'hm_aug.arr_0to1.shape == (28, 24, 1)', '(same / img_aug_mask.size) >= 0.9', 'isinstance(aug.shear, iap.Uniform)', 'isinstance(aug.shear.a, iap.Deterministic)', 'aug.shear.a.value == 10', 'isinstance(aug.shear.b, iap.Deterministic)', 'aug.shear.b.value == 20', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', 'nb_changed_aug >= int(nb_iterations * 0.9)', 'nb_changed_aug_det == 0', 'pixels_sums_aug[1, 1] > (nb_iterations * 0.98)', 'pixels_sums_aug[1, 1] < (nb_iterations * 1.02)', 'len(set(averages)) > 200', 'isinstance(aug.cval, iap.Uniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 0', 'aug.cval.b.value == 255', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 1', 'aug.cval.b.value == 5', 'isinstance(aug.mode, iap.Choice)', 'isinstance(aug.mode, iap.Deterministic)', 'aug.mode.value == ', 'isinstance(aug.mode, iap.Choice)', '(', 'isinstance(aug.mode, iap.Choice)', '(', 'aug.fit_output is True', 'np.array_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'np.allclose(observed.arr_0to1, expected.arr_0to1)', 'nb_labels == 4', 'nb_labels == 4', 'nb_labels == 4', 'nb_labels == 4', '(same / img_aug_mask.size) >= 0.95', 'nb_labels == 4', 'nb_labels == 4', '(same / img_aug_mask.size) >= 0.95', 'kps_aug.shape == (100, 200, 3)', 'not np.allclose([kps_aug.keypoints[0].x, kps_aug.keypoints[0].y],', 'kps_aug.shape == (200, 100, 3)', 'not np.allclose([kps_aug.keypoints[0].x, kps_aug.keypoints[0].y],', 'kps_aug.shape == (200, 100, 3)', 'len(kps_aug.keypoints) == 0', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (100, 200, 3)', 'not psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[0].is_valid', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (200, 100, 3)', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[0].is_valid', 'psoi_aug.shape == (200, 100, 3)', 'len(psoi_aug.polygons) == 0', 'kpsois_aug[0].shape == img.shape', 'kpsois_aug[1].shape == img.shape', 'False', 'False', 'np.array_equal(img_aug_indices, kpsois_aug_indices)', 'len(set(img_aug_indices)) == 2', 'len(set(kpsois_aug_indices)) == 2', 'psois_aug[0].shape == img.shape', 'psois_aug[1].shape == img.shape', 'psois_aug[0].polygons[0].is_valid', 'psois_aug[1].polygons[0].is_valid', 'False', 'False', 'np.array_equal(img_aug_indices, psois_aug_indices)', 'len(set(img_aug_indices)) == 2', 'len(set(psois_aug_indices)) == 2', 'poly.is_valid', 'ext[0][0] < ext[2][0] < ext[1][0]', 'ext[0][1] < ext[2][1]', 'np.allclose(ext[0][1], ext[1][1])', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Deterministic)  # scale', 'isinstance(params[1], iap.Deterministic)  # translate', 'isinstance(params[2], iap.Deterministic)  # rotate', 'isinstance(params[3], iap.Deterministic)  # shear', 'params[0].value == 1  # scale', 'params[1].value == 2  # translate', 'params[2].value == 3  # rotate', 'params[3].value == 4  # shear', 'params[4].value == 1  # order', 'params[5].value == 0  # cval', 'params[6].value ==   # mode', 'params[7] ==   # backend', 'params[8] is True  # fit_output', 'image_aug.dtype.name == image.dtype.name', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == 1)', 'image_aug.dtype.name == dtype', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == value)', 'image_aug.dtype.name == dtype', 'np.all(_isclose(image_aug[~mask], 0))', 'np.all(_isclose(image_aug[mask], np.float128(value)))', 'np.any(mask_inner) and np.any(mask_outer)', '(np.sum(image_aug == image_exp)/image.size) > thresh_inner', '_compute_matching(', '_compute_matching(', 'image_aug.dtype.name == dtype', '_compute_matching(', '_compute_matching(', 'image_aug.dtype.name == image.dtype.name', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == 1)', 'image_aug.dtype.name == dtype', 'np.all(image_aug[~mask] == 0)', 'np.all(image_aug[mask] == value)', 'image_aug.dtype.name == dtype', 'np.all(_isclose(image_aug[~mask], 0))', 'np.all(_isclose(image_aug[mask], np.float128(value)))', '(np.sum(image_aug == image_exp) / image.size) > 0.9', 'image_aug.dtype.name == dtype', '(np.sum(image_aug == image_exp) / image.size) > 0.9', 'image_aug.dtype.name == dtype', '(']",[],[],[],[],[],[],[],[],[],[],[],[]
1844,aleju,kontakt@ajung.name,2019-09-01 14:21:34+02:00,807808f4469ae04aaa1b291bf1a3ff33c23b6999,https://github.com/aleju/imgaug/commit/807808f4469ae04aaa1b291bf1a3ff33c23b6999,Migrate tests for PiecewiseAffine to unittest,1,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,181,0,0,0,0,0,0,0,0,0,0,0,0,189,0,0,0,0,0,0,0,0,0,0,0,0,['class TestPiecewiseAffine(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.isclose(observed.min_value, actual.min_value,', 'np.isclose(observed.max_value, actual.max_value,', 'isinstance(aug.scale, iap.Choice)', '0.01 - 1e-8 < aug.scale.a[0] < 0.01 + 1e-8', '0.10 - 1e-8 < aug.scale.a[1] < 0.10 + 1e-8', 'isinstance(aug.jitter.scale, iap.Uniform)', 'isinstance(aug.jitter.scale.a, iap.Deterministic)', 'isinstance(aug.jitter.scale.b, iap.Deterministic)', '0.01 - 1e-8 < aug.jitter.scale.a.value < 0.01 + 1e-8', '0.10 - 1e-8 < aug.jitter.scale.b.value < 0.10 + 1e-8', 'isinstance(aug.jitter.scale, iap.Uniform)', 'isinstance(aug.jitter.scale.a, iap.Deterministic)', 'isinstance(aug.jitter.scale.b, iap.Deterministic)', '0.01 - 1e-8 < aug.jitter.scale.a.value < 0.01 + 1e-8', '0.10 - 1e-8 < aug.jitter.scale.b.value < 0.10 + 1e-8', 'in str(exc)', 'got_exception', 'isinstance(aug.nb_rows, iap.Choice)', 'aug.nb_rows.a[0] == 4', 'aug.nb_rows.a[1] == 20', 'isinstance(aug.nb_rows, iap.DiscreteUniform)', 'isinstance(aug.nb_rows.a, iap.Deterministic)', 'isinstance(aug.nb_rows.b, iap.Deterministic)', 'aug.nb_rows.a.value == 4', 'aug.nb_rows.b.value == 20', 'isinstance(aug.nb_rows, iap.DiscreteUniform)', 'isinstance(aug.nb_rows.a, iap.Deterministic)', 'isinstance(aug.nb_rows.b, iap.Deterministic)', 'aug.nb_rows.a.value == 4', 'aug.nb_rows.b.value == 20', 'in str(exc)', 'got_exception', 'isinstance(aug.nb_cols, iap.Choice)', 'aug.nb_cols.a[0] == 4', 'aug.nb_cols.a[1] == 20', 'isinstance(aug.nb_cols, iap.DiscreteUniform)', 'isinstance(aug.nb_cols.a, iap.Deterministic)', 'isinstance(aug.nb_cols.b, iap.Deterministic)', 'aug.nb_cols.a.value == 4', 'aug.nb_cols.b.value == 20', 'isinstance(aug.nb_cols, iap.DiscreteUniform)', 'isinstance(aug.nb_cols.a, iap.Deterministic)', 'isinstance(aug.nb_cols.b, iap.Deterministic)', 'aug.nb_cols.a.value == 4', 'aug.nb_cols.b.value == 20', 'in str(exc)', 'got_exception', 'isinstance(aug.order, iap.Deterministic)', 'aug.order.value == 0', 'isinstance(aug.order, iap.Choice)', 'all([v in aug.order.a for v in [0, 1, 3]])', 'isinstance(aug.order, iap.Choice)', 'all([v in aug.order.a for v in [0, 1, 3]])', 'isinstance(aug.order, iap.Choice)', 'all([v in aug.order.a for v in [0, 1, 3, 4, 5]])', 'in str(exc)', 'got_exception', 'isinstance(aug.cval, iap.Choice)', 'aug.cval.a[0] == 0', 'aug.cval.a[1] == 10', 'isinstance(aug.cval, iap.Uniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 0', 'aug.cval.b.value == 10', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 0', 'aug.cval.b.value == 10', 'isinstance(aug.cval, iap.Uniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 0', 'aug.cval.b.value == 255', 'in str(exc)', 'got_exception', 'isinstance(aug.mode, iap.Deterministic)', 'aug.mode.value == ', 'isinstance(aug.mode, iap.Choice)', 'all([', 'isinstance(aug.mode, iap.Choice)', 'all([', 'isinstance(aug.mode, iap.Choice)', 'all([', 'in str(exc)', 'got_exception', '(', '(', 'observed.shape == self.heatmaps.shape', '(', '(', 'observed.shape == self.segmaps.shape', 'np.average(observed_arr_left_col == 1) > 0.98', 'np.average(observed_arr_right_col == 1) > 0.98', 'np.average(observed_arr[~self.mask] == 0) > 0.9', 'np.array_equal(observed, self.image)', 'observed.shape == self.heatmaps.shape', 'np.array_equal(observed_arr, self.heatmaps.get_arr())', 'observed.shape == self.segmaps.shape', 'np.array_equal(observed_arr, self.segmaps.get_arr())', 'kpsoi_aug.shape == (14, 14, 3)', 'np.allclose(kpsoi_aug.keypoints[0].x, 5)', 'np.allclose(kpsoi_aug.keypoints[0].y, 3)', 'np.allclose(kpsoi_aug.keypoints[1].x, 3)', 'np.allclose(kpsoi_aug.keypoints[1].y, 8)', 'observed.shape == img.shape', 'observed.polygons[0].exterior_almost_equals(psoi.polygons[0])', 'observed.polygons[1].exterior_almost_equals(psoi.polygons[1])', 'observed.polygons[0].is_valid', 'observed.polygons[1].is_valid', '(', 'observed1.shape == self.heatmaps.shape', 'observed2.shape == self.heatmaps.shape', '(', 'observed1.shape == self.segmaps.shape', 'observed2.shape == self.segmaps.shape', '(', 'hm_aug.shape == (60, 80, 3)', '(same / img_aug_mask.size) >= 0.98', 'segmap_aug.shape == (60, 80, 3)', '(same / img_aug_mask.size) >= 0.9', 'hm_aug.shape == (60, 80, 3)', 'hm_aug.arr_0to1.shape == (30, 40+10, 1)', '(same / img_aug_mask.size) >= 0.9  # seems to be 0.948 actually', 'segmaps_aug.shape == (60, 80, 3)', 'segmaps_aug.arr.shape == (30, 40+10, 1)', '(same / img_aug_mask.size) >= 0.9', 'kpsoi_aug.shape == (24, 30, 3)', 'np.max(patch1) > 150', 'np.max(patch2) > 150', 'np.average(img_kps_aug) < 40', 'not keypoints_equal([kpsoi], observed_kpsoi)', 'observed_img[int(kp.y), int(kp.x)] > 0', 'observed_psoi.shape == img.shape', 'poly_aug.is_valid', 'observed_img[y, x] > 0', 'seen[0] > 0', 'seen[1] > 0', 'std1 < std2', 'seen[0] > 0', 'seen[1] > 0', 'std1 < std2', 'seen[0] > 0', 'seen[1] > 0', 'np.sum([observed[:, :] == [0, 0, 0]]) > 0', 'np.sum([observed.get_arr()[:, :] >= 0.01]) == 0', 'np.sum([observed.get_arr()[:, :] > 0]) == 0', 'seen[0] > 5', 'seen[1] > 5', 'seen[2] <= 4', 'keypoints_equal([kpsoi], observed)', 'observed.shape == (10, 10, 3)', 'len(observed.keypoints) == 0', 'observed.shape == (10, 10, 3)', 'observed.polygons[0].exterior_almost_equals(poly)', 'observed.polygons[0].is_valid', 'observed.shape == (10, 10, 3)', 'len(observed.polygons) == 0', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'isinstance(params[2], iap.Deterministic)', 'isinstance(params[3], iap.Deterministic)', 'isinstance(params[4], iap.Deterministic)', 'isinstance(params[5], iap.Deterministic)', 'params[6] is False', '0.1 - 1e-8 < params[0].value < 0.1 + 1e-8', 'params[1].value == 8', 'params[2].value == 10', 'params[3].value == 1', 'params[4].value == 2', 'params[5].value == ', 'image_aug.dtype.name == image.dtype.name', 'not np.all(image_aug == 1)', 'np.any(image_aug[~self.other_dtypes_mask] == 1)', 'image_aug.dtype.name == dtype', 'not np.all(image_aug == value)', 'np.any(image_aug[~self.other_dtypes_mask] == value)', 'image_aug.dtype.name == dtype', 'not np.all(_isclose(image_aug, np.float128(value)))', 'np.any(_isclose(image_aug[~self.other_dtypes_mask],']",[],[],[],[],[],[],[],[],[],[],[],[],"['100.0 < np.average(observed[mask]) < np.average(img[mask])', '100.0-75.0 > np.average(observed[~mask]) > np.average(img[~mask])', 'observed.shape == heatmaps.shape', 'np.isclose(observed.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(observed.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', '(', '(', 'observed.shape == segmaps.shape', 'np.average(observed_arr_left_col == 1) > 0.98', 'np.average(observed_arr_right_col == 1) > 0.98', 'np.average(observed_arr[~mask] == 0) > 0.9', 'np.array_equal(observed, img)', 'observed.shape == heatmaps.shape', 'np.isclose(observed.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(observed.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', 'np.array_equal(observed_arr, heatmaps_arr)', 'observed.shape == segmaps.shape', 'np.array_equal(observed_arr, segmaps_arr)', 'kpsoi_aug.shape == (14, 14, 3)', 'np.allclose(kpsoi_aug.keypoints[0].x, 5)', 'np.allclose(kpsoi_aug.keypoints[0].y, 3)', 'np.allclose(kpsoi_aug.keypoints[1].x, 3)', 'np.allclose(kpsoi_aug.keypoints[1].y, 8)', 'np.average(observed1[~mask]) < np.average(observed2[~mask])', 'observed1.shape == heatmaps.shape', 'np.isclose(observed1.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(observed1.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', 'observed2.shape == heatmaps.shape', 'np.isclose(observed2.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(observed2.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', 'np.average(observed1_arr[~mask]) < np.average(observed2_arr[~mask])', 'observed1.shape == segmaps.shape', 'observed2.shape == segmaps.shape', '(', 'hm_aug.shape == (60, 80, 3)', 'np.isclose(hm_aug.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(hm_aug.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', '(same / img_aug_mask.size) >= 0.98', 'segmap_aug.shape == (60, 80, 3)', '(same / img_aug_mask.size) >= 0.9', 'hm_aug.shape == (60, 80, 3)', 'hm_aug.arr_0to1.shape == (30, 40+10, 1)', '(same / img_aug_mask.size) >= 0.9  # seems to be 0.948 actually', 'segmaps_aug.shape == (60, 80, 3)', 'segmaps_aug.arr.shape == (30, 40+10, 1)', '(same / img_aug_mask.size) >= 0.9', 'kpsoi_aug.shape == (24, 30, 3)', 'np.max(patch1) > 150', 'np.max(patch2) > 150', 'np.average(img_kps_aug) < 40', 'isinstance(aug.scale, iap.Choice)', '0.01 - 1e-8 < aug.scale.a[0] < 0.01 + 1e-8', '0.10 - 1e-8 < aug.scale.a[1] < 0.10 + 1e-8', 'seen[0] > 0', 'seen[1] > 0', 'isinstance(aug.jitter.scale, iap.Uniform)', 'isinstance(aug.jitter.scale.a, iap.Deterministic)', 'isinstance(aug.jitter.scale.b, iap.Deterministic)', '0.01 - 1e-8 < aug.jitter.scale.a.value < 0.01 + 1e-8', '0.10 - 1e-8 < aug.jitter.scale.b.value < 0.10 + 1e-8', 'isinstance(aug.jitter.scale, iap.Uniform)', 'isinstance(aug.jitter.scale.a, iap.Deterministic)', 'isinstance(aug.jitter.scale.b, iap.Deterministic)', '0.01 - 1e-8 < aug.jitter.scale.a.value < 0.01 + 1e-8', '0.10 - 1e-8 < aug.jitter.scale.b.value < 0.10 + 1e-8', 'in str(exc)', 'got_exception', 'std1 < std2', 'isinstance(aug.nb_rows, iap.Choice)', 'aug.nb_rows.a[0] == 4', 'aug.nb_rows.a[1] == 20', 'seen[0] > 0', 'seen[1] > 0', 'isinstance(aug.nb_rows, iap.DiscreteUniform)', 'isinstance(aug.nb_rows.a, iap.Deterministic)', 'isinstance(aug.nb_rows.b, iap.Deterministic)', 'aug.nb_rows.a.value == 4', 'aug.nb_rows.b.value == 20', 'isinstance(aug.nb_rows, iap.DiscreteUniform)', 'isinstance(aug.nb_rows.a, iap.Deterministic)', 'isinstance(aug.nb_rows.b, iap.Deterministic)', 'aug.nb_rows.a.value == 4', 'aug.nb_rows.b.value == 20', 'in str(exc)', 'got_exception', 'isinstance(aug.nb_cols, iap.Choice)', 'aug.nb_cols.a[0] == 4', 'aug.nb_cols.a[1] == 20', 'seen[0] > 0', 'seen[1] > 0', 'isinstance(aug.nb_cols, iap.DiscreteUniform)', 'isinstance(aug.nb_cols.a, iap.Deterministic)', 'isinstance(aug.nb_cols.b, iap.Deterministic)', 'aug.nb_cols.a.value == 4', 'aug.nb_cols.b.value == 20', 'isinstance(aug.nb_cols, iap.DiscreteUniform)', 'isinstance(aug.nb_cols.a, iap.Deterministic)', 'isinstance(aug.nb_cols.b, iap.Deterministic)', 'aug.nb_cols.a.value == 4', 'aug.nb_cols.b.value == 20', 'in str(exc)', 'got_exception', 'isinstance(aug.order, iap.Deterministic)', 'aug.order.value == 0', 'isinstance(aug.order, iap.Choice)', 'all([v in aug.order.a for v in [0, 1, 3]])', 'isinstance(aug.order, iap.Choice)', 'all([v in aug.order.a for v in [0, 1, 3]])', 'isinstance(aug.order, iap.Choice)', 'all([v in aug.order.a for v in [0, 1, 3, 4, 5]])', 'in str(exc)', 'got_exception', 'np.sum([observed[:, :] == [0, 0, 0]]) > 0', 'np.sum([observed.get_arr()[:, :] >= 0.01]) == 0', 'np.sum([observed.get_arr()[:, :] > 0]) == 0', 'isinstance(aug.cval, iap.Choice)', 'aug.cval.a[0] == 0', 'aug.cval.a[1] == 10', 'seen[0] > 5', 'seen[1] > 5', 'seen[2] <= 4', 'isinstance(aug.cval, iap.Uniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 0', 'aug.cval.b.value == 10', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 0', 'aug.cval.b.value == 10', 'isinstance(aug.cval, iap.Uniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 0', 'aug.cval.b.value == 255', 'in str(exc)', 'got_exception', 'isinstance(aug.mode, iap.Deterministic)', 'aug.mode.value == ', 'isinstance(aug.mode, iap.Choice)', 'all([', 'isinstance(aug.mode, iap.Choice)', 'all([', 'isinstance(aug.mode, iap.Choice)', 'all([', 'in str(exc)', 'got_exception', 'not keypoints_equal([kpsoi], observed_kpsoi)', 'observed_img[int(kp.y), int(kp.x)] > 0', 'keypoints_equal([kpsoi], observed)', 'keypoints_equal([kpsoi], observed)', 'observed.shape == img.shape', 'len(observed.keypoints) == 0', 'observed_psoi.shape == img.shape', 'poly_aug.is_valid', 'observed_img[y, x] > 0', 'observed.shape == img.shape', 'observed.polygons[0].exterior_almost_equals(psoi.polygons[0])', 'observed.polygons[1].exterior_almost_equals(psoi.polygons[1])', 'observed.polygons[0].is_valid', 'observed.polygons[1].is_valid', 'observed.shape == img.shape', 'observed.polygons[0].exterior_almost_equals(poly)', 'observed.polygons[0].is_valid', 'observed.shape == img.shape', 'len(observed.polygons) == 0', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'isinstance(params[2], iap.Deterministic)', 'isinstance(params[3], iap.Deterministic)', 'isinstance(params[4], iap.Deterministic)', 'isinstance(params[5], iap.Deterministic)', 'params[6] is False', '0.1 - 1e-8 < params[0].value < 0.1 + 1e-8', 'params[1].value == 8', 'params[2].value == 10', 'params[3].value == 1', 'params[4].value == 2', 'params[5].value == ', 'image_aug.dtype.name == image.dtype.name', 'not np.all(image_aug == 1)', 'np.any(image_aug[~mask] == 1)', 'image_aug.dtype.name == dtype', 'not np.all(image_aug == value)', 'np.any(image_aug[~mask] == value)', 'image_aug.dtype.name == dtype', 'not np.all(_isclose(image_aug, np.float128(value)))', 'np.any(_isclose(image_aug[~mask], np.float128(value)))']",[],[],[],[],[],[],[],[],[],[],[],[]
1845,aleju,kontakt@ajung.name,2019-09-01 15:48:03+02:00,be2e4118e3f74f887f0650cabddbc20dc900cdf5,https://github.com/aleju/imgaug/commit/be2e4118e3f74f887f0650cabddbc20dc900cdf5,Migrate tests of PerspectiveTransform to unittest,2,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,0,90,0,0,0,0,0,0,0,0,0,0,0,0,['class TestPerspectiveTransform(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.isclose(observed.min_value, actual.min_value, rtol=0, atol=1e-6)', 'np.isclose(observed.max_value, actual.max_value, rtol=0, atol=1e-6)', 'observed.shape == actual.shape', 'isinstance(aug.jitter.scale, iap.Uniform)', 'isinstance(aug.jitter.scale.a, iap.Deterministic)', 'isinstance(aug.jitter.scale.b, iap.Deterministic)', '0.1 - 1e-8 < aug.jitter.scale.a.value < 0.1 + 1e-8', '0.2 - 1e-8 < aug.jitter.scale.b.value < 0.2 + 1e-8', 'isinstance(aug.jitter.scale, iap.Choice)', 'len(aug.jitter.scale.a) == 3', '0.1 - 1e-8 < aug.jitter.scale.a[0] < 0.1 + 1e-8', '0.2 - 1e-8 < aug.jitter.scale.a[1] < 0.2 + 1e-8', '0.3 - 1e-8 < aug.jitter.scale.a[2] < 0.3 + 1e-8', 'isinstance(aug.jitter.scale, iap.Choice)', 'len(aug.jitter.scale.a) == 3', '0.1 - 1e-8 < aug.jitter.scale.a[0] < 0.1 + 1e-8', '0.2 - 1e-8 < aug.jitter.scale.a[1] < 0.2 + 1e-8', '0.3 - 1e-8 < aug.jitter.scale.a[2] < 0.3 + 1e-8', 'in str(exc)', 'got_exception', 'isinstance(aug.mode, iap.Choice)', 'isinstance(aug.mode, iap.Deterministic)', 'aug.mode.value == ', 'isinstance(aug.mode, iap.Choice)', '(', 'isinstance(aug.mode, iap.Choice)', '(', 'all([', 'np.average(', 'all([', 'all([', '(same / img_aug_mask.size) >= 0.99', 'all([', 'all([', '(same / img_aug_mask.size) >= 0.99', 'all([', 'all([', '(same / img_aug_mask.size) >= 0.96', 'all([', 'all([', '(same / img_aug_mask.size) >= 0.92', 'observed.shape == self.image.shape', 'np.average(', 'observed.shape == self.heatmaps.shape', 'np.average(np.abs(observed.get_arr() - expected)) < 30.0', 'observed.shape == self.segmaps.shape', 'np.average(observed.get_arr() != expected) < 0.05', 'observed_i.shape == imgs.shape[1:3]', 'np.average(', 'kp_expected.x - 1.5 < kp_observed.x < kp_expected.x + 1.5', 'kp_expected.y - 1.5 < kp_observed.y < kp_expected.y + 1.5', 'kp_expected.x - 1.5 < kp_observed.x < kp_expected.x + 1.5', 'kp_expected.y - 1.5 < kp_observed.y < kp_expected.y + 1.5', 'kpsoi_aug.shape == img.shape', 'img_aug[y, x] > 10', 'observed.shape == (20, 10, 3)', 'len(observed.keypoints) == 0', 'observed.shape == (30 - 12, 30 - 12, 3)', 'len(observed.polygons) == 1', 'observed.polygons[0].is_valid', 'observed.polygons[0].exterior_almost_equals(', 'observed.polygons[0].exterior_almost_equals(', 'psoi_aug.shape == img.shape', 'poly_aug.is_valid', 'np.any(img_ex > 10)', 'observed.shape == (20, 10, 3)', 'len(observed.polygons) == 0', 'observed.shape == (30, 30, 3)', 'len(observed.polygons) == 1', 'observed.polygons[0].is_valid', 'poly0.exterior_almost_equals(', '(img_aug == 255).all()', '(img_aug255 == 255).all()', 'not (img_aug0 == 255).all()', 'isinstance(params[0], iap.Normal)', 'isinstance(params[0].scale, iap.Deterministic)', '0.1 - 1e-8 < params[0].scale.value < 0.1 + 1e-8', 'params[1] is False', 'params[2].value == 0', 'params[3].value == ', 'image_aug.dtype.name == image.dtype.name', 'image_aug.shape == expected.shape', '(np.sum(image_aug == expected) / expected.size) > 0.9', 'image_aug.dtype.name == dtype', 'image_aug.shape == expected.shape', '(', 'image_aug.dtype.name == dtype', 'image_aug.shape == expected.shape', '(']",[],[],[],[],[],[],[],[],[],[],[],[],"['observed.shape == actual.shape', 'np.isclose(observed.min_value, actual.min_value,', 'np.isclose(observed.max_value, actual.max_value,', 'np.isclose(observed.min_value, actual.min_value,', 'np.isclose(observed.max_value, actual.max_value,', 'all([', 'np.average(', 'all([', 'all([', '(same / img_aug_mask.size) >= 0.99', 'all([', 'all([', '(same / img_aug_mask.size) >= 0.99', 'all([', 'all([', '(same / img_aug_mask.size) >= 0.96', 'all([', 'all([', '(same / img_aug_mask.size) >= 0.92', 'observed.shape == img.shape', 'np.average(', 'observed.shape == heatmaps.shape', 'np.isclose(observed.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(observed.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', 'np.average(np.abs(observed.get_arr() - expected)) < 30.0', 'observed.shape == segmaps.shape', 'np.average(observed.get_arr() != expected) < 0.05', 'observed_i.shape == imgs.shape[1:3]', 'np.average(', 'isinstance(aug.jitter.scale, iap.Uniform)', 'isinstance(aug.jitter.scale.a, iap.Deterministic)', 'isinstance(aug.jitter.scale.b, iap.Deterministic)', '0.1 - 1e-8 < aug.jitter.scale.a.value < 0.1 + 1e-8', '0.2 - 1e-8 < aug.jitter.scale.b.value < 0.2 + 1e-8', 'isinstance(aug.jitter.scale, iap.Choice)', 'len(aug.jitter.scale.a) == 3', '0.1 - 1e-8 < aug.jitter.scale.a[0] < 0.1 + 1e-8', '0.2 - 1e-8 < aug.jitter.scale.a[1] < 0.2 + 1e-8', '0.3 - 1e-8 < aug.jitter.scale.a[2] < 0.3 + 1e-8', 'isinstance(aug.jitter.scale, iap.Choice)', 'len(aug.jitter.scale.a) == 3', '0.1 - 1e-8 < aug.jitter.scale.a[0] < 0.1 + 1e-8', '0.2 - 1e-8 < aug.jitter.scale.a[1] < 0.2 + 1e-8', '0.3 - 1e-8 < aug.jitter.scale.a[2] < 0.3 + 1e-8', 'in str(exc)', 'got_exception', 'kp_expected.x - 1.5 < kp_observed.x < kp_expected.x + 1.5', 'kp_expected.y - 1.5 < kp_observed.y < kp_expected.y + 1.5', 'kp_expected.x - 1.5 < kp_observed.x < kp_expected.x + 1.5', 'kp_expected.y - 1.5 < kp_observed.y < kp_expected.y + 1.5', 'kpsoi_aug.shape == img.shape', 'img_aug[y, x] > 10', 'observed.shape == img.shape', 'len(observed.keypoints) == 0', 'observed.shape == (30 - 12, 30 - 12, 3)', 'len(observed.polygons) == 1', 'observed.polygons[0].is_valid', 'observed.shape == (30, 30, 3)', 'len(observed.polygons) == 1', 'observed.polygons[0].is_valid', 'psoi_aug.shape == img.shape', 'poly_aug.is_valid', 'np.any(img_ex > 10)', 'observed.shape == img.shape', 'len(observed.polygons) == 0', 'isinstance(aug.mode, iap.Choice)', 'isinstance(aug.mode, iap.Deterministic)', 'aug.mode.value == ', 'isinstance(aug.mode, iap.Choice)', '(', 'isinstance(aug.mode, iap.Choice)', '(', '(img_aug == 255).all()', '(img_aug == 255).all()', 'not (img_aug == 255).all()', 'isinstance(params[0], iap.Normal)', 'isinstance(params[0].scale, iap.Deterministic)', '0.1 - 1e-8 < params[0].scale.value < 0.1 + 1e-8', 'params[1] is False', 'params[2].value == 0', 'params[3].value == ', 'image_aug.dtype.name == image.dtype.name', 'image_aug.shape == expected.shape', '(np.sum(image_aug == expected) / expected.size) > 0.9', 'image_aug.dtype.name == dtype', 'image_aug.shape == expected.shape', '(np.sum(image_aug == expected) / expected.size) > 0.7', 'image_aug.dtype.name == dtype', 'image_aug.shape == expected.shape', '(']",[],[],[],[],[],[],[],[],[],[],[],[]
1846,aleju,kontakt@ajung.name,2019-09-01 17:01:02+02:00,3fe49152b74109d37fbe3cb55b9a5ed41a3aa9de,https://github.com/aleju/imgaug/commit/3fe49152b74109d37fbe3cb55b9a5ed41a3aa9de,Migrate tests for Rot90 to unittest,1,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,0,0,0,0,0,0,0,0,0,0,0,0,131,0,0,0,0,0,0,0,0,0,0,0,0,['class TestRot90(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug.k, iap.Choice)', 'len(aug.k.a) == 2', 'aug.k.a[0] == 1', 'aug.k.a[1] == 3', 'img_aug.dtype.name == ', 'np.array_equal(img_aug, self.image)', '(hms_aug.arr_0to1.dtype.name', 'np.allclose(hms_aug.arr_0to1, self.heatmaps.arr_0to1)', 'hms_aug.shape == self.heatmaps.shape', '(', 'np.allclose(segmaps_aug.arr, self.segmaps.arr)', 'segmaps_aug.shape == self.segmaps.shape', 'kpsoi_aug.shape == self.kpsoi.shape', 'np.allclose([kp_aug.x, kp_aug.y], [kp.x, kp.y])', 'psoi_aug.shape == self.psoi.shape', 'len(psoi_aug.polygons) == 1', 'psoi_aug.polygons[0].is_valid', 'np.allclose(poly_aug.exterior, poly.exterior)', 'img_aug.dtype.name == ', 'np.array_equal(img_aug,', '(hms_aug.arr_0to1.dtype.name', 'np.allclose(', 'hms_aug.shape == (4, 4, 3)', '(', 'np.allclose(', 'hms_smaller_aug.shape == (8, 4, 3)', '(', 'np.allclose(', 'segmaps_aug.shape == (4, 4, 3)', '(', 'np.allclose(', 'segmaps_smaller_aug.shape == (8, 4, 3)', 'kpsoi_aug.shape == (8, 4, 3)', 'np.allclose([kp_aug.x, kp_aug.y], [kp[0], kp[1]])', 'psoi_aug.shape == (8, 4, 3)', 'len(psoi_aug.polygons) == 1', 'psoi_aug.polygons[0].is_valid', 'psoi_aug.polygons[0].exterior_almost_equals(', 'np.array_equal(img_aug, np.rot90(img, 2, axes=(1, 0)))', '(hms_smaller_aug.arr_0to1.dtype.name', 'hms_smaller_aug.shape == (4, 8, 3)', '(segmaps_smaller_aug.arr.dtype.name', 'segmaps_smaller_aug.shape == (4, 8, 3)', 'kpsoi_aug.shape == (4, 8, 3)', 'psoi_aug.shape == (4, 8, 3)', 'psoi_aug.polygons[0].exterior_almost_equals(expected_k2_poly)', 'img_aug.dtype.name == ', 'np.array_equal(img_aug, np.rot90(img, 3, axes=(1, 0)))', '(hms_aug.arr_0to1.dtype.name', 'np.allclose(', 'hms_aug.shape == (4, 4, 3)', '(hms_smaller_aug.arr_0to1.dtype.name', 'np.allclose(', 'hms_smaller_aug.shape == (8, 4, 3)', '(segmaps_aug.arr.dtype.name', 'np.allclose(', 'segmaps_aug.shape == (4, 4, 3)', '(segmaps_smaller_aug.arr.dtype.name', 'np.allclose(', 'segmaps_smaller_aug.shape == (8, 4, 3)', 'kpsoi_aug.shape == (8, 4, 3)', 'np.allclose([kp_aug.x, kp_aug.y], [kp[0], kp[1]])', 'psoi_aug.shape == (8, 4, 3)', 'len(psoi_aug.polygons) == 1', 'psoi_aug.polygons[0].is_valid', 'psoi_aug.polygons[0].exterior_almost_equals(', 'np.array_equal(img_aug, expected)', 'np.array_equal(', 'hms_aug.arr_0to1.dtype.name == hms.arr_0to1.dtype.name', 'np.allclose(hms_smaller_aug.arr_0to1, hms_smaller_rot)', 'hms_smaller_aug.shape == (4, 8, 3)', 'np.allclose(segmaps_aug.arr,', 'np.allclose(segmaps_smaller_aug.arr, segmaps_smaller_rot)', 'segmaps_smaller_aug.shape == (4, 8, 3)', 'kpsoi_aug.shape == (4, 8, 3)', 'psoi_aug.shape == (4, 8, 3)', 'psoi_aug.polygons[0].exterior_almost_equals(expected)', 'np.array_equal(imgs_aug[0], np.rot90(img, 1, axes=(1, 0)))', 'np.array_equal(imgs_aug[1], np.rot90(img, 2, axes=(1, 0)))', 'np.array_equal(imgs_aug[2], np.rot90(img, 1, axes=(1, 0)))', 'np.array_equal(imgs_aug[3], np.rot90(img, 2, axes=(1, 0)))', 'hms_aug[0].shape == (8, 4, 3)', 'hms_aug[1].shape == (4, 8, 3)', 'hms_aug[2].shape == (8, 4, 3)', 'hms_aug[3].shape == (4, 8, 3)', 'np.allclose(hms_aug[0].arr_0to1, _rot_hm(hms_smaller, 1))', 'np.allclose(hms_aug[1].arr_0to1, _rot_hm(hms_smaller, 2))', 'np.allclose(hms_aug[2].arr_0to1, _rot_hm(hms_smaller, 1))', 'np.allclose(hms_aug[3].arr_0to1, _rot_hm(hms_smaller, 2))', 'segmaps_aug[0].shape == (8, 4, 3)', 'segmaps_aug[1].shape == (4, 8, 3)', 'segmaps_aug[2].shape == (8, 4, 3)', 'segmaps_aug[3].shape == (4, 8, 3)', 'np.allclose(segmaps_aug[0].arr, _rot_sm(segmaps_smaller, 1))', 'np.allclose(segmaps_aug[1].arr, _rot_sm(segmaps_smaller, 2))', 'np.allclose(segmaps_aug[2].arr, _rot_sm(segmaps_smaller, 1))', 'np.allclose(segmaps_aug[3].arr, _rot_sm(segmaps_smaller, 2))', 'kpsoi_aug[0].shape == (8, 4, 3)', 'kpsoi_aug[1].shape == (4, 8, 3)', 'kpsoi_aug[2].shape == (8, 4, 3)', 'kpsoi_aug[3].shape == (4, 8, 3)', 'np.allclose(kpxy_aug(kpsoi_aug, 0, 0), expected_k1_kps[0])', 'np.allclose(kpxy_aug(kpsoi_aug, 0, 1), expected_k1_kps[1])', 'np.allclose(kpxy_aug(kpsoi_aug, 1, 0), expected_k2_kps[0])', 'np.allclose(kpxy_aug(kpsoi_aug, 1, 1), expected_k2_kps[1])', 'np.allclose(kpxy_aug(kpsoi_aug, 2, 0), expected_k1_kps[0])', 'np.allclose(kpxy_aug(kpsoi_aug, 2, 1), expected_k1_kps[1])', 'np.allclose(kpxy_aug(kpsoi_aug, 3, 0), expected_k2_kps[0])', 'np.allclose(kpxy_aug(kpsoi_aug, 3, 1), expected_k2_kps[1])', 'psoi_aug[0].shape == (8, 4, 3)', 'psoi_aug[1].shape == (4, 8, 3)', 'psoi_aug[2].shape == (8, 4, 3)', 'psoi_aug[3].shape == (4, 8, 3)', 'psoi_aug[0].polygons[0].exterior_almost_equals(expected_k1_poly)', 'psoi_aug[1].polygons[0].exterior_almost_equals(expected_k2_poly)', 'psoi_aug[2].polygons[0].exterior_almost_equals(expected_k1_poly)', 'psoi_aug[3].polygons[0].exterior_almost_equals(expected_k2_poly)', 'len(kpsoi_aug.keypoints) == 0', 'kpsoi_aug.shape == (8, 4, 3)', 'len(psoi_aug.polygons) == 0', 'psoi_aug.shape == (8, 4, 3)', 'aug.get_parameters()[0] == aug.k', 'aug.get_parameters()[1] is False', 'image_aug.dtype.name == image.dtype.name', 'np.all(image_aug[2, 2] == 1)', 'image_aug.dtype.name == dtype', 'np.all(image_aug[0, 0] == 0)', 'np.all(image_aug[2, 2] == max_value)', 'image_aug.dtype.name == dtype', '_allclose(image_aug[0, 0], 0)', '_allclose(image_aug[2, 2], np.float128(value))']",[],[],[],[],[],[],[],[],[],[],[],[],"['img_aug.dtype.name == ', 'np.array_equal(img_aug, img)', 'hms_aug.arr_0to1.dtype.name == hms.arr_0to1.dtype.name', 'np.allclose(hms_aug.arr_0to1, hms.arr_0to1)', 'hms_aug.shape == hms.shape', 'segmaps_aug.arr.dtype.name == segmaps.arr.dtype.name', 'np.allclose(segmaps_aug.arr, segmaps.arr)', 'segmaps_aug.shape == segmaps.shape', 'kpsoi_aug.shape == kpsoi.shape', 'np.allclose([kp_aug.x, kp_aug.y], [kp.x, kp.y])', 'psoi_aug.shape == psoi.shape', 'len(psoi_aug.polygons) == 1', 'psoi_aug.polygons[0].is_valid', 'np.allclose(poly_aug.exterior, poly.exterior)', 'np.array_equal(img_aug, np.rot90(img, 1, axes=(1, 0)))', '(', 'hms_smaller_aug.shape == (8, 4, 3)', '(', 'segmaps_smaller_aug.shape == (8, 4, 3)', 'kpsoi_aug.shape == (8, 4, 3)', 'psoi_aug.shape == (8, 4, 3)', 'psoi_aug.polygons[0].exterior_almost_equals(expected_k1_polys)', 'img_aug.dtype.name == ', 'np.array_equal(img_aug, np.rot90(img, 2, axes=(1, 0)))', 'hms_aug.arr_0to1.dtype.name == hms.arr_0to1.dtype.name', 'np.allclose(', 'hms_aug.shape == (4, 4, 3)', '(hms_smaller_aug.arr_0to1.dtype.name', 'np.allclose(', 'hms_smaller_aug.shape == (4, 8, 3)', 'segmaps_aug.arr.dtype == segmaps.arr.dtype', 'np.allclose(', 'segmaps_aug.shape == (4, 4, 3)', '(segmaps_smaller_aug.arr.dtype.name', 'np.allclose(', 'segmaps_smaller_aug.shape == (4, 8, 3)', 'kpsoi_aug.shape == (4, 8, 3)', 'np.allclose([kp_aug.x, kp_aug.y], [kp[0], kp[1]])', 'psoi_aug.shape == (4, 8, 3)', 'len(psoi_aug.polygons) == 1', 'psoi_aug.polygons[0].is_valid', 'psoi_aug.polygons[0].exterior_almost_equals(expected_k2_polys)', 'np.array_equal(img_aug, np.rot90(img, 3, axes=(1, 0)))', '(hms_aug.arr_0to1.dtype.name', 'np.allclose(', 'hms_smaller_aug.shape == (8, 4, 3)', 'np.allclose(', 'np.allclose(', 'segmaps_smaller_aug.shape == (8, 4, 3)', 'kpsoi_aug.shape == (8, 4, 3)', 'psoi_aug.shape == (8, 4, 3)', 'psoi_aug.polygons[0].exterior_almost_equals(expected_k3_polys)', 'np.array_equal(img_aug, expected)', 'img_aug.dtype.name == ', 'np.array_equal(', 'hms_aug.arr_0to1.dtype.name == hms.arr_0to1.dtype.name', 'np.allclose(', 'hms_aug.shape == (4, 4, 3)', '(hms_smaller_aug.arr_0to1.dtype.name', 'np.allclose(hms_smaller_aug.arr_0to1, hms_smaller_rot)', 'hms_smaller_aug.shape == (4, 8, 3)', '(segmaps_aug.arr.dtype.name', 'np.allclose(segmaps_aug.arr,', 'segmaps_aug.shape == (4, 4, 3)', '(segmaps_smaller_aug.arr.dtype.name', 'np.allclose(segmaps_smaller_aug.arr, segmaps_smaller_rot)', 'segmaps_smaller_aug.shape == (4, 8, 3)', 'kpsoi_aug.shape == (4, 8, 3)', 'np.allclose([kp_aug.x, kp_aug.y], [kp[0], kp[1]])', 'psoi_aug.shape == (4, 8, 3)', 'len(psoi_aug.polygons) == 1', 'psoi_aug.polygons[0].is_valid', 'psoi_aug.polygons[0].exterior_almost_equals(expected)', 'isinstance(aug.k, iap.Choice)', 'len(aug.k.a) == 2', 'aug.k.a[0] == 1', 'aug.k.a[1] == 3', 'np.array_equal(imgs_aug[0], np.rot90(img, 1, axes=(1, 0)))', 'np.array_equal(imgs_aug[1], np.rot90(img, 2, axes=(1, 0)))', 'np.array_equal(imgs_aug[2], np.rot90(img, 1, axes=(1, 0)))', 'np.array_equal(imgs_aug[3], np.rot90(img, 2, axes=(1, 0)))', 'hms_aug[0].shape == (8, 4, 3)', 'hms_aug[1].shape == (4, 8, 3)', 'hms_aug[2].shape == (8, 4, 3)', 'hms_aug[3].shape == (4, 8, 3)', 'np.allclose(hms_aug[0].arr_0to1, _rot_hm(hms_smaller, 1))', 'np.allclose(hms_aug[1].arr_0to1, _rot_hm(hms_smaller, 2))', 'np.allclose(hms_aug[2].arr_0to1, _rot_hm(hms_smaller, 1))', 'np.allclose(hms_aug[3].arr_0to1, _rot_hm(hms_smaller, 2))', 'segmaps_aug[0].shape == (8, 4, 3)', 'segmaps_aug[1].shape == (4, 8, 3)', 'segmaps_aug[2].shape == (8, 4, 3)', 'segmaps_aug[3].shape == (4, 8, 3)', 'np.allclose(segmaps_aug[0].arr, _rot_sm(segmaps_smaller, 1))', 'np.allclose(segmaps_aug[1].arr, _rot_sm(segmaps_smaller, 2))', 'np.allclose(segmaps_aug[2].arr, _rot_sm(segmaps_smaller, 1))', 'np.allclose(segmaps_aug[3].arr, _rot_sm(segmaps_smaller, 2))', 'kpsoi_aug[0].shape == (8, 4, 3)', 'kpsoi_aug[1].shape == (4, 8, 3)', 'kpsoi_aug[2].shape == (8, 4, 3)', 'kpsoi_aug[3].shape == (4, 8, 3)', 'np.allclose(kpxy_aug(kpsoi_aug, 0, 0), expected_k1_kps[0])', 'np.allclose(kpxy_aug(kpsoi_aug, 0, 1), expected_k1_kps[1])', 'np.allclose(kpxy_aug(kpsoi_aug, 1, 0), expected_k2_kps[0])', 'np.allclose(kpxy_aug(kpsoi_aug, 1, 1), expected_k2_kps[1])', 'np.allclose(kpxy_aug(kpsoi_aug, 2, 0), expected_k1_kps[0])', 'np.allclose(kpxy_aug(kpsoi_aug, 2, 1), expected_k1_kps[1])', 'np.allclose(kpxy_aug(kpsoi_aug, 3, 0), expected_k2_kps[0])', 'np.allclose(kpxy_aug(kpsoi_aug, 3, 1), expected_k2_kps[1])', 'psoi_aug[0].shape == (8, 4, 3)', 'psoi_aug[1].shape == (4, 8, 3)', 'psoi_aug[2].shape == (8, 4, 3)', 'psoi_aug[3].shape == (4, 8, 3)', 'psoi_aug[0].polygons[0].exterior_almost_equals(expected_k1_polys)', 'psoi_aug[1].polygons[0].exterior_almost_equals(expected_k2_polys)', 'psoi_aug[2].polygons[0].exterior_almost_equals(expected_k1_polys)', 'psoi_aug[3].polygons[0].exterior_almost_equals(expected_k2_polys)', 'len(kpsoi_aug.keypoints) == 0', 'kpsoi_aug.shape == (8, 4, 3)', 'len(psoi_aug.polygons) == 0', 'psoi_aug.shape == (8, 4, 3)', 'aug.get_parameters()[0] == aug.k', 'aug.get_parameters()[1] is False', 'image_aug.dtype.name == image.dtype.name', 'np.all(image_aug[0, 0] == 0)', 'np.all(image_aug[2, 2] == 1)', 'image_aug.dtype.name == dtype', 'np.all(image_aug[2, 2] == max_value)', 'image_aug.dtype.name == dtype', '_allclose(image_aug[0, 0], 0)', '_allclose(image_aug[2, 2], np.float128(value))']",[],[],[],[],[],[],[],[],[],[],[],[]
1847,aleju,kontakt@ajung.name,2019-09-01 18:50:52+02:00,0da94e43d86fda16138b85195b1d6047a8741d59,https://github.com/aleju/imgaug/commit/0da94e43d86fda16138b85195b1d6047a8741d59,Migrate tests of ElasticTransformation to unittest,1,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,154,0,0,0,0,0,0,0,0,0,0,0,0,162,0,0,0,0,0,0,0,0,0,0,0,0,['class TestElasticTransformation(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['in str(exc)', 'got_exception', 'isinstance(aug.alpha, iap.Uniform)', 'isinstance(aug.alpha.a, iap.Deterministic)', 'isinstance(aug.alpha.b, iap.Deterministic)', '1.0 - 1e-8 < aug.alpha.a.value < 1.0 + 1e-8', '2.0 - 1e-8 < aug.alpha.b.value < 2.0 + 1e-8', 'isinstance(aug.sigma, iap.Uniform)', 'isinstance(aug.sigma.a, iap.Deterministic)', 'isinstance(aug.sigma.b, iap.Deterministic)', '1.0 - 1e-8 < aug.sigma.a.value < 1.0 + 1e-8', '2.0 - 1e-8 < aug.sigma.b.value < 2.0 + 1e-8', 'in str(exc)', 'got_exception', 'isinstance(aug.order, iap.Choice)', 'all([order in aug.order.a for order in [0, 1, 2, 3, 4, 5]])', 'isinstance(aug.order, iap.Deterministic)', 'aug.order.value == 1', 'isinstance(aug.order, iap.Choice)', 'all([order in aug.order.a for order in [0, 1, 2]])', 'isinstance(aug.order, iap.Choice)', 'all([order in aug.order.a for order in [0, 1, 2, 3]])', 'in str(exc)', 'got_exception', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 0', 'aug.cval.b.value == 255', 'isinstance(aug.cval, iap.Deterministic)', 'aug.cval.value == 128', 'isinstance(aug.cval, iap.Choice)', 'all([cval in aug.cval.a for cval in [16, 32, 64]])', 'isinstance(aug.cval, iap.Choice)', 'all([cval in aug.cval.a for cval in [16, 32, 64]])', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 128', 'aug.cval.b.value == 255', 'in str(exc)', 'got_exception', 'isinstance(aug.mode, iap.Choice)', 'all([', 'isinstance(aug.mode, iap.Deterministic)', 'aug.mode.value == ', 'isinstance(aug.mode, iap.Choice)', 'all([mode in aug.mode.a for mode in []])', 'isinstance(aug.mode, iap.Choice)', 'all([mode in aug.mode.a for mode in []])', 'in str(exc)', 'got_exception', 'np.sum(observed[mask]) < np.sum(self.image[mask])', 'np.sum(observed[~mask]) > np.sum(self.image[~mask])', '(', '(', 'img_c.shape == (250, 250, nb_channels)', 'observed.shape == (250, 250, nb_channels)', 'np.array_equal(observed[..., c], observed[..., 0])', 'observed.shape == self.heatmaps.shape', '(', '(', 'observed.shape == self.segmaps.shape', '(', '(', 'np.sum(observed1[mask]) > np.sum(observed2[mask])', 'np.sum(observed1[~mask]) < np.sum(observed2[~mask])', 'observed1.shape == self.heatmaps.shape', 'observed2.shape == self.heatmaps.shape', '(', '(', 'observed1.shape == self.segmaps.shape', 'observed2.shape == self.segmaps.shape', '(', '(', 'observed1_std > observed2_std', 'seen[0] > 10', 'seen[1] > 10', 'seen[0] > 10', 'seen[1] > 10', 'np.sum(observed == 255) > 0', 'np.sum(np.logical_and(0 < observed, observed < 255)) == 0', 'np.sum(observed == 255) == 0', 'np.sum(np.logical_and(0 < observed, observed < 255)) > 0', 'observed.shape == heatmaps.shape', 'np.sum(observed.get_arr() > 0.01) == 0', 'observed.shape == segmaps.shape', 'np.sum(observed.get_arr() > 0) == 0', 'd < 1e-8', 'd < 1e-8', 'd < 0.5', 'kpsoi_aug.shape == (120, 70)', 'len(kpsoi_aug.keypoints) == 5', 'count_bad <= 1', 'len(kpsoi_aug.keypoints) == 0', 'kpsoi_aug.shape == (10, 10, 3)', 'observed.shape == (50, 50)', 'len(observed.polygons) == 1', 'observed.polygons[0].exterior_almost_equals(poly)', 'observed.polygons[0].is_valid', 'observed.shape == (50, 50)', 'len(observed.polygons) == 1', 'observed.polygons[0].exterior_almost_equals(poly)', 'observed.polygons[0].is_valid', 'observed.shape == (50, 50)', 'len(observed.polygons) == 1', 'observed.polygons[0].exterior_almost_equals(', 'observed.polygons[0].is_valid', 'psoi_aug.shape == image.shape', 'len(psoi_aug.polygons) == 1', 'poly_aug.is_valid', 'count_bad <= 3', 'len(psoi_aug.polygons) == 0', 'psoi_aug.shape == (10, 10, 3)', 'hm_aug.shape == (80, 80)', 'hm_aug.arr_0to1.shape == (80, 80, 1)', '(same / img_aug_mask.size) >= 0.99', 'hm_aug.shape == (80, 80)', 'hm_aug.arr_0to1.shape == (40, 40, 1)', '(same / img_aug_mask.size) >= 0.94', 'segmaps_aug.shape == (80, 80)', 'segmaps_aug.arr.shape == (80, 80, 1)', '(same / img_aug_mask.size) >= 0.99', 'segmaps_aug.shape == (80, 80)', 'segmaps_aug.arr.shape == (40, 40, 1)', '(same / img_aug_mask.size) >= 0.94', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'isinstance(params[2], iap.Deterministic)', 'isinstance(params[3], iap.Deterministic)', 'isinstance(params[4], iap.Deterministic)', '0.25 - 1e-8 < params[0].value < 0.25 + 1e-8', '1.0 - 1e-8 < params[1].value < 1.0 + 1e-8', 'params[2].value == 2', 'params[3].value == 10', 'params[4].value == ', 'not np.all(image_aug == max_value)', 'np.any(image_aug[~mask] == max_value)', 'image_aug.dtype.name == dtype', 'not np.all(_isclose(image_aug, np.float128(value)))', 'np.any(_isclose(image_aug[~mask],', 'image_aug.dtype.name == image.dtype.name', 'not np.all(image_aug == 1)', 'np.any(image_aug[~mask] == 1)', 'image_aug.dtype.name == dtype', 'not np.all(image_aug == max_value)', 'np.any(image_aug[~mask] == max_value)', 'not np.all(', 'np.any(', 'image_aug.dtype.name == dtype', 'not np.all(', 'np.any(', 'not np.all(', 'np.any(']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.sum(observed[mask]) < np.sum(img[mask])', 'np.sum(observed[~mask]) > np.sum(img[~mask])', '(', '(', 'observed.shape == heatmaps.shape', 'np.isclose(observed.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(observed.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', '(', '(', 'observed.shape == segmaps.shape', '(', '(', 'np.sum(observed1[mask]) > np.sum(observed2[mask])', 'np.sum(observed1[~mask]) < np.sum(observed2[~mask])', 'observed1.shape == heatmaps.shape', 'observed2.shape == heatmaps.shape', 'np.isclose(observed1.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(observed1.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', 'np.isclose(observed2.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(observed2.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', '(', '(', 'observed1.shape == segmaps.shape', 'observed2.shape == segmaps.shape', '(', '(', 'observed1_std > observed2_std', 'seen[0] > 10', 'seen[1] > 10', 'isinstance(aug.alpha, iap.Uniform)', 'isinstance(aug.alpha.a, iap.Deterministic)', 'isinstance(aug.alpha.b, iap.Deterministic)', '1.0 - 1e-8 < aug.alpha.a.value < 1.0 + 1e-8', '2.0 - 1e-8 < aug.alpha.b.value < 2.0 + 1e-8', 'img_c.shape == (250, 250, nb_channels)', 'observed.shape == (250, 250, nb_channels)', 'np.array_equal(observed[..., c], observed[..., 0])', 'in str(exc)', 'got_exception', 'seen[0] > 10', 'seen[1] > 10', 'isinstance(aug.sigma, iap.Uniform)', 'isinstance(aug.sigma.a, iap.Deterministic)', 'isinstance(aug.sigma.b, iap.Deterministic)', '1.0 - 1e-8 < aug.sigma.a.value < 1.0 + 1e-8', '2.0 - 1e-8 < aug.sigma.b.value < 2.0 + 1e-8', 'in str(exc)', 'got_exception', 'isinstance(aug.order, iap.Choice)', 'all([order in aug.order.a for order in [0, 1, 2, 3, 4, 5]])', 'isinstance(aug.order, iap.Deterministic)', 'aug.order.value == 1', 'isinstance(aug.order, iap.Choice)', 'all([order in aug.order.a for order in [0, 1, 2]])', 'isinstance(aug.order, iap.Choice)', 'all([order in aug.order.a for order in [0, 1, 2, 3]])', 'in str(exc)', 'got_exception', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 0', 'aug.cval.b.value == 255', 'isinstance(aug.cval, iap.Deterministic)', 'aug.cval.value == 128', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 128', 'aug.cval.b.value == 255', 'isinstance(aug.cval, iap.Choice)', 'all([cval in aug.cval.a for cval in [16, 32, 64]])', 'isinstance(aug.cval, iap.Choice)', 'all([cval in aug.cval.a for cval in [16, 32, 64]])', 'np.sum(observed == 255) > 0', 'np.sum(np.logical_and(0 < observed, observed < 255)) == 0', 'np.sum(np.logical_and(0 < observed, observed < 255)) > 0', 'np.sum(observed == 255) == 0', 'in str(exc)', 'got_exception', 'observed.shape == heatmaps.shape', 'np.isclose(observed.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(observed.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', 'np.sum(observed.get_arr() > 0.01) == 0', 'observed.shape == segmaps.shape', 'np.sum(observed.get_arr() > 0) == 0', 'isinstance(aug.mode, iap.Choice)', 'all([', 'isinstance(aug.mode, iap.Deterministic)', 'aug.mode.value == ', 'isinstance(aug.mode, iap.Choice)', 'all([mode in aug.mode.a for mode in []])', 'isinstance(aug.mode, iap.Choice)', 'all([mode in aug.mode.a for mode in []])', 'in str(exc)', 'got_exception', 'd < 1e-8', 'd < 1e-8', 'd < 0.5', 'kpsoi_aug.shape == (120, 70)', 'len(kpsoi_aug.keypoints) == 5', 'count_bad <= 1', 'len(kpsoi_aug.keypoints) == 0', 'kpsoi_aug.shape == (10, 10, 3)', 'observed.shape == (50, 50)', 'len(observed.polygons) == 1', 'observed.polygons[0].exterior_almost_equals(poly)', 'observed.polygons[0].is_valid', 'observed.shape == (50, 50)', 'len(observed.polygons) == 1', 'observed.polygons[0].exterior_almost_equals(poly)', 'observed.polygons[0].is_valid', 'observed.shape == (50, 50)', 'len(observed.polygons) == 1', 'observed.polygons[0].exterior_almost_equals(poly, max_distance=0.5)', 'observed.polygons[0].is_valid', 'psoi_aug.shape == image.shape', 'len(psoi_aug.polygons) == 1', 'poly_aug.is_valid', 'count_bad <= 3', 'len(psoi_aug.polygons) == 0', 'psoi_aug.shape == (10, 10, 3)', 'hm_aug.shape == (80, 80)', 'hm_aug.arr_0to1.shape == (80, 80, 1)', '(same / img_aug_mask.size) >= 0.99', 'hm_aug.shape == (80, 80)', 'hm_aug.arr_0to1.shape == (40, 40, 1)', '(same / img_aug_mask.size) >= 0.94', 'segmaps_aug.shape == (80, 80)', 'segmaps_aug.arr.shape == (80, 80, 1)', '(same / img_aug_mask.size) >= 0.99', 'segmaps_aug.shape == (80, 80)', 'segmaps_aug.arr.shape == (40, 40, 1)', '(same / img_aug_mask.size) >= 0.94', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'isinstance(params[2], iap.Deterministic)', 'isinstance(params[3], iap.Deterministic)', 'isinstance(params[4], iap.Deterministic)', '0.25 - 1e-8 < params[0].value < 0.25 + 1e-8', '1.0 - 1e-8 < params[1].value < 1.0 + 1e-8', 'params[2].value == 2', 'params[3].value == 10', 'params[4].value == ', 'image_aug.dtype.name == image.dtype.name', 'not np.all(image_aug == 1)', 'np.any(image_aug[~mask] == 1)', 'image_aug.dtype.name == dtype', 'not np.all(image_aug == max_value)', 'np.any(image_aug[~mask] == max_value)', 'image_aug.dtype.name == dtype', 'not np.all(_isclose(image_aug, np.float128(value)))', 'np.any(_isclose(image_aug[~mask], np.float128(value)))', 'not np.all(image_aug == max_value)', 'np.any(image_aug[~mask] == max_value)', 'not np.all(', 'np.any(', 'image_aug.dtype.name == dtype', 'not np.all(', 'np.any(', 'not np.all(', 'np.any(']",[],[],[],[],[],[],[],[],[],[],[],[]
1848,aleju,kontakt@ajung.name,2019-09-02 20:32:59+02:00,637075d874f937d628989137ced1537596b975fe,https://github.com/aleju/imgaug/commit/637075d874f937d628989137ced1537596b975fe,Move Affine arg handling to methods,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1849,aleju,kontakt@ajung.name,2019-09-02 22:06:45+02:00,55abc6adbc34ce41329e040b412cbd891436c4fc,https://github.com/aleju/imgaug/commit/55abc6adbc34ce41329e040b412cbd891436c4fc,Decrease code duplication in Affine,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1850,aleju,kontakt@ajung.name,2019-09-03 20:38:42+02:00,c935df2348927eececd13728774b776ce5687fef,https://github.com/aleju/imgaug/commit/c935df2348927eececd13728774b776ce5687fef,Move affine array warp methods outside of Affine,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1851,aleju,kontakt@ajung.name,2019-09-03 20:43:38+02:00,fe2683f60d8f82159ac81104880ac59241547467,https://github.com/aleju/imgaug/commit/fe2683f60d8f82159ac81104880ac59241547467,Rename _tf_fit_output() function,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1852,aleju,kontakt@ajung.name,2019-09-03 20:44:55+02:00,eadc8715c45f749a6cd38b34f0cb2d9009d5d9d0,https://github.com/aleju/imgaug/commit/eadc8715c45f749a6cd38b34f0cb2d9009d5d9d0,Fix error message,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1853,aleju,kontakt@ajung.name,2019-09-03 20:45:53+02:00,01a930cc42aaf59c3bfa7f7be401c27adc608ce7,https://github.com/aleju/imgaug/commit/01a930cc42aaf59c3bfa7f7be401c27adc608ce7,Reduce code duplication,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1854,aleju,kontakt@ajung.name,2019-09-03 21:03:01+02:00,69f4170998a565febea4390fd9ec36b5afb25326,https://github.com/aleju/imgaug/commit/69f4170998a565febea4390fd9ec36b5afb25326,Make Affine order/mode/cval for heatmaps/segmaps more flexible,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1855,aleju,kontakt@ajung.name,2019-09-03 21:03:58+02:00,366b88960be52db3d4c87716d69c6026b985f2af,https://github.com/aleju/imgaug/commit/366b88960be52db3d4c87716d69c6026b985f2af,Reorder Affine methods,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1856,aleju,kontakt@ajung.name,2019-09-03 22:01:29+02:00,22ad86a26bdf6f94e8ca070f952c5a083ab8b73d,https://github.com/aleju/imgaug/commit/22ad86a26bdf6f94e8ca070f952c5a083ab8b73d,Improve code quality of Resize arg handling,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1857,aleju,kontakt@ajung.name,2019-09-03 22:21:52+02:00,821423be482aa10412d64fb88057333d6ff9dce9,https://github.com/aleju/imgaug/commit/821423be482aa10412d64fb88057333d6ff9dce9,Reduce code duplication in Resize,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1858,aleju,kontakt@ajung.name,2019-09-03 22:35:19+02:00,5359554e6ceedfdf06c303540057c90329073eff,https://github.com/aleju/imgaug/commit/5359554e6ceedfdf06c303540057c90329073eff,Reworked arg handling in Resize,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1859,aleju,kontakt@ajung.name,2019-09-04 21:25:24+02:00,6411c9079a834fd7549ab4593261a3619519eb02,https://github.com/aleju/imgaug/commit/6411c9079a834fd7549ab4593261a3619519eb02,Reduce code duplication in CropAndPad,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1860,aleju,kontakt@ajung.name,2019-09-04 22:00:56+02:00,64b89b12fac4e6a050cfbdac1bdab04f4a7cd345,https://github.com/aleju/imgaug/commit/64b89b12fac4e6a050cfbdac1bdab04f4a7cd345,Add and integrate crop_arr_() function,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1861,aleju,kontakt@ajung.name,2019-09-04 22:59:57+02:00,f14eb328540240897e88a5a2fd42d5af8cdb1100,https://github.com/aleju/imgaug/commit/f14eb328540240897e88a5a2fd42d5af8cdb1100,Introduce _crop_and_pad_*() and related functions,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1862,aleju,kontakt@ajung.name,2019-09-04 23:26:13+02:00,9fbcdc59ebb47f86c74b28118c67c79c63c41537,https://github.com/aleju/imgaug/commit/9fbcdc59ebb47f86c74b28118c67c79c63c41537,Add changes to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1863,aleju,kontakt@ajung.name,2019-09-05 22:09:07+02:00,9eb691f81284f3dbe6b2448d2b1d7949de6e3250,https://github.com/aleju/imgaug/commit/9eb691f81284f3dbe6b2448d2b1d7949de6e3250,Add cval clipping to ia.pad(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1864,aleju,kontakt@ajung.name,2019-09-05 22:10:30+02:00,9f1e32cd5dd980fa8f13f078b629f18334a06716,https://github.com/aleju/imgaug/commit/9f1e32cd5dd980fa8f13f078b629f18334a06716,"Reduce code duplication in size, fix cvals restricted to uint8",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1865,aleju,kontakt@ajung.name,2019-09-05 22:32:57+02:00,279a21abc3930608106b13e0e3146f40b910dbe4,https://github.com/aleju/imgaug/commit/279a21abc3930608106b13e0e3146f40b910dbe4,Move convolutional matrix generation from funcs to classes,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1866,aleju,kontakt@ajung.name,2019-09-05 22:33:32+02:00,5e6476a87b7a1b40678515f2ebcab3bc1be16f4b,https://github.com/aleju/imgaug/commit/5e6476a87b7a1b40678515f2ebcab3bc1be16f4b,Add refactoring changes to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1867,aleju,kontakt@ajung.name,2019-09-06 15:28:12+02:00,a767ea7c453b7f682387c2433399d2eb831c0147,https://github.com/aleju/imgaug/commit/a767ea7c453b7f682387c2433399d2eb831c0147,Add PR ID to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1868,aleju,kontakt@ajung.name,2019-09-06 16:56:31+02:00,ce4a020fb88ce33d24e99f0ad8afec50152d26fd,https://github.com/aleju/imgaug/commit/ce4a020fb88ce33d24e99f0ad8afec50152d26fd,Change from fixed to random seed,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1869,aleju,kontakt@ajung.name,2019-09-06 19:01:27+02:00,bcaa4fb98e7f360c823d55cbbb2ed08bf8e88b9f,https://github.com/aleju/imgaug/commit/bcaa4fb98e7f360c823d55cbbb2ed08bf8e88b9f,Reduce code duplication in WithColorspace,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1870,aleju,kontakt@ajung.name,2019-09-06 19:08:12+02:00,045b9fd9aa57b6716e47b222b42f6ceec4dc529a,https://github.com/aleju/imgaug/commit/045b9fd9aa57b6716e47b222b42f6ceec4dc529a,Reduce code duplication in WithHueAndSaturation,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1871,aleju,kontakt@ajung.name,2019-09-06 19:14:36+02:00,0004ab656077c6f3d51b65dcbc04cd62922deb2b,https://github.com/aleju/imgaug/commit/0004ab656077c6f3d51b65dcbc04cd62922deb2b,Fix missing _augment_polygons() in WithColorspace,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1872,aleju,kontakt@ajung.name,2019-09-06 19:18:15+02:00,0bebd2561e0a0340515181ab02f46d541d17672f,https://github.com/aleju/imgaug/commit/0bebd2561e0a0340515181ab02f46d541d17672f,Fix WithHueAndSaturation missing _augment_segmentation_maps(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1873,aleju,kontakt@ajung.name,2019-09-06 19:33:46+02:00,d2aae85b6f508e1da58c8da6513765117609c9ef,https://github.com/aleju/imgaug/commit/d2aae85b6f508e1da58c8da6513765117609c9ef,Add missing _augment_polygons() to WithHueAndSaturation,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1874,aleju,kontakt@ajung.name,2019-09-07 11:24:16+02:00,58deb45ce1af00811c32ca7dfd170c9205998e10,https://github.com/aleju/imgaug/commit/58deb45ce1af00811c32ca7dfd170c9205998e10,Add change_colorspace_() and change_colorspaces_(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1875,aleju,kontakt@ajung.name,2019-09-07 11:30:23+02:00,b27050ffeeee764f11c76cd1a4a064d3ef94bb50,https://github.com/aleju/imgaug/commit/b27050ffeeee764f11c76cd1a4a064d3ef94bb50,Change FastSnowyLandscape to change_colorspace_(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1876,aleju,kontakt@ajung.name,2019-09-07 12:12:06+02:00,db1d4b9e52d7496a9049424906b6980305926980,https://github.com/aleju/imgaug/commit/db1d4b9e52d7496a9049424906b6980305926980,Fix cspace conv failing for some cspaces/arrays,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1877,aleju,kontakt@ajung.name,2019-09-07 14:33:42+02:00,ff1bfcb0499605f2cedf9b2aa53dafff2cd4a8c0,https://github.com/aleju/imgaug/commit/ff1bfcb0499605f2cedf9b2aa53dafff2cd4a8c0,Switch contrast augs to new colorspace system,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,48,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['icba.from_colorspace == iaa.CSPACE_BGR', 'icba.to_colorspace == iaa.CSPACE_HSV', 'mock_cs.call_count == 0', 'np.array_equal(img3d_aug, expected3)', 'mock_cs.call_count == 2', 'mock_all_channel_clahe.call_count == 1', 'np.array_equal(mock_cs.call_args_list[0][0][0], img3d)', 'np.array_equal(mock_cs.call_args_list[1][0][0], expected2)', 'mock_cs.call_count == 2', 'np.array_equal(mock_cs.call_args_list[0][0][0], img4d[..., 0:3])', 'np.array_equal(mock_cs.call_args_list[1][0][0], expected2)', 'mock_cs.call_count == 0', 'isinstance(imgs_aug, list)', 'mock_cs.call_count == (n_3d_imgs*2 if with_3d_images else 0)', 'mock_all_channel_clahe.call_count == 1', 'isinstance(mock_all_channel_clahe.call_args_list[0][0][0],', '(', 'np.array_equal(', 'np.array_equal(', 'ia.is_np_array(imgs_aug)', 'mock_cs.call_count == (2*nb_images', 'mock_all_channel_clahe.call_count == 1', 'isinstance(mock_all_channel_clahe.call_args_list[0][0][0],', 'np.array_equal(', 'np.array_equal(', 'np.array_equal(', 'params[3] == iaa.CSPACE_BGR', 'params[4] == iaa.CSPACE_HSV', 'icba.from_colorspace == iaa.CSPACE_BGR', 'icba.to_colorspace == iaa.CSPACE_HSV', 'params[0] == iaa.CSPACE_BGR', 'params[1] == iaa.CSPACE_HSV']",[],[],[],[],[],[],[],[],[],[],[],[],"['icba.change_colorspace.from_colorspace == iaa.CLAHE.BGR', 'icba.change_colorspace.to_colorspace.value == iaa.CLAHE.HSV', 'icba.change_colorspace_inv.from_colorspace == iaa.CLAHE.HSV', 'icba.change_colorspace_inv.to_colorspace.value == iaa.CLAHE.BGR', 'mock_change_cs.call_count == 0', 'mock_change_colorspace_inv.call_count == 0', 'np.array_equal(img3d_aug, expected3)', 'mock_change_cs.call_count == 1', 'mock_all_channel_clahe.call_count == 1', 'mock_change_colorspace_inv.call_count == 1', 'np.array_equal(mock_change_cs.call_args_list[0][0][0][0], img3d)', 'np.array_equal(', 'mock_change_cs.call_count == 1', 'mock_change_colorspace_inv.call_count == 1', 'np.array_equal(mock_change_cs.call_args_list[0][0][0][0],', 'np.array_equal(', 'mock_change_cs.call_count == 0', 'mock_change_colorspace_inv.call_count == 0', 'isinstance(imgs_aug, list)', 'mock_change_cs.call_count == (1 if with_3d_images else 0)', 'mock_all_channel_clahe.call_count == 1', 'mock_change_colorspace_inv.call_count == (', 'isinstance(mock_change_cs.call_args_list[0][0][0], list)', 'isinstance(', 'isinstance(mock_all_channel_clahe.call_args_list[0][0][0], list)', 'len(mock_change_cs.call_args_list[0][0][0]) == 3', 'len(mock_change_colorspace_inv.call_args_list[0][0][0]) == 3', '(', 'np.array_equal(', 'np.array_equal(', 'ia.is_np_array(imgs_aug)', 'mock_change_cs.call_count == (1 if with_color_conversion else 0)', 'mock_all_channel_clahe.call_count == 1', 'mock_change_colorspace_inv.call_count == (', 'isinstance(mock_change_cs.call_args_list[0][0][0], list)', 'isinstance(', 'isinstance(mock_all_channel_clahe.call_args_list[0][0][0], list)', 'len(mock_change_cs.call_args_list[0][0][0]) == nb_images', 'len(mock_all_channel_clahe.call_args_list[0][0][0]) == nb_images', 'np.array_equal(', 'np.array_equal(', 'np.array_equal(', 'params[3] == iaa.CLAHE.BGR', 'params[4] == iaa.CLAHE.HSV', '(icba.change_colorspace.from_colorspace', '(icba.change_colorspace.to_colorspace.value', 'params[0] == iaa.HistogramEqualization.BGR', 'params[1] == iaa.HistogramEqualization.HSV']",[],[],[],[],[],[],[],[],[],[],[],[]
1878,aleju,kontakt@ajung.name,2019-09-07 14:44:53+02:00,e8f69d4dfa148e469cd65e24057d587f4a258f3c,https://github.com/aleju/imgaug/commit/e8f69d4dfa148e469cd65e24057d587f4a258f3c,Add missing fixes to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1879,aleju,kontakt@ajung.name,2019-09-07 14:45:14+02:00,d2ec8894fa157654048ce69d4db8173056761476,https://github.com/aleju/imgaug/commit/d2ec8894fa157654048ce69d4db8173056761476,Add PR ID to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1880,aleju,kontakt@ajung.name,2019-09-07 16:42:21+02:00,8a0c83b2b70d43867282ebc0f3082acaa4141f3c,https://github.com/aleju/imgaug/commit/8a0c83b2b70d43867282ebc0f3082acaa4141f3c,"Fix broken cspace transformations, Add YUV",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1881,aleju,kontakt@ajung.name,2019-09-07 16:42:35+02:00,93aa2b9cd2fc504038ae2746bc48361b2dd398f9,https://github.com/aleju/imgaug/commit/93aa2b9cd2fc504038ae2746bc48361b2dd398f9,Add tests for change_colorspace_(),1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class Test_change_colorspace_(unittest.TestCase):'],"[('Raises', '(ValueError) as cm:'), ('Raises', '(AssertionError) as cm:'), ('Raises', '(AssertionError) as cm:'), ('Raises', '(AssertionError) as cm:'), ('Raises', '(AssertionError) as cm:'), ('Raises', '(AssertionError) as cm:')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['in str(cm.exception)', 'in str(cm.exception)', 'in str(cm.exception)', 'np.array_equal(image_out, image)', 'image_view.flags[] is False', 'np.array_equal(image_out, expected)', 'image_noncontiguous.flags[] is False', 'np.array_equal(image_out, expected)', '(', '(', '(', 'np.array_equal(image_out, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1882,aleju,kontakt@ajung.name,2019-09-07 17:01:28+02:00,af3f6650a275633dc96ea1c8dc8d55aad0d00e23,https://github.com/aleju/imgaug/commit/af3f6650a275633dc96ea1c8dc8d55aad0d00e23,Remove owndata inplace restriction from change_colorspace_(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1883,aleju,kontakt@ajung.name,2019-09-07 17:01:51+02:00,0b2604da23ff1cea8dc2cfa7f9808c40b7bfc098,https://github.com/aleju/imgaug/commit/0b2604da23ff1cea8dc2cfa7f9808c40b7bfc098,Add inplace test for change_colorspace_(),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_out is image', 'np.array_equal(image_out, image)', 'not np.array_equal(image_out, image_orig)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1884,aleju,kontakt@ajung.name,2019-09-07 17:02:27+02:00,ba9c7fc81c939bcdf7627593c81db9427f8ed155,https://github.com/aleju/imgaug/commit/ba9c7fc81c939bcdf7627593c81db9427f8ed155,Add last changes to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1885,aleju,kontakt@ajung.name,2019-09-08 10:53:03+02:00,6566e813c357883d1a91c1d988382d264a341c2f,https://github.com/aleju/imgaug/commit/6566e813c357883d1a91c1d988382d264a341c2f,Fix pylint info,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1886,aleju,kontakt@ajung.name,2019-09-07 17:57:46+02:00,5169c6cd27339a1e3ec365f5318de73cd07b1f55,https://github.com/aleju/imgaug/commit/5169c6cd27339a1e3ec365f5318de73cd07b1f55,Add copy_augmentables to augmentables.utils,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1887,aleju,kontakt@ajung.name,2019-09-07 17:58:12+02:00,780be5e0df81ac2db16cbe5098a1fe6fc502def9,https://github.com/aleju/imgaug/commit/780be5e0df81ac2db16cbe5098a1fe6fc502def9,Reduce code duplication in child augmentation of Alpha,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1888,aleju,kontakt@ajung.name,2019-09-07 18:13:30+02:00,8010e11acc7be2ae94f65518d194fa037950d515,https://github.com/aleju/imgaug/commit/8010e11acc7be2ae94f65518d194fa037950d515,Unify nonimage aug methods in Alpha,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1889,aleju,kontakt@ajung.name,2019-09-07 18:51:29+02:00,1711d820e0a05d26bdb385c30f917f638f479e1b,https://github.com/aleju/imgaug/commit/1711d820e0a05d26bdb385c30f917f638f479e1b,Decrease complexity of AlphaElementwise._augment_images(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1890,aleju,kontakt@ajung.name,2019-09-07 22:26:42+02:00,deff1a53cf037e242ee8003aeef5efe6780d323e,https://github.com/aleju/imgaug/commit/deff1a53cf037e242ee8003aeef5efe6780d323e,Decrease code duplication in AlphaElementwise + fix KP aug,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.isclose(seen[0], expected_iter, rtol=0, atol=atol)', 'np.isclose(seen[1], expected_iter, rtol=0, atol=atol)', 'np.isclose(seen[2], expected_iter_notsame, rtol=0, atol=atol)']",[],[],[],[],[],[],[],[],[],[],[],[],"['False', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50']",[],[],[],[],[],[],[],[],[],[],[],[]
1891,aleju,kontakt@ajung.name,2019-09-07 22:27:07+02:00,94c99cd1d7504993e9c04d4fd4cb5b8c91769be5,https://github.com/aleju/imgaug/commit/94c99cd1d7504993e9c04d4fd4cb5b8c91769be5,Add AlphaElementwise changes to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1892,aleju,kontakt@ajung.name,2019-09-08 10:18:03+02:00,c525d3806574acc0bc4aa0744377579b9d5549f0,https://github.com/aleju/imgaug/commit/c525d3806574acc0bc4aa0744377579b9d5549f0,"Add KP aug mode to AlphaElementwise + poly mode=either-or

This adds to AlphaElementwise a private variable to control
the keypoint augmentation mode. Either pointwise augmentation
or either-or (all keypoints from first branch or all from
second branch).
Polygons now use the either-or approach, while keypoints,
line strings and bounding boxes use the pointwise approach.",3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['seen[2] == 0', 'seen[2] == 0']",[],[],[],[],[],[],[],[],[],[],[],[],"['False', 'np.isclose(seen[2], expected_iter_notsame, rtol=0, atol=atol)']",[],[],[],[],[],[],[],[],[],[],[],[]
1893,aleju,kontakt@ajung.name,2019-09-08 10:40:32+02:00,d6501cd3b16ad400ed234ed4f0a21312b707fb06,https://github.com/aleju/imgaug/commit/d6501cd3b16ad400ed234ed4f0a21312b707fb06,Fix pylint warning,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1894,aleju,kontakt@ajung.name,2019-09-08 10:46:03+02:00,840bc04a1815fdee8704b91face3c6e5e781ad3d,https://github.com/aleju/imgaug/commit/840bc04a1815fdee8704b91face3c6e5e781ad3d,Fix AlphaElementwise sampling wrong for per_channel=False,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1895,aleju,kontakt@ajung.name,2019-09-08 14:16:44+02:00,9ec1d0d295588cec34f42258339e9392184868bf,https://github.com/aleju/imgaug/commit/9ec1d0d295588cec34f42258339e9392184868bf,Add arithmetic.add_scalar,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1896,aleju,kontakt@ajung.name,2019-09-08 14:47:37+02:00,aef2ef5ed2751232e1c2c119472ced2a8735216f,https://github.com/aleju/imgaug/commit/aef2ef5ed2751232e1c2c119472ced2a8735216f,Add arithmetic.add_elementwise,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1897,aleju,kontakt@ajung.name,2019-09-08 14:55:24+02:00,f798ba6c1e3cf784921c3cf61b38d1cdc6272dd7,https://github.com/aleju/imgaug/commit/f798ba6c1e3cf784921c3cf61b38d1cdc6272dd7,Decreased restrictions of value arg of AddElementwise,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1898,aleju,kontakt@ajung.name,2019-09-08 15:16:30+02:00,780d909f606bccc83a4d71945048e5998dd233ed,https://github.com/aleju/imgaug/commit/780d909f606bccc83a4d71945048e5998dd233ed,Add arithmetic.multiply_scalar,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1899,aleju,kontakt@ajung.name,2019-09-08 15:56:45+02:00,c0dfdcc02a847258b404cd95b9b88682c42b695d,https://github.com/aleju/imgaug/commit/c0dfdcc02a847258b404cd95b9b88682c42b695d,Add arithmetic.multiply_elementwise,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1900,aleju,kontakt@ajung.name,2019-09-08 17:12:28+02:00,6490b6b547df78fed6e764bd4ffd28bc5ef059ec,https://github.com/aleju/imgaug/commit/6490b6b547df78fed6e764bd4ffd28bc5ef059ec,Add arithmetic.replace_elementwise_,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1901,aleju,kontakt@ajung.name,2019-09-08 17:54:54+02:00,fbdb0a65bb12236593130ba70758e832a7372d94,https://github.com/aleju/imgaug/commit/fbdb0a65bb12236593130ba70758e832a7372d94,Add arithmetic.invert,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1902,aleju,kontakt@ajung.name,2019-09-08 18:13:39+02:00,319f47c5585534115cfb255e330621d4551f037e,https://github.com/aleju/imgaug/commit/319f47c5585534115cfb255e330621d4551f037e,Add arithmetic.compress_jpeg,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1903,aleju,kontakt@ajung.name,2019-09-08 18:20:02+02:00,5e93a81f90bd14b65d15b2af70293247858c3acd,https://github.com/aleju/imgaug/commit/5e93a81f90bd14b65d15b2af70293247858c3acd,Update changelog wrt new arithmetic functions,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1904,aleju,kontakt@ajung.name,2019-09-08 18:22:21+02:00,2fec9c89e67e878949d0f2beb3ddbc038ab41fe9,https://github.com/aleju/imgaug/commit/2fec9c89e67e878949d0f2beb3ddbc038ab41fe9,Remove todo,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1905,aleju,kontakt@ajung.name,2019-09-13 16:29:16+02:00,4dc1aab80490ecefd8f9f74f44c38820f4685f94,https://github.com/aleju/imgaug/commit/4dc1aab80490ecefd8f9f74f44c38820f4685f94,Remove trailing whitespaces,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1906,aleju,kontakt@ajung.name,2019-09-08 20:16:45+02:00,344e83f11c531c63483f836052a79997f939a928,https://github.com/aleju/imgaug/commit/344e83f11c531c63483f836052a79997f939a928,Decrease code duplication in Affine,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1907,aleju,kontakt@ajung.name,2019-09-08 20:25:14+02:00,c66ff4f50d9506c8df269f52bd70b966f8e09197,https://github.com/aleju/imgaug/commit/c66ff4f50d9506c8df269f52bd70b966f8e09197,Decrease code duplication between Affine and PiecewiseAffine,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1908,aleju,kontakt@ajung.name,2019-09-08 20:35:49+02:00,339423ed28c97b9b08ad41c59cd3659205e3dc53,https://github.com/aleju/imgaug/commit/339423ed28c97b9b08ad41c59cd3659205e3dc53,Decrease code duplication in PiecewiseAffine,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1909,aleju,kontakt@ajung.name,2019-09-08 20:47:43+02:00,9a9efb023baee2bcc6f57169d01b048714fb279d,https://github.com/aleju/imgaug/commit/9a9efb023baee2bcc6f57169d01b048714fb279d,Refactor PiecewiseAffine to use sampling class,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1910,aleju,kontakt@ajung.name,2019-09-08 20:53:33+02:00,cb8009434d863d32c48d4e00ab5df7471e798fa8,https://github.com/aleju/imgaug/commit/cb8009434d863d32c48d4e00ab5df7471e798fa8,"Make cval, mode, order configurable in PiecewAffine for HMs/SMs",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1911,aleju,kontakt@ajung.name,2019-09-09 21:51:07+02:00,badc8eefef808e24c9b087ea90a584d5c6c40843,https://github.com/aleju/imgaug/commit/badc8eefef808e24c9b087ea90a584d5c6c40843,Reduce code duplication in PerspectiveTransform,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1912,aleju,kontakt@ajung.name,2019-09-10 19:03:06+02:00,b0bdcbfdabcae1933980925c8f2438cbb2359a49,https://github.com/aleju/imgaug/commit/b0bdcbfdabcae1933980925c8f2438cbb2359a49,Cleanup code of ElasticTransformation,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug.cval, iap.Uniform)', 'isinstance(aug.cval, iap.Uniform)']",[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval, iap.DiscreteUniform)']",[],[],[],[],[],[],[],[],[],[],[],[]
1913,aleju,kontakt@ajung.name,2019-09-11 17:29:56+02:00,3618f7990179088ac572dad3a06d0c724c3e6c3f,https://github.com/aleju/imgaug/commit/3618f7990179088ac572dad3a06d0c724c3e6c3f,Decrease code duplication in Rot90,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1914,aleju,kontakt@ajung.name,2019-09-11 21:36:01+02:00,61ecef478b0424e5be584c772c42238bbb34b0b6,https://github.com/aleju/imgaug/commit/61ecef478b0424e5be584c772c42238bbb34b0b6,Shorten code in AllChannelsCLAHE,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1915,aleju,kontakt@ajung.name,2019-09-11 21:38:37+02:00,e976030f33f69a63653b175d6e8b870953247c28,https://github.com/aleju/imgaug/commit/e976030f33f69a63653b175d6e8b870953247c28,Add ArgsCopyingMagicMock helper for tests,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[' unittest.mock '],['import unittest'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1916,aleju,kontakt@ajung.name,2019-09-11 21:39:04+02:00,9e2885d27a69957c25a9614c1bd308635c04df9f,https://github.com/aleju/imgaug/commit/9e2885d27a69957c25a9614c1bd308635c04df9f,Fix AllChannelsCLAHE tests failing due to args not copied,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1917,aleju,kontakt@ajung.name,2019-09-11 21:39:34+02:00,e8bf44a39be234e0f036ab5d89ff459c2533b5c6,https://github.com/aleju/imgaug/commit/e8bf44a39be234e0f036ab5d89ff459c2533b5c6,Fix color quantization tests,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['mock_imresize.call_count == 2'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1918,aleju,kontakt@ajung.name,2019-09-11 21:39:53+02:00,5da6100d3397364fc77eb81300447176e85e6dc7,https://github.com/aleju/imgaug/commit/5da6100d3397364fc77eb81300447176e85e6dc7,Fix Rot90 test using wrong interpolation,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1919,aleju,kontakt@ajung.name,2019-09-11 21:40:15+02:00,9ecb29ba5a26e48d0379ed8f2d01b20141118640,https://github.com/aleju/imgaug/commit/9ecb29ba5a26e48d0379ed8f2d01b20141118640,Improved code quality of Augmenter.augment_images(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1920,aleju,kontakt@ajung.name,2019-09-11 21:41:58+02:00,9794a6e00e0a962509c749af2697be2e44970c58,https://github.com/aleju/imgaug/commit/9794a6e00e0a962509c749af2697be2e44970c58,Add link for source to ArgCopyingMagicMock,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1921,aleju,kontakt@ajung.name,2019-09-11 21:49:30+02:00,171b21635469c796de0fff5877565d7d2297028c,https://github.com/aleju/imgaug/commit/171b21635469c796de0fff5877565d7d2297028c,Refactor ArgCopyingMagicMock,1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1922,aleju,kontakt@ajung.name,2019-09-11 21:52:32+02:00,0e3680db05718b3d9cffb92a1a1a0b081bc606fd,https://github.com/aleju/imgaug/commit/0e3680db05718b3d9cffb92a1a1a0b081bc606fd,Remove redundant np.squeeze() call in imresize_single_image(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1923,aleju,kontakt@ajung.name,2019-09-11 21:53:33+02:00,5216a14aff3ac7f4a06917dcf88c9d04a048e120,https://github.com/aleju/imgaug/commit/5216a14aff3ac7f4a06917dcf88c9d04a048e120,Change todo,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1924,aleju,kontakt@ajung.name,2019-09-11 22:16:51+02:00,ad6fae4c9a3dbd82029d7e7a37c85b2a7610e898,https://github.com/aleju/imgaug/commit/ad6fae4c9a3dbd82029d7e7a37c85b2a7610e898,Improve code quality of Augmenter.augment_heatmaps(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1925,aleju,kontakt@ajung.name,2019-09-11 22:22:16+02:00,2e53835d7d7885868cfee9218dec61da84b173d6,https://github.com/aleju/imgaug/commit/2e53835d7d7885868cfee9218dec61da84b173d6,Improve code quality of Augmenter.augment_segmentation_maps(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1926,aleju,kontakt@ajung.name,2019-09-11 22:30:36+02:00,c028985e48dd52d148840d751fcefa73855f6675,https://github.com/aleju/imgaug/commit/c028985e48dd52d148840d751fcefa73855f6675,Improve code quality of Augmenter.augment_keypoints(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1927,aleju,kontakt@ajung.name,2019-09-11 22:36:49+02:00,7faa204f0f79b67434e061b50e7a9b4a43803ca7,https://github.com/aleju/imgaug/commit/7faa204f0f79b67434e061b50e7a9b4a43803ca7,Remove unnecessary code from augment_polygons() and augment_line_strings(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1928,aleju,kontakt@ajung.name,2019-09-11 22:41:23+02:00,5b700c1984838910dbd6b7aebb5f4d4203e5e27e,https://github.com/aleju/imgaug/commit/5b700c1984838910dbd6b7aebb5f4d4203e5e27e,Improve code quality of Augmenter._augment_coord_augables(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1929,aleju,kontakt@ajung.name,2019-09-11 22:41:38+02:00,29d78af1981f64b94ee9acb14263174bb6765b14,https://github.com/aleju/imgaug/commit/29d78af1981f64b94ee9acb14263174bb6765b14,Add refactoring updates to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1930,aleju,kontakt@ajung.name,2019-09-12 18:41:45+02:00,064a4ff995f17e87e94dccc337c33ab555812351,https://github.com/aleju/imgaug/commit/064a4ff995f17e87e94dccc337c33ab555812351,Decrease code duplication in Sequential,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1931,aleju,kontakt@ajung.name,2019-09-12 18:42:43+02:00,1f2c6462c4a4ce86882acaaf807863bdd42a5b01,https://github.com/aleju/imgaug/commit/1f2c6462c4a4ce86882acaaf807863bdd42a5b01,Improve code quality of SomeOf,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1932,aleju,kontakt@ajung.name,2019-09-12 19:22:50+02:00,cd2d64594155d1cae79f7b89538f29cc565949a7,https://github.com/aleju/imgaug/commit/cd2d64594155d1cae79f7b89538f29cc565949a7,Decrease code duplication in Sometimes,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1933,aleju,kontakt@ajung.name,2019-09-12 20:52:17+02:00,c36bc11bc382e3fddba9d2725efc0f0df9942c5c,https://github.com/aleju/imgaug/commit/c36bc11bc382e3fddba9d2725efc0f0df9942c5c,Decrease code duplication in AssertShape,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1934,aleju,kontakt@ajung.name,2019-09-12 20:59:17+02:00,c55bea16c7ef20ddfa247154d117d1497423c4ca,https://github.com/aleju/imgaug/commit/c55bea16c7ef20ddfa247154d117d1497423c4ca,Improve code quality of ChannelShuffle,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1935,aleju,kontakt@ajung.name,2019-09-12 21:46:00+02:00,aa9d396b67d30a0b53a0faeb9e0d50b0716865cd,https://github.com/aleju/imgaug/commit/aa9d396b67d30a0b53a0faeb9e0d50b0716865cd,"Change KeypointsOnImage.from_keypoint_image to return (x+0.5, y+0.5)",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['kpi2.keypoints[0].y == 2.5', 'kpi2.keypoints[0].x == 1.5', 'kpi2.keypoints[1].y == 4.5', 'kpi2.keypoints[1].x == 3.5', 'kpi2.keypoints[0].y == 2.5', 'kpi2.keypoints[0].x == 1.5', 'kpi2.keypoints[0].y == 2.5', 'kpi2.keypoints[0].x == 1.5', 'kpi2.keypoints[0].y == 2.5', 'kpi2.keypoints[0].x == 1.5']",[],[],[],[],[],[],[],[],[],[],[],[],"['kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[0].x == 1']",[],[],[],[],[],[],[],[],[],[],[],[]
1936,aleju,kontakt@ajung.name,2019-09-12 21:48:11+02:00,dd7d08db20722f5cfc4d93613a2c4440068a57aa,https://github.com/aleju/imgaug/commit/dd7d08db20722f5cfc4d93613a2c4440068a57aa,Add image-keypoint alignment test,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['distance <= 1'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1937,aleju,kontakt@ajung.name,2019-09-12 21:49:38+02:00,dd1e1e878d9f39832fb724132dffdd4fc43ef871,https://github.com/aleju/imgaug/commit/dd1e1e878d9f39832fb724132dffdd4fc43ef871,Add recent refactoring changes to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1938,aleju,kontakt@ajung.name,2019-09-12 21:52:07+02:00,2ee2e4d78472d77654a1aa7b37d1d332c8a7b546,https://github.com/aleju/imgaug/commit/2ee2e4d78472d77654a1aa7b37d1d332c8a7b546,Fix wrong PR IDs in changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1939,aleju,kontakt@ajung.name,2019-09-13 15:40:31+02:00,a741f9d70d504afcb167cdb00a43ed4566cbcd13,https://github.com/aleju/imgaug/commit/a741f9d70d504afcb167cdb00a43ed4566cbcd13,Add missing module .validation,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1940,aleju,kontakt@ajung.name,2019-09-13 17:15:38+02:00,fcf7cf030da46928549ea791d6f80af37b50820c,https://github.com/aleju/imgaug/commit/fcf7cf030da46928549ea791d6f80af37b50820c,Change interface names to style used by numpy,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1941,aleju,kontakt@ajung.name,2019-09-13 17:15:38+02:00,43adb02bc4935f7f84a29c9f4385f74eda920c85,https://github.com/aleju/imgaug/commit/43adb02bc4935f7f84a29c9f4385f74eda920c85,Change interface names to style used by numpy,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1942,aleju,kontakt@ajung.name,2019-09-13 17:48:11+02:00,18f0646f76ebee16e3b562f6a396d2e2bdfff27e,https://github.com/aleju/imgaug/commit/18f0646f76ebee16e3b562f6a396d2e2bdfff27e,Set output_buffer_size in augment_batches() to 10*C,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1943,aleju,kontakt@ajung.name,2019-09-13 18:06:06+02:00,b2ae85b5dfde3f03f69c86d0f312e3eac68410ae,https://github.com/aleju/imgaug/commit/b2ae85b5dfde3f03f69c86d0f312e3eac68410ae,Loosen some tests (#414),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(np.average(hm.arr_0to1), 0.57618505, rtol=0, atol=1e-3)', 'np.allclose(np.average(hm.arr_0to1), 0.48026952, rtol=0, atol=1e-3)', 'np.allclose(np.average(hm.arr_0to1), 0.5762454, rtol=0, atol=1e-3)', 'np.allclose(np.average(segmap.arr), 0.3016427, rtol=0, atol=1e-3)', 'np.allclose(np.average(segmap.arr), 0.450353, rtol=0, atol=1e-3)', 'np.allclose(np.average(segmap.arr), 0.30160266, rtol=0, atol=1e-3)']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(np.average(hm.arr_0to1), 0.57618505)', 'np.allclose(np.average(hm.arr_0to1), 0.48026952, atol=1e-4)', 'np.allclose(np.average(hm.arr_0to1), 0.5762454)', 'np.allclose(np.average(segmap.arr), 0.3016427, rtol=0, atol=1e-2)', 'np.allclose(np.average(segmap.arr), 0.450353, rtol=0, atol=1e-2)', 'np.allclose(np.average(segmap.arr), 0.30160266, rtol=0, atol=1e-2)']",[],[],[],[],[],[],[],[],[],[],[],[]
1944,aleju,kontakt@ajung.name,2019-09-13 18:57:32+02:00,002fdf63878a8142d8ef17efc048b180c4393098,https://github.com/aleju/imgaug/commit/002fdf63878a8142d8ef17efc048b180c4393098,Cleanup test running files,2,False,True,False,False,False,True,True,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1945,aleju,kontakt@ajung.name,2019-09-13 21:30:20+02:00,b0bc1535d8a7974a6d432392782b46271409f4f5,https://github.com/aleju/imgaug/commit/b0bc1535d8a7974a6d432392782b46271409f4f5,Fix shape error in Multiply with per_channel=True,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed.shape == (1, 3, 3, 1)', 'observed.shape == (1, 3, 3, 1)', 'observed.shape == (1, 1, 100)', 'observed.shape == (1, 1, 20)', 'observed.shape == (1, 3, 3, 1)', 'observed.shape == (1, 3, 3, 1)', 'observed.shape == (1, 3, 3, 1)', 'observed.shape == (1, 3, 3, 1)', 'observed.shape == (1, 3, 3, 1)', 'observed.shape == (1, 1, 100)', 'observed.shape == (1, 1, 20)', 'observed.shape == (1, 3, 3, 1)', 'observed.shape == (1, 3, 3, 1)', 'observed.shape == (1, 3, 3, 1)', 'observed.shape == (100, 100, 3)', 'observed.shape == (20, 20, 3)', 'observed.shape == (1, 3, 3, 1)', 'observed.shape == (1, 3, 3, 1)', 'observed.shape == (20, 20, 3)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1946,aleju,kontakt@ajung.name,2019-09-14 10:28:04+02:00,e02a8e581a95809124de7001f514820b70be08eb,https://github.com/aleju/imgaug/commit/e02a8e581a95809124de7001f514820b70be08eb,Add 0.3.0 changes to readme,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1947,aleju,kontakt@ajung.name,2019-09-14 10:33:46+02:00,7967a3e8f43202ff284fa045e7179a7078277e2f,https://github.com/aleju/imgaug/commit/7967a3e8f43202ff284fa045e7179a7078277e2f,Add citation section to readme (#199),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1948,aleju,kontakt@ajung.name,2019-09-14 17:57:51+02:00,4e64d64c1e40e584cb36c54fef1feb8e8d011646,https://github.com/aleju/imgaug/commit/4e64d64c1e40e584cb36c54fef1feb8e8d011646,Cleanup changelog for 0.3.0 and split into subfiles,6,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1949,aleju,kontakt@ajung.name,2019-09-14 18:47:08+02:00,79ea381af5f6caee2e380cae2802605a8cc5824b,https://github.com/aleju/imgaug/commit/79ea381af5f6caee2e380cae2802605a8cc5824b,Fix malformatted/wrong dtype supp docstrings,3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1950,aleju,kontakt@ajung.name,2019-09-14 18:51:30+02:00,91fd6c4b76b48229be99a6afd08ce5d15dbbc18d,https://github.com/aleju/imgaug/commit/91fd6c4b76b48229be99a6afd08ce5d15dbbc18d,"Fix docstrings (outdated interface names, other name errors)",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1951,aleju,kontakt@ajung.name,2019-09-14 21:49:25+02:00,af9b925f0fa577630d9b267e060681610d735800,https://github.com/aleju/imgaug/commit/af9b925f0fa577630d9b267e060681610d735800,Add WithHueAndSaturation to list of new augmenters,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1952,aleju,kontakt@ajung.name,2019-09-16 21:28:19+02:00,d6b50b7411d8e2db5f559ff24ad24032ec5e1b2e,https://github.com/aleju/imgaug/commit/d6b50b7411d8e2db5f559ff24ad24032ec5e1b2e,Fix pooling augmenters missing coords augmentation,2,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,4,0,3,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],"['class TestAveragePooling(unittest.TestCase):', 'class TestMaxPooling(unittest.TestCase):', 'class TestMinPooling(unittest.TestCase):', 'class TestMedianPool(unittest.TestCase):']",[],"['def setUp(self):', 'def setUp(self):', 'def setUp(self):']",[],[],[],[],[],[],[],[],"['kpsoi_aug.shape == (6, 6, 3)', 'np.allclose(kpsoi_aug.to_xy_array(),', 'kpsoi_aug.shape == (6, 6, 3)', 'np.allclose(kpsoi_aug.to_xy_array(),', 'kpsoi_aug.shape == (3, 3, 3)', 'np.allclose(kpsoi_aug.to_xy_array(),', 'kpsoi_aug.shape == (2, 3, 3)', 'np.allclose(kpsoi_aug.to_xy_array(),', 'kpsoi_aug.shape == (2, 3, 3)', 'np.allclose(kpsoi_aug.to_xy_array(),', 'psoi_aug.shape == (2, 3, 3)', 'np.allclose(psoi_aug.polygons[0].exterior,', 'image_aug.dtype.name == ', 'image_aug.dtype.name == ', 'image_aug.dtype.name == ', 'image_aug.dtype.name == ', 'image_aug.dtype.name == ', 'image_aug.shape == (1, 4, 3)', 'np.all(diff <= 1)', 'image_aug.dtype.name == ', 'image_aug.dtype.name == ']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1953,aleju,kontakt@ajung.name,2019-09-16 22:25:07+02:00,f69f345b986d2fb5e4ccf79a87e7314f95301447,https://github.com/aleju/imgaug/commit/f69f345b986d2fb5e4ccf79a87e7314f95301447,Fix pooling augmenters not having HM/SM augmentation,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['mock_aug_segmaps.call_count == 1', 'np.array_equal(', 'heatmaps_aug.shape == (6, 6, 3)', 'np.allclose(heatmaps_aug.arr_0to1, arr[..., np.newaxis])', 'heatmaps_aug.shape == (6, 6, 3)', 'np.allclose(heatmaps_aug.arr_0to1, arr[..., np.newaxis])', 'heatmaps_aug.shape == (3, 3, 3)', 'np.allclose(heatmaps_aug.arr_0to1, arr[..., np.newaxis])']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1954,aleju,kontakt@ajung.name,2019-09-18 18:36:01+02:00,1a3bf7bfa2d4f984faecffe458f2ce47da62e5c2,https://github.com/aleju/imgaug/commit/1a3bf7bfa2d4f984faecffe458f2ce47da62e5c2,Fix hanging pad(); Add error in pool if C=0,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1955,aleju,kontakt@ajung.name,2019-09-18 18:36:39+02:00,756457404e7062c7fb2aa25461026ecbf037df66,https://github.com/aleju/imgaug/commit/756457404e7062c7fb2aa25461026ecbf037df66,Add _compute_shape_after_pooling(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1956,aleju,kontakt@ajung.name,2019-09-18 18:36:54+02:00,315ec07b5e7e673b446ec2d5e66923f57b3820a9,https://github.com/aleju/imgaug/commit/315ec07b5e7e673b446ec2d5e66923f57b3820a9,Add more tests for pooling,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,['class Test_compute_shape_after_pooling(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['shape_observed == shape_expected', 'image_aug.shape == kpsoi_aug.shape', 'np.allclose(', 'np.allclose(', 'kpsoi_aug.shape == image_aug.shape', 'len(kpsoi_aug.keypoints) == 0', 'kpsoi_aug.shape == (2, 2, 3)', 'len(kpsoi_aug.keypoints) == 0', 'psoi_aug.shape == (2, 2, 3)', 'len(psoi_aug.polygons) == 0', 'len(params) == 2', 'len(params[0]) == 2', 'isinstance(params[0][0], iap.Deterministic)', 'params[0][0].value == 2', 'params[0][1] is None']",[],[],[],[],[],[],[],[],[],[],[],[],"['len(params) == 2', 'len(params[0]) == 2', 'isinstance(params[0][0], iap.Deterministic)', 'params[0][0].value == 2', 'params[0][1] is None']",[],[],[],[],[],[],[],[],[],[],[],[]
1957,aleju,kontakt@ajung.name,2019-09-18 20:33:45+02:00,07f5e0ce570cdc63b736ec78fdd450acf9beccf4,https://github.com/aleju/imgaug/commit/07f5e0ce570cdc63b736ec78fdd450acf9beccf4,Fix unused variable,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1958,aleju,kontakt@ajung.name,2019-09-18 22:00:32+02:00,257213b100cb8a27ee8f7b796078b0518c6c2644,https://github.com/aleju/imgaug/commit/257213b100cb8a27ee8f7b796078b0518c6c2644,Fix and improve Affine handling of zero-sized axes,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['image_aug.shape == shape'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1959,aleju,kontakt@ajung.name,2019-09-18 22:04:46+02:00,8eed54d678e4869e390e5281404bda0484fcd9ed,https://github.com/aleju/imgaug/commit/8eed54d678e4869e390e5281404bda0484fcd9ed,Refactor functions related to Affine,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1960,aleju,kontakt@ajung.name,2019-09-19 20:24:16+02:00,11c243eae4d71392a23613c4c3386f9890fbb320,https://github.com/aleju/imgaug/commit/11c243eae4d71392a23613c4c3386f9890fbb320,Fix PiecewiseAffine crashing on zero-sized axes,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['image_aug.shape == shape'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1961,aleju,kontakt@ajung.name,2019-09-19 20:56:06+02:00,8ee7969089ab727fab070f70cfa8884652728d4c,https://github.com/aleju/imgaug/commit/8ee7969089ab727fab070f70cfa8884652728d4c,Improve zero-sized axes check in imresize_many_images(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1962,aleju,kontakt@ajung.name,2019-09-19 20:58:04+02:00,21a0e1d849e1151d3fd576f5dc4368fbcb13f7ac,https://github.com/aleju/imgaug/commit/21a0e1d849e1151d3fd576f5dc4368fbcb13f7ac,Fix PerspectiveTransform crashing on zero-sized axes,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['image_aug.shape == shape'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1963,aleju,kontakt@ajung.name,2019-09-21 11:09:00+02:00,851523ed1e39346e636ec10dc114c96c64d82174,https://github.com/aleju/imgaug/commit/851523ed1e39346e636ec10dc114c96c64d82174,Improve handling of zero-sized axes in imresize_many_*(),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['(', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[],"['in str(exc)', 'got_exception', 'in str(exc)', 'got_exception', 'in str(exc)', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[]
1964,aleju,kontakt@ajung.name,2019-09-21 11:09:48+02:00,a7e4ccd1881e1ab870be97bfa6b0f9d688e75860,https://github.com/aleju/imgaug/commit/a7e4ccd1881e1ab870be97bfa6b0f9d688e75860,Fix ElasticTransformation crashing for zero-sized axes,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['image_aug.shape == shape'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1965,aleju,kontakt@ajung.name,2019-09-21 11:13:49+02:00,8d38eda5b74cba0338af4ad1ac7525e27feaf322,https://github.com/aleju/imgaug/commit/8d38eda5b74cba0338af4ad1ac7525e27feaf322,Fix ElasticTransformation KP aug unaligned when KPs empty,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1966,aleju,kontakt@ajung.name,2019-09-21 11:39:16+02:00,518344e43371f09b3898b9f800ad4dd893635ae9,https://github.com/aleju/imgaug/commit/518344e43371f09b3898b9f800ad4dd893635ae9,Fix imresize_* for zero-sized axes,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1967,aleju,kontakt@ajung.name,2019-09-21 11:40:17+02:00,6c9199c9fb0ae642c21b7bda4e4dff04ca05e246,https://github.com/aleju/imgaug/commit/6c9199c9fb0ae642c21b7bda4e4dff04ca05e246,Fix Rot90 crashing for zero-sized axes,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.shape == shape', 'image_aug.shape == shape_expected', 'image_aug.shape == image.shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1968,aleju,kontakt@ajung.name,2019-09-21 15:04:12+02:00,bb749fe0ef40e0c792a0a8cbda28673efcef41c2,https://github.com/aleju/imgaug/commit/bb749fe0ef40e0c792a0a8cbda28673efcef41c2,Improve CropAndPad handling of zero-sized axes; Fix KP shape computation,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['(', 'image_aug.shape == expected_shape', '(', 'image_aug.shape == image.shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1969,aleju,kontakt@ajung.name,2019-09-21 16:21:29+02:00,b4d39888aff4a0a9a8c1b8437d758f49c4ea8151,https://github.com/aleju/imgaug/commit/b4d39888aff4a0a9a8c1b8437d758f49c4ea8151,Fix pad() malformed outputs if arr has 0 channels,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1970,aleju,kontakt@ajung.name,2019-09-21 16:22:59+02:00,7d401caa3afc300e434c4695b23d7d0f39581c04,https://github.com/aleju/imgaug/commit/7d401caa3afc300e434c4695b23d7d0f39581c04,Fix CropAndPad producing warnings when not needed,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1971,aleju,kontakt@ajung.name,2019-09-21 16:23:15+02:00,b7b0c9d7a945fbaeda1f6a57e458874a3fd78a76,https://github.com/aleju/imgaug/commit/b7b0c9d7a945fbaeda1f6a57e458874a3fd78a76,Add test for zero-sized axes for Pad,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.shape == expected_shape', 'image_aug.shape == image.shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1972,aleju,kontakt@ajung.name,2019-09-21 16:25:07+02:00,29007150c816d7810e5d91df7647683c7a3fc116,https://github.com/aleju/imgaug/commit/29007150c816d7810e5d91df7647683c7a3fc116,Add test for zero-sized axes for PadToFixedSize,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['image_aug.shape == expected_shape'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1973,aleju,kontakt@ajung.name,2019-09-21 16:26:32+02:00,526e921abf7a474f0d662ea092700ef0d37b91a9,https://github.com/aleju/imgaug/commit/526e921abf7a474f0d662ea092700ef0d37b91a9,Add test for zero-sized axes for CropToFixedSize,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['image_aug.shape == expected_shape'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1974,aleju,kontakt@ajung.name,2019-09-21 16:30:46+02:00,c8a6a493bafed048a82898cabcf43ebf11c5dc86,https://github.com/aleju/imgaug/commit/c8a6a493bafed048a82898cabcf43ebf11c5dc86,Add test for zero-sized axes for KeepSizeByResize,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['image_aug.shape == image.shape'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1975,aleju,kontakt@ajung.name,2019-09-21 16:39:15+02:00,e86f2a3fbc69185dfb79cc2fc5f72195cc65e825,https://github.com/aleju/imgaug/commit/e86f2a3fbc69185dfb79cc2fc5f72195cc65e825,Fix _fliplr_cv2() failing if #channels == 0,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1976,aleju,kontakt@ajung.name,2019-09-21 16:42:20+02:00,639ab209cda6a067addc57f06f74b39f04d8ba49,https://github.com/aleju/imgaug/commit/639ab209cda6a067addc57f06f74b39f04d8ba49,Add tests for zero-sized axes in flip augmenters/functions,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.shape == image.shape', 'arr_flipped.dtype.name == ', 'arr_flipped.shape == (4, 1, 0)', 'arr_flipped.dtype.name == ', 'arr_flipped.shape == (4, 1, 0)', 'arr_flipped.dtype.name == ', 'arr_flipped.shape == (0, 4, 1)', 'arr_flipped.dtype.name == ', 'arr_flipped.shape == (4, 0, 1)', 'arr_flipped.dtype.name == ', 'arr_flipped.shape == (4, 1, 0)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1977,aleju,kontakt@ajung.name,2019-09-21 16:56:24+02:00,13a5ba42a904053b8b51308b646fa56c3b857d45,https://github.com/aleju/imgaug/commit/13a5ba42a904053b8b51308b646fa56c3b857d45,Improve behaviour of flip augmenters/functions for >512 channels,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['arr_flipped.dtype.name == ', 'arr_flipped.shape == (1, 2, 513)', 'arr_flipped[0, 1, 0] == 1', 'arr_flipped[0, 0, 0] == 254', 'arr_flipped[0, 1, 512] == 2', 'arr_flipped[0, 0, 512] == 253', 'np.all(arr_flipped[0, 0, 1:-2] == 255)', 'np.all(arr_flipped[0, 1, 1:-2] == 0)', 'arr_flipped.dtype.name == ', 'arr_flipped.shape == (1, 2, 513)', 'arr_flipped[0, 1, 0] == 1', 'arr_flipped[0, 0, 0] == 254', 'arr_flipped[0, 1, 512] == 2', 'arr_flipped[0, 0, 512] == 253', 'np.all(arr_flipped[0, 0, 1:-2] == 255)', 'np.all(arr_flipped[0, 1, 1:-2] == 0)', 'arr_flipped.dtype.name == ', 'arr_flipped.shape == (4, 1, 0)']",[],[],[],[],[],[],[],[],[],[],[],[],"['arr_flipped.dtype.name == ', 'arr_flipped.shape == (0, 4, 1)', 'arr_flipped.dtype.name == ', 'arr_flipped.shape == (4, 0, 1)', 'arr_flipped.dtype.name == ', 'arr_flipped.shape == (4, 1, 0)']",[],[],[],[],[],[],[],[],[],[],[],[]
1978,aleju,kontakt@ajung.name,2019-09-21 17:05:56+02:00,c64f6da8e12abbef98bfb3085c0dd9735987a12b,https://github.com/aleju/imgaug/commit/c64f6da8e12abbef98bfb3085c0dd9735987a12b,Fix change_colorspace_() not accepting height/width 0 arrs,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['image_aug.shape == image.shape'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1979,aleju,kontakt@ajung.name,2019-09-21 17:15:53+02:00,bbc6f5c6bf2b02e415109e2ac3c0a9c4ba440e3c,https://github.com/aleju/imgaug/commit/bbc6f5c6bf2b02e415109e2ac3c0a9c4ba440e3c,Fix Convolutional not accepting arrs with any axis==0,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['image_aug.shape == image.shape'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1980,aleju,kontakt@ajung.name,2019-09-21 17:21:00+02:00,b7247d8d11635f93a835151d50bd23878041e987,https://github.com/aleju/imgaug/commit/b7247d8d11635f93a835151d50bd23878041e987,Fix gaussian blurring error for arrs with axis==0,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['image_aug.shape == image.shape'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1981,aleju,kontakt@ajung.name,2019-09-21 17:24:44+02:00,7da4dcbfd295534d417ad3ef5a9c701201073fd1,https://github.com/aleju/imgaug/commit/7da4dcbfd295534d417ad3ef5a9c701201073fd1,Fix average blurring error for arrs with axis==0,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['image_aug.shape == image.shape'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1982,aleju,kontakt@ajung.name,2019-09-21 17:26:44+02:00,479e349a0dd043ed92be06b0a2ca265f25a816f0,https://github.com/aleju/imgaug/commit/479e349a0dd043ed92be06b0a2ca265f25a816f0,Fix median blur error for arrs with axis==0,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['image_aug.shape == image.shape'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1983,aleju,kontakt@ajung.name,2019-09-21 17:29:19+02:00,c0925c3b2980f0563460d81d1d60a6926db3b47a,https://github.com/aleju/imgaug/commit/c0925c3b2980f0563460d81d1d60a6926db3b47a,Fix bilateral blur error for arrs with axis==0,2,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestBilateralBlur(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['image_aug.shape == image.shape'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1984,aleju,kontakt@ajung.name,2019-09-21 17:43:11+02:00,394301ef4c3b76efc9547a6f95bc1b4dfafb4642,https://github.com/aleju/imgaug/commit/394301ef4c3b76efc9547a6f95bc1b4dfafb4642,Fix AverageBlur failing for >512 channels,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1985,aleju,kontakt@ajung.name,2019-09-21 17:47:11+02:00,a5f87139749ce4915266041d6a4cdec387168dec,https://github.com/aleju/imgaug/commit/a5f87139749ce4915266041d6a4cdec387168dec,Fix MedianBlur failing for >512 channels,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1986,aleju,kontakt@ajung.name,2019-09-21 17:48:49+02:00,8511d54b2f128b545051525fc8300c1a75fc53fd,https://github.com/aleju/imgaug/commit/8511d54b2f128b545051525fc8300c1a75fc53fd,Add tests for blur ops and unusual channels numbers,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.shape == image.shape', 'image_aug.shape == image.shape', 'image_aug.shape == image.shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1987,aleju,kontakt@ajung.name,2019-09-21 19:28:32+02:00,bb074072028c13e19a84d117209a46c45dd4969e,https://github.com/aleju/imgaug/commit/bb074072028c13e19a84d117209a46c45dd4969e,Replace RandomState instances by RNGs,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1988,aleju,kontakt@ajung.name,2019-09-21 19:31:40+02:00,3c67577dd8e147fb0d6298f0e0bae89db297af67,https://github.com/aleju/imgaug/commit/3c67577dd8e147fb0d6298f0e0bae89db297af67,Fix Canny failing for arrs with height/width 0,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['image_aug.shape == image.shape'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1989,aleju,kontakt@ajung.name,2019-09-21 19:39:57+02:00,4276140fe6d580f56aa4935394ad4e89f3245b8f,https://github.com/aleju/imgaug/commit/4276140fe6d580f56aa4935394ad4e89f3245b8f,Fix Add and add_scalar() failing on zero-sized arrays,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(image_aug == 1)', 'image_aug.dtype.name == ', 'image_aug.shape == image.shape', 'np.all(image_aug == 1)', 'image_aug.dtype.name == ', 'image_aug.shape == image.shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1990,aleju,kontakt@ajung.name,2019-09-21 19:47:34+02:00,a587ae3209a9830883ba215c8f3313c2f354e013,https://github.com/aleju/imgaug/commit/a587ae3209a9830883ba215c8f3313c2f354e013,Add tests for unusual image axis sizes for AddElementwise,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(image_aug == 1)', 'image_aug.dtype.name == ', 'image_aug.shape == image.shape', 'np.all(image_aug == 1)', 'image_aug.dtype.name == ', 'image_aug.shape == image.shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1991,aleju,kontakt@ajung.name,2019-09-21 19:50:30+02:00,0cb95d3608c577e34e3a32540d6a87457c5dd0d7,https://github.com/aleju/imgaug/commit/0cb95d3608c577e34e3a32540d6a87457c5dd0d7,Fix Multiply and multiply_scalar() failing on zero-sized arrays,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(image_aug == 2)', 'image_aug.dtype.name == ', 'image_aug.shape == image.shape', 'np.all(image_aug == 2)', 'image_aug.dtype.name == ', 'image_aug.shape == image.shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1992,aleju,kontakt@ajung.name,2019-09-21 19:51:54+02:00,6c39b0790b53f437eb9e7421ca1c4f44a2b2cdac,https://github.com/aleju/imgaug/commit/6c39b0790b53f437eb9e7421ca1c4f44a2b2cdac,Add tests for unusual image axis sizes for MultiplyElementwise,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(image_aug == 2)', 'image_aug.dtype.name == ', 'image_aug.shape == image.shape', 'np.all(image_aug == 2)', 'image_aug.dtype.name == ', 'image_aug.shape == image.shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1993,aleju,kontakt@ajung.name,2019-09-21 19:54:21+02:00,455418c3eb6111e586f3263e577a8d6f34f81a40,https://github.com/aleju/imgaug/commit/455418c3eb6111e586f3263e577a8d6f34f81a40,Add tests for unusual image axis sizes for ReplaceElementwise,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(image_aug == 1)', 'image_aug.dtype.name == ', 'image_aug.shape == image.shape', 'np.all(image_aug == 1)', 'image_aug.dtype.name == ', 'image_aug.shape == image.shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1994,aleju,kontakt@ajung.name,2019-09-21 19:59:03+02:00,d24c3522763c06159d1e4c571dd8bad77f388b4a,https://github.com/aleju/imgaug/commit/d24c3522763c06159d1e4c571dd8bad77f388b4a,Fix Invert erroring when #channels==0,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(image_aug == 255)', 'image_aug.dtype.name == ', 'image_aug.shape == image.shape', 'np.all(image_aug == 255)', 'image_aug.dtype.name == ', 'image_aug.shape == image.shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1995,aleju,kontakt@ajung.name,2019-09-21 20:05:21+02:00,12ae86ce9c7c54fa2fc4f3f6b5a0f6efc80c2567,https://github.com/aleju/imgaug/commit/12ae86ce9c7c54fa2fc4f3f6b5a0f6efc80c2567,Fix JpegCompression failing for height/width 0,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.name == ', 'image_aug.shape == image.shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1996,aleju,kontakt@ajung.name,2019-09-21 20:05:53+02:00,2e6f7611639cc620637b02746dcdc09f1665d716,https://github.com/aleju/imgaug/commit/2e6f7611639cc620637b02746dcdc09f1665d716,Verify correct channel numbers in compress_jpg(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1997,aleju,kontakt@ajung.name,2019-09-21 20:17:24+02:00,f42653664505435a8e87e286be6d676fed8355f2,https://github.com/aleju/imgaug/commit/f42653664505435a8e87e286be6d676fed8355f2,Improve efficiency of blend_alpha(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1998,aleju,kontakt@ajung.name,2019-09-21 20:17:57+02:00,1ac605d2f3fcfb9e1e5d1a0de0e3641647d619af,https://github.com/aleju/imgaug/commit/1ac605d2f3fcfb9e1e5d1a0de0e3641647d619af,Fix blend_alpha() result sometimes 3d for 2d inputs,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1999,aleju,kontakt@ajung.name,2019-09-21 20:18:45+02:00,ab94530b3afe209d72b743480efcb82ee792bfa5,https://github.com/aleju/imgaug/commit/ab94530b3afe209d72b743480efcb82ee792bfa5,Add tests for unusual image axis sizes for blend_alpha(),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['img_blend.dtype.name == np.dtype(np.bool_)', 'img_blend.shape == (3, 3)', 'np.all(img_blend == 1)', 'np.all(image_aug == 0)', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'np.all(image_aug == 0)', 'image_aug.dtype.name == ', 'image_aug.shape == shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2000,aleju,kontakt@ajung.name,2019-09-21 20:25:37+02:00,86a0e472594adaffa06228afae5aa9d72628c3e2,https://github.com/aleju/imgaug/commit/86a0e472594adaffa06228afae5aa9d72628c3e2,Fix Alpha failing for images with #channels==0,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(image_aug == 1)', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'np.all(image_aug == 1)', 'image_aug.dtype.name == ', 'image_aug.shape == shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2001,aleju,kontakt@ajung.name,2019-09-21 20:26:54+02:00,f8927ff86f0fcf1580f3e7993e4703207e60e4ee,https://github.com/aleju/imgaug/commit/f8927ff86f0fcf1580f3e7993e4703207e60e4ee,Add tests for unusual image axis sizes for AlphaElementwise,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(image_aug == 1)', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'np.all(image_aug == 1)', 'image_aug.dtype.name == ', 'image_aug.shape == shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2002,aleju,kontakt@ajung.name,2019-09-21 20:34:51+02:00,0e82cdf56cbd5f002ea80c13d21ee55be9761d3a,https://github.com/aleju/imgaug/commit/0e82cdf56cbd5f002ea80c13d21ee55be9761d3a,Add tests for unusual image axis sizes for quantize_colors_kmeans(),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(image_aug == 0)', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'np.all(image_aug == 0)', 'image_aug.dtype.name == ', 'image_aug.shape == shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2003,aleju,kontakt@ajung.name,2019-09-21 20:36:46+02:00,1d2eeef9adf2e267839d54e2b7e147feb93806a2,https://github.com/aleju/imgaug/commit/1d2eeef9adf2e267839d54e2b7e147feb93806a2,Add tests for unusual image axis sizes for quantize_colors_uniform(),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.name == ', 'image_aug.shape == shape', 'np.any(image_aug > 0)', 'image_aug.dtype.name == ', 'image_aug.shape == shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2004,aleju,kontakt@ajung.name,2019-09-21 20:38:27+02:00,43da3ec6fce92d21dc8776cd23b39a6cb109f404,https://github.com/aleju/imgaug/commit/43da3ec6fce92d21dc8776cd23b39a6cb109f404,Refactor dtype comparisons in blend_alpha(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2005,aleju,kontakt@ajung.name,2019-09-21 20:44:19+02:00,52f902fbaf254848d14c1b391ad349349bc24998,https://github.com/aleju/imgaug/commit/52f902fbaf254848d14c1b391ad349349bc24998,Fix adjust_contrast_gamma() failing for zero-sized images,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.name == ', 'image_aug.shape == shape', 'np.any(image_aug != 128)', 'image_aug.dtype.name == ', 'image_aug.shape == shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2006,aleju,kontakt@ajung.name,2019-09-21 20:47:34+02:00,9f3ff194507ca8547b6dc81e612671bc8145a4ef,https://github.com/aleju/imgaug/commit/9f3ff194507ca8547b6dc81e612671bc8145a4ef,Fix adjust_contrast_sigmoid() failing for zero-sized images,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.name == ', 'image_aug.shape == shape', 'np.any(image_aug != 128)', 'image_aug.dtype.name == ', 'image_aug.shape == shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2007,aleju,kontakt@ajung.name,2019-09-21 20:48:40+02:00,22be614222120ab61de5939071229c3393264442,https://github.com/aleju/imgaug/commit/22be614222120ab61de5939071229c3393264442,Fix adjust_contrast_log() failing for zero-sized images,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.name == ', 'image_aug.shape == shape', 'np.any(image_aug != 128)', 'image_aug.dtype.name == ', 'image_aug.shape == shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2008,aleju,kontakt@ajung.name,2019-09-21 20:50:08+02:00,02a51b6e56491216ca42ccba6ac429f53200c1a6,https://github.com/aleju/imgaug/commit/02a51b6e56491216ca42ccba6ac429f53200c1a6,Fix adjust_contrast_linear() failing for zero-sized images,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.name == ', 'image_aug.shape == shape', 'np.any(image_aug != 128)', 'image_aug.dtype.name == ', 'image_aug.shape == shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2009,aleju,kontakt@ajung.name,2019-09-21 20:53:34+02:00,6192b9519d127347f28f20faaecdacf4648d88bc,https://github.com/aleju/imgaug/commit/6192b9519d127347f28f20faaecdacf4648d88bc,Fix AllChannelsCLAHE hanging for zero-sized arrays,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.name == ', 'image_aug.shape == shape', 'np.any(image_aug != 128)', 'image_aug.dtype.name == ', 'image_aug.shape == shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2010,aleju,kontakt@ajung.name,2019-09-21 20:57:50+02:00,477e7fb3b7accb28b434f2a86cd19b1fba4c3ae4,https://github.com/aleju/imgaug/commit/477e7fb3b7accb28b434f2a86cd19b1fba4c3ae4,Add tests for unusual image axis sizes for CLAHE,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.name == ', 'image_aug.shape == shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2011,aleju,kontakt@ajung.name,2019-09-21 20:59:27+02:00,366c8b000e0bc9fad18b1f4219de0fe254e3bcfd,https://github.com/aleju/imgaug/commit/366c8b000e0bc9fad18b1f4219de0fe254e3bcfd,Fix AllChannelsHistogramEqualization erroring for zero-sized arrays,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.name == ', 'image_aug.shape == shape', 'np.any(image_aug != 128)', 'image_aug.dtype.name == ', 'image_aug.shape == shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2012,aleju,kontakt@ajung.name,2019-09-21 21:01:07+02:00,4639f4cbf2edce8e61a1b4b5436df74dc20bc9e2,https://github.com/aleju/imgaug/commit/4639f4cbf2edce8e61a1b4b5436df74dc20bc9e2,Add tests for unusual image axis sizes for HistogramEqualization,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.name == ', 'image_aug.shape == shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2013,aleju,kontakt@ajung.name,2019-09-21 21:10:49+02:00,0b855dfa2d18200d7471d3c3a4b33d77fb5f37d8,https://github.com/aleju/imgaug/commit/0b855dfa2d18200d7471d3c3a4b33d77fb5f37d8,Change pooling to allow 0-sized arrays to be returned,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2014,aleju,kontakt@ajung.name,2019-09-21 21:11:09+02:00,f480e70bbdb07a66ce352eeb95db79982b83c286,https://github.com/aleju/imgaug/commit/f480e70bbdb07a66ce352eeb95db79982b83c286,Add tests for unusual image axis sizes in pooling augs,1,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestAveragePooling(unittest.TestCase, _TestPoolingAugmentersBase):', 'class TestMaxPooling(unittest.TestCase, _TestPoolingAugmentersBase):', 'class TestMinPooling(unittest.TestCase, _TestPoolingAugmentersBase):', 'class TestMedianPool(unittest.TestCase, _TestPoolingAugmentersBase):']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.name == ', 'image_aug.shape == shape', 'image_aug.dtype.name == ', 'image_aug.shape == shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2015,aleju,kontakt@ajung.name,2019-09-21 21:15:19+02:00,a9681f3352ae6679ed3e0d6c1a7605d60b53cccc,https://github.com/aleju/imgaug/commit/a9681f3352ae6679ed3e0d6c1a7605d60b53cccc,Fix Superpixels erroring for zero-sized arrays,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.name == ', 'image_aug.shape == shape', 'image_aug.dtype.name == ', 'image_aug.shape == shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2016,aleju,kontakt@ajung.name,2019-09-21 21:18:13+02:00,8a9aaed2159cf0cba25461906cf76b39d039188b,https://github.com/aleju/imgaug/commit/8a9aaed2159cf0cba25461906cf76b39d039188b,Improve tests for unusual image axis sizes in segment_voronoi(),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.name == ', 'image_aug.shape == shape', 'image_aug.dtype.name == ', 'image_aug.shape == shape']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(image_seg, image)', 'np.array_equal(image_seg, image)', 'np.array_equal(image_seg, image)']",[],[],[],[],[],[],[],[],[],[],[],[]
2017,aleju,kontakt@ajung.name,2019-09-21 21:24:17+02:00,6b4f916b4076a95e1ea6efaeb34578f5d4505181,https://github.com/aleju/imgaug/commit/6b4f916b4076a95e1ea6efaeb34578f5d4505181,Add tests for unusual image axis sizes in Voronoi,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.name == ', 'image_aug.shape == shape', 'image_aug.dtype.name == ', 'image_aug.shape == shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2018,aleju,kontakt@ajung.name,2019-09-21 21:34:24+02:00,0c171af78fc46f15c2d79c78d9f7e0034a70ecf4,https://github.com/aleju/imgaug/commit/0c171af78fc46f15c2d79c78d9f7e0034a70ecf4,Add tests for unusual image axis sizes in Voronoi points samplers,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(points) == 0', 'len(points) == 1', 'len(points) == 0', 'len(points) == 1', 'len(points) == 1', 'len(points) == 1']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2019,aleju,kontakt@ajung.name,2019-09-21 21:35:10+02:00,460ef5846200e04949864b8a12b0a848301b7fd8,https://github.com/aleju/imgaug/commit/460ef5846200e04949864b8a12b0a848301b7fd8,Rename tests,1,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],3,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestRegularGridPointsSampler(unittest.TestCase):', 'class TestRelativeRegularGridPointsSampler(unittest.TestCase):', 'class TestSubsamplingPointsSampler(unittest.TestCase):']",[],[],[],[],[],[],[],[],[],[],"['class TestRegularGridPointSampler(unittest.TestCase):', 'class TestRelativeRegularGridPointSampler(unittest.TestCase):', 'class TestSubsamplingPointSampler(unittest.TestCase):']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2020,aleju,kontakt@ajung.name,2019-09-21 21:37:43+02:00,e5d0ae0ea2117fe24832fd2b2cfa3195506aed34,https://github.com/aleju/imgaug/commit/e5d0ae0ea2117fe24832fd2b2cfa3195506aed34,Add tests for unusual image axis sizes in ChannelShuffle,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.name == ', 'image_aug.shape == shape', 'image_aug.dtype.name == ', 'image_aug.shape == shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2021,aleju,kontakt@ajung.name,2019-09-21 21:44:54+02:00,bc9d6268b145757e81cf6d7ef829237ff7890496,https://github.com/aleju/imgaug/commit/bc9d6268b145757e81cf6d7ef829237ff7890496,Add tests for unusual image axis sizes in WithChannels,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.name == ', 'image_aug.shape == shape', 'np.all(image_aug[..., 0] == 1)', 'image_aug.dtype.name == ', 'image_aug.shape == shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2022,aleju,kontakt@ajung.name,2019-09-21 21:57:58+02:00,3c368c816f24d6c32c7c1f7b8c0ba8e770c6f3d5,https://github.com/aleju/imgaug/commit/3c368c816f24d6c32c7c1f7b8c0ba8e770c6f3d5,Fix broken imresize_many_images() test,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['in str(exc)'],[],[],[],[],[],[],[],[],[],[],[],[],['in str(exc)'],[],[],[],[],[],[],[],[],[],[],[],[]
2023,aleju,kontakt@ajung.name,2019-09-21 22:02:07+02:00,cbe811db6bd8d63d6425555f055e8b57e6a35664,https://github.com/aleju/imgaug/commit/cbe811db6bd8d63d6425555f055e8b57e6a35664,Fix blend_alpha() sometimes failing for 2d arrs,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2024,aleju,kontakt@ajung.name,2019-09-21 22:02:25+02:00,6324571e71c9cafaf57429dfd06248d1b0ed5a15,https://github.com/aleju/imgaug/commit/6324571e71c9cafaf57429dfd06248d1b0ed5a15,Add tests for 2d arrays for blend_alpha(),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['img_blend.dtype.name == np.dtype(np.bool_)', 'img_blend.shape == (3, 3)', 'np.all(img_blend == 0)', 'img_blend.dtype.name == np.dtype(np.bool_)', 'img_blend.shape == (3, 3)', 'np.all(img_blend == 1)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2025,aleju,kontakt@ajung.name,2019-09-21 22:07:22+02:00,3e777ab3846296a7a9c44d7b91524ae8b7d1886e,https://github.com/aleju/imgaug/commit/3e777ab3846296a7a9c44d7b91524ae8b7d1886e,Improve tests for blend_alpha(),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['img_blend.dtype.name == ', 'img_blend.dtype.name == ', 'img_blend.dtype.name == ', 'np.all(img_blend == 255)', 'img_blend.dtype.name == ', 'np.all(img_blend == 255)', 'img_blend.dtype.name == ', 'np.allclose(img_blend, 0.7*255, atol=1.01, rtol=0)', 'img_blend.dtype.name == ', 'np.allclose(img_blend, 0.7*255, atol=1.01, rtol=0)', 'img_blend.dtype.name == ', 'np.all(img_blend[:, :, 1] == 255)', 'img_blend.dtype.name == ', 'img_blend.shape == (3, 3, 1)', 'np.all(img_blend == 1)', 'img_blend.dtype.name == ', 'img_blend.shape == (3, 3)', 'np.all(img_blend == 1)']",[],[],[],[],[],[],[],[],[],[],[],[],"['img_blend.dtype.name == np.dtype(np.bool_)', 'img_blend.dtype.name == np.dtype(np.bool_)', 'img_blend.dtype.name == np.dtype(np.bool_)', 'np.all(img_blend == 1)', 'img_blend.dtype.name == np.dtype(np.bool_)', 'np.all(img_blend == 1)', 'img_blend.dtype.name == np.dtype(np.bool_)', 'np.all(img_blend == 1)', 'img_blend.dtype.name == np.dtype(np.bool_)', 'np.all(img_blend == 1)', 'img_blend.dtype.name == np.dtype(np.bool_)', 'np.all(img_blend[:, :, 1] == 1)']",[],[],[],[],[],[],[],[],[],[],[],[]
2026,aleju,kontakt@ajung.name,2019-09-22 10:27:20+02:00,23183bc495f08eb90e47965a85f4cf9a3ff815da,https://github.com/aleju/imgaug/commit/23183bc495f08eb90e47965a85f4cf9a3ff815da,Improve sampling behaviour of (Relative)RegularGridPointsSampler,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(points) == 1', 'len(points) == 1']",[],[],[],[],[],[],[],[],[],[],[],[],"['len(points) == 0', 'len(points) == 0']",[],[],[],[],[],[],[],[],[],[],[],[]
2027,aleju,kontakt@ajung.name,2019-09-22 10:42:34+02:00,7a9fbefecb543bfc0856bd8c4508485e0853b6a2,https://github.com/aleju/imgaug/commit/7a9fbefecb543bfc0856bd8c4508485e0853b6a2,Fix imresize_many_images() erroring if #channels>512,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2028,aleju,kontakt@ajung.name,2019-09-22 10:42:59+02:00,7c8f5c299b46c9c43cda9393a607313d741cba2a,https://github.com/aleju/imgaug/commit/7c8f5c299b46c9c43cda9393a607313d741cba2a,Improve geometric.py tests for unusual axis sizes,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.name == ', 'image_aug.dtype.name == ', 'np.all(image_aug == 0)', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'image_aug.dtype.name == ', 'np.all(image_aug == 0)', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'image_aug.dtype.name == ', 'np.all(image_aug == 0)', 'image_aug.dtype.name == ', 'image_aug.shape == shape_expected']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2029,aleju,kontakt@ajung.name,2019-09-22 11:00:51+02:00,0467a5117330c28588516063e7edb387782fe749,https://github.com/aleju/imgaug/commit/0467a5117330c28588516063e7edb387782fe749,Improve behaviour for zero-sized axes in geometric.py,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2030,aleju,kontakt@ajung.name,2019-09-22 11:16:57+02:00,cfbc02b02a7826763a1c94d6fdc1a9dfd539b178,https://github.com/aleju/imgaug/commit/cfbc02b02a7826763a1c94d6fdc1a9dfd539b178,Improve zero-size checks in arithmetic.py,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2031,aleju,kontakt@ajung.name,2019-09-22 11:17:14+02:00,9864258e6714791b7e0a62717f9efbae96da902b,https://github.com/aleju/imgaug/commit/9864258e6714791b7e0a62717f9efbae96da902b,Fix zero-size non-image behaviour in blend.py,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2032,aleju,kontakt@ajung.name,2019-09-22 11:25:46+02:00,2279727fbba94541c54d7d3af097f5d1e6de8759,https://github.com/aleju/imgaug/commit/2279727fbba94541c54d7d3af097f5d1e6de8759,Improve behaviour for zero-sized images in blur.py,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2033,aleju,kontakt@ajung.name,2019-09-22 11:26:02+02:00,d7edd2797b914bdaadbfb5ec1a1ff08c41d19ec3,https://github.com/aleju/imgaug/commit/d7edd2797b914bdaadbfb5ec1a1ff08c41d19ec3,Improve behaviour for zero-sized images in color.py,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2034,aleju,kontakt@ajung.name,2019-09-22 11:36:49+02:00,5851f4394d1748aa309aba68c62a47771c184d7b,https://github.com/aleju/imgaug/commit/5851f4394d1748aa309aba68c62a47771c184d7b,Improve behaviour for zero-sized images + tiny refactorings,4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2035,aleju,kontakt@ajung.name,2019-09-22 13:24:02+02:00,86d11f50dd3fc1bb325f81e3af67229bd295e1e3,https://github.com/aleju/imgaug/commit/86d11f50dd3fc1bb325f81e3af67229bd295e1e3,Add tests for unusual image axis sizes in module .meta,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.name == ', 'image_aug.shape == shape', 'np.all(image_aug == 0)', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'np.all(image_aug == 0)', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'np.all(image_aug == 0)', 'image_aug.dtype.name == ', 'image_aug.shape == shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2036,aleju,kontakt@ajung.name,2019-09-22 13:34:22+02:00,964562ee1de2423092e43d8873b4f0c403db87fc,https://github.com/aleju/imgaug/commit/964562ee1de2423092e43d8873b4f0c403db87fc,Fix CloudLayer breaking if image H/W is 0,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2037,aleju,kontakt@ajung.name,2019-09-22 13:34:44+02:00,e6ab55dbe8e61ff4b483344c2d95f8bdbd6a4134,https://github.com/aleju/imgaug/commit/e6ab55dbe8e61ff4b483344c2d95f8bdbd6a4134,Add tests for unusual image axis sizes in module .weather,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.name == ', 'image_aug.shape == shape', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'np.any(image_aug > 0)', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'np.any(image_aug > 0)', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'image_aug.dtype.name == ', 'image_aug.shape == shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2038,aleju,kontakt@ajung.name,2019-09-22 13:44:56+02:00,139300c1b4fcffe381a553192b2154b336eae0c4,https://github.com/aleju/imgaug/commit/139300c1b4fcffe381a553192b2154b336eae0c4,Switch tests from RandomState to RNG,4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2039,aleju,kontakt@ajung.name,2019-09-22 13:46:04+02:00,c11f97614dd3904743544b1d6fe4a8ba2d5d6bdb,https://github.com/aleju/imgaug/commit/c11f97614dd3904743544b1d6fe4a8ba2d5d6bdb,Fix test name resulting in duplicate test,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2040,aleju,kontakt@ajung.name,2019-09-22 14:18:58+02:00,b162720bc44ebf3b7625f333b75df0ecf0496886,https://github.com/aleju/imgaug/commit/b162720bc44ebf3b7625f333b75df0ecf0496886,Fix Rot90 not supporting ALL (#434),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug.k, iap.Choice)', 'len(aug.k.a) == 4', 'aug.k.a == [0, 1, 2, 3]']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2041,aleju,kontakt@ajung.name,2019-09-22 14:43:04+02:00,11e5221a531e64eaa566c3a5fd03cd4395d44bf5,https://github.com/aleju/imgaug/commit/11e5221a531e64eaa566c3a5fd03cd4395d44bf5,Replace most lambdas in tests with nested function definitions,5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2042,aleju,kontakt@ajung.name,2019-09-22 15:22:00+02:00,9e33a3a21288ec61343e08c7ded8d6bec5285bde,https://github.com/aleju/imgaug/commit/9e33a3a21288ec61343e08c7ded8d6bec5285bde,Fix PiecewiseAffine non-image scale projection if absolute_scale=True,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2043,aleju,kontakt@ajung.name,2019-09-22 15:22:30+02:00,8291b1a368ec0d798414c97774808bd32266c805,https://github.com/aleju/imgaug/commit/8291b1a368ec0d798414c97774808bd32266c805,Add tests for absolute_scale=True in PiecewiseAffine,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['(', '(', 'np.array_equal(observed, self.image)', '(', 'observed1.shape == self.heatmaps.shape', 'observed2.shape == self.heatmaps.shape', '(', 'hm_aug.shape == (60, 80, 3)', 'hm_aug.arr_0to1.shape == (30, 40+10, 1)', '(same / img_aug_mask.size) >= 0.9  # seems to be 0.930 actually', 'image_aug.dtype.name == ', 'image_aug.shape == shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2044,aleju,kontakt@ajung.name,2019-09-22 17:40:34+02:00,6b47cc452999f1bd8bc7928516b8e1ae85a69d5f,https://github.com/aleju/imgaug/commit/6b47cc452999f1bd8bc7928516b8e1ae85a69d5f,Reformulate changelog paragraph,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2045,aleju,kontakt@ajung.name,2019-09-22 17:57:10+02:00,429670121bfef8a2754a34be4839bb30f526aa00,https://github.com/aleju/imgaug/commit/429670121bfef8a2754a34be4839bb30f526aa00,Add latest changes to changelog,3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2046,aleju,kontakt@ajung.name,2019-09-23 22:23:10+02:00,645fa95c154e479dc07d640240ea83a9b1e22d9f,https://github.com/aleju/imgaug/commit/645fa95c154e479dc07d640240ea83a9b1e22d9f,Fix code style issues in .size,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2047,aleju,kontakt@ajung.name,2019-09-24 08:22:37+02:00,f13c6edd1f15edc82d0b93eeb308c53c4c331df5,https://github.com/aleju/imgaug/commit/f13c6edd1f15edc82d0b93eeb308c53c4c331df5,Change version number to 0.3.0,3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2048,aleju,kontakt@ajung.name,2019-09-25 22:21:04+02:00,52d742b320d101d632a813b07a550245d641828f,https://github.com/aleju/imgaug/commit/52d742b320d101d632a813b07a550245d641828f,Rework code examples in readme,3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['not np.array_equal(images, images_aug)', 'not np.array_equal(images, images_aug)', 'not np.array_equal(images, images_aug)', 'not np.array_equal(images, images_aug)', 'not np.array_equal(heatmaps, heatmaps_aug)']",[],[],[],[],[],[],[],[],[],[],[],[]
2049,aleju,kontakt@ajung.name,2019-09-25 22:23:34+02:00,251ac223d850db330fb07fa1384381d6b5346f1f,https://github.com/aleju/imgaug/commit/251ac223d850db330fb07fa1384381d6b5346f1f,Fix citation bibtex code,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2050,aleju,kontakt@ajung.name,2019-09-26 18:54:59+02:00,9b37b6627357add9659a0fb8f171e59132ec1a7a,https://github.com/aleju/imgaug/commit/9b37b6627357add9659a0fb8f171e59132ec1a7a,Fix resize breaking input dtypes #442,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(images_aug, list)', 'ia.is_np_array(images_aug)', 'len(images_aug) == 2', 'image_aug.dtype.name == dt', 'image_aug.shape == (10, 20, 3)', 'np.all(image_aug >= 1 - 1e-4)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2051,aleju,kontakt@ajung.name,2019-09-26 20:26:04+02:00,e4218c7584ab2c541fb7b87530c1937a479d76ba,https://github.com/aleju/imgaug/commit/e4218c7584ab2c541fb7b87530c1937a479d76ba,Rename Augmenter.reseed() to seed_(),4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['augseq.seed_.call_count == 1', 'augseq.seed_.call_count == 1', 'augseq.seed_.call_count == 2']",[],[],[],[],[],[],[],[],[],[],[],[],"['augseq.reseed.call_count == 1', 'augseq.reseed.call_count == 1', 'augseq.reseed.call_count == 2']",[],[],[],[],[],[],[],[],[],[],[],[]
2052,aleju,kontakt@ajung.name,2019-09-26 20:45:44+02:00,4cd0be99e418ed12c13a97c8bad758e81dfb8e72,https://github.com/aleju/imgaug/commit/4cd0be99e418ed12c13a97c8bad758e81dfb8e72,Rename Augmenter.remove_augmenters_inplace() to remove_augmenters_(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2053,aleju,kontakt@ajung.name,2019-09-26 20:54:33+02:00,48bf250c7e72c1159587e4ba1d061b4bababf34b,https://github.com/aleju/imgaug/commit/48bf250c7e72c1159587e4ba1d061b4bababf34b,Add renamings to changelog,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2054,aleju,kontakt@ajung.name,2019-09-26 20:58:22+02:00,824f51fa8b0a92e73956277e861e61c3ac952a40,https://github.com/aleju/imgaug/commit/824f51fa8b0a92e73956277e861e61c3ac952a40,Rename changelog directory (fixes -> fixed),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2055,aleju,kontakt@ajung.name,2019-09-27 17:01:12+02:00,0078f1eaea794507965accfe689959aee312b94e,https://github.com/aleju/imgaug/commit/0078f1eaea794507965accfe689959aee312b94e,Add property BoundingBox.coords,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(coords, [[10, 20], [30, 40]],', 'np.allclose(coords, [[10.1, 20.2], [30.3, 40.4]],']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2056,aleju,kontakt@ajung.name,2019-09-27 17:26:44+02:00,0f744e23766ec628fb87365b5096804d7271ea39,https://github.com/aleju/imgaug/commit/0f744e23766ec628fb87365b5096804d7271ea39,Add method BoundingBox.coords_almost_equals(),4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Raises', '(AssertionError) as cm:')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['equal', 'not equal', 'equal', 'not equal', 'equal', 'not equal', 'equal', 'not equal', 'in str(cm.exception)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2057,aleju,kontakt@ajung.name,2019-09-27 18:08:41+02:00,192cb3d24f62f61ecc7a900ee7d5b192bdb93628,https://github.com/aleju/imgaug/commit/192cb3d24f62f61ecc7a900ee7d5b192bdb93628,Add BoundingBox.almost_equals(),6,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['equal', 'not equal', 'not equal', 'equal', 'not equal']",[],[],[],[],[],[],[],[],[],[],[],[],['not poly_a.almost_equals()'],[],[],[],[],[],[],[],[],[],[],[],[]
2058,aleju,kontakt@ajung.name,2019-09-27 18:23:49+02:00,ca2a0f853db3ab5d0e52f98c9f88e0c7207b8e5f,https://github.com/aleju/imgaug/commit/ca2a0f853db3ab5d0e52f98c9f88e0c7207b8e5f,Add .items property to coordinate-based OnImage classes,9,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestPolygonsOnImage_items(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['items == [bb1, bb2]', 'items == []', 'items == kps', 'items == []', 'items == [ls1, ls2]', 'items == []', 'items == [poly1, poly2]', 'items == []']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2059,aleju,kontakt@ajung.name,2019-09-27 18:29:51+02:00,98920d6c41b76719a1b730934c35be3c3b34f86d,https://github.com/aleju/imgaug/commit/98920d6c41b76719a1b730934c35be3c3b34f86d,Fix duplicate test name,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2060,aleju,kontakt@ajung.name,2019-09-27 18:35:25+02:00,daaba9678f518f11372123fbcf90f822f351c185,https://github.com/aleju/imgaug/commit/daaba9678f518f11372123fbcf90f822f351c185,Add method Polygon.coords_almost_equals(),3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestPolygon_coords_almost_equals(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['result == ', 'result == ']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2061,aleju,kontakt@ajung.name,2019-09-27 20:36:57+02:00,0382a763b7fede8e08c776d9992cbc12e1fc6dfc,https://github.com/aleju/imgaug/commit/0382a763b7fede8e08c776d9992cbc12e1fc6dfc,Add property Polygon.coords,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestPolygon_coords(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['poly.coords is poly.exterior'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2062,aleju,kontakt@ajung.name,2019-09-27 20:49:21+02:00,0ccdae493dcb847dd8d7923e1f699bd21bc36f2c,https://github.com/aleju/imgaug/commit/0ccdae493dcb847dd8d7923e1f699bd21bc36f2c,Add property Keypoint.coords,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(coords, [1, 1.5], atol=1e-8, rtol=0)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2063,aleju,kontakt@ajung.name,2019-09-27 20:56:53+02:00,73dc12651dd6c1bab19ac9795b2f8b00bc50dfa6,https://github.com/aleju/imgaug/commit/73dc12651dd6c1bab19ac9795b2f8b00bc50dfa6,Add Keypoint.coords_almost_equals(),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['equal', 'not equal', 'equal', 'not equal', 'equal', 'not equal', 'equal', 'not equal']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2064,aleju,kontakt@ajung.name,2019-09-27 20:57:12+02:00,e134cf4b655ee9fd7d98b59928ce5021e565985a,https://github.com/aleju/imgaug/commit/e134cf4b655ee9fd7d98b59928ce5021e565985a,Fix typos,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2065,aleju,kontakt@ajung.name,2019-09-27 21:03:42+02:00,2e6ea9e1fcfaadc3efe9104c95077c3b2579128c,https://github.com/aleju/imgaug/commit/2e6ea9e1fcfaadc3efe9104c95077c3b2579128c,Add Keypoint.almost_equals(),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['result == '],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2066,aleju,kontakt@ajung.name,2019-09-27 21:14:38+02:00,51cf14a916b88493885988004646aee02a2fa5b3,https://github.com/aleju/imgaug/commit/51cf14a916b88493885988004646aee02a2fa5b3,Add tests for bounding box aug in Alpha,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(observed[0].items) == len(expected.items)', 'observed[0].shape == expected.shape', 'item_a.coords_almost_equals(item_b)', 'item.is_valid', 'len(observed.items) == len(expected_same.items)', 'len(observed.items) == len(expected_shifted.items)', 'len(observed.items) == 0', 'observed.shape == cbaoi.shape', 'observed.items[0].coords_almost_equals(cbaoi.items[0])']",[],[],[],[],[],[],[],[],[],[],[],[],"['keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'False', '100 - 50 < seen[0] < 100 + 50', '100 - 50 < seen[1] < 100 + 50', 'len(observed.keypoints) == 0', 'observed.shape == (1, 2, 3)', 'keypoints_equal([observed], [self.kpsoi])', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed.polygons) == 0', 'observed.shape == (1, 2, 3)', 'observed.polygons[0].exterior_almost_equals(']",[],[],[],[],[],[],[],[],[],[],[],[]
2067,aleju,kontakt@ajung.name,2019-09-28 10:11:22+02:00,ab11f67ef80ca205f9c4ae6d7f4dc7d43e829c19,https://github.com/aleju/imgaug/commit/ab11f67ef80ca205f9c4ae6d7f4dc7d43e829c19,Add tests for bounding box aug in AlphaElementwise,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(observed) == 1', 'len(observed[0].items) == len(expected.items)', 'observed[0].shape == expected.shape', 'item_a.coords_almost_equals(item_b)', 'item.is_valid', 'np.isclose(seen[0], expected_iter, rtol=0, atol=atol)', 'np.isclose(seen[1], expected_iter, rtol=0, atol=atol)', 'np.isclose(seen[2], expected_iter_notsame, rtol=0, atol=atol)', 'np.isclose(seen[0], expected_iter, rtol=0, atol=atol)', 'np.isclose(seen[1], expected_iter, rtol=0, atol=atol)', 'seen[2] == 0', 'len(observed.items) == 0', 'observed.items[0].coords_almost_equals(cbaoi.items[0])']",[],[],[],[],[],[],[],[],[],[],[],[],"['keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'keypoints_equal([observed], [expected])', 'len(observed.keypoints) == 0', 'observed.shape == (1, 2, 3)', 'keypoints_equal([observed], [self.kpsoi])', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.psoi.shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'np.isclose(seen[0], expected_iter, rtol=0, atol=atol)', 'np.isclose(seen[1], expected_iter, rtol=0, atol=atol)', 'seen[2] == 0', 'len(observed.polygons) == 0', 'observed.polygons[0].exterior_almost_equals(']",[],[],[],[],[],[],[],[],[],[],[],[]
2068,aleju,kontakt@ajung.name,2019-09-28 10:14:07+02:00,8be7ede8e70621cd9ac2439e761cd72cde1dbae9,https://github.com/aleju/imgaug/commit/8be7ede8e70621cd9ac2439e761cd72cde1dbae9,Fix convert_iterable_to_string_of_types() crashing on join,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2069,aleju,kontakt@ajung.name,2019-09-28 10:28:36+02:00,4e67889630e4204f517915c72f5792b80641ea80,https://github.com/aleju/imgaug/commit/4e67889630e4204f517915c72f5792b80641ea80,Add testutils.assert_cbaois_equal() and .shift_cbaoi(),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(observed, list)', 'isinstance(expected, list)', 'len(observed) == len(expected)', 'len(observed.items) == len(expected.items)', 'observed.shape == expected.shape', 'item_a.coords_almost_equals(item_b)', 'item_obs.is_valid']",[],[],[],[],[],[],[],[],[],[],[],[],"['len(observed) == 1', 'len(observed[0].items) == len(expected.items)', 'observed[0].shape == expected.shape', 'item_a.coords_almost_equals(item_b)', 'item.is_valid', 'len(observed) == 1', 'len(observed[0].items) == len(expected.items)', 'observed[0].shape == expected.shape', 'item_a.coords_almost_equals(item_b)', 'item.is_valid']",[],[],[],[],[],[],[],[],[],[],[],[]
2070,aleju,kontakt@ajung.name,2019-09-28 11:03:25+02:00,2cebe84e4e477cae8de5222d337282c3245175a5,https://github.com/aleju/imgaug/commit/2cebe84e4e477cae8de5222d337282c3245175a5,Add tests for BBs in Flipud/Fliplr,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.isclose(nb_cbaoi_flipped/nb_iterations,', 'nb_cbaoi_flipped in [0, nb_iterations]']",[],[],[],[],[],[],[],[],[],[],[],[],"['keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.psoi[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.psoi[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.psoi[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.psoi[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'np.isclose(nb_keypoints_flipped/nb_iterations,', 'nb_keypoints_flipped_det in [0, nb_iterations]', 'np.isclose(nb_polygons_flipped/nb_iterations,', 'nb_polygons_flipped_det in [0, nb_iterations]']",[],[],[],[],[],[],[],[],[],[],[],[]
2071,aleju,kontakt@ajung.name,2019-09-28 15:04:29+02:00,c3d4d839ab052aed4d3f653058da982f1f7663a2,https://github.com/aleju/imgaug/commit/c3d4d839ab052aed4d3f653058da982f1f7663a2,Refactor affine matrix generation,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2072,aleju,kontakt@ajung.name,2019-09-28 15:04:51+02:00,18c63db09d8d95a1b16ad88f88f933e89b00733d,https://github.com/aleju/imgaug/commit/18c63db09d8d95a1b16ad88f88f933e89b00733d,"Add tests for BBs, Polys, alignment in Affine scale aug",1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['kpsois_aug[1].empty', 'value > 200']",[],[],[],[],[],[],[],[],[],[],[],[],"['keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y > 2', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y > 2', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y == 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y == 2', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y == 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y == 2', 'observed[0].keypoints[0].x == 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x == 2', 'observed[0].keypoints[2].y > 2', 'observed[0].keypoints[0].x == 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x == 2', 'observed[0].keypoints[2].y > 2', 'keypoints_equal(observed, self.scale_zoom_out_kpsoi_aug)', 'keypoints_equal(observed, self.scale_zoom_out_kpsoi_aug)']",[],[],[],[],[],[],[],[],[],[],[],[]
2073,aleju,kontakt@ajung.name,2019-09-28 15:28:44+02:00,a9e3a7530859b4d2fc44f0ac4ade07927f1209d5,https://github.com/aleju/imgaug/commit/a9e3a7530859b4d2fc44f0ac4ade07927f1209d5,Add tests for BB/Poly aug in Affine translate,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['keypoints_equal(observed, self.kpsoi_1px_right)', 'keypoints_equal(observed, self.kpsoi_1px_right)', 'keypoints_equal(observed, self.kpsoi_1px_bottom)', 'keypoints_equal(observed, self.kpsoi_1px_bottom)', 'keypoints_equal(observed, self.kpsoi_1px_right)', 'keypoints_equal(observed, self.kpsoi_1px_right)', 'keypoints_equal(observed, self.kpsoi_1px_bottom)', 'keypoints_equal(observed, self.kpsoi_1px_bottom)']",[],[],[],[],[],[],[],[],[],[],[],[]
2074,aleju,kontakt@ajung.name,2019-09-28 16:28:19+02:00,c706637e68fd2cbf3bfcce195a93e77125d4d6b2,https://github.com/aleju/imgaug/commit/c706637e68fd2cbf3bfcce195a93e77125d4d6b2,Fix Affine coords-based aug using wrong shift,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2075,aleju,kontakt@ajung.name,2019-09-28 16:29:29+02:00,76a8df75a0403181dfc090bb757439df3fb38e53,https://github.com/aleju/imgaug/commit/76a8df75a0403181dfc090bb757439df3fb38e53,Add tests for BB/Poly aug in Affine rotate & adjust shift offset,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['keypoints_equal(observed, self.kpsoi_rot90)', 'keypoints_equal(observed, self.kpsoi_rot90)']",[],[],[],[],[],[],[],[],[],[],[],[]
2076,aleju,kontakt@ajung.name,2019-09-28 17:09:39+02:00,f2ed6fbe54d04c887cd3045a8fa379509cbb933f,https://github.com/aleju/imgaug/commit/f2ed6fbe54d04c887cd3045a8fa379509cbb933f,Add tests for BB aug in PiecewiseAffine,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed_bbsoi.shape == img.shape', 'bb_aug.iou(expected) > 0.8']",[],[],[],[],[],[],[],[],[],[],[],[],"['kpsoi_aug.shape == (14, 14, 3)', 'np.allclose(kpsoi_aug.keypoints[0].x, 5)', 'np.allclose(kpsoi_aug.keypoints[0].y, 3)', 'np.allclose(kpsoi_aug.keypoints[1].x, 3)', 'np.allclose(kpsoi_aug.keypoints[1].y, 8)', 'observed.shape == img.shape', 'observed.polygons[0].exterior_almost_equals(psoi.polygons[0])', 'observed.polygons[1].exterior_almost_equals(psoi.polygons[1])', 'observed.polygons[0].is_valid', 'observed.polygons[1].is_valid', 'keypoints_equal([kpsoi], observed)', 'observed.shape == (10, 10, 3)', 'len(observed.keypoints) == 0', 'observed.shape == (10, 10, 3)', 'observed.polygons[0].exterior_almost_equals(poly)', 'observed.polygons[0].is_valid', 'observed.shape == (10, 10, 3)', 'len(observed.polygons) == 0']",[],[],[],[],[],[],[],[],[],[],[],[]
2077,aleju,kontakt@ajung.name,2019-09-28 17:13:04+02:00,b3385580686d7c0bc59a14feba9a503d9dab30fb,https://github.com/aleju/imgaug/commit/b3385580686d7c0bc59a14feba9a503d9dab30fb,Fix PiecewiseAffine KP aug unaligned if KPOI empty,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2078,aleju,kontakt@ajung.name,2019-09-28 18:26:09+02:00,c298ef5e389eb92b59750646427a23b0f4bdaef8,https://github.com/aleju/imgaug/commit/c298ef5e389eb92b59750646427a23b0f4bdaef8,Add tests for BB aug in PerspectiveTransform,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['kp_observed.coords_almost_equals(', 'kp_observed.coords_almost_equals(', 'kpsoi_aug.shape == img.shape', 'img_aug[y, x] > 10', 'bb_observed.coords_almost_equals(', 'bb_observed.coords_almost_equals(', 'bbsoi_aug.shape == img_aug.shape', 'np.max(top_row) > 10', 'np.max(btm_row) > 10', 'np.max(lft_row) > 10', 'np.max(rgt_row) > 10', 'nb_skipped <= 2']",[],[],[],[],[],[],[],[],[],[],[],[],"['kp_expected.x - 1.5 < kp_observed.x < kp_expected.x + 1.5', 'kp_expected.y - 1.5 < kp_observed.y < kp_expected.y + 1.5', 'kp_expected.x - 1.5 < kp_observed.x < kp_expected.x + 1.5', 'kp_expected.y - 1.5 < kp_observed.y < kp_expected.y + 1.5', 'kpsoi_aug.shape == img.shape', 'img_aug[y, x] > 10', 'observed.shape == (20, 10, 3)', 'len(observed.keypoints) == 0', 'observed.shape == (20, 10, 3)', 'len(observed.polygons) == 0']",[],[],[],[],[],[],[],[],[],[],[],[]
2079,aleju,kontakt@ajung.name,2019-09-28 19:11:25+02:00,b6cb9fd0f88a3b5212649ecb5df90c57a2c29416,https://github.com/aleju/imgaug/commit/b6cb9fd0f88a3b5212649ecb5df90c57a2c29416,Add tests for BB aug in ElasticTransformation,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['d < 1e-8', 'd < 1e-8', 'd < 0.5', 'bbsoi_aug.shape == (100, 100)', 'len(bbsoi_aug.bounding_boxes) == 1', 'np.max(top_row) > 10', 'np.max(btm_row) > 10', 'np.max(lft_row) > 10', 'np.max(rgt_row) > 10', 'count_bad <= 1', 'len(bbsoi_aug.bounding_boxes) == 0', 'bbsoi_aug.shape == (10, 10, 3)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2080,aleju,kontakt@ajung.name,2019-09-28 19:56:14+02:00,3940494bc2aea08e19ac40b58e7f8dd52be257bd,https://github.com/aleju/imgaug/commit/3940494bc2aea08e19ac40b58e7f8dd52be257bd,Add tests for BB aug in Rot90,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,48,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['bbsoi_aug.shape == (4, 8, 3)', 'len(bbsoi_aug.bounding_boxes) == 1', 'bbsoi_aug.bounding_boxes[0].coords_almost_equals(expected)']",[],[],[],[],[],[],[],[],[],[],[],[],"['kpsoi_aug.shape == self.kpsoi.shape', 'np.allclose([kp_aug.x, kp_aug.y], [kp.x, kp.y])', 'psoi_aug.shape == self.psoi.shape', 'len(psoi_aug.polygons) == 1', 'psoi_aug.polygons[0].is_valid', 'np.allclose(poly_aug.exterior, poly.exterior)', 'kpsoi_aug.shape == (8, 4, 3)', 'np.allclose([kp_aug.x, kp_aug.y], [kp[0], kp[1]])', 'psoi_aug.shape == (8, 4, 3)', 'len(psoi_aug.polygons) == 1', 'psoi_aug.polygons[0].is_valid', 'psoi_aug.polygons[0].exterior_almost_equals(', 'kpsoi_aug.shape == (4, 8, 3)', 'np.allclose([kp_aug.x, kp_aug.y], [kp[0], kp[1]])', 'psoi_aug.shape == (4, 8, 3)', 'len(psoi_aug.polygons) == 1', 'psoi_aug.polygons[0].is_valid', 'psoi_aug.polygons[0].exterior_almost_equals(expected_k2_poly)', 'kpsoi_aug.shape == (8, 4, 3)', 'np.allclose([kp_aug.x, kp_aug.y], [kp[0], kp[1]])', 'psoi_aug.shape == (8, 4, 3)', 'len(psoi_aug.polygons) == 1', 'psoi_aug.polygons[0].is_valid', 'psoi_aug.polygons[0].exterior_almost_equals(', 'kpsoi_aug[0].shape == (8, 4, 3)', 'kpsoi_aug[1].shape == (4, 8, 3)', 'kpsoi_aug[2].shape == (8, 4, 3)', 'kpsoi_aug[3].shape == (4, 8, 3)', 'np.allclose(kpxy_aug(kpsoi_aug, 0, 0), expected_k1_kps[0])', 'np.allclose(kpxy_aug(kpsoi_aug, 0, 1), expected_k1_kps[1])', 'np.allclose(kpxy_aug(kpsoi_aug, 1, 0), expected_k2_kps[0])', 'np.allclose(kpxy_aug(kpsoi_aug, 1, 1), expected_k2_kps[1])', 'np.allclose(kpxy_aug(kpsoi_aug, 2, 0), expected_k1_kps[0])', 'np.allclose(kpxy_aug(kpsoi_aug, 2, 1), expected_k1_kps[1])', 'np.allclose(kpxy_aug(kpsoi_aug, 3, 0), expected_k2_kps[0])', 'np.allclose(kpxy_aug(kpsoi_aug, 3, 1), expected_k2_kps[1])', 'psoi_aug[0].shape == (8, 4, 3)', 'psoi_aug[1].shape == (4, 8, 3)', 'psoi_aug[2].shape == (8, 4, 3)', 'psoi_aug[3].shape == (4, 8, 3)', 'psoi_aug[0].polygons[0].exterior_almost_equals(expected_k1_poly)', 'psoi_aug[1].polygons[0].exterior_almost_equals(expected_k2_poly)', 'psoi_aug[2].polygons[0].exterior_almost_equals(expected_k1_poly)', 'psoi_aug[3].polygons[0].exterior_almost_equals(expected_k2_poly)', 'len(kpsoi_aug.keypoints) == 0', 'kpsoi_aug.shape == (8, 4, 3)', 'len(psoi_aug.polygons) == 0', 'psoi_aug.shape == (8, 4, 3)']",[],[],[],[],[],[],[],[],[],[],[],[]
2081,aleju,kontakt@ajung.name,2019-09-28 21:21:45+02:00,ddcdd91ee5eaadc77bc424fde71eb0819d008c8f,https://github.com/aleju/imgaug/commit/ddcdd91ee5eaadc77bc424fde71eb0819d008c8f,Add tests for BB aug in Noop,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'observed.shape == psoi.shape', 'len(observed.polygons) == 1', 'observed.polygons[0].exterior_almost_equals(psoi.polygons[0])', 'observed.shape == psoi.shape', 'len(observed.polygons) == 1', 'observed.polygons[0].exterior_almost_equals(psoi.polygons[0])', 'observed.shape == lsoi.shape', 'len(observed.line_strings) == 1', 'observed.shape == lsoi.shape', 'len(observed.line_strings) == 1', 'observed.line_strings[0].coords_almost_equals(', 'observed.shape == (4, 5, 3)', 'len(observed.keypoints) == 0', 'observed.shape == (4, 5, 3)', 'len(observed.polygons) == 0']",[],[],[],[],[],[],[],[],[],[],[],[]
2082,aleju,kontakt@ajung.name,2019-09-28 21:37:28+02:00,928e6907a3614353829924a8918b1e81ac48a4fd,https://github.com/aleju/imgaug/commit/928e6907a3614353829924a8918b1e81ac48a4fd,Add tests for BB aug in Sequential,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['keypoints_equal(observed, [self.keypoints_aug])', 'keypoints_equal(observed, [self.keypoints_aug])', 'observed.shape == polygons.shape', 'observed.polygons[0].exterior_almost_equals(', 'observed.polygons[0].is_valid', 'len(observed.polygons) == 1', 'observed.shape == polygons.shape', 'observed.polygons[0].exterior_almost_equals(', 'observed.polygons[0].is_valid']",[],[],[],[],[],[],[],[],[],[],[],[]
2083,aleju,kontakt@ajung.name,2019-09-28 21:48:39+02:00,37e2aa0e7725eb72013e42e92d7b417d660a0a07,https://github.com/aleju/imgaug/commit/37e2aa0e7725eb72013e42e92d7b417d660a0a07,Add tests for BB aug in SomeOf,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(bbsoi_aug.bounding_boxes) == 1', 'bbsoi_aug.shape == (5, 6, 3)', 'np.any(matches)', 'bb.coords_almost_equals(bbsoi.bounding_boxes[0])', 'bb.coords_almost_equals(bbsoi_x.bounding_boxes[0])', 'bb.coords_almost_equals(bbsoi_y.bounding_boxes[0])', 'bb.coords_almost_equals(bbsoi_xy.bounding_boxes[0])', 'False', 'np.all(seen)']",[],[],[],[],[],[],[],[],[],[],[],[],"['len(kpsoi_aug.keypoints) == 0', 'kpsoi_aug.shape == (5, 6, 3)', 'len(psoi_aug.polygons) == 0', 'psoi_aug.shape == (5, 6, 3)']",[],[],[],[],[],[],[],[],[],[],[],[]
2084,aleju,kontakt@ajung.name,2019-09-28 22:26:44+02:00,265c69d07c5418a6a6547b9adbc361a83ec4d180,https://github.com/aleju/imgaug/commit/265c69d07c5418a6a6547b9adbc361a83ec4d180,Add tests for BB aug in Sometimes,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.isclose(p_if_branch, 0.5, rtol=0, atol=0.15)', 'np.isclose(p_else_branch, 0.5, rtol=0, atol=0.15)', 'np.isclose(p_if_branch, 0.5, rtol=0, atol=0.15)', 'np.isclose(p_else_branch, 0.5, rtol=0, atol=0.15)']",[],[],[],[],[],[],[],[],[],[],[],[],"['keypoints_equal(observed, self.keypoints_lr)', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.polygons.shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == self.polygons.shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed.keypoints) == 0', 'observed.shape == (1, 2, 3)', 'len(observed.polygons) == 0', 'observed.shape == (1, 2, 3)']",[],[],[],[],[],[],[],[],[],[],[],[]
2085,aleju,kontakt@ajung.name,2019-09-28 22:37:26+02:00,6d6b2878e3eb600a727bf00eb26571babab845b1,https://github.com/aleju/imgaug/commit/6d6b2878e3eb600a727bf00eb26571babab845b1,Add tests for BB aug in WithChannels,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(kpsoi_aug.keypoints) == 2', 'kpsoi_aug.shape == (5, 6, 3)', 'keypoints_equal([kpsoi_aug], [kpsoi])', 'len(kpsoi_aug.keypoints) == 2', 'kpsoi_aug.shape == (5, 6, 3)', 'keypoints_equal([kpsoi_aug], [kpsoi_x])', 'len(kpsoi_aug.keypoints) == 2', 'kpsoi_aug.shape == (5, 6, 3)', 'keypoints_equal([kpsoi_aug], [kpsoi_x])', 'len(kpsoi_aug.keypoints) == 0', 'kpsoi_aug.shape == (5, 6, 3)', 'len(psoi_aug.polygons) == 1', 'psoi_aug.shape == (5, 6, 3)', 'psoi_aug.polygons[0].exterior_almost_equals(psoi.polygons[0])', 'psoi_aug.polygons[0].is_valid', 'len(psoi_aug.polygons) == 1', 'psoi_aug.shape == (5, 6, 3)', 'psoi_aug.polygons[0].exterior_almost_equals(psoi_x.polygons[0])', 'psoi_aug.polygons[0].is_valid', 'len(psoi_aug.polygons) == 1', 'psoi_aug.shape == (5, 6, 3)', 'psoi_aug.polygons[0].exterior_almost_equals(psoi_x.polygons[0])', 'psoi_aug.polygons[0].is_valid', 'len(psoi_aug.polygons) == 0', 'psoi_aug.shape == (5, 6, 3)']",[],[],[],[],[],[],[],[],[],[],[],[]
2086,aleju,kontakt@ajung.name,2019-09-28 22:41:24+02:00,97c1cb294267796643e9d1874c82368d70c2e83f,https://github.com/aleju/imgaug/commit/97c1cb294267796643e9d1874c82368d70c2e83f,Add tests for BB aug in ChannelShuffle,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['kpsoi_aug.shape == (10, 10, 3)', 'np.allclose(kpsoi_aug.keypoints[0].x, 3)', 'np.allclose(kpsoi_aug.keypoints[0].y, 1)', 'np.allclose(kpsoi_aug.keypoints[1].x, 2)', 'np.allclose(kpsoi_aug.keypoints[1].y, 4)', 'psoi_aug.shape == (10, 10, 3)', 'psoi_aug.polygons[0].exterior_almost_equals(psoi.polygons[0])']",[],[],[],[],[],[],[],[],[],[],[],[]
2087,aleju,kontakt@ajung.name,2019-09-28 22:41:51+02:00,8541b778f6d8af0760ad6c4b306ac23b8a1a3ae7,https://github.com/aleju/imgaug/commit/8541b778f6d8af0760ad6c4b306ac23b8a1a3ae7,Add missing changelog entry for PWA empty KP fix,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2088,aleju,kontakt@ajung.name,2019-09-29 10:39:21+02:00,2651b36093566140180be60b89edb01ec470d959,https://github.com/aleju/imgaug/commit/2651b36093566140180be60b89edb01ec470d959,Fix assert_is_iterable_of() for non-iterable inputs,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2089,aleju,kontakt@ajung.name,2019-09-29 10:39:46+02:00,b0b8dc1124f726cd4455f9c70a86284e64953f4d,https://github.com/aleju/imgaug/commit/b0b8dc1124f726cd4455f9c70a86284e64953f4d,Add tests for BB and Poly aug in pooling augmenters,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.shape == psoi_aug.shape', 'np.allclose(', 'np.allclose(', 'psoi_aug.shape == image_aug.shape', 'len(psoi_aug.polygons) == 0', 'image_aug.shape == bbsoi_aug.shape', 'np.allclose(', 'np.allclose(', 'bbsoi_aug.shape == image_aug.shape', 'len(bbsoi_aug.bounding_boxes) == 0']",[],[],[],[],[],[],[],[],[],[],[],[],"['kpsoi_aug.shape == (6, 6, 3)', 'np.allclose(kpsoi_aug.to_xy_array(),', 'kpsoi_aug.shape == (6, 6, 3)', 'np.allclose(kpsoi_aug.to_xy_array(),', 'kpsoi_aug.shape == (3, 3, 3)', 'np.allclose(kpsoi_aug.to_xy_array(),', 'kpsoi_aug.shape == (2, 3, 3)', 'np.allclose(kpsoi_aug.to_xy_array(),', 'kpsoi_aug.shape == (2, 3, 3)', 'np.allclose(kpsoi_aug.to_xy_array(),', 'psoi_aug.shape == (2, 3, 3)', 'np.allclose(psoi_aug.polygons[0].exterior,', 'kpsoi_aug.shape == (2, 2, 3)', 'len(kpsoi_aug.keypoints) == 0', 'psoi_aug.shape == (2, 2, 3)', 'len(psoi_aug.polygons) == 0']",[],[],[],[],[],[],[],[],[],[],[],[]
2090,aleju,kontakt@ajung.name,2019-09-29 10:56:36+02:00,9032552b6b53649eac80993154dd52c06c95449a,https://github.com/aleju/imgaug/commit/9032552b6b53649eac80993154dd52c06c95449a,Add tests for BB aug in Resize,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(bbsoi_aug.bounding_boxes) == 2', 'bbsoi_aug.shape == (8, 12, 3)', 'bbsoi_aug.bounding_boxes[0].coords_almost_equals(', 'bbsoi_aug.bounding_boxes[1].coords_almost_equals(', 'len(bbsoi_aug.bounding_boxes) == 2', 'bbsoi_aug.shape == (8, 24)', 'bbsoi_aug.bounding_boxes[0].coords_almost_equals(', 'bbsoi_aug.bounding_boxes[1].coords_almost_equals(', 'len(bbsoi_aug.bounding_boxes) == 0', 'bbsoi_aug.shape == (8, 12, 3)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2091,aleju,kontakt@ajung.name,2019-09-29 12:58:24+02:00,a4a36db4d71264b16ad1c03aadc30f2205cfe874,https://github.com/aleju/imgaug/commit/a4a36db4d71264b16ad1c03aadc30f2205cfe874,Add tests for BB aug in Pad,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(bbsoi_aug) == 2', 'bbsoi_aug_i.shape == (10, 8, 3)', 'len(bbsoi_aug_i.bounding_boxes) == 2', 'bbsoi_aug_i.bounding_boxes[0].coords_almost_equals(', 'bbsoi_aug_i.bounding_boxes[1].coords_almost_equals(', 'len(bbsoi_aug) == 2', 'bbsoi_aug_i.shape == (4, 4, 3)', 'len(bbsoi_aug_i.bounding_boxes) == 2', 'bbsoi_aug_i.bounding_boxes[0].coords_almost_equals(', 'bbsoi_aug_i.bounding_boxes[1].coords_almost_equals(', 'len(bbsoi_aug) == 2', 'bbsoi_aug_i.shape == (10, 8, 3)', 'len(bbsoi_aug_i.bounding_boxes) == 2', 'bbsoi_aug_i.bounding_boxes[0].coords_almost_equals(', 'bbsoi_aug_i.bounding_boxes[1].coords_almost_equals(', 'len(bbsoi_aug) == 2', 'bbsoi_aug_i.shape == (4, 4, 3)', 'len(bbsoi_aug_i.bounding_boxes) == 2', 'bbsoi_aug_i.bounding_boxes[0].coords_almost_equals(', 'bbsoi_aug_i.bounding_boxes[1].coords_almost_equals(']",[],[],[],[],[],[],[],[],[],[],[],[],"['keypoints_equal(observed, keypoints_moved)']",[],[],[],[],[],[],[],[],[],[],[],[]
2092,aleju,kontakt@ajung.name,2019-09-29 13:34:48+02:00,80eacbfde036c22bfdfd16ae955c8e5f0405363a,https://github.com/aleju/imgaug/commit/80eacbfde036c22bfdfd16ae955c8e5f0405363a,Add tests for BB aug in Crop,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(bbsoi_aug) == 2', 'bbsoi_aug_i.shape == (5, 6, 3)', 'len(bbsoi_aug_i.bounding_boxes) == 2', 'bbsoi_aug_i.bounding_boxes[0].coords_almost_equals(', 'bbsoi_aug_i.bounding_boxes[1].coords_almost_equals(', 'len(bbsoi_aug) == 2', 'bbsoi_aug_i.shape == (10, 10, 3)', 'len(bbsoi_aug_i.bounding_boxes) == 2', 'bbsoi_aug_i.bounding_boxes[0].coords_almost_equals(', 'bbsoi_aug_i.bounding_boxes[1].coords_almost_equals(', 'len(bbsoi_aug) == 2', 'bbsoi_aug_i.shape == (3, 9, 3)', 'len(bbsoi_aug_i.bounding_boxes) == 2', 'bbsoi_aug_i.bounding_boxes[0].coords_almost_equals(', 'bbsoi_aug_i.bounding_boxes[1].coords_almost_equals(', 'len(bbsoi_aug) == 2', 'bbsoi_aug_i.shape == (10, 10, 3)', 'len(bbsoi_aug_i.bounding_boxes) == 2', 'bbsoi_aug_i.bounding_boxes[0].coords_almost_equals(', 'bbsoi_aug_i.bounding_boxes[1].coords_almost_equals(']",[],[],[],[],[],[],[],[],[],[],[],[],"['keypoints_equal(observed, keypoints_moved)']",[],[],[],[],[],[],[],[],[],[],[],[]
2093,aleju,kontakt@ajung.name,2019-09-29 13:51:22+02:00,b9713fb0f18e77998eea4c9e9ff0a354bff92bbb,https://github.com/aleju/imgaug/commit/b9713fb0f18e77998eea4c9e9ff0a354bff92bbb,Add tests for BB aug in PadToFixedSize,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])']",[],[],[],[],[],[],[],[],[],[],[],[]
2094,aleju,kontakt@ajung.name,2019-09-29 14:20:23+02:00,65675c35f0ee470f6f16c56e210b54d372d753d1,https://github.com/aleju/imgaug/commit/65675c35f0ee470f6f16c56e210b54d372d753d1,Add BB aug tests to CropToFixedSize,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])', 'observed[0].shape == expected.shape', 'keypoints_equal(observed, [expected])']",[],[],[],[],[],[],[],[],[],[],[],[]
2095,aleju,kontakt@ajung.name,2019-09-29 14:44:16+02:00,c6bf79d24a0ad3b18b6f62ab3d6ec7e70e56ee07,https://github.com/aleju/imgaug/commit/c6bf79d24a0ad3b18b6f62ab3d6ec7e70e56ee07,Add tests for Poly and BB aug in KeepSizeByResize,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['psoi_aug.shape == (4, 4, 3)', 'np.allclose(', 'psoi_aug.shape == (3, 4, 3)', 'np.allclose(', 'bbsoi_aug.shape == (4, 4, 3)', 'np.allclose(', 'bbsoi_aug.shape == (3, 4, 3)', 'np.allclose(']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2096,aleju,kontakt@ajung.name,2019-09-29 14:44:44+02:00,c8628ce844178e48f3d60cd1160f4e654fdeef17,https://github.com/aleju/imgaug/commit/c8628ce844178e48f3d60cd1160f4e654fdeef17,Update changelog with fix of assert_is_iterable_of(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2097,aleju,kontakt@ajung.name,2019-09-29 17:01:38+02:00,d33676c8405666bf643b22949156f75103d02806,https://github.com/aleju/imgaug/commit/d33676c8405666bf643b22949156f75103d02806,Add BB aug methods to various augmenters,7,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2098,aleju,kontakt@ajung.name,2019-09-29 17:03:16+02:00,7ea08bd92b107fc6dffccea06df213d0180b91a6,https://github.com/aleju/imgaug/commit/7ea08bd92b107fc6dffccea06df213d0180b91a6,Add tests for BB aug in Lambda,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == expected_psoi[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed) == 1', 'len(observed[0].polygons) == 1', 'observed[0].shape == expected_psoi[0].shape', 'observed[0].polygons[0].exterior_almost_equals(', 'observed[0].polygons[0].is_valid', 'len(observed.keypoints) == 0', 'observed.shape == (1, 2, 3)', 'len(observed.polygons) == 0', 'observed.shape == (1, 2, 3)']",[],[],[],[],[],[],[],[],[],[],[],[]
2099,aleju,kontakt@ajung.name,2019-09-29 17:13:34+02:00,41424310ef9d6bc4e68e08b23f1a3fd7f87f42f1,https://github.com/aleju/imgaug/commit/41424310ef9d6bc4e68e08b23f1a3fd7f87f42f1,Add tests for BB aug in AssertLambda,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Raises', '(AssertionError):'), ('Raises', '(AssertionError):')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'len(observed.polygons) == 1', 'observed.polygons[0].exterior_almost_equals(', 'observed.shape == expected.shape', 'observed.polygons[0].is_valid', 'len(observed.polygons) == 1', 'observed.polygons[0].exterior_almost_equals(', 'observed.shape == expected.shape', 'observed.polygons[0].is_valid']",[],[],[],[],[],[],[],[],[],[],[],[]
2100,aleju,kontakt@ajung.name,2019-09-29 17:37:35+02:00,55e305d556797549365b8fee7cdfd457da1fdb4b,https://github.com/aleju/imgaug/commit/55e305d556797549365b8fee7cdfd457da1fdb4b,Add tests for BB aug in AssertShape,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'len(observed.polygons) == 1', 'observed.shape == expected.shape', 'observed.polygons[0].exterior_almost_equals(', 'observed.polygons[0].is_valid', 'len(observed.polygons) == 1', 'observed.shape == expected.shape', 'observed.polygons[0].exterior_almost_equals(', 'observed.polygons[0].is_valid', 'len(observed.polygons) == 1', 'observed.shape == expected.shape', 'observed.polygons[0].exterior_almost_equals(', 'observed.polygons[0].is_valid', 'len(observed.polygons) == 1', 'observed.shape == expected.shape', 'observed.polygons[0].exterior_almost_equals(', 'observed.polygons[0].is_valid', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'len(observed.polygons) == 1', 'observed.shape == expected.shape', 'observed.polygons[0].exterior_almost_equals(', 'observed.polygons[0].is_valid', 'len(observed.polygons) == 1', 'observed.shape == expected.shape', 'observed.polygons[0].exterior_almost_equals(', 'observed.polygons[0].is_valid', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'len(observed.polygons) == 1', 'observed.shape == expected.shape', 'observed.polygons[0].exterior_almost_equals(', 'observed.polygons[0].is_valid', 'len(observed.polygons) == 1', 'observed.shape == expected.shape', 'observed.polygons[0].exterior_almost_equals(', 'observed.polygons[0].is_valid']",[],[],[],[],[],[],[],[],[],[],[],[]
2101,aleju,kontakt@ajung.name,2019-09-29 17:38:02+02:00,1dfa1745400eb66b72dd96a9d7fd96fb92e30900,https://github.com/aleju/imgaug/commit/1dfa1745400eb66b72dd96a9d7fd96fb92e30900,Extend changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2102,aleju,kontakt@ajung.name,2019-09-29 17:41:42+02:00,5f3fa47ccb2dd6ba9388ae8b0890279b5dfc7bba,https://github.com/aleju/imgaug/commit/5f3fa47ccb2dd6ba9388ae8b0890279b5dfc7bba,Add PR ID to changelog,5,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2103,aleju,kontakt@ajung.name,2019-09-29 17:44:48+02:00,ee2a389a6ffb03b5daad5b51b1f72197f6a3ee4d,https://github.com/aleju/imgaug/commit/ee2a389a6ffb03b5daad5b51b1f72197f6a3ee4d,Adapt new changelog files to fixed folder names,4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2104,aleju,kontakt@ajung.name,2019-09-29 17:48:43+02:00,e77c668fd210b123919f5e9a99501ed06b0fed63,https://github.com/aleju/imgaug/commit/e77c668fd210b123919f5e9a99501ed06b0fed63,Improve flip BB aug tests BB definition,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2105,aleju,kontakt@ajung.name,2019-09-29 21:04:21+02:00,dfd7b9bf1571d6f31bff792ee627d259ba7367b8,https://github.com/aleju/imgaug/commit/dfd7b9bf1571d6f31bff792ee627d259ba7367b8,Refactor tests,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(cbaoi_aug, self._ObjOnImageClass)', 'cbaoi_aug.empty', 'cbaoi_aug.shape == (11, 10, 3)', 'isinstance(cbaois_aug, list)', 'isinstance(cbaois_aug[0], self._ObjOnImageClass)', 'cbaois_aug[0].empty', 'cbaois_aug[0].shape == (11, 10, 3)', 'isinstance(cbaois_aug, list)', 'isinstance(cbaois_aug[0], self._ObjOnImageClass)', 'isinstance(cbaois_aug[0], self._ObjOnImageClass)', 'len(cbaois_aug[0].items) == 2', 'len(cbaois_aug[1].items) == 2', 'cbaois_aug[0].shape == (10, 10, 3)', 'cbaois_aug[1].shape == (10, 10, 3)', 'found_cba']",[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(poly_oi_aug, self._ObjOnImageClass)', 'len(self._entities(poly_oi_aug)) == 0', 'poly_oi_aug.shape == (11, 10, 3)', 'isinstance(poly_oi_aug, list)', 'isinstance(poly_oi_aug[0], self._ObjOnImageClass)', 'len(self._entities(poly_oi_aug[0])) == 0', 'poly_oi_aug[0].shape == (11, 10, 3)', 'isinstance(poly_ois_aug, list)', 'isinstance(poly_ois_aug[0], self._ObjOnImageClass)', 'isinstance(poly_ois_aug[0], self._ObjOnImageClass)', 'len(self._entities(poly_ois_aug[0])) == 2', 'len(self._entities(poly_ois_aug[1])) == 2', 'poly_ois_aug[0].shape == (10, 10, 3)', 'poly_ois_aug[1].shape == (10, 10, 3)', 'found_poly']",[],[],[],[],[],[],[],[],[],[],[],[]
2106,aleju,kontakt@ajung.name,2019-10-01 17:05:39+02:00,88a287d68765721d93803601e6d689e383227076,https://github.com/aleju/imgaug/commit/88a287d68765721d93803601e6d689e383227076,Add more tests for Augmenter.augment_bounding_boxes(),1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['self._compare_coords_of_cba(', 'self._compare_coords_of_cba(', 'self._compare_coords_of_cba(', 'self._compare_coords_of_cba(', 'len(cbas1) == len(cbas2)', 'not np.all(same)', 'len(cbas1) == len(cbas2)', 'self._compare_coords_of_cba(points1, points2,', 'len(args) == 1', 'observed.shape[0] == 2', 'expected.shape[1] == 2']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(', 'np.allclose(', 'np.allclose(', 'np.allclose(', 'not np.allclose(points1, points2, atol=1e-2, rtol=0)', 'np.allclose(points1, points2, atol=1e-2, rtol=0)']",[],[],[],[],[],[],[],[],[],[],[],[]
2107,aleju,kontakt@ajung.name,2019-10-01 20:22:36+02:00,7a4ad2c93fba5ffa0da88410105a6383a10d2cbc,https://github.com/aleju/imgaug/commit/7a4ad2c93fba5ffa0da88410105a6383a10d2cbc,Add tests for line strings in .blend module,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2108,aleju,kontakt@ajung.name,2019-10-01 20:29:03+02:00,bc0c3804917998c191189cfcab57fc72df56be84,https://github.com/aleju/imgaug/commit/bc0c3804917998c191189cfcab57fc72df56be84,Add tests for line strings in .flip module,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2109,aleju,kontakt@ajung.name,2019-10-01 21:48:19+02:00,0f062cc86828341a1c7e0d59bbe0c233141e2530,https://github.com/aleju/imgaug/commit/0f062cc86828341a1c7e0d59bbe0c233141e2530,Add tests for line strings and bounding boxes in Affine,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(cbaoi_aug) == 2', 'cbaoi_aug_i.shape == cbaoi.shape', 'not cbaoi_aug_i.items[0].coords_almost_equals(', 'len(cbaoi_aug) == 2', 'cbaois_aug[0].shape == img.shape', 'cbaois_aug[1].shape == img.shape', 'cbaois_aug[0].items[0].is_valid', 'cbaois_aug[1].items[0].is_valid', 'np.array_equal(img_aug_indices, cbaois_aug_indices)', 'len(set(cbaois_aug_indices)) == 2']",[],[],[],[],[],[],[],[],[],[],[],[],"['len(psoi_aug) == 2', 'psoi_aug_i.shape == (100, 200, 3)', 'not psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[0].is_valid', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (200, 100, 3)', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[0].is_valid', 'psoi_aug.shape == (200, 100, 3)', 'len(psoi_aug.polygons) == 0', 'psois_aug[0].shape == img.shape', 'psois_aug[1].shape == img.shape', 'psois_aug[0].polygons[0].is_valid', 'psois_aug[1].polygons[0].is_valid', 'np.array_equal(img_aug_indices, psois_aug_indices)', 'len(set(psois_aug_indices)) == 2']",[],[],[],[],[],[],[],[],[],[],[],[]
2110,aleju,kontakt@ajung.name,2019-10-02 10:03:20+02:00,7544495ff8756925b8bd39a8e5d23e20a4ec4e53,https://github.com/aleju/imgaug/commit/7544495ff8756925b8bd39a8e5d23e20a4ec4e53,Add tests for line strings in PiecewiseAffine,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed_cbaoi.shape == img.shape', 'cba_aug.is_valid']",[],[],[],[],[],[],[],[],[],[],[],[],"['observed_psoi.shape == img.shape', 'poly_aug.is_valid']",[],[],[],[],[],[],[],[],[],[],[],[]
2111,aleju,kontakt@ajung.name,2019-10-02 10:18:29+02:00,b82aa91395df7c8e35f677037c210764094d5c64,https://github.com/aleju/imgaug/commit/b82aa91395df7c8e35f677037c210764094d5c64,Add tests for line strings in PerspectiveTransform,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(observed.items) == 1', 'observed.items[0].is_valid', 'observed.items[0].coords_almost_equals(', 'len(observed.items) == 1', 'observed.items[0].is_valid', 'observed.items[0].coords_almost_equals(', 'cbaoi_aug.shape == img.shape', 'cba_aug.is_valid']",[],[],[],[],[],[],[],[],[],[],[],[],"['len(observed.polygons) == 1', 'observed.polygons[0].is_valid', 'observed.polygons[0].exterior_almost_equals(', 'len(observed.polygons) == 1', 'observed.polygons[0].is_valid', 'observed.polygons[0].exterior_almost_equals(', 'psoi_aug.shape == img.shape', 'poly_aug.is_valid']",[],[],[],[],[],[],[],[],[],[],[],[]
2112,aleju,kontakt@ajung.name,2019-10-02 10:34:21+02:00,e46c2c98aa7b84e0f15f734a2b1271def67d93ba,https://github.com/aleju/imgaug/commit/e46c2c98aa7b84e0f15f734a2b1271def67d93ba,Add tests for line strings in ElasticTransformation,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(observed.items) == 1', 'observed.items[0].coords_almost_equals(cba)', 'observed.items[0].is_valid', 'len(observed.items) == 1', 'observed.items[0].coords_almost_equals(cba)', 'observed.items[0].is_valid', 'len(observed.items) == 1', 'observed.items[0].coords_almost_equals(', 'observed.items[0].is_valid', 'cbaoi_aug.shape == image.shape', 'len(cbaoi_aug.items) == 1', 'cba_aug.is_valid']",[],[],[],[],[],[],[],[],[],[],[],[],"['len(observed.polygons) == 1', 'observed.polygons[0].exterior_almost_equals(poly)', 'observed.polygons[0].is_valid', 'len(observed.polygons) == 1', 'observed.polygons[0].exterior_almost_equals(poly)', 'observed.polygons[0].is_valid', 'len(observed.polygons) == 1', 'observed.polygons[0].exterior_almost_equals(', 'observed.polygons[0].is_valid', 'psoi_aug.shape == image.shape', 'len(psoi_aug.polygons) == 1', 'poly_aug.is_valid', 'len(psoi_aug.polygons) == 0', 'psoi_aug.shape == (10, 10, 3)']",[],[],[],[],[],[],[],[],[],[],[],[]
2113,aleju,kontakt@ajung.name,2019-10-02 10:44:14+02:00,7b715a12918ef45204543c8576586cc2f5f723d2,https://github.com/aleju/imgaug/commit/7b715a12918ef45204543c8576586cc2f5f723d2,Add tests for line strings in Rot90,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['lsoi_aug.shape == (4, 8, 3)', 'len(lsoi_aug.items) == 1', 'lsoi_aug.items[0].coords_almost_equals(expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2114,aleju,kontakt@ajung.name,2019-10-02 11:30:53+02:00,0551e9c1f16127f85694ac711d0b7bc952bb812d,https://github.com/aleju/imgaug/commit/0551e9c1f16127f85694ac711d0b7bc952bb812d,Add tests for line strings in Augmenter,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],"['not IS_PY36_OR_HIGHER,']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(images_aug[0], image)', 'np.array_equal(images_aug[0], image)', 'ls_aug == [(1, 0), (2, 0), (2, 1)]', 'np.array_equal(images_aug[0], image)']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(keypoints_aug[0].to_xy_array(),', 'np.allclose(bbs_aug[0].to_xyxy_array(), bbs.to_xyxy_array())', 'polygon_aug.exterior_almost_equals(polygon)', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'np.allclose(bbs_aug[0].to_xyxy_array(), bbs.to_xyxy_array())', 'polygon_aug.exterior_almost_equals(polygon)', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'polygon_aug.exterior_almost_equals(polygon)', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'polygon_aug.exterior_almost_equals(polygon)', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'polygon_aug.exterior_almost_equals(polygon)', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'np.allclose(bbs_aug[0].to_xyxy_array(), bbs.to_xyxy_array())', 'polygon_aug.exterior_almost_equals(polygon)', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'polygon_aug.exterior_almost_equals(polygon)', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'polygon_aug.exterior_almost_equals(polygon)', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'np.allclose(bbs_aug[0].to_xyxy_array(), bbs.to_xyxy_array())', 'polygon_aug.exterior_almost_equals(polygon)', 'np.allclose(keypoints_aug[0].to_xy_array(),', 'np.allclose(bbs_aug[0].to_xyxy_array(), bbs.to_xyxy_array())', 'polygon_aug.exterior_almost_equals(polygon)']",[],[],[],[],[],[],[],[],[],[],[],[]
2115,aleju,kontakt@ajung.name,2019-10-02 11:35:57+02:00,6c307fffa1cc6c32f8e20014fcf6b0b6181bd176,https://github.com/aleju/imgaug/commit/6c307fffa1cc6c32f8e20014fcf6b0b6181bd176,Add tests for line strings in Sequential,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2116,aleju,kontakt@ajung.name,2019-10-02 11:51:58+02:00,3a021d263a1c52f999ccef430b170b06b2ef62f6,https://github.com/aleju/imgaug/commit/3a021d263a1c52f999ccef430b170b06b2ef62f6,Add tests for line strings in SomeOf,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(cbaoi_aug.items) == len(cbaoi.items)', 'cbaoi_aug.shape == (5, 6, 3)', 'cba.is_valid']",[],[],[],[],[],[],[],[],[],[],[],[],"['len(kpsoi_aug.keypoints) == 2', 'kpsoi_aug.shape == (5, 6, 3)', 'len(psoi_aug.polygons) == 1', 'psoi_aug.shape == (5, 6, 3)', 'polygon.is_valid', 'np.any(matches)', 'len(bbsoi_aug.bounding_boxes) == 1', 'bbsoi_aug.shape == (5, 6, 3)', 'np.any(matches)', 'keypoints_equal([kpsoi_aug], [kpsoi])', 'keypoints_equal([kpsoi_aug], [kpsoi_x])', 'keypoints_equal([kpsoi_aug], [kpsoi_y])', 'keypoints_equal([kpsoi_aug], [kpsoi_xy])', 'polygon.exterior_almost_equals(psoi.polygons[0])', 'polygon.exterior_almost_equals(psoi_x.polygons[0])', 'polygon.exterior_almost_equals(psoi_y.polygons[0])', 'polygon.exterior_almost_equals(psoi_xy.polygons[0])', 'False', 'np.all(seen)', 'bb.coords_almost_equals(bbsoi.bounding_boxes[0])', 'bb.coords_almost_equals(bbsoi_x.bounding_boxes[0])', 'bb.coords_almost_equals(bbsoi_y.bounding_boxes[0])', 'bb.coords_almost_equals(bbsoi_xy.bounding_boxes[0])', 'False', 'np.all(seen)']",[],[],[],[],[],[],[],[],[],[],[],[]
2117,aleju,kontakt@ajung.name,2019-10-02 12:13:26+02:00,fe4fbc775107fa1d0adceecced630b616c08ada6,https://github.com/aleju/imgaug/commit/fe4fbc775107fa1d0adceecced630b616c08ada6,Add tests for line strings in Sometimes,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(cbaoi1.items) == len(cbaoi2.items)', 'len(cbaoi1.items) == len(cbaoi2.items)']",[],[],[],[],[],[],[],[],[],[],[],[],"['keypoints_equal(observed, [self.keypoints_ud])', 'keypoints_equal(observed, [self.keypoints_ud])', 'observed.shape == self.polygons.shape', 'observed.polygons[0].exterior_almost_equals(', 'observed.polygons[0].is_valid', 'len(observed.polygons) == 1', 'observed.shape == self.polygons.shape', 'observed.polygons[0].exterior_almost_equals(', 'observed.polygons[0].is_valid', 'np.isclose(p_if_branch, 0.5, rtol=0, atol=0.15)', 'np.isclose(p_else_branch, 0.5, rtol=0, atol=0.15)', 'np.isclose(p_if_branch, 0.5, rtol=0, atol=0.15)', 'np.isclose(p_else_branch, 0.5, rtol=0, atol=0.15)', 'np.isclose(p_if_branch, 0.5, rtol=0, atol=0.15)', 'np.isclose(p_else_branch, 0.5, rtol=0, atol=0.15)', 'np.isclose(p_if_branch, 0.5, rtol=0, atol=0.15)', 'np.isclose(p_else_branch, 0.5, rtol=0, atol=0.15)']",[],[],[],[],[],[],[],[],[],[],[],[]
2118,aleju,kontakt@ajung.name,2019-10-02 12:27:53+02:00,0d5898924cf3f8b033081973c996d3cf81969a4b,https://github.com/aleju/imgaug/commit/0d5898924cf3f8b033081973c996d3cf81969a4b,Add tests for line strings in WithChannels,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2119,aleju,kontakt@ajung.name,2019-10-02 12:29:55+02:00,43648f7255d2866f03025d518b70acde8e5144d3,https://github.com/aleju/imgaug/commit/43648f7255d2866f03025d518b70acde8e5144d3,Add tests for line strings in ChannelShuffle,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2120,aleju,kontakt@ajung.name,2019-10-02 14:20:15+02:00,e3ce88b4004e655f71fde2192b6547de4092528f,https://github.com/aleju/imgaug/commit/e3ce88b4004e655f71fde2192b6547de4092528f,Add tests for line strings in pooling augmenters,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(cbaoi1.items) == len(coords)', 'image_aug.shape == cbaoi_aug.shape', '_same_coords(', '_same_coords(', 'cbaoi_aug.shape == image_aug.shape', 'len(cbaoi_aug.items) == 0']",[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.shape == kpsoi_aug.shape', 'np.allclose(', 'np.allclose(', 'kpsoi_aug.shape == image_aug.shape', 'len(kpsoi_aug.keypoints) == 0', 'image_aug.shape == psoi_aug.shape', 'np.allclose(', 'np.allclose(', 'psoi_aug.shape == image_aug.shape', 'len(psoi_aug.polygons) == 0', 'image_aug.shape == bbsoi_aug.shape', 'np.allclose(', 'np.allclose(', 'bbsoi_aug.shape == image_aug.shape', 'len(bbsoi_aug.bounding_boxes) == 0']",[],[],[],[],[],[],[],[],[],[],[],[]
2121,aleju,kontakt@ajung.name,2019-10-02 14:28:19+02:00,1a062cb20e9412f79ea3d7d53639689d05d830e6,https://github.com/aleju/imgaug/commit/1a062cb20e9412f79ea3d7d53639689d05d830e6,Add tests for line strings in Resize,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(cbaoi_aug.items) == 2', 'cbaoi_aug.shape == (8, 12, 3)', 'cbaoi_aug.items[0].coords_almost_equals(', 'cbaoi_aug.items[1].coords_almost_equals(', 'len(cbaoi_aug.items) == 2', 'cbaoi_aug.shape == (8, 12, 3)', 'cbaoi_aug.items[0].coords_almost_equals(', 'cbaoi_aug.items[1].coords_almost_equals(', 'len(cbaoi_aug.items) == 2', 'cbaoi_aug.shape == (8, 24)', 'cbaoi_aug.items[0].coords_almost_equals(', 'cbaoi_aug.items[1].coords_almost_equals(', 'len(cbaoi_aug.items) == 2', 'cbaoi_aug.shape == (8, 24)', 'cbaoi_aug.items[0].coords_almost_equals(', 'cbaoi_aug.items[1].coords_almost_equals(', 'len(lsoi_aug.items) == 0', 'lsoi_aug.shape == (8, 12, 3)']",[],[],[],[],[],[],[],[],[],[],[],[],"['len(psoi_aug.polygons) == 2', 'psoi_aug.shape == (8, 12, 3)', 'psoi_aug.polygons[0].exterior_almost_equals(', 'psoi_aug.polygons[1].exterior_almost_equals(', 'len(psoi_aug.polygons) == 2', 'psoi_aug.shape == (8, 24)', 'psoi_aug.polygons[0].exterior_almost_equals(', 'psoi_aug.polygons[1].exterior_almost_equals(']",[],[],[],[],[],[],[],[],[],[],[],[]
2122,aleju,kontakt@ajung.name,2019-10-02 14:52:35+02:00,cb024252e74b3f90aea8d672aa84b656beaca96d,https://github.com/aleju/imgaug/commit/cb024252e74b3f90aea8d672aa84b656beaca96d,Add tests for line strings in Pad,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(psoi_aug_i.items) == 2', 'psoi_aug_i.items[0].coords_almost_equals(', 'psoi_aug_i.items[1].coords_almost_equals(', 'len(psoi_aug_i.items) == 2', 'psoi_aug_i.items[0].coords_almost_equals(', 'psoi_aug_i.items[1].coords_almost_equals(', 'len(cbaoi_aug) == 2', 'cbaoi_aug_i.shape == (10, 8, 3)', 'len(cbaoi_aug_i.items) == 2', 'cbaoi_aug_i.items[0].coords_almost_equals(', 'cbaoi_aug_i.items[1].coords_almost_equals(', 'len(cbaoi_aug) == 2', 'cbaoi_aug_i.shape == (4, 4, 3)', 'len(cbaoi_aug_i.items) == 2', 'cbaoi_aug_i.items[0].coords_almost_equals(', 'cbaoi_aug_i.items[1].coords_almost_equals(', 'len(cbaoi_aug) == 2', 'cbaoi_aug_i.shape == (10, 8, 3)', 'len(cbaoi_aug_i.items) == 2', 'cbaoi_aug_i.items[0].coords_almost_equals(', 'cbaoi_aug_i.items[1].coords_almost_equals(', 'len(cbaoi_aug) == 2', 'cbaoi_aug_i.shape == (4, 4, 3)', 'len(cbaoi_aug_i.items) == 2', 'cbaoi_aug_i.items[0].coords_almost_equals(', 'cbaoi_aug_i.items[1].coords_almost_equals(', 'len(cbaoi_aug) == 2', 'cbaoi_aug_i.shape == (10, 8, 3)', 'len(cbaoi_aug_i.items) == 2', 'cbaoi_aug_i.items[0].coords_almost_equals(', 'cbaoi_aug_i.items[1].coords_almost_equals(', 'len(cbaoi_aug) == 2', 'cbaoi_aug_i.shape == (4, 4, 3)', 'len(cbaoi_aug_i.items) == 2', 'cbaoi_aug_i.items[0].coords_almost_equals(', 'cbaoi_aug_i.items[1].coords_almost_equals(']",[],[],[],[],[],[],[],[],[],[],[],[],"['observed[0].shape == tuple(image_padded_shape)', 'keypoints_equal(observed, expected)', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (10, 8, 3)', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (4, 4, 3)', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(']",[],[],[],[],[],[],[],[],[],[],[],[]
2123,aleju,kontakt@ajung.name,2019-10-02 15:38:26+02:00,65c78ac573beb1a3b871b81c90576cb4bdf0ca2a,https://github.com/aleju/imgaug/commit/65c78ac573beb1a3b871b81c90576cb4bdf0ca2a,Add tests for line strings in Crop,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['any([keypoints_equal(observed, kp)', 'any([keypoints_equal(observed, kp)', 'len(cbaoi_aug) == 2', 'cbaoi_aug_i.shape == (5, 6, 3)', 'len(cbaoi_aug_i.items) == 2', 'cbaoi_aug_i.items[0].coords_almost_equals(', 'cbaoi_aug_i.items[1].coords_almost_equals(', 'len(cbaoi_aug) == 2', 'cbaoi_aug_i.shape == (10, 10, 3)', 'len(cbaoi_aug_i.items) == 2', 'cbaoi_aug_i.items[0].coords_almost_equals(', 'cbaoi_aug_i.items[1].coords_almost_equals(', 'len(cbaoi_aug) == 2', 'cbaoi_aug_i.shape == (5, 6, 3)', 'len(cbaoi_aug_i.items) == 2', 'cbaoi_aug_i.items[0].coords_almost_equals(', 'cbaoi_aug_i.items[1].coords_almost_equals(', 'len(cbaoi_aug) == 2', 'cbaoi_aug_i.shape == (10, 10, 3)', 'len(cbaoi_aug_i.items) == 2', 'cbaoi_aug_i.items[0].coords_almost_equals(', 'cbaoi_aug_i.items[1].coords_almost_equals(', 'len(cbaoi_aug) == 2', 'cbaoi_aug_i.shape == (3, 9, 3)', 'len(cbaoi_aug_i.items) == 2', 'cbaoi_aug_i.items[0].coords_almost_equals(', 'cbaoi_aug_i.items[1].coords_almost_equals(', 'len(cbaoi_aug) == 2', 'cbaoi_aug_i.shape == (10, 10, 3)', 'len(cbaoi_aug_i.items) == 2', 'cbaoi_aug_i.items[0].coords_almost_equals(', 'cbaoi_aug_i.items[1].coords_almost_equals(', 'len(cbaoi_aug) == 2', 'cbaoi_aug_i.shape == (3, 9, 3)', 'len(cbaoi_aug_i.items) == 2', 'cbaoi_aug_i.items[0].coords_almost_equals(', 'cbaoi_aug_i.items[1].coords_almost_equals(', 'len(cbaoi_aug) == 2', 'cbaoi_aug_i.shape == (10, 10, 3)', 'len(cbaoi_aug_i.items) == 2', 'cbaoi_aug_i.items[0].coords_almost_equals(', 'cbaoi_aug_i.items[1].coords_almost_equals(']",[],[],[],[],[],[],[],[],[],[],[],[],"['any([keypoints_equal(observed, [kp])', 'any([keypoints_equal(observed, [kp])', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (5, 6, 3)', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (10, 10, 3)', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (3, 9, 3)', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(', 'len(psoi_aug) == 2', 'psoi_aug_i.shape == (10, 10, 3)', 'len(psoi_aug_i.polygons) == 2', 'psoi_aug_i.polygons[0].exterior_almost_equals(', 'psoi_aug_i.polygons[1].exterior_almost_equals(']",[],[],[],[],[],[],[],[],[],[],[],[]
2124,aleju,kontakt@ajung.name,2019-10-02 15:44:22+02:00,26f019d98c0a371aa27d3f888089834506900808,https://github.com/aleju/imgaug/commit/26f019d98c0a371aa27d3f888089834506900808,Add tests for line strings in PadToFixedSize,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2125,aleju,kontakt@ajung.name,2019-10-02 15:49:02+02:00,0b73091cb1ec24abfb731365be4401d20dca8328,https://github.com/aleju/imgaug/commit/0b73091cb1ec24abfb731365be4401d20dca8328,Add tests for line strings in CropToFixedSize,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2126,aleju,kontakt@ajung.name,2019-10-02 15:54:23+02:00,06f0a0005bbe5f6545a94cc25441f32e0d77b846,https://github.com/aleju/imgaug/commit/06f0a0005bbe5f6545a94cc25441f32e0d77b846,Add tests for line strings in KeepSizeByResize,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['cbaoi_aug.shape == (4, 4, 3)', 'cbaoi_aug.shape == (3, 4, 3)', 'np.allclose(', 'cbaoi_aug.shape == (4, 4, 3)', 'np.allclose(', 'cbaoi_aug.shape == (3, 4, 3)']",[],[],[],[],[],[],[],[],[],[],[],[],"['psoi_aug.shape == (4, 4, 3)', 'psoi_aug.shape == (3, 4, 3)']",[],[],[],[],[],[],[],[],[],[],[],[]
2127,aleju,kontakt@ajung.name,2019-10-02 16:00:01+02:00,e6674df932acd39ef377608a8b3d819f5da9cbbd,https://github.com/aleju/imgaug/commit/e6674df932acd39ef377608a8b3d819f5da9cbbd,Fix datatypes in test,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2128,aleju,kontakt@ajung.name,2019-10-02 16:00:22+02:00,47f58e791c13708fef64d032fa100ac320ac35c5,https://github.com/aleju/imgaug/commit/47f58e791c13708fef64d032fa100ac320ac35c5,Add type check to assert_cbaois_equal(),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['type(observed) == type(expected)'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2129,aleju,kontakt@ajung.name,2019-10-02 16:59:48+02:00,c40903ae0581f500317facbdc5f616265b9d61cc,https://github.com/aleju/imgaug/commit/c40903ae0581f500317facbdc5f616265b9d61cc,Add _augment_line_strings() methods to augmenters,8,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2130,aleju,kontakt@ajung.name,2019-10-02 17:50:59+02:00,044c6e282d3cee51621a06b46c30ba22b1cf50f5,https://github.com/aleju/imgaug/commit/044c6e282d3cee51621a06b46c30ba22b1cf50f5,Add line string tests for remaining meta augmenters,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['False', 'np.all(seen)', 'False', 'np.all(seen)']",[],[],[],[],[],[],[],[],[],[],[],[],"['False', 'np.all(seen)']",[],[],[],[],[],[],[],[],[],[],[],[]
2131,aleju,kontakt@ajung.name,2019-10-02 17:57:50+02:00,b16a3320a1632c772803537292f770daf2b4c2be,https://github.com/aleju/imgaug/commit/b16a3320a1632c772803537292f770daf2b4c2be,Improve blend tests for LS/BBs,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2132,aleju,kontakt@ajung.name,2019-10-02 18:16:37+02:00,ef156e47ca4e420cfb004b6eb78ddff3acc9ed2f,https://github.com/aleju/imgaug/commit/ef156e47ca4e420cfb004b6eb78ddff3acc9ed2f,Add checks to make BBs valid after aug in Lambda,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(', 'np.allclose(']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2133,aleju,kontakt@ajung.name,2019-10-02 19:04:05+02:00,ee00b84fea8632aff341c509fdc660e1c1159af0,https://github.com/aleju/imgaug/commit/ee00b84fea8632aff341c509fdc660e1c1159af0,Add tests for BBs becoming invalid during aug,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestAugmenter_augment_bounding_boxes_by_keypoints(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(', 'np.allclose(']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2134,aleju,kontakt@ajung.name,2019-10-02 19:06:19+02:00,fef943e625c2091f32ef7c7197114154f8dafd1c,https://github.com/aleju/imgaug/commit/fef943e625c2091f32ef7c7197114154f8dafd1c,Add PR ID to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2135,aleju,kontakt@ajung.name,2019-09-29 18:46:56+02:00,d4840d49e0af132feb772f515f71d680d183a79e,https://github.com/aleju/imgaug/commit/d4840d49e0af132feb772f515f71d680d183a79e,Add RNG copying for polygon recoverer,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2136,aleju,kontakt@ajung.name,2019-09-29 18:55:17+02:00,a116f34c85f8b92800852d9ad62d1bfac3902cd1,https://github.com/aleju/imgaug/commit/a116f34c85f8b92800852d9ad62d1bfac3902cd1,Change augment_polygons() to copy RNG before poly recovery,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2137,aleju,kontakt@ajung.name,2019-09-29 19:01:06+02:00,97cca602558b00b2ff0679e03d9f1ddb24957aba,https://github.com/aleju/imgaug/commit/97cca602558b00b2ff0679e03d9f1ddb24957aba,Remove unnecessary RNG copies from poly recoverer,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2138,aleju,kontakt@ajung.name,2019-09-29 19:01:29+02:00,c4340877595e88a29a90c08238f27f6fa32a92c6,https://github.com/aleju/imgaug/commit/c4340877595e88a29a90c08238f27f6fa32a92c6,Add more tests for augment_polygons() and polygon recovery,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(keypoints_on_images) in [1, 2]', 'len(keypoints_on_images[0].keypoints) == 7', 'bb.iou(bb_aug) > 0.9', 'psoi_aug.polygons[0].is_valid', 'not psois_aug1[0].polygons[0].is_valid', 'not psois_aug1[1].polygons[0].is_valid', 'psois_aug2[0].polygons[0].is_valid', 'psois_aug2[1].polygons[0].is_valid', 'not psois_aug3[0].polygons[0].is_valid', 'not psois_aug3[1].polygons[0].is_valid', 'psois_aug4[0].polygons[0].is_valid', 'psois_aug4[1].polygons[0].is_valid', 'aug.random_samples_images == aug.random_samples_kps', 'psois_aug1[0].polygons[0].is_valid', 'psois_aug1[1].polygons[0].is_valid', 'psois_aug2[0].polygons[0].is_valid', 'psois_aug2[1].polygons[0].is_valid', 'psois_aug3[0].polygons[0].is_valid', 'psois_aug3[1].polygons[0].is_valid', 'psois_aug4[0].polygons[0].is_valid', 'psois_aug4[1].polygons[0].is_valid', 'aug.random_samples_images == aug.random_samples_kps']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2139,Rui,rzhengphy@gmail.com,2019-10-08 23:49:14-04:00,3081dcabe079f5a5528e8b69be6c285fb0a28041,https://github.com/aleju/imgaug/commit/3081dcabe079f5a5528e8b69be6c285fb0a28041,Add fit_output (False/True) option to PerspectiveTransform augmenter,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2140,Rui,rzhengphy@gmail.com,2019-10-10 16:06:54-04:00,2829657b4fb7f6515a146ba7cd6ea0efc6d16542,https://github.com/aleju/imgaug/commit/2829657b4fb7f6515a146ba7cd6ea0efc6d16542,Calculate expanded WH properly,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2141,aleju,kontakt@ajung.name,2019-10-03 15:24:33+02:00,53c392d80db4d5c561be65c621719d1d0acb8b57,https://github.com/aleju/imgaug/commit/53c392d80db4d5c561be65c621719d1d0acb8b57,Add get_augmentable_names_to_augment() to batches,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2142,aleju,kontakt@ajung.name,2019-10-03 15:25:41+02:00,b0a59f22bc0ad085b9e1b02850791838f51ee785,https://github.com/aleju/imgaug/commit/b0a59f22bc0ad085b9e1b02850791838f51ee785,Add to_normalized_batch() to Batch,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2143,aleju,kontakt@ajung.name,2019-10-03 15:26:08+02:00,398877af25930a237e89b3b104561b70b25e6b2b,https://github.com/aleju/imgaug/commit/398877af25930a237e89b3b104561b70b25e6b2b,Add BatchInAugmentation,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2144,aleju,kontakt@ajung.name,2019-10-03 15:28:31+02:00,64e1846baad2d74a212f1e65bc43d90e77248f29,https://github.com/aleju/imgaug/commit/64e1846baad2d74a212f1e65bc43d90e77248f29,Add to_batch_in_augmentation() to Batch and UnnormalizedBatch,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2145,aleju,kontakt@ajung.name,2019-10-03 15:29:07+02:00,c2e6b7836409fb7e4c88b8a686808b32cef066b9,https://github.com/aleju/imgaug/commit/c2e6b7836409fb7e4c88b8a686808b32cef066b9,Add docstring for get_augmentable_names_to_augment(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2146,aleju,kontakt@ajung.name,2019-10-03 15:32:11+02:00,a23084512c4410c525179f423d5bf2915b1d2d08,https://github.com/aleju/imgaug/commit/a23084512c4410c525179f423d5bf2915b1d2d08,Make _maybe_deterministic_context() more flexible,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2147,aleju,kontakt@ajung.name,2019-10-03 15:32:34+02:00,9b42e279e54e4eaeb493af0a1fdbd9bd71c785d5,https://github.com/aleju/imgaug/commit/9b42e279e54e4eaeb493af0a1fdbd9bd71c785d5,Add Augmenter._augment_batch() method,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2148,aleju,kontakt@ajung.name,2019-10-03 15:33:18+02:00,8eda26bc9756d738194e1f5b507205555e96e18b,https://github.com/aleju/imgaug/commit/8eda26bc9756d738194e1f5b507205555e96e18b,Rename _maybe_deterministic_context() to *_ctx(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2149,aleju,kontakt@ajung.name,2019-10-03 16:14:24+02:00,440ff0e4900f9cfcd381be4f323253a524abbf86,https://github.com/aleju/imgaug/commit/440ff0e4900f9cfcd381be4f323253a524abbf86,Add activation checks and hooks to augment_batch(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2150,aleju,kontakt@ajung.name,2019-10-03 16:21:55+02:00,98971c5a4c94868e6d23e7233407fd17c551a7d3,https://github.com/aleju/imgaug/commit/98971c5a4c94868e6d23e7233407fd17c551a7d3,Change augment_heatmaps() to wrapper around augment_batch(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2151,aleju,kontakt@ajung.name,2019-10-03 16:39:07+02:00,77d75d10898f7f94b2daca0204679c3ae83bbccf,https://github.com/aleju/imgaug/commit/77d75d10898f7f94b2daca0204679c3ae83bbccf,Change augment_segmentation_maps() to wrapper around augment_batch(),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2152,aleju,kontakt@ajung.name,2019-10-03 16:45:36+02:00,b0f41f56a18f7fb12a17ded8759f80a462f7adbd,https://github.com/aleju/imgaug/commit/b0f41f56a18f7fb12a17ded8759f80a462f7adbd,Change augment_keypoints() to wrapper around augment_batch(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2153,aleju,kontakt@ajung.name,2019-10-03 16:49:09+02:00,a60ecec4696163ac4e3df37ed4c0a5551600d89e,https://github.com/aleju/imgaug/commit/a60ecec4696163ac4e3df37ed4c0a5551600d89e,Change augment_bounding_boxes() to wrapper around augment_batch(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2154,aleju,kontakt@ajung.name,2019-10-03 16:52:20+02:00,02a837b4b23d9629811801e798f6c56648c33372,https://github.com/aleju/imgaug/commit/02a837b4b23d9629811801e798f6c56648c33372,Change augment_polygons() to wrapper around augment_batch(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2155,aleju,kontakt@ajung.name,2019-10-03 16:55:35+02:00,e25754b8716731469e7ac273995296948c668d9e,https://github.com/aleju/imgaug/commit/e25754b8716731469e7ac273995296948c668d9e,Change augment_line_strings() to wrapper around augment_batch(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2156,aleju,kontakt@ajung.name,2019-10-03 18:23:45+02:00,e4c6a2afc9e995deb7717d478b9042a0ef324d46,https://github.com/aleju/imgaug/commit/e4c6a2afc9e995deb7717d478b9042a0ef324d46,Fix image inverse-normalization sometimes failing if ndarray turned to list,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(observed, list)', 'len(observed) == 2', 'observed[0] is images[0]', 'observed[1] is images[1]', 'isinstance(observed, list)', 'len(observed) == 2', 'observed[0].shape == (3, 4)', 'observed[1].shape == (4, 3)', 'isinstance(observed, list)', 'len(observed) == 2', 'observed[0] is images[0]', 'observed[1] is images[1]', 'isinstance(observed, list)', 'len(observed) == 2', 'observed[0].shape == (3, 4)', 'observed[1].shape == (3, 4)', 'isinstance(observed, list)', 'len(observed) == 1', 'observed[0].shape == (3, 4)', 'isinstance(observed, list)', 'len(observed) == 1', 'observed[0].shape == (3, 4)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2157,aleju,kontakt@ajung.name,2019-10-03 18:24:45+02:00,1f8d5666aa93ca40346f2ca9d97f63213842c6a0,https://github.com/aleju/imgaug/commit/1f8d5666aa93ca40346f2ca9d97f63213842c6a0,Change augment_images() to wrapper around augment_batch(),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],"[('Raises', '(Exception):')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2158,aleju,kontakt@ajung.name,2019-10-03 18:33:40+02:00,fc5c03d4e7cdeaea52e0bbad2c3e42a1871f1acf,https://github.com/aleju/imgaug/commit/fc5c03d4e7cdeaea52e0bbad2c3e42a1871f1acf,Add docstring for _augment_batch(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2159,aleju,kontakt@ajung.name,2019-10-03 19:18:33+02:00,d9635c7a12172e835d683b911b8195ca061f9069,https://github.com/aleju/imgaug/commit/d9635c7a12172e835d683b911b8195ca061f9069,Change _augment_images() to default to noop,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],"[('Raises', '(NotImplementedError):')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2160,aleju,kontakt@ajung.name,2019-10-03 21:03:47+02:00,fbbf2c78de8d8f81a99c3fbf2a221b6e3f80c855,https://github.com/aleju/imgaug/commit/fbbf2c78de8d8f81a99c3fbf2a221b6e3f80c855,Fix typo in image normalization error message,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2161,aleju,kontakt@ajung.name,2019-10-03 21:06:23+02:00,86323627e13fc7fd583639a8cab20b538ff961dc,https://github.com/aleju/imgaug/commit/86323627e13fc7fd583639a8cab20b538ff961dc,Add get_augmentables() and get_augmentables_names(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2162,aleju,kontakt@ajung.name,2019-10-03 21:07:45+02:00,9f8ea380dd06fa72db93860505125128f722d4e8,https://github.com/aleju/imgaug/commit/9f8ea380dd06fa72db93860505125128f722d4e8,Add fill_from_batch_in_augmentation_() to batches,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2163,aleju,kontakt@ajung.name,2019-10-03 21:08:41+02:00,5ee219ef81b603e1f97aa5215b38f36c0b2c21cf,https://github.com/aleju/imgaug/commit/5ee219ef81b603e1f97aa5215b38f36c0b2c21cf,Add propagation context to BatchInAugmentation,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2164,aleju,kontakt@ajung.name,2019-10-03 21:11:08+02:00,39a017d4ddbe79021e77cd8811374eb1d4b88713,https://github.com/aleju/imgaug/commit/39a017d4ddbe79021e77cd8811374eb1d4b88713,Refactor augment_batch() and _augment_batch(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2165,aleju,kontakt@ajung.name,2019-10-03 21:11:45+02:00,e112a5f53d90978a5601fc8f410971de3f8e7183,https://github.com/aleju/imgaug/commit/e112a5f53d90978a5601fc8f410971de3f8e7183,Switch Sequential to new _augment_batch() interface,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['batch.images[0].dtype.name == ', 'aug_dummy.call_count == 1', 'aug_dummy.call_count == 1', 'aug_dummy.call_count == 1']",[],[],[],[],[],[],[],[],[],[],[],[],"['images[0].dtype.name == ', 'aug_mock.augment_images.call_count == 1', 'aug_mock.augment_heatmaps.call_count == 1', 'aug_mock.augment_keypoints.call_count == 1']",[],[],[],[],[],[],[],[],[],[],[],[]
2166,aleju,kontakt@ajung.name,2019-10-04 10:01:20+02:00,e9b434669d813ef1fc588fff2de43e638ecebd54,https://github.com/aleju/imgaug/commit/e9b434669d813ef1fc588fff2de43e638ecebd54,Add nb_items to BatchInAugmentation,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2167,aleju,kontakt@ajung.name,2019-10-04 10:02:11+02:00,c3a7677a6f5b4cd333fa5caeec2fafa86cd35f35,https://github.com/aleju/imgaug/commit/c3a7677a6f5b4cd333fa5caeec2fafa86cd35f35,Add subselection methods to BatchInAugmentation,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2168,aleju,kontakt@ajung.name,2019-10-04 10:03:30+02:00,b92f0648b85265496c88b3e6e182d1ea6c75eb4d,https://github.com/aleju/imgaug/commit/b92f0648b85265496c88b3e6e182d1ea6c75eb4d,Switch SomeOf to augment_batch() interface,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2169,aleju,kontakt@ajung.name,2019-10-04 10:38:25+02:00,e46a1dd9f73cd936473244516b8edb64b7c48ee0,https://github.com/aleju/imgaug/commit/e46a1dd9f73cd936473244516b8edb64b7c48ee0,Switch Sometimes to augment_batch() interface,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2170,aleju,kontakt@ajung.name,2019-10-04 11:45:41+02:00,8c6f66a7ab5fcd69c64ad468d79238701a0fac70,https://github.com/aleju/imgaug/commit/8c6f66a7ab5fcd69c64ad468d79238701a0fac70,Switch Noop to augment_batch() interface,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2171,aleju,kontakt@ajung.name,2019-10-04 17:35:13+02:00,1c5d4b70ee72ae5b0575922705f64c616075d563,https://github.com/aleju/imgaug/commit/1c5d4b70ee72ae5b0575922705f64c616075d563,Add validation to KeypointsOnImage.from_xy_array(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2172,aleju,kontakt@ajung.name,2019-10-04 17:38:16+02:00,82f918df04b0acd487ef759028c0f6cc42f1382c,https://github.com/aleju/imgaug/commit/82f918df04b0acd487ef759028c0f6cc42f1382c,Add BatchInAugmentation.get_itemwise_shapes(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2173,aleju,kontakt@ajung.name,2019-10-04 17:39:58+02:00,78dfaf87c9001b31b76915ada21dd6c53e4f8030,https://github.com/aleju/imgaug/commit/78dfaf87c9001b31b76915ada21dd6c53e4f8030,Add KP conversion methods to BoundingBoxesOnImage,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2174,aleju,kontakt@ajung.name,2019-10-04 17:40:31+02:00,b95a6a730c2a6306fd03d849cec3a8ae961e05b5,https://github.com/aleju/imgaug/commit/b95a6a730c2a6306fd03d849cec3a8ae961e05b5,Add KP conversion methods to LineStringsOnImage,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2175,aleju,kontakt@ajung.name,2019-10-04 17:41:34+02:00,4d1d52d72604eba131ba0cffb4f424ab55b12489,https://github.com/aleju/imgaug/commit/4d1d52d72604eba131ba0cffb4f424ab55b12489,Add KP conversion methods to PolygonsOnImage,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2176,aleju,kontakt@ajung.name,2019-10-04 17:48:11+02:00,b1f8ee972266d95ffa991999179541f0455c596e,https://github.com/aleju/imgaug/commit/b1f8ee972266d95ffa991999179541f0455c596e,Add augmentables.polys.recover_from_(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2177,aleju,kontakt@ajung.name,2019-10-04 17:59:22+02:00,91f775c4221ae2fbfd51ddb667ab97293f80e29b,https://github.com/aleju/imgaug/commit/91f775c4221ae2fbfd51ddb667ab97293f80e29b,Add CBAOI to/from KP conversion functions,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2178,aleju,kontakt@ajung.name,2019-10-04 18:13:06+02:00,59a6b8babffe9fa8d0d71ef9737de5882804e725,https://github.com/aleju/imgaug/commit/59a6b8babffe9fa8d0d71ef9737de5882804e725,Rework internals of CBA augmentation,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2179,aleju,kontakt@ajung.name,2019-10-04 18:15:22+02:00,13ab18e9de7261793874c466028ecef44e341ac2,https://github.com/aleju/imgaug/commit/13ab18e9de7261793874c466028ecef44e341ac2,Remove Augmenter._augment_coord_augables(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2180,aleju,kontakt@ajung.name,2019-10-04 18:16:16+02:00,bf3432b2d8c3028722986e51955bb80388ac5ab0,https://github.com/aleju/imgaug/commit/bf3432b2d8c3028722986e51955bb80388ac5ab0,Switch pooling augmenters to augment_batch() interface,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2181,aleju,kontakt@ajung.name,2019-10-04 18:43:02+02:00,c1c89530f6c62893ea8ad11c2f6283922b758944,https://github.com/aleju/imgaug/commit/c1c89530f6c62893ea8ad11c2f6283922b758944,Add docstrings,3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2182,aleju,kontakt@ajung.name,2019-10-04 18:48:32+02:00,05489134d11cd3314c955cb89126a8ed32a5eeaf,https://github.com/aleju/imgaug/commit/05489134d11cd3314c955cb89126a8ed32a5eeaf,Add error messages to asserts,3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2183,aleju,kontakt@ajung.name,2019-10-04 21:20:21+02:00,e1932da9b416879aeedeca89a6438073ece563a8,https://github.com/aleju/imgaug/commit/e1932da9b416879aeedeca89a6438073ece563a8,Rename get_itemwise_shape() to get_rowwise_shape(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2184,aleju,kontakt@ajung.name,2019-10-04 21:21:03+02:00,4f5e7958be631195032369fdf15b7a9458f64060,https://github.com/aleju/imgaug/commit/4f5e7958be631195032369fdf15b7a9458f64060,Change recover_psois_() to also accept non-lists,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2185,aleju,kontakt@ajung.name,2019-10-04 21:22:09+02:00,c22de588b0fd2728cc91a5e11c15a489f4b435e0,https://github.com/aleju/imgaug/commit/c22de588b0fd2728cc91a5e11c15a489f4b435e0,Change KP-CBAOI conversion routines to accept non-lists,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2186,aleju,kontakt@ajung.name,2019-10-04 21:27:14+02:00,fc6de8aacee715137f3811e3f2129a2d9f2709f1,https://github.com/aleju/imgaug/commit/fc6de8aacee715137f3811e3f2129a2d9f2709f1,Change Augmenter CBAOI2KP methods to also accept non-lists,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2187,aleju,kontakt@ajung.name,2019-10-04 21:27:59+02:00,3928b6efe59ed0bf5cdd603c590b8bba49fa22ea,https://github.com/aleju/imgaug/commit/3928b6efe59ed0bf5cdd603c590b8bba49fa22ea,Switch ElasticTransformation to augment_batch() interface,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2188,aleju,kontakt@ajung.name,2019-10-04 21:57:20+02:00,9e487c0111916193666d6b240f4f1300ca204698,https://github.com/aleju/imgaug/commit/9e487c0111916193666d6b240f4f1300ca204698,Add changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2189,aleju,kontakt@ajung.name,2019-10-05 09:20:31+02:00,8a229a45c7bb9b9e2a558e0ab9fbdae6e5545b8d,https://github.com/aleju/imgaug/commit/8a229a45c7bb9b9e2a558e0ab9fbdae6e5545b8d,Add PR ID to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2190,aleju,kontakt@ajung.name,2019-10-05 09:20:37+02:00,a05b98049632133aabc5ba3c8e738e9ec1769033,https://github.com/aleju/imgaug/commit/a05b98049632133aabc5ba3c8e738e9ec1769033,Fix pylint issues,4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2191,aleju,kontakt@ajung.name,2019-10-05 13:20:34+02:00,6011f17feb9c6a516561f3c33065849c9ede0f8e,https://github.com/aleju/imgaug/commit/6011f17feb9c6a516561f3c33065849c9ede0f8e,Fix docstring,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2192,aleju,kontakt@ajung.name,2019-10-05 13:21:45+02:00,968bbbb88640aa0690bdd9d7d4ed76dc53220101,https://github.com/aleju/imgaug/commit/968bbbb88640aa0690bdd9d7d4ed76dc53220101,Add BatchInAugmentation.empty,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2193,aleju,kontakt@ajung.name,2019-10-05 13:22:18+02:00,1bf4a9e35a53f60e72b387a607bcd48a96a1beda,https://github.com/aleju/imgaug/commit/1bf4a9e35a53f60e72b387a607bcd48a96a1beda,Add BatchInAugmentation.deepcopy(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2194,aleju,kontakt@ajung.name,2019-10-05 13:22:54+02:00,cf509818512ba3094bf587881abd27880bc3816d,https://github.com/aleju/imgaug/commit/cf509818512ba3094bf587881abd27880bc3816d,Add todo,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2195,aleju,kontakt@ajung.name,2019-10-05 13:29:52+02:00,61901626f9b6c6bf64934159d8510cc95f0e8102,https://github.com/aleju/imgaug/commit/61901626f9b6c6bf64934159d8510cc95f0e8102,Move Batch._deepcopy_obj() to utils.deepcopy_fast(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2196,aleju,kontakt@ajung.name,2019-10-05 13:30:20+02:00,d5fc6a8e24e912b8030fe1353cac37716619c122,https://github.com/aleju/imgaug/commit/d5fc6a8e24e912b8030fe1353cac37716619c122,Improve performance of Batch.deepcopy(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2197,aleju,kontakt@ajung.name,2019-10-05 13:31:26+02:00,606905f10e201063e3ed20823e447e0d7ea4e989,https://github.com/aleju/imgaug/commit/606905f10e201063e3ed20823e447e0d7ea4e989,Fix KeypointsOnImage.from_xy_array() failing for empty lists/arrays,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2198,aleju,kontakt@ajung.name,2019-10-05 13:34:40+02:00,79f60f6474d6e9725945eb904b84a13a0da20213,https://github.com/aleju/imgaug/commit/79f60f6474d6e9725945eb904b84a13a0da20213,Add conversion to/from KPSOI to KPSOI,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2199,aleju,kontakt@ajung.name,2019-10-05 13:35:14+02:00,0b7ea656bf2a1fdbcc9fb185933c7680badaf262,https://github.com/aleju/imgaug/commit/0b7ea656bf2a1fdbcc9fb185933c7680badaf262,Add todo,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2200,aleju,kontakt@ajung.name,2019-10-05 13:35:57+02:00,ab96981ee62f61a549f7deff1b326bc30d7e9dc2,https://github.com/aleju/imgaug/commit/ab96981ee62f61a549f7deff1b326bc30d7e9dc2,Change augment_batch() to not augment empty batches,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2201,aleju,kontakt@ajung.name,2019-10-05 13:36:43+02:00,05e9f94ed0feb83828a2d2af644570b3f20edba4,https://github.com/aleju/imgaug/commit/05e9f94ed0feb83828a2d2af644570b3f20edba4,Fix missing line string test for Alpha,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2202,aleju,kontakt@ajung.name,2019-10-05 13:37:30+02:00,93a43dc426f9fc01a55957c7dfd9467777377be1,https://github.com/aleju/imgaug/commit/93a43dc426f9fc01a55957c7dfd9467777377be1,Switch Alpha and AlphaElementwise to augment_batch() interface,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2203,aleju,kontakt@ajung.name,2019-10-05 13:51:43+02:00,8fcfc7f13911d4d39c545e2b7c6da3983cec3a49,https://github.com/aleju/imgaug/commit/8fcfc7f13911d4d39c545e2b7c6da3983cec3a49,Switch WithColorspace to augment_batch() interface,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2204,aleju,kontakt@ajung.name,2019-10-05 14:06:57+02:00,8cd1ba293bda72ee573fcdd517cfb0803d0563d1,https://github.com/aleju/imgaug/commit/8cd1ba293bda72ee573fcdd517cfb0803d0563d1,Switch WithHueAndSaturation to augment_batch() interface,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2205,aleju,kontakt@ajung.name,2019-10-05 14:48:17+02:00,efe502f0820ef00f7eb60c1f0581420723bace86,https://github.com/aleju/imgaug/commit/efe502f0820ef00f7eb60c1f0581420723bace86,Switch Fliplr and Flipud to augment_batch() interface,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2206,aleju,kontakt@ajung.name,2019-10-05 17:12:33+02:00,4c4583c7c1ad3e6698c6c4309946f4e73c1d743e,https://github.com/aleju/imgaug/commit/4c4583c7c1ad3e6698c6c4309946f4e73c1d743e,Improve validation in BoundingBoxesOnImage.from_xyxy_array(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2207,aleju,kontakt@ajung.name,2019-10-05 17:13:41+02:00,2116f749c995e7eb3b08191608af42010bc7b656,https://github.com/aleju/imgaug/commit/2116f749c995e7eb3b08191608af42010bc7b656,Add BoundingBoxesOnImage.to_xy_array(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2208,aleju,kontakt@ajung.name,2019-10-05 17:14:18+02:00,45eb72cb0d9295bd4240842220e85ca049664cbe,https://github.com/aleju/imgaug/commit/45eb72cb0d9295bd4240842220e85ca049664cbe,Add BoundingBoxesOnImage.fill_from_xyxy_array_(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2209,aleju,kontakt@ajung.name,2019-10-05 17:15:04+02:00,b457f3edd622644d7183fc68034052f8c03b9b65,https://github.com/aleju/imgaug/commit/b457f3edd622644d7183fc68034052f8c03b9b65,Add BoundingBoxesOnImage.fill_from_xy_array_(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2210,aleju,kontakt@ajung.name,2019-10-05 17:16:00+02:00,2146c7fd8cbb44b4cce2a40e0862b7813622cf51,https://github.com/aleju/imgaug/commit/2146c7fd8cbb44b4cce2a40e0862b7813622cf51,Improve validation in KeypointsOnImage.from_xy_array(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2211,aleju,kontakt@ajung.name,2019-10-05 17:16:38+02:00,e54e535cbccba308679168fe80524cbd30f40b60,https://github.com/aleju/imgaug/commit/e54e535cbccba308679168fe80524cbd30f40b60,Add KeypointsOnImage.fill_from_xy_array_(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2212,aleju,kontakt@ajung.name,2019-10-05 17:17:47+02:00,6c00bdda926d5967af9a377e99baa3a6e6a90e20,https://github.com/aleju/imgaug/commit/6c00bdda926d5967af9a377e99baa3a6e6a90e20,Add LineStringsOnImage.to_xy_array(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2213,aleju,kontakt@ajung.name,2019-10-05 17:18:14+02:00,9458e93ae0a31da8640518bf68b7b26f5d28a829,https://github.com/aleju/imgaug/commit/9458e93ae0a31da8640518bf68b7b26f5d28a829,Add LineStringsOnImage.fill_from_xy_array_(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2214,aleju,kontakt@ajung.name,2019-10-05 17:19:09+02:00,3ce0f8f2701c18252eab66720820fb85bdfe189e,https://github.com/aleju/imgaug/commit/3ce0f8f2701c18252eab66720820fb85bdfe189e,Add PolygonsOnImage.to_xy_array(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2215,aleju,kontakt@ajung.name,2019-10-05 17:19:27+02:00,c07237efe83cbf5d485626859ae2f250ab1aca5e,https://github.com/aleju/imgaug/commit/c07237efe83cbf5d485626859ae2f250ab1aca5e,Add PolygonsOnImage.fill_from_xy_array_(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2216,aleju,kontakt@ajung.name,2019-10-05 17:19:57+02:00,5d9a63da37d61fea17ca010f512c6d446b40543d,https://github.com/aleju/imgaug/commit/5d9a63da37d61fea17ca010f512c6d446b40543d,Switch Affine to augment_batch() interface,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2217,aleju,kontakt@ajung.name,2019-10-05 17:49:54+02:00,33a4f2410e2318e75c4fe5769e03c8e1514f5a2e,https://github.com/aleju/imgaug/commit/33a4f2410e2318e75c4fe5769e03c8e1514f5a2e,Switch Rot90 to augment_batch() interface,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2218,aleju,kontakt@ajung.name,2019-10-05 18:57:54+02:00,ea72161d479b35081568f377edb5a354d613b784,https://github.com/aleju/imgaug/commit/ea72161d479b35081568f377edb5a354d613b784,Switch Resize to augment_batch() interface,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2219,aleju,kontakt@ajung.name,2019-10-05 20:39:38+02:00,972484870a7ea699b701cfee5e70e9f0e1ed30c7,https://github.com/aleju/imgaug/commit/972484870a7ea699b701cfee5e70e9f0e1ed30c7,Switch CropAndPad to augment_batch() interface,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2220,aleju,kontakt@ajung.name,2019-10-05 20:47:56+02:00,53335fe43a0f1fda2c46a871bff82c237fb850bf,https://github.com/aleju/imgaug/commit/53335fe43a0f1fda2c46a871bff82c237fb850bf,Switch PadToFixedSize to augment_batch() interface,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2221,aleju,kontakt@ajung.name,2019-10-05 20:52:17+02:00,61171468bfbfab8a7109b880f550db1ab0a60563,https://github.com/aleju/imgaug/commit/61171468bfbfab8a7109b880f550db1ab0a60563,Switch CropToFixedSize to augment_batch() interface,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2222,aleju,kontakt@ajung.name,2019-10-05 21:26:53+02:00,cac59ea51aed1ea9f41a46079c1dc0a9e0916a5d,https://github.com/aleju/imgaug/commit/cac59ea51aed1ea9f41a46079c1dc0a9e0916a5d,Switch KeepSizeByResize to augment_batch() interface,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2223,aleju,kontakt@ajung.name,2019-10-05 21:27:47+02:00,93fbf22f58fba7094369ff2f4cfbfa035f17925a,https://github.com/aleju/imgaug/commit/93fbf22f58fba7094369ff2f4cfbfa035f17925a,Update changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2224,aleju,kontakt@ajung.name,2019-10-06 11:46:36+02:00,a059ea8f1f60de1917f3566e6e523bc698777832,https://github.com/aleju/imgaug/commit/a059ea8f1f60de1917f3566e6e523bc698777832,Switch PiecewiseAffine to augment_batch() interface,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.average(observed_arr_left_col == 1) > 0.5', 'np.average(observed_arr_right_col == 1) > 0.5']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.average(observed_arr_left_col == 1) > 0.98', 'np.average(observed_arr_right_col == 1) > 0.98']",[],[],[],[],[],[],[],[],[],[],[],[]
2225,aleju,kontakt@ajung.name,2019-10-06 13:09:27+02:00,8213b5db448971319386954d846b1ff985196f11,https://github.com/aleju/imgaug/commit/8213b5db448971319386954d846b1ff985196f11,Switch PerspectiveTransform to augment_batch() interface,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2226,aleju,kontakt@ajung.name,2019-10-06 15:33:04+02:00,a700dc6de6c3b74c1d9a468e63e89475c03c7b46,https://github.com/aleju/imgaug/commit/a700dc6de6c3b74c1d9a468e63e89475c03c7b46,Switch WithChannels to augment_batch() interface,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2227,aleju,kontakt@ajung.name,2019-10-06 20:45:08+02:00,48a265e0c1ff1631b13256e76e55ee43879b0741,https://github.com/aleju/imgaug/commit/48a265e0c1ff1631b13256e76e55ee43879b0741,Update changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2228,aleju,kontakt@ajung.name,2019-10-12 09:36:16+02:00,d10d73191d83d7621fa1b67be89b87bd65ac5dc5,https://github.com/aleju/imgaug/commit/d10d73191d83d7621fa1b67be89b87bd65ac5dc5,Switch arithmetic augmenters to _augment_batch(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2229,aleju,kontakt@ajung.name,2019-10-12 09:46:35+02:00,2f5c89c65a18d587aa4d8ccd6f8a15a725fc8014,https://github.com/aleju/imgaug/commit/2f5c89c65a18d587aa4d8ccd6f8a15a725fc8014,Switch blur augmenters to _augment_batch(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2230,aleju,kontakt@ajung.name,2019-10-12 09:50:54+02:00,0bb1011eca8f1f5f88f5df1c53b1dcdb591b0433,https://github.com/aleju/imgaug/commit/0bb1011eca8f1f5f88f5df1c53b1dcdb591b0433,Switch color augmenters to _augment_batch(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2231,aleju,kontakt@ajung.name,2019-10-12 11:02:20+02:00,2dcbfd97b154f3b8cf10076e3e21fc5eacd927de,https://github.com/aleju/imgaug/commit/2dcbfd97b154f3b8cf10076e3e21fc5eacd927de,Switch contrast augmenters to _augment_batch(),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['mock_all_channel_clahe._augment_batch.call_count == 1', 'mock_all_channel_clahe._augment_batch.call_count == 1', 'mock_all_channel_clahe._augment_batch.call_count == 1', 'mock_all_channel_clahe._augment_batch.call_count == 1', '(', 'isinstance(', '(', 'isinstance(']",[],[],[],[],[],[],[],[],[],[],[],[],"['mock_all_channel_clahe.call_count == 1', 'mock_all_channel_clahe.call_count == 1', 'mock_all_channel_clahe.call_count == 1', 'mock_all_channel_clahe.call_count == 1', 'mock_all_channel_clahe.call_count == 1', 'isinstance(mock_all_channel_clahe.call_args_list[0][0][0],', 'mock_all_channel_clahe.call_count == 1', 'isinstance(mock_all_channel_clahe.call_args_list[0][0][0],']",[],[],[],[],[],[],[],[],[],[],[],[]
2232,aleju,kontakt@ajung.name,2019-10-12 11:06:26+02:00,99bac1a68a19b3961f7d281a9966b1abe539cb01,https://github.com/aleju/imgaug/commit/99bac1a68a19b3961f7d281a9966b1abe539cb01,Switch convolutional augmenters to _augment_batch(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2233,aleju,kontakt@ajung.name,2019-10-12 11:10:20+02:00,e17ab8189d241b8e90f765995f2ad6eaaa319617,https://github.com/aleju/imgaug/commit/e17ab8189d241b8e90f765995f2ad6eaaa319617,Switch edge augmenters to _augment_batch(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2234,aleju,kontakt@ajung.name,2019-10-12 11:15:14+02:00,7e0868e8b07ae86c49711e2eb970eb5708cb64b7,https://github.com/aleju/imgaug/commit/7e0868e8b07ae86c49711e2eb970eb5708cb64b7,Switch ChannelShuffle to _augment_batch(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2235,aleju,kontakt@ajung.name,2019-10-12 11:22:23+02:00,40ef255f6bd0644decdb3800633361fcdcbdd7ba,https://github.com/aleju/imgaug/commit/40ef255f6bd0644decdb3800633361fcdcbdd7ba,Switch segmentation augmenters to _augment_batch(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2236,aleju,kontakt@ajung.name,2019-10-12 11:29:19+02:00,fa9f7a5e3ef2e0395ca07602bf7220421c6cbb02,https://github.com/aleju/imgaug/commit/fa9f7a5e3ef2e0395ca07602bf7220421c6cbb02,Switch weather augmenters to _augment_batch(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2237,aleju,kontakt@ajung.name,2019-10-12 13:29:19+02:00,28f4e251a13cdd6d2a21b845900c14f22902792b,https://github.com/aleju/imgaug/commit/28f4e251a13cdd6d2a21b845900c14f22902792b,Change get_augmentables() to return namedtuple,5,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2238,aleju,kontakt@ajung.name,2019-10-12 13:37:03+02:00,1d5989b86ca5f8277b91e8adb6167672e3a607fd,https://github.com/aleju/imgaug/commit/1d5989b86ca5f8277b91e8adb6167672e3a607fd,Remove unnecessary not-None checks for batch columns,4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2239,aleju,kontakt@ajung.name,2019-10-12 13:45:29+02:00,e8e91597447275bb6cb569b615dd15787fa531dd,https://github.com/aleju/imgaug/commit/e8e91597447275bb6cb569b615dd15787fa531dd,Improve method naming related to batch columns,5,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2240,aleju,kontakt@ajung.name,2019-10-12 13:52:23+02:00,972c3cd24acdcdcb155c90ca9ece0d4879636bcf,https://github.com/aleju/imgaug/commit/972c3cd24acdcdcb155c90ca9ece0d4879636bcf,Rename nb_items to nb_rows,6,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2241,aleju,kontakt@ajung.name,2019-10-12 14:58:24+02:00,36be0262e03e9f76b1189915676c305f30083400,https://github.com/aleju/imgaug/commit/36be0262e03e9f76b1189915676c305f30083400,Add missing docstrings to batches.py,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2242,aleju,kontakt@ajung.name,2019-10-12 15:50:25+02:00,2ccf710e5f7a78af49e395ae8c495537f7d61dab,https://github.com/aleju/imgaug/commit/2ccf710e5f7a78af49e395ae8c495537f7d61dab,Rename subselect_items_by_indices() to *_rows_by_indices(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2243,aleju,kontakt@ajung.name,2019-10-12 15:55:09+02:00,4c796ceb9ceb66f039ab1fcb23b78b3e314182a8,https://github.com/aleju/imgaug/commit/4c796ceb9ceb66f039ab1fcb23b78b3e314182a8,Rename invert_subselect_items_by_indices() to *_rows_by_indices(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2244,aleju,kontakt@ajung.name,2019-10-12 15:57:11+02:00,dfe517148b6be396fdcf1c79d57824f187ba06ea,https://github.com/aleju/imgaug/commit/dfe517148b6be396fdcf1c79d57824f187ba06ea,Rename unapply_propagation_hooks_() to invert_apply_*(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2245,aleju,kontakt@ajung.name,2019-10-12 15:58:49+02:00,140ab18d64e61f3f35e500c27e65380b55c3d7ed,https://github.com/aleju/imgaug/commit/140ab18d64e61f3f35e500c27e65380b55c3d7ed,Add return value to invert_apply_propagation_hooks_(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2246,aleju,kontakt@ajung.name,2019-10-12 16:00:43+02:00,ab4d85d846d0157e691a46b5df9b70fb7bea5b33,https://github.com/aleju/imgaug/commit/ab4d85d846d0157e691a46b5df9b70fb7bea5b33,Add return value to invert_subselect_rows_by_indices_(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2247,aleju,kontakt@ajung.name,2019-10-12 16:02:16+02:00,3ad5c9a4140b53a52973b058483a8582f3601dd6,https://github.com/aleju/imgaug/commit/3ad5c9a4140b53a52973b058483a8582f3601dd6,Refactor variable names,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2248,aleju,kontakt@ajung.name,2019-10-12 16:02:58+02:00,c7ba7ade61d1218cc8d0114cc002f48960f8a7c6,https://github.com/aleju/imgaug/commit/c7ba7ade61d1218cc8d0114cc002f48960f8a7c6,Refactor Batch.deepcopy() to use deepcopy_fast(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2249,aleju,kontakt@ajung.name,2019-10-12 16:06:07+02:00,824aa8b9f0dc1e078b46b70bff949b7b7e24dbd8,https://github.com/aleju/imgaug/commit/824aa8b9f0dc1e078b46b70bff949b7b7e24dbd8,Add return values to fill_from_batch_in_augmentation_(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2250,aleju,kontakt@ajung.name,2019-10-12 16:07:41+02:00,8e54a646b079da5360dbd885fbf2d83bcc03e6b3,https://github.com/aleju/imgaug/commit/8e54a646b079da5360dbd885fbf2d83bcc03e6b3,Improve code style,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2251,aleju,kontakt@ajung.name,2019-10-12 16:08:11+02:00,04e3a34354713023c8da30f6b560893011da198d,https://github.com/aleju/imgaug/commit/04e3a34354713023c8da30f6b560893011da198d,Fix example,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2252,aleju,kontakt@ajung.name,2019-10-12 21:26:38+02:00,7d038649c64cf2d07e1368a3f8b4b828e982576f,https://github.com/aleju/imgaug/commit/7d038649c64cf2d07e1368a3f8b4b828e982576f,Fix batch prop context not returning batch on enter,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2253,aleju,kontakt@ajung.name,2019-10-12 21:28:11+02:00,189b9a38aade57a808dd7102d5444c882f6d1eca,https://github.com/aleju/imgaug/commit/189b9a38aade57a808dd7102d5444c882f6d1eca,Improve batch subs. to use Nones for empty rows,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2254,aleju,kontakt@ajung.name,2019-10-12 21:29:02+02:00,f5149126b88e860e4f21045d7248e225afd533c6,https://github.com/aleju/imgaug/commit/f5149126b88e860e4f21045d7248e225afd533c6,Fix augment_batch() not unnormalizing correctly,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2255,aleju,kontakt@ajung.name,2019-10-12 21:35:50+02:00,d0753b432bcf88f18b5ff0e720c79a3fb89f5e03,https://github.com/aleju/imgaug/commit/d0753b432bcf88f18b5ff0e720c79a3fb89f5e03,Remove UnnormalizedBatch.to_batch_in_augmentation(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2256,aleju,kontakt@ajung.name,2019-10-12 21:39:04+02:00,185cc98c4563dfbf8d94806db894777ce8d0ef83,https://github.com/aleju/imgaug/commit/185cc98c4563dfbf8d94806db894777ce8d0ef83,Remove UnnormalizedBatch.fill_from_batch_in_augmentation_(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2257,aleju,kontakt@ajung.name,2019-10-12 21:39:19+02:00,5d9c6cc0903837bbb44ff7cc97ec3eca64b39d4f,https://github.com/aleju/imgaug/commit/5d9c6cc0903837bbb44ff7cc97ec3eca64b39d4f,Add tests for batches module,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestUnnormalizedBatch(unittest.TestCase):', 'class TestBatchInAugmentation(unittest.TestCase):']",[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['names == []', 'names == [,', 'isinstance(batch_norm, ia.Batch)', 'ia.is_np_array(batch_norm.images)', 'batch_norm.images_unaug.shape == (1, 2, 2, 3)', 'batch_norm.get_column_names() == []', 'isinstance(batch_norm, ia.Batch)', 'ia.is_np_array(batch_norm.images)', 'batch_norm.images_unaug.shape == (1, 2, 2, 3)', 'isinstance(batch_norm.heatmaps_unaug[0], ia.HeatmapsOnImage)', 'isinstance(batch_norm.segmentation_maps_unaug[0],', 'isinstance(batch_norm.keypoints_unaug[0], ia.KeypointsOnImage)', 'isinstance(batch_norm.bounding_boxes_unaug[0],', 'isinstance(batch_norm.polygons_unaug[0], ia.PolygonsOnImage)', 'isinstance(batch_norm.line_strings_unaug[0],', 'batch_norm.get_column_names() == [', 'batch.images_aug.shape == (1, 2, 2, 3)', 'ia.is_np_array(batch.heatmaps_aug[0])', 'ia.is_np_array(batch.segmentation_maps_aug[0])', 'batch.keypoints_aug[0][0] == (0, 0)', 'batch.bounding_boxes_aug[0][0].x1 == 0', 'batch.polygons_aug[0][0].exterior[0][0] == 0', 'batch.line_strings_aug[0][0].coords[0][0] == 0', 'names == []', 'names == [,', 'batch_norm is batch', 'isinstance(batch_inaug, ia.BatchInAugmentation)', 'ia.is_np_array(batch_inaug.images)', 'batch_inaug.images.shape == (1, 2, 2, 3)', 'batch_inaug.get_column_names() == []', 'isinstance(batch_inaug, ia.BatchInAugmentation)', 'ia.is_np_array(batch_inaug.images)', 'batch_inaug.images.shape == (1, 2, 2, 3)', 'isinstance(batch_inaug.heatmaps[0], ia.HeatmapsOnImage)', 'isinstance(batch_inaug.segmentation_maps[0],', 'isinstance(batch_inaug.keypoints[0], ia.KeypointsOnImage)', 'isinstance(batch_inaug.bounding_boxes[0],', 'isinstance(batch_inaug.polygons[0], ia.PolygonsOnImage)', 'isinstance(batch_inaug.line_strings[0], ia.LineStringsOnImage)', 'batch_inaug.get_column_names() == [', 'batch.images_aug == 2', 'batch.heatmaps_aug == 3', 'batch.segmentation_maps_aug == 4', 'batch.keypoints_aug == 5', 'batch.bounding_boxes_aug == 6', 'batch.polygons_aug == 7', 'batch.line_strings_aug == 8', 'batch.empty', 'not batch.empty', 'batch.nb_rows == 0', 'batch.nb_rows == 0', 'batch.nb_rows == 1', 'batch.nb_rows == 2', 'len(batch.columns) == 0', 'len(columns) == 0', 'len(columns) == 1', 'columns[0].name == list(kwargs_i.keys())[0]', 'len(columns) == 2', 'columns[0].name == ', 'columns[1].name == ', 'columns[0].value == [0, 0]', 'columns[1].value == [1, 1]', 'batch.get_column_names() == []', 'shapes == [(3, 4, 1), (3, 4, 1)]', 'shapes == [(3, 4, 1), (4, 5, 1)]', 'shapes == [(1, 2, 3)]', 'batch_sub.images is None', 'batch_sub.keypoints is None', 'batch_sub.images.shape == (2, 3, 4, 1)', 'batch_sub.keypoints[0].keypoints[0].x == 0', 'batch_sub.keypoints[0].keypoints[0].y == 0', 'batch_sub.keypoints[1].keypoints[0].x == 2', 'batch_sub.keypoints[1].keypoints[0].y == 2', 'batch_inv.images.shape == (3, 3, 4, 1)', 'np.max(batch_inv.images[0]) == 0', 'np.max(batch_inv.images[1]) == 1', 'np.max(batch_inv.images[2]) == 2', 'batch_inv.keypoints[0].keypoints[0].x == 0', 'batch_inv.keypoints[0].keypoints[0].y == 0', 'batch_inv.keypoints[1].keypoints[0].x == 1', 'batch_inv.keypoints[1].keypoints[0].y == 1', 'batch_inv.keypoints[2].keypoints[0].x == 2', 'batch_inv.keypoints[2].keypoints[0].y == 2', 'batch_inv.images.shape == (3, 3, 4, 1)', 'np.max(batch_inv.images[0]) == 10', 'np.max(batch_inv.images[1]) == 1', 'np.max(batch_inv.images[2]) == 20', 'batch_inv.keypoints[0].keypoints[0].x == 10', 'batch_inv.keypoints[0].keypoints[0].y == 0', 'batch_inv.keypoints[1].keypoints[0].x == 1', 'batch_inv.keypoints[1].keypoints[0].y == 1', 'batch_inv.keypoints[2].keypoints[0].x == 2', 'batch_inv.keypoints[2].keypoints[0].y == 2', 'batch_prop.images is None', 'batch_prop.keypoints is not None', 'len(batch_prop.keypoints) == 3', 'batch.images is not None', 'batch.keypoints is not None', 'batch.keypoints[0].keypoints[0].x == 10', 'batch_inaug is batch', 'batch.images == 2', 'batch.heatmaps == 3', 'batch.segmentation_maps == 4', 'batch.keypoints == 5', 'batch.bounding_boxes == 6', 'batch.polygons == 7', 'batch.line_strings == 8', 'batch.images_unaug == 0', 'batch.heatmaps_unaug == 1', 'batch.segmentation_maps_unaug == 2', 'batch.keypoints_unaug == 3', 'batch.bounding_boxes_unaug == 4', 'batch.polygons_unaug == 5', 'batch.line_strings_unaug == 6', 'batch.images_aug == 10', 'batch.heatmaps_aug == 20', 'batch.segmentation_maps_aug == 30', 'batch.keypoints_aug == 40', 'batch.bounding_boxes_aug == 50', 'batch.polygons_aug == 60', 'batch.line_strings_aug == 70', 'np.max(batch_copy.images) == 0', 'np.max(batch_copy.heatmaps) == 1', 'np.max(batch_copy.segmentation_maps) == 2', 'np.max(batch_copy.keypoints) == 3', 'np.max(batch_copy.bounding_boxes) == 4', 'np.max(batch_copy.polygons) == 5', 'np.max(batch_copy.line_strings) == 6']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2258,aleju,kontakt@ajung.name,2019-10-12 21:50:22+02:00,8bc3a27668a1b03431420418998d52ac897e3b7c,https://github.com/aleju/imgaug/commit/8bc3a27668a1b03431420418998d52ac897e3b7c,Use deepcopy_fast() in BIA.deepcopy(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2259,aleju,kontakt@ajung.name,2019-10-12 22:35:30+02:00,3b833e214b2df79e4b7ab7a478144c29032c37ee,https://github.com/aleju/imgaug/commit/3b833e214b2df79e4b7ab7a478144c29032c37ee,Fix deprecation warnings in tests,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['ia.is_np_array(batch_norm.images_unaug)', 'ia.is_np_array(batch_norm.images_unaug)']",[],[],[],[],[],[],[],[],[],[],[],[],"['ia.is_np_array(batch_norm.images)', 'ia.is_np_array(batch_norm.images)']",[],[],[],[],[],[],[],[],[],[],[],[]
2260,aleju,kontakt@ajung.name,2019-10-13 10:29:19+02:00,63052f058ad186bd339b9eafcd8d62ea520ef3b7,https://github.com/aleju/imgaug/commit/63052f058ad186bd339b9eafcd8d62ea520ef3b7,Fix docstrings,3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2261,aleju,kontakt@ajung.name,2019-10-13 10:50:09+02:00,2f289961aae6700ff8a7ae1805a235d7e776ed12,https://github.com/aleju/imgaug/commit/2f289961aae6700ff8a7ae1805a235d7e776ed12,Add tests for new kpsoi methods,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(kps.keypoints) == 0', 'len(kps.keypoints) == 0', 'len(kps.keypoints) == 2', 'kps.keypoints[0].x == 0', 'kps.keypoints[0].y == 0', 'kps.keypoints[1].x == 1', 'kps.keypoints[1].y == 2', 'len(kps.keypoints) == 2', 'kps.keypoints[0].x == 0', 'kps.keypoints[0].y == 0', 'kps.keypoints[1].x == 1', 'kps.keypoints[1].y == 2', 'kps.deepcopy.call_count == 1', 'kps_cp == ', 'kps3 is not kps2', 'kps3.shape == (3, 4, 5)', 'kps3.keypoints[0].x == 10', 'kps3.keypoints[0].y == 10', 'kps3.keypoints[1].x == 11', 'kps3.keypoints[1].y == 12']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2262,aleju,kontakt@ajung.name,2019-10-13 11:15:09+02:00,32e939d9ac8695e444f1d771802e1d596bc4dc37,https://github.com/aleju/imgaug/commit/32e939d9ac8695e444f1d771802e1d596bc4dc37,Fix fill_from_xy_array_() not accepting lists,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2263,aleju,kontakt@ajung.name,2019-10-13 11:18:23+02:00,1a439f7804a17771d3919779e7c3fd5b5cf81f55,https://github.com/aleju/imgaug/commit/1a439f7804a17771d3919779e7c3fd5b5cf81f55,Fix docstrings not listing all valid datatypes,4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2264,aleju,kontakt@ajung.name,2019-10-13 11:19:02+02:00,80839c9b52ba973e0560f6d14de80343f2963ec2,https://github.com/aleju/imgaug/commit/80839c9b52ba973e0560f6d14de80343f2963ec2,Add tests for new bbsoi methods,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,69,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['xyxy_out.dtype.name == ', 'xyxy_out.dtype.name == ', 'xy_out.shape == (4, 2)', 'np.allclose(xy_out, expected)', 'xy_out.dtype.name == ', 'xy_out.shape == (0, 2)', 'xy_out.dtype.name == ', 'len(bbsoi.bounding_boxes) == 0', 'len(bbsoi.bounding_boxes) == 0', 'len(bbsoi.bounding_boxes) == 2', 'bbsoi.bounding_boxes[0].x1 == 100', 'bbsoi.bounding_boxes[0].y1 == 101', 'bbsoi.bounding_boxes[0].x2 == 102', 'bbsoi.bounding_boxes[0].y2 == 103', 'bbsoi.bounding_boxes[1].x1 == 200', 'bbsoi.bounding_boxes[1].y1 == 201', 'bbsoi.bounding_boxes[1].x2 == 202', 'bbsoi.bounding_boxes[1].y2 == 203', 'len(bbsoi.bounding_boxes) == 2', 'bbsoi.bounding_boxes[0].x1 == 100', 'bbsoi.bounding_boxes[0].y1 == 101', 'bbsoi.bounding_boxes[0].x2 == 102', 'bbsoi.bounding_boxes[0].y2 == 103', 'bbsoi.bounding_boxes[1].x1 == 200', 'bbsoi.bounding_boxes[1].y1 == 201', 'bbsoi.bounding_boxes[1].x2 == 202', 'bbsoi.bounding_boxes[1].y2 == 203', 'len(bbsoi.bounding_boxes) == 0', 'len(bbsoi.bounding_boxes) == 0', 'len(bbsoi.bounding_boxes) == 2', 'bbsoi.bounding_boxes[0].x1 == 100', 'bbsoi.bounding_boxes[0].y1 == 101', 'bbsoi.bounding_boxes[0].x2 == 102', 'bbsoi.bounding_boxes[0].y2 == 103', 'bbsoi.bounding_boxes[1].x1 == 200', 'bbsoi.bounding_boxes[1].y1 == 201', 'bbsoi.bounding_boxes[1].x2 == 202', 'bbsoi.bounding_boxes[1].y2 == 203', 'len(bbsoi.bounding_boxes) == 2', 'bbsoi.bounding_boxes[0].x1 == 100', 'bbsoi.bounding_boxes[0].y1 == 101', 'bbsoi.bounding_boxes[0].x2 == 102', 'bbsoi.bounding_boxes[0].y2 == 103', 'bbsoi.bounding_boxes[1].x1 == 200', 'bbsoi.bounding_boxes[1].y1 == 201', 'bbsoi.bounding_boxes[1].x2 == 202', 'bbsoi.bounding_boxes[1].y2 == 203', 'len(kpsoi.keypoints) == 2*2', 'kpsoi.keypoints[0].x == 0', 'kpsoi.keypoints[0].y == 1', 'kpsoi.keypoints[1].x == 2', 'kpsoi.keypoints[1].y == 3', 'kpsoi.keypoints[2].x == 10', 'kpsoi.keypoints[2].y == 20', 'kpsoi.keypoints[3].x == 30', 'kpsoi.keypoints[3].y == 40', 'len(kpsoi.keypoints) == 0', 'len(bbsoi_inv.bounding_boxes) == 2', 'bbsoi_inv.shape == (10, 20, 30)', 'bbsoi_inv.bounding_boxes[0].x1 == 100', 'bbsoi_inv.bounding_boxes[0].y1 == 101', 'bbsoi_inv.bounding_boxes[0].x2 == 102', 'bbsoi_inv.bounding_boxes[0].y2 == 103', 'bbsoi_inv.bounding_boxes[1].x1 == 110', 'bbsoi_inv.bounding_boxes[1].y1 == 120', 'bbsoi_inv.bounding_boxes[1].x2 == 130', 'bbsoi_inv.bounding_boxes[1].y2 == 140', 'len(bbsoi_inv.bounding_boxes) == 0', 'bbsoi_inv.shape == (10, 20, 30)']",[],[],[],[],[],[],[],[],[],[],[],[],"['xyxy_out.dtype == np.float32', 'xyxy_out.dtype == np.int32']",[],[],[],[],[],[],[],[],[],[],[],[]
2265,aleju,kontakt@ajung.name,2019-10-13 11:43:01+02:00,954dbd885fb1ab13bb0bcb8721d0e5ecd3c287be,https://github.com/aleju/imgaug/commit/954dbd885fb1ab13bb0bcb8721d0e5ecd3c287be,Add tests for new lsoi methods,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['xy_out.shape == (4, 2)', 'np.allclose(xy_out, expected)', 'xy_out.dtype.name == ', 'xy_out.shape == (0, 2)', 'xy_out.dtype.name == ', 'len(lsoi.line_strings) == 0', 'len(lsoi.line_strings) == 0', 'len(lsoi.line_strings) == 2', 'np.allclose(', 'np.allclose(', 'len(lsoi.line_strings) == 2', 'np.allclose(', 'np.allclose(', 'len(kpsoi.keypoints) == 2*2', 'kpsoi.keypoints[0].x == 0', 'kpsoi.keypoints[0].y == 0', 'kpsoi.keypoints[1].x == 1', 'kpsoi.keypoints[1].y == 2', 'kpsoi.keypoints[2].x == 10', 'kpsoi.keypoints[2].y == 20', 'kpsoi.keypoints[3].x == 30', 'kpsoi.keypoints[3].y == 40', 'len(kpsoi.keypoints) == 0', 'len(lsoi_inv.line_strings) == 2', 'lsoi_inv.shape == (10, 20, 30)', 'np.allclose(', 'np.allclose(', 'len(lsoi_inv.line_strings) == 0', 'lsoi_inv.shape == (10, 20, 30)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2266,aleju,kontakt@ajung.name,2019-10-13 11:59:50+02:00,198e36d25ae9464e50077be0fd226b348746d604,https://github.com/aleju/imgaug/commit/198e36d25ae9464e50077be0fd226b348746d604,Add tests for new psoi methods,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestPolygonsOnImage_to_xy_array(unittest.TestCase):', 'class TestPolygonsOnImage_fill_from_xy_array_(unittest.TestCase):', 'class TestPolygonsOnImage_to_keypoints_on_image(unittest.TestCase):', 'class TestPolygonsOnImage_invert_to_keypoints_on_image(unittest.TestCase):']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['xy_out.shape == (6, 2)', 'np.allclose(xy_out, expected)', 'xy_out.dtype.name == ', 'xy_out.shape == (0, 2)', 'xy_out.dtype.name == ', 'len(psoi.polygons) == 0', 'len(psoi.polygons) == 0', 'len(psoi.polygons) == 2', 'np.allclose(', 'np.allclose(', 'len(psoi.polygons) == 2', 'np.allclose(', 'np.allclose(', 'len(kpsoi.keypoints) == 2*3', 'kpsoi.keypoints[0].x == 0', 'kpsoi.keypoints[0].y == 0', 'kpsoi.keypoints[1].x == 1', 'kpsoi.keypoints[1].y == 0', 'kpsoi.keypoints[2].x == 1', 'kpsoi.keypoints[2].y == 1', 'kpsoi.keypoints[3].x == 10', 'kpsoi.keypoints[3].y == 10', 'kpsoi.keypoints[4].x == 20', 'kpsoi.keypoints[4].y == 0', 'kpsoi.keypoints[5].x == 20', 'kpsoi.keypoints[5].y == 20', 'len(kpsoi.keypoints) == 0', 'len(psoi_inv.polygons) == 2', 'psoi_inv.shape == (10, 20, 30)', 'np.allclose(', 'np.allclose(', 'len(psoi_inv.polygons) == 0', 'psoi_inv.shape == (10, 20, 30)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2267,aleju,kontakt@ajung.name,2019-10-13 14:34:35+02:00,8ea92ace6bb6b9e4c25c2207979710478dab7ee7,https://github.com/aleju/imgaug/commit/8ea92ace6bb6b9e4c25c2207979710478dab7ee7,Add BB.from_point_soup(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2268,aleju,kontakt@ajung.name,2019-10-13 14:35:41+02:00,e30607a0685ba9e0948b76308b59b6b7dbbf0bd2,https://github.com/aleju/imgaug/commit/e30607a0685ba9e0948b76308b59b6b7dbbf0bd2,"Change BBSOI.from_xyxy_array() to also accept (N, 2, 2)",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2269,aleju,kontakt@ajung.name,2019-10-13 14:36:44+02:00,bb42e7e9e917971577e22ceb1c20fb56dba4c89f,https://github.com/aleju/imgaug/commit/bb42e7e9e917971577e22ceb1c20fb56dba4c89f,Improve import statement,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2270,aleju,kontakt@ajung.name,2019-10-13 14:37:16+02:00,10f12ffdbef88e310b42aca0ae9382ea9a60de82,https://github.com/aleju/imgaug/commit/10f12ffdbef88e310b42aca0ae9382ea9a60de82,Add BBSOI.from_point_soups(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2271,aleju,kontakt@ajung.name,2019-10-13 15:24:07+02:00,353c9c1553b78eec6926f6b73d47de7e1e116a3e,https://github.com/aleju/imgaug/commit/353c9c1553b78eec6926f6b73d47de7e1e116a3e,Switch BB aug from 2 to 4 corners by default,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2272,aleju,kontakt@ajung.name,2019-10-13 15:24:38+02:00,4a6c91cbfcee265efaf29c68ec5407419e662fcc,https://github.com/aleju/imgaug/commit/4a6c91cbfcee265efaf29c68ec5407419e662fcc,Add and adapt tests related to BBs,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Raises', '(AssertionError) as ctx:'), ('Raises', '(AssertionError) as ctx:')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['in str(ctx.exception)', 'in str(ctx.exception)', 'bb.x1 == 1', 'bb.y1 == 2', 'bb.x2 == 1', 'bb.y2 == 2', 'bb.x1 == 1', 'bb.y1 == 2', 'bb.x2 == 1', 'bb.y2 == 2', 'bb.x1 == 1', 'bb.y1 == 2', 'bb.x2 == 3', 'bb.y2 == 4', 'bb.x1 == 1', 'bb.y1 == 2', 'bb.x2 == 15', 'bb.y2 == 16', 'bb.x1 == 1', 'bb.y1 == 2', 'bb.x2 == 1', 'bb.y2 == 2', 'bb.x1 == 1', 'bb.y1 == 2', 'bb.x2 == 1', 'bb.y2 == 2', 'bb.x1 == 1', 'bb.y1 == 2', 'bb.x2 == 3', 'bb.y2 == 4', 'bb.x1 == 1', 'bb.y1 == 2', 'bb.x2 == 3', 'bb.y2 == 4', 'bb.x1 == 1', 'bb.y1 == 2', 'bb.x2 == 15', 'bb.y2 == 16', 'len(bbsoi.bounding_boxes) == 2', 'np.allclose(bbsoi.bounding_boxes[0].x1, 0.0)', 'np.allclose(bbsoi.bounding_boxes[0].y1, 0.0)', 'np.allclose(bbsoi.bounding_boxes[0].x2, 1.0)', 'np.allclose(bbsoi.bounding_boxes[0].y2, 1.0)', 'np.allclose(bbsoi.bounding_boxes[1].x1, 1.0)', 'np.allclose(bbsoi.bounding_boxes[1].y1, 2.0)', 'np.allclose(bbsoi.bounding_boxes[1].x2, 3.0)', 'np.allclose(bbsoi.bounding_boxes[1].y2, 4.0)', 'bbsoi.shape == (40, 50, 3)', 'len(bbsoi.bounding_boxes) == 1', 'bbsoi.bounding_boxes[0].x1 == 1', 'bbsoi.bounding_boxes[0].y1 == 3', 'bbsoi.bounding_boxes[0].x2 == 12', 'bbsoi.bounding_boxes[0].y2 == 19', 'bbsoi.shape == (40, 50, 3)', 'len(bbsoi.bounding_boxes) == 1', 'bbsoi.bounding_boxes[0].x1 == 1', 'bbsoi.bounding_boxes[0].y1 == 3', 'bbsoi.bounding_boxes[0].x2 == 12', 'bbsoi.bounding_boxes[0].y2 == 19', 'bbsoi.shape == (40, 50, 3)', 'len(bbsoi.bounding_boxes) == 1', 'bbsoi.bounding_boxes[0].x1 == 1', 'bbsoi.bounding_boxes[0].y1 == 3', 'bbsoi.bounding_boxes[0].x2 == 12', 'bbsoi.bounding_boxes[0].y2 == 19', 'bbsoi.shape == (40, 50, 3)', 'len(bbsoi.bounding_boxes) == 0', 'bbsoi.shape == (40, 50, 3)', 'len(bbsoi.bounding_boxes) == 0', 'bbsoi.shape == (40, 50, 3)', 'len(kpsoi.keypoints) == 2*4', 'kpsoi.keypoints[1].y == 1', 'kpsoi.keypoints[2].x == 2', 'kpsoi.keypoints[2].y == 3', 'kpsoi.keypoints[3].x == 0', 'kpsoi.keypoints[3].y == 3', 'kpsoi.keypoints[4].x == 10', 'kpsoi.keypoints[4].y == 20', 'kpsoi.keypoints[5].x == 30', 'kpsoi.keypoints[5].y == 20', 'kpsoi.keypoints[6].x == 30', 'kpsoi.keypoints[6].y == 40', 'kpsoi.keypoints[7].x == 10', 'kpsoi.keypoints[7].y == 40', 'bbsoi_inv.bounding_boxes[0].x2 == 106', 'bbsoi_inv.bounding_boxes[0].y2 == 107', 'bbsoi_inv.bounding_boxes[1].x2 == 170', 'bbsoi_inv.bounding_boxes[1].y2 == 180', 'np.allclose(', 'np.allclose(']",[],[],[],[],[],[],[],[],[],[],[],[],"['len(kpsoi.keypoints) == 2*2', 'kpsoi.keypoints[1].y == 3', 'kpsoi.keypoints[2].x == 10', 'kpsoi.keypoints[2].y == 20', 'kpsoi.keypoints[3].x == 30', 'kpsoi.keypoints[3].y == 40', 'bbsoi_inv.bounding_boxes[0].x2 == 102', 'bbsoi_inv.bounding_boxes[0].y2 == 103', 'bbsoi_inv.bounding_boxes[1].x2 == 130', 'bbsoi_inv.bounding_boxes[1].y2 == 140']",[],[],[],[],[],[],[],[],[],[],[],[]
2273,aleju,kontakt@ajung.name,2019-10-13 15:25:07+02:00,9e80eaa0f0bc588e33c97641f52dacb1edfe561e,https://github.com/aleju/imgaug/commit/9e80eaa0f0bc588e33c97641f52dacb1edfe561e,Synchronize changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2274,aleju,kontakt@ajung.name,2019-10-14 11:07:14+02:00,b9cdeb1cb4421513721040481aade2ba91d0242c,https://github.com/aleju/imgaug/commit/b9cdeb1cb4421513721040481aade2ba91d0242c,Fix recover_psois_() causing shape errors,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2275,aleju,kontakt@ajung.name,2019-10-14 11:20:10+02:00,234b5726a1867e4a6ce96e16e035bfee3adcd248,https://github.com/aleju/imgaug/commit/234b5726a1867e4a6ce96e16e035bfee3adcd248,Move legacy auto-deterministic out of augment_batch(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2276,aleju,kontakt@ajung.name,2019-10-14 11:24:58+02:00,e8a94a9c671766a14baf81b3fef8a8e1bdf3e249,https://github.com/aleju/imgaug/commit/e8a94a9c671766a14baf81b3fef8a8e1bdf3e249,Remove Augmenter._is_activated_with_hooks(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2277,aleju,kontakt@ajung.name,2019-10-14 11:28:31+02:00,c6df364e042895fde8b009772732b51d8de7d985,https://github.com/aleju/imgaug/commit/c6df364e042895fde8b009772732b51d8de7d985,Remove Augmenter._augment_heatmaps_as_images(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2278,aleju,kontakt@ajung.name,2019-10-14 11:30:27+02:00,baa043709f6126449f94f9e7037864d52a0a7395,https://github.com/aleju/imgaug/commit/baa043709f6126449f94f9e7037864d52a0a7395,Remove unused import,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2279,aleju,kontakt@ajung.name,2019-10-14 11:39:09+02:00,ea8988f32b39c7314fbfd2584210b1ae8a449b1d,https://github.com/aleju/imgaug/commit/ea8988f32b39c7314fbfd2584210b1ae8a449b1d,Add notes and warnings to docstrings,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2280,aleju,kontakt@ajung.name,2019-10-13 19:56:52+02:00,8b59aa2bdaec05c17614a099573bcbc3e0a083ca,https://github.com/aleju/imgaug/commit/8b59aa2bdaec05c17614a099573bcbc3e0a083ca,Add color temperature augmentation #405,4,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],3,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class Test_change_color_temperatures_(unittest.TestCase):', 'class Test_change_color_temperature_(unittest.TestCase):', 'class TestChangeColorTemperature(unittest.TestCase):']",[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(image_temp, expected)', 'isinstance(images_temp, list)', 'np.array_equal(images_temp[0], expected[0])', 'np.array_equal(images_temp[1], expected[1])', 'np.array_equal(images_temp[2], expected[2])', 'ia.is_np_array(images_temp)', 'np.array_equal(images_temp, expected)', 'np.all(diff <= 1)', 'np.all(diff <= 1)', 'image_temp == ', 'np.array_equal(mock_ccts.call_args_list[0][0][0],', 'mock_ccts.call_args_list[0][0][1] == [1000]', 'mock_ccts.call_args_list[0][1][]', 'np.array_equal(image_temp, expected)', 'isinstance(aug.kelvin, iap.Uniform)', 'aug.kelvin.a.value == 1000', 'aug.kelvin.b.value == 11000', 'aug.from_colorspace == iaa.CSPACE_RGB', 'aug.kelvin.value == 1000', 'isinstance(aug.kelvin, iap.Uniform)', 'aug.kelvin.a.value == 2000', 'aug.kelvin.b.value == 3000', 'isinstance(aug.kelvin, iap.Choice)', 'aug.kelvin.a == [1000, 2000, 3000]', 'aug.kelvin is param', 'mock_ccts.call_count == 1', 'np.array_equal(mock_ccts.call_args_list[0][0][0],', 'not np.isclose(', '(mock_ccts.call_args_list[0][1][]', 'np.array_equal(image_aug, expected)', 'params[0].value == 1111', 'params[1] == iaa.CSPACE_HLS']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2281,aleju,kontakt@ajung.name,2019-10-14 12:55:25+02:00,0a18185899cd2f2a4c674e7f6cf22914eb337281,https://github.com/aleju/imgaug/commit/0a18185899cd2f2a4c674e7f6cf22914eb337281,Add PR ID to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2282,aleju,kontakt@ajung.name,2019-10-15 10:40:58+02:00,1b7e45c8b92a663e35898c519a0d813d62d370a0,https://github.com/aleju/imgaug/commit/1b7e45c8b92a663e35898c519a0d813d62d370a0,Enforce clear numpy dtype instead of generic int,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2283,aleju,kontakt@ajung.name,2019-10-15 10:50:19+02:00,5c494d324e1ccad25570ee22d8fca26dd3784388,https://github.com/aleju/imgaug/commit/5c494d324e1ccad25570ee22d8fca26dd3784388,Simplify mode handling in PerspectiveTransform,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['samples.modes.shape == (1,)', 'samples.modes[0] == cv2.BORDER_REPLICATE', 'samples.modes.shape == (1,)', 'samples.modes[0] == cv2.BORDER_REPLICATE']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2284,aleju,kontakt@ajung.name,2019-10-15 11:23:58+02:00,7abc45c6b36ae6b246b67c8f573129509768b9ee,https://github.com/aleju/imgaug/commit/7abc45c6b36ae6b246b67c8f573129509768b9ee,Vectorize border mode str parsing in PerspT,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2285,aleju,kontakt@ajung.name,2019-10-15 11:26:20+02:00,8147376c79287a1fe56f230e6f444c4f2d70f2fe,https://github.com/aleju/imgaug/commit/8147376c79287a1fe56f230e6f444c4f2d70f2fe,Simplify cval np array to list conversion in PerspT,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2286,aleju,kontakt@ajung.name,2019-10-15 11:27:40+02:00,f5ba97d8316e20f445eac8a47e1cdeae3d2f38ca,https://github.com/aleju/imgaug/commit/f5ba97d8316e20f445eac8a47e1cdeae3d2f38ca,Switch PerspT sampling loop to zip,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2287,aleju,kontakt@ajung.name,2019-10-15 11:58:08+02:00,06f6cfd34b1d8fd00d7e7d93559e563c7d8fc051,https://github.com/aleju/imgaug/commit/06f6cfd34b1d8fd00d7e7d93559e563c7d8fc051,Vectorize jitter sampling in PerspT,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2288,aleju,kontakt@ajung.name,2019-10-15 12:10:17+02:00,10556cd15b04349168b626bd802fded6d6b9c2ee,https://github.com/aleju/imgaug/commit/10556cd15b04349168b626bd802fded6d6b9c2ee,Improve inner sampling loops in PerspT,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2289,aleju,kontakt@ajung.name,2019-10-15 12:14:34+02:00,2e72be9f73e3a361e704397c8cd23c953263ed2d,https://github.com/aleju/imgaug/commit/2e72be9f73e3a361e704397c8cd23c953263ed2d,Improve code style in PerspT,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2290,aleju,kontakt@ajung.name,2019-10-15 12:15:22+02:00,2d0e697e66cbcdc9aeedcaae459ce734c520907a,https://github.com/aleju/imgaug/commit/2d0e697e66cbcdc9aeedcaae459ce734c520907a,Add fit_output to get_parameters() in PerspT,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['params[4] is False'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2291,aleju,kontakt@ajung.name,2019-10-15 12:17:08+02:00,20c9e6926f954045014e8b4ef60095cefc995f09,https://github.com/aleju/imgaug/commit/20c9e6926f954045014e8b4ef60095cefc995f09,Improve code style consistency in PerspT,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['params[3].value == '],[],[],[],[],[],[],[],[],[],[],[],[],['params[3].value == '],[],[],[],[],[],[],[],[],[],[],[],[]
2292,aleju,kontakt@ajung.name,2019-10-15 12:18:10+02:00,3b75bc442facdb61b959adae4e3e3d8c57f5986e,https://github.com/aleju/imgaug/commit/3b75bc442facdb61b959adae4e3e3d8c57f5986e,Change order of arguments in PerspT wrt fit_output,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2293,aleju,kontakt@ajung.name,2019-10-15 12:24:05+02:00,90bfd9de345e6a149e96313d62477f893cdf5f75,https://github.com/aleju/imgaug/commit/90bfd9de345e6a149e96313d62477f893cdf5f75,Add docstring for fit_output in PerspT,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2294,aleju,kontakt@ajung.name,2019-10-15 20:45:43+02:00,74540b27489c57b6ab176c572402e58fff7a1bd6,https://github.com/aleju/imgaug/commit/74540b27489c57b6ab176c572402e58fff7a1bd6,Add note to docstring,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2295,aleju,kontakt@ajung.name,2019-10-15 20:46:00+02:00,e1e93005e55bfdb37bd0387290e2a96063449b76,https://github.com/aleju/imgaug/commit/e1e93005e55bfdb37bd0387290e2a96063449b76,Add tests for fit_output in PerspT,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.shape != image.shape', '0 <= y0 <= 3', '0 <= x0 <= 3', '0 <= y1 <= 3', 'image_aug.shape[1]-3 <= x1 <= image_aug.shape[1]', 'image_aug.shape[1]-3 <= y2 <= image_aug.shape[1]', 'image_aug.shape[1]-3 <= x2 <= image_aug.shape[1]', 'np.max(image_aug[8:h-8, 8:w-8, :]) == 0', '0 <= y_min <= 5', '0 <= x_min <= 5', 'h-5 <= y_max <= h-1', 'w-5 <= x_max <= w-1', '0 <= y_min <= 5+2', '0 <= x_min <= 5+2', 'h-5-2 <= y_max <= h-1', 'w-5-2 <= x_max <= w-1', '0 <= y_min <= 5', '0 <= x_min <= 5', 'h-5 <= y_max <= h+1', 'w-5 <= x_max <= w+1']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2296,aleju,kontakt@ajung.name,2019-10-16 11:41:36+02:00,bafa3f6384133a0bec1a0ea3e7e2acf26c3819fc,https://github.com/aleju/imgaug/commit/bafa3f6384133a0bec1a0ea3e7e2acf26c3819fc,"Reorder sampled points, add comments",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2297,aleju,kontakt@ajung.name,2019-10-16 11:42:23+02:00,9de5d3dea091f7c38fdd484688ec3f591521626e,https://github.com/aleju/imgaug/commit/9de5d3dea091f7c38fdd484688ec3f591521626e,Improve tests for fit_output in PerspT,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['0 <= y_min <= 5+tol', '0 <= x_min <= 5+tol', 'h-5-tol <= y_max <= h-1', 'w-5-tol <= x_max <= w-1', '0 <= y_min <= 5+tol', '0 <= x_min <= 5+tol', 'h-5-tol <= y_max <= h-1', 'w-5-tol <= x_max <= w-1', '0-tol <= y_min <= tol', '0-tol <= x_min <= tol', 'h-tol <= y_max <= h+tol', 'w-tol <= x_max <= w+tol']",[],[],[],[],[],[],[],[],[],[],[],[],"['0 <= y_min <= 5', '0 <= x_min <= 5', 'h-5 <= y_max <= h-1', 'w-5 <= x_max <= w-1', '0 <= y_min <= 5+2', '0 <= x_min <= 5+2', 'h-5-2 <= y_max <= h-1', 'w-5-2 <= x_max <= w-1', '0 <= y_min <= 5', '0 <= x_min <= 5', 'h-5 <= y_max <= h+1', 'w-5 <= x_max <= w+1']",[],[],[],[],[],[],[],[],[],[],[],[]
2298,aleju,kontakt@ajung.name,2019-10-16 11:42:56+02:00,f52dbeca7584521f13c6e14ff89028e94150a488,https://github.com/aleju/imgaug/commit/f52dbeca7584521f13c6e14ff89028e94150a488,Add test to verify correct BB shape after aug in PerspT,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.shape == image.shape', 'np.max(image_aug[tl_y1:tl_y2, tl_x1:tl_x2, 0]) > 100', 'np.max(image_aug[tr_y1:tr_y2, tr_x1:tr_x2, 1]) > 100', 'np.max(image_aug[br_y1:br_y2, br_x1:br_x2, 2]) > 100', 'np.max(image_aug[bl_y1:bl_y2, bl_x1:bl_x2, 3]) > 100', 'np.isclose(bb_aug.x1, exp_x1, atol=7.5)', 'np.isclose(bb_aug.y1, exp_y1, atol=7.5)', 'np.isclose(bb_aug.x2, exp_x2, atol=7.5)', 'np.isclose(bb_aug.y2, exp_y2, atol=7.5)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2299,aleju,kontakt@ajung.name,2019-10-16 11:47:14+02:00,2684818bc5a0829611f0a634bb06e9bdc106064f,https://github.com/aleju/imgaug/commit/2684818bc5a0829611f0a634bb06e9bdc106064f,Improve code style,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2300,aleju,kontakt@ajung.name,2019-10-16 11:47:43+02:00,6daa1a5572e0b94822036a90e7647395d4f74b84,https://github.com/aleju/imgaug/commit/6daa1a5572e0b94822036a90e7647395d4f74b84,Add changes of PerspT to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2301,aleju,kontakt@ajung.name,2019-10-16 13:33:47+02:00,a3502ea917e200f1734ed80593e02c0cbb0e60c2,https://github.com/aleju/imgaug/commit/a3502ea917e200f1734ed80593e02c0cbb0e60c2,Fix test in py <3.6,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2302,aleju,kontakt@ajung.name,2019-10-16 15:07:10+02:00,164b5748e2a278d160589a96d140c8156bc2e2f3,https://github.com/aleju/imgaug/commit/164b5748e2a278d160589a96d140c8156bc2e2f3,Change pool augs to affect map arrays and add tests,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['segmaps_aug.shape == (6, 6, 3)', 'np.allclose(segmaps_aug.arr, arr[..., np.newaxis])', 'heatmaps_aug.arr_0to1.shape == (1, 2, 1)', 'np.allclose(heatmaps_aug.arr_0to1, expected.arr_0to1)', 'segmaps_aug.shape == (6, 6, 3)', 'np.allclose(segmaps_aug.arr, arr[..., np.newaxis])', 'segmaps_aug.shape == (3, 3, 3)', 'segmaps_aug.arr.shape == (1, 2, 1)', 'np.allclose(segmaps_aug.arr, expected.arr)']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(heatmaps_aug.arr_0to1, arr[..., np.newaxis])']",[],[],[],[],[],[],[],[],[],[],[],[]
2303,aleju,kontakt@ajung.name,2019-10-16 17:23:00+02:00,28b427d6264d721c47fb52eb1a2478424cdf7991,https://github.com/aleju/imgaug/commit/28b427d6264d721c47fb52eb1a2478424cdf7991,Add Dropout2d augmenter,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestDropout2d(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug.p, iap.Binomial)', 'np.isclose(aug.p.p.value, 1.0)', 'aug.nb_keep_channels == 1', 'isinstance(aug.p, iap.Binomial)', 'np.isclose(aug.p.p.value, 0.3)', 'aug.nb_keep_channels == 1', 'isinstance(aug.p, iap.Binomial)', 'np.isclose(aug.p.p.value, 1.0)', 'aug.nb_keep_channels == 2', 'np.allclose(heatmaps_aug.arr_0to1, heatmaps.arr_0to1)', 'image_aug.shape == image.shape', 'image_aug.dtype.name == image.dtype.name', 'np.sum(image_aug) == 0', 'image_aug.shape == image.shape', 'image_aug.dtype.name == image.dtype.name', 'np.array_equal(image_aug, image)', 'image_aug.shape == image.shape', 'image_aug.dtype.name == image.dtype.name', 'np.isclose(nb_dropped, image.shape[2]*0.75, atol=75)', 'images_aug.shape == images.shape', 'images_aug.dtype.name == images.dtype.name', 'np.isclose(nb_dropped,', 'sorted(ids_kept_uq.tolist()) == [0, 1, 2]', 'np.sum(image_aug == 255) == 2', 'np.sum(image_aug == 0) == 0', 'np.sum(image_aug == 0) == 1', 'nb_dropped == 0', 'isinstance(params[0], iap.Binomial)', 'np.isclose(params[0].p.value, 0.3)', 'params[1] == 2', 'np.all(image_aug == 1)', 'image_aug.dtype.name == ', 'image_aug.shape == image.shape', 'image_aug.shape == image.shape', 'image_aug.dtype.name == ', 'np.sum(image_aug == 1) == 3', 'np.sum(image_aug == 0) == 7', 'image_aug.shape == image.shape', 'image_aug.dtype.name == dt', 'np.sum(image_aug == value) == 10', 'np.sum(image_aug == value) == 3', 'np.sum(image_aug == 0) == 7', 'image_aug.shape == image.shape', 'image_aug.dtype.name == dt', 'np.sum(_isclose(image_aug, value)) == 10', '(', 'np.sum(image_aug == 0) == 7']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2304,aleju,kontakt@ajung.name,2019-10-16 21:25:55+02:00,638ce0f93a78f5385521e1faa3b0971a954cd5d7,https://github.com/aleju/imgaug/commit/638ce0f93a78f5385521e1faa3b0971a954cd5d7,Add CenterCropToFixedSize augmenter,2,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestCenterCropToFixedSize(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, image[5-1:5+2, 5-1:5+2, :])']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2305,aleju,kontakt@ajung.name,2019-10-16 21:43:31+02:00,bb21da1f9312730fc38da95ae036e30954884061,https://github.com/aleju/imgaug/commit/bb21da1f9312730fc38da95ae036e30954884061,Refactor CropToFixedSize to enable image-specific sizes,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2306,aleju,kontakt@ajung.name,2019-10-16 22:52:22+02:00,49b5e19620823799479b99cf01221278aee125d0,https://github.com/aleju/imgaug/commit/49b5e19620823799479b99cf01221278aee125d0,Refactor compute_padding_*() methods,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2307,aleju,kontakt@ajung.name,2019-10-16 22:56:31+02:00,46550b573e49979351952cdb6cabcc5299456f51,https://github.com/aleju/imgaug/commit/46550b573e49979351952cdb6cabcc5299456f51,Add compute_croppings_to_reach_multiples_of(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2308,aleju,kontakt@ajung.name,2019-10-16 23:03:56+02:00,de3816d6b9e148df496fc4a97d30fdfc8d151e93,https://github.com/aleju/imgaug/commit/de3816d6b9e148df496fc4a97d30fdfc8d151e93,Add CropToMultiplesOf,2,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestCropToMultiplesOf(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['aug.width_multiple == 1', 'aug.height_multiple == 2', 'np.isclose(aug.position[0].value, 0.5)', 'np.isclose(aug.position[1].value, 0.5)', 'np.array_equal(observed, image)', 'np.array_equal(observed, image)', 'np.array_equal(observed, image[0:2, 0:2, :])', 'np.array_equal(observed, image[0:3, 0:2, :])', 'np.array_equal(observed, image[0:2, 0:3, :])', 'np.array_equal(observed, image[0:2, 0:4, :])', 'np.array_equal(observed, image[1:6, 1:7, :])', 'observed.shape == (50, 50, 3)', 'np.allclose(observed.arr_0to1,', 'observed.keypoints[0].x == 2', 'observed.keypoints[0].y == 2', 'params[0] == 1', 'params[1] == 2', 'np.isclose(params[2][0].value, 0.5)', 'np.isclose(params[2][1].value, 0.5)', 'image_aug.shape == image.shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2309,aleju,kontakt@ajung.name,2019-10-16 23:04:17+02:00,4b3b26b932958e5f601b229797ca5e00702a1b92,https://github.com/aleju/imgaug/commit/4b3b26b932958e5f601b229797ca5e00702a1b92,Fix missing import in docstring example,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2310,aleju,kontakt@ajung.name,2019-10-16 23:04:45+02:00,154a639a97c47973ba32decfd821d4b94d4ea264,https://github.com/aleju/imgaug/commit/154a639a97c47973ba32decfd821d4b94d4ea264,Fix missing dtype support in docstring,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2311,aleju,kontakt@ajung.name,2019-10-16 23:05:29+02:00,b404b55e4bd5f8962a25d4f6cfab14d2c0d8ae0c,https://github.com/aleju/imgaug/commit/b404b55e4bd5f8962a25d4f6cfab14d2c0d8ae0c,Add changelog for PR,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2312,aleju,kontakt@ajung.name,2019-10-17 10:15:30+02:00,e4206dbaa43d26b352ada1350bdb5a89e40ea701,https://github.com/aleju/imgaug/commit/e4206dbaa43d26b352ada1350bdb5a89e40ea701,Make PadToFixedSize more extensible,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2313,aleju,kontakt@ajung.name,2019-10-17 10:49:50+02:00,3cccbdbb2d19cdf1d3b32cf3c926b02626d9cbd6,https://github.com/aleju/imgaug/commit/3cccbdbb2d19cdf1d3b32cf3c926b02626d9cbd6,Add todo,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2314,aleju,kontakt@ajung.name,2019-10-17 10:50:21+02:00,3f7a9f5cb46111719548bd9ddd3382403d0f0ef7,https://github.com/aleju/imgaug/commit/3f7a9f5cb46111719548bd9ddd3382403d0f0ef7,Add PadToMultiplesOf,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestPadToMultiplesOf(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['aug.width_multiple == 1', 'aug.height_multiple == 2', 'np.isclose(aug.position[0].value, 0.5)', 'np.isclose(aug.position[1].value, 0.5)', 'np.array_equal(observed, image)', 'np.array_equal(observed, image)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'observed.shape == (200, 200, 3)', 'np.allclose(observed.arr_0to1, expected.arr_0to1)', 'observed.keypoints[0].x == 2', 'observed.keypoints[0].y == 4', 'params[0] == 1', 'params[1] == 2', 'params[2].value == ', 'params[3].value == 5', 'np.isclose(params[4][0].value, 0.5)', 'np.isclose(params[4][1].value, 0.5)', 'image_aug.shape == expected_shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2315,aleju,kontakt@ajung.name,2019-10-17 12:07:39+02:00,bf9d1982c66d71faaa038f0a151f1ae2289bdca2,https://github.com/aleju/imgaug/commit/bf9d1982c66d71faaa038f0a151f1ae2289bdca2,Fix error messages,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2316,aleju,kontakt@ajung.name,2019-10-17 12:10:07+02:00,b77231170adf9974308c4428acadd6764ede82d8,https://github.com/aleju/imgaug/commit/b77231170adf9974308c4428acadd6764ede82d8,Add compute_croppings_to_reach_exponents_of(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2317,aleju,kontakt@ajung.name,2019-10-17 12:10:29+02:00,87c9901408ce89d667652d7295930deb5fa4ea14,https://github.com/aleju/imgaug/commit/87c9901408ce89d667652d7295930deb5fa4ea14,Add CropToExponentsOf,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestCropToExponentsOf(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['aug.width_base == 1', 'aug.height_base == 2', 'np.isclose(aug.position[0].value, 0.5)', 'np.isclose(aug.position[1].value, 0.5)', 'np.array_equal(observed, image)', 'np.array_equal(observed, image[0:2, 0:2, :])', 'np.array_equal(observed, image[0:3, 0:2, :])', 'np.array_equal(observed, image[0:2, 0:3, :])', 'np.array_equal(observed, image[0:2, 0:4, :])', 'np.array_equal(observed, image[0:16, 8:17, :])', 'np.array_equal(observed, image[1:2, 1:2, :])', 'observed.shape == (50, 50, 3)', 'np.allclose(observed.arr_0to1,', 'observed.keypoints[0].x == 2', 'observed.keypoints[0].y == 2', 'params[0] == 1', 'params[1] == 2', 'np.isclose(params[2][0].value, 0.5)', 'np.isclose(params[2][1].value, 0.5)', 'image_aug.shape == image.shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2318,aleju,kontakt@ajung.name,2019-10-17 14:00:54+02:00,5f401b5749d155ce7352f44ce4c961a9773d8623,https://github.com/aleju/imgaug/commit/5f401b5749d155ce7352f44ce4c961a9773d8623,Add compute_paddings_to_reach_exponents_of(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2319,aleju,kontakt@ajung.name,2019-10-17 14:01:25+02:00,23d12fa8a911b7e607b60e289939e0faab55b3b0,https://github.com/aleju/imgaug/commit/23d12fa8a911b7e607b60e289939e0faab55b3b0,Add PadToExponentsOf,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,['class TestPadToExponentsOf(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['aug.width_base == 2', 'aug.height_base == 3', 'aug.width_base == 2', 'aug.height_base == 3', 'np.isclose(aug.position[0].value, 0.5)', 'np.isclose(aug.position[1].value, 0.5)', 'np.array_equal(observed, image)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'observed.shape == (200, 200, 3)', 'np.allclose(observed.arr_0to1, expected.arr_0to1)', 'observed.keypoints[0].x == 2', 'observed.keypoints[0].y == 4', 'params[0] == 1', 'params[1] == 2', 'params[2].value == ', 'params[3].value == 5', 'np.isclose(params[4][0].value, 0.5)', 'np.isclose(params[4][1].value, 0.5)', 'image_aug.shape == expected_shape']",[],[],[],[],[],[],[],[],[],[],[],[],"['aug.width_base == 1', 'aug.height_base == 2']",[],[],[],[],[],[],[],[],[],[],[],[]
2320,aleju,kontakt@ajung.name,2019-10-17 14:01:58+02:00,2643eea144ecf4e94b422abbff62c2cc02d45d02,https://github.com/aleju/imgaug/commit/2643eea144ecf4e94b422abbff62c2cc02d45d02,Fix docstring example,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2321,aleju,kontakt@ajung.name,2019-10-17 14:10:39+02:00,310da66872a616bc0076811678aeafc07391e46f,https://github.com/aleju/imgaug/commit/310da66872a616bc0076811678aeafc07391e46f,Extend docstring of PadToExponentsOf,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2322,aleju,kontakt@ajung.name,2019-10-17 14:12:29+02:00,3241b43933df471ff4e7cc63ba78828a932b4119,https://github.com/aleju/imgaug/commit/3241b43933df471ff4e7cc63ba78828a932b4119,Change CropToExponentsOf to not crop below base^1,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, image)']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, image[1:2, 1:2, :])']",[],[],[],[],[],[],[],[],[],[],[],[]
2323,aleju,kontakt@ajung.name,2019-10-17 14:54:21+02:00,6510c40de0fe11a49ada369f90bce6d551f5be51,https://github.com/aleju/imgaug/commit/6510c40de0fe11a49ada369f90bce6d551f5be51,Enable H or W None in Crop-/PadToFixedSize and derived augs,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed.dtype.name == ', 'observed.shape == (5, 4, 3)', 'observed.dtype.name == ', 'observed.shape == (4, 5, 3)', 'observed.dtype.name == ', 'observed.shape == (5, 6, 3)', 'observed.dtype.name == ', 'observed.shape == (6, 5, 3)', 'np.array_equal(observed, image[0:2, 0:3, :])', 'np.array_equal(observed, image[0:3, 0:2, :])', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, image[0:2, 0:3, :])', 'np.array_equal(observed, image[0:3, 0:2, :])', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2324,aleju,kontakt@ajung.name,2019-10-17 15:18:12+02:00,b66d5af022121dabd67c3b1400bcf2ae9ae5fcab,https://github.com/aleju/imgaug/commit/b66d5af022121dabd67c3b1400bcf2ae9ae5fcab,Change CropToFixedSize.get_parameters to also return H/W,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['params[0] == 20', 'params[1] == 10', 'np.isclose(params[2][0].value, 0.5)', 'np.isclose(params[2][1].value, 0.5)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2325,aleju,kontakt@ajung.name,2019-10-17 15:18:46+02:00,e788012de8e2f263b728e1e0763e3e67338d22c7,https://github.com/aleju/imgaug/commit/e788012de8e2f263b728e1e0763e3e67338d22c7,Change PadToFixedSize.get_parameters to also return H/W,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['params[0] == 20', 'params[1] == 10', 'params[3].value == ', 'params[4].value == 10', 'np.isclose(params[2][0].value, 0.5)', 'np.isclose(params[2][1].value, 0.5)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2326,aleju,kontakt@ajung.name,2019-10-17 15:20:27+02:00,646f12558bde48d2feba6f4ebc05ca5db21db6ff,https://github.com/aleju/imgaug/commit/646f12558bde48d2feba6f4ebc05ca5db21db6ff,Change order of params in PadToFixedSize.get_parameters(),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['params[2].value == ', 'params[3].value == 10', 'np.isclose(params[4][0].value, 0.5)', 'np.isclose(params[4][1].value, 0.5)']",[],[],[],[],[],[],[],[],[],[],[],[],"['params[3].value == ', 'params[4].value == 10', 'np.isclose(params[2][0].value, 0.5)', 'np.isclose(params[2][1].value, 0.5)']",[],[],[],[],[],[],[],[],[],[],[],[]
2327,aleju,kontakt@ajung.name,2019-10-17 15:25:00+02:00,a0ab2e530babeb0126b1d5ec9b5c162a18dd9537,https://github.com/aleju/imgaug/commit/a0ab2e530babeb0126b1d5ec9b5c162a18dd9537,Replace dummy constants with Nones,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2328,aleju,kontakt@ajung.name,2019-10-17 16:02:47+02:00,80a35b3d850d3384a6285f03049af39a61400665,https://github.com/aleju/imgaug/commit/80a35b3d850d3384a6285f03049af39a61400665,Add CenterCropToMultiplesOf,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestCenterCropToMultiplesOf(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, image[0:2, 0:4, :])']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2329,aleju,kontakt@ajung.name,2019-10-17 16:46:39+02:00,b19161941fec3ca50992bf7825641645bfcd14bd,https://github.com/aleju/imgaug/commit/b19161941fec3ca50992bf7825641645bfcd14bd,"Change PadToFixedSize to prefer right over left, bot over top",3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2330,aleju,kontakt@ajung.name,2019-10-17 17:12:09+02:00,59ae9d7ebac7edb764c48261a6b8dbea5fab4945,https://github.com/aleju/imgaug/commit/59ae9d7ebac7edb764c48261a6b8dbea5fab4945,Add CenterPadToMultiplesOf,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestCenterPadToMultiplesOf(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2331,aleju,kontakt@ajung.name,2019-10-17 17:20:54+02:00,317aa13975b486454de80fe5e7e629f6030983d2,https://github.com/aleju/imgaug/commit/317aa13975b486454de80fe5e7e629f6030983d2,Add CenterCropToExponentsOf,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestCenterCropToExponentsOf(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, image[0:2, 0:2, :])']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2332,aleju,kontakt@ajung.name,2019-10-17 17:32:25+02:00,e2b0f64d696c6c5bf8748024c93f46fb72b9c7ce,https://github.com/aleju/imgaug/commit/e2b0f64d696c6c5bf8748024c93f46fb72b9c7ce,Improve and fix various docstrings,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2333,aleju,kontakt@ajung.name,2019-10-17 17:32:48+02:00,d72d8131fa52a9f2ba584448b153bed39702ddcb,https://github.com/aleju/imgaug/commit/d72d8131fa52a9f2ba584448b153bed39702ddcb,Add CenterPadToExponentsOf,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestCenterPadToExponentsOf(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2334,aleju,kontakt@ajung.name,2019-10-17 18:12:40+02:00,737b732c1a5ed1beefc5effed6b1878c137b8b25,https://github.com/aleju/imgaug/commit/737b732c1a5ed1beefc5effed6b1878c137b8b25,Add CenterPadToFixedSize,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestCenterPadToFixedSize(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2335,aleju,kontakt@ajung.name,2019-10-17 20:29:19+02:00,c19068828055817e0b4b7e46086828e7db1570b8,https://github.com/aleju/imgaug/commit/c19068828055817e0b4b7e46086828e7db1570b8,Improve accuracy of pad/crop projection to non-image datatypes,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2336,aleju,kontakt@ajung.name,2019-10-17 20:30:45+02:00,a33b57c31415fc14c37f0974d82c07b50ec424a1,https://github.com/aleju/imgaug/commit/a33b57c31415fc14c37f0974d82c07b50ec424a1,Fix compute_paddings_for_aspect_ratio() not working with shape tuples,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2337,aleju,kontakt@ajung.name,2019-10-17 20:42:26+02:00,a22df0dedfed67f9fa135a9d1462930b335ecf2f,https://github.com/aleju/imgaug/commit/a22df0dedfed67f9fa135a9d1462930b335ecf2f,Add compute_croppings_for_aspect_ratio(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2338,aleju,kontakt@ajung.name,2019-10-17 20:45:02+02:00,d7725a66faa102148b31c8b59daeb338bcb8d852,https://github.com/aleju/imgaug/commit/d7725a66faa102148b31c8b59daeb338bcb8d852,Add CropToAspectRatio,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestCropToAspectRatio(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.isclose(aug.aspect_ratio, 2.0)', 'np.isclose(aug.position[0].value, 0.5)', 'np.isclose(aug.position[1].value, 0.5)', 'np.array_equal(observed, image)', 'np.array_equal(observed, image[1:3, 0:4, :])', 'np.array_equal(observed, image[0:4, 1:3, :])', 'np.array_equal(observed, image[1:3, 0:4, :])', 'np.array_equal(observed, image[0:5, 0:3, :])', 'np.array_equal(observed, image[2:3, 0:4, :])', 'np.array_equal(observed, image[:, 1:2, :])', 'observed.shape == (50, 100, 3)', 'np.allclose(observed.arr_0to1,', 'observed.keypoints[0].x == 2', 'observed.keypoints[0].y == 1', 'np.isclose(params[0], 2.0)', 'np.isclose(params[1][0].value, 0.5)', 'np.isclose(params[1][1].value, 0.5)', 'image_aug.shape == image.shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2339,aleju,kontakt@ajung.name,2019-10-17 21:00:05+02:00,df51e5c9b41d19a61be5cc44cccc8e21b92b0383,https://github.com/aleju/imgaug/commit/df51e5c9b41d19a61be5cc44cccc8e21b92b0383,Fix wrong inheritance in CenterPad/CropToExponentsOf,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, image[0:4, 0:6, :])', 'np.array_equal(observed, image[0:4, 1:10, :])']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, image[0:2, 0:4, :])', 'np.array_equal(observed, image[0:2, 0:2, :])']",[],[],[],[],[],[],[],[],[],[],[],[]
2340,aleju,kontakt@ajung.name,2019-10-17 21:07:30+02:00,523731b2c36c48180560001a90d47260a72a8c90,https://github.com/aleju/imgaug/commit/523731b2c36c48180560001a90d47260a72a8c90,Add CenterCropToAspectRatio,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestCenterCropToAspectRatio(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, image[1:3, 0:4, :])']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2341,aleju,kontakt@ajung.name,2019-10-17 21:50:59+02:00,d27b16a9168877a0243452ed6c86b11285485198,https://github.com/aleju/imgaug/commit/d27b16a9168877a0243452ed6c86b11285485198,Improve compute_paddings_for_aspect_ratio() for zero-sized axes,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2342,aleju,kontakt@ajung.name,2019-10-17 21:52:00+02:00,c8dd2914d8dc7929215ec8794f459961adb5723d,https://github.com/aleju/imgaug/commit/c8dd2914d8dc7929215ec8794f459961adb5723d,Add PadToAspectRatio,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestPadToAspectRatio(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.isclose(aug.aspect_ratio, 2.0)', 'np.isclose(aug.position[0].value, 0.5)', 'np.isclose(aug.position[1].value, 0.5)', 'np.array_equal(observed, image)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'observed.shape == (100, 200, 3)', 'np.allclose(observed.arr_0to1, expected.arr_0to1)', 'observed.keypoints[0].x == 2+2', 'observed.keypoints[0].y == 3', 'np.isclose(params[0], 2.0)', 'params[1].value == ', 'params[2].value == 5', 'np.isclose(params[3][0].value, 0.5)', 'np.isclose(params[3][1].value, 0.5)', 'image_aug.shape == expected_shape', 'image_aug.shape == expected_shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2343,aleju,kontakt@ajung.name,2019-10-17 22:01:47+02:00,d0c39772a2ded80366fce19a4d9e529d8141f969,https://github.com/aleju/imgaug/commit/d0c39772a2ded80366fce19a4d9e529d8141f969,Add CenterPadToAspectRatio,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestCenterPadToAspectRatio(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2344,aleju,kontakt@ajung.name,2019-10-17 22:04:34+02:00,956b50c4a16cc37f994d11ccbb0734fd541cc164,https://github.com/aleju/imgaug/commit/956b50c4a16cc37f994d11ccbb0734fd541cc164,Fix CenterPadToExponentsOf missing pad cval and mode,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2345,aleju,kontakt@ajung.name,2019-10-17 22:05:56+02:00,af16844b0c04cec50405f1211d0656c82af36ac5,https://github.com/aleju/imgaug/commit/af16844b0c04cec50405f1211d0656c82af36ac5,Add PR ID to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2346,aleju,kontakt@ajung.name,2019-10-18 10:28:17+02:00,c74d3e1963b8b722bc22d627cd5fa3f0e1af286d,https://github.com/aleju/imgaug/commit/c74d3e1963b8b722bc22d627cd5fa3f0e1af286d,Fix docstring example,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2347,aleju,kontakt@ajung.name,2019-10-18 10:28:54+02:00,60478fda2ed78c49dd50b4dcf452e654e5336e4f,https://github.com/aleju/imgaug/commit/60478fda2ed78c49dd50b4dcf452e654e5336e4f,Add Pad/Crop to square augmenters,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],4,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestCropToSquare(unittest.TestCase):', 'class TestCenterCropToSquare(unittest.TestCase):', 'class TestPadToSquare(unittest.TestCase):', 'class TestCenterPadToSquare(unittest.TestCase):']",[],"['def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, image[1:5, 0:4, :])', 'np.array_equal(observed, image[1:5, 0:4, :])', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2348,aleju,kontakt@ajung.name,2019-10-18 13:06:06+02:00,1228321efffe2fb6a2f9f51c62e26fbb9ca595bc,https://github.com/aleju/imgaug/commit/1228321efffe2fb6a2f9f51c62e26fbb9ca595bc,Move pad/crop functions from imgaug.py to augmenters/size.py,9,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],2,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,239,0,0,0,0,0,0,0,0,0,0,0,0,239,0,0,0,0,0,0,0,0,0,0,0,0,"['class Test_compute_paddings_to_reach_multiples_of(unittest.TestCase):', 'class Test_pad_to_multiples_of(unittest.TestCase):']",[],[],[],[],[],[],[],[],[],[],"['class Test_compute_paddings_to_reach_multiples_of(unittest.TestCase):', 'class Test_pad_to_multiples_of(unittest.TestCase):']",[],[],[],[],[],[],[],[],[],[],"['arr_pad.shape == (3, 3)', 'arr_pad.dtype == np.dtype(dtype)', 'np.array_equal(arr_pad, arr)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', 'np.all(arr_pad[0, :] == 0)', 'arr_pad.shape == (3, 4)', 'arr_pad.dtype == np.dtype(dtype)', 'np.all(arr_pad[:, -1] == 0)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', 'np.all(arr_pad[-1, :] == 0)', 'arr_pad.shape == (3, 4)', 'arr_pad.dtype == np.dtype(dtype)', 'np.all(arr_pad[:, 0] == 0)', 'arr_pad.shape == (3+(1+3), 3+(2+4))', 'arr_pad.dtype == np.dtype(dtype)', 'np.all(arr_pad[0, :] == 0)', 'np.all(arr_pad[:, -2:] == 0)', 'np.all(arr_pad[-3:, :] == 0)', 'np.all(arr_pad[:, :4] == 0)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', 'np.all(arr_pad[0, :] == 10)', 'arr_pad.shape == (4, 3, 3)', 'arr_pad.dtype == np.dtype(dtype)', 'np.all(arr_pad[0, :, 0] == 0)', 'np.all(arr_pad[0, :, 1] == 0)', 'np.all(arr_pad[0, :, 2] == 0)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', 'arr_pad[0, 0] == v1', 'arr_pad[0, 1] == v2', 'arr_pad[0, 2] == v1', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', 'arr_pad[0, 0] == v1', 'arr_pad[0, 1] == v1', 'arr_pad[0, 2] == v1', 'arr_pad[1, 0] == 0', 'arr_pad.shape == (4, 3, nb_channels)', 'arr_pad.dtype == np.dtype(dtype)', 'np.all(arr_pad[0, 0, :] == v1)', 'np.all(arr_pad[0, 1, :] == v1)', 'np.all(arr_pad[0, 2, :] == v1)', 'np.all(arr_pad[1, 0, :] == 0)', 'arr_pad.shape == (5, 1)', 'arr_pad.dtype == np.dtype(dtype)', 'arr_pad[0, 0] == 100', 'arr_pad[1, 0] == 75', 'arr_pad[2, 0] == 50', 'arr_pad[3, 0] == 25', 'arr_pad[4, 0] == 0', 'arr_pad.shape == (5, 1)', 'arr_pad.dtype == np.dtype(dtype)', 'arr_pad[0, 0] == 0', 'arr_pad[1, 0] == 25', 'arr_pad[2, 0] == 50', 'arr_pad[3, 0] == 75', 'arr_pad[4, 0] == 100', 'arr_pad.dtype.name == np.dtype(dtype).name', 'arr_pad.shape == (4, 3)', 'np.all(arr_pad[0, :] == 0)', 'np.all(arr_pad[1:, :] == arr)', 'arr_pad.shape == (4, 3, nb_channels)', 'np.all(arr_pad[0, :, :] == 0)', 'np.all(arr_pad[1:, :, :] == arr)', 'arr_pad.shape == (3, 3)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad, arr)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[0, :], dtype([0, 0, 0]))', 'arr_pad.shape == (3, 4)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[:, -1], dtype([0, 0, 0]))', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[-1, :], dtype([0, 0, 0]))', 'arr_pad.shape == (3, 4)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[:, 0], dtype([0, 0, 0]))', 'arr_pad.shape == (3+(1+3), 3+(2+4))', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(np.max(arr_pad[0, :]), 0)', '_allclose(np.max(arr_pad[:, -2:]), 0)', '_allclose(np.max(arr_pad[-3, :]), 0)', '_allclose(np.max(arr_pad[:, :4]), 0)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[0, :], dtype([0.2, 0.2, 0.2]))', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[0, :], dtype([v1, v1, v1]))', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[0, :], dtype([v1, v1, v1]))', 'arr_pad.shape == (4, 3, 3)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[0, :, 0], dtype([0, 0, 0]))', '_allclose(arr_pad[0, :, 1], dtype([0, 0, 0]))', '_allclose(arr_pad[0, :, 2], dtype([0, 0, 0]))', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[0, 0], 0.5)', '_allclose(arr_pad[0, 1], 0.75)', '_allclose(arr_pad[0, 2], 0.50)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[0, 0], 0.4)', '_allclose(arr_pad[0, 1], 0.4)', '_allclose(arr_pad[0, 2], 0.4)', '_allclose(arr_pad[1, 0], 0.0)', 'arr_pad.shape == (4, 3, nb_channels)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[0, 0, :], 0.4)', '_allclose(arr_pad[0, 1, :], 0.4)', '_allclose(arr_pad[0, 2, :], 0.4)', '_allclose(arr_pad[1, 0, :], 0.0)', 'arr_pad.shape == (5, 1)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[0, 0], 1.0)', '_allclose(arr_pad[1, 0], 0.9)', '_allclose(arr_pad[2, 0], 0.8)', '_allclose(arr_pad[3, 0], 0.7)', '_allclose(arr_pad[4, 0], 0.6)', 'arr_pad.dtype.name == np.dtype(dtype).name', 'arr_pad.shape == (4, 3)', '_allclose(arr_pad[0, :], 0)', '_allclose(arr_pad[1:, :], arr)', 'arr_pad.shape == (4, 3, nb_channels)', '_allclose(arr_pad[0, :, :], 0)', '_allclose(arr_pad[1:, :, :], arr)', 'arr_pad.shape == (3, 3)', 'arr_pad.dtype == np.dtype(dtype)', 'np.all(arr_pad == arr)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', 'np.all(arr_pad[0, :] == 0)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', 'np.all(arr_pad[0, :] == 1)', 'top == 0', 'right == 0', 'bottom == 0', 'left == 0', 'top == 1', 'right == 0', 'bottom == 2', 'left == 0', 'top == 0', 'right == 2', 'bottom == 0', 'left == 1', 'top == 1', 'right == 0', 'bottom == 1', 'left == 0', 'top == 0', 'right == 1', 'bottom == 0', 'left == 1', 'top == 2', 'right == 0', 'bottom == 2', 'left == 0', 'top == 0', 'right == 2', 'bottom == 0', 'left == 2', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 4', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 4', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 4', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 4', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 4', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 8', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 8', 'arr_pad.shape[1] == 4', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 4', 'arr_pad.shape[2] == 3', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 8', 'np.max(arr_pad[:, 0:2]) == 0', 'np.max(arr_pad[:, -2:]) == 0', 'np.max(arr_pad[:, 2:-2]) == 128', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 8', 'np.max(arr_pad[:, 0:2]) == 10', 'np.max(arr_pad[:, -2:]) == 10', 'np.max(arr_pad[:, 2:-2]) == 128', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 8', '0 - 1e-6 <= np.max(arr_pad[:, 0:2]) <= 0 + 1e-6', '0 - 1e-6 <= np.max(arr_pad[:, -2:]) <= 0 + 1e-6', '0.5 - 1e-6 <= np.max(arr_pad[:, 2:-2]) <= 0.5 + 1e-6', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 8', '0.1 - 1e-6 <= np.max(arr_pad[:, 0:2]) <= 0.1 + 1e-6', '0.1 - 1e-6 <= np.max(arr_pad[:, -2:]) <= 0.1 + 1e-6', '0.5 - 1e-6 <= np.max(arr_pad[:, 2:-2]) <= 0.5 + 1e-6', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 8', 'np.max(arr_pad[0:1, 0:2]) == 128', 'np.max(arr_pad[1:3, 0:2]) == 200', 'np.max(arr_pad[3:, 0:2]) == 128', 'np.max(arr_pad[0:1, -2:]) == 128', 'np.max(arr_pad[1:3, -2:]) == 200', 'np.max(arr_pad[3:, -2:]) == 128', 'paddings == (1, 0, 1, 0)', 'paddings == (0, 1, 0, 1)', 'paddings == (0, 0, 0, 0)', 'paddings == (0, 1, 0, 0)', 'paddings == (0, 0, 1, 0)', 'paddings == (0, 1, 0, 0)', 'paddings == (0, 0, 1, 0)', 'paddings == expected', 'paddings == expected', 'arr_padded == ', 'arr_padded == ', 'paddings == (1, 2, 3, 4)', 'arr_padded.shape == (7, 11)', 'np.sum(arr_padded) == 1*base_area + 2*new_area', 'arr_padded.shape == (7, 11, nb_channels)', 'np.sum(arr_padded) == 1*base_area + 2*new_area']",[],[],[],[],[],[],[],[],[],[],[],[],"['arr_pad.shape == (3, 3)', 'arr_pad.dtype == np.dtype(dtype)', 'np.array_equal(arr_pad, arr)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', 'np.all(arr_pad[0, :] == 0)', 'arr_pad.shape == (3, 4)', 'arr_pad.dtype == np.dtype(dtype)', 'np.all(arr_pad[:, -1] == 0)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', 'np.all(arr_pad[-1, :] == 0)', 'arr_pad.shape == (3, 4)', 'arr_pad.dtype == np.dtype(dtype)', 'np.all(arr_pad[:, 0] == 0)', 'arr_pad.shape == (3+(1+3), 3+(2+4))', 'arr_pad.dtype == np.dtype(dtype)', 'np.all(arr_pad[0, :] == 0)', 'np.all(arr_pad[:, -2:] == 0)', 'np.all(arr_pad[-3:, :] == 0)', 'np.all(arr_pad[:, :4] == 0)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', 'np.all(arr_pad[0, :] == 10)', 'arr_pad.shape == (4, 3, 3)', 'arr_pad.dtype == np.dtype(dtype)', 'np.all(arr_pad[0, :, 0] == 0)', 'np.all(arr_pad[0, :, 1] == 0)', 'np.all(arr_pad[0, :, 2] == 0)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', 'arr_pad[0, 0] == v1', 'arr_pad[0, 1] == v2', 'arr_pad[0, 2] == v1', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', 'arr_pad[0, 0] == v1', 'arr_pad[0, 1] == v1', 'arr_pad[0, 2] == v1', 'arr_pad[1, 0] == 0', 'arr_pad.shape == (4, 3, nb_channels)', 'arr_pad.dtype == np.dtype(dtype)', 'np.all(arr_pad[0, 0, :] == v1)', 'np.all(arr_pad[0, 1, :] == v1)', 'np.all(arr_pad[0, 2, :] == v1)', 'np.all(arr_pad[1, 0, :] == 0)', 'arr_pad.shape == (5, 1)', 'arr_pad.dtype == np.dtype(dtype)', 'arr_pad[0, 0] == 100', 'arr_pad[1, 0] == 75', 'arr_pad[2, 0] == 50', 'arr_pad[3, 0] == 25', 'arr_pad[4, 0] == 0', 'arr_pad.shape == (5, 1)', 'arr_pad.dtype == np.dtype(dtype)', 'arr_pad[0, 0] == 0', 'arr_pad[1, 0] == 25', 'arr_pad[2, 0] == 50', 'arr_pad[3, 0] == 75', 'arr_pad[4, 0] == 100', 'arr_pad.dtype.name == np.dtype(dtype).name', 'arr_pad.shape == (4, 3)', 'np.all(arr_pad[0, :] == 0)', 'np.all(arr_pad[1:, :] == arr)', 'arr_pad.shape == (4, 3, nb_channels)', 'np.all(arr_pad[0, :, :] == 0)', 'np.all(arr_pad[1:, :, :] == arr)', 'arr_pad.shape == (3, 3)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad, arr)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[0, :], dtype([0, 0, 0]))', 'arr_pad.shape == (3, 4)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[:, -1], dtype([0, 0, 0]))', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[-1, :], dtype([0, 0, 0]))', 'arr_pad.shape == (3, 4)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[:, 0], dtype([0, 0, 0]))', 'arr_pad.shape == (3+(1+3), 3+(2+4))', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(np.max(arr_pad[0, :]), 0)', '_allclose(np.max(arr_pad[:, -2:]), 0)', '_allclose(np.max(arr_pad[-3, :]), 0)', '_allclose(np.max(arr_pad[:, :4]), 0)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[0, :], dtype([0.2, 0.2, 0.2]))', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[0, :], dtype([v1, v1, v1]))', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[0, :], dtype([v1, v1, v1]))', 'arr_pad.shape == (4, 3, 3)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[0, :, 0], dtype([0, 0, 0]))', '_allclose(arr_pad[0, :, 1], dtype([0, 0, 0]))', '_allclose(arr_pad[0, :, 2], dtype([0, 0, 0]))', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[0, 0], 0.5)', '_allclose(arr_pad[0, 1], 0.75)', '_allclose(arr_pad[0, 2], 0.50)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[0, 0], 0.4)', '_allclose(arr_pad[0, 1], 0.4)', '_allclose(arr_pad[0, 2], 0.4)', '_allclose(arr_pad[1, 0], 0.0)', 'arr_pad.shape == (4, 3, nb_channels)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[0, 0, :], 0.4)', '_allclose(arr_pad[0, 1, :], 0.4)', '_allclose(arr_pad[0, 2, :], 0.4)', '_allclose(arr_pad[1, 0, :], 0.0)', 'arr_pad.shape == (5, 1)', 'arr_pad.dtype == np.dtype(dtype)', '_allclose(arr_pad[0, 0], 1.0)', '_allclose(arr_pad[1, 0], 0.9)', '_allclose(arr_pad[2, 0], 0.8)', '_allclose(arr_pad[3, 0], 0.7)', '_allclose(arr_pad[4, 0], 0.6)', 'arr_pad.dtype.name == np.dtype(dtype).name', 'arr_pad.shape == (4, 3)', '_allclose(arr_pad[0, :], 0)', '_allclose(arr_pad[1:, :], arr)', 'arr_pad.shape == (4, 3, nb_channels)', '_allclose(arr_pad[0, :, :], 0)', '_allclose(arr_pad[1:, :, :], arr)', 'arr_pad.shape == (3, 3)', 'arr_pad.dtype == np.dtype(dtype)', 'np.all(arr_pad == arr)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', 'np.all(arr_pad[0, :] == 0)', 'arr_pad.shape == (4, 3)', 'arr_pad.dtype == np.dtype(dtype)', 'np.all(arr_pad[0, :] == 1)', 'top == 0', 'right == 0', 'bottom == 0', 'left == 0', 'top == 1', 'right == 0', 'bottom == 2', 'left == 0', 'top == 0', 'right == 2', 'bottom == 0', 'left == 1', 'top == 1', 'right == 0', 'bottom == 1', 'left == 0', 'top == 0', 'right == 1', 'bottom == 0', 'left == 1', 'top == 2', 'right == 0', 'bottom == 2', 'left == 0', 'top == 0', 'right == 2', 'bottom == 0', 'left == 2', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 4', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 4', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 4', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 4', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 4', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 8', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 8', 'arr_pad.shape[1] == 4', 'arr_pad.dtype.type == dtype', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 4', 'arr_pad.shape[2] == 3', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 8', 'np.max(arr_pad[:, 0:2]) == 0', 'np.max(arr_pad[:, -2:]) == 0', 'np.max(arr_pad[:, 2:-2]) == 128', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 8', 'np.max(arr_pad[:, 0:2]) == 10', 'np.max(arr_pad[:, -2:]) == 10', 'np.max(arr_pad[:, 2:-2]) == 128', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 8', '0 - 1e-6 <= np.max(arr_pad[:, 0:2]) <= 0 + 1e-6', '0 - 1e-6 <= np.max(arr_pad[:, -2:]) <= 0 + 1e-6', '0.5 - 1e-6 <= np.max(arr_pad[:, 2:-2]) <= 0.5 + 1e-6', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 8', '0.1 - 1e-6 <= np.max(arr_pad[:, 0:2]) <= 0.1 + 1e-6', '0.1 - 1e-6 <= np.max(arr_pad[:, -2:]) <= 0.1 + 1e-6', '0.5 - 1e-6 <= np.max(arr_pad[:, 2:-2]) <= 0.5 + 1e-6', 'arr_pad.shape[0] == 4', 'arr_pad.shape[1] == 8', 'np.max(arr_pad[0:1, 0:2]) == 128', 'np.max(arr_pad[1:3, 0:2]) == 200', 'np.max(arr_pad[3:, 0:2]) == 128', 'np.max(arr_pad[0:1, -2:]) == 128', 'np.max(arr_pad[1:3, -2:]) == 200', 'np.max(arr_pad[3:, -2:]) == 128', 'paddings == (1, 0, 1, 0)', 'paddings == (0, 1, 0, 1)', 'paddings == (0, 0, 0, 0)', 'paddings == (0, 1, 0, 0)', 'paddings == (0, 0, 1, 0)', 'paddings == (0, 1, 0, 0)', 'paddings == (0, 0, 1, 0)', 'paddings == expected', 'paddings == expected', 'arr_padded == ', 'arr_padded == ', 'paddings == (1, 2, 3, 4)', 'arr_padded.shape == (7, 11)', 'np.sum(arr_padded) == 1*base_area + 2*new_area', 'arr_padded.shape == (7, 11, nb_channels)', 'np.sum(arr_padded) == 1*base_area + 2*new_area']",[],[],[],[],[],[],[],[],[],[],[],[]
2349,aleju,kontakt@ajung.name,2019-10-18 13:06:42+02:00,969320bac01108eff7b473501dcb4021df3f3079,https://github.com/aleju/imgaug/commit/969320bac01108eff7b473501dcb4021df3f3079,Remove unnecessary import,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2350,aleju,kontakt@ajung.name,2019-10-18 13:09:47+02:00,198e6345a705e3a1c8832eb70c3b244ea46cac25,https://github.com/aleju/imgaug/commit/198e6345a705e3a1c8832eb70c3b244ea46cac25,Add new augmenters to module docstring,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2351,aleju,kontakt@ajung.name,2019-10-18 13:11:36+02:00,4e97b91cdc83fad6dd040efe751070d4379139d6,https://github.com/aleju/imgaug/commit/4e97b91cdc83fad6dd040efe751070d4379139d6,Fix example in docstring,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2352,aleju,kontakt@ajung.name,2019-10-18 13:16:30+02:00,e102e1a8d13f8fa00545805f7076252e99b07aeb,https://github.com/aleju/imgaug/commit/e102e1a8d13f8fa00545805f7076252e99b07aeb,Fix skimage deprecation warnings in tests,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2353,aleju,kontakt@ajung.name,2019-10-18 16:09:57+02:00,3ac6e271be734941e391cec551b032e33ed3319e,https://github.com/aleju/imgaug/commit/3ac6e271be734941e391cec551b032e33ed3319e,Fix no longer existing test functions being called,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2354,aleju,kontakt@ajung.name,2019-10-19 18:17:45+02:00,211a4b4ea2ce0dceb31ad860fb1ef0ef119a9ba8,https://github.com/aleju/imgaug/commit/211a4b4ea2ce0dceb31ad860fb1ef0ef119a9ba8,Add GrayscaleColorwise,4,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestGrayscaleColorwise(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.isclose(aug.nb_bins.a.value, 5)', 'np.isclose(aug.nb_bins.b.value, 15)', 'np.isclose(aug.smoothness.a.value, 0.1)', 'np.isclose(aug.smoothness.b.value, 0.3)', 'np.isclose(aug.alpha.a[0], 0.0)', 'np.isclose(aug.alpha.a[1], 1.0)', 'np.isclose(aug.offset.a.value, 0.0)', 'np.isclose(aug.offset.b.value, 1.0)', 'aug.from_colorspace == iaa.CSPACE_RGB', 'aug.nb_bins.value == 100', 'np.isclose(aug.smoothness.value, 0.5)', 'np.isclose(aug.alpha.value, 0.7)', 'np.isclose(aug.offset.value, 0.9)', 'aug.from_colorspace == iaa.CSPACE_HSV', 'np.all(np.logical_or(grayscaled == 0, grayscaled == 3))', 'len(set(nb_grayscaled)) >= 5', 'np.array_equal(image_aug, image)', 'np.array_equal(image_aug, image_gray)', 'np.array_equal(image_aug, image_gray)', 'alphas_up.shape == (256,)', 'np.allclose(alphas_up, 0.5)', 'alphas_up.shape == (256,)', 'np.allclose(alphas_up[0:128], 1.0)', 'np.allclose(alphas_up[128:], 0.5)', 'alphas_up.shape == (256,)', 'np.allclose(alphas_up[0:2], 0.25)', 'np.allclose(alphas_up[2:], 0.5)', 'alphas_up.shape == (256,)', 'np.allclose(alphas, 0.5)', 'np.allclose(alphas_rot, alphas)', 'np.allclose(alphas_rot[:-1], alphas[1:])', 'np.allclose(alphas_rot[-1:], alphas[:1])', 'np.allclose(alphas_rot[:-255], alphas[255:])', 'np.allclose(alphas_rot[-255:], alphas[:255])', 'np.allclose(alphas_rot, alphas)', 'np.allclose(alphas_smooth, alphas)', 'np.allclose(alphas_smooth, alphas, atol=0.02)', 'np.isclose(alphas_smooth[0], 0.0, atol=0.01)', 'not np.isclose(alphas_smooth[2], 1.0, atol=0.1)', 'np.isclose(alphas_smooth[5], 1.0, atol=0.01)', 'np.allclose(', 'params[0].value == 100', 'np.isclose(params[1].value, 0.5)', 'np.isclose(params[2].value, 0.7)', 'np.isclose(params[3].value, 0.9)', 'params[4] == iaa.CSPACE_HSV', 'image_aug.shape == image.shape', 'np.allclose(hms_aug.arr_0to1, hms.arr_0to1)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2355,aleju,kontakt@ajung.name,2019-10-19 19:12:58+02:00,c8ddc7d68d2533a0c9234cc6e1a482f0642b8cf8,https://github.com/aleju/imgaug/commit/c8ddc7d68d2533a0c9234cc6e1a482f0642b8cf8,Add RemoveSaturation,4,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestRemoveSaturation(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug.mul, iap.Subtract)', 'np.isclose(aug.mul.other_param.value, 1.0)', 'np.isclose(aug.mul.val.a.value, 0.0)', 'np.isclose(aug.mul.val.b.value, 1.0)', 'aug.from_colorspace == iaa.CSPACE_RGB', 'isinstance(aug.mul, iap.Subtract)', 'np.isclose(aug.mul.other_param.value, 1.0)', 'np.isclose(aug.mul.val.value, 0.7)', 'aug.from_colorspace == iaa.CSPACE_HSV', 'len(set(np.int32(saturations))) > 10', 'np.all(np.float32(saturations) <= (0.8 + 0.02) * image_sat)', 'np.any(np.float32(saturations) <= 0.5 * image_sat)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2356,aleju,kontakt@ajung.name,2019-10-19 20:54:13+02:00,650f1f50878ae729b96e0ca00f548fea2f4054f0,https://github.com/aleju/imgaug/commit/650f1f50878ae729b96e0ca00f548fea2f4054f0,Add RemoveSaturationColorwise,5,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestRemoveSaturationColorwise(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(np.logical_or(grayscaled == 1, grayscaled == 3))', 'len(set(nb_grayscaled)) >= 5', 'np.allclose(image_aug, image, atol=2.5)', 'np.array_equal(image_aug, image_gray)', 'np.array_equal(image_aug, image_gray)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2357,aleju,kontakt@ajung.name,2019-10-19 20:56:22+02:00,15f606b4c6b5cec3a155c4fbc60267d07fb9c017,https://github.com/aleju/imgaug/commit/15f606b4c6b5cec3a155c4fbc60267d07fb9c017,Fix PR ID in changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2358,aleju,kontakt@ajung.name,2019-10-23 22:22:28+02:00,9ec94907f9107ab7c9b7ecc4243adde404889059,https://github.com/aleju/imgaug/commit/9ec94907f9107ab7c9b7ecc4243adde404889059,Add MeanShiftBlur,4,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class Test_blur_mean_shift_(unittest.TestCase):', 'class TestMeanShiftBlur(unittest.TestCase):']",[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_blurred.shape == image.shape', 'image_blurred.dtype.name == ', 'not np.array_equal(image_blurred, image)', '0 <= np.average(image[:, 0:4, :]) <= 5', '199 <= np.average(image[:, 4:, :]) <= 203', 'image_blurred.shape == image.shape', 'image_blurred.dtype.name == ', 'not np.array_equal(image_blurred, image)', 'image_blurred.ndim == 3', 'image_blurred.shape == image.shape', 'image_blurred.dtype.name == ', 'not np.array_equal(image_blurred, image)', 'image.flags[] is False', 'image_blurred.shape == image_cp.shape', 'image_blurred.dtype.name == ', 'not np.array_equal(image_blurred, image_cp)', 'image_blurred.shape == image.shape', 'image_blurred.dtype.name == ', 'not np.array_equal(image_blurred, image)', 'image_aug.shape == image.shape', 'np.isclose(aug.spatial_window_radius.a.value, 5.0)', 'np.isclose(aug.spatial_window_radius.b.value, 40.0)', 'np.isclose(aug.color_window_radius.a.value, 5.0)', 'np.isclose(aug.color_window_radius.b.value, 40.0)', 'np.allclose(aug.spatial_window_radius.a, [1.0, 2.0, 3.0])', 'aug.color_window_radius.value == 5', 'np.all(', 'np.all((1.0 <= samples[1]) | (samples[1] <= 2.0))', 'mock_ms.call_count == 1', 'np.isclose(kwargs[], 1.0)', 'np.isclose(kwargs[], 2.0)', 'kps_aug.keypoints[0].x == 0', 'kps_aug.keypoints[0].y == 1', 'params[0] is aug.spatial_window_radius', 'params[1] is aug.color_window_radius']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2359,aleju,kontakt@ajung.name,2019-10-14 16:40:43+02:00,16e4b1d4f4fb65df84f6b81bc22c03fb4e261c5f,https://github.com/aleju/imgaug/commit/16e4b1d4f4fb65df84f6b81bc22c03fb4e261c5f,Add handle_categorical_string_param(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2360,aleju,kontakt@ajung.name,2019-10-14 16:41:09+02:00,bc4a99f7d342f245b1143d802f71df6939cd4717,https://github.com/aleju/imgaug/commit/bc4a99f7d342f245b1143d802f71df6939cd4717,Add comments,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2361,aleju,kontakt@ajung.name,2019-10-14 16:41:42+02:00,3a6efdda3ff31281b02ca62683bc51727ea8751c,https://github.com/aleju/imgaug/commit/3a6efdda3ff31281b02ca62683bc51727ea8751c,Enable any iterable in change_colorspaces_(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2362,aleju,kontakt@ajung.name,2019-10-14 16:42:30+02:00,12f319a7ff8890d8d38824dbdeb61c3e4a2ab783,https://github.com/aleju/imgaug/commit/12f319a7ff8890d8d38824dbdeb61c3e4a2ab783,Fix docstrings for children parameters,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2363,aleju,kontakt@ajung.name,2019-10-14 16:44:54+02:00,f0912af0dc8000df5b7addecb59830b7e40ac833,https://github.com/aleju/imgaug/commit/f0912af0dc8000df5b7addecb59830b7e40ac833,Add WithBrightnessChannels augmenter,2,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestWithBrightnessChannels(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug.children, iaa.Augmenter)', 'len(aug.to_colorspace.a) == len(self.valid_colorspaces)', 'cspace in aug.to_colorspace.a', 'aug.from_colorspace == iaa.CSPACE_RGB', 'isinstance(aug.children, iaa.Augmenter)', 'len(aug.to_colorspace.a) == len(self.valid_colorspaces)', 'cspace in aug.to_colorspace.a', 'aug.from_colorspace == iaa.CSPACE_RGB', 'isinstance(aug.children, iaa.Augmenter)', 'aug.to_colorspace.value == iaa.CSPACE_YUV', 'aug.from_colorspace == iaa.CSPACE_RGB', 'isinstance(aug.children, iaa.Augmenter)', 'aug.to_colorspace.value == iaa.CSPACE_YUV', 'aug.from_colorspace == iaa.CSPACE_RGB', 'cspace == iaa.CSPACE_CIE', 'np.all(diff <= max_diff_expected[cspace])', 'np.array_equal(child.last_batch.images[0], expected)', 'np.all(result != -1)', 'np.any(cspaces1 != cspaces2)', 'len(np.unique(cspaces1)) > 1', 'len(np.unique(cspaces2)) > 1', 'np.array_equal(observed[0], expected_hsv)', 'not np.array_equal(image_aug, image)', 'np.array_equal(image_aug, image)', 'np.isclose(kpsoi_aug.keypoints[0].x, 1.0)', 'np.isclose(kpsoi_aug.keypoints[0].y, 2.0)', 'params[0].value == iaa.CSPACE_HSV', 'params[1] == iaa.CSPACE_RGB']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2364,aleju,kontakt@ajung.name,2019-10-14 16:45:35+02:00,97210bb14facb542d03bf3520d0e56702cf696d2,https://github.com/aleju/imgaug/commit/97210bb14facb542d03bf3520d0e56702cf696d2,Add todos,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2365,aleju,kontakt@ajung.name,2019-10-14 16:46:15+02:00,3bcab3c0db94496eaba6f3cd594cd1285147a081,https://github.com/aleju/imgaug/commit/3bcab3c0db94496eaba6f3cd594cd1285147a081,Synchronize changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2366,aleju,kontakt@ajung.name,2019-10-14 17:59:00+02:00,36ea38d56df0acc548e337be83e5622a8cbb0450,https://github.com/aleju/imgaug/commit/36ea38d56df0acc548e337be83e5622a8cbb0450,Improve style of __str__ in WithBrightnessChannels,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['aug_str == expected'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2367,aleju,kontakt@ajung.name,2019-10-14 18:15:02+02:00,dc7d993a999a591a2737ac9c808795732d0cee35,https://github.com/aleju/imgaug/commit/dc7d993a999a591a2737ac9c808795732d0cee35,Remove XYZ colorspace from WithBrightnessChannels,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['cspace == iaa.CSPACE_YUV'],[],[],[],[],[],[],[],[],[],[],[],[],['cspace == iaa.CSPACE_CIE'],[],[],[],[],[],[],[],[],[],[],[],[]
2368,aleju,kontakt@ajung.name,2019-10-14 18:19:44+02:00,6f04b3fc8a1ecb21bd15bf4dc7dc8a063f1459f5,https://github.com/aleju/imgaug/commit/6f04b3fc8a1ecb21bd15bf4dc7dc8a063f1459f5,Add MultiplyAndAddToBrightness,4,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestMultiplyAndAddToBrightness(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['aug.children.random_order is True', 'isinstance(aug.children[0], iaa.Multiply)', 'isinstance(aug.children[1], iaa.Add)', 'iaa.CSPACE_HSV in aug.to_colorspace.a', 'aug.from_colorspace == iaa.CSPACE_RGB', 'aug.children.random_order is True', 'isinstance(aug.children[0], iaa.Multiply)', 'isinstance(aug.children[1], iaa.Noop)', 'iaa.CSPACE_HSV in aug.to_colorspace.a', 'aug.from_colorspace == iaa.CSPACE_RGB', 'aug.children.random_order is True', 'isinstance(aug.children[0], iaa.Noop)', 'isinstance(aug.children[1], iaa.Add)', 'iaa.CSPACE_HSV in aug.to_colorspace.a', 'aug.from_colorspace == iaa.CSPACE_RGB', 'np.array_equal(image_aug, expected)', 'np.array_equal(image_aug, expected)', 'np.array_equal(image_aug, expected)', 'aug_str == expected']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2369,aleju,kontakt@ajung.name,2019-10-14 18:46:35+02:00,71d40afe9a003b7a8ff1ec20d4441053844b7688,https://github.com/aleju/imgaug/commit/71d40afe9a003b7a8ff1ec20d4441053844b7688,Add MultiplyBrightness,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestMultiplyBrightness(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug.children, iaa.Augmenter)', 'isinstance(aug.children[0], iaa.Multiply)', 'len(aug.to_colorspace.a) == len(self.valid_colorspaces)', 'cspace in aug.to_colorspace.a', 'aug.from_colorspace == iaa.CSPACE_RGB', 'np.average(image_aug) > np.average(image)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2370,aleju,kontakt@ajung.name,2019-10-14 18:49:10+02:00,9b8af769e658397c5f4a2141640ef68b19f2ce67,https://github.com/aleju/imgaug/commit/9b8af769e658397c5f4a2141640ef68b19f2ce67,Add AddToBrightness,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestAddToBrightness(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug.children, iaa.Augmenter)', 'isinstance(aug.children[1], iaa.Add)', 'len(aug.to_colorspace.a) == len(self.valid_colorspaces)', 'cspace in aug.to_colorspace.a', 'aug.from_colorspace == iaa.CSPACE_RGB', 'np.average(image_aug) > np.average(image)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2371,aleju,kontakt@ajung.name,2019-10-14 18:52:01+02:00,dfa9041429d3d17fbb8511f1972383a1ee6681b1,https://github.com/aleju/imgaug/commit/dfa9041429d3d17fbb8511f1972383a1ee6681b1,Add PR ID to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2372,aleju,kontakt@ajung.name,2019-10-14 18:52:17+02:00,719eb2fb6bd004b2cef0633171dfb634f2378b9a,https://github.com/aleju/imgaug/commit/719eb2fb6bd004b2cef0633171dfb634f2378b9a,Add dtype support to brightness aug docstrings,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2373,aleju,kontakt@ajung.name,2019-10-14 20:47:46+02:00,401739769b01932d5ffbcc2bd32592965cbc8d93,https://github.com/aleju/imgaug/commit/401739769b01932d5ffbcc2bd32592965cbc8d93,Add test for determinism in WithBrightnessChannels,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['not np.array_equal(images_aug1, images)', 'np.array_equal(images_aug1, images_aug2)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2374,aleju,kontakt@ajung.name,2019-10-14 20:48:53+02:00,7e92db528e93fd3b9dd7e3ace7c7a3fadb4a48da,https://github.com/aleju/imgaug/commit/7e92db528e93fd3b9dd7e3ace7c7a3fadb4a48da,Improve code style,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2375,aleju,kontakt@ajung.name,2019-10-14 21:07:44+02:00,6ff581b00d5b5929e3acb75b5809a6954114d449,https://github.com/aleju/imgaug/commit/6ff581b00d5b5929e3acb75b5809a6954114d449,Add assert to handle_categorical_string_param(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2376,aleju,kontakt@ajung.name,2019-10-14 21:07:57+02:00,9c2ccad7138b156e3c1366b0921e8f76eef14a80,https://github.com/aleju/imgaug/commit/9c2ccad7138b156e3c1366b0921e8f76eef14a80,Add tests for handle_categorical_string_param(),1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class Test_handle_categorical_string_param(unittest.TestCase):'],"[('Raises', '(AssertionError) as ctx:'), ('Raises', '(AssertionError) as ctx:'), ('Raises', '(AssertionError) as ctx:'), ('Raises', '(Exception) as ctx:')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(param, iap.Choice)', 'param.a == valid_values', 'isinstance(param, iap.Deterministic)', 'param.value == ', 'expected == str(ctx.exception)', 'isinstance(param, iap.Choice)', 'param.a == []', 'expected in str(ctx.exception)', 'expected in str(ctx.exception)', 'param_out is param', 'expected in str(ctx.exception)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2377,aleju,kontakt@ajung.name,2019-10-16 11:53:21+02:00,065aff607e58fc4c26908d629ae645cfd4966320,https://github.com/aleju/imgaug/commit/065aff607e58fc4c26908d629ae645cfd4966320,Fix pylint issues,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2378,aleju,kontakt@ajung.name,2019-10-23 19:40:09+02:00,bb7ef032a171a99acea819e2386a5d4b777a949a,https://github.com/aleju/imgaug/commit/bb7ef032a171a99acea819e2386a5d4b777a949a,Add new augmenter's names to module docstring,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2379,aleju,kontakt@ajung.name,2019-10-24 22:04:30+02:00,f86fa10987222b4e1e060fd7557ab359e011a0ba,https://github.com/aleju/imgaug/commit/f86fa10987222b4e1e060fd7557ab359e011a0ba,Add TotalDropout,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,['class TestTotalDropout(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug.p, iap.Binomial)', 'np.isclose(aug.p.p.value, 1.0)', 'np.allclose(heatmaps_aug.arr_0to1, heatmaps.arr_0to1)', 'image_aug.shape == image.shape', 'image_aug.dtype.name == image.dtype.name', 'np.sum(image_aug) == 0', 'image_aug.shape == image_.shape', 'image_aug.dtype.name == image_.dtype.name', 'np.sum(image_aug) == 0', 'images_aug.shape == images.shape', 'images_aug.dtype.name == images.dtype.name', 'np.sum(images_aug) == 0', 'image_aug.shape == image.shape', 'image_aug.dtype.name == image.dtype.name', 'np.array_equal(image_aug, image)', 'image_aug.shape == image_.shape', 'image_aug.dtype.name == image_.dtype.name', 'np.array_equal(image_aug, image_)', 'image_aug.shape == image_.shape', 'image_aug.dtype.name == image_.dtype.name', 'np.array_equal(image_aug, image_)', 'image_aug.shape == images[0].shape', 'image_aug.dtype.name == images[0].dtype.name', 'np.isclose(nb_dropped, len(images)*0.75, atol=75)', 'images_aug.shape == images.shape', 'images_aug.dtype.name == images.dtype.name', 'np.isclose(nb_dropped, len(images)*0.75, atol=75)', 'params[0] is aug.p', 'np.all(images_aug == 0)', 'images_aug.dtype.name == ', 'images_aug.shape == shape', 'images_aug.dtype.name == ', 'images_aug.shape == images.shape', 'image_aug.shape == image.shape', 'image_aug.dtype.name == ', 'np.sum(image_aug == 1) == 0', 'images_aug.shape == images.shape', 'images_aug.dtype.name == dt', 'np.sum(images_aug == 0) == 5*3', 'np.sum(images_aug == value) == 5*3', 'images_aug.shape == images.shape', 'images_aug.dtype.name == dt', 'np.sum(_isclose(images_aug, 0.0)) == 5*3', '(']",[],[],[],[],[],[],[],[],[],[],[],[],['np.all(image_aug == 1)'],[],[],[],[],[],[],[],[],[],[],[],[]
2380,aleju,kontakt@ajung.name,2019-10-25 17:14:04+02:00,54c8f5b138be5cfeb7e5c444675c6904d19d4fa9,https://github.com/aleju/imgaug/commit/54c8f5b138be5cfeb7e5c444675c6904d19d4fa9,Enable TotalDropout/Dropout2d to drop non-image data,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(heatmaps_aug.arr_0to1, 0.0)', 'np.allclose(segmaps_aug.arr, 0.0)', 'cbaoi_aug.shape == (2, 2, 3)', 'cbaoi_aug.items == []', 'np.allclose(heatmaps_aug.arr_0to1, hm.arr_0to1)', 'np.allclose(segmaps_aug.arr, segmaps.arr)', 'cbaoi_aug.shape == (2, 2, 3)', 'np.allclose(', 'np.allclose(heatmaps_aug.arr_0to1, hm.arr_0to1)', 'np.allclose(segmaps_aug.arr, segmaps.arr)', 'cbaoi_aug.shape == (2, 2, 3)', 'np.allclose(', 'np.allclose(heatmaps_aug.arr_0to1, 0.0)', 'np.allclose(segmaps_aug.arr, 0.0)', 'cbaoi_aug.shape == (2, 2, 3)', 'cbaoi_aug.items == []', 'np.allclose(heatmaps_aug.arr_0to1, hm.arr_0to1)', 'np.allclose(segmaps_aug.arr, segmaps.arr)', 'cbaoi_aug.shape == (2, 2, 3)', 'np.allclose(']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(heatmaps_aug.arr_0to1, heatmaps.arr_0to1)']",[],[],[],[],[],[],[],[],[],[],[],[]
2381,aleju,kontakt@ajung.name,2019-10-26 11:46:47+02:00,ca9b6e60db0dce9e051058285f7b2b57d31cae0e,https://github.com/aleju/imgaug/commit/ca9b6e60db0dce9e051058285f7b2b57d31cae0e,"Renamed quantize_colors_uniform(image, n_colors) to quantize_uniform(arr, nb_bins)",4,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class Test_quantize_uniform(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(caught_warnings) == 1', '(', 'result == ']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2382,aleju,kontakt@ajung.name,2019-10-26 13:30:43+02:00,ae76ddac58843b8c97612c3166206e39edc8df79,https://github.com/aleju/imgaug/commit/ae76ddac58843b8c97612c3166206e39edc8df79,"Rename quantize_colors_kmeans(image, n_colors) to quantize_kmeans(arr, nb_clusters)",4,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class Test_quantize_kmeans(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(caught_warnings) == 1', '(', 'result == ']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2383,aleju,kontakt@ajung.name,2019-10-26 13:35:07+02:00,9ba3853defce4b01764cf07a66159f7cf94e2c3f,https://github.com/aleju/imgaug/commit/9ba3853defce4b01764cf07a66159f7cf94e2c3f,Remove unnecessary clip,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2384,aleju,kontakt@ajung.name,2019-10-26 13:37:46+02:00,d65836ab8b30fc688999202aab362f4bd0aa6842,https://github.com/aleju/imgaug/commit/d65836ab8b30fc688999202aab362f4bd0aa6842,Use CSPACE_* instead of ChangeColorspace.* in tests,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['aug.from_colorspace == iaa.CSPACE_RGB', 'aug.to_colorspace == [iaa.CSPACE_RGB,', 'aug.from_colorspace == iaa.CSPACE_BGR', 'aug.to_colorspace == [iaa.CSPACE_HSV,', 'params[1] == iaa.CSPACE_BGR', 'params[2] == [iaa.CSPACE_HSV,', 'aug.from_colorspace == iaa.CSPACE_RGB', 'aug.from_colorspace == iaa.CSPACE_BGR', 'aug.to_colorspace == [iaa.CSPACE_HSV,']",[],[],[],[],[],[],[],[],[],[],[],[],"['aug.from_colorspace == iaa.ChangeColorspace.RGB', 'aug.to_colorspace == [iaa.ChangeColorspace.RGB,', 'aug.from_colorspace == iaa.ChangeColorspace.BGR', 'aug.to_colorspace == [iaa.ChangeColorspace.HSV,', 'params[1] == iaa.ChangeColorspace.BGR', 'params[2] == [iaa.ChangeColorspace.HSV,', 'aug.from_colorspace == iaa.ChangeColorspace.RGB', 'aug.from_colorspace == iaa.ChangeColorspace.BGR', 'aug.to_colorspace == [iaa.ChangeColorspace.HSV,']",[],[],[],[],[],[],[],[],[],[],[],[]
2385,aleju,kontakt@ajung.name,2019-10-26 13:41:13+02:00,6f91d6406ba1eb55f544bc366c52517ecc59c47c,https://github.com/aleju/imgaug/commit/6f91d6406ba1eb55f544bc366c52517ecc59c47c,Add RNG warning to quantize_kmeans() docstring,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2386,aleju,kontakt@ajung.name,2019-10-26 15:24:35+02:00,222abad864f13869f244196c4640e6dd880b6732,https://github.com/aleju/imgaug/commit/222abad864f13869f244196c4640e6dd880b6732,Improve performance of quantize_uniform(),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_v.flags[] is False', 'observed.shape == (2, 4)', 'observed.dtype.name == ', 'np.array_equal(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2387,aleju,kontakt@ajung.name,2019-10-26 16:52:06+02:00,d0f4c1914a38953a43ccbc4029ec534d3f8212af,https://github.com/aleju/imgaug/commit/d0f4c1914a38953a43ccbc4029ec534d3f8212af,Add argument to_bin_centers to quantize_uniform(),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2388,aleju,kontakt@ajung.name,2019-10-26 17:12:39+02:00,45df58c28ddee8e6c269e222c5d20f3e5505ec0c,https://github.com/aleju/imgaug/commit/45df58c28ddee8e6c269e222c5d20f3e5505ec0c,Add quantize_uniform_to_n_bits(),4,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class Test_quantize_uniform_to_n_bits(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(image_iaa, image_pil)', 'result == ']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2389,aleju,kontakt@ajung.name,2019-10-26 17:21:02+02:00,235bf87c40d7c27fd9659962018b92ca68a92c92,https://github.com/aleju/imgaug/commit/235bf87c40d7c27fd9659962018b92ca68a92c92,Add posterize(),3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class Test_posterize(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['result == '],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2390,aleju,kontakt@ajung.name,2019-10-26 18:25:01+02:00,a83119f1a6368ea97cf0d7ae4aa66d0123f77c8b,https://github.com/aleju/imgaug/commit/a83119f1a6368ea97cf0d7ae4aa66d0123f77c8b,Add fixme,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2391,aleju,kontakt@ajung.name,2019-10-26 18:25:25+02:00,90f40a21f932993152fff10c2627a895d1ce5847,https://github.com/aleju/imgaug/commit/90f40a21f932993152fff10c2627a895d1ce5847,Fix test case class name,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2392,aleju,kontakt@ajung.name,2019-10-26 18:25:45+02:00,25606624f07b429fe1132cf5f953bbefcab58cf3,https://github.com/aleju/imgaug/commit/25606624f07b429fe1132cf5f953bbefcab58cf3,Add UniformColorQuantizationToNBits,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestUniformColorQuantizationToNBits(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug.counts, iap.DiscreteUniform)', 'aug.counts.a.value == 1', 'aug.counts.b.value == 8', 'aug.from_colorspace == iaa.CSPACE_RGB', 'aug.to_colorspace is None', 'aug.max_size is None', 'aug.interpolation == ', 'isinstance(aug.counts, iap.DiscreteUniform)', 'aug.counts.a.value == 5', 'aug.counts.b.value == 8', 'aug.from_colorspace == iaa.CSPACE_BGR', 'isinstance(aug.to_colorspace, list)', 'aug.to_colorspace == [iaa.CSPACE_HSV,', 'aug.max_size == 128', 'aug.interpolation == ', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2393,aleju,kontakt@ajung.name,2019-10-26 18:28:48+02:00,6ff16736c321587e94be1ed4a7f8658318ee6867,https://github.com/aleju/imgaug/commit/6ff16736c321587e94be1ed4a7f8658318ee6867,Add Posterize,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2394,aleju,kontakt@ajung.name,2019-10-26 19:55:44+02:00,d399b70afee7e4afe3c2178bf128d93d01916eb5,https://github.com/aleju/imgaug/commit/d399b70afee7e4afe3c2178bf128d93d01916eb5,Improve docstring,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2395,aleju,kontakt@ajung.name,2019-10-26 20:16:20+02:00,e479604fa0b066068c5ab3dd08f9f37b49c7135f,https://github.com/aleju/imgaug/commit/e479604fa0b066068c5ab3dd08f9f37b49c7135f,Add quantize_uniform_(),4,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class Test_quantize_uniform_(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['mock_qu.call_args_list[0][0][0] is not image', 'np.array_equal(mock_qu.call_args_list[0][0][0], image)', 'mock_qu.call_args_list[0][1][] == 3', 'result == ']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2396,aleju,kontakt@ajung.name,2019-10-26 20:19:42+02:00,2639191a16b41145ff49acb506335773e2c675e9,https://github.com/aleju/imgaug/commit/2639191a16b41145ff49acb506335773e2c675e9,Fix quantize_uniform() for non-contiguous arrays,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2397,aleju,kontakt@ajung.name,2019-10-26 20:24:07+02:00,5939cbee670ce0bc2628ed20c128abca2dc012cb,https://github.com/aleju/imgaug/commit/5939cbee670ce0bc2628ed20c128abca2dc012cb,Switch UniformColorQuantization to in-place func call,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2398,aleju,kontakt@ajung.name,2019-10-26 20:35:53+02:00,2ff148ef81ffad47e6873865c8f71908e90dd97f,https://github.com/aleju/imgaug/commit/2ff148ef81ffad47e6873865c8f71908e90dd97f,Add quantize_uniform_to_n_bits_(),3,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class Test_quantize_uniform_to_n_bits(unittest.TestCase):', 'class Test_quantize_uniform_to_n_bits_(unittest.TestCase):']",[],[],[],[],[],[],[],[],[],[],['class Test_quantize_uniform_to_n_bits(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],"['mock_qu.call_args_list[0][0][0] is not image', 'np.array_equal(mock_qu.call_args_list[0][0][0], image)', 'mock_qu.call_args_list[0][1][] == 3', 'result == ', 'mock_qu.call_args_list[0][0][0] is not image', 'np.array_equal(mock_qu.call_args_list[0][0][0], image)', 'mock_qu.call_args_list[0][1][] == 2**nb_bits', 'mock_qu.call_args_list[0][1][] is False']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2399,aleju,kontakt@ajung.name,2019-10-26 20:36:40+02:00,69e659344cf35f0d24f3dd3aa2b164b444dde780,https://github.com/aleju/imgaug/commit/69e659344cf35f0d24f3dd3aa2b164b444dde780,Switch UniformColorQuantizationToNBits to in-place func call,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2400,aleju,kontakt@ajung.name,2019-10-26 20:40:25+02:00,4e1375124b893ad22327bbf1c82a855056faa36a,https://github.com/aleju/imgaug/commit/4e1375124b893ad22327bbf1c82a855056faa36a,Add PR ID to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2401,aleju,kontakt@ajung.name,2019-10-27 09:00:55+01:00,515f01017f8dd0e0c660a846514255f814651826,https://github.com/aleju/imgaug/commit/515f01017f8dd0e0c660a846514255f814651826,Remove debug image outputs from tests,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2402,aleju,kontakt@ajung.name,2019-10-27 09:47:57+01:00,9c7cd2d30fac6d56026eb159b09e8a27bdb9e55f,https://github.com/aleju/imgaug/commit/9c7cd2d30fac6d56026eb159b09e8a27bdb9e55f,Improve performance of invert() and Invert for uint8,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed.dtype.name == ', 'np.array_equal(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2403,aleju,kontakt@ajung.name,2019-10-27 10:20:39+01:00,f26b7d9564c95bd11a73b973b70540db5804d393,https://github.com/aleju/imgaug/commit/f26b7d9564c95bd11a73b973b70540db5804d393,Add invert_(),3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,['class Test_invert_(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed.dtype.name == ', 'np.array_equal(observed, expected)', 'observed.dtype.name == ', 'np.array_equal(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],"['observed.dtype.name == ', 'np.array_equal(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[]
2404,aleju,kontakt@ajung.name,2019-10-27 10:27:21+01:00,cbac223374caf76575795cb791f83bc763b79e74,https://github.com/aleju/imgaug/commit/cbac223374caf76575795cb791f83bc763b79e74,Fix docstring,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2405,aleju,kontakt@ajung.name,2019-10-27 13:56:33+01:00,1595012215003837d1e68cec50f7327ad95ff9ef,https://github.com/aleju/imgaug/commit/1595012215003837d1e68cec50f7327ad95ff9ef,Add thresholding to invert(),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'np.allclose(observed, expected, rtol=0, atol=1e-4)', 'np.allclose(observed, expected, rtol=0, atol=1e-4)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2406,aleju,kontakt@ajung.name,2019-10-27 14:05:46+01:00,f18a3f59705ad65d7dfdc2bda1858d3cc673f688,https://github.com/aleju/imgaug/commit/f18a3f59705ad65d7dfdc2bda1858d3cc673f688,Add tests for invert(),1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class Test_invert(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed == ', 'np.array_equal(mock_invert.call_args_list[0][0][0], arr)', 'args[1][] is None', 'args[1][] is None', 'args[1][] is None', 'args[1][] is True', 'observed == ', 'np.array_equal(mock_invert.call_args_list[0][0][0], arr)', 'args[1][] == 1', 'args[1][] == 10', 'args[1][] == 5', 'args[1][] is False', 'np.array_equal(observed, expected)', 'observed is not values']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2407,aleju,kontakt@ajung.name,2019-10-27 14:46:43+01:00,e117fed84bde42cee6c76ce3e9510903b4e71ee3,https://github.com/aleju/imgaug/commit/e117fed84bde42cee6c76ce3e9510903b4e71ee3,Add thresholding to Invert,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed.dtype.name == ', 'np.array_equal(observed, expected)', 'observed.dtype.name == ', 'np.array_equal(observed, expected)', 'params[0] is aug.p', 'params[1] is aug.per_channel', 'params[4] is aug.threshold', 'params[5] is aug.invert_above_threshold']",[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', '0.5 - 1e-4 < params[0].p.value < 0.5 + 1e-4', 'params[1].value == 0']",[],[],[],[],[],[],[],[],[],[],[],[]
2408,aleju,kontakt@ajung.name,2019-10-27 15:00:53+01:00,e14eb9a9efe8a524eb139ffbdf81909308a74ee4,https://github.com/aleju/imgaug/commit/e14eb9a9efe8a524eb139ffbdf81909308a74ee4,Add solarize() and solarize_(),3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class Test_solarize(unittest.TestCase):', 'class Test_solarize_(unittest.TestCase):']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['args[0] is not arr', 'np.array_equal(args[0], arr)', 'kwargs[] == 128', 'observed == ', 'args[0] is not arr', 'np.array_equal(args[0], arr)', 'kwargs[] == 5', 'observed == ', 'observed.dtype.name == ', 'np.array_equal(observed, expected)', 'args[0] is arr', 'kwargs[] == 128', 'observed == ', 'args[0] is arr', 'kwargs[] == 5', 'observed == ']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2409,aleju,kontakt@ajung.name,2019-10-27 15:19:15+01:00,1671694771809cb62b77e52371fbbc66a728a6fc,https://github.com/aleju/imgaug/commit/1671694771809cb62b77e52371fbbc66a728a6fc,Add Solarize,4,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestSolarize(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed.dtype.name == ', 'np.array_equal(observed, expected)', 'observed.dtype.name == ', 'np.array_equal(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2410,aleju,kontakt@ajung.name,2019-10-27 15:21:58+01:00,51072e8b4fb331ff10b5d002b91dfc330ba9eeff,https://github.com/aleju/imgaug/commit/51072e8b4fb331ff10b5d002b91dfc330ba9eeff,Add test to compare solarize() with PIL,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(image_pil, image_iaa)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2411,aleju,kontakt@ajung.name,2019-10-27 15:25:39+01:00,c755934a9bc9f15f1e7dcf6d337c3dd3acf4e824,https://github.com/aleju/imgaug/commit/c755934a9bc9f15f1e7dcf6d337c3dd3acf4e824,Add performance comparison with PIL,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2412,aleju,kontakt@ajung.name,2019-10-27 16:06:55+01:00,d965fe2884333e5cd922db4050c2ec8e53322f25,https://github.com/aleju/imgaug/commit/d965fe2884333e5cd922db4050c2ec8e53322f25,Fix example and tests,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(multiply.mul, iap.Subtract)', 'np.isclose(multiply.mul.other_param.value, 1.0)', 'np.isclose(multiply.mul.val.a.value, 0.0)', 'np.isclose(multiply.mul.val.b.value, 1.0)', 'isinstance(multiply.mul, iap.Subtract)', 'np.isclose(multiply.mul.other_param.value, 1.0)', 'np.isclose(multiply.mul.val.value, 0.7)']",[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug.mul, iap.Subtract)', 'np.isclose(aug.mul.other_param.value, 1.0)', 'np.isclose(aug.mul.val.a.value, 0.0)', 'np.isclose(aug.mul.val.b.value, 1.0)', 'isinstance(aug.mul, iap.Subtract)', 'np.isclose(aug.mul.other_param.value, 1.0)', 'np.isclose(aug.mul.val.value, 0.7)']",[],[],[],[],[],[],[],[],[],[],[],[]
2413,aleju,kontakt@ajung.name,2019-10-27 16:23:34+01:00,1088bab52bdc276372da301b36c11dc84f8f68bd,https://github.com/aleju/imgaug/commit/1088bab52bdc276372da301b36c11dc84f8f68bd,Fix tests failing in py2.7,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['mock_warn.call_count == 1', 'mock_warn.call_count == 1', 'mock_warn.call_count == 1', 'mock_warn.call_count == 1']",[],[],[],[],[],[],[],[],[],[],[],[],"['len(caught_warnings) == 1', '(', 'len(caught_warnings) == 1', '(']",[],[],[],[],[],[],[],[],[],[],[],[]
2414,aleju,kontakt@ajung.name,2019-10-27 16:25:45+01:00,d91913ba25bfae3f0137d100125c533c055f4607,https://github.com/aleju/imgaug/commit/d91913ba25bfae3f0137d100125c533c055f4607,Add PR to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2415,aleju,kontakt@ajung.name,2019-10-28 19:57:59+01:00,7e7e34980e18b21459c250ae734ba4b43a739c26,https://github.com/aleju/imgaug/commit/7e7e34980e18b21459c250ae734ba4b43a739c26,Rename 'exponents of' to 'powers of',3,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],4,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestCropToPowersOf(unittest.TestCase):', 'class TestCenterCropToPowersOf(unittest.TestCase):', 'class TestPadToPowersOf(unittest.TestCase):', 'class TestCenterPadToPowersOf(unittest.TestCase):']",[],[],[],[],[],[],[],[],[],[],"['class TestCropToExponentsOf(unittest.TestCase):', 'class TestCenterCropToExponentsOf(unittest.TestCase):', 'class TestPadToExponentsOf(unittest.TestCase):', 'class TestCenterPadToExponentsOf(unittest.TestCase):']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2416,aleju,kontakt@ajung.name,2019-10-28 20:00:58+01:00,90171e99fb1198bf3050faa0c183f8ff07e7ce63,https://github.com/aleju/imgaug/commit/90171e99fb1198bf3050faa0c183f8ff07e7ce63,Fix wrong parameter name,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2417,Oliver Coleman,olivercoleman@airsight.com.au,2019-10-30 11:41:16+11:00,cbe4688621b89f0b8a732a9cb0dbee377511148c,https://github.com/aleju/imgaug/commit/cbe4688621b89f0b8a732a9cb0dbee377511148c,Fix SnowflakesLayer intermittent crash on gate noise size of 0.,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2418,aleju,kontakt@ajung.name,2019-11-01 17:04:02+01:00,0fd5b62fc5dc700a78037c31d67fe06367d3061c,https://github.com/aleju/imgaug/commit/0fd5b62fc5dc700a78037c31d67fe06367d3061c,Fix center crop/pad not using position=center,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, expected)', 'np.array_equal(observed, image[5-1:5+2, 5-1:5+2, :])', 'np.array_equal(observed, image[1:-1, 2:-2, :])', 'np.array_equal(observed, expected)', 'np.array_equal(observed, image[1:-2, 2:-2, :])', 'np.array_equal(observed, expected)', 'np.array_equal(observed, image[1:3, 0:4, :])', 'np.array_equal(observed, expected)', 'np.array_equal(observed, image[1:5, 0:4, :])', 'np.array_equal(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, expected)', 'np.array_equal(observed, image[5-1:5+2, 5-1:5+2, :])', 'np.array_equal(observed, image[0:4, 0:6, :])', 'np.array_equal(observed, expected)', 'np.array_equal(observed, image[0:4, 1:10, :])', 'np.array_equal(observed, expected)', 'np.array_equal(observed, image[1:3, 0:4, :])', 'np.array_equal(observed, expected)', 'np.array_equal(observed, image[1:5, 0:4, :])', 'np.array_equal(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[]
2419,aleju,kontakt@ajung.name,2019-10-27 16:40:27+01:00,016d8b5dd0ce52c6df7b57b6b80bcaf4587486e3,https://github.com/aleju/imgaug/commit/016d8b5dd0ce52c6df7b57b6b80bcaf4587486e3,Fix pylint and py27 errors,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2420,aleju,kontakt@ajung.name,2019-10-20 21:07:29+02:00,ec0300cd3c0c7502c52903fb9f74a108c952bacf,https://github.com/aleju/imgaug/commit/ec0300cd3c0c7502c52903fb9f74a108c952bacf,Add augmenter Cartoon,5,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],3,0,1,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class Test_stylize_cartoon(unittest.TestCase):', 'class Test__saturate(unittest.TestCase):', 'class TestCartoon(unittest.TestCase):']",[],['def setUp(self):'],[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['(', '(', 'cartoon_black > image_black', 'mock_blur.call_count == 0', 'mock_blur.call_count == 1', 'mock_blur.call_args_list[0][0][1] == 7', 'mock_msf.call_count == 0', 'mock_msf.call_count == 1', 'np.allclose(mock_msf.call_args_list[0][1][], 10*0.5)', 'np.allclose(mock_msf.call_args_list[0][1][], 20*0.5)', 'mock_seb.call_count == 2', 'mock_seb.call_count == 0', 'mock_fel.call_count == 1', 'sat_img < sat_2', 'sat_1 < sat_2', 'aug.blur_ksize.a.value == 1', 'aug.blur_ksize.b.value == 5', 'np.isclose(aug.segmentation_size.a.value, 0.8)', 'np.isclose(aug.segmentation_size.b.value, 1.2)', 'np.isclose(aug.edge_prevalence.a.value, 0.9)', 'np.isclose(aug.edge_prevalence.b.value, 1.1)', 'np.isclose(aug.saturation.a.value, 1.5)', 'np.isclose(aug.saturation.b.value, 2.5)', 'aug.from_colorspace == iaa.CSPACE_RGB', 'len(np.unique(np.round(samples[0]*100, decimals=0))) > 1', 'len(np.unique(np.round(samples[1]*100, decimals=0))) > 1', 'len(np.unique(np.round(samples[2]*100, decimals=0))) > 1', 'len(np.unique(np.round(samples[3]*100, decimals=0))) > 1', 'mock_sc.call_count == 2', 'params[0] is aug.blur_ksize', 'params[1] is aug.segmentation_size', 'params[2] is aug.saturation', 'params[3] is aug.edge_prevalence', 'params[4] == iaa.CSPACE_RGB']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2421,aleju,kontakt@ajung.name,2019-11-01 19:18:09+01:00,62b2d636ff71c6e990e9822f05afc371ac80027a,https://github.com/aleju/imgaug/commit/62b2d636ff71c6e990e9822f05afc371ac80027a,Fix warnings in geometric tests,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2422,aleju,kontakt@ajung.name,2019-11-03 20:54:17+01:00,8ac38b3ead31e4746988651f2cae550823bce766,https://github.com/aleju/imgaug/commit/8ac38b3ead31e4746988651f2cae550823bce766,"Fix Affine BB aug using only 2 corner points

This fixes a bug where the bounding box augmentation
in Affine uses only two corner cordinates (top-left,
bottom-right) instead of all four, leading to malformed
output bounding boxes during rotation and shear.

This bug was likely introduced by #451 (2d3fdb7,
single_step_augment).",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['bbsoi_aug.bounding_boxes[0].iou(bb_expected) > 0.95'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2423,aleju,kontakt@ajung.name,2019-11-03 20:35:15+01:00,24bc6b200397c8e3b47805b1f3d4daab1c473e18,https://github.com/aleju/imgaug/commit/24bc6b200397c8e3b47805b1f3d4daab1c473e18,Add y-axis shear to Affine,4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(kps_aug, [(1, 0), (2, 2)])', 'np.allclose(bbs_aug, [(1, 0, 2, 1), (2, 2, 3, 3)])', 'np.allclose(polygons_aug, [(1, 0), (2, 0), (2, 1)])', 'np.allclose(ls_aug, [(1, 0), (2, 0), (2, 1)])']",[],[],[],[],[],[],[],[],[],[],[],[],"['kps_aug == [(1, 0), (2, 2)]', 'bbs_aug == [(1, 0, 2, 1), (2, 2, 3, 3)]', 'polygons_aug == [(1, 0), (2, 0), (2, 1)]', 'ls_aug == [(1, 0), (2, 0), (2, 1)]']",[],[],[],[],[],[],[],[],[],[],[],[]
2424,aleju,kontakt@ajung.name,2019-11-05 19:24:32+01:00,2fa07fdffab43cf5163e1c7fba567e6af0b67eb6,https://github.com/aleju/imgaug/commit/2fa07fdffab43cf5163e1c7fba567e6af0b67eb6,Add ShearX,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestShearX(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug, iaa.Affine)', 'aug.shear[0].value == 40', 'aug.order.value == 1', 'aug.cval.value == 0', 'aug.mode.value == ', 'aug.fit_output is False', 'x1 > 20', 'y1 > 10', 'y2 > 10', 'np.isclose(y1, y2)', 'x3 < 30', 'y3 < 40', 'y4 < 40', 'np.isclose(y3, y4)', 'not np.isclose(x1, x4)', 'not np.isclose(x2, x3)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2425,aleju,kontakt@ajung.name,2019-11-05 19:39:09+01:00,25ea236b6a3a0ee4f12664db962a5b1fd26b2e23,https://github.com/aleju/imgaug/commit/25ea236b6a3a0ee4f12664db962a5b1fd26b2e23,Add ShearY,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestShearY(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug, iaa.Affine)', 'aug.shear[1].value == 40', 'aug.order.value == 1', 'aug.cval.value == 0', 'aug.mode.value == ', 'aug.fit_output is False', 'y1 < 20', 'x1 > 10', 'x4 > 10', 'np.isclose(x1, x4)', 'y2 > 20', 'x2 < 40', 'x3 < 40', 'np.isclose(x2, x3)', 'not np.isclose(y1, y2)', 'not np.isclose(y3, y4)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2426,aleju,kontakt@ajung.name,2019-11-05 20:26:26+01:00,efae0d3ff822d39374513cb886f6bc78c31083d0,https://github.com/aleju/imgaug/commit/efae0d3ff822d39374513cb886f6bc78c31083d0,Add ScaleX,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestScaleX(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug, iaa.Affine)', 'np.isclose(aug.scale[0].value, 1.5)', 'aug.order.value == 1', 'aug.cval.value == 0', 'aug.mode.value == ', 'aug.fit_output is False', 'x2 - x1 >= 3', 'y2 - y1 < 1']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2427,aleju,kontakt@ajung.name,2019-11-05 20:28:46+01:00,8e8bf2f808be7db3f3b681bf468586987bc75008,https://github.com/aleju/imgaug/commit/8e8bf2f808be7db3f3b681bf468586987bc75008,Add ScaleY,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestScaleY(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug, iaa.Affine)', 'np.isclose(aug.scale[1].value, 1.5)', 'aug.order.value == 1', 'aug.cval.value == 0', 'aug.mode.value == ', 'aug.fit_output is False', 'y2 - y1 >= 3', 'x2 - x1 < 1']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2428,aleju,kontakt@ajung.name,2019-11-05 21:09:56+01:00,21841842ec4093fe4cad4fe077ffd38c15511cd9,https://github.com/aleju/imgaug/commit/21841842ec4093fe4cad4fe077ffd38c15511cd9,Add TranslateX,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestTranslateX(unittest.TestCase):'],"[('Raises', '(AssertionError) as ctx:')]",['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug, iaa.Affine)', 'np.isclose(aug.translate[0].value, 0.5)', 'aug.order.value == 1', 'aug.cval.value == 0', 'aug.mode.value == ', 'aug.fit_output is False', 'isinstance(aug, iaa.Affine)', 'np.isclose(aug.translate[0].value, 2)', 'aug.order.value == 1', 'aug.cval.value == 0', 'aug.mode.value == ', 'aug.fit_output is False', 'in str(ctx.exception)', 'overlap > (1.0 - (1/50) - 1e-4)', 'overlap > (1.0 - (1/50) - 1e-4)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2429,aleju,kontakt@ajung.name,2019-11-06 19:36:27+01:00,eb450f2c27c534830859d950b0725eed416f7c60,https://github.com/aleju/imgaug/commit/eb450f2c27c534830859d950b0725eed416f7c60,Fix old numpy <1.17 RandomState methods missing in RNG,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['result.dtype.name == ', 'result.shape == (10, 20, 3)', 'np.all(result >= 0.0)', 'np.all(result <= 1.0)', 'np.any(result > 0.0)', 'np.any(result < 1.0)', 'result.dtype.name == ', 'result.shape == (10, 20, 3)', 'np.all(result >= 10)', 'np.all(result <= 99)', 'np.any(result > 10)', 'np.any(result < 99)', 'result.dtype.name == ', 'result.shape == (10, 50, 3)', 'np.any(result > 0.5)', 'np.any(result < -0.5)', 'np.average(np.logical_or(result < 2.0, result > -2.0)) > 0.5', 'result.dtype.name == ', 'result.shape == (10, 20, 3)', 'np.all(result >= 10)', 'np.all(result <= 100)', 'np.any(result > 10)', 'np.any(result < 100)', 'result.dtype.name == ', 'result.shape == (10, 20, 3)', 'np.all(result >= 1)', 'np.all(result <= 100)', 'np.any(result > 1)', 'np.any(result < 100)', 'result.dtype.name == ', 'result.shape == (10, 20, 3)', 'np.all(result >= 0.0)', 'np.all(result <= 1.0)', 'np.any(result > 0.0)', 'np.any(result < 1.0)', 'result.dtype.name == ', 'result.shape == (10, 200, 3)', 'np.all(result >= 0)', 'np.any(result > 10000)', 'result == ', 'mock_func.call_count == 1']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2430,aleju,kontakt@ajung.name,2019-11-06 21:34:56+01:00,e4c4cdfce0dbd0f92f9cbc4f4609b6d2d271d80b,https://github.com/aleju/imgaug/commit/e4c4cdfce0dbd0f92f9cbc4f4609b6d2d271d80b,Add BB.compute_area_out_of_image(),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.isclose(area_ooi, 0.0)', 'np.isclose(area_ooi, (0-(-20))*(30-10))', 'np.isclose(area_ooi, 20*10)', 'np.isclose(area_ooi, bb.area)', 'np.isclose(area_ooi, 0.0)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2431,aleju,kontakt@ajung.name,2019-11-06 21:59:28+01:00,4522d455f8530046928ec8eddb63653c87aa7285,https://github.com/aleju/imgaug/commit/4522d455f8530046928ec8eddb63653c87aa7285,Add BB.compute_out_of_image_factor(),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.isclose(factor, 0.0)', 'np.isclose(factor, expected)', 'np.isclose(factor, 1.0)', 'np.isclose(factor, 0.0)', 'np.isclose(factor, 1.0)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2432,aleju,kontakt@ajung.name,2019-11-06 22:01:00+01:00,5a2b96f885a11a7e437db1f06bddfb41392f0ce5,https://github.com/aleju/imgaug/commit/5a2b96f885a11a7e437db1f06bddfb41392f0ce5,Change Polygon.area to return 0 if #points<3,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.isclose(poly.area, 0.0)', 'np.isclose(poly.area, 0.0)', 'np.isclose(poly.area, 0.0)']",[],[],[],[],[],[],[],[],[],[],[],[],"['in str(exc)', 'got_exception']",[],[],[],[],[],[],[],[],[],[],[],[]
2433,aleju,kontakt@ajung.name,2019-11-06 22:02:02+01:00,801fc58c0c2697bcbb6588749843145b6f570a5a,https://github.com/aleju/imgaug/commit/801fc58c0c2697bcbb6588749843145b6f570a5a,Add Polygon.compute_area_out_of_image(),3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestPolygon_compute_area_out_of_image(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.isclose(area_ooi, 0.0)', 'np.isclose(area_ooi, 2.0)', 'np.isclose(area_ooi, 1.0)', 'np.isclose(area_ooi, 10*15 - 5*5)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2434,aleju,kontakt@ajung.name,2019-11-07 19:30:12+01:00,8d7e5d74bcecfb1a553552535d039e7544a9d460,https://github.com/aleju/imgaug/commit/8d7e5d74bcecfb1a553552535d039e7544a9d460,Add LineString.compute_out_of_image_factor(),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.isclose(factor, 0.0)', 'np.isclose(factor, 0.0)', 'np.isclose(factor, 1.0)', 'np.isclose(factor, 0.0)', 'len(ls.coords) == 3', 'np.isclose(factor, 0.0)', 'np.isclose(factor, 0.5, atol=1e-3)', 'np.isclose(factor, 0.5, atol=1e-3)', 'np.isclose(factor, 1.0)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2435,aleju,kontakt@ajung.name,2019-11-07 19:32:20+01:00,8aa181af44ef8ef9c56d7ee1d502f483f4d2db0e,https://github.com/aleju/imgaug/commit/8aa181af44ef8ef9c56d7ee1d502f483f4d2db0e,Add Polygon.compute_out_of_image_factor(),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2436,aleju,kontakt@ajung.name,2019-11-07 19:54:38+01:00,dfde6c31f3ce45dac9ef6f558c678e344a726b75,https://github.com/aleju/imgaug/commit/dfde6c31f3ce45dac9ef6f558c678e344a726b75,Add Polygon.compute_out_of_image_factor(),3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestPolygon_compute_out_of_image_factor(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.isclose(factor, 0.0)', 'np.isclose(factor, 0.0)', 'np.isclose(factor, 1.0)', 'np.isclose(factor, 0.0)', 'np.isclose(factor, 0.5, atol=1e-3)', 'np.isclose(factor, 0.5, atol=1e-3)', 'np.isclose(factor, 0.0)', 'np.isclose(factor, 0.5, atol=1e-3)', 'np.isclose(factor, 1.0)', 'np.isclose(factor, 1.0)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2437,aleju,kontakt@ajung.name,2019-11-07 20:08:51+01:00,299036b1490c3137e716142839633d47d39b0ad8,https://github.com/aleju/imgaug/commit/299036b1490c3137e716142839633d47d39b0ad8,Rename compute_area_out_of_image() to compute_out_of_image_area(),5,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,['class TestPolygon_compute_out_of_image_area(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],['class TestPolygon_compute_area_out_of_image(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],"['np.isclose(area_ooi, 0.0)', 'np.isclose(area_ooi, (0-(-20))*(30-10))', 'np.isclose(area_ooi, 20*10)', 'np.isclose(area_ooi, bb.area)', 'np.isclose(area_ooi, 0.0)', 'np.isclose(area_ooi, 0.0)', 'np.isclose(area_ooi, 2.0)', 'np.isclose(area_ooi, 1.0)', 'np.isclose(area_ooi, 10*15 - 5*5)']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.isclose(area_ooi, 0.0)', 'np.isclose(area_ooi, (0-(-20))*(30-10))', 'np.isclose(area_ooi, 20*10)', 'np.isclose(area_ooi, bb.area)', 'np.isclose(area_ooi, 0.0)', 'np.isclose(area_ooi, 0.0)', 'np.isclose(area_ooi, 2.0)', 'np.isclose(area_ooi, 1.0)', 'np.isclose(area_ooi, 10*15 - 5*5)']",[],[],[],[],[],[],[],[],[],[],[],[]
2438,aleju,kontakt@ajung.name,2019-11-07 20:21:41+01:00,9af22fd7f67eb7c16e46e3a1faa9b1cabd57a4df,https://github.com/aleju/imgaug/commit/9af22fd7f67eb7c16e46e3a1faa9b1cabd57a4df,Rename compute_out_of_image_factor() to *_fraction(),7,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestPolygon_compute_out_of_image_fraction(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],['class TestPolygon_compute_out_of_image_factor(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2439,aleju,kontakt@ajung.name,2019-11-07 20:48:16+01:00,1e15abe3d8c061b20a59cde27905d0f547bf4015,https://github.com/aleju/imgaug/commit/1e15abe3d8c061b20a59cde27905d0f547bf4015,Add BBsOI.remove_out_of_image_fraction(),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(bbsoi_removed.bounding_boxes) == 2', 'bbsoi_removed.bounding_boxes == [bb1, bb2]']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2440,aleju,kontakt@ajung.name,2019-11-07 20:59:10+01:00,1a18aaa1042d2fa8ba97556b62674c62079dbce3,https://github.com/aleju/imgaug/commit/1a18aaa1042d2fa8ba97556b62674c62079dbce3,Add LSOI.remove_out_of_image_fraction(),6,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(cbaoi_reduced.items) == 2', 'cbaoi_reduced.items == [item1, item2]', 'len(cbaoi_reduced.items) == 2', 'cbaoi_reduced.items == [item1, item2]']",[],[],[],[],[],[],[],[],[],[],[],[],"['len(bbsoi_removed.bounding_boxes) == 2', 'bbsoi_removed.bounding_boxes == [bb1, bb2]']",[],[],[],[],[],[],[],[],[],[],[],[]
2441,aleju,kontakt@ajung.name,2019-11-07 21:06:44+01:00,e1e239ac091f0e7325d7f54b38ac317e798daa46,https://github.com/aleju/imgaug/commit/e1e239ac091f0e7325d7f54b38ac317e798daa46,Add PSOI.remove_out_of_image_fraction(),3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestPolygonsOnImage_remove_out_of_image_fraction(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(cbaoi_reduced.items) == 2', 'cbaoi_reduced.items == [item1, item2]']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2442,aleju,kontakt@ajung.name,2019-11-07 22:04:25+01:00,551d95a579998d06be6e7c02975e68bab9a1cb52,https://github.com/aleju/imgaug/commit/551d95a579998d06be6e7c02975e68bab9a1cb52,Add Keypoint.is_out_of_image(),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['not ooi', 'ooi', 'ooi']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2443,aleju,kontakt@ajung.name,2019-11-07 22:05:28+01:00,b99bbe7a9c8acd88cb87a5fd2d1728ff988fd8ed,https://github.com/aleju/imgaug/commit/b99bbe7a9c8acd88cb87a5fd2d1728ff988fd8ed,Add KP.compute_out_of_image_fraction(),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.isclose(fraction, 0.0)', 'np.isclose(fraction, 1.0)', 'np.isclose(fraction, 1.0)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2444,aleju,kontakt@ajung.name,2019-11-07 22:06:12+01:00,14d44b257e91a478dff000854334928b140ee131,https://github.com/aleju/imgaug/commit/14d44b257e91a478dff000854334928b140ee131,Add KPsOI.remove_out_of_image_fraction(),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(cbaoi_reduced.items) == 1', 'cbaoi_reduced.items == [item1]']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2445,aleju,kontakt@ajung.name,2019-11-08 08:00:05+01:00,19e26e1919a0e06220351b58b0854ab9382cc520,https://github.com/aleju/imgaug/commit/19e26e1919a0e06220351b58b0854ab9382cc520,Add KPsOI.clip_out_of_image(),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2446,aleju,kontakt@ajung.name,2019-11-08 17:52:31+01:00,d8c0734dfd980a71471f76a84bbf0c7aa1d301df,https://github.com/aleju/imgaug/commit/d8c0734dfd980a71471f76a84bbf0c7aa1d301df,Add RemoveCBAsByOutOfImageFraction,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestRemoveCBAsByOutOfImageFraction(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.isclose(aug.fraction, 0.51)', 'image_aug.dtype.name == dt', 'image_aug.shape == (5, 10, 3)', 'np.allclose(image_aug, 1.0)', 'np.all(image_aug == 1)', 'len(cbaoi_aug.items) == 1', 'item_obs.coords_almost_equals(item_exp)', 'len(cbaoi_aug.items) == 2', 'item_obs.coords_almost_equals(item_exp)', 'len(cbaoi_aug.items) == 2', 'item_obs.coords_almost_equals(item_exp)', 'len(cbaoi_aug.items) == 2', 'item_obs.coords_almost_equals(item_exp)', 'len(params) == 1', 'np.isclose(params[0], 0.51)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2447,aleju,kontakt@ajung.name,2019-11-08 18:40:17+01:00,2c06fee2a75cd870dc6dbe7f370a02a182f2a4a4,https://github.com/aleju/imgaug/commit/2c06fee2a75cd870dc6dbe7f370a02a182f2a4a4,Add ClipCBAsToImagePlanes,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestClipCBAsToImagePlanes(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.dtype.name == dt', 'image_aug.shape == (5, 10, 3)', 'np.allclose(image_aug, 1.0)', 'np.all(image_aug == 1)', 'len(cbaoi_aug.items) == 1', 'item_obs.coords_almost_equals(item_exp)', 'len(cbaoi_aug.items) == len(expected)', 'item_obs.coords_almost_equals(item_exp)', 'len(cbaoi_aug.items) == len(expected)', 'item_obs.coords_almost_equals(item_exp)', 'len(cbaoi_aug.items) == len(expected)', 'item_obs.coords_almost_equals(item_exp, max_distance=1e-2)', 'len(params) == 0']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2448,aleju,kontakt@ajung.name,2019-11-10 20:49:39+01:00,c9120df2f1c5dc6033df492db0fb57ff6e3260bb,https://github.com/aleju/imgaug/commit/c9120df2f1c5dc6033df492db0fb57ff6e3260bb,Fix Affine translation unaligned for map inputs,5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['item_a.coords_almost_equals(item_b,', 'overlap_true > 19*19', 'p_same_on_zero_cells > 0.98', 'overlap_true > 19*19', 'p_same_on_zero_cells > 0.98']",[],[],[],[],[],[],[],[],[],[],[],[],['item_a.coords_almost_equals(item_b)'],[],[],[],[],[],[],[],[],[],[],[],[]
2449,aleju,kontakt@ajung.name,2019-11-10 20:57:04+01:00,9443aba0736004a351773778261e819086cf761c,https://github.com/aleju/imgaug/commit/9443aba0736004a351773778261e819086cf761c,Add todo,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2450,aleju,kontakt@ajung.name,2019-11-10 20:57:53+01:00,8583b6d5cc7b0f8738e31cc04a9beacbfe6544e8,https://github.com/aleju/imgaug/commit/8583b6d5cc7b0f8738e31cc04a9beacbfe6544e8,Add BoundingBox.to_polygon(),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['poly.coords_almost_equals(['],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2451,aleju,kontakt@ajung.name,2019-11-10 20:58:36+01:00,9d92c17adb31f0a61bb2b3f886046cb3283a2b45,https://github.com/aleju/imgaug/commit/9d92c17adb31f0a61bb2b3f886046cb3283a2b45,Add BBsOI.to_polygons_on_image(),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['psoi.shape == (40, 50, 3)', 'len(psoi.items) == 2', 'psoi.items[0].coords_almost_equals([', 'psoi.items[1].coords_almost_equals([', 'psoi.shape == (40, 50, 3)', 'len(psoi.items) == 0']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2452,aleju,kontakt@ajung.name,2019-11-10 21:21:51+01:00,f1fd018f8a30ff277afc9009f706225ae6c16eb5,https://github.com/aleju/imgaug/commit/f1fd018f8a30ff277afc9009f706225ae6c16eb5,Add Polygon.subdivide(),3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestPolygon_subdivide(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(poly_sub.exterior) == 0', 'len(poly_sub.exterior) == 1', 'len(poly_sub.exterior) == 4', 'poly_sub.coords_almost_equals([', 'len(poly_sub.exterior) == 6', 'poly_sub.coords_almost_equals([', 'len(poly_sub.exterior) == 3', 'poly_sub.coords_almost_equals([', 'len(poly_sub.exterior) == 3+2*3', 'poly_sub.coords_almost_equals([', 'poly_sub.label is None', 'poly_sub.label == ']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2453,aleju,kontakt@ajung.name,2019-11-10 21:23:06+01:00,228c8a1542121f1fa21a4971915f223593dc7905,https://github.com/aleju/imgaug/commit/228c8a1542121f1fa21a4971915f223593dc7905,Add PolygonsOnImage.subdivide(),3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestPolygonsOnImage_subdivide(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['mock_sub.call_count == 2', 'mock_sub.call_args_list[0][0][0] == 2', 'mock_sub.call_args_list[1][0][0] == 2', 'poly_oi_sub.items == []', 'len(poly_oi_sub.polygons) == 0', 'poly_oi_sub.shape == (10, 11, 3)', 'poly_oi_sub.shape == (10, 11, 3)', 'len(poly_oi_sub.items) == 1', 'poly_oi_sub.items[0].coords_almost_equals([']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2454,aleju,kontakt@ajung.name,2019-11-10 21:26:09+01:00,b26b02a655037a63235a9e96633d62889cc7c7ff,https://github.com/aleju/imgaug/commit/b26b02a655037a63235a9e96633d62889cc7c7ff,Add WithPolarWarping,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestWithPolarWarping(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug.children, iaa.Sequential)', 'isinstance(aug.children[0], iaa.Noop)', 'isinstance(aug.children, iaa.Sequential)', 'isinstance(aug.children[0], iaa.Noop)', 'isinstance(aug.children[1], iaa.Noop)', 'image_aug.shape == (10, 20, 3)', 'avg_dist < 7.0', 'hm_aug.shape == (10, 20, 3)', 'avg_dist < 0.0125', 'sm_aug.shape == (10, 20, 3)', 'p_same > 0.95', 'kpsoi_aug.shape == (10, 20, 3)', 'np.allclose(kpsoi_aug.to_xy_array(), kpsoi.to_xy_array(),', 'bbsoi_aug.items[0].label == ', 'bbsoi_aug.items[1].label is None', 'bbsoi_aug.shape == (10, 20, 3)', 'np.allclose(bbsoi_aug.to_xy_array(), bbsoi.to_xy_array(),', 'psoi_aug.items[0].label == ', 'psoi_aug.items[1].label is None', 'psoi_aug.shape == (10, 20, 3)', 'np.allclose(psoi_aug.to_xy_array(), psoi.to_xy_array(),', 'lsoi_aug.shape == (10, 20, 3)', 'np.allclose(lsoi_aug.to_xy_array(), lsoi.to_xy_array(),', 'bbsoi_aug.items[0].label == ', 'bbsoi_aug.items[1].label is None', 'bbsoi_aug.shape == (10, 20, 3)', 'np.allclose(bbsoi_aug.to_xy_array(), bbsoi.to_xy_array(),', 'psoi_aug.items[0].label == ', 'psoi_aug.items[1].label is None', 'psoi_aug.shape == (10, 20, 3)', 'np.allclose(psoi_aug.to_xy_array(), psoi.to_xy_array(),', 'image_aug.shape == (50, 70, 3)', 'x1 < 30 - min_diff', 'y1 < 20 - min_diff', 'x2 > 40 + min_diff', 'y2 > 30 + min_diff', 'hm_aug_arr.shape == (50, 70, 2)', 'hm_aug.shape == (50, 70, 3)', 'x1 < 30 - min_diff', 'y1 < 20 - min_diff', 'x2 > 40 + min_diff', 'y2 > 30 + min_diff', 'sm_aug_arr.shape == (50, 70, 2)', 'sm_aug.shape == (50, 70, 3)', 'x1 < 30 - min_diff', 'y1 < 20 - min_diff', 'x2 > 40 + min_diff', 'y2 > 30 + min_diff', 'cbaoi_aug.shape == (50, 70, 3)', 'x1 < 30 - min_diff', 'y1 < 20 - min_diff', 'x2 > 40 + min_diff', 'y2 > 30 + min_diff', 'cbaoi_aug.shape == (50, 70, 3)', 'x1 < 30 - min_diff', 'y1 < 20 - min_diff', 'x2 > 40 + min_diff', 'y2 > 30 + min_diff', 'cbaoi_aug.shape == (50, 70, 3)', 'x1 < 30 - min_diff', 'y1 < 20 - min_diff', 'x2 > 40 + min_diff', 'y2 > 30 + min_diff', 'cbaoi_aug.shape == (50, 70, 3)', 'x1 < 30 - min_diff', 'y1 < 20 - min_diff', 'x2 > 40 + min_diff', 'y2 > 30 + min_diff', 'image_aug.shape == (80, 100, 3)', 'hm_aug.shape == (80, 100, 3)', 'hm_aug_arr.shape == (40, 50, 1)', 'overlap > 0.96', 'image_aug.shape == (80, 100, 3)', 'sm_aug.shape == (80, 100, 3)', 'sm_aug_arr.shape == (40, 50, 1)', 'overlap > 0.96', 'image_aug.shape == (80, 100, 3)', 'kpsoi_aug.shape == (80, 100, 3)', 'kp1_intensity > 200', 'kp2_intensity > 200', 'image.flags[] is False', 'image_aug.shape == (10, 20, 3)', 'avg_dist < 7.0', 'image.flags[] is False', 'image_aug.shape == (8, 18, 3)', 'avg_dist < 7.0', 'overlap_1_add >= 0.9', 'overlap_2_add < 0.01', 'np.all(image_aug == 0)', 'image_aug.dtype.name == ', 'image_aug.shape == shape_expected', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'np.allclose(kpsoi_aug.to_xy_array(),', 'kpsoi_aug.shape == shape', 'np.array_equal(sm_aug.get_arr(), sm_arr)', 'sm_aug.shape == shape', 'arr_aug.shape == (20, 20)', 'arr_aug.dtype.name == ', 'overlap > 0.95', 'image_aug.dtype.name == dtype', 'overlap_min > 0.9', 'overlap_cv > 0.9', 'overlap_max > 0.9', 'image_aug.dtype.name == dtype', 'overlap1 > 0.9', 'overlap2 > 0.9', 'overlap3 > 0.9', 'overlap4 > 0.9', 'overlap5 > 0.9', 'overlap6 > 0.9', 'overlap7 > 0.9', 'len(params) == 0', 'aug.get_children_lists() == [children]', 'aug.__repr__() == expected', 'aug.__str__() == expected']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2455,aleju,kontakt@ajung.name,2019-11-10 21:54:38+01:00,d5fe9ddcccff85874120548f2427324640e023bd,https://github.com/aleju/imgaug/commit/d5fe9ddcccff85874120548f2427324640e023bd,Add PR ID to changelog,5,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2456,aleju,kontakt@ajung.name,2019-11-10 21:55:16+01:00,e359dfff3e1f340e49bd1463c7faac9b2ef0f7b1,https://github.com/aleju/imgaug/commit/e359dfff3e1f340e49bd1463c7faac9b2ef0f7b1,Fix data in changelog filename,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2457,aleju,kontakt@ajung.name,2019-11-11 20:42:59+01:00,0b2df0d2ded41e84e36bfc20453cf86e8a642089,https://github.com/aleju/imgaug/commit/0b2df0d2ded41e84e36bfc20453cf86e8a642089,Add test for PR #471,1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestSnowflakesLayer(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['np.average(image_aug) > 128'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2458,aleju,kontakt@ajung.name,2019-11-11 20:43:16+01:00,e2a982d965d83ac86c84f8654897b223699170a1,https://github.com/aleju/imgaug/commit/e2a982d965d83ac86c84f8654897b223699170a1,Add PR #471 to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2459,aleju,kontakt@ajung.name,2019-10-27 20:57:56+01:00,3a0ab23402cb4337da2c0a790b6a494c9edffdc9,https://github.com/aleju/imgaug/commit/3a0ab23402cb4337da2c0a790b6a494c9edffdc9,"Add apply_jigsaw(), generate_jigsaw_destinations()",4,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class Test_apply_jigsaw(unittest.TestCase):', 'class Test_generate_jigsaw_destinations(unittest.TestCase):']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, arr)', 'np.allclose(observed, arr, rtol=0, atol=atol)', 'np.array_equal(observed, arr)', 'np.array_equal(cell_0_obs, cell_0_exp)', 'np.array_equal(cell_4_obs, cell_4_exp)', 'np.array_equal(cell_1_obs, cell_1_exp)', 'np.array_equal(cell_6_obs, cell_6_exp)', 'np.array_equal(cell_2_obs, cell_2_exp)', 'np.allclose(cell_0_obs, cell_0_exp, **kwargs)', 'np.allclose(cell_4_obs, cell_4_exp, **kwargs)', 'np.allclose(cell_1_obs, cell_1_exp, **kwargs)', 'np.allclose(cell_6_obs, cell_6_exp, **kwargs)', 'np.allclose(cell_2_obs, cell_2_exp, **kwargs)', 'observed.shape == arr.shape', 'observed.dtype.name == dtype', 'np.array_equal(', 'np.min(dist) <= 0.01', 'np.any(dist >= np.sqrt(2) - 1e-4)', 'np.max(dist) <= np.sqrt(2) + 1e-4', 'np.min(dist) <= 0.01', 'np.any(dist >= 0.99)', 'np.max(dist) <= 1.01']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2460,aleju,kontakt@ajung.name,2019-10-27 21:49:39+01:00,5c1a279826c4322dcac1bf3a3e548702373be700,https://github.com/aleju/imgaug/commit/5c1a279826c4322dcac1bf3a3e548702373be700,Add apply_jigsaw_to_coords(),3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class Test_apply_jigsaw_to_coords(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(observed, arr)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, arr)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2461,aleju,kontakt@ajung.name,2019-10-27 22:23:55+01:00,a6f0cda8c7a4b526e158d51f8e8661b3e7e4401c,https://github.com/aleju/imgaug/commit/a6f0cda8c7a4b526e158d51f8e8661b3e7e4401c,Add Jigsaw,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestJigsaw(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['aug.nb_rows.value == 1', 'aug.nb_cols.value == 2', 'aug.max_steps.value == 2', 'aug.allow_pad is True', 'aug.nb_rows.value == 1', 'aug.nb_cols.value == 2', 'aug.max_steps.value == 3', 'aug.allow_pad is False', 'len(np.unique(samples.nb_rows)) > 1', 'len(np.unique(samples.nb_cols)) > 1', 'len(np.unique(samples.max_steps)) > 1', 'np.all(samples.nb_rows >= 1)', 'np.all(samples.nb_rows <= 5)', 'np.all(samples.nb_cols >= 1)', 'np.all(samples.nb_cols <= 6)', 'np.all(samples.max_steps >= 1)', 'np.all(samples.max_steps <= 3)', 'not all_same', 'image_aug.dtype.name == ', 'image_aug.shape == (20, 20, 3)', 'np.array_equal(image_aug, image)', 'heatmap_aug.shape == (20, 20, 3)', 'np.allclose(heatmap_aug.arr_0to1, heatmap.arr_0to1)', 'segmap_aug.shape == (20, 20, 3)', 'np.array_equal(segmap_aug.arr, segmap.arr)', 'kpsoi_aug.shape == (20, 20, 3)', 'np.allclose(kpsoi_aug.to_xy_array(), kpsoi.to_xy_array())', 'np.array_equal(image_aug, expected)', 'np.allclose(heatmap_aug.arr_0to1, expected)', 'np.array_equal(segmap_aug.arr, expected)', 'kpsoi_aug.shape == (20, 20, 3)', 'np.allclose(kpsoi_aug.to_xy_array(), expected.to_xy_array())', 'overlap > 0.99', 'nb_changed > 5', 'overlap > 0.99', 'nb_changed > 5', 'dist < 1.5', 'np.array_equal(image_aug, image)', 'np.allclose(kpsoi_aug.to_xy_array(), kpsoi.to_xy_array())', 'image_aug.dtype.name == ', 'np.array_equal(image_aug,', 'params[0] is aug.nb_rows', 'params[1] is aug.nb_cols', 'params[2] is aug.max_steps', 'params[3] is True']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2462,aleju,kontakt@ajung.name,2019-11-01 17:04:30+01:00,c0216586743cf3f95b5148f972d94bd3955ddbe4,https://github.com/aleju/imgaug/commit/c0216586743cf3f95b5148f972d94bd3955ddbe4,Add DeterministicList,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestDeterministicList(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(param.values, values.flatten())', 'np.array_equal(param.values, [1, 2, 3, 4])', 'param.values.dtype.name == ', 'np.allclose(param.values, [1.1, 2.2, 3.3, 4.4])', 'param.values.dtype.name == ', 'np.array_equal(samples1, samples2)', 'sample1.shape == tuple()', 'sample1 == sample2', 'sample1.shape == tuple()', 'np.isclose(', 'samples.shape == shape_expected', 'np.array_equal(samples, expected)', 'samples.shape == shape_expected', 'np.allclose(samples, expected, rtol=0, atol=1e-5)', 'np.array_equal(samples, expected)', '(', '(']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2463,aleju,kontakt@ajung.name,2019-11-03 16:08:02+01:00,084ede25a3024143ac67ba08f452084dcccbbe1d,https://github.com/aleju/imgaug/commit/084ede25a3024143ac67ba08f452084dcccbbe1d,Add Identity,13,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],2,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestIdentity(unittest.TestCase):', 'class TestNoop(unittest.TestCase):']",[],['def setUp(self):'],[],[],[],[],[],[],[],[],['class TestNoop(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug.children[1], iaa.Identity)', 'isinstance(aug.children[0], iaa.Identity)', 'isinstance(aug_det.children[0], iaa.Identity)', 'iaa.Identity().get_parameters() == []', 'isinstance(aug, iaa.Identity)', 'np.array_equal(image, image_aug)', 'isinstance(augs, iaa.Identity)']",[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug.children[1], iaa.Noop)', 'isinstance(aug.children[0], iaa.Noop)', 'isinstance(aug_det.children[0], iaa.Noop)', 'iaa.Noop().get_parameters() == []', 'isinstance(augs, iaa.Noop)']",[],[],[],[],[],[],[],[],[],[],[],[]
2464,aleju,kontakt@ajung.name,2019-11-03 16:16:17+01:00,9348f3daff2bd77bd924aa17d4cc542d2ffe161a,https://github.com/aleju/imgaug/commit/9348f3daff2bd77bd924aa17d4cc542d2ffe161a,Rename noop_if_topmost to identity_if_topmost,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['augs is None', 'len(caught_warnings) == 1', 'in str(caught_warnings[-1].message)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2465,aleju,kontakt@ajung.name,2019-11-23 15:02:00+01:00,25e2056f63bd69141459bbbd3cd33c7682e3834f,https://github.com/aleju/imgaug/commit/25e2056f63bd69141459bbbd3cd33c7682e3834f,Add TranslateY,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestTranslateY(unittest.TestCase):'],"[('Raises', '(AssertionError) as ctx:')]",['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug, iaa.Affine)', 'np.isclose(aug.translate[1].value, 0.5)', 'aug.order.value == 1', 'aug.cval.value == 0', 'aug.mode.value == ', 'aug.fit_output is False', 'isinstance(aug, iaa.Affine)', 'np.isclose(aug.translate[1].value, 2)', 'aug.order.value == 1', 'aug.cval.value == 0', 'aug.mode.value == ', 'aug.fit_output is False', 'in str(ctx.exception)', 'overlap > (1.0 - (1/50) - 1e-4)', 'overlap > (1.0 - (1/50) - 1e-4)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2466,aleju,kontakt@ajung.name,2019-11-23 15:02:36+01:00,f08b348bc0214f9ca38affb04170a1dc896256de,https://github.com/aleju/imgaug/commit/f08b348bc0214f9ca38affb04170a1dc896256de,Add Rotate,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestRotate(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(aug, iaa.Affine)', 'np.isclose(aug.rotate.value, 45)', 'aug.order.value == 1', 'aug.cval.value == 0', 'aug.mode.value == ', 'aug.fit_output is False', 'image_aug.shape == (40, 20)', 'np.isclose(np.sum(image_aug[20-1:20+2, :]), 255*20, atol=1)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2467,aleju,kontakt@ajung.name,2019-11-05 21:24:51+01:00,81dd8063209be704620892613d2bfb3e9a1c4f21,https://github.com/aleju/imgaug/commit/81dd8063209be704620892613d2bfb3e9a1c4f21,Add dtype supports to docstrings,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2468,aleju,kontakt@ajung.name,2019-11-23 15:29:13+01:00,285fc18cef243e17a6805348f8d455f7c0c94e80,https://github.com/aleju/imgaug/commit/285fc18cef243e17a6805348f8d455f7c0c94e80,Fix broken test for SnowflakesLayer,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.std(image_aug) < 1', 'nb_seen > 30  # usually around 45']",[],[],[],[],[],[],[],[],[],[],[],[],['np.average(image_aug) > 128'],[],[],[],[],[],[],[],[],[],[],[],[]
2469,aleju,kontakt@ajung.name,2019-11-11 21:17:31+01:00,01e10ff5e1c79283bffc3e5126c60decec988e30,https://github.com/aleju/imgaug/commit/01e10ff5e1c79283bffc3e5126c60decec988e30,Add testutils.runtest_pickleable_uint8_img(),2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(image_aug, image_aug_pkl)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2470,aleju,kontakt@ajung.name,2019-11-11 21:55:33+01:00,9acc93110f928c4cbe9cb77658083019ac4a9607,https://github.com/aleju/imgaug/commit/9acc93110f928c4cbe9cb77658083019ac4a9607,Fix MotionBlur not being pickle-able,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2471,aleju,kontakt@ajung.name,2019-11-12 19:26:00+01:00,6b8ea132035441d147ba195194f0966130ebabbf,https://github.com/aleju/imgaug/commit/6b8ea132035441d147ba195194f0966130ebabbf,Fix AssertLambda not being pickle-able,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2472,aleju,kontakt@ajung.name,2019-11-23 12:35:06+01:00,711258df547a77e1534a0f6e9f4c9f485fe14b5e,https://github.com/aleju/imgaug/commit/711258df547a77e1534a0f6e9f4c9f485fe14b5e,Fix AssertShape not being pickle-able,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2473,aleju,kontakt@ajung.name,2019-11-11 22:08:11+01:00,5fdacf3557e6ac06af0d5ead3bfc5156bd032e03,https://github.com/aleju/imgaug/commit/5fdacf3557e6ac06af0d5ead3bfc5156bd032e03,Fix MultiplyHueAndSaturation random_state incomplete type support,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2474,aleju,kontakt@ajung.name,2019-11-11 21:03:38+01:00,77529a8408669ecb334b44f71f6543c52f84d6b4,https://github.com/aleju/imgaug/commit/77529a8408669ecb334b44f71f6543c52f84d6b4,Add tests for pickling of augmenters,15,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],2,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestMultiplyHue(unittest.TestCase):', 'class TestMultiplySaturation(unittest.TestCase):']",[],[],[],[],[],[],[],[],[],[],"['class TestMultiplyToHue(unittest.TestCase):', 'class TestMultiplyToSaturation(unittest.TestCase):']",[],[],[],[],[],[],[],[],[],[],"['np.array_equal(color_true, color_true_pkl)', 'np.array_equal(color_false, color_false_pkl)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2475,aleju,kontakt@ajung.name,2019-11-12 20:32:51+01:00,59ce934dfc22ca238e1e8b89e3a02430ec36c4fa,https://github.com/aleju/imgaug/commit/59ce934dfc22ca238e1e8b89e3a02430ec36c4fa,Add patch description and PR to changelog,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2476,aleju,kontakt@ajung.name,2019-11-23 11:56:19+01:00,e0801055e3870afc292b11b0c811cb60da0eb3e0,https://github.com/aleju/imgaug/commit/e0801055e3870afc292b11b0c811cb60da0eb3e0,Deactivate pickle-related warnings on codacy,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2477,aleju,kontakt@ajung.name,2019-11-03 15:18:07+01:00,cea478109c859f6b913ca10c187d0eef04c92efa,https://github.com/aleju/imgaug/commit/cea478109c859f6b913ca10c187d0eef04c92efa,Add equalize() and equalize_(),3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class Test_equalize(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(image_iaa, image_pil)', 'np.all(channelwise_sums > 0)', 'np.min(image_aug) < 50', 'np.max(image_aug) > 150', 'image_aug.dtype.name == ', 'image_aug.shape == shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2478,aleju,kontakt@ajung.name,2019-11-03 15:35:17+01:00,90447ed8641073ae3bc4f55484a7774f7badc87d,https://github.com/aleju/imgaug/commit/90447ed8641073ae3bc4f55484a7774f7badc87d,Add Equalize,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestEqualize(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['mock_eq.call_count == 1', 'np.array_equal(mock_eq.call_args_list[0][0][0], image)', 'np.all(channelwise_sums > 0)', 'np.min(image_aug) < 50', 'np.max(image_aug) > 150']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2479,aleju,kontakt@ajung.name,2019-11-02 18:23:44+01:00,6ad09638b6984d1d649ac756a9a144b5a301b835,https://github.com/aleju/imgaug/commit/6ad09638b6984d1d649ac756a9a144b5a301b835,Add autocontrast(),3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class Test_autocontrast(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(result_pil, result_iaa)', 'np.all(channelwise_sums > 0)', 'np.min(image_aug) < 50', 'np.max(image_aug) > 150', 'image_aug.dtype.name == ', 'image_aug.shape == shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2480,aleju,kontakt@ajung.name,2019-11-02 18:54:55+01:00,1d09e5c9057e26598e01fcf08d9be53eeeab4733,https://github.com/aleju/imgaug/commit/1d09e5c9057e26598e01fcf08d9be53eeeab4733,Add Autocontrast,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestAutocontrast(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(mock_auto.call_args_list[0][0][0], image)', 'mock_auto.call_args_list[0][0][1] == 15', 'mock_auto.call_count == 100', 'np.array_equal(mock_auto.call_args_list[i][0][0],', 'len(set(cutoffs)) > 10', 'np.min(image_aug) < 50', 'np.max(image_aug) > 150', 'np.min(image_aug) < 50', 'np.max(image_aug) > 150']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2481,aleju,kontakt@ajung.name,2019-11-23 20:57:35+01:00,3bc9f589fb98bc5396b5e14457409b6fac0fa249,https://github.com/aleju/imgaug/commit/3bc9f589fb98bc5396b5e14457409b6fac0fa249,Add IAugmentable,8,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2482,aleju,kontakt@ajung.name,2019-11-23 21:10:02+01:00,57b160d96a9bc5256291a6bc7712d68e867a34d2,https://github.com/aleju/imgaug/commit/57b160d96a9bc5256291a6bc7712d68e867a34d2,Restrict iterables during normalization to non-augmentables,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2483,aleju,kontakt@ajung.name,2019-11-13 20:47:06+01:00,01900025b53e258890d91f5b5f7e0e1f330074e9,https://github.com/aleju/imgaug/commit/01900025b53e258890d91f5b5f7e0e1f330074e9,Add iteration over CBAs in CBAOIs via __iter__,9,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestPolygonsOnImage___iter__(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['cba is cbas[i]', 'i == 0', 'cba is cbas[i]', 'i == 0', 'cba is cbas[i]', 'i == 0', 'cba is cbas[i]', 'i == 0']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2484,aleju,kontakt@ajung.name,2019-11-13 21:15:19+01:00,ecdc4b198320febbaff7f12108ed882f9014a26e,https://github.com/aleju/imgaug/commit/ecdc4b198320febbaff7f12108ed882f9014a26e,"Add ability to iterate over BB, Poly, LS coords",7,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestPolygon___iter__(unittest.TestCase):'],"[('Raises', '(ValueError) as cm:')]",[],[],[],[],[],[],[],[],[],[],"[('Raises', '(AssertionError) as cm:')]",[],[],[],[],[],[],[],[],[],"['i in [0, 1]', 'np.allclose(xy, (1, 2))', 'np.allclose(xy, (3, 4))', 'i == 1', 'i in [0, 1]', 'np.allclose(xy, (1, 2))', 'np.allclose(xy, (3, 4))', 'i == 1', 'i == 0', 'i in [0, 1, 2]', 'np.allclose(xy, (1, 2))', 'np.allclose(xy, (3, 4))', 'np.allclose(xy, (5, 5))', 'i == 2', 'i == 0']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2485,aleju,kontakt@ajung.name,2019-11-13 21:30:27+01:00,eb90cb21d8e1d8ff07afb847295b291ad5aefac2,https://github.com/aleju/imgaug/commit/eb90cb21d8e1d8ff07afb847295b291ad5aefac2,"Add index/slice access to BB, Polygon, LineString",7,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestPolygon___getitem__(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(cba[0], (1, 2))', 'np.allclose(cba[1], (3, 4))', 'np.allclose(cba[0], (0, 1))', 'np.allclose(cba[1], (2, 3))', 'np.allclose(cba[1:], [(2, 3), (4, 5)])', 'np.allclose(cba[0], (1, 2))', 'np.allclose(cba[1], (3, 4))', 'np.allclose(cba[2], (5, 5))', 'np.allclose(cba[1:], [(3, 4), (5, 5)])']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2486,aleju,kontakt@ajung.name,2019-11-13 21:37:37+01:00,50e8c99bbeb023e31ac721de02c07f376a21e740,https://github.com/aleju/imgaug/commit/50e8c99bbeb023e31ac721de02c07f376a21e740,Add Keypoint.xy and Keypoint.xy_int,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(kp.xy, (2, 1.7))', 'np.allclose(xy, (1, 2))', 'xy.dtype.name == ']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2487,aleju,kontakt@ajung.name,2019-11-24 18:13:45+01:00,83be1c8d2459483967f70dd0958b4d4fc2684978,https://github.com/aleju/imgaug/commit/83be1c8d2459483967f70dd0958b4d4fc2684978,Resolve various pylint warnings/infos,38,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(kpsois2, KeypointsOnImage)']",[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(kps2, KeypointsOnImage)']",[],[],[],[],[],[],[],[],[],[],[],[]
2488,aleju,kontakt@ajung.name,2019-11-24 18:14:46+01:00,c90a844be24a4fe20ea87f7e840c6fb3c336fb35,https://github.com/aleju/imgaug/commit/c90a844be24a4fe20ea87f7e840c6fb3c336fb35,Add project-specific pylint configuration,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2489,aleju,kontakt@ajung.name,2019-11-28 20:25:11+01:00,56f7ac4edf8e8bfb0d796a4af4cc40b8ee65fdf9,https://github.com/aleju/imgaug/commit/56f7ac4edf8e8bfb0d796a4af4cc40b8ee65fdf9,Fix Affine translate type falsely dependent on float/int,4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(params[1], tuple)  # translate', 'params[1][0].value == 2  # translate', 'isinstance(aug.translate, tuple)', 'isinstance(aug.translate[0], iap.Uniform)', 'isinstance(aug.translate[0].a, iap.Deterministic)', 'isinstance(aug.translate[0].b, iap.Deterministic)', '0.7 - 1e-8 < aug.translate[0].a.value < 0.7 + 1e-8', '0.9 - 1e-8 < aug.translate[0].b.value < 0.9 + 1e-8', 'aug.translate[1] is None', 'aug.translate[2] == ', 'isinstance(aug.translate, tuple)', 'isinstance(aug.translate[0], iap.DiscreteUniform)', 'isinstance(aug.translate[0].a, iap.Deterministic)', 'isinstance(aug.translate[0].b, iap.Deterministic)', 'aug.translate[0].a.value == 1', 'aug.translate[0].b.value == 10', 'aug.translate[1] is None', 'aug.translate[2] == ', '10+10 <= kp_aug.x <= 10+20', '10+10 <= kp_aug.y <= 10+20']",[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(params[1], iap.Deterministic)  # translate', 'params[1].value == 2  # translate', 'isinstance(aug.translate, iap.Uniform)', 'isinstance(aug.translate.a, iap.Deterministic)', 'isinstance(aug.translate.b, iap.Deterministic)', '0.7 - 1e-8 < aug.translate.a.value < 0.7 + 1e-8', '0.9 - 1e-8 < aug.translate.b.value < 0.9 + 1e-8', 'isinstance(aug.translate, iap.DiscreteUniform)', 'isinstance(aug.translate.a, iap.Deterministic)', 'isinstance(aug.translate.b, iap.Deterministic)', 'aug.translate.a.value == 1', 'aug.translate.b.value == 10']",[],[],[],[],[],[],[],[],[],[],[],[]
2490,aleju,kontakt@ajung.name,2019-11-28 21:41:29+01:00,50864d19fc37d5e1ce3f295c9f3fa1ba2d8ed094,https://github.com/aleju/imgaug/commit/50864d19fc37d5e1ce3f295c9f3fa1ba2d8ed094,Fix WithPolarWarping not switching to deterministic mode,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2491,aleju,kontakt@ajung.name,2019-11-28 21:50:02+01:00,6dca5e7acc82f063df2c0801deffdea4e3f4b272,https://github.com/aleju/imgaug/commit/6dca5e7acc82f063df2c0801deffdea4e3f4b272,Add tests for get_children_lists() and to_deterministic(),5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['aug_det.deterministic', 'aug_det.random_state is not aug.random_state', 'aug_det.first.deterministic', 'aug_det.second.deterministic', 'identity1.deterministic_called is True', 'identity2.deterministic_called is True', 'len(children_lsts) == 1', 'len(children_lsts[0]) == 1', 'children_lsts[0][0] is child', 'aug_det.deterministic', 'aug_det.random_state is not aug.random_state', 'aug_det.children.deterministic', 'aug_det.children[0].deterministic', 'aug_det.deterministic', 'aug_det.random_state is not aug.random_state', 'aug_det.children.deterministic', 'aug_det.children[0].deterministic', 'aug_det.random_state is not aug.random_state', 'aug_det.deterministic', 'aug_det[0].deterministic', 'len(children_lsts) == 1', 'len(children_lsts[0]) == 1', 'children_lsts[0][0] is child', 'aug_det.random_state is not aug.random_state', 'aug_det.deterministic', 'aug_det[0].deterministic', 'len(children_lsts) == 1', 'len(children_lsts[0]) == 1', 'children_lsts[0][0] is child', 'aug_det.random_state is not aug.random_state', 'aug_det.deterministic', 'aug_det[0].deterministic', 'len(children_lsts) == 1', 'len(children_lsts[0]) == 1', 'children_lsts[0][0] is child', 'len(children_lsts) == 2', 'len(children_lsts[0]) == 1', 'len(children_lsts[1]) == 1', 'children_lsts[0][0] is child', 'children_lsts[1][0] is child2', 'aug_det.deterministic', 'aug_det.random_state is not aug.random_state', 'aug_det.then_list[0].deterministic', 'aug_det.else_list[0].deterministic', 'aug_det.deterministic', 'aug_det.random_state is not aug.random_state', 'aug_det.children[0].deterministic', 'len(children_lsts) == 1', 'len(children_lsts[0]) == 1', 'children_lsts[0][0] is child', 'aug_det.deterministic', 'aug_det.random_state is not aug.random_state', 'aug_det.children[0].deterministic']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2492,aleju,kontakt@ajung.name,2019-11-28 22:31:37+01:00,0d63e6e298faf02542d7be8932533cc4c8f1aef2,https://github.com/aleju/imgaug/commit/0d63e6e298faf02542d7be8932533cc4c8f1aef2,Fix hanging multicore augmentation in NixOS,3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class Test__switch_to_spawn_if_nixos(unittest.TestCase):'],[],[],[],[],[],"['IS_PY3,', 'IS_PY2,', 'IS_PY2,', 'IS_PY3,']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['mock_warn.call_count == 1', 'mock_ssm.call_count == 0']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2493,aleju,kontakt@ajung.name,2019-11-30 11:50:14+01:00,d9a51192778ee12fd2daada7b6189031e68c3507,https://github.com/aleju/imgaug/commit/d9a51192778ee12fd2daada7b6189031e68c3507,Add aspect ratio note to affine docstring,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2494,aleju,kontakt@ajung.name,2019-12-01 15:29:54+01:00,622ff29c9b1360667586b3f68de528ec41e13b54,https://github.com/aleju/imgaug/commit/622ff29c9b1360667586b3f68de528ec41e13b54,Fix image url,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2495,aleju,kontakt@ajung.name,2019-12-01 15:36:58+01:00,f3ad4fc1046819ffac1017f3d9be3c5d5f4c6da0,https://github.com/aleju/imgaug/commit/f3ad4fc1046819ffac1017f3d9be3c5d5f4c6da0,Fix note and warning declarations in docstrings,15,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2496,aleju,kontakt@ajung.name,2019-12-01 15:37:30+01:00,927baeff40503bc1683bb5988e16158c49754175,https://github.com/aleju/imgaug/commit/927baeff40503bc1683bb5988e16158c49754175,Add/rework examples & descriptions in docstrings,7,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2497,aleju,kontakt@ajung.name,2019-11-17 22:52:32+01:00,7566a909490ef0b227e97144ff9804d55b689a64,https://github.com/aleju/imgaug/commit/7566a909490ef0b227e97144ff9804d55b689a64,Enable multi-channel cvals in pad(),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(arr_pad[0, :, 0] == 0)', 'np.all(arr_pad[0, :, 1] == 1)', 'np.all(arr_pad[0, :, 2] == 2)', 'np.all(arr_pad[0, :, 3] == 3)', 'np.all(arr_pad[0, :, 4] == 4)', '_allclose(arr_pad[0, :, 0], 0)', '_allclose(arr_pad[0, :, 1], 1)', '_allclose(arr_pad[0, :, 2], 2)', '_allclose(arr_pad[0, :, 3], 3)', '_allclose(arr_pad[0, :, 4], 4)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2498,aleju,kontakt@ajung.name,2019-11-17 22:58:16+01:00,fc411a004e6dbdfbbb989254d32ea545ff7a0241,https://github.com/aleju/imgaug/commit/fc411a004e6dbdfbbb989254d32ea545ff7a0241,Add debug image function and debug augmenter,4,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],2,0,1,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class Test_draw_debug_image(unittest.TestCase):', 'class SaveDebugImageEveryNBatches(unittest.TestCase):']",[],['def setUp(self):'],[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['self._image_contains(image, debug_image)', 'self._image_contains(images[0, ...], debug_image)', 'self._image_contains(images[1, ...], debug_image)', 'self._image_contains(image1, debug_image)', 'self._image_contains(image2, debug_image)', 'self._image_contains(images[0, ...], debug_image)', 'self._image_contains(images[1, ...], debug_image)', 'self._image_contains(image1_w_overlay, debug_image)', 'self._image_contains(image2_w_overlay, debug_image)', 'self._image_contains(images[0, ...], debug_image)', 'self._image_contains(images[1, ...], debug_image)', 'self._image_contains(image1_w_overlay, debug_image)', 'self._image_contains(image2_w_overlay, debug_image)', 'self._image_contains(images[0, ...], debug_image)', 'self._image_contains(images[1, ...], debug_image)', 'self._image_contains(image1_w_overlay, debug_image)', 'self._image_contains(image2_w_overlay, debug_image)', 'self._image_contains(images[0, ...], debug_image)', 'self._image_contains(images[1, ...], debug_image)', 'self._image_contains(image1_w_overlay_c1, debug_image)', 'self._image_contains(image1_w_overlay_c2, debug_image)', 'self._image_contains(image2_w_overlay_c1, debug_image)', 'self._image_contains(image2_w_overlay_c2, debug_image)', 'self._image_contains(images[0, ...], debug_image)', 'self._image_contains(images[1, ...], debug_image)', 'self._image_contains(image1_w_overlay, debug_image)', 'self._image_contains(image2_w_overlay, debug_image)', 'self._image_contains(images[0, ...], debug_image)', 'self._image_contains(images[1, ...], debug_image)', 'self._image_contains(image1_w_overlay, debug_image)', 'self._image_contains(image2_w_overlay, debug_image)', 'self._image_contains(images[0, ...], debug_image)', 'self._image_contains(images[1, ...], debug_image)', 'self._image_contains(image1_w_overlay, debug_image)', 'self._image_contains(image2_w_overlay, debug_image)', 'self._image_contains(images[0, ...], debug_image)', 'self._image_contains(images[1, ...], debug_image)', 'self._image_contains(image1_w_overlay, debug_image)', 'self._image_contains(image2_w_overlay, debug_image)', 'self._image_contains((image * 255).astype(np.uint8),', 'self._image_contains((image * 255).astype(np.uint8), debug_image)', 'self._image_contains(image1_w_overlay, debug_image)', 'len(destination.received) == 2', 'np.array_equal(destination.received[0], expected)', 'np.array_equal(destination.received[1], expected)', 'len(list(os.listdir(folder_path))) == 3', 'os.path.isfile(path1)', 'os.path.isfile(path2)', 'os.path.isfile(path_latest)', 'np.array_equal(imageio.imread(path1), expected)', 'np.array_equal(imageio.imread(path2), expected)', 'np.array_equal(imageio.imread(path_latest), expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2499,aleju,kontakt@ajung.name,2019-12-01 18:00:48+01:00,bfe57fea64c5e665cd7ef58e43cc1e5c2ba6413e,https://github.com/aleju/imgaug/commit/bfe57fea64c5e665cd7ef58e43cc1e5c2ba6413e,Re-add support for lists of probs to dropout augs,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(nb_seen[0:3], nb_iterations*0.33, rtol=0, atol=75)', 'nb_seen[3] < 30']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2500,aleju,kontakt@ajung.name,2019-12-03 19:32:48+01:00,a3f4fcc160c7a7e36ed2e50763beb22d610291d4,https://github.com/aleju/imgaug/commit/a3f4fcc160c7a7e36ed2e50763beb22d610291d4,Fix CBA areas not shown in debug augmenter,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2501,aleju,kontakt@ajung.name,2019-12-03 19:35:09+01:00,5acdbb481f6b9febedb3d62a84eb3689015e5690,https://github.com/aleju/imgaug/commit/5acdbb481f6b9febedb3d62a84eb3689015e5690,Improve docstring examples,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2502,aleju,kontakt@ajung.name,2019-12-03 20:46:56+01:00,7efbebc275228cf29e9655c95bc162eeb7e22145,https://github.com/aleju/imgaug/commit/7efbebc275228cf29e9655c95bc162eeb7e22145,Fix BilateralBlur crashing for batches without imgs,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2503,aleju,kontakt@ajung.name,2019-12-18 00:33:54+01:00,582c109cc04a9203c02d3497349659137b037d1b,https://github.com/aleju/imgaug/commit/582c109cc04a9203c02d3497349659137b037d1b,Fix PiecewiseAff test failing in scipy 1.4.0,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['found'],[],[],[],[],[],[],[],[],[],[],[],[],"['np.sum([observed[:, :] == [0, 0, 0]]) > 0']",[],[],[],[],[],[],[],[],[],[],[],[]
2504,aleju,kontakt@ajung.name,2019-12-18 00:44:43+01:00,8902fc7fed5a82427b2041a51badd34d18cb1072,https://github.com/aleju/imgaug/commit/8902fc7fed5a82427b2041a51badd34d18cb1072,Fix deprecated call of scipy.fromfunction(),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2505,aleju,kontakt@ajung.name,2019-12-17 22:53:20+01:00,12a6ae45e399534a20350a1afb94f89c87a95d2d,https://github.com/aleju/imgaug/commit/12a6ae45e399534a20350a1afb94f89c87a95d2d,Fix deprecated import from collections,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2506,aleju,kontakt@ajung.name,2019-12-17 22:24:03+01:00,c3d99a420efc45652a1264920dc20378a54b1325,https://github.com/aleju/imgaug/commit/c3d99a420efc45652a1264920dc20378a54b1325,Use get_context() for NixOS spawn mode,3,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,4,0,0,0,0,1,0,0,0,0,0,4,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,['class Test__get_context(unittest.TestCase):'],[],[],[],[],[],"['not IS_SUPPORTING_CONTEXTS,', 'IS_SUPPORTING_CONTEXTS,', 'not IS_SUPPORTING_CONTEXTS,', 'IS_SUPPORTING_CONTEXTS,']",[],[],[],[],['class Test__switch_to_spawn_if_nixos(unittest.TestCase):'],[],[],[],[],[],"['IS_PY3,', 'IS_PY2,', 'IS_PY2,', 'IS_PY3,']",[],[],[],[],"['mock_warn.call_count == 1', 'ctx is multiprocessing', 'mock_gctx.call_count == 1', 'mock_gctx.call_args_list[0][0][0] is None', 'mock_Pool.call_args[0][1] is multicore._Pool_initialize_worker', 'mock_Pool.call_args[0][2] == (augseq, 123)', 'mock_Pool.call_args[0][3] == 4']",[],[],[],[],[],[],[],[],[],[],[],[],"['mock_warn.call_count == 1', 'mock_ssm.call_count == 0', 'mock_Pool.call_args[1][] == (augseq, 123)', 'mock_Pool.call_args[1][] == 4']",[],[],[],[],[],[],[],[],[],[],[],[]
2507,aleju,kontakt@ajung.name,2019-12-21 16:31:27+01:00,ed210e388b8bc715648f480f58db34979db2cea9,https://github.com/aleju/imgaug/commit/ed210e388b8bc715648f480f58db34979db2cea9,"Add in-place functions to coords-based augmentables

This patch adds in-place versions of existing
functions to coordinate-based augmentable classes,
i.e. keypoints, BBs, LineStrings and Polygons (both
single instances and *OnImage containers).
The in-place functions should improve performance
during augmentation by re-instantiating objects
less often.

Changes:
+ Add augmentables.utils.project_coords_()
+ Add setter for KeypointsOnImage.items
+ Add setter for BoundingBoxesOnImage.items
+ Add setter for LineStringsOnImage.items
+ Add setter for PolygonsOnImage.items
+ Add Keypoint.project_()
+ Add Keypoint.shift_()
+ Add KeypointsOnImage.on_()
+ Add KeypointsOnImage.remove_out_of_image_fraction_()
+ Add KeypointsOnImage.clip_out_of_image_fraction_()
+ Add KeypointsOnImage.shift_()
+ Add BoundingBox.project_()
+ Add BoundingBox.extend_()
+ Add BoundingBox.clip_out_of_image_()
+ Add BoundingBox.shift_()
+ Add BoundingBoxesOnImage.on_()
+ Add BoundingBoxesOnImage.clip_out_of_image_()
+ Add BoundingBoxesOnImage.remove_out_of_image_()
+ Add BoundingBoxesOnImage.remove_out_of_image_fraction_()
+ Add BoundingBoxesOnImage.shift_()
+ Add LineString.project_()
+ Add LineString.shift_()
+ Add LineStringsOnImage.on_()
+ Add LineStringsOnImage.remove_out_of_image_()
+ Add LineStringsOnImage.remove_out_of_image_fraction_()
+ Add LineStringsOnImage.clip_out_of_image_()
+ Add LineStringsOnImage.shift_()
+ Add Polygon.project_()
+ Add Polygon.shift_()
+ Add PolygonsOnImage.remove_out_of_image_()
+ Add PolygonsOnImage.remove_out_of_image_fraction_()
+ Add PolygonsOnImage.clip_out_of_image_()
+ Add PolygonsOnImage.shift_()
+ Add PolygonsOnImage.on_()
+ Add Polygon.subdivide_()
+ Add PolygonsOnImage.subdivide_()
+ Switch CBAOI augmentation to in-place calls
+ Switch BoundingBoxesOnImage.copy() to custom copy op
+ Switch KeypointsOnImage.copy() to custom copy op
+ Add bounding_boxes and shape args to BBSOI.copy()
+ Add bounding_boxes and shape args to BBSOI.deepcopy()
+ Add polygons and shape args to PSOI.copy()
+ Add polygons and shape args to PSOI.deepcopy()",15,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],29,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,391,0,0,0,0,0,0,0,0,0,0,0,0,260,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestBoundingBox_project_(unittest.TestCase):', 'class TestBoundingBox_extend_(unittest.TestCase):', 'class TestBoundingBox_clip_out_of_image_(unittest.TestCase):', 'class TestBoundingBox_shift_(unittest.TestCase):', 'class TestBoundingBoxesOnImage_items_setter(unittest.TestCase):', 'class TestBoundingBoxesOnImage_on_(unittest.TestCase):', 'class TestBoundingBoxesOnImage_clip_out_of_image_(unittest.TestCase):', 'class TestKeypoint_project_(unittest.TestCase):', 'class TestKeypoint_shift_(unittest.TestCase):', 'class TestKeypointsOnImage_items_setter(unittest.TestCase):', 'class TestKeypointsOnImage_on_(unittest.TestCase):', 'class TestKeypointsOnImage_shift_(unittest.TestCase):', 'class TestLineString_project_(unittest.TestCase):', 'class TestLineString_shift_(unittest.TestCase):', 'class TestLineStringsOnImage_items_setter(unittest.TestCase):', 'class TestLineStringsOnImage_on_(unittest.TestCase):', 'class TestLineStringsOnImage_remove_out_of_image_(unittest.TestCase):', 'class TestLineStringsOnImage_clip_out_of_image_(unittest.TestCase):', 'class TestLineStringsOnImage_shift_(unittest.TestCase):', 'class TestPolygon_project_(unittest.TestCase):', 'class TestPolygon_shift_(unittest.TestCase):', 'class TestPolygon_subdivide_(unittest.TestCase):', 'class TestPolygonsOnImage_items_setter(unittest.TestCase):', 'class TestPolygonsOnImage_on_(unittest.TestCase):', 'class TestPolygonsOnImage_remove_out_of_image_(unittest.TestCase):', 'class TestPolygonsOnImage_remove_out_of_image_fraction_(unittest.TestCase):', 'class TestPolygonsOnImage_clip_out_of_image_(unittest.TestCase):', 'class TestPolygonsOnImage_shift_(unittest.TestCase):', 'class TestPolygonsOnImage_subdivide_(unittest.TestCase):']",[],[],[],[],[],[],[],[],[],[],"['class TestPolygon_project(unittest.TestCase):', 'class TestPolygon_shift(unittest.TestCase):', 'class TestPolygon_subdivide(unittest.TestCase):', 'class TestPolygonsOnImage_on(unittest.TestCase):', 'class TestPolygonsOnImage_remove_out_of_image(unittest.TestCase):', 'class TestPolygonsOnImage_clip_out_of_image(unittest.TestCase):', 'class TestPolygonsOnImage_shift(unittest.TestCase):', 'class TestPolygonsOnImage_subdivide(unittest.TestCase):']",[],[],[],[],[],[],[],[],[],[],"['np.isclose(bb2.y1, 10)', 'np.isclose(bb2.x1, 20)', 'np.isclose(bb2.y2, 30)', 'np.isclose(bb2.x2, 40)', 'np.isclose(bb2.y1, 10*2)', 'np.isclose(bb2.x1, 20*2)', 'np.isclose(bb2.y2, 30*2)', 'np.isclose(bb2.x2, 40*2)', 'np.isclose(bb2.y1, 10*0.5)', 'np.isclose(bb2.x1, 20*0.5)', 'np.isclose(bb2.y2, 30*0.5)', 'np.isclose(bb2.x2, 40*0.5)', 'np.isclose(bb2.y1, 10*1)', 'np.isclose(bb2.x1, 20*2)', 'np.isclose(bb2.y2, 30*1)', 'np.isclose(bb2.x2, 40*2)', 'np.isclose(bb2.y1, 10*2)', 'np.isclose(bb2.x1, 20*1)', 'np.isclose(bb2.y2, 30*2)', 'np.isclose(bb2.x2, 40*1)', 'bb2 is bb', 'bb2 is not bb', 'bb2.y1 == 10-1', 'bb2.y2 == 30+1', 'bb2.x1 == 20-1', 'bb2.x2 == 40+1', 'bb2.y1 == 10-(-1)', 'bb2.y2 == 30+(-1)', 'bb2.x1 == 20-(-1)', 'bb2.x2 == 40+(-1)', 'bb2.y1 == 10-1', 'bb2.y2 == 30+0', 'bb2.x1 == 20-0', 'bb2.x2 == 40+0', 'bb2.y1 == 10-0', 'bb2.y2 == 30+0', 'bb2.x1 == 20-0', 'bb2.x2 == 40+1', 'bb2.y1 == 10-0', 'bb2.y2 == 30+1', 'bb2.x1 == 20-0', 'bb2.x2 == 40+0', 'bb2.y1 == 10-0', 'bb2.y2 == 30+0', 'bb2.x1 == 20-1', 'bb2.x2 == 40+0', 'bb2 is bb', 'bb2 is not bb', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', 'bb_cut.y2 == 30', 'bb_cut.x2 == 40', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', 'bb_cut.y2 == 30', 'bb_cut.x2 == 40', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', 'np.isclose(bb_cut.y2, 20)', 'bb_cut.x2 == 40', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', 'bb_cut.y2 == 30', 'np.isclose(bb_cut.x2, 30)', 'bb2 is bb', 'bb2 is not bb', 'bb_top.y1 == 10', 'bb_top.x1 == 20', 'bb_top.y2 == 30', 'bb_top.x2 == 40', 'bb_right.y1 == 10', 'bb_right.x1 == 20', 'bb_right.y2 == 30', 'bb_right.x2 == 40', 'bb_bottom.y1 == 10', 'bb_bottom.x1 == 20', 'bb_bottom.y2 == 30', 'bb_bottom.x2 == 40', 'bb_left.y1 == 10', 'bb_left.x1 == 20', 'bb_left.y2 == 30', 'bb_left.x2 == 40', 'bb_top.y1 == 10+1', 'bb_top.x1 == 20', 'bb_top.y2 == 30+1', 'bb_top.x2 == 40', 'bb_right.y1 == 10', 'bb_right.x1 == 20-1', 'bb_right.y2 == 30', 'bb_right.x2 == 40-1', 'bb_bottom.y1 == 10-1', 'bb_bottom.x1 == 20', 'bb_bottom.y2 == 30-1', 'bb_bottom.x2 == 40', 'bb_left.y1 == 10', 'bb_left.x1 == 20+1', 'bb_left.y2 == 30', 'bb_left.x2 == 40+1', 'bb_top.y1 == 10-1', 'bb_top.x1 == 20', 'bb_top.y2 == 30-1', 'bb_top.x2 == 40', 'bb_right.y1 == 10', 'bb_right.x1 == 20+1', 'bb_right.y2 == 30', 'bb_right.x2 == 40+1', 'bb_bottom.y1 == 10+1', 'bb_bottom.x1 == 20', 'bb_bottom.y2 == 30+1', 'bb_bottom.x2 == 40', 'bb_left.y1 == 10', 'bb_left.x1 == 20-1', 'bb_left.y2 == 30', 'bb_left.x2 == 40-1', 'bb_mix.y1 == 10+1-2', 'bb_mix.x1 == 20+3-4', 'bb_mix.y2 == 30+3-4', 'bb_mix.x2 == 40+1-2', 'bb2 is bb', 'bb2 is not bb', 'np.isclose(factor, 1.0)', 'bb.is_fully_within_image((100, 100, 3)) is True', 'bb.is_fully_within_image((20, 100, 3)) is False', 'bb.is_fully_within_image((100, 30, 3)) is False', 'bb.is_fully_within_image((1, 1, 3)) is False', 'bb.is_partly_within_image((100, 100, 3)) is True', 'bb.is_partly_within_image((20, 100, 3)) is True', 'bb.is_partly_within_image((100, 30, 3)) is True', 'bb.is_partly_within_image((1, 1, 3)) is False', 'observed is expected', 'np.all([', 'bbsoi_projected.bounding_boxes[0].y1 == 10', 'bbsoi_projected.bounding_boxes[0].x1 == 20', 'bbsoi_projected.bounding_boxes[0].y2 == 30', 'bbsoi_projected.bounding_boxes[0].x2 == 40', 'bbsoi_projected.bounding_boxes[1].y1 == 15', 'bbsoi_projected.bounding_boxes[1].x1 == 25', 'bbsoi_projected.bounding_boxes[1].y2 == 35', 'bbsoi_projected.bounding_boxes[1].x2 == 45', 'bbsoi_projected.shape == (40, 50)', 'bbsoi_projected.bounding_boxes[0].y1 == 10*2', 'bbsoi_projected.bounding_boxes[0].x1 == 20*2', 'bbsoi_projected.bounding_boxes[0].y2 == 30*2', 'bbsoi_projected.bounding_boxes[0].x2 == 40*2', 'bbsoi_projected.bounding_boxes[1].y1 == 15*2', 'bbsoi_projected.bounding_boxes[1].x1 == 25*2', 'bbsoi_projected.bounding_boxes[1].y2 == 35*2', 'bbsoi_projected.bounding_boxes[1].x2 == 45*2', 'bbsoi_projected.shape == (40*2, 50*2, 3)', 'bbsoi_projected.bounding_boxes[0].y1 == 10*2', 'bbsoi_projected.bounding_boxes[0].x1 == 20*2', 'bbsoi_projected.bounding_boxes[0].y2 == 30*2', 'bbsoi_projected.bounding_boxes[0].x2 == 40*2', 'bbsoi_projected.bounding_boxes[1].y1 == 15*2', 'bbsoi_projected.bounding_boxes[1].x1 == 25*2', 'bbsoi_projected.bounding_boxes[1].y2 == 35*2', 'bbsoi_projected.bounding_boxes[1].x2 == 45*2', 'bbsoi_projected.shape == (40*2, 50*2, 3)', 'bbsoi2 is bbsoi', 'bbsoi2 is not bbsoi', 'len(bbsoi_clip.bounding_boxes) == 2', 'bbsoi_clip.bounding_boxes[0].y1 == 10', 'bbsoi_clip.bounding_boxes[0].x1 == 20', 'bbsoi_clip.bounding_boxes[0].y2 == 30', 'bbsoi_clip.bounding_boxes[0].x2 == 40', 'bbsoi_clip.bounding_boxes[1].y1 == 15', 'bbsoi_clip.bounding_boxes[1].x1 == 25', 'bbsoi_clip.bounding_boxes[1].y2 == 35', 'np.isclose(bbsoi_clip.bounding_boxes[1].x2, 50)', 'bbsoi2 is bbsoi', 'bbsoi2 is not bbsoi', 'len(bbsoi_removed.bounding_boxes) == 1', 'bbsoi_removed.bounding_boxes[0] == bb1', 'bbsoi_removed is bbsoi', 'bbsoi_removed is not bbsoi', 'len(cbaoi_reduced.items) == 2', 'cbaoi_reduced.items == [item1, item2]', 'cbaoi_reduced is cbaoi', 'cbaoi_reduced is not cbaoi', 'len(bbsoi_shifted.bounding_boxes) == 2', 'bbsoi_shifted.bounding_boxes[0].y1 == 10', 'bbsoi_shifted.bounding_boxes[0].x1 == 20 - 1', 'bbsoi_shifted.bounding_boxes[0].y2 == 30', 'bbsoi_shifted.bounding_boxes[0].x2 == 40 - 1', 'bbsoi_shifted.bounding_boxes[1].y1 == 15', 'bbsoi_shifted.bounding_boxes[1].x1 == 25 - 1', 'bbsoi_shifted.bounding_boxes[1].y2 == 35', 'bbsoi_shifted.bounding_boxes[1].x2 == 51 - 1', 'bbsoi_shifted is bbsoi', 'bbsoi_shifted is not bbsoi', 'bbsoi_copy is not bbsoi', 'bbsoi_copy.shape == (40, 50, 3)', 'bbsoi_copy.bounding_boxes == [bb3]', 'bbsoi_copy is not bbsoi', 'bbsoi_copy.shape == (40+1, 50+1, 3)', 'bbsoi_copy.bounding_boxes == [bb1, bb2]', 'bbsoi_copy is not bbsoi', 'bbsoi_copy.shape == (40, 50, 3)', 'bbsoi_copy.bounding_boxes == [bb3]', 'bbsoi_copy is not bbsoi', 'bbsoi_copy.shape == (40+1, 50+1, 3)', 'len(bbsoi_copy.bounding_boxes) == 2', 'bbsoi_copy.bounding_boxes[0].coords_almost_equals(bb1)', 'bbsoi_copy.bounding_boxes[1].coords_almost_equals(bb2)', 'kp2.y == 1', 'kp2.x == 2', 'kp2.y == 2', 'kp2.x == 2', 'kp2.y == 1', 'kp2.x == 4', 'kp2.y == 2', 'kp2.x == 4', 'kp is kp2', 'kp is not kp2', 'kp2.y == 2', 'kp2.x == 2', 'kp2.y == 0', 'kp2.x == 2', 'kp2.y == 1', 'kp2.x == 3', 'kp2.y == 1', 'kp2.x == 1', 'kp2.y == 2', 'kp2.x == 4', 'kp is kp2', 'kp is not kp2', 'np.all([', 'np.all([', 'kpi2.shape == (10, 20, 3)', 'kpi2.keypoints[0].x == 2', 'kpi2.keypoints[0].y == 4', 'kpi2.keypoints[1].x == 6', 'kpi2.keypoints[1].y == 8', 'kpi2.shape == (20, 40, 3)', 'kpi2.keypoints[0].x == 2', 'kpi2.keypoints[0].y == 4', 'kpi2.keypoints[1].x == 6', 'kpi2.keypoints[1].y == 8', 'kpi2.shape == image.shape', 'kpi is kpi2', 'kpi is not kpi2', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[0].x == 1 + 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[1].x == 3 + 1', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[0].x == 1 - 1', 'kpi2.keypoints[0].y == 2', 'kpi2.keypoints[1].x == 3 - 1', 'kpi2.keypoints[1].y == 4', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[0].y == 2 + 1', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[1].y == 4 + 1', 'kpi2.keypoints[0].x == 1', 'kpi2.keypoints[0].y == 2 - 1', 'kpi2.keypoints[1].x == 3', 'kpi2.keypoints[1].y == 4 - 1', 'kpi2.keypoints[0].x == 1 + 1', 'kpi2.keypoints[0].y == 2 + 2', 'kpi2.keypoints[1].x == 3 + 1', 'kpi2.keypoints[1].y == 4 + 2', 'kpi is kpi2', 'kpi is not kpi2', 'np.allclose(cbaoi_reduced.to_xy_array(), [item1.xy])', 'cbaoi_reduced is cbaoi', 'cbaoi_reduced is not cbaoi', 'len(cbaoi.items) == 2', 'kpsoi_copy is not kpsoi', 'kpsoi_copy.shape == (40, 50, 3)', 'kpsoi_copy.keypoints == [kp3]', 'kpsoi_copy is not kpsoi', 'kpsoi_copy.shape == (40+1, 50+1, 3)', 'kpsoi_copy.keypoints == [kp1, kp2]', 'kpsoi_copy is not kpsoi', 'kpsoi_copy.shape == (40, 50, 3)', 'kpsoi_copy.keypoints == [kp3]', 'kpsoi_copy is not kpsoi', 'kpsoi_copy.shape == (40+1, 50+1, 3)', 'len(kpsoi_copy.keypoints) == 2', 'kpsoi_copy.keypoints[0].coords_almost_equals(kp1)', 'kpsoi_copy.keypoints[1].coords_almost_equals(kp2)', 'np.allclose(ls_proj.coords, [(0, 0), (2, 0), (4, 2)])', 'np.allclose(ls_proj.coords, [(0, 0), (2, 0), (4, 1)])', 'np.allclose(ls_proj.coords, [(0, 0), (1, 0), (2, 2)])', 'ls is ls2', 'ls is not ls2', 'self._func(ls.deepcopy(), top=1).coords_almost_equals(', 'self._func(ls.deepcopy(), right=1).coords_almost_equals(', 'self._func(ls.deepcopy(), bottom=1).coords_almost_equals(', 'self._func(ls.deepcopy(), left=1).coords_almost_equals(', 'self._func(ls.deepcopy(), top=-1).coords_almost_equals(', 'self._func(ls.deepcopy(), right=-1).coords_almost_equals(', 'self._func(ls.deepcopy(), bottom=-1).coords_almost_equals(', 'self._func(ls.deepcopy(), left=-1).coords_almost_equals(', 'self._func(', 'self._func(', 'ls is ls2', 'ls is not ls2', 'np.all([', 'np.all([ls_a.coords_almost_equals(ls_b)', 'lsoi_proj.shape == (100, 100, 3)', 'lsoi_proj.line_strings[0].coords_almost_equals(', 'lsoi_proj.line_strings[1].coords_almost_equals(', 'lsoi_proj.shape == (200, 200, 3)', 'len(lsoi_proj.line_strings) == 0', 'lsoi_proj.shape == (200, 200, 3)', 'lsoi is lsoi2', 'lsoi is not lsoi2', 'len(observed.line_strings) == 2', 'observed.line_strings[0] is ls1', 'observed.line_strings[1] is ls2', 'len(observed.line_strings) == 0', 'observed.shape == (100, 100, 3)', 'len(observed.line_strings) == 0', 'observed.shape == (100, 100, 3)', 'len(observed.line_strings) == 1', 'observed.line_strings[0] is ls1', 'observed.shape == (100, 100, 3)', 'len(observed.line_strings) == 0', 'observed.shape == (100, 100, 3)', 'len(observed.line_strings) == 0', 'observed.shape == (100, 100, 3)', 'len(observed.line_strings) == 1', 'observed.line_strings[0] is ls1', 'observed.shape == (100, 100, 3)', 'lsoi is lsoi2', 'lsoi is not lsoi2', 'len(lsoi.line_strings) == len(expected)', 'ls_obs.coords_almost_equals(ls_exp)', 'observed.shape == (100, 100, 3)', 'len(observed.line_strings) == 0', 'observed.shape == (100, 100, 3)', 'len(observed.line_strings) == 0', 'observed.shape == (100, 100, 3)', 'len(observed.line_strings) == 0', 'observed.shape == (100, 100, 3)', 'lsoi is lsoi2', 'lsoi is not lsoi2', 'observed.line_strings[0].coords_almost_equals(', 'observed.line_strings[1].coords_almost_equals(', 'observed.shape == (100, 100, 3)', 'len(observed.line_strings) == 0', 'observed.shape == (100, 100, 3)', 'lsoi is lsoi2', 'lsoi is not lsoi2', 'len(cbaoi_reduced.items) == 2', 'cbaoi_reduced.items == [item1, item2]', 'cbaoi_reduced is cbaoi', 'cbaoi_reduced is not cbaoi', 'poly is poly2', 'poly is not poly2', 'poly is poly2', 'poly is not poly2', 'np.allclose(poly.exterior, np.float32([', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly is poly2', 'poly is not poly2', 'np.all([', 'poly_oi_rm is poly_oi', 'poly_oi_rm is not poly_oi', 'len(cbaoi_reduced.items) == 2', 'cbaoi_reduced.items == [item1, item2]', 'cbaoi_reduced is cbaoi', 'cbaoi_reduced is not cbaoi', 'poly_oi_clip is poly_oi', 'poly_oi_clip is not poly_oi', 'poly_oi_shifted is poly_oi', 'poly_oi_shifted is not poly_oi', 'poly_oi_sub is poly_oi', 'poly_oi_sub is not poly_oi', 'mock_sub.call_count == 0', 'poly_oi_sub.items != []', 'psoi_copy is not psoi', 'psoi_copy.shape == (40, 50, 3)', 'psoi_copy.polygons == [poly3]', 'psoi_copy is not psoi', 'psoi_copy.shape == (40+1, 50+1, 3)', 'psoi_copy.polygons == [poly1, poly2]', 'psoi_copy is not psoi', 'psoi_copy.shape == (40, 50, 3)', 'len(psoi_copy.polygons) == 1', 'psoi_copy.polygons[0].coords_almost_equals(poly3)', 'psoi_copy is not psoi', 'psoi_copy.shape == (40+1, 50+1, 3)', 'len(psoi_copy.polygons) == 2', 'psoi_copy.polygons[0].coords_almost_equals(poly1)', 'psoi_copy.polygons[1].coords_almost_equals(poly2)']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.isclose(bb2.y1, 10)', 'np.isclose(bb2.x1, 20)', 'np.isclose(bb2.y2, 30)', 'np.isclose(bb2.x2, 40)', 'np.isclose(bb2.y1, 10*2)', 'np.isclose(bb2.x1, 20*2)', 'np.isclose(bb2.y2, 30*2)', 'np.isclose(bb2.x2, 40*2)', 'np.isclose(bb2.y1, 10*0.5)', 'np.isclose(bb2.x1, 20*0.5)', 'np.isclose(bb2.y2, 30*0.5)', 'np.isclose(bb2.x2, 40*0.5)', 'np.isclose(bb2.y1, 10*1)', 'np.isclose(bb2.x1, 20*2)', 'np.isclose(bb2.y2, 30*1)', 'np.isclose(bb2.x2, 40*2)', 'np.isclose(bb2.y1, 10*2)', 'np.isclose(bb2.x1, 20*1)', 'np.isclose(bb2.y2, 30*2)', 'np.isclose(bb2.x2, 40*1)', 'bb2.y1 == 10-1', 'bb2.y2 == 30+1', 'bb2.x1 == 20-1', 'bb2.x2 == 40+1', 'bb2.y1 == 10-(-1)', 'bb2.y2 == 30+(-1)', 'bb2.x1 == 20-(-1)', 'bb2.x2 == 40+(-1)', 'bb2.y1 == 10-1', 'bb2.y2 == 30+0', 'bb2.x1 == 20-0', 'bb2.x2 == 40+0', 'bb2.y1 == 10-0', 'bb2.y2 == 30+0', 'bb2.x1 == 20-0', 'bb2.x2 == 40+1', 'bb2.y1 == 10-0', 'bb2.y2 == 30+1', 'bb2.x1 == 20-0', 'bb2.x2 == 40+0', 'bb2.y1 == 10-0', 'bb2.y2 == 30+0', 'bb2.x1 == 20-1', 'bb2.x2 == 40+0', 'np.isclose(factor, 1.0)', 'bb.is_fully_within_image((100, 100, 3)) is True', 'bb.is_fully_within_image((20, 100, 3)) is False', 'bb.is_fully_within_image((100, 30, 3)) is False', 'bb.is_fully_within_image((1, 1, 3)) is False', 'bb.is_partly_within_image((100, 100, 3)) is True', 'bb.is_partly_within_image((20, 100, 3)) is True', 'bb.is_partly_within_image((100, 30, 3)) is True', 'bb.is_partly_within_image((1, 1, 3)) is False', 'observed is expected', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', 'bb_cut.y2 == 30', 'bb_cut.x2 == 40', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', 'bb_cut.y2 == 30', 'bb_cut.x2 == 40', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', 'np.isclose(bb_cut.y2, 20)', 'bb_cut.x2 == 40', 'bb_cut.y1 == 10', 'bb_cut.x1 == 20', 'bb_cut.y2 == 30', 'np.isclose(bb_cut.x2, 30)', 'bb_top.y1 == 10', 'bb_top.x1 == 20', 'bb_top.y2 == 30', 'bb_top.x2 == 40', 'bb_right.y1 == 10', 'bb_right.x1 == 20', 'bb_right.y2 == 30', 'bb_right.x2 == 40', 'bb_bottom.y1 == 10', 'bb_bottom.x1 == 20', 'bb_bottom.y2 == 30', 'bb_bottom.x2 == 40', 'bb_left.y1 == 10', 'bb_left.x1 == 20', 'bb_left.y2 == 30', 'bb_left.x2 == 40', 'bb_top.y1 == 10+1', 'bb_top.x1 == 20', 'bb_top.y2 == 30+1', 'bb_top.x2 == 40', 'bb_right.y1 == 10', 'bb_right.x1 == 20-1', 'bb_right.y2 == 30', 'bb_right.x2 == 40-1', 'bb_bottom.y1 == 10-1', 'bb_bottom.x1 == 20', 'bb_bottom.y2 == 30-1', 'bb_bottom.x2 == 40', 'bb_left.y1 == 10', 'bb_left.x1 == 20+1', 'bb_left.y2 == 30', 'bb_left.x2 == 40+1', 'bb_top.y1 == 10-1', 'bb_top.x1 == 20', 'bb_top.y2 == 30-1', 'bb_top.x2 == 40', 'bb_right.y1 == 10', 'bb_right.x1 == 20+1', 'bb_right.y2 == 30', 'bb_right.x2 == 40+1', 'bb_bottom.y1 == 10+1', 'bb_bottom.x1 == 20', 'bb_bottom.y2 == 30+1', 'bb_bottom.x2 == 40', 'bb_left.y1 == 10', 'bb_left.x1 == 20-1', 'bb_left.y2 == 30', 'bb_left.x2 == 40-1', 'bb_mix.y1 == 10+1-2', 'bb_mix.x1 == 20+3-4', 'bb_mix.y2 == 30+3-4', 'bb_mix.x2 == 40+1-2', 'bbsoi_projected.bounding_boxes[0].y1 == 10', 'bbsoi_projected.bounding_boxes[0].x1 == 20', 'bbsoi_projected.bounding_boxes[0].y2 == 30', 'bbsoi_projected.bounding_boxes[0].x2 == 40', 'bbsoi_projected.bounding_boxes[1].y1 == 15', 'bbsoi_projected.bounding_boxes[1].x1 == 25', 'bbsoi_projected.bounding_boxes[1].y2 == 35', 'bbsoi_projected.bounding_boxes[1].x2 == 45', 'bbsoi_projected.bounding_boxes[0].y1 == 10*2', 'bbsoi_projected.bounding_boxes[0].x1 == 20*2', 'bbsoi_projected.bounding_boxes[0].y2 == 30*2', 'bbsoi_projected.bounding_boxes[0].x2 == 40*2', 'bbsoi_projected.bounding_boxes[1].y1 == 15*2', 'bbsoi_projected.bounding_boxes[1].x1 == 25*2', 'bbsoi_projected.bounding_boxes[1].y2 == 35*2', 'bbsoi_projected.bounding_boxes[1].x2 == 45*2', 'bbsoi_projected.bounding_boxes[0].y1 == 10*2', 'bbsoi_projected.bounding_boxes[0].x1 == 20*2', 'bbsoi_projected.bounding_boxes[0].y2 == 30*2', 'bbsoi_projected.bounding_boxes[0].x2 == 40*2', 'bbsoi_projected.bounding_boxes[1].y1 == 15*2', 'bbsoi_projected.bounding_boxes[1].x1 == 25*2', 'bbsoi_projected.bounding_boxes[1].y2 == 35*2', 'bbsoi_projected.bounding_boxes[1].x2 == 45*2', 'len(bbsoi_clip.bounding_boxes) == 2', 'bbsoi_clip.bounding_boxes[0].y1 == 10', 'bbsoi_clip.bounding_boxes[0].x1 == 20', 'bbsoi_clip.bounding_boxes[0].y2 == 30', 'bbsoi_clip.bounding_boxes[0].x2 == 40', 'bbsoi_clip.bounding_boxes[1].y1 == 15', 'bbsoi_clip.bounding_boxes[1].x1 == 25', 'bbsoi_clip.bounding_boxes[1].y2 == 35', 'np.isclose(bbsoi_clip.bounding_boxes[1].x2, 50)', 'kp2.y == 1', 'kp2.x == 2', 'kp2.y == 2', 'kp2.x == 2', 'kp2.y == 1', 'kp2.x == 4', 'kp2.y == 2', 'kp2.x == 4', 'kp2.y == 2', 'kp2.x == 2', 'kp2.y == 0', 'kp2.x == 2', 'kp2.y == 1', 'kp2.x == 3', 'kp2.y == 1', 'kp2.x == 1', 'kp2.y == 2', 'kp2.x == 4', 'np.all([', 'kpi2.keypoints[0].x == 2', 'kpi2.keypoints[0].y == 4', 'kpi2.keypoints[1].x == 6', 'kpi2.keypoints[1].y == 8', 'kpi2.keypoints[0].x == 2', 'kpi2.keypoints[0].y == 4', 'kpi2.keypoints[1].x == 6', 'kpi2.keypoints[1].y == 8', 'cbaoi_reduced.items == [item1]', 'kpi2.keypoints[0].x == kpi.keypoints[0].x', 'kpi2.keypoints[0].y == kpi.keypoints[0].y', 'kpi2.keypoints[1].x == kpi.keypoints[1].x', 'kpi2.keypoints[1].y == kpi.keypoints[1].y', 'kpi2.keypoints[0].x == kpi.keypoints[0].x + 1', 'kpi2.keypoints[0].y == kpi.keypoints[0].y', 'kpi2.keypoints[1].x == kpi.keypoints[1].x + 1', 'kpi2.keypoints[1].y == kpi.keypoints[1].y', 'kpi2.keypoints[0].x == kpi.keypoints[0].x - 1', 'kpi2.keypoints[0].y == kpi.keypoints[0].y', 'kpi2.keypoints[1].x == kpi.keypoints[1].x - 1', 'kpi2.keypoints[1].y == kpi.keypoints[1].y', 'kpi2.keypoints[0].x == kpi.keypoints[0].x', 'kpi2.keypoints[0].y == kpi.keypoints[0].y + 1', 'kpi2.keypoints[1].x == kpi.keypoints[1].x', 'kpi2.keypoints[1].y == kpi.keypoints[1].y + 1', 'kpi2.keypoints[0].x == kpi.keypoints[0].x', 'kpi2.keypoints[0].y == kpi.keypoints[0].y - 1', 'kpi2.keypoints[1].x == kpi.keypoints[1].x', 'kpi2.keypoints[1].y == kpi.keypoints[1].y - 1', 'kpi2.keypoints[0].x == kpi.keypoints[0].x + 1', 'kpi2.keypoints[0].y == kpi.keypoints[0].y + 2', 'kpi2.keypoints[1].x == kpi.keypoints[1].x + 1', 'kpi2.keypoints[1].y == kpi.keypoints[1].y + 2', 'np.allclose(ls_proj.coords, [(0, 0), (2, 0), (4, 2)])', 'np.allclose(ls_proj.coords, [(0, 0), (2, 0), (4, 1)])', 'np.allclose(ls_proj.coords, [(0, 0), (1, 0), (2, 2)])', 'ls.shift(top=1).coords_almost_equals(', 'ls.shift(right=1).coords_almost_equals(', 'ls.shift(bottom=1).coords_almost_equals(', 'ls.shift(left=1).coords_almost_equals(', 'ls.shift(top=-1).coords_almost_equals(', 'ls.shift(right=-1).coords_almost_equals(', 'ls.shift(bottom=-1).coords_almost_equals(', 'ls.shift(left=-1).coords_almost_equals(', 'ls.shift(top=1, right=2, bottom=3, left=4).coords_almost_equals(', 'ls.shift(top=1, right=2, bottom=3, left=4).coords_almost_equals(', 'np.all([ls_a.coords_almost_equals(ls_b)', 'lsoi_proj.shape == (100, 100, 3)', 'lsoi_proj.line_strings[0].coords_almost_equals(', 'lsoi_proj.line_strings[1].coords_almost_equals(', 'lsoi_proj.shape == (200, 200, 3)', 'len(lsoi_proj.line_strings) == 0', 'lsoi_proj.shape == (200, 200, 3)', 'len(observed.line_strings) == 2', 'observed.line_strings[0] is ls1', 'observed.line_strings[1] is ls2', 'len(observed.line_strings) == 0', 'observed.shape == (100, 100, 3)', 'len(observed.line_strings) == 0', 'observed.shape == (100, 100, 3)', 'len(observed.line_strings) == 1', 'observed.line_strings[0] is ls1', 'observed.shape == (100, 100, 3)', 'len(observed.line_strings) == 0', 'observed.shape == (100, 100, 3)', 'len(observed.line_strings) == 0', 'observed.shape == (100, 100, 3)', 'len(observed.line_strings) == 1', 'observed.line_strings[0] is ls1', 'observed.shape == (100, 100, 3)', 'len(lsoi.line_strings) == len(expected)', 'ls_obs.coords_almost_equals(ls_exp)', 'observed.shape == (100, 100, 3)', 'len(observed.line_strings) == 0', 'observed.shape == (100, 100, 3)', 'len(observed.line_strings) == 0', 'observed.shape == (100, 100, 3)', 'len(observed.line_strings) == 0', 'observed.shape == (100, 100, 3)', 'observed.line_strings[0].coords_almost_equals(', 'observed.line_strings[1].coords_almost_equals(', 'observed.shape == (100, 100, 3)', 'len(observed.line_strings) == 0', 'observed.shape == (100, 100, 3)', 'np.allclose(poly.exterior, np.float32([', 'np.allclose(poly_shifted.exterior, np.float32([']",[],[],[],[],[],[],[],[],[],[],[],[]
2508,aleju,kontakt@ajung.name,2019-12-21 18:27:17+01:00,a2d207088611ed8849f5124eb0257e78bff3b688,https://github.com/aleju/imgaug/commit/a2d207088611ed8849f5124eb0257e78bff3b688,Fix Jigsaw test failing,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['dist < 0.8'],[],[],[],[],[],[],[],[],[],[],[],[],['dist < 1.5'],[],[],[],[],[],[],[],[],[],[],[],[]
2509,aleju,kontakt@ajung.name,2019-12-22 22:47:36+01:00,85a6948ba2cd27c286beb0f8b73f8a2ddbd0dd70,https://github.com/aleju/imgaug/commit/85a6948ba2cd27c286beb0f8b73f8a2ddbd0dd70,Fix crashes in numpy 1.18,21,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2510,aleju,kontakt@ajung.name,2019-12-23 16:21:20+01:00,35a8d337a0ff7fa4fa1f16ce43892c19fca7e80b,https://github.com/aleju/imgaug/commit/35a8d337a0ff7fa4fa1f16ce43892c19fca7e80b,Fix OpenCV hanging endlessly in multicore aug,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2511,aleju,kontakt@ajung.name,2019-12-24 11:15:29+01:00,bed9251aadc923487c23c10adb83ea2d48e495aa,https://github.com/aleju/imgaug/commit/bed9251aadc923487c23c10adb83ea2d48e495aa,Fix docstring errors,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2512,aleju,kontakt@ajung.name,2019-12-30 10:22:11+01:00,b7e1717cba9bd039c9e6c55ca48e5b58dadefe50,https://github.com/aleju/imgaug/commit/b7e1717cba9bd039c9e6c55ca48e5b58dadefe50,"Remove 'dont import from this module' messages

The docstring of each module in imgaug.augmenters
previously included a suggestion to not directly
import from that module, but instead use
imgaug.augmenters.<AugmenterName>. That was due
to the categorization being still unstable.

As the categorization has now been fairly stable
for a long time, the suggestion is removed with
this patch.",17,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2513,aleju,kontakt@ajung.name,2019-12-30 11:01:25+01:00,7385a8ec560dc8acf6a81a19731cffc2f6b6592c,https://github.com/aleju/imgaug/commit/7385a8ec560dc8acf6a81a19731cffc2f6b6592c,"Deprecate AffineCv2 in favor of Affine

The augmenter `imgaug.augmenters.geometric.AffineCv2` was not properly
maintained for quite a while and its functionality is already covered
by `imgaug.augmenters.geometric.Affine` using parameter
`backend='cv2'`. Hence, this patch marks it as deprecated.
Use `Affine` instead.",3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,247,0,0,0,0,0,0,0,0,0,0,0,0,246,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['in str(caught_warnings[0].message)', 'np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'array_equal_lists(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y > 2', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y > 2', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y == 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y == 2', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y == 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y == 2', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0].keypoints[0].x == 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x == 2', 'observed[0].keypoints[2].y > 2', 'observed[0].keypoints[0].x == 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x == 2', 'observed[0].keypoints[2].y > 2', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'nb_changed_aug >= int(nb_iterations * 0.8)', 'nb_changed_aug_det == 0', 'isinstance(aug.scale, iap.Uniform)', 'isinstance(aug.scale.a, iap.Deterministic)', 'isinstance(aug.scale.b, iap.Deterministic)', '0.7 - 1e-8 < aug.scale.a.value < 0.7 + 1e-8', '0.9 - 1e-8 < aug.scale.b.value < 0.9 + 1e-8', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'len(observed_aug[0].nonzero()[0]) == 1', 'len(observed_aug_det[0].nonzero()[0]) == 1', 'nb_changed_aug >= int(nb_iterations * 0.7)', 'nb_changed_aug_det == 0', '(centers_aug > int(nb_iterations * (1/9 * 0.6))).all()', '(centers_aug < int(nb_iterations * (1/9 * 1.4))).all()', 'isinstance(aug.translate, iap.Uniform)', 'isinstance(aug.translate.a, iap.Deterministic)', 'isinstance(aug.translate.b, iap.Deterministic)', '0.7 - 1e-8 < aug.translate.a.value < 0.7 + 1e-8', '0.9 - 1e-8 < aug.translate.b.value < 0.9 + 1e-8', 'isinstance(aug.translate, iap.DiscreteUniform)', 'isinstance(aug.translate.a, iap.Deterministic)', 'isinstance(aug.translate.b, iap.Deterministic)', 'aug.translate.a.value == 1', 'aug.translate.b.value == 10', 'observed.shape == heatmaps.shape', 'np.isclose(observed.min_value, heatmaps.min_value,', 'np.isclose(observed.max_value, heatmaps.max_value,', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == heatmaps.shape', 'np.isclose(observed.min_value, heatmaps.min_value,', 'np.isclose(observed.max_value, heatmaps.max_value,', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == heatmaps.shape', 'np.isclose(observed.min_value, heatmaps.min_value,', 'np.isclose(observed.max_value, heatmaps.max_value,', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == segmaps.shape', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == segmaps.shape', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == segmaps.shape', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'isinstance(aug.rotate, iap.Uniform)', 'isinstance(aug.rotate.a, iap.Deterministic)', 'aug.rotate.a.value == 10', 'isinstance(aug.rotate.b, iap.Deterministic)', 'aug.rotate.b.value == 20', 'nb_changed_aug >= int(nb_iterations * 0.9)', 'nb_changed_aug_det == 0', 'pixels_sums_aug[1, 1] > (nb_iterations * 0.98)', 'pixels_sums_aug[1, 1] < (nb_iterations * 1.02)', '(', '(', 'isinstance(aug.shear, iap.Uniform)', 'isinstance(aug.shear.a, iap.Deterministic)', 'aug.shear.a.value == 10', 'isinstance(aug.shear.b, iap.Deterministic)', 'aug.shear.b.value == 20', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', 'nb_changed_aug >= int(nb_iterations * 0.9)', 'nb_changed_aug_det == 0', 'pixels_sums_aug[1, 1] > (nb_iterations * 0.98)', 'pixels_sums_aug[1, 1] < (nb_iterations * 1.02)', 'len(set(averages)) > 200', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 0', 'aug.cval.b.value == 255', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 1', 'aug.cval.b.value == 5', 'isinstance(aug.mode, iap.Choice)', 'isinstance(aug.mode, iap.Deterministic)', 'aug.mode.value == ', 'isinstance(aug.mode, iap.Choice)', '(', 'isinstance(aug.mode, iap.Choice)', '(', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Deterministic)  # scale', 'isinstance(params[1], iap.Deterministic)  # translate', 'isinstance(params[2], iap.Deterministic)  # rotate', 'isinstance(params[3], iap.Deterministic)  # shear', 'params[0].value == 1  # scale', 'params[1].value == 2  # translate', 'params[2].value == 3  # rotate', 'params[3].value == 4  # shear', 'params[4].value == 1  # order', 'params[5].value == 0  # cval', 'params[6].value ==   # mode']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, expected)', 'np.array_equal(observed, expected)', 'array_equal_lists(observed, expected)', 'array_equal_lists(observed, expected)', 'keypoints_equal(observed, expected)', 'keypoints_equal(observed, expected)', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0][1, 1] > 250', '(observed[0][outer_pixels[0], outer_pixels[1]] > 20).all()', '(observed[0][outer_pixels[0], outer_pixels[1]] < 150).all()', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y > 2', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y > 2', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[1, 1], [0, 2]] > 20).all()', '(observed[0][[1, 1], [0, 2]] < 150).all()', '(observed[0][0, :] < 5).all()', '(observed[0][2, :] < 5).all()', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y == 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y == 2', 'observed[0].keypoints[0].x < 0', 'observed[0].keypoints[0].y == 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x > 2', 'observed[0].keypoints[2].y == 2', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0][1, 1] > 250', '(observed[0][[0, 2], [1, 1]] > 20).all()', '(observed[0][[0, 2], [1, 1]] < 150).all()', '(observed[0][:, 0] < 5).all()', '(observed[0][:, 2] < 5).all()', 'observed[0].keypoints[0].x == 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x == 2', 'observed[0].keypoints[2].y > 2', 'observed[0].keypoints[0].x == 0', 'observed[0].keypoints[0].y < 0', 'observed[0].keypoints[1].x == 1', 'observed[0].keypoints[1].y == 1', 'observed[0].keypoints[2].x == 2', 'observed[0].keypoints[2].y > 2', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', '(observed[0][outer_pixels] < 25).all()', '(observed[0][inner_pixels] > 200).all()', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'nb_changed_aug >= int(nb_iterations * 0.8)', 'nb_changed_aug_det == 0', 'isinstance(aug.scale, iap.Uniform)', 'isinstance(aug.scale.a, iap.Deterministic)', 'isinstance(aug.scale.b, iap.Deterministic)', '0.7 - 1e-8 < aug.scale.a.value < 0.7 + 1e-8', '0.9 - 1e-8 < aug.scale.b.value < 0.9 + 1e-8', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'len(observed_aug[0].nonzero()[0]) == 1', 'len(observed_aug_det[0].nonzero()[0]) == 1', 'nb_changed_aug >= int(nb_iterations * 0.7)', 'nb_changed_aug_det == 0', '(centers_aug > int(nb_iterations * (1/9 * 0.6))).all()', '(centers_aug < int(nb_iterations * (1/9 * 1.4))).all()', 'isinstance(aug.translate, iap.Uniform)', 'isinstance(aug.translate.a, iap.Deterministic)', 'isinstance(aug.translate.b, iap.Deterministic)', '0.7 - 1e-8 < aug.translate.a.value < 0.7 + 1e-8', '0.9 - 1e-8 < aug.translate.b.value < 0.9 + 1e-8', 'isinstance(aug.translate, iap.DiscreteUniform)', 'isinstance(aug.translate.a, iap.Deterministic)', 'isinstance(aug.translate.b, iap.Deterministic)', 'aug.translate.a.value == 1', 'aug.translate.b.value == 10', 'observed.shape == heatmaps.shape', 'np.isclose(observed.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(observed.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == heatmaps.shape', 'np.isclose(observed.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(observed.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == heatmaps.shape', 'np.isclose(observed.min_value, heatmaps.min_value, rtol=0, atol=1e-6)', 'np.isclose(observed.max_value, heatmaps.max_value, rtol=0, atol=1e-6)', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == segmaps.shape', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == segmaps.shape', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'observed.shape == segmaps.shape', 'np.array_equal(observed.get_arr(), arr_expected_1px_right)', 'np.array_equal(observed, images_aug)', 'np.array_equal(observed, images_aug)', 'array_equal_lists(observed, images_aug_list)', 'array_equal_lists(observed, images_aug_list)', 'keypoints_equal(observed, keypoints_aug)', 'keypoints_equal(observed, keypoints_aug)', 'isinstance(aug.rotate, iap.Uniform)', 'isinstance(aug.rotate.a, iap.Deterministic)', 'aug.rotate.a.value == 10', 'isinstance(aug.rotate.b, iap.Deterministic)', 'aug.rotate.b.value == 20', 'nb_changed_aug >= int(nb_iterations * 0.9)', 'nb_changed_aug_det == 0', 'pixels_sums_aug[1, 1] > (nb_iterations * 0.98)', 'pixels_sums_aug[1, 1] < (nb_iterations * 1.02)', '(', '(', 'isinstance(aug.shear, iap.Uniform)', 'isinstance(aug.shear.a, iap.Deterministic)', 'aug.shear.a.value == 10', 'isinstance(aug.shear.b, iap.Deterministic)', 'aug.shear.b.value == 20', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', '(observed[0] > 128 - 30).all()', '(observed[0] < 128 + 30).all()', 'nb_changed_aug >= int(nb_iterations * 0.9)', 'nb_changed_aug_det == 0', 'pixels_sums_aug[1, 1] > (nb_iterations * 0.98)', 'pixels_sums_aug[1, 1] < (nb_iterations * 1.02)', 'len(set(averages)) > 200', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 0', 'aug.cval.b.value == 255', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'aug.cval.a.value == 1', 'aug.cval.b.value == 5', 'isinstance(aug.mode, iap.Choice)', 'isinstance(aug.mode, iap.Deterministic)', 'aug.mode.value == ', 'isinstance(aug.mode, iap.Choice)', '(', 'isinstance(aug.mode, iap.Choice)', '(', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'got_exception', 'isinstance(params[0], iap.Deterministic)  # scale', 'isinstance(params[1], iap.Deterministic)  # translate', 'isinstance(params[2], iap.Deterministic)  # rotate', 'isinstance(params[3], iap.Deterministic)  # shear', 'params[0].value == 1  # scale', 'params[1].value == 2  # translate', 'params[2].value == 3  # rotate', 'params[3].value == 4  # shear', 'params[4].value == 1  # order', 'params[5].value == 0  # cval', 'params[6].value ==   # mode']",[],[],[],[],[],[],[],[],[],[],[],[]
2514,aleju,kontakt@ajung.name,2019-12-30 13:56:55+01:00,9877f5fed3e5aecc7d6b34eeb497f4b310de2e3e,https://github.com/aleju/imgaug/commit/9877f5fed3e5aecc7d6b34eeb497f4b310de2e3e,"Add convenient implementations of __len__ CBAOIs

This patch adds implementations of the __len__
magic method to coordinate-based `*OnImage`
classes, e.g. `BoundingBoxesOnImage`. This allows
to call `len(cbaoi)` to get the count of items
within the instance, e.g. the number of bounding
boxes.",9,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestPolygonsOnImage___len__(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(cbasoi) == 2', 'len(cbasoi) == 2', 'len(cbasoi) == 2', 'len(cbasoi) == 2']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2515,aleju,kontakt@ajung.name,2019-12-30 14:22:46+01:00,0529c47c04b2b7b4c8b13844feb76bfd2a3ce5ed,https://github.com/aleju/imgaug/commit/0529c47c04b2b7b4c8b13844feb76bfd2a3ce5ed,"Fix doctest generating parse error

This fixes a parse error that is generated when
running doctest on the docstring of
imgaug.augmenters.debug.draw_debug_image().",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2516,aleju,kontakt@ajung.name,2020-01-01 19:07:56+01:00,da27fd28ace4d7302017341aef36362c0c3f1f6f,https://github.com/aleju/imgaug/commit/da27fd28ace4d7302017341aef36362c0c3f1f6f,"Add bounding box label drawing

This patch adds automatic drawing of BB labels upon
calls of `BoundingBox.draw_on_image()` and
`BoundingBoxesOnImage.draw_on_image()`.

This resolves issues #519 and #195.

* Add method `imgaug.augmentables.BoundingBox.draw_label_on_image()`.
* Add method `imgaug.augmentables.BoundingBox.draw_box_on_image()`.
* Change method `imgaug.augmentables.BoundingBox.draw_on_image()`
  to automatically draw a bounding box's label.",3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class Test_LabelOnImageDrawer(unittest.TestCase):'],"[('Raises', '(Exception):')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['kwargs[] == (0, 255, 0)', 'kwargs[] is None', 'kwargs[] is None', 'np.isclose(kwargs[], 1.0)', 'kwargs[] == 1', 'kwargs[] == 20', 'kwargs[] == 30', 'kwargs[] is False', 'mock_drawer.draw_on_image.call_count == 1', 'kwargs[] == (0, 255, 0)', 'kwargs[] is None', 'kwargs[] is None', 'np.isclose(kwargs[], 1.0)', 'kwargs[] == 1', 'kwargs[] == 20', 'kwargs[] == 30', 'kwargs[] is False', 'mock_drawer.draw_on_image_.call_count == 1', 'np.any(matches_bg > 0)', 'np.any(matches_text > 0)', 'np.array_equal(image_drawn, expected)', 'np.array_equal(image_drawn, expected)', 'np.all(image_drawn[:50-1-height, :, :] == 100)', 'np.all(image_drawn[50-1:, :, :] == 100)', 'np.all(image_drawn[:, :5-1, :] == 100)', 'np.all(image_drawn[:, 20+1:, :] == 100)', 'frac_colors_as_expected > 0.75', 'np.array_equal(image_drawn, image_drawn_inplace)', 'np.array_equal(color_text, [0, 0, 0])', 'np.array_equal(color_bg, [0, 255, 0])', 'np.array_equal(color_text, [128, 129, 130])', 'np.array_equal(color_bg, [131, 132, 133])', 'np.array_equal(color_text, [0, 0, 0])', 'np.array_equal(color_bg, [255, 255, 255])', 'np.isclose(x1, max(bb.x1 - size + 1, 0))', 'np.isclose(y1, max(bb.y1 - 1 - height, 0))', 'np.isclose(x2, min(bb.x2 + size, image.shape[1]-1))', 'np.isclose(y2, min(bb.y1 - 1, image.shape[0]-1))', 'np.isclose(x1, bb.x1 - size + 1)', 'np.isclose(y1, bb.y1 - 1 - height)', 'np.isclose(x2, bb.x2 + size)', 'np.isclose(y2, bb.y1 - 1)', 'label_arr.dtype.name == ', 'label_arr.shape == (height, width, nb_channels)', 'frac_textcolor > 0.02', 'frac_bgcolor > 0.8', 'frac_textcolor + frac_bgcolor > 0.75', 'label_arr.dtype.name == ', 'label_arr.shape == (height, width, nb_channels)', 'frac_textcolor > 0.02', 'frac_bgcolor > 0.8', 'frac_textcolor + frac_bgcolor > 0.75', 'np.all(image_blend[:, :15, :] == 100)', 'np.all(image_blend[:, 15+20:, :] == 100)', 'np.all(image_blend[:10, :, :] == 100)', 'np.all(image_blend[10+10:, :, :] == 100)', 'np.all(image_blend[10:10+10, 15:15+20, :] == 200)', 'np.all(image_blend[:, :15, :] == 100)', 'np.all(image_blend[:, 15+20:, :] == 100)', 'np.all(image_blend[:10, :, :] == 100)', 'np.all(image_blend[10+10:, :, :] == 100)', 'np.all(image_blend[10:10+10, 15:15+20, :] == 100+75)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2517,aleju,kontakt@ajung.name,2019-12-24 14:43:07+01:00,bf31f2336f0b7e437fcb482e02ae2dfe037ea25f,https://github.com/aleju/imgaug/commit/bf31f2336f0b7e437fcb482e02ae2dfe037ea25f,"Add PIL module

This patch introduces the module
imgaug.augmenters.pillike, which contains augmenters
and augmentation functions that are guaranteed to
have identical outputs to the corresponding PIL
functions. They often -- but not necessarily --
wrap PIL functions.

Move functions and augmenters:
* Move equalize_() and equalize() functions to
  the new module.
* Move autocontrast() to the new module.
* Move Equalize to the new module.
* Move Autocontrast to the new module.

Add the following functions to the new module:
* `equalize`
* `equalize_`
* `autocontrast`
* `autocontrast_`
* `solarize`
* `solarize_`
* `posterize`
* `posterize_`
* `enhance_color`
* `enhance_contrast`
* `enhance_brightness`
* `enhance_sharpness`
* `filter_blur`
* `filter_smooth`
* `filter_smooth_more`
* `filter_edge_enhance`
* `filter_edge_enhance_more`
* `filter_find_edges`
* `filter_contour`
* `filter_emboss`
* `filter_sharpen`
* `filter_detail`
* `warp_affine`

Add the following augmenters to the new module:
* `Solarize`
* `Posterize`.
  (Alias for `color.Posterize`.)
* `Equalize`
* `Autocontrast`
* `EnhanceColor`
* `EnhanceContrast`
* `EnhanceBrightness`
* `EnhanceSharpness`
* `FilterBlur`
* `FilterSmooth`
* `FilterSmoothMore`
* `FilterEdgeEnhance`
* `FilterEdgeEnhanceMore`
* `FilterFindEdges`
* `FilterContour`
* `FilterEmboss`
* `FilterSharpen`
* `FilterDetail`
* `Affine`",13,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],18,1,9,0,0,0,0,0,0,1,3,4,0,2,0,0,0,0,0,0,0,0,151,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,"['class Test_solarize_(unittest.TestCase):', 'class Test_solarize(unittest.TestCase):', 'class Test_posterize(unittest.TestCase):', 'class Test_equalize(unittest.TestCase):', 'class Test_autocontrast(unittest.TestCase):', 'class _TestEnhanceFunc(unittest.TestCase):', 'class _TestFilterFunc(unittest.TestCase):', 'class Test_warp_affine(unittest.TestCase):', 'class TestSolarize(unittest.TestCase):', 'class TestPosterize(unittest.TestCase):', 'class TestEqualize(unittest.TestCase):', 'class TestAutocontrast(unittest.TestCase):', 'class TestEnhanceColor(unittest.TestCase):', 'class TestEnhanceContrast(unittest.TestCase):', 'class TestEnhanceBrightness(unittest.TestCase):', 'class TestEnhanceSharpness(unittest.TestCase):', 'class _TestFilter(unittest.TestCase):', 'class TestAffine(unittest.TestCase):']","[('Raises', '(AssertionError):')]","['def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):']",[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']","['class Test_equalize(unittest.TestCase):', 'class TestEqualize(unittest.TestCase):', 'class Test_autocontrast(unittest.TestCase):', 'class TestAutocontrast(unittest.TestCase):']",[],"['def setUp(self):', 'def setUp(self):']",[],[],[],[],[],[],[],[],"['args[0] is arr', 'kwargs[] == 128', 'observed == ', 'args[0] is arr', 'kwargs[] == 5', 'observed == ', 'np.array_equal(image_pil, image_iaa)', 'np.array_equal(image_iaa, image_pil)', 'np.array_equal(image_iaa, image_pil)', 'np.all(channelwise_sums > 0)', 'np.min(image_aug) < 50', 'np.max(image_aug) > 150', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'np.array_equal(result_pil, result_iaa)', 'np.all(channelwise_sums > 0)', 'np.min(image_aug) < 50', 'np.max(image_aug) > 150', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'np.array_equal(image_iaa, image_pil)', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'np.array_equal(image_iaa, image_pil)', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'np.array_equal(image_warped,', '50 - 1 <= y <= 50 + 1', 'x > 60', '50 - 1 <= x <= 50 + 1', 'y > 60', 'image_aug[10, 15, 0] == 0', 'image_aug[10, 16, 0] == 255', 'np.all(image_aug[0, :] == 0)', 'image_aug[15, 10, 0] == 0', 'image_aug[16, 10, 0] == 255', 'np.all(image_aug[:, 0] == 0)', 'image_aug[7, 7, 0] == 255', 'y == 5', 'x > 10', 'y > 10', 'x == 15', 'np.all(image_aug[:, :1, :] == 0)', 'np.all(image_aug[:, 1:, :] == 1)', 'np.all(image_aug[:, :1, 0] == 128)', 'np.all(image_aug[:, :1, 1] == 0)', 'np.all(image_aug[:, :1, 2] == 0)', 'np.all(image_aug[:, 1:, :] == 1)', 'np.all(image_aug[:, :1] == 128)', 'np.all(image_aug[:, 1:] == 1)', 'np.all(image_aug[:, :1, 0] == 2)', 'np.all(image_aug[:, :1, 1] == 3)', 'np.all(image_aug[:, :1, 2] == 4)', 'np.all(image_aug[:, 1:, :] == 1)', 'image_aug.shape == (20, 20, 3)', 'np.all(image_aug[:, :1, 0] == 2)', 'np.all(image_aug[:, :1, 1] == 3)', 'np.all(image_aug[:, :1, 2] == 4)', 'np.all(image_aug[:, 1:, :] == 1)', 'image_aug[10, 18, 0] == 255', 'isinstance(aug, iaa.Invert)', 'aug.per_channel.value == 0', 'aug.min_value is None', 'aug.max_value is None', 'np.isclose(aug.threshold.value, 128)', 'aug.invert_above_threshold.value == 1', 'isinstance(aug, iaa.Posterize)', 'mock_eq.call_count == 1', 'np.array_equal(mock_eq.call_args_list[0][0][0], image)', 'np.all(channelwise_sums > 0)', 'np.min(image_aug) < 50', 'np.max(image_aug) > 150', 'np.array_equal(mock_auto.call_args_list[0][0][0], image)', 'mock_auto.call_args_list[0][0][1] == 15', 'mock_auto.call_count == 100', 'np.array_equal(mock_auto.call_args_list[i][0][0],', 'len(set(cutoffs)) > 10', 'np.min(image_aug) < 50', 'np.max(image_aug) > 150', 'np.min(image_aug) < 50', 'np.max(image_aug) > 150', 'np.isclose(aug.factor.a.value, 0.0)', 'np.isclose(aug.factor.b.value, 3.0)', 'np.isclose(aug.factor.value, 0.75)', 'mock_pilcol.call_count == 1', 'ia.is_np_array(mock_pilcol.call_args_list[0][0][0])', 'np.isclose(mock_pilcol.call_args_list[0][0][1], 0.75, rtol=0,', 'np.all(image_aug == 128)', 'image_aug[:, :, 2] > 200', 'np.all(image_aug[:, :, 0] == image_aug[:, :, 1])', 'np.all(image_aug[:, :, 0] == image_aug[:, :, 2])', 'np.allclose(hm_aug.get_arr(), hm.get_arr())', 'params[0] is aug.factor', 'mock_pilco.call_count == 1', 'ia.is_np_array(mock_pilco.call_args_list[0][0][0])', 'np.isclose(mock_pilco.call_args_list[0][0][1], 0.75, rtol=0,', 'np.all(image_aug == 128)', 'diff_after < diff_before', 'np.allclose(hm_aug.get_arr(), hm.get_arr())', 'mock_pilbr.call_count == 1', 'ia.is_np_array(mock_pilbr.call_args_list[0][0][0])', 'np.isclose(mock_pilbr.call_args_list[0][0][1], 0.75, rtol=0,', 'np.all(image_aug == 128)', 'np.all(image_aug < 255)', 'np.allclose(hm_aug.get_arr(), hm.get_arr())', 'mock_pilsh.call_count == 1', 'ia.is_np_array(mock_pilsh.call_args_list[0][0][0])', 'np.isclose(mock_pilsh.call_args_list[0][0][1], 0.75, rtol=0,', 'np.all(image_aug == 128)', 'np.all(image_aug[1, 1, :] > 128)', 'np.allclose(hm_aug.get_arr(), hm.get_arr())', 'aug.func is func', 'np.array_equal(image_aug, image_aug_pil)', 'mock_pilaff.call_count == 1', 'np.all(args[0] == 128)  # due to in-place change', 'np.isclose(kwargs[], 1.25)', 'np.isclose(kwargs[], 1.5)', 'np.isclose(kwargs[], 10)', 'np.isclose(kwargs[], 20)', 'np.isclose(kwargs[], 30)', 'np.isclose(kwargs[], 40)', 'np.isclose(kwargs[], 50)', 'np.isclose(kwargs[][0], 100)', 'np.isclose(kwargs[][1], 100)', 'np.isclose(kwargs[][2], 100)', 'np.isclose(kwargs[][0], 0.1)', 'np.isclose(kwargs[][1], 0.2)', 'np.all(image_aug == 128)', 'mock_pilaff.call_count == 1', 'np.all(args[0] == 128)  # due to in-place change', 'np.isclose(kwargs[], 1.0)', 'np.isclose(kwargs[], 1.0)', 'np.isclose(kwargs[], 50*1.2)', 'np.isclose(kwargs[], 20*1.5)', 'np.isclose(kwargs[], 0)', 'np.isclose(kwargs[], 0)', 'np.isclose(kwargs[], 0)', 'np.isclose(kwargs[][0], 0)', 'np.isclose(kwargs[][1], 0)', 'np.isclose(kwargs[][2], 0)', 'np.isclose(kwargs[][0], 0.5)', 'np.isclose(kwargs[][1], 0.5)', 'np.all(image_aug == 128)', 'not np.array_equal(image_aug, image)', 'not np.array_equal(image_aug, other_image_aug)', 'params[0] is aug.scale', 'params[1] is aug.translate', 'params[2] is aug.rotate', 'params[3] is aug.shear', 'params[4] is aug.cval', 'params[5] is aug.center']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(image_pil, image_iaa)', 'np.array_equal(image_iaa, image_pil)', 'np.array_equal(image_iaa, image_pil)', 'np.all(channelwise_sums > 0)', 'np.min(image_aug) < 50', 'np.max(image_aug) > 150', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'mock_eq.call_count == 1', 'np.array_equal(mock_eq.call_args_list[0][0][0], image)', 'np.all(channelwise_sums > 0)', 'np.min(image_aug) < 50', 'np.max(image_aug) > 150', 'np.array_equal(result_pil, result_iaa)', 'np.all(channelwise_sums > 0)', 'np.min(image_aug) < 50', 'np.max(image_aug) > 150', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'np.array_equal(mock_auto.call_args_list[0][0][0], image)', 'mock_auto.call_args_list[0][0][1] == 15', 'mock_auto.call_count == 100', 'np.array_equal(mock_auto.call_args_list[i][0][0],', 'len(set(cutoffs)) > 10', 'np.min(image_aug) < 50', 'np.max(image_aug) > 150', 'np.min(image_aug) < 50', 'np.max(image_aug) > 150']",[],[],[],[],[],[],[],[],[],[],[],[]
2518,aleju,kontakt@ajung.name,2019-12-20 22:35:18+01:00,cacb278857538d021481de570ee6aa57829cf788,https://github.com/aleju/imgaug/commit/cacb278857538d021481de570ee6aa57829cf788,"Add Cutout augmenter

This patch adds functionality to apply
cutout augmentation, as described in the
corresponding paper.

The implementation of this patch uses a
relative cutout size and position (rather
than absolute one as in the paper's
implementation). Furthermore, RGB fill
values are supported (paper implementation
always drops to mean value) and replacing
cutout regions with gaussian noise
(paper only supports constant values).

* Add `imgaug.augmenters.arithmetic.cutout()`
* Add `imgaug.augmenters.arithmetic.cutout_()`
* Add `imgaug.augmenters.arithmetic.Cutout`
  augmenter",4,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],5,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,174,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class Test_cutout(unittest.TestCase):', 'class Test_cutout_(unittest.TestCase):', 'class Test_fill_rectangle_gaussian_(unittest.TestCase):', 'class Test_fill_rectangle_constant_(unittest.TestCase):', 'class TestCutout(unittest.TestCase):']",[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['mock_inplace.call_count == 1', 'image_aug == ', 'args[0] is not image', 'np.array_equal(args[0], image)', 'np.isclose(args[1], 10)', 'np.isclose(args[2], 20)', 'np.isclose(args[3], 30)', 'np.isclose(args[4], 40)', 'args[5] == ', 'args[6] == 1', 'np.isclose(args[7], 0.5)', 'args[8] is rng', 'image_aug is image', 'overlap_inside >= 1.0 - 1e-4', 'overlap_outside >= 1.0 - 1e-4', 'mock_fill.call_count == 1', 'image_aug is image', 'args[0] is image', 'kwargs[] == 10', 'kwargs[] == 20', 'kwargs[] == 30', 'kwargs[] == 40', 'kwargs[] == 0', 'kwargs[] is False', 'kwargs[] is random_state', 'np.array_equal(image_aug, image_cp)', 'np.array_equal(image_aug, image_cp)', 'np.array_equal(image_aug, image_cp)', 'np.all(image_aug[0:25, 0:25] == 0)', 'np.all(image_aug[0:25, 25:] > 0)', 'np.all(image_aug[25:, :] > 0)', 'np.array_equal(image_aug, image_cp)', 'np.array_equal(image_aug[:20, :],', 'not np.array_equal(image_aug[20:70, 10:60],', 'np.isclose(np.average(image_aug[20:70, 10:60]), 127.5,', 'np.isclose(np.std(image_aug[20:70, 10:60]), 255.0/2.0/3.0,', 'not np.any(diff11)', 'not np.any(diff12)', 'np.any(diff21)', 'np.any(diff22)', 'np.array_equal(image_aug_pc1, image_aug_pc2)', 'not np.array_equal(image_aug_pc2, image_aug_pc3)', 'not np.array_equal(image_aug, image)', 'not np.array_equal(image_aug, image)', 'np.array_equal(image_aug[:10, :], image_cp[:10, :])', 'not np.array_equal(rect, image_cp[10:-10, 10:-10])', 'np.isclose(p_true, 0.5, rtol=0, atol=0.1)', 'not np.array_equal(image_aug[..., 0],', 'min_value - 1.0 <= gaussian_min <= min_value + 1.0', 'max_value - 1.0 <= gaussian_max <= max_value + 1.0', 'min_value in image', 'max_value in image', 'np.array_equal(image_aug[:10, :], image_cp[:10, :])', 'not np.array_equal(rect,', 'np.isclose(mean, center_value, rtol=0,', 'np.isclose(std, dynamic_range/2.0/3.0, rtol=0,', 'np.min(rect) < min_value + 0.2 * dynamic_range', 'np.max(rect) > max_value - 0.2 * dynamic_range', 'not np.array_equal(image_aug[..., 0],', 'min_value - 1.0 <= gaussian_min <= min_value + 1.0', 'max_value - 1.0 <= gaussian_max <= max_value + 1.0', 'np.any(np.isclose(image, min_value,', 'np.any(np.isclose(image, max_value,', 'np.allclose(image_aug[:10, :], image_cp[:10, :],', 'not np.allclose(rect, image_cp[10:-10, 10:-10],', 'np.isclose(mean, center_value, rtol=0,', 'np.isclose(std, dynamic_range/2.0/3.0, rtol=0,', 'np.min(rect) < min_value + 0.2 * dynamic_range', 'np.max(rect) > max_value - 0.2 * dynamic_range', 'not np.allclose(image_aug[..., 0],', 'np.array_equal(image_aug[:20, :], image_cp[:20, :])', 'np.all(image_aug[20:70, 10:60] == 17)', 'np.array_equal(image_aug[:20, :], image_cp[:20, :])', 'np.all(image_aug[20:70, 10:60] == 17)', 'np.array_equal(image_aug[:20, :], image_cp[:20, :])', 'np.all(image_aug[20:70, 10:60, 0] == 17)', 'np.all(image_aug[20:70, 10:60, 1] == 21)', 'np.all(image_aug[20:70, 10:60, 2] == 25)', 'np.array_equal(image_aug[:20, :], image_cp[:20, :])', 'np.all(image_aug[20:70, 10:60, 0] == 17)', 'np.all(image_aug[20:70, 10:60, 1] == 21)', 'np.all(image_aug[20:70, 10:60, 2] == 17)', 'np.all(image_aug[20:70, 10:60, 3] == 21)', 'np.all(image_aug[20:70, 10:60, 4] == 17)', 'np.array_equal(image_aug[:20, :], image_cp[:20, :])', 'np.all(image_aug[20:70, 10:60, 0] == 17)', 'np.all(image_aug[20:70, 10:60, 1] == 17)', 'np.all(image_aug[20:70, 10:60, 2] == 17)', 'np.array_equal(image_aug[:20, :], image_cp[:20, :])', 'np.all(image_aug[20:70, 10:60] == 17)', 'np.array_equal(image_aug[:20, :], image_cp[:20, :])', 'np.all(image_aug[20:70, 10:60] == 17)', 'np.array_equal(image_aug[:20, :], image_cp[:20, :])', 'np.all(image_aug[20:70, 10:60, c] == val)', 'np.all(image_aug[20:70, 10:60, :] == 17)', 'np.array_equal(image_aug[:10, :], image_cp[:10, :])', 'np.all(image_aug[10:-10, 10:-10, 0] == 0)', 'np.all(image_aug[10:-10, 10:-10, 1] == 1)', 'np.all(image_aug[10:-10, 10:-10, 2] == 0)', 'np.all(image_aug[20:70, 10:60] == 0)', 'min_value in image', 'max_value in image', 'np.array_equal(image_aug[:10, :], image_cp[:10, :])', 'np.all(image_aug[10:-10, 10:-10, 0]', 'np.all(image_aug[10:-10, 10:-10, 1]', 'np.all(image_aug[10:-10, 10:-10, 2]', 'np.all(image_aug[-10:-10, 10:-10] == min_value)', 'image.flat[0] <= np.float128(min_value) + 1.0', 'image.flat[4] >= np.float128(max_value) - 1.0', 'image_aug.dtype.name == dtype', 'np.allclose(image_aug[:10, :], image_cp[:10, :],', 'np.allclose(image_aug[10:-10, 10:-10, 0],', 'np.allclose(image_aug[10:-10, 10:-10, 1],', 'np.allclose(image_aug[10:-10, 10:-10, 2],', 'np.allclose(image_aug[-10:-10, 10:-10],', 'aug.nb_iterations.value == 1', 'isinstance(aug.position[0], iap.Uniform)', 'isinstance(aug.position[1], iap.Uniform)', 'np.isclose(aug.size.value, 0.2)', 'aug.squared.value == 1', 'aug.fill_mode.value == ', 'aug.cval.value == 128', 'aug.fill_per_channel.value == 0', 'aug.nb_iterations.value == 1', 'np.isclose(aug.position[0].value, 0.5)', 'np.isclose(aug.position[1].value, 0.5)', 'np.isclose(aug.size.value, 0.1)', 'np.isclose(aug.squared.p.value, 0.6)', 'aug.fill_mode.a == []', 'np.isclose(aug.cval.a.value, 0)', 'np.isclose(aug.cval.b.value, 255)', 'np.isclose(aug.fill_per_channel.p.value, 0.5)', 'aug.fill_mode is param', 'mock_apply.call_count == 2', 'args[0] is not image', 'np.array_equal(args[0], image)', 'np.isclose(kwargs[], 0.5*30 - 0.5 * (0.2*30))', 'np.isclose(kwargs[], 0.6*10 - 0.5 * (0.1*10))', 'np.isclose(kwargs[], 0.5*30 + 0.5 * (0.2*30))', 'np.isclose(kwargs[], 0.6*10 + 0.5 * (0.1*10))', 'kwargs[', 'np.array_equal(kwargs[], [1, 1, 1])', 'np.isclose(kwargs[], 1.0)', 'isinstance(kwargs[], iarandom.RNG)', 'mock_apply.call_count == 2', 'args[0] is not image', 'np.array_equal(args[0], image)', 'np.isclose(kwargs[], 0.5*30 - 0.5 * (0.1*10))', 'np.isclose(kwargs[], 0.6*10 - 0.5 * (0.1*10))', 'np.isclose(kwargs[], 0.5*30 + 0.5 * (0.1*10))', 'np.isclose(kwargs[], 0.6*10 + 0.5 * (0.1*10))', 'kwargs[', 'np.array_equal(kwargs[], [1, 1, 1])', 'np.isclose(kwargs[], 1.0)', 'isinstance(kwargs[], iarandom.RNG)', 'len(values) == 3', '0 in values', '1 in values', '255 in values', 'np.array_equal(segmap.get_arr(), segmap_aug.get_arr())', 'np.allclose(samples.pos_x, [0.5, 0.5])', 'np.allclose(samples.pos_y, [0.6, 0.6])', 'prob_max_diff < 0.04', 'height_avg_max_diff < 0.3', 'width_avg_max_diff < 0.3', 'np.array_equal(image_aug1, image_aug2)', 'len(np.unique(sums)) > 1', 'params[0] is aug.nb_iterations', 'params[1] is aug.position', 'params[2] is aug.size', 'params[3] is aug.squared', 'params[4] is aug.fill_mode', 'params[5] is aug.cval', 'params[6] is aug.fill_per_channel']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2519,aleju,kontakt@ajung.name,2020-01-06 18:41:51+01:00,8d6459e732606878f3005f4e33b424012130a69a,https://github.com/aleju/imgaug/commit/8d6459e732606878f3005f4e33b424012130a69a,Fix PIL augs producing read-only arrays,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2520,aleju,kontakt@ajung.name,2020-01-07 10:15:20+01:00,53d483264c15a1633e6c9590ea4fe07b6640bbf5,https://github.com/aleju/imgaug/commit/53d483264c15a1633e6c9590ea4fe07b6640bbf5,"Fix some .pillike funcs breaking on (H,W,1)

Some functions in `imgaug.augmenters.pillike` crash
on `(H, W, 1)` shaped images. This patch fixes that.",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed.dtype.name == ', 'observed.shape == (20, 10)', 'np.array_equal(observed, expected)', 'observed.dtype.name == ', 'observed.shape == (20, 10, 1)', 'np.array_equal(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2521,aleju,kontakt@ajung.name,2019-12-30 17:18:13+01:00,565fd2b23312ece0495025d6a82b3d108936f8f5,https://github.com/aleju/imgaug/commit/565fd2b23312ece0495025d6a82b3d108936f8f5,"Add standardized LUT methods

This patch adds common methods for mappings based
on lookup tables.
The functions imgaug.imgaug.apply_lut() and
imgaug.imgaug.apply_lut_() are added.",3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class Test_apply_lut(unittest.TestCase):', 'class Test_apply_lut_(unittest.TestCase):']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(image_aug, expected)', 'image_aug is not image', 'image_aug.shape == (2, 6)', 'image_aug.dtype.name == ', 'np.array_equal(image_aug, expected)', 'image_aug is image', 'image_aug.shape == (2, 6)', 'image_aug.dtype.name == ', 'np.array_equal(image_aug, expected)', 'image_aug is not image', 'image_aug.shape == (2, 6, 1)', 'image_aug.dtype.name == ', 'np.array_equal(image_aug, expected)', 'image_aug is image', 'image_aug.shape == (2, 6, nb_channels)', 'image_aug.dtype.name == ', 'image.flags[] is False', 'np.array_equal(np.fliplr(image_aug), expected)', 'image_aug is not image  # non-contiguous should lead to copy', 'image_aug.shape == (2, 6)', 'image_aug.dtype.name == ', 'image.flags[] is False', 'np.array_equal(image_aug, expected)', 'image_aug is not image  # non-owndata should lead to copy', 'image_aug.shape == (2, 3)', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'image_aug.dtype.name == ']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2522,aleju,kontakt@ajung.name,2019-12-30 18:19:39+01:00,aa8b2ddf144968084044a944a9efd80ece983b0a,https://github.com/aleju/imgaug/commit/aa8b2ddf144968084044a944a9efd80ece983b0a,"Refactor augmenters to use new LUT functions

This patch switches all augmenters from cv2.lut() to
imgaug's apply_lut() and apply_lut_() functions.
This decreases code duplication and likely fixes
some bugs that were not yet discovered.",6,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2523,aleju,kontakt@ajung.name,2020-01-02 11:30:44+01:00,42dfa54a4a7ffaad8d0a706e71e7d89088304347,https://github.com/aleju/imgaug/commit/42dfa54a4a7ffaad8d0a706e71e7d89088304347,"Allow index-based access to OnImage instances

Enable index-based access to coordinate-based `*OnImage` instances,
i.e. to `KeypointsOnImage`, `BoundingBoxesOnImage`,
`LineStringsOnImage` and `PolygonsOnImage`. This allows to do
things like
`bbsoi = BoundingBoxesOnImage(...); bbs = bbsoi[0:2];`.",9,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestPolygonsOnImage___getitem__(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['cbasoi[0] is cbas[0]', 'cbasoi[1] is cbas[1]', 'cbasoi[0:2] == cbas', 'cbasoi[0] is cbas[0]', 'cbasoi[1] is cbas[1]', 'cbasoi[0:2] == cbas', 'cbasoi[0] is cbas[0]', 'cbasoi[1] is cbas[1]', 'cbasoi[0:2] == cbas', 'cbasoi[0] is cbas[0]', 'cbasoi[1] is cbas[1]', 'cbasoi[0:2] == cbas']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2524,aleju,kontakt@ajung.name,2020-01-03 12:38:20+01:00,08ade34e33d1f6f0cd941af4096556e5746369ff,https://github.com/aleju/imgaug/commit/08ade34e33d1f6f0cd941af4096556e5746369ff,"Standardize shift interfaces of CBAs

This patch standardizes the shift interfaces of all
coordinate-based augmentables (Keypoints, BoundingBoxes,
LineStrings, Polygons).

All of these augmentables will then have the same
interface for shift operations. Currently, Keypoints uses
a different interface (`x` and `y` arguments) than the
other augmentables (`top`, `right`, `bottom`, `left`
arguments). All augmentables will use the interface of Keypoints
as that is simpler and less ambiguous. Old arguments will still
be accepted, but will produce deprecation warnings.

**[breaking]** This breaks if one relied on calling `shift()`
functions of `BoundingBox`, `LineString`, `Polygon`,
`BoundingBoxesOnImage`, `LineStringsOnImage` or
`PolygonsOnImage` without named arguments. E.g.
`bb = BoundingBox(...); bb_shifted = bb.shift(1, 2, 3, 4);`
will produce unexpected outputs now (equivalent to
`shift(x=1, y=2, top=3, right=4, bottom=0, left=0)`),
while
`bb_shifted = bb.shift(top=1, right=2, bottom=3, left=4)`
will still work as expected.

* Add arguments `x`, `y` to `BoundingBox.shift()`, `LineString.shift()`
  and `Polygon.shift()`.
* Add arguments `x`, `y` to `BoundingBoxesOnImage.shift()`,
  `LineStringsOnImage.shift()` and `PolygonsOnImage.shift()`.
* Marked arguments `top`, `right`, `bottom`, `left` in
  `BoundingBox.shift()`, `LineString.shift()` and `Polygon.shift()`
  as deprecated. This also affects the corresponding `*OnImage`
  classes.
* Add function `testutils.wrap_shift_deprecation()`.",12,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['(', 'bb_top.y1 == 10', 'bb_top.x1 == 20 + 1', 'bb_top.y2 == 30', 'bb_top.x2 == 40 + 1', 'bb_top.y1 == 10 + 1', 'bb_top.x1 == 20', 'bb_top.y2 == 30 + 1', 'bb_top.x2 == 40', 'bbsoi_shifted.bounding_boxes[0].y1 == 10 + 2', 'bbsoi_shifted.bounding_boxes[0].x1 == 20', 'bbsoi_shifted.bounding_boxes[0].y2 == 30 + 2', 'bbsoi_shifted.bounding_boxes[0].x2 == 40', 'bbsoi_shifted.bounding_boxes[1].y1 == 15 + 2', 'bbsoi_shifted.bounding_boxes[1].x1 == 25', 'bbsoi_shifted.bounding_boxes[1].y2 == 35 + 2', 'bbsoi_shifted.bounding_boxes[1].x2 == 51', 'len(bbsoi_shifted.bounding_boxes) == 2', 'bbsoi_shifted.bounding_boxes[0].y1 == 10', 'bbsoi_shifted.bounding_boxes[0].x1 == 20 - 1', 'bbsoi_shifted.bounding_boxes[0].y2 == 30', 'bbsoi_shifted.bounding_boxes[0].x2 == 40 - 1', 'bbsoi_shifted.bounding_boxes[1].y1 == 15', 'bbsoi_shifted.bounding_boxes[1].x1 == 25 - 1', 'bbsoi_shifted.bounding_boxes[1].y2 == 35', 'bbsoi_shifted.bounding_boxes[1].x2 == 51 - 1', 'bbsoi_shifted is bbsoi', '(', 'bbsoi_shifted.bounding_boxes[0].y1 == 10 + 2', 'bbsoi_shifted.bounding_boxes[0].x1 == 20', 'bbsoi_shifted.bounding_boxes[0].y2 == 30 + 2', 'bbsoi_shifted.bounding_boxes[0].x2 == 40', 'bbsoi_shifted.bounding_boxes[1].y1 == 15 + 2', 'bbsoi_shifted.bounding_boxes[1].x1 == 25', 'bbsoi_shifted.bounding_boxes[1].y2 == 35 + 2', 'bbsoi_shifted.bounding_boxes[1].x2 == 51', 'len(bbsoi_shifted.bounding_boxes) == 2', 'bbsoi_shifted.bounding_boxes[0].y1 == 10', 'bbsoi_shifted.bounding_boxes[0].x1 == 20 - 1', 'bbsoi_shifted.bounding_boxes[0].y2 == 30', 'bbsoi_shifted.bounding_boxes[0].x2 == 40 - 1', 'bbsoi_shifted.bounding_boxes[1].y1 == 15', 'bbsoi_shifted.bounding_boxes[1].x1 == 25 - 1', 'bbsoi_shifted.bounding_boxes[1].y2 == 35', 'bbsoi_shifted.bounding_boxes[1].x2 == 51 - 1', 'bbsoi_shifted is not bbsoi', '(', 'ls_shift.coords_almost_equals(', 'not ls.shift(y=1).coords_almost_equals(ls)', 'ls.shift(y=1).coords_almost_equals(ls, max_distance=1.01)', 'observed.line_strings[0].coords_almost_equals([', 'observed.line_strings[1].coords_almost_equals([', 'observed.shape == (100, 100, 3)', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_shifted.label == ', 'len(poly_oi_shifted.polygons) == 3', 'np.allclose(poly_oi_shifted.polygons[0].exterior,', 'np.allclose(poly_oi_shifted.polygons[1].exterior,', 'np.allclose(poly_oi_shifted.polygons[2].exterior,', 'poly_oi_shifted.shape == (10, 11, 3)']",[],[],[],[],[],[],[],[],[],[],[],[],"['bbsoi_shifted.bounding_boxes[0].y1 == 10', 'bbsoi_shifted.bounding_boxes[0].x1 == 20 - 1', 'bbsoi_shifted.bounding_boxes[0].y2 == 30', 'bbsoi_shifted.bounding_boxes[0].x2 == 40 - 1', 'bbsoi_shifted.bounding_boxes[1].y1 == 15', 'bbsoi_shifted.bounding_boxes[1].x1 == 25 - 1', 'bbsoi_shifted.bounding_boxes[1].y2 == 35', 'bbsoi_shifted.bounding_boxes[1].x2 == 51 - 1', 'bbsoi_shifted.bounding_boxes[0].y1 == 10', 'bbsoi_shifted.bounding_boxes[0].x1 == 20 - 1', 'bbsoi_shifted.bounding_boxes[0].y2 == 30', 'bbsoi_shifted.bounding_boxes[0].x2 == 40 - 1', 'bbsoi_shifted.bounding_boxes[1].y1 == 15', 'bbsoi_shifted.bounding_boxes[1].x1 == 25 - 1', 'bbsoi_shifted.bounding_boxes[1].y2 == 35', 'bbsoi_shifted.bounding_boxes[1].x2 == 51 - 1', 'not ls.shift(top=1).coords_almost_equals(ls)', 'ls.shift(top=1).coords_almost_equals(ls, max_distance=1.01)']",[],[],[],[],[],[],[],[],[],[],[],[]
2525,aleju,kontakt@ajung.name,2020-01-10 12:14:22+01:00,0000c381f259a1fa6de8c1ea36c2c4c7dfe7a4ad,https://github.com/aleju/imgaug/commit/0000c381f259a1fa6de8c1ea36c2c4c7dfe7a4ad,"Fix `random.seed` not always seeding in-place

Fix `imgaug.random.seed()` not seeding the global `RNG` in-place
in numpy 1.17+. The (unfixed) function instead created a new
global `RNG` with the given seed. This set the seed of augmenters
created *after* the `seed()` call, but not of augmenters created
*before* the `seed()` call as they would continue to use the old
global RNG.",3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(images_aug[0], other_image_aug)', 'not np.array_equal(images_aug[0], image_aug)', 'np.array_equal(images_aug[0], other_image_aug)', 'not np.array_equal(images_aug[0], image_aug)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2526,François-Michel De Rainville,f.derainville@gmail.com,2020-01-10 09:13:07-05:00,8d3c7a341c0b65a52c4ce99367a3f3153db3b9b9,https://github.com/aleju/imgaug/commit/8d3c7a341c0b65a52c4ce99367a3f3153db3b9b9,Add sphinx class role to insert internal links,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2527,Francois-Michel De Rainville,francois-michel.de.rainville@intact.net,2020-01-10 11:14:27-05:00,b8caeaa8391dc8f117d45a49bf53e80b1b92bcdf,https://github.com/aleju/imgaug/commit/b8caeaa8391dc8f117d45a49bf53e80b1b92bcdf,Added class role in all files,16,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2528,Francois-Michel De Rainville,francois-michel.de.rainville@intact.net,2020-01-10 11:15:34-05:00,19e4ede0d0fe07969b7d1ebd502ca14f0bdced08,https://github.com/aleju/imgaug/commit/19e4ede0d0fe07969b7d1ebd502ca14f0bdced08,Added blank line to remove formating,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2529,Francois-Michel De Rainville,francois-michel.de.rainville@intact.net,2020-01-10 11:16:55-05:00,3e53d0edc1dcaefe4bdd4e81189015a063ec57f3,https://github.com/aleju/imgaug/commit/3e53d0edc1dcaefe4bdd4e81189015a063ec57f3,Removed full prefix from note,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2530,Francois-Michel De Rainville,francois-michel.de.rainville@intact.net,2020-01-10 11:23:18-05:00,c27a041aa3a005e0c925def0dc28e37511719f13,https://github.com/aleju/imgaug/commit/c27a041aa3a005e0c925def0dc28e37511719f13,Correct en of class position,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2531,Francois-Michel De Rainville,francois-michel.de.rainville@intact.net,2020-01-10 11:23:43-05:00,4c81c7a7503b64f54d76144385ea4330fd7c8a84,https://github.com/aleju/imgaug/commit/4c81c7a7503b64f54d76144385ea4330fd7c8a84,Add empty line to remove formating,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2532,apatsekin,apatsekin@gmail.com,2020-01-10 17:21:47-08:00,7fa5c45f99d4c0c10e49d5e8821a22418c272d65,https://github.com/aleju/imgaug/commit/7fa5c45f99d4c0c10e49d5e8821a22418c272d65,"ElasticTransformation incorrect filling new pixels

For all other geometric augmentations, when applied to 3-channel pictures `cval` value interpreted as (cval,cval,cval), so you can set either black/gray/white filling of emerged pixels. However, for Elastic Transformation setting `cval=255` leads to red pixels. That is happening because cv2.remap takes RGB tuple for 3-channel images for `borderValue`. If integer passed, it is used as (cval,0,0), hence producing red pixels. 

I'm not sure this is correct way to fix this issue, but at least on my setup it works.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2533,aleju,kontakt@ajung.name,2020-01-11 12:33:25+01:00,3faee5df2b5da28a3929674023f9138acc861ea3,https://github.com/aleju/imgaug/commit/3faee5df2b5da28a3929674023f9138acc861ea3,"Add test for cval in ElasticT on RGB images

This is a follow-up patch for PR #561, which
fixed that new pixels were filled by
ElasticTransformation with `(cval, 0, 0)`
instead of `(cval, cval, cval)`.

This patch adds a corresponding changelog
entry and test case.",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['not np.any(mask_not_all_channels_same_intensity)', 'np.any(mask_all_channels_same_intensity)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2534,aleju,kontakt@ajung.name,2020-01-06 14:21:50+01:00,3b30aa91cb58e079cc0730b5244875e04ebf6fcf,https://github.com/aleju/imgaug/commit/3b30aa91cb58e079cc0730b5244875e04ebf6fcf,"Add rain augmenters

Add augmenter(s) to create fake rain effects.
They currently seem to work best at around
medium-sized images (~224px).

* Add `imgaug.augmenters.weather.Rain`.
* Add `imgaug.augmenters.weather.RainLayer`.
* Add check `checks/check_rain.py`",4,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestRain(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['5 < np.average(imgs_aug) < 200', 'np.max(imgs_aug) > 70', 'np.sum(np.abs(grad_x)) > 10 * img.shape[1]', 'np.sum(np.abs(grad_y)) > 10 * img.shape[0]', 'image_aug.dtype.name == ', 'image_aug.shape == shape']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2535,aleju,kontakt@ajung.name,2020-01-05 17:39:51+01:00,556a4654272f657d7d0ff1d5ad46bdc3ffe5494c,https://github.com/aleju/imgaug/commit/556a4654272f657d7d0ff1d5ad46bdc3ffe5494c,"Add `round` parameter to Discretize

Add the parameter `round` to
`imgaug.parameters.Discretize`. The parameter
defaults to `True`, i.e. the default behaviour
of `Discretize` does not change.",3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.all([v in uq_round for v in [0, 1, 2]])', 'np.all([v in uq_no_round for v in [0, 1]])']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2536,aleju,kontakt@ajung.name,2020-01-06 21:41:16+01:00,af5d2476933b9a52b990df9500dde3c5e18a893f,https://github.com/aleju/imgaug/commit/af5d2476933b9a52b990df9500dde3c5e18a893f,"Add RandAugment

This patch adds a RandAugment augmenter,
similar to the one described in the paper
""RandAugment: Practical automated data augmentation
with a reduced search space"".

* Add module `imgaug.augmenters.collections`
* Add augmenter `imgaug.augmenters.collections.RandAugment`.",5,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestRandAugment(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['img_aug[0, 0, 0] in expected[n]', 'img_aug[0, 0, 0] == m', 'np.all([x_cval, y_cval])', 'params[0] is aug[1].n', 'params[1] is aug._m', 'params[2] is aug._cval']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2537,aleju,kontakt@ajung.name,2019-12-18 23:24:44+01:00,76fefd85f85aba6e5039cb3a775ac027c45f74d4,https://github.com/aleju/imgaug/commit/76fefd85f85aba6e5039cb3a775ac027c45f74d4,"Add wrappers for imagecorruptions library

This patch adds wrappers around the functions from
package
https://github.com/bethgelab/imagecorruptions.
The functions in that package were used in some recent
papers and are added here for convenience.
The wrappers produce arrays containing values
identical to the output arrays from the corresponding
`imagecorruptions` functions when called via the
`imagecorruptions.corrupt()` (verified via unittests).
The interfaces of the wrapper functions are identical to the
`imagecorruptions` functions, with the only difference of
also supporting `seed` parameters.

* Add module `imgaug.augmenters.imgcorruptlike`.
  The `like` signals that the augmentation functions do
  not *have* to wrap `imagecorruptions` internally.
  They merely have to produce the same outputs.
* Add the following functions to module
  `imgaug.augmenters.imgcorruptlike`:
    * `apply_gaussian_noise()`
    * `apply_shot_noise()`
    * `apply_impulse_noise()`
    * `apply_speckle_noise()`
    * `apply_gaussian_blur()`
    * `apply_glass_blur()`
      (improved performance over original function)
    * `apply_defocus_blur()`
    * `apply_motion_blur()`
    * `apply_zoom_blur()`
    * `apply_fog()`
    * `apply_snow()`
    * `apply_spatter()`
    * `apply_contrast()`
    * `apply_brightness()`
    * `apply_saturate()`
    * `apply_jpeg_compression()`
    * `apply_pixelate()`
    * `apply_elastic_transform()`
* Add function
  `imgaug.augmenters.imgcorruptlike.get_corruption_names(subset)`.
  Similar to `imagecorruptions.get_corruption_names(subset)`,
  but returns a tuple
  `(list of corruption method names,
    list of corruption method functions)`,
  instead of only the names.
* Add the following augmenters to module
  `imgaug.augmenters.imgcorruptlike`:
    * `GaussianNoise`
    * `ShotNoise`
    * `ImpulseNoise`
    * `SpeckleNoise`
    * `GaussianBlur`
    * `GlassBlur`
    * `DefocusBlur`
    * `MotionBlur`
    * `ZoomBlur`
    * `Fog`
    * `Frost`
    * `Snow`
    * `Spatter`
    * `Contrast`
    * `Brightness`
    * `Saturate`
    * `JpegCompression`
    * `Pixelate`
    * `ElasticTransform`
* Add context `imgaug.random.temporary_numpy_seed()`.",6,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],3,0,0,0,0,0,4,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class Test_get_imgcorrupt_subset(unittest.TestCase):', 'class _CompareFuncWithImageCorruptions(unittest.TestCase):', 'class TestAugmenters(unittest.TestCase):']",[],[],[],[],[],"['SUPPORTS_LIBRARY,', 'SUPPORTS_LIBRARY,', 'SUPPORTS_LIBRARY,', 'SUPPORTS_LIBRARY,']",[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['func_names == func_names_exp', 'getattr(', 'not np.array_equal(image, image_aug1)', 'not np.array_equal(image, image_aug2)', 'not np.array_equal(image_aug2, image_aug3)', 'np.array_equal(image_aug1, image_aug2)', 'dtype.startswith()', 'np.isclose(np.sum(image_imgcor), image_imgcor_sum, rtol=0,', 'np.isclose(np.sum(image_imgaug), image_imgaug_sum, rtol=0,', 'ia.is_np_array(image_aug_exp)', 'ia.is_np_array(image_aug)', 'image_aug.shape == image_imgaug.shape', 'image_aug.dtype.name == image_aug_exp.dtype.name', 'np.allclose(image_aug, image_aug_exp, rtol=0, atol=atol)', 'aug_cls(severity=severity).func is func_expected', 'np.array_equal(image_aug1, image_aug_exp)', 'np.array_equal(image_aug2, image_aug_exp)', 'not np.array_equal(image_aug3, image_aug2)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2538,aleju,kontakt@ajung.name,2020-01-11 19:48:27+01:00,c142dc3c799f1e0c1f508b86637edfae3fcc93d9,https://github.com/aleju/imgaug/commit/c142dc3c799f1e0c1f508b86637edfae3fcc93d9,Fix deprecation warnings in tests,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2539,aleju,kontakt@ajung.name,2020-01-07 13:51:48+01:00,24667336d2a7926927fd8d5daf1e7510baf74f06,https://github.com/aleju/imgaug/commit/24667336d2a7926927fd8d5daf1e7510baf74f06,"Extend image blending module

With this patch the available augmenters for
alpha-blending of images are significantly extended.
There are now new blending augmenters available to
alpha-blend acoording to:
* Some randomly chosen colors. (`BlendAlphaSomeColors`)
* Linear gradients. (`BlendAlphaHorizontalLinearGradient`,
  `BlendAlphaVerticalLinearGradient`)
* Regular grids and checkerboard patterns. (`BlendAlphaRegularGrid`,
  `BlendAlphaCheckerboard`)
* Only at locations that overlap with specific segmentation class
  IDs (or the inverse of that). (`BlendAlphaSegMapClassIds`)
* Only within bounding boxes with specific labels (or the inverse
  of that). (`BlendAlphaBoundingBoxes`)

This allows to e.g. randomly remove some colors while leaving
other colors unchanged (`BlendAlphaSomeColors(Grayscale(1.0))`),
to change the color of some objects
(`BlendAlphaSegMapClassIds(AddToHue((-256, 256)))`), to add
cloud-patterns only to the top of images
(`BlendAlphaVerticalLinearGradient(Clouds())`) or to apply
augmenters in some coarse rectangular areas (e.g.
`BlendAlphaRegularGrid(Multiply(0.0))` to achieve a similar
effect to `CoarseDropout` or
`BlendAlphaRegularGrid(AveragePooling(8))` to pool in equally
coarse image sub-regions).

Other mask-based alpha blending techniques can be achieved by
subclassing `IBatchwiseMaskGenerator` and providing an
instance of such a class to `BlendAlphaMask`.

This patch also changes the naming of the blending augmenters
as follows:
* `Alpha` -> `BlendAlpha`
* `AlphaElementwise` -> `BlendAlphaElementwise`
* `SimplexNoiseAlpha` -> `BlendAlphaSimplexNoise`
* `FrequencyNoiseAlpha` -> `BlendAlphaFrequencyNoise`
The old names are now deprecated.
Furthermore, the parameters `first` and `second`, which were
used by all blending augmenters, have now the names `foreground`
and `background`.

List of changes:
* Add `imgaug.augmenters.blend.BlendAlphaMask`, which uses
  a mask generator instance to generate per batch alpha masks and
  then alpha-blends using these masks.
* Add `imgaug.augmenters.blend.BlendAlphaSomeColors`.
* Add `imgaug.augmenters.blend.BlendAlphaHorizontalLinearGradient`.
* Add `imgaug.augmenters.blend.BlendAlphaVerticalLinearGradient`.
* Add `imgaug.augmenters.blend.BlendAlphaRegularGrid`.
* Add `imgaug.augmenters.blend.BlendAlphaCheckerboard`.
* Add `imgaug.augmenters.blend.BlendAlphaSegMapClassIds`.
* Add `imgaug.augmenters.blend.BlendAlphaBoundingBoxes`.
* Add `imgaug.augmenters.blend.IBatchwiseMaskGenerator`,
  an interface for classes generating masks on a batch-by-batch
  basis.
* Add `imgaug.augmenters.blend.StochasticParameterMaskGen`,
  a helper to generate masks from `StochasticParameter` instances.
* Add `imgaug.augmenters.blend.SomeColorsMaskGen`, a generator
  that produces masks marking randomly chosen colors in images.
* Add `imgaug.augmenters.blend.HorizontalLinearGradientMaskGen`,
  a linear gradient mask generator.
* Add `imgaug.augmenters.blend.VerticalLinearGradientMaskGen`,
  a linear gradient mask generator.
* Add `imgaug.augmenters.blend.RegularGridMaskGen`,
  a checkerboard-like mask generator where every grid cell has
  a random alpha value.
* Add `imgaug.augmenters.blend.CheckerboardMaskGen`,
  a checkerboard-like mask generator where every grid cell has
  the opposite alpha value of its 4-neighbours.
* Add `imgaug.augmenters.blend.SegMapClassIdsMaskGen`, a
  segmentation map-based mask generator.
* Add `imgaug.augmenters.blend.BoundingBoxesMaskGen`, a bounding
  box-based mask generator.
* Add `imgaug.augmenters.blend.InvertMaskGen`, an mask generator
  that inverts masks produces by child generators.
* Change `imgaug.parameters.SimplexNoise` and
  `imgaug.parameters.FrequencyNoise` to also accept `(H, W, C)`
  sampling shapes, instead of only `(H, W)`.
* Refactor `AlphaElementwise` to be a wrapper around
  `BlendAlphaMask`.
* Rename `Alpha` to `BlendAlpha`.
  `Alpha` is now deprecated.
* Rename `AlphaElementwise` to `BlendAlphaElementwise`.
  `AlphaElementwise` is now deprecated.
* Rename `SimplexNoiseAlpha` to `BlendAlphaSimplexNoise`.
  `SimplexNoiseAlpha` is now deprecated.
* Rename `FrequencyNoiseAlpha` to `BlendAlphaFrequencyNoise`.
  `FrequencyNoiseAlpha` is now deprecated.
* Rename arguments `first` and `second` to `foreground` and
  `background` in `BlendAlpha`, `BlendAlphaElementwise`,
  `BlendAlphaSimplexNoise` and `BlendAlphaFrequencyNoise`.
* Change `imgaug.parameters.handle_categorical_string_param()`
  to allow parameter `valid_values` to be `None`.
* Fix a wrong error message in
  `imgaug.augmenters.color.change_colorspace_()`.
* Remove `imgaug.augmenters.color.GrayscaleColorwise`
  and `imgaug.augmenters.color.RemoveSaturationColorwise`
  as these are now covered by `BlendAlphaSomeColors`.",15,False,True,True,True,True,True,True,True,False,False,False,False,False,False,False,[],20,3,12,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,283,0,0,0,0,0,0,0,0,0,0,0,0,62,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestBlendAlpha(unittest.TestCase):', 'class TestBlendAlphaElementwise(unittest.TestCase):', 'class TestBlendAlphaSomeColors(unittest.TestCase):', 'class TestBlendAlphaHorizontalLinearGradient(unittest.TestCase):', 'class TestBlendAlphaVerticalLinearGradient(unittest.TestCase):', 'class TestBlendAlphaRegularGrid(unittest.TestCase):', 'class TestBlendAlphaCheckerboard(unittest.TestCase):', 'class TestBlendAlphaSegMapClassIds(unittest.TestCase):', 'class TestBlendAlphaBoundingBoxes(unittest.TestCase):', 'class TestStochasticParameterMaskGen(unittest.TestCase):', 'class TestSomeColorsMaskGen(unittest.TestCase):', 'class TestHorizontalLinearGradientMaskGen(unittest.TestCase):', 'class TestVerticalLinearGradientMaskGen(unittest.TestCase):', 'class TestRegularGridMaskGen(unittest.TestCase):', 'class TestCheckerboardMaskGen(unittest.TestCase):', 'class TestSegMapClassIdsMaskGen(unittest.TestCase):', 'class TestBoundingBoxesMaskGen(unittest.TestCase):', 'class InvertMaskGen(unittest.TestCase):', 'class TestSimplexNoiseAlpha(unittest.TestCase):', 'class TestFrequencyNoiseAlpha(unittest.TestCase):']","[('Raises', '(AssertionError):'), ('Raises', '(AssertionError):'), ('Raises', '(AssertionError):')]","['def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):', 'def setUp(self):']",[],[],[],[],[],[],[],[],"['class TestGrayscaleColorwise(unittest.TestCase):', 'class TestRemoveSaturationColorwise(unittest.TestCase):']",[],"['def setUp(self):', 'def setUp(self):']",[],[],[],[],[],[],[],[],"['(', 'isinstance(aug, iaa.BlendAlpha)', 'np.isclose(aug.factor.value, 0.75)', 'aug.foreground is aug1', 'aug.background is aug2', 'fg in children_lsts[0]', 'bg == children_lsts[1]', 'aug_det.foreground.deterministic', 'aug_det.background.deterministic', 'nb_channels <= 3', '(', 'isinstance(aug, iaa.BlendAlphaElementwise)', 'np.isclose(aug.factor.value, 0.5)', 'aug.foreground is aug1', 'aug.background is aug2', 'aug.foreground is child1', 'aug.background is child2', 'isinstance(aug.mask_generator, iaa.SomeColorsMaskGen)', 'np.all(np.logical_or(grayscaled == 0, grayscaled == 3))', 'len(set(nb_grayscaled)) >= 5', 'np.all(image_aug == 1)', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'aug.foreground is child1', 'aug.background is child2', 'isinstance(aug.mask_generator,', 'np.array_equal(image_aug[0, :, :], image_aug[1, :, :])', 'np.array_equal(image_aug[:, :20, :], image[:, :20, :])', 'np.array_equal(image_aug[:, 80:, :], image_drop[:, 80:, :])', 'not np.array_equal(image_aug[:, 20:80, :], image[:, 20:80, :])', 'not np.array_equal(image_aug[:, 20:80, :],', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'aug.foreground is child1', 'aug.background is child2', 'isinstance(aug.mask_generator,', 'np.array_equal(image_aug[:, 0, :], image_aug[:, 0, :])', 'np.array_equal(image_aug[:20, :, :], image[:20, :, :])', 'np.array_equal(image_aug[80:, :, :], image_drop[80:, :, :])', 'not np.array_equal(image_aug[20:80, :, :], image[20:80, :, :])', 'not np.array_equal(image_aug[20:80, :, :],', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'aug.mask_generator.nb_rows.value == 2', 'aug.mask_generator.nb_cols.value == 3', 'aug.foreground is child1', 'aug.background is child2', 'isinstance(aug.mask_generator, iaa.RegularGridMaskGen)', 'np.isclose(aug.mask_generator.alpha.value, 0.7)', 'np.array_equal(image_aug, expected)', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'aug.mask_generator.nb_rows.value == 2', 'aug.mask_generator.nb_cols.value == 3', 'aug.foreground is child1', 'aug.background is child2', 'isinstance(aug.mask_generator, iaa.CheckerboardMaskGen)', 'np.array_equal(image_aug, expected)', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'aug.foreground is child1', 'aug.background is child2', 'isinstance(aug.mask_generator,', 'aug.mask_generator.class_ids.value == 2', 'aug.mask_generator.nb_sample_classes.value == 1', 'np.allclose(image_aug[0:4, :, :], 0, rtol=0, atol=1.01)', 'np.allclose(image_aug[4:, :, :], 255, rtol=0, atol=1.01)', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'np.array_equal(image_aug, image_aug_pkl)', 'np.array_equal(sm_aug, sm_aug_pkl)', 'aug.foreground is child1', 'aug.background is child2', 'isinstance(aug.mask_generator,', 'aug.mask_generator.labels.value == ', 'aug.mask_generator.nb_sample_labels.value == 1', 'np.allclose(image_aug[1:5, 1:5, :], 0, rtol=0, atol=1.01)', 'np.allclose(image_aug[0:1, 0:1, :], 255, rtol=0, atol=1.01)', 'np.allclose(image_aug[5:10, 5:10, :], 255, rtol=0, atol=1.01)', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'np.array_equal(image_aug, image_aug_pkl)', 'np.allclose(masks[i], values)', 'np.allclose(masks[0], expected1)', 'np.allclose(masks[1], expected2)', 'np.allclose(masks[0], values.reshape((2, 3, 2)))', 'len(masks) == 1', 'masks[0].shape == shape[0:2]', 'masks[0].shape == shape', 'np.isclose(gen.nb_bins.a.value, 5)', 'np.isclose(gen.nb_bins.b.value, 15)', 'np.isclose(gen.smoothness.a.value, 0.1)', 'np.isclose(gen.smoothness.b.value, 0.3)', 'np.isclose(gen.alpha.a[0], 0.0)', 'np.isclose(gen.alpha.a[1], 1.0)', 'np.isclose(gen.rotation_deg.a.value, 0)', 'np.isclose(gen.rotation_deg.b.value, 360)', 'gen.from_colorspace == iaa.CSPACE_RGB', 'gen.nb_bins.value == 100', 'np.isclose(gen.smoothness.value, 0.5)', 'np.isclose(gen.alpha.value, 0.7)', 'np.isclose(gen.rotation_deg.value, 123)', 'gen.from_colorspace == iaa.CSPACE_HSV', 'np.any(', 'mask.shape == image.shape[0:2]', 'mask.dtype.name == ', 'len(np.unique(mask_sums)) >= 4', 'np.allclose(mask, 0.0)', 'np.allclose(mask, 1.0)', 'mock_cc.call_count == 1', 'np.array_equal(mock_cc.call_args_list[0][0][0], image)', '(mock_cc.call_args_list[0][1][]', '(mock_cc.call_args_list[0][1][]', 'alphas_up.shape == (256,)', 'np.allclose(alphas_up, 0.5)', 'alphas_up.shape == (256,)', 'np.allclose(alphas_up[0:128], 1.0)', 'np.allclose(alphas_up[128:], 0.5)', 'alphas_up.shape == (256,)', 'np.allclose(alphas_up[0:2], 0.25)', 'np.allclose(alphas_up[2:], 0.5)', 'alphas_up.shape == (256,)', 'np.allclose(alphas, 0.5)', 'np.allclose(alphas_rot, alphas)', 'np.allclose(alphas_rot[:-1], alphas[1:])', 'np.allclose(alphas_rot[-1:], alphas[:1])', 'np.allclose(alphas_rot[:-255], alphas[255:])', 'np.allclose(alphas_rot[-255:], alphas[:255])', 'np.allclose(alphas_rot, alphas)', 'np.allclose(alphas_smooth, alphas)', 'np.allclose(alphas_smooth, alphas, atol=0.02)', 'np.isclose(alphas_smooth[0], 0.0, atol=0.01)', 'not np.isclose(alphas_smooth[2], 1.0, atol=0.1)', 'np.isclose(alphas_smooth[5], 1.0, atol=0.01)', 'np.allclose(', 'mask.shape == shape[0:2]', 'mask.dtype.name == ', 'gen.axis == 1', 'np.isclose(gen.min_value.value, 0.1)', 'np.isclose(gen.max_value.value, 1.0)', 'np.isclose(gen.start_at.value, 0.1)', 'np.isclose(gen.end_at.value, 0.9)', 'masks[0].shape == image1.shape[0:2]', 'masks[1].shape == image2.shape[0:2]', 'masks[0].dtype.name == ', 'masks[1].dtype.name == ', 'np.allclose(masks[0][:, 0:10], 0.1)', 'np.allclose(masks[1][:, 0:20], 0.1)', 'np.allclose(masks[0][:, 90:], 0.75)', 'np.allclose(masks[1][:, 180:], 0.75)', 'np.allclose(masks[0][:, 10+40], 0.1 + 0.5 * (0.75 - 0.1),', 'np.allclose(masks[1][:, 20+80], 0.1 + 0.5 * (0.75 - 0.1),', 'mask.shape == (1, 100)', 'np.isclose(mask[0, 0], 0.75)', 'np.isclose(mask[0, -1], 0.25)', 'np.isclose(mask[0, 50], 0.25 + 0.5 * (0.75 - 0.25),', 'mask.shape == (1, 100)', 'np.isclose(mask[0, 0], 0.75)', 'np.isclose(mask[0, -1], 0.25)', 'np.isclose(mask[0, 50], 0.25 + 0.5 * (0.75 - 0.25),', 'mask.shape == (1, 100)', 'np.allclose(mask[:, 0:50], 0.0)', 'np.allclose(mask[:, 50:], 1.0)', 'mask.shape == (1, 100)', 'np.allclose(mask, 0.5)', 'mask.shape == (1, 100)', 'np.allclose(mask, 0.75)', 'mask.shape == shape[0:2]', 'mask.dtype.name == ', 'np.allclose(mask[:, 0:5], 0.25)', 'np.allclose(mask[:, 5:], 0.75)', 'gen.axis == 0', 'np.isclose(gen.min_value.value, 0.1)', 'np.isclose(gen.max_value.value, 1.0)', 'np.isclose(gen.start_at.value, 0.1)', 'np.isclose(gen.end_at.value, 0.9)', 'masks[0].shape == image1.shape[0:2]', 'masks[1].shape == image2.shape[0:2]', 'masks[0].dtype.name == ', 'masks[1].dtype.name == ', 'np.allclose(masks[0][:, 0:10], 0.1)', 'np.allclose(masks[1][:, 0:20], 0.1)', 'np.allclose(masks[0][:, 90:], 0.75)', 'np.allclose(masks[1][:, 180:], 0.75)', 'np.allclose(masks[0][:, 10+40], 0.1 + 0.5 * (0.75 - 0.1),', 'np.allclose(masks[1][:, 20+80], 0.1 + 0.5 * (0.75 - 0.1),', 'gen.nb_rows.value == 2', 'gen.nb_cols.a == [1, 3]', 'np.isclose(gen.alpha.value, 0.6)', 'np.allclose(masks[0], expected1)', 'np.allclose(masks[1], expected2)', 'False', 'np.all(seen)', 'np.allclose(mask, 1.0)', 'np.allclose(mask, expected)', 'np.allclose(mask, expected)', 'np.allclose(mask, expected)', 'np.allclose(mask, expected)', 'np.allclose(mask, expected)', 'np.allclose(mask, expected)', 'np.allclose(mask, expected)', 'mask.shape == shape[0:2]', 'mask.dtype.name == ', 'np.allclose(mask, expected)', 'gen.nb_rows.value == 2', 'gen.nb_cols.a == [1, 3]', 'np.allclose(masks[0], expected1)', 'np.allclose(masks[1], expected2)', 'np.allclose(mask, 1.0)', 'np.allclose(mask, expected)', 'np.allclose(mask, expected)', 'np.allclose(mask, expected)', 'np.allclose(mask, expected)', 'np.allclose(mask, expected)', 'np.allclose(mask, expected)', 'mask.shape == shape[0:2]', 'mask.dtype.name == ', 'np.allclose(mask, expected)', 'gen.class_ids == [0]', 'gen.nb_sample_classes is None', 'gen.class_ids == [0, 1, 3]', 'gen.nb_sample_classes is None', 'isinstance(gen.class_ids, iap.Choice)', 'isinstance(gen.nb_sample_classes, iap.Deterministic)', 'mask.shape == segmap_arr.shape[0:2]', 'mask.dtype.name == ', 'np.isclose(mask[0, 0], 1.0)  # class id 1 and 3', 'np.isclose(mask[0, 1], 1.0)  # class id 2 and 0', 'np.isclose(mask[1, 1], 1.0)  # class id 0 and 3', 'np.isclose(mask[1, 0], 0.0)  # class id 1 and 0', 'np.allclose(mask[2, :], 0.0)  # class id 0 in whole row', 'False', 'np.all(seen)', 'np.allclose(mask, expected)', 'np.allclose(mask, expected, rtol=0.0, atol=0.1)', 'mask.shape == image_shape[0:2]', 'mask.dtype.name == ', 'np.allclose(mask, 0.0)', 'gen.labels is None', 'gen.nb_sample_labels is None', 'gen.labels == []', 'gen.nb_sample_labels is None', 'gen.labels == []', 'gen.nb_sample_labels is None', 'isinstance(gen.labels, iap.Choice)', 'isinstance(gen.nb_sample_labels, iap.Deterministic)', 'mask.shape == (10, 14)', 'mask.dtype.name == ', 'np.allclose(mask, expected)', 'mask.shape == (10, 14)', 'mask.dtype.name == ', 'np.allclose(mask, expected)', 'mask.shape == (10, 14)', 'mask.dtype.name == ', 'np.allclose(mask, expected)', 'mask.shape == (10, 14)', 'mask.dtype.name == ', 'np.allclose(mask, expected)', 'mask.shape == shape[0:2]', 'mask.dtype.name == ', 'np.allclose(mask, 0.0)', 'np.isclose(gen.p.p.value, 0.5)', 'gen.child is child', 'False', 'np.allclose(seen, 0.5*200, rtol=0, atol=20)', 'mask.shape == shape[0:2]', 'mask.dtype.name == ', '(', 'isinstance(aug, iaa.BlendAlphaSimplexNoise)', 'aug.foreground is aug1', 'aug.background is aug2', '(', 'isinstance(aug, iaa.BlendAlphaFrequencyNoise)', 'aug.foreground is aug1', 'aug.background is aug2', 'len(caught_warnings) == 2', 'len(caught_warnings) == 2', 'len(caught_warnings) == 2', 'len(caught_warnings) == 2', 'isinstance(param, iap.Deterministic)', 'param.value == ', 'isinstance(param, iap.Choice)', 'param.a == []']",[],[],[],[],[],[],[],[],[],[],[],[],"['first in children_lsts[0]', 'second == children_lsts[1]', 'aug_det.first.deterministic', 'aug_det.second.deterministic', 'False', 'np.isclose(aug.nb_bins.a.value, 5)', 'np.isclose(aug.nb_bins.b.value, 15)', 'np.isclose(aug.smoothness.a.value, 0.1)', 'np.isclose(aug.smoothness.b.value, 0.3)', 'np.isclose(aug.alpha.a[0], 0.0)', 'np.isclose(aug.alpha.a[1], 1.0)', 'np.isclose(aug.offset.a.value, 0.0)', 'np.isclose(aug.offset.b.value, 1.0)', 'aug.from_colorspace == iaa.CSPACE_RGB', 'aug.nb_bins.value == 100', 'np.isclose(aug.smoothness.value, 0.5)', 'np.isclose(aug.alpha.value, 0.7)', 'np.isclose(aug.offset.value, 0.9)', 'aug.from_colorspace == iaa.CSPACE_HSV', 'np.all(np.logical_or(grayscaled == 0, grayscaled == 3))', 'len(set(nb_grayscaled)) >= 5', 'np.array_equal(image_aug, image)', 'np.array_equal(image_aug, image_gray)', 'np.array_equal(image_aug, image_gray)', 'alphas_up.shape == (256,)', 'np.allclose(alphas_up, 0.5)', 'alphas_up.shape == (256,)', 'np.allclose(alphas_up[0:128], 1.0)', 'np.allclose(alphas_up[128:], 0.5)', 'alphas_up.shape == (256,)', 'np.allclose(alphas_up[0:2], 0.25)', 'np.allclose(alphas_up[2:], 0.5)', 'alphas_up.shape == (256,)', 'np.allclose(alphas, 0.5)', 'np.allclose(alphas_rot, alphas)', 'np.allclose(alphas_rot[:-1], alphas[1:])', 'np.allclose(alphas_rot[-1:], alphas[:1])', 'np.allclose(alphas_rot[:-255], alphas[255:])', 'np.allclose(alphas_rot[-255:], alphas[:255])', 'np.allclose(alphas_rot, alphas)', 'np.allclose(alphas_smooth, alphas)', 'np.allclose(alphas_smooth, alphas, atol=0.02)', 'np.isclose(alphas_smooth[0], 0.0, atol=0.01)', 'not np.isclose(alphas_smooth[2], 1.0, atol=0.1)', 'np.isclose(alphas_smooth[5], 1.0, atol=0.01)', 'np.allclose(', 'params[0].value == 100', 'np.isclose(params[1].value, 0.5)', 'np.isclose(params[2].value, 0.7)', 'np.isclose(params[3].value, 0.9)', 'params[4] == iaa.CSPACE_HSV', 'image_aug.shape == image.shape', 'np.allclose(hms_aug.arr_0to1, hms.arr_0to1)', 'np.all(np.logical_or(grayscaled == 1, grayscaled == 3))', 'len(set(nb_grayscaled)) >= 5', 'np.allclose(image_aug, image, atol=2.5)', 'np.array_equal(image_aug, image_gray)', 'np.array_equal(image_aug, image_gray)', 'len(caught_warnings) == 1', 'len(caught_warnings) == 1', 'len(caught_warnings) == 1', 'len(caught_warnings) == 1']",[],[],[],[],[],[],[],[],[],[],[],[]
2540,aleju,kontakt@ajung.name,2020-01-11 21:31:13+01:00,38168b57905c1ec3d1bf0bd8a442ee85ad77a587,https://github.com/aleju/imgaug/commit/38168b57905c1ec3d1bf0bd8a442ee85ad77a587,"Mark func/class docstring links as absolute

This patch adds a tilde symbol to absolute
:class: and :func: links in docstrings.
The symbol was previously missing.",31,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2541,aleju,kontakt@ajung.name,2020-01-11 22:20:37+01:00,1ca42e57de5f3eca8f81704ef7b753734cfd89cd,https://github.com/aleju/imgaug/commit/1ca42e57de5f3eca8f81704ef7b753734cfd89cd,"Unify OpenCV Input Normalization

Refactor various augmenters to use the same
normalization for OpenCV inputs. This probably
fixes some previously undiscovered bugs.",13,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2542,aleju,kontakt@ajung.name,2020-01-12 15:38:59+01:00,9d5958294c4ff52ccecfa99f2e3f518a86b71125,https://github.com/aleju/imgaug/commit/9d5958294c4ff52ccecfa99f2e3f518a86b71125,"Improve batchwise augmentation backend

This patch is a follow-up to 2d3fdb7
It makes the original patch no longer breaking,
improves naming of methods and adds some tests.
List of changes:

* Rename augment_batch() to augment_batch_().
* Rename _augment_batch() to _augment_batch_().
* Re-add augment_batch() and mark it as deprecated.
* Add UnnormalizedBatch.fill_from_normalized_batch_()
  and use it in augment_batch_().
* Add context testutils.TemporaryDirectory.
* Add a few tests for augment_batch_().
* Add tests for augmenting images loaded via
  functions from popular libraries.",26,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],3,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,84,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestAugmenter_augment_batch(unittest.TestCase):', 'class TestAugmenter_augment_batch_(unittest.TestCase):', 'class TestAugmenterWithLoadedImages(unittest.TestCase):']",[],"['def setUp(self):', 'def setUp(self):']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['mock_all_channel_clahe._augment_batch_.call_count == 1', 'mock_all_channel_clahe._augment_batch_.call_count == 1', 'mock_all_channel_clahe._augment_batch_.call_count == 1', 'mock_all_channel_clahe._augment_batch_.call_count == 1', 'len(batch.images) > 0', 'len(batch.segmentation_maps) > 0', 'len(batch.keypoints) > 0', 'len(caught_warnings) == 1', 'in str(caught_warnings[0].message)', 'batch_aug is batch', 'batch_aug.images_aug is not batch.images_unaug', 'batch_aug.images_aug is not batch_aug.images_unaug', 'np.array_equal(image, image_cp)', 'np.array_equal(image_unaug, image_cp)', 'np.array_equal(image_aug, image_cp + 1)', 'batch_aug is batch', 'batch_aug.images_aug is not batch.images_unaug', 'batch_aug.images_aug is not batch_aug.images_unaug', 'np.array_equal(image, image_cp)', 'np.array_equal(image_unaug, image_cp)', 'np.array_equal(image_aug, image_cp + 1)', 'batch_aug is batch', 'batch_aug.images_aug is not batch.images_unaug', 'batch_aug.images_aug is not batch_aug.images_unaug', 'np.array_equal(image, image_cp)', 'np.array_equal(image_unaug, image_cp)', 'np.array_equal(image_aug, image_cp + 1)', 'batch_aug is batch', 'batch_aug.images is batch.images', 'not np.array_equal(image, image_cp)', 'np.array_equal(image_aug, image_cp + 1)', 'batch_aug is batch', '(batch_aug.segmentation_maps_aug', '(batch_aug.segmentation_maps_aug', 'np.array_equal(segmap.get_arr(), segmap_cp.get_arr())', 'np.array_equal(segmap_unaug.get_arr(), segmap_cp.get_arr())', 'np.array_equal(segmap_aug.get_arr(), segmap_cp.get_arr() + 1)', 'batch_aug is batch', '(batch_aug.keypoints_aug', '(batch_aug.keypoints_aug', 'np.allclose(kpsoi.to_xy_array(), kpsoi_cp.to_xy_array())', 'np.allclose(kpsoi_unaug.to_xy_array(), kpsoi_cp.to_xy_array())', 'np.allclose(kpsoi_aug.to_xy_array()[:, 0],', 'np.allclose(kpsoi_aug.to_xy_array()[:, 1],', 'image_aug is not image_reloaded', 'np.array_equal(image_reloaded, image_cp)', 'np.array_equal(image_aug, image_cp + 1)', 'image_aug is not image_reloaded', 'np.array_equal(image_reloaded, image_cp)', 'np.array_equal(image_aug, image_cp + 1)', 'images_aug is not images_reloaded', 'np.array_equal(images_reloaded, images_cp)', 'np.array_equal(images_aug, images_cp + 1)', 'images_aug is not images_reloaded', 'np.array_equal(images_reloaded, images_cp)', 'np.array_equal(images_aug, images_cp + 1)', 'image_aug is not image_reloaded', 'np.array_equal(image_reloaded, image_cp)', 'np.array_equal(image_aug, image_cp + 1)', 'image_aug is not image_reloaded', 'np.array_equal(image_reloaded, image_cp)', 'np.array_equal(image_aug, image_cp + 1)', 'images_aug is not images_reloaded', 'np.array_equal(images_reloaded, images_cp)', 'np.array_equal(images_aug, images_cp + 1)', 'images_aug is not images_reloaded', 'np.array_equal(images_reloaded, images_cp)', 'np.array_equal(images_aug, images_cp + 1)', 'image_aug is not image_reloaded', 'np.array_equal(image_reloaded, image_cp)', 'np.array_equal(image_aug, image_cp + 1)', 'image_aug is not image_reloaded', 'np.array_equal(image_reloaded, image_cp)', 'np.array_equal(image_aug, image_cp + 1)', 'images_aug is not images_reloaded', 'np.array_equal(images_reloaded, images_cp)', 'np.array_equal(images_aug, images_cp + 1)', 'images_aug is not images_reloaded', 'np.array_equal(images_reloaded, images_cp)', 'np.array_equal(images_aug, images_cp + 1)', 'result == ', 'augseq.augment_batch_.call_count == 1', 'result == ', 'augseq.augment_batch_.call_count == 1']",[],[],[],[],[],[],[],[],[],[],[],[],"['mock_all_channel_clahe._augment_batch.call_count == 1', 'mock_all_channel_clahe._augment_batch.call_count == 1', 'mock_all_channel_clahe._augment_batch.call_count == 1', 'mock_all_channel_clahe._augment_batch.call_count == 1', 'result == ', 'augseq.augment_batch.call_count == 1', 'result == ', 'augseq.augment_batch.call_count == 1']",[],[],[],[],[],[],[],[],[],[],[],[]
2543,aleju,kontakt@ajung.name,2020-01-12 22:25:26+01:00,c8c8540ac9d0ea3e3c77ccef2386b47f38dd4fd0,https://github.com/aleju/imgaug/commit/c8c8540ac9d0ea3e3c77ccef2386b47f38dd4fd0,"Simplify standard Augmenter parameters

Change the standard parameters shared by all augmenters to a
reduced and more self-explanatory set. Previously, all augmenters
shared the parameters `name`, `random_state` and `deterministic`.
The new parameters are `seed` and `name`.

`deterministic` is removed as it was hardly ever used and because
it caused frequently confusion with regards to its meaning. The
parameter is still accepted but will now produce a deprecation
warning. Use `<augmenter>.to_deterministic()` instead.
(Reminder: `to_deterministic()` is necessary if you want to get
the same samples in consecutive augmentation calls. It is *not*
necessary if you want your generated samples to be dependent on
an initial seed or random state as that is *always* the case
anyways. You only have to manually set the seed, either
augmenter-specific via the `seed` parameter or global via
`imgaug.random.seed()` (affects only augmenters without their
own seed).)

`random_state` is renamed to `seed` as providing a seed value
is the more common use case compared to providing a random state.
Many users also seemed to be unaware that `random_state` accepted
seed values. The new name should make this more clear.
The old parameter `random_state` is still accepted, but will
likely be deprecated in the future.

**[breaking]** This patch breaks if one relied on the order of
`name` and `random_state` instead of their names. These parameters
are now in inverted order, i.e. `(..., seed=None, name=None, ...)`
as seeds are much more commonly used than names.",35,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Raises', '(AssertionError) as ctx:')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['aug.deterministic', 'not aug.random_state.is_global_rng()', 'len(caught_warnings) == 1', '(', 'aug.random_state.generator is rs.generator', 'aug.random_state.equals(iarandom.RNG(123))', 'in str(ctx.exception)', 'mock_voronoi.call_args_list[0][1][] is rs', 'mock_voronoi.call_args_list[0][1][] is rs', 'mock_voronoi.call_args_list[0][1][] is rs']",[],[],[],[],[],[],[],[],[],[],[],[],"['aug.deterministic', 'not aug.random_state.is_global_rng()', 'mock_voronoi.call_args_list[0][1][] is True', 'mock_voronoi.call_args_list[0][1][] is rs', 'aug.deterministic is True', 'mock_voronoi.call_args_list[0][1][] is True', 'mock_voronoi.call_args_list[0][1][] is rs', 'aug.deterministic is True', 'mock_voronoi.call_args_list[0][1][] is True', 'mock_voronoi.call_args_list[0][1][] is rs', 'aug.deterministic is True']",[],[],[],[],[],[],[],[],[],[],[],[]
2544,aleju,kontakt@ajung.name,2020-01-13 21:33:49+01:00,202dbc525172ff55834d252fbc9dedf139feffc0,https://github.com/aleju/imgaug/commit/202dbc525172ff55834d252fbc9dedf139feffc0,"Fix randomness of children in .weather

Fix some augmenters in module `weather` not transferring seed
values or random states that were provided upon creation to child
augmenters.",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2545,aleju,kontakt@ajung.name,2020-01-13 21:37:27+01:00,3ad87787c8dddeb3bd0adbc9e5f7ca7509848a1d,https://github.com/aleju/imgaug/commit/3ad87787c8dddeb3bd0adbc9e5f7ca7509848a1d,"Switch test tempfile -> TemporaryDirectory

Switch a test from `tempfile.mkdtemp()` to
`imgaug.testutils.TemporaryDirectory`. This implicitly adds
a `shutils.rmtree()` that was previously not executed.",1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(list(os.listdir(folder_path))) == 3', 'os.path.isfile(path1)', 'os.path.isfile(path2)', 'os.path.isfile(path_latest)', 'np.array_equal(imageio.imread(path1), expected)', 'np.array_equal(imageio.imread(path2), expected)', 'np.array_equal(imageio.imread(path_latest), expected)']",[],[],[],[],[],[],[],[],[],[],[],[],"['len(list(os.listdir(folder_path))) == 3', 'os.path.isfile(path1)', 'os.path.isfile(path2)', 'os.path.isfile(path_latest)', 'np.array_equal(imageio.imread(path1), expected)', 'np.array_equal(imageio.imread(path2), expected)', 'np.array_equal(imageio.imread(path_latest), expected)']",[],[],[],[],[],[],[],[],[],[],[],[]
2546,aleju,kontakt@ajung.name,2020-01-13 21:57:46+01:00,5d07ed8f461f1de7b7ab0e96020b857f9327f9f5,https://github.com/aleju/imgaug/commit/5d07ed8f461f1de7b7ab0e96020b857f9327f9f5,Add random state normalization to cutout funcs,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2547,aleju,kontakt@ajung.name,2020-01-13 22:07:05+01:00,1d0ceaeeb58db2df39257f0aa66793988801e8f1,https://github.com/aleju/imgaug/commit/1d0ceaeeb58db2df39257f0aa66793988801e8f1,"Move ScaleY within file

`ScaleY` followed in `.geometric` not directly after `ScaleX`.
The order of augmenters within the file is now changed to have
these right next to each other.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2548,aleju,kontakt@ajung.name,2020-01-13 22:12:10+01:00,6cee2a59145562dda13fe9516edf2b30442bb6fd,https://github.com/aleju/imgaug/commit/6cee2a59145562dda13fe9516edf2b30442bb6fd,"Replace 'note ::' with 'note::'

This fixes a few docstrings where note blocks where marked in the
wrong way, leading to them accidentally being comments.",4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2549,aleju,kontakt@ajung.name,2020-01-13 22:16:20+01:00,70c8ad2248d95dc8592787a123ad595b45fb00a4,https://github.com/aleju/imgaug/commit/70c8ad2248d95dc8592787a123ad595b45fb00a4,"Add -Walways to run_tests.sh

This adds the argument `-Walways` to the command in `run_tests.sh`.
Adding this argument makes python 2.7 behave more similarly to
3+ so that it no longer swallows warnings after they have been
shown once.",1,False,False,False,False,False,True,True,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2550,aleju,kontakt@ajung.name,2020-01-14 20:38:25+01:00,9a2143134fbfc942b7e46bcf5bb13318e33f2f18,https://github.com/aleju/imgaug/commit/9a2143134fbfc942b7e46bcf5bb13318e33f2f18,"Fix Jigsaw not only depending on its own RNG

Jigsaw behaved previously non-deterministically as it dependent on
its own local RNG and additionally the global RNG.
This patch fixes that issue.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2551,aleju,kontakt@ajung.name,2020-01-14 21:11:25+01:00,8c82425de7b954406f19e2d7f6653fbe8a2fdc67,https://github.com/aleju/imgaug/commit/8c82425de7b954406f19e2d7f6653fbe8a2fdc67,"Improve code style of cutout

This switches an instance method to a classmethod.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2552,aleju,kontakt@ajung.name,2020-01-14 21:23:28+01:00,b435df65c3322a2fe376fd07289d1b48ad6bf42a,https://github.com/aleju/imgaug/commit/b435df65c3322a2fe376fd07289d1b48ad6bf42a,"Remove unused name parameter

`.contrast._IntensityChannelBasedApplier` currently has a `name`
parameter that is neither used nor needed. This patch removes
the parameter.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2553,aleju,kontakt@ajung.name,2020-01-14 22:50:27+01:00,049ab0376085fc5759c1ec0badeb7606359a45e4,https://github.com/aleju/imgaug/commit/049ab0376085fc5759c1ec0badeb7606359a45e4,"Improve dtype support docstrings

This patch improves the formatting of the 'dtype support'
blocks in docstrings. Changes:
- Change dtype support blocks to sections, similar to
  ""Parameters"" and ""Returns"". Links to classes/functions
  should therefore now be clickable in RTD.
- Change inset level of dtype support blocks.
- Add :class: and :func: where possible.
- Fix a few formatting problems.",16,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2554,aleju,kontakt@ajung.name,2020-01-14 20:39:27+01:00,a0f8c37b3a9180a3955c2388bfa747d82aa9c3d4,https://github.com/aleju/imgaug/commit/a0f8c37b3a9180a3955c2388bfa747d82aa9c3d4,"Add missing pickling tests of augmenters

Some new augmenters had no tests yet that verified whether these
augmenters can be pickled. This patch adds these tests to all
remaining augmenters.",9,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(img11, img21)', 'np.array_equal(img12, img22)', 'np.allclose(cbaoi_aug.to_xy_array(), cbaoi_aug_pkl.to_xy_array())', 'np.allclose(cbaoi_aug.to_xy_array(), cbaoi_aug_pkl.to_xy_array())']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2555,aleju,kontakt@ajung.name,2020-01-13 22:02:26+01:00,d8218cbeac29e95cd8ef8fc32497ff82ceaabb4b,https://github.com/aleju/imgaug/commit/d8218cbeac29e95cd8ef8fc32497ff82ceaabb4b,Rename 'random_state' to 'seed' in cutout funcs,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['kwargs[] is seed', 'isinstance(kwargs[], iarandom.RNG)', 'isinstance(kwargs[], iarandom.RNG)']",[],[],[],[],[],[],[],[],[],[],[],[],"['kwargs[] is random_state', 'isinstance(kwargs[], iarandom.RNG)', 'isinstance(kwargs[], iarandom.RNG)']",[],[],[],[],[],[],[],[],[],[],[],[]
2556,aleju,kontakt@ajung.name,2020-01-14 21:16:26+01:00,8e2302220fb9a0169155671d7d0346b247be3e23,https://github.com/aleju/imgaug/commit/8e2302220fb9a0169155671d7d0346b247be3e23,"Rename 'random_state' to 'seed' in generate_jigsaw_destinations()

This patch renames the parameter `random_state` to `seed`
in `generate_jigsaw_destinations()` as that makes it more clear
that the parameter also accepts seed values, which is the
standard use case.",3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2557,aleju,kontakt@ajung.name,2020-01-15 18:23:16+01:00,6e72ca4a1642f4e59426318405633b9fe8b52072,https://github.com/aleju/imgaug/commit/6e72ca4a1642f4e59426318405633b9fe8b52072,Fix pylint issues,7,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2558,aleju,kontakt@ajung.name,2020-01-17 22:01:41+01:00,c5508e272ac34bfb825f40620f3324c123a2ed61,https://github.com/aleju/imgaug/commit/c5508e272ac34bfb825f40620f3324c123a2ed61,"Add tests to verify that global RNG changes

This patch adds a few tests to verify that consecutive
calls of `.augment_batch_()` change the global RNG in the way
we would expect (i.e. that consecutive calls do not produce
the same outputs).",1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['repr(state_before) != repr(state_after)', 'batch_aug1 is not batch_aug2', 'batch_aug1 is not batch_aug2', 'batch_aug2 is not batch_aug3', 'nb_equal[0] < (0.25 + 0.1) * nb_images', 'nb_equal[1] < (0.25 + 0.1) * nb_images', 'nb_equal[2] < (0.25 + 0.1) * nb_images', 'np.array_equal(', 'not np.array_equal(']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2559,aleju,kontakt@ajung.name,2020-01-18 11:13:52+01:00,12ae82c0bb4b4f856765115c0f0c7244dc6e84b8,https://github.com/aleju/imgaug/commit/12ae82c0bb4b4f856765115c0f0c7244dc6e84b8,"Fix inaccuracy in PerspectiveTransformation

Fix an inaccuracy in `PerspectiveTransform` that can lead to
slightly misaligned transformations between images and
coordinate-based augmentables (e.g. bounding boxes). The problem
is more significant the smaller the images and larger the
`scale` values. It is also worsened by using `fit_output`.
The inaccuracy is caused by using H-1 and W-1 instead of
H and W.",3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['(img_aug0 == 255).all()', 'image_aug.shape == image.shape', '0-tol <= y_min <= tol,  % (y_min, i)', '0-tol <= x_min <= tol,  % (x_min, i)', 'h-tol <= y_max <= h+tol, (', 'w-tol <= x_max <= w+tol, (']",[],[],[],[],[],[],[],[],[],[],[],[],"['not (img_aug0 == 255).all()', 'image_aug.shape != image.shape', '0-tol <= y_min <= tol', '0-tol <= x_min <= tol', 'h-tol <= y_max <= h+tol', 'w-tol <= x_max <= w+tol']",[],[],[],[],[],[],[],[],[],[],[],[]
2560,Alexander Jung,kontakt@ajung.name,2020-01-18 13:05:04+01:00,d1d790c7c35671f7cfc421c02cf2adb6da4674c1,https://github.com/aleju/imgaug/commit/d1d790c7c35671f7cfc421c02cf2adb6da4674c1,"Fix PerspectiveTransform not affecting RNG  (#584)

Fix PerspectiveTransform not affecting RNG

This patch fixes an issue in PerspectiveTransform, where
consecutive calls of the augmenter would not affect its
RNG. This would lead to every call producing the same outputs.
A corresponding test is added.

This issue should not have affected the 0.3.0 release.",3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['nb_same <= 1'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2561,Alexander Jung,kontakt@ajung.name,2020-01-18 13:17:39+01:00,b282b97c13a27a32f91c2e2666db1e128e00cfde,https://github.com/aleju/imgaug/commit/b282b97c13a27a32f91c2e2666db1e128e00cfde,"Fix docstring problems (#581)

This patch fixes various docstring errors:
- Missing dtype support sections
- Wrong `:class:` and `:func:` links
- Wrong statements from copy-paste errors",7,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2562,aleju,kontakt@ajung.name,2020-01-22 20:18:44+01:00,2317a3ed08fdbbc13fbed6b64d9dec58de19a09a,https://github.com/aleju/imgaug/commit/2317a3ed08fdbbc13fbed6b64d9dec58de19a09a,"Fix PIL augs failing on ndarray as batch.images

Some augmenters in `imgaug.augmenters.pillike` failed when
`batch.images` was a single ndarray instead of a list of
arrays. This patch fixes the underlying issues.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2563,aleju,kontakt@ajung.name,2020-01-22 20:22:08+01:00,23e92f33adfe9ac5f2872976189190b38a06bf8a,https://github.com/aleju/imgaug/commit/23e92f33adfe9ac5f2872976189190b38a06bf8a,"Fix outdated class name in error message

`pillike.Affine` used an the outdated classname `PILAffine` in
one of its error messages. It should be `pillike.Affine`.
This patch fixes the issue.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2564,aleju,kontakt@ajung.name,2020-01-22 20:40:48+01:00,cb6aad2afc66d48763c0c922be9aaef0739dbdf1,https://github.com/aleju/imgaug/commit/cb6aad2afc66d48763c0c922be9aaef0739dbdf1,"Fix KeepSizeByResize crashing

This patch fixes `KeepSizeByResize` potentially crashing if a
single numpy array was provided as the input for an iterable
of images (as opposed to a list of numpy arrays).",3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['images.dtype.name == ', 'images.shape == (10, 100, 100)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2565,aleju,kontakt@ajung.name,2020-01-22 21:54:30+01:00,9cca454a95b3336f05e4e18bf870033739421dcf,https://github.com/aleju/imgaug/commit/9cca454a95b3336f05e4e18bf870033739421dcf,"Fix imgc.ElasticTransform accepting non-image data

Currently, `imgcorruptlike.ElasticTransform` accepts non-image
input data (e.g. segmentation maps, bounding boxes) and merely
does not change them. That is dangerous and rarely a desirable
property. The augmenter is changes in this patch to produce
an error in these cases.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2566,aleju,kontakt@ajung.name,2020-01-22 21:56:39+01:00,df8a55daabe835578fe05a9ea034717e6bf32028,https://github.com/aleju/imgaug/commit/df8a55daabe835578fe05a9ea034717e6bf32028,Increase docstring 'note' to 'warning',1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2567,aleju,kontakt@ajung.name,2020-01-23 20:49:45+01:00,1ef0c40c30b5d607ee0545657c8380fcc8634499,https://github.com/aleju/imgaug/commit/1ef0c40c30b5d607ee0545657c8380fcc8634499,"Add links to module docstring of .imgcorruptlike

This patch adds a link to the original repository from where
`imagecorruptions` got its code from.
The patch also adds links/references to the two corresponding
papers.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2568,aleju,kontakt@ajung.name,2020-01-23 21:30:38+01:00,3fe5e7662de4cd6eb4abfd610094c766e4169912,https://github.com/aleju/imgaug/commit/3fe5e7662de4cd6eb4abfd610094c766e4169912,"Mark BatchInAugmentation as private

This patch renames `BatchInAugmentation` to `_BatchInAugmentation`.
The average user is currently not expected to need it, as `Batch`
and `UnnormalizedBatch` provide the same features, just a bit
slower.",9,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,['class Test_BatchInAugmentation(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],['class TestBatchInAugmentation(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],"['isinstance(batch_inaug, _BatchInAugmentation)', 'isinstance(batch_inaug, _BatchInAugmentation)']",[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(batch_inaug, ia.BatchInAugmentation)', 'isinstance(batch_inaug, ia.BatchInAugmentation)']",[],[],[],[],[],[],[],[],[],[],[],[]
2569,fchouteau,florient.chouteau@gmail.com,2020-01-24 17:22:51+01:00,9381d344172bb33f593d357106764004e4e60616,https://github.com/aleju/imgaug/commit/9381d344172bb33f593d357106764004e4e60616,"Allow any opencv-* as requirement if already installed (#586)

This patch changes `setup.py` to support any `opencv-*` package.
I.e. if `opencv-python`, `opencv-python-headless`, `opencv-contrib-python`
and `opencv-contrib-python-headless` are now all accepted and will no longer
lead to another opencv package being installed.
This is only the case if the library is installed using `python setup.py install`.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2570,Alexander Jung,kontakt@ajung.name,2020-01-25 14:45:52+01:00,882512cf95b36b55fb4260316b9d0e2bbe501850,https://github.com/aleju/imgaug/commit/882512cf95b36b55fb4260316b9d0e2bbe501850,"Improve default values of augmenters (#582)

**[breaking]** Most augmenters had previously default values that
made them equivalent to identity functions. Users had to explicitly
change the defaults to proper values in order to ""activate""
augmentations. To simplify the usage of the library, the default
values of most augmenters are changed in this patch to
medium-strength augmentations. E.g.
`Sequential([Affine(), UniformVoronoi(), CoarseDropout()])`
should now produce decent augmentations.

A few augmenters are set to always-on, maximum-strength
augmentations. This is the case for:

* `Grayscale` (always fully grayscales images, use
  `Grayscale((0.0, 1.0))` for random strengths)
* `RemoveSaturation` (same as `Grayscale`)
* `Fliplr` (always flips images, use `Fliplr(0.5)` for 50%
  probability)
* `Flipud` (same as `Fliplr`)
* `TotalDropout` (always drops everything, use
  `TotalDropout(0.1)` to drop everything for 10% of all images)
* `Invert` (always inverts images, use `Invert(0.1)` to invert
  10% of all images)
* `Rot90` (always rotates exactly once clockwise by 90 degrees,
  use `Rot90((0, 3))` for any rotation)

These settings seem to better match user-expectations.
Such maximum-strength settings however are not chosen for all
augmenters where one might expect them. The defaults are set to
varying strengths for, e.g.  `Superpixels` (replaces only some
superpixels with cellwise average colors), `UniformVoronoi` (also
only replaces some cells), `Sharpen` (alpha-blends with variable
strength, the same is the case for `Emboss`, `EdgeDetect` and
`DirectedEdgeDetect`) and `CLAHE` (variable clip limits).

*Note*: Some of the new default values will cause issues with
non-`uint8` inputs.

*Note*: The defaults for `per_channel` and `keep_size` are not
adjusted. It is currently still the default behaviour of all
augmenters to affect all channels in the same way and to resize
their outputs back to the input sizes.

The exact changes to default values are listed below.

**imgaug.arithmetic**
  
  * `Add`
    * `value`: `0` -> `(-20, 20)`
  * `AddElementwise`
    * `value`: `0` -> `(-20, 20)`
  * `AdditiveGaussianNoise`
    * `scale`: `0` -> `(0, 15)`
  * `AdditiveLaplaceNoise`
    * `scale`: `0` -> `(0, 15)`
  * `AdditivePoissonNoise`
    * `scale`: `0` -> `(0, 15)`
  * `Multiply`
    * `mul`: `1.0` -> `(0.8, 1.2)`
  * `MultiplyElementwise`:
    * `mul`: `1.0` -> `(0.8, 1.2)`
  * `Dropout`: 
    * `p`: `0.0` -> `(0.0, 0.05)`
  * `CoarseDropout`:
    * `p`: `0.0` -> `(0.02, 0.1)`
    * `size_px`: `None` -> `(3, 8)`
    * `min_size`: `4` -> `3`
    * Default for `size_px` is only used if neither `size_percent`
      nor `size_px` is provided by the user.
  * `CoarseSaltAndPepper`:
    * `p`: `0.0` -> `(0.02, 0.1)`
    * `size_px`: `None` -> `(3, 8)`
    * `min_size`: `4` -> `3`
    * Default for `size_px` is only used if neither `size_percent`
      nor `size_px` is provided by the user.
  * `CoarseSalt`:
    * `p`: `0.0` -> `(0.02, 0.1)`
    * `size_px`: `None` -> `(3, 8)`
    * `min_size`: `4` -> `3`
    * Default for `size_px` is only used if neither `size_percent`
      nor `size_px` is provided by the user.
  * `CoarsePepper`:
    * `p`: `0.0` -> `(0.02, 0.1)`
    * `size_px`: `None` -> `(3, 8)`
    * `min_size`: `4` -> `3`
    * Default for `size_px` is only used if neither `size_percent`
      nor `size_px` is provided by the user.
  * `SaltAndPepper`:
    * `p`: `0.0` -> `(0.0, 0.03)`
  * `Salt`:
    * `p`: `0.0` -> `(0.0, 0.03)`
  * `Pepper`:
    * `p`: `0.0` -> `(0.0, 0.05)`
  * `ImpulseNoise`:
    * `p`: `0.0` -> `(0.0, 0.03)`
  * `Invert`: 
    * `p`: `0` -> `1`
  * `JpegCompression`:
    * `compression`: `50` -> `(0, 100)`

**imgaug.blend**

  * `BlendAlpha`
    * `factor`: `0` -> `(0.0, 1.0)`
  * `BlendAlphaElementwise`
    * `factor`: `0` -> `(0.0, 1.0)`

**imgaug.blur**

  * `GaussianBlur`:
    * `sigma`: `0` -> `(0.0, 3.0)`
  * `AverageBlur`:
    * `k`: `1` -> `(1, 7)`
  * `MedianBlur`:
    * `k`: `1` -> `(1, 7)`
  * `BilateralBlur`:
    * `d`: `1` -> `(1, 9)`
  * `MotionBlur`:
    * `k`: `5` -> `(3, 7)`

**imgaug.color**

  * `MultiplyHueAndSaturation`:
    * `mul_hue`: `None` -> `(0.5, 1.5)`
    * `mul_saturation`: `None` -> `(0.0, 1.7)`
    * These defaults are only used if the user provided neither
      `mul` nor `mul_hue` nor `mul_saturation`.
  * `MultiplyHue`:
    * `mul`: `(-1.0, 1.0)` -> `(-3.0, 3.0)`
  * `AddToHueAndSaturation`:
    * `value_hue`: `None` -> `(-40, 40)`
    * `value_saturation`: `None` -> `(-40, 40)`
    * These defaults are only used if the user provided neither
      `value` nor `value_hue` nor `value_saturation`.
  * `Grayscale`:
    * `alpha`: `0` -> `1`

**imgaug.contrast**

  * `GammaContrast`:
    * `gamma`: `1` -> `(0.7, 1.7)` 
  * `SigmoidContrast`:
    * `gain`: `10` -> `(5, 6)`
    * `cutoff`: `0.5` -> `(0.3, 0.6)`
  * `LogContrast`:
    * `gain`: `1` -> `(0.4, 1.6)`
  * `LinearContrast`:
    * `alpha`: `1` -> `(0.6, 1.4)`
  * `AllChannelsCLAHE`:
    * `clip_limit`: `40` -> `(0.1, 8)`
    * `tile_grid_size_px`: `8` -> `(3, 12)`
  * `CLAHE`: 
    * `clip_limit`: `40` -> `(0.1, 8)`
    * `tile_grid_size_px`: `8` -> `(3, 12)`

**convolutional**

  * `Sharpen`:
    * `alpha`: `0` -> `(0.0, 0.2)`
    * `lightness`: `1` -> `(0.8, 1.2)`
  * `Emboss`:
    * `alpha`: `0` -> `(0.0, 1.0)`
    * `strength`: `1` -> `(0.25, 1.0)`
  * `EdgeDetect`:
    * `alpha`: `0` -> `(0.0, 0.75)`
  * `DirectedEdgeDetect`:
    * `alpha`: `0` -> `(0.0, 0.75)`

**imgaug.flip**

  * `Fliplr`:
    * `p`: `0` -> `1`
  * `Flipud`:
    * `p`: `0` -> `1`

**imgaug.geometric**

  * `Affine`:
    * `scale`: `1` -> `{""x"": (0.9, 1.1), ""y"": (0.9, 1.1)}`
    * `translate_percent`: None -> `{""x"": (-0.1, 0.1), ""y"": (-0.1, 0.1)}`
    * `rotate`: `0` -> `(-15, 15)`
    * `shear`: `0` -> `shear={""x"": (-10, 10), ""y"": (-10, 10)}`
    * These defaults are only used if no affine transformation
      parameter was set by the user. Otherwise the not-set
      parameters default again towards the identity function.
  * `PiecewiseAffine`:
    * `scale`: `0` -> `(0.0, 0.04)`
    * `nb_rows`: `4` -> `(2, 4)`
    * `nb_cols`: `4` -> `(2, 4)`
  * `PerspectiveTransform`:
    * `scale`: `0` -> `(0.0, 0.06)`
  * `ElasticTransformation`:
    * `alpha`: `0` -> `(0.0, 40.0)`
    * `sigma`: `0` -> `(4.0, 8.0)`
  * `Rot90`:
    * `k`: `(no default)` -> `k=1`

**imgaug.pooling**

  * `AveragePooling`:
    * `k`: `(no default)` -> `(1, 5)`
  * `MaxPooling`:
    * `k`: `(no default)` -> `(1, 5)`
  * `MinPooling`:
    * `k`: `(no default)` -> `(1, 5)`
  * `MedianPooling`:
    * `k`: `(no default)` -> `(1, 5)`

**imgaug.segmentation**
 
  * `Superpixels`:
    * `p_replace`: `0.0` -> `(0.5, 1.0)`
    * `n_segments`: `100` -> `(50, 120)`
  * `UniformVoronoi`:
    * `n_points`: `(no default)` -> `(50, 500)`
    * `p_replace`: `1.0` -> `(0.5, 1.0)`.
  * `RegularGridVoronoi`:
    * `n_rows`: `(no default)` -> `(10, 30)`
    * `n_cols`: `(no default)` -> `(10, 30)`
    * `p_drop_points`: `0.4` -> `(0.0, 0.5)`
    * `p_replace`: `1.0` -> `(0.5, 1.0)`
  * `RelativeRegularGridVoronoi`: Changed defaults from
    * `n_rows_frac`: `(no default)` -> `(0.05, 0.15)`
    * `n_cols_frac`: `(no default)` -> `(0.05, 0.15)`
    * `p_drop_points`: `0.4` -> `(0.0, 0.5)`
    * `p_replace`: `1.0` -> `(0.5, 1.0)`

**imgaug.size**

  * `CropAndPad`:
    * `percent`: `None` -> `(-0.1, 0.1)`
    * This default is only used if the user has provided
      neither `px` nor `percent`.
  * `Pad`:
    * `percent`: `None` -> `(0.0, 0.1)`
    * This default is only used if the user has provided
      neither `px` nor `percent`.
  * `Crop`:
    * `percent`: `None` -> `(0.0, 0.1)`
    * This default is only used if the user has provided
      neither `px` nor `percent`.",17,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],"[('Raises', '(AssertionError) as ctx:'), ('Raises', '(AssertionError) as ctx:')]",[],[],[],[],[],[],[],[],[],"['np.isclose(aug.mul.size_px.a.value, 3)', 'np.isclose(aug.mul.size_px.b.value, 8)', 'np.isclose(aug.p.p.value, 1-0.1)', 'np.isclose(aug.mask.size_px.a.value, 3)', 'np.isclose(aug.mask.size_px.b.value, 8)', 'np.isclose(aug.mask.size_px.a.value, 3)', 'np.isclose(aug.mask.size_px.b.value, 8)', 'np.isclose(aug.mask.size_px.a.value, 3)', 'np.isclose(aug.mask.size_px.b.value, 8)', 'np.isclose(multiply.mul.val.value, 1.0)', 'aug.value_hue is not None', 'aug.value_saturation is not None', 'np.isclose(aug.translate[0].a.value, -0.25)', 'np.isclose(aug.translate[0].b.value, 0.25)', 'np.isclose(aug.translate[1].a.value, -0.25)', 'np.isclose(aug.translate[1].b.value, 0.25)', 'aug.max_steps.value == 1']",[],[],[],[],[],[],[],[],[],[],[],[],"['got_exception', 'np.isclose(aug.p.p.value, 1.0)', 'got_exception', 'got_exception', 'got_exception', 'np.isclose(multiply.mul.val.a.value, 0.0)', 'np.isclose(multiply.mul.val.b.value, 1.0)', 'aug.value_hue is None', 'aug.value_saturation is None', 'in str(ctx.exception)', 'in str(ctx.exception)', 'aug.max_steps.value == 2', 'np.isclose(aug.points_sampler.p_drop.p.value, 1-0.4)', 'np.isclose(aug.points_sampler.p_drop.p.value, 1-0.4)']",[],[],[],[],[],[],[],[],[],[],[],[]
2571,Alexander Jung,kontakt@ajung.name,2020-01-25 14:48:12+01:00,07df30fd4f929ed3281bb6c9a2f932e070adacc6,https://github.com/aleju/imgaug/commit/07df30fd4f929ed3281bb6c9a2f932e070adacc6,"Improve Warnings on Probably-Wrong Image Inputs (#594)

Improve the errors and warnings on image augmentation calls.
`augment_image()` will now produce a more self-explanatory error
message when calling it as in `augment_image(list of images)`.
Calls of single-image augmentation functions (e.g.
`augment(image=...)`) with inputs that look like multiple images
will now produce warnings. This is the case for `(H, W, C)`
inputs when `C>=32` (as that indicates that `(N, H, W)` was
actually provided).
Calls of multi-image augmentation functions (e.g.
`augment(images=...)`) with inputs that look like single images
will now produce warnings. This is the case for `(N, H, W)`
inputs when `W=1` or `W=3` (as that indicates that `(H, W, C)`
was actually provided.)

* Add an assert in `augment_image()` to verify that inputs are
  arrays.
* Add warnings for probably-wrong image inputs in
  `augment_image()`, `augment_images()`, `augment()` (and its
  alias `__call__()`).
* Add module `imgaug.augmenters.base`.
* Add warning
  `imgaug.augmenters.base.SuspiciousMultiImageShapeWarning`.
* Add warning
  `imgaug.augmenters.base.SuspiciousSingleImageShapeWarning`.
* Add `imgaug.testutils.assertWarns`, similar to `unittest`'s
  `assertWarns`, but available in python <3.2.",10,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,0,['class TestKeypointAugmentation(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['images_aug.dtype.name == ', 'images_aug.shape == images.shape', 'image_aug.shape == (3, 3, nb_channels)', 'heatmap_aug.arr_0to1.shape == (3, 3, nb_channels)', 'heatmap_aug.shape == image.shape', 'np.allclose(image_aug[:, 0:2, :], 128, rtol=0,', 'np.allclose(image_aug[:, 2:3, 0:3], 255, rtol=0,', 'np.allclose(image_aug[:, 2:3, 3:], 255, rtol=0,', 'np.allclose(hm_aug_arr[:, 0:2, :], 0.5, rtol=0,', 'np.allclose(hm_aug_arr[:, 2:3, :], 0.0, rtol=0,', 'np.all(image_aug == 0)', 'image_aug.dtype.name == ', 'image_aug.shape == shape_expected', 'kp_fully_empty_aug == []', 'len(kp_first_empty_aug.keypoints) == 0', 'len(kp_image_aug_rev.keypoints) == len(kp_aug.keypoints), (', 'np.average(dss) < 5.0, \\']",[],[],[],[],[],[],[],[],[],[],[],[],"['images_aug.dtype.name == ', 'images_aug.shape == images.shape', 'image_aug.shape == (3, 3, nb_channels)', 'heatmap_aug.arr_0to1.shape == (3, 3, nb_channels)', 'heatmap_aug.shape == image.shape', 'np.allclose(image_aug[:, 0:2, :], 128, rtol=0, atol=2)', 'np.allclose(image_aug[:, 2:3, 0:3], 255, rtol=0, atol=2)', 'np.allclose(image_aug[:, 2:3, 3:], 255, rtol=0, atol=2)', 'np.allclose(hm_aug_arr[:, 0:2, :], 0.5, rtol=0,', 'np.allclose(hm_aug_arr[:, 2:3, :], 0.0, rtol=0,', 'np.all(image_aug == 0)', 'image_aug.dtype.name == ', 'image_aug.shape == shape_expected', 'kp_fully_empty_aug == []', 'len(kp_first_empty_aug.keypoints) == 0', 'len(kp_image_aug_rev.keypoints) == len(kp_aug.keypoints), (', 'np.average(dss) < 5.0, \\']",[],[],[],[],[],[],[],[],[],[],[],[]
2572,Alexander Jung,kontakt@ajung.name,2020-01-25 15:59:18+01:00,0a37d9a63a42d4130e31745db342c9103cde85ed,https://github.com/aleju/imgaug/commit/0a37d9a63a42d4130e31745db342c9103cde85ed,"Fix various docstring problems (#587)

* Add examples in docstrings and optimize the existing
  examples w.r.t. how they would be visualized in the RTD docs
* Change dtype-support sections to bold titles:
  numpydoc currently does not not allow custom sections in
  docstrings and will produce a warning each time it encounters
  such a custom section. This patch thus changes the dtype-support
  section markers to simple titles in bold font.
* Fix invalid docstring links to PIL
* Fix invalid docstring links to imagecorruptions
* Fix missing dtype support blocks
* Fix invalid class/function links in dtype support blocks
* Fix wrong examples in docstrings",20,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2573,Alexander Jung,kontakt@ajung.name,2020-01-25 20:11:52+01:00,0db2ef87c3b18aab99e2653369dabaa0f9129f87,https://github.com/aleju/imgaug/commit/0db2ef87c3b18aab99e2653369dabaa0f9129f87,"Change **old_kwargs magic to explicit parameters (#595)

The parameter names of class `Augmenter` were recently changed
and the old names were caught by `**old_kwargs`. This was
convenient, but is changed in this patch to be explicitly
`random_state=""deprecated"", deterministic=""deprecated""`.
That is because the `**old_kwargs` magic has the disadvantage
of not necessarily being fully understood by IDEs. These then
cannot detect (and warn) about invalid parameters anymore.
Without the magic parameter they can warn about these,
hence it is the preferred choice here.",21,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],"[('Raises', '(AssertionError) as ctx:')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['in str(ctx.exception)'],[],[],[],[],[],[],[],[],[],[],[],[]
2574,Alexander Jung,kontakt@ajung.name,2020-01-26 11:36:58+01:00,8ec2bc4df560e720dbd4c4465b416b250d6045d2,https://github.com/aleju/imgaug/commit/8ec2bc4df560e720dbd4c4465b416b250d6045d2,"Add PR #586 to changelog (#597)

Add PR #586 (setup.py accepting all opencv-* installations) to changelog.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2575,Alexander Jung,kontakt@ajung.name,2020-01-26 11:37:52+01:00,564d2f1a7963f2447d6a81bca627786dc6779c81,https://github.com/aleju/imgaug/commit/564d2f1a7963f2447d6a81bca627786dc6779c81,"Fix missing class in module class list (#596)

Add `ChangeColorTemperature` to the class list in the module docstring of module `imgaug.augmenters.color`.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2576,Alexander Jung,kontakt@ajung.name,2020-01-26 14:11:48+01:00,fc228dc4a13b9ad161f6b3ace6573d7ea503c651,https://github.com/aleju/imgaug/commit/fc228dc4a13b9ad161f6b3ace6573d7ea503c651,"Add 'deprecated since'/'added in' markers (#598)

This patch adds the comments ""Deprecated since 0.4.0"" and
""Added in 0.4.0"" to classes and functions.
Especially the deprecation markers are intended to make it
easier in the future to estimate whether something can be
safely deleted.",32,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2577,Alexander Jung,kontakt@ajung.name,2020-01-26 17:32:01+01:00,480f6c1e41b478b61872d2d0cef434b5455c0f72,https://github.com/aleju/imgaug/commit/480f6c1e41b478b61872d2d0cef434b5455c0f72,"Remove unnecessary code (#599)

* Remove unused utils._remove_out_of_image_fraction()
* Remove no longer required testutils.shift_cbaois()
* Remove a duplicated and outdated parameter description
* Remove deprecated args from new shift_() functions
* Remove unnecessary imports from tests",40,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['bb2 is bb', 'bb2 is not bb', 'ls is ls2', 'ls is not ls2', 'lsoi is lsoi2', 'lsoi is not lsoi2', 'poly is poly2', 'poly is not poly2', 'np.allclose(poly.exterior, np.float32([', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_oi_shifted is poly_oi', 'poly_oi_shifted is not poly_oi']",[],[],[],[],[],[],[],[],[],[],[],[],"['bb2 is bb', 'bb2 is not bb', 'len(bbsoi_shifted.bounding_boxes) == 2', 'bbsoi_shifted.bounding_boxes[0].y1 == 10', 'bbsoi_shifted.bounding_boxes[0].x1 == 20 - 1', 'bbsoi_shifted.bounding_boxes[0].y2 == 30', 'bbsoi_shifted.bounding_boxes[0].x2 == 40 - 1', 'bbsoi_shifted.bounding_boxes[1].y1 == 15', 'bbsoi_shifted.bounding_boxes[1].x1 == 25 - 1', 'bbsoi_shifted.bounding_boxes[1].y2 == 35', 'bbsoi_shifted.bounding_boxes[1].x2 == 51 - 1', 'bbsoi_shifted is bbsoi', '(', 'ls is ls2', 'ls is not ls2', 'lsoi is lsoi2', 'lsoi is not lsoi2', 'poly is poly2', 'poly is not poly2', 'np.allclose(poly.exterior, np.float32([', 'np.allclose(poly_shifted.exterior, np.float32([', 'poly_oi_shifted is poly_oi', 'poly_oi_shifted is not poly_oi']",[],[],[],[],[],[],[],[],[],[],[],[]
2578,Alexander Jung,kontakt@ajung.name,2020-01-26 17:33:27+01:00,31fcb3f31d6ba9238ae362c95d1e457599609823,https://github.com/aleju/imgaug/commit/31fcb3f31d6ba9238ae362c95d1e457599609823,"Establish compatibility with python 3.8 (#600)

* Fix PerspT using float height/width

This fixes an issue where `PerspectiveTransform` uses float
values for `max_height` and `max_width`, leading to
deprecation warnings in python 3.8.

* Fix pillike.warp_affine() float fillcolor

Fix an implicit conversion of `fillcolor` from float to
int in `pillike.warp_affine()` that would otherwise cause
a deprecation warning in python 3.8.

* Fix intersection test in Shapely 1.7a2

The result of `.intersections()` in Shapely 1.7a2 (python 3.8)
slightly differs from other versions and can return line strings
that contain zero coordinates, leading to subsequent crashes.
This patch fixes the issue.",5,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2579,aleju,kontakt@ajung.name,2020-01-26 17:46:48+01:00,838b7e9ba2e2eb9fbecbd859aa9b352978c94d21,https://github.com/aleju/imgaug/commit/838b7e9ba2e2eb9fbecbd859aa9b352978c94d21,Add classifiers to setup.py,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2580,aleju,kontakt@ajung.name,2020-02-02 13:32:01+01:00,62e9a40f3d82ccbcd3c69f231c2e5dbb396932a1,https://github.com/aleju/imgaug/commit/62e9a40f3d82ccbcd3c69f231c2e5dbb396932a1,"Fix error message in Jigsaw

This fixes a wrong error message in Jigsaw that falsely states
that the augmenter could only transform images and keypoints,
when it can actually transform images, heatmaps, segmaps and
keypoints.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2581,Alexander Jung,kontakt@ajung.name,2020-02-05 20:48:27+01:00,43a7d1646bc503c0eb2d3d1e9692ca3c2297220a,https://github.com/aleju/imgaug/commit/43a7d1646bc503c0eb2d3d1e9692ca3c2297220a,"Add v0.4.0 changelog summary (#603)

This patch adds a changelog summary file for 0.4.0.
It also moves the individual PR-wise changelog files from changelogs/master/ to changelogs/0.4.0/.",84,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2582,Alexander Jung,kontakt@ajung.name,2020-02-05 20:50:31+01:00,768db97cee8bd6ccfdf1dfac2911c0d3f0035fac,https://github.com/aleju/imgaug/commit/768db97cee8bd6ccfdf1dfac2911c0d3f0035fac,"Update readme to v0.4.0 (#604)

This patch changes the readme so that it matches the v0.4.0 release.
* Redesign example gifs table (add new augmenters, add ""see also"" rows, add per augmenter a link to the overview page)
* Remove the list of augmenters at the bottom of the readme. It is redundant with the gifs table and RTD docs.
* Remove example on how to use hooks. They aren't very necessary anymore.
* Update the list of authors in the ""Citation"" section.
* Add v0.4.0 to ""recent changes"" section.
* Remove unnecessary commands from the ""installation"" section.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2583,aleju,kontakt@ajung.name,2020-02-05 21:22:15+01:00,406ffb46dc53fdaca02427333933fc22aa48cc9f,https://github.com/aleju/imgaug/commit/406ffb46dc53fdaca02427333933fc22aa48cc9f,Increase version number to 0.4.0,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2584,aleju,kontakt@ajung.name,2020-02-05 21:37:03+01:00,14b85e2209de0107c250e4d9dd6507dec1eae826,https://github.com/aleju/imgaug/commit/14b85e2209de0107c250e4d9dd6507dec1eae826,"Adapt Manifest to 0.4.0

The test/ directory ended up taking a lot of space in the
distributed files (tar.gz, wheel). The whole directory
was hence removed from these files. To further save
some space, the whole checks/ directory was also
removed.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2585,Alexander Jung,kontakt@ajung.name,2020-02-17 21:08:06+01:00,ea89b1686f6f7022ee4f2fbbca93abb357fd24a2,https://github.com/aleju/imgaug/commit/ea89b1686f6f7022ee4f2fbbca93abb357fd24a2,"Fix missing fallback to keypoint augmentation in legacy augmenters (#618)

This patch fixes legacy augmenters (i.e. no _augment_batch_() implemented) not automatically falling back to _augment_keypoints() for the augmentation of bounding boxes, polygons and line strings (in the case that no dedicated functions are defined for these inputs).",3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['bbsoi_aug[0].coords_almost_equals(bbsoi[0].shift(x=1))', 'psoi_aug[0].coords_almost_equals(psoi[0].shift(x=1))', 'lsoi_aug[0].coords_almost_equals(lsoi[0].shift(x=1))']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2586,Alexander Jung,kontakt@ajung.name,2020-02-25 22:15:51+01:00,5df46d5cec90b2dd80018390532f5fc6fa27bd75,https://github.com/aleju/imgaug/commit/5df46d5cec90b2dd80018390532f5fc6fa27bd75,"Fix imageio dependency broken in python <3.5 (#628)

This patch fixes a broken dependency in python 2.7. imageio in
the latest version no longer supports python <3.5.
The version is hence restricted to <=2.6.1 for python <3.5.",3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2587,Alexander Jung,kontakt@ajung.name,2020-02-29 16:30:15+01:00,27f0ec1de81a31fd3fce9e92941bb6666031d3b2,https://github.com/aleju/imgaug/commit/27f0ec1de81a31fd3fce9e92941bb6666031d3b2,"Enforce stricter shape handling in augmentables (#623)

Various methods of augmentables have so far accepted tuples
of integers or numpy arrays for `shape` parameters. This was
the case for e.g. `BoundingBoxesOnImage.__init__(bbs, shape)`
or `Polygon.clip_out_of_image(image)`. This tolerant handling
of shapes conveys some risk that an input is actually a
numpy representation of a shape, i.e. the equivalent of
`numpy.array(shape_tuple)`.

To decrease the risk of such an input leading to bugs, arrays
are no longer recommended inputs for `shape` in
`KeypointsOnImage.__init__`, `BoundingBoxesOnImage.__init__`,
`LineStringsOnImage.__init__`, and `PolygonsOnImage.__init__`.
Their usage in these methods will now raise a deprecation warning.

In all other methods of augmentables that currently accept
image-like numpy arrays and shape tuples for parameters,
only arrays that are 2-dimensional or 3-dimensional are from
now on accepted. Other arrays (e.g. 1-dimensional ones)
will be rejected with an assertion error.

Add functions:
* `imgaug.augmentables.utils.normalize_imglike_shape()`.

List of deprecations:
* `numpy.ndarray` as value of parameter `shape` in
  `KeypointsOnImage.__init__`.
* `numpy.ndarray` as value of parameter `shape` in
  `BoundingBoxesOnImage.__init__`.
* `numpy.ndarray` as value of parameter `shape` in
  `LineStringsOnImage.__init__`.
* `numpy.ndarray` as value of parameter `shape` in
  `PolygonsOnImage.__init__`.

This resolves #616.",14,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class Test_normalize_shape(unittest.TestCase):', 'class Test_normalize_imglike_shape(unittest.TestCase):']","[('Raises', '(AssertionError):'), ('Raises', '(AssertionError):')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(lsoi.line_strings) == 2', 'lsoi.shape == (10, 10, 3)', 'shape_out == (1, 2)', 'shape_out == (1, 2, 3)', 'shape_out == (5,)', 'shape_out == (1, 2)', 'shape_out == (1, 2, 3)', 'shape_out == (1, 2)', 'shape_out == (1, 2, 3)', 'shape_out == (1, 2)', 'shape_out == (1, 2, 3)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2588,Alexander Jung,kontakt@ajung.name,2020-04-13 17:05:41+02:00,cf05cd46907945b7b6545040fca197766557626f,https://github.com/aleju/imgaug/commit/cf05cd46907945b7b6545040fca197766557626f,"Fix change_color_temperatures_() broadcasting error (#650)

This patch fixes `change_colorspaces_()` crashing on
batches that do not contain exactly `1` or `3` images. #646

This patch also fixes two separate issues with tests that
could lead to occasional failures.",5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(images_temp, list)', 'np.array_equal(images_temp[0], expected[0])', 'np.array_equal(images_temp[1], expected[1])', 'np.array_equal(images_temp[2], expected[2])', 'ia.is_np_array(images_temp)', 'np.array_equal(images_temp, expected)', 'np.all(times_diffs < timeout * 1.01)', 'np.all(times_diffs < timeout * 1.01)', 'np.all(times_diffs[0:4-1] < timeout * 1.01)', 'np.all(times_diffs[4-1:4-1+1] >= timeout * 0.99)', 'np.all(times_diffs[4-1+1:] < timeout * 1.01)']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(times_diffs < timeout)', 'np.all(times_diffs < timeout)', 'np.all(times_diffs[0:4-1] < timeout)', 'np.all(times_diffs[4-1:4-1+1] >= timeout)', 'np.all(times_diffs[4-1+1:] < timeout)']",[],[],[],[],[],[],[],[],[],[],[],[]
2589,Alexander Jung,kontakt@ajung.name,2020-04-20 18:13:09+02:00,42b9064c660ba5c61e1ae081994d34e28fd53e53,https://github.com/aleju/imgaug/commit/42b9064c660ba5c61e1ae081994d34e28fd53e53,"Improve performance of Add (#608)

This patch improves the performance of
`imgaug.arithmetic.add_scalar()`
and the corresponding augmenter `Add` for `uint8` inputs.
The expected performance improvement is 1.5x to 6x.
(More for image arrays with higher widths/heights than
smaller ones. More for more channels. More for a single
scalar added as opposed to channelwise values.)

Add functions:
* `imgaug.augmenters.arithmetic.add_scalar_()`.",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2590,Alexander Jung,kontakt@ajung.name,2020-04-20 18:17:21+02:00,a34fa387d8503e51b24b51fa568e98c7f7f8330e,https://github.com/aleju/imgaug/commit/a34fa387d8503e51b24b51fa568e98c7f7f8330e,"Improve Performance of Elementwise Addition (#612)

This patch improves the performance of
`imgaug.augmenters.arithmetic.add_elementwise()` for `uint8`
images. The performance increases is expected to be between
roughly 1.5x and 5x (more for very dense `value` matrices,
i.e. for channelwise addition). This change affects
`AddElementwise`, `AdditiveGaussianNoise`,
`AdditiveLaplaceNoise` and `AdditivePoissonNoise`.",3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class Test__add_elementwise_cv2_to_uint8(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(result, image + 1)', 'result.shape == image_shape', 'result.dtype.name == ', 'result is not image', 'np.array_equal(result, image + 1)', 'result.shape == image_shape', 'result.dtype.name == ', 'result is not image', 'image.flags[] is False', 'image.flags[] is True', 'np.array_equal(result, image + 1)', 'result.shape == (shape[0]-1, shape[1]) + shape[2:]', 'result.dtype.name == ', 'result is not image', 'image.flags[] is True', 'image.flags[] is False', 'np.array_equal(result, image + 1)', 'result.shape == shape', 'result.dtype.name == ', 'result is not image', 'np.array_equal(result, image + 2)', 'result.shape == image_shape', 'result.dtype.name == ', 'result is not image', 'np.all(result == 0)', 'np.all(result == 255)', 'result.shape == image_shape', 'result.dtype.name == ', 'result is not image', 'np.all(result == expected_value)', 'result.shape == image_shape', 'result.dtype.name == ', 'result is not image', 'np.all(result == expected_value)', 'result.shape == image_shape', 'result.dtype.name == ', 'result is not image']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2591,Alexander Jung,kontakt@ajung.name,2020-04-21 19:22:38+02:00,5b9b23ae5487c1184cb57126c10ae2ffe676071e,https://github.com/aleju/imgaug/commit/5b9b23ae5487c1184cb57126c10ae2ffe676071e,"Improve Performance of Alpha-Blending (#610)

This patch reworks `imgaug.augmenters.blend.blend_alpha()` to
improve its performance. In the case of a scalar constant alpha
value and both image inputs (foreground, background) being
`uint8`, the improved method is roughly 10x faster. In the case
of one constant alpha value per channel, the expected speedup
is around 2x to 7x (more for larger images). In the case of
`(H,W,[C])` alpha masks, the expected speedup is around 1.3x
to 2.0x (`(H,W)` masks are faster for larger images,
`(H,W,C)` the other way round).

Add functions:
* `imgaug.augmenters.blend.blend_alpha_()`",3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,35,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['img_blend.dtype.name == dtype', 'img_blend.shape == (3, 3, 1)', 'np.all(img_blend == 0)', 'img_blend.dtype.name == dtype', 'img_blend.shape == (3, 3)', 'np.all(img_blend == 0)', 'img_blend.dtype.name == dtype', 'img_blend.shape == (3, 3, 1)', 'np.all(img_blend == 255)', 'img_blend.dtype.name == dtype', 'img_blend.shape == (3, 3)', 'np.all(img_blend == 255)', 'img_blend.dtype.name == dtype', 'img_blend.shape == (3, 3, 1)', 'np.allclose(img_blend, 0.7*255, atol=1.01, rtol=0)', 'img_blend.dtype.name == dtype', 'img_blend.shape == (3, 3)', 'np.allclose(img_blend, 0.7*255, atol=1.01, rtol=0)', 'img_blend.dtype.name == dtype', 'img_blend.shape == shape', 'np.allclose(img_blend, 0.7*255, atol=1.01, rtol=0)', 'img_blend.dtype.name == dtype', 'img_blend.shape == (3, 3, 2)', 'np.all(img_blend[:, :, 0] == 0)', 'np.all(img_blend[:, :, 1] == 255)', 'img_blend.dtype.name == dtype', 'img_blend.shape == shape', 'np.allclose(img_blend, 128, rtol=0, atol=1.01)', 'np.all(image_aug == 0)', 'image_aug.dtype.name == dtype', 'image_aug.shape == shape', 'np.all(image_aug == 0)', 'image_aug.dtype.name == dtype', 'image_aug.shape == shape', 'img_blend.dtype.name == np.dtype(dtype).name', 'img_blend.dtype.name == np.dtype(dtype).name', 'img_blend.dtype.name == np.dtype(dtype).name', 'img_blend.dtype.name == np.dtype(dtype).name', 'np.allclose(observed, expected, atol=1.01)', 'np.allclose(observed, expected, atol=1.01)', 'np.allclose(observed, expected, atol=1.01)']",[],[],[],[],[],[],[],[],[],[],[],[],"['img_blend.dtype.name == ', 'img_blend.shape == (3, 3, 1)', 'np.all(img_blend == 0)', 'img_blend.dtype.name == ', 'img_blend.shape == (3, 3)', 'np.all(img_blend == 0)', 'img_blend.dtype.name == ', 'img_blend.shape == (3, 3, 1)', 'np.all(img_blend == 255)', 'img_blend.dtype.name == ', 'img_blend.shape == (3, 3)', 'np.all(img_blend == 255)', 'img_blend.dtype.name == ', 'img_blend.shape == (3, 3, 1)', 'np.allclose(img_blend, 0.7*255, atol=1.01, rtol=0)', 'img_blend.dtype.name == ', 'img_blend.shape == (3, 3)', 'np.allclose(img_blend, 0.7*255, atol=1.01, rtol=0)', 'img_blend.dtype.name == ', 'img_blend.shape == (3, 3, 2)', 'np.all(img_blend[:, :, 0] == 0)', 'np.all(img_blend[:, :, 1] == 255)', 'np.all(image_aug == 0)', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'np.all(image_aug == 0)', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.dtype.name == np.dtype(dtype)', 'img_blend.dtype.name == np.dtype(dtype)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)', 'np.allclose(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[]
2592,Alexander Jung,kontakt@ajung.name,2020-04-21 19:26:20+02:00,9e95a3f866e4971118c4cb66c4aede1fb32ecac0,https://github.com/aleju/imgaug/commit/9e95a3f866e4971118c4cb66c4aede1fb32ecac0,"Vectorize CropAndPad (#619)

This patch vectorizes parts of `CropAndPad`, especially the
sampling process, leading to an improved performance for large
batches.

Previously, cropping an image below a height and/or width of
`1` would be prevented by `CropAndPad` *and* a warning was
raised if it was tried. That warning was now removed, but
height/width of at least `1` is still ensured.",3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class Test__prevent_zero_sizes_after_crops_(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.all(cs == 0)', 'np.all(ce == 0)', 'np.all(cs == 1)', 'np.all(ce == 2)', 'np.all(cs == 0)', 'np.all(ce == 9)', 'np.all(cs == 0)', 'np.all(ce == 0)', 'np.array_equal(cs, crops_s)', 'np.array_equal(ce, crops_e)', 'np.array_equal(cs, [1, 0, 11, 6, 6])', 'np.array_equal(ce, [5, 10, 0, 6, 7])', 'np.array_equal(cs, [1, 0, 0, 0, 0, 0, 0, 0])', 'np.array_equal(ce, [5, 0, 0, 0, 0, 0, 0, 0])', 'np.array_equal(cs, [1, 0, 0, 0, 0, 0, 0, 0])', 'np.array_equal(ce, [5, 0, 0, 0, 0, 0, 0, 0])', 'np.array_equal(cs, expected_start)', 'np.array_equal(ce, expected_end)', 'np.all(', 'np.all(']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2593,Alexander Jung,kontakt@ajung.name,2020-04-21 20:40:55+02:00,f7e5e17928258b5a88f29251e006155f085f3e77,https://github.com/aleju/imgaug/commit/f7e5e17928258b5a88f29251e006155f085f3e77,"Improve performance of pooling (#622)

This patch improves the performance of pooling operations.

For `uint8` arrays, `max_pool()` and `min_pool()` are now
between 3x and 8x faster. The improvements are more
significant for larger images and smaller kernel sizes.
In-place versions of `max_pool()` and `min_pool()` are also
added. Both `MaxPooling` and `MinPooling` now use these
functions.

The performance of `avg_pool()` for `uint8` is improved by
roughly 4x to 15x. (More for larger images and smaller
kernel sizes.)

The performance of `median_pool()` for `uint8` images is
improved by roughly 1.7x to 7x, if the kernel size is 3
or 5 or if the kernel size is 7, 9, 11, 13 and the image
size is 32x32 or less. In both cases the kernel also has to be
symmetric.
In the case of a kernel size of 3, the performance improvement
is most significant for larger images. In the case of 5, it
is fairly even over all kernel sizes. In the case of 7 or higher,
it is more significant for smaller images.

Add functions:
* `imgaug.imgaug.min_pool_()`.
* `imgaug.imgaug.max_pool_()`.",5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['not image.flags[]', 'image.flags[]', 'image_aug.dtype.name == ', 'image_aug.shape == (1, 2, 3)', 'np.all(diff <= 1)', 'image.flags[]', 'not image.flags[]', 'image_aug.dtype.name == ', 'image_aug.shape == (1, 2)', 'np.all(diff <= 1)', 'arr_pooled[0, 0] == int(np.round(1e-4 + np.average([0, 1, 4, 5])))', 'arr_pooled[0, 1] == int(np.round(1e-4 + np.average([2, 3, 6, 7])))', 'arr_pooled[1, 0] == int(np.round(1e-4 + np.average([8, 9, 12, 13])))', 'arr_pooled[1, 1] == int(np.round(1e-4 + np.average([10, 11, 14, 15])))', 'arr_pooled.shape == (4, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.median([0, 1, 2]))', 'arr_pooled[0, 1] == int(np.median([3, 2, 1]))', 'arr_pooled[1, 0] == int(np.median([4, 5, 6]))', 'arr_pooled[1, 1] == int(np.median([7, 6, 5]))', 'arr_pooled[2, 0] == int(np.median([8, 9, 10]))', 'arr_pooled[2, 1] == int(np.median([11, 10, 9]))', 'arr_pooled[3, 0] == int(np.median([12, 13, 14]))', 'arr_pooled[3, 1] == int(np.median([15, 14, 13]))', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.median([5, 4, 5, 1, 0, 1, 5, 4, 5]))', 'arr_pooled[0, 1] == int(np.median([6, 7, 6, 2, 3, 2, 6, 7, 6]))', 'arr_pooled[1, 0] == int(np.median([9, 8, 9, 13, 12, 13, 9, 8, 9]))', 'arr_pooled[1, 1] == int(np.median([10, 11, 10, 14, 15, 13, 10, 11,', 'arr_in.flags[] is False', 'arr_in.flags[] is True', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.median([5, 4, 5, 1, 0, 1, 5, 4, 5]))', 'arr_pooled[0, 1] == int(np.median([6, 7, 6, 2, 3, 2, 6, 7, 6]))', 'arr_pooled[1, 0] == int(np.median([9, 8, 9, 13, 12, 13, 9, 8, 9]))', 'arr_pooled[1, 1] == int(np.median([10, 11, 10, 14, 15, 13, 10, 11,', 'arr.flags[] is True', 'arr.flags[] is False', 'arr_pooled.shape == (2, 2)', 'arr_pooled.dtype == arr.dtype.type', 'arr_pooled[0, 0] == int(np.median([5, 4, 5, 1, 0, 1, 5, 4, 5]))', 'arr_pooled[0, 1] == int(np.median([6, 7, 6, 2, 3, 2, 6, 7, 6]))', 'arr_pooled[1, 0] == int(np.median([9, 8, 9, 13, 12, 13, 9, 8, 9]))', 'arr_pooled[1, 1] == int(np.median([10, 11, 10, 14, 15, 13, 10, 11,']",[],[],[],[],[],[],[],[],[],[],[],[],"['arr_pooled[0, 0] == int(np.average([0, 1, 4, 5]))', 'arr_pooled[0, 1] == int(np.average([2, 3, 6, 7]))', 'arr_pooled[1, 0] == int(np.average([8, 9, 12, 13]))', 'arr_pooled[1, 1] == int(np.average([10, 11, 14, 15]))']",[],[],[],[],[],[],[],[],[],[],[],[]
2594,Alexander Jung,kontakt@ajung.name,2020-04-22 20:51:03+02:00,761cc394e99f1a19f61fff25dabc3a8630277fec,https://github.com/aleju/imgaug/commit/761cc394e99f1a19f61fff25dabc3a8630277fec,"Improve Average Bluring (#625)

This patch adds `imgaug.augmenters.blur.blur_avg_()`,
which applies an averaging blur kernel to images. The method
is slightly faster for single image inputs (factor of 1.01x to
1.1x, more for medium-sized images around `128x128`) than
the one used in `AverageBlur`. The performance of `AverageBlur`
however is likely not changed significantly due to input
validation now being done per image instead of per batch.

Add functions:
* `imgaug.augmenters.blur.blur_avg_()`",3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class Test_blur_avg_(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug[0, 0] == self._avg([6, 5, 6, 2, 1, 2, 6, 5, 6])', 'image_aug[0, 1] == self._avg([5, 6, 7, 1, 2, 3, 5, 6, 7])', 'image_aug[3, 3] == self._avg([11, 12, 11, 15, 16, 15, 11, 12,', 'image_aug[0, 0] == self._avg([5, 1, 5])', 'image_aug[0, 1] == self._avg([6, 2, 6])', 'image_aug[3, 3] == self._avg([12, 16, 12])', 'image_aug[0, 0] == self._avg([6, 5, 6, 2, 1, 2, 6, 5, 6])', 'image_aug[0, 1] == self._avg([5, 6, 7, 1, 2, 3, 5, 6, 7])', 'image_aug[3, 3] == self._avg([11, 12, 11, 15, 16, 15, 11, 12,', 'image_aug[0, 0] == self._avg([6, 5, 6, 2, 1, 2, 6, 5, 6])', 'image_aug[0, 1] == self._avg([5, 6, 7, 1, 2, 3, 5, 6, 7])', 'image_aug[3, 3] == self._avg([11, 12, 11, 15, 16, 15, 11, 12,']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2595,Alexander Jung,kontakt@ajung.name,2020-04-22 21:20:56+02:00,8406dbf2ff922500705c7f0580bf502d9c2b2b97,https://github.com/aleju/imgaug/commit/8406dbf2ff922500705c7f0580bf502d9c2b2b97,"Improve Convolution Filters (#632)

This patch reworks the backend of all convolutional
filters. It extracts the convolution logic out of
`Convolve` and moves it into the new function
`imgaug.augmenters.convolutional.convolve_()` (with
non-in-place version `convolve()`).

The logic is also reworked so that fewer convolution
function calls and more in-place modification is
used. This should lead to an improved performance.

These changes also affect `Sharpen`, `Emboss`,
`EdgeDetect`, `DirectedEdgeDetect` and `MotionBlur`.

Add functions:
* `imgaug.augmenters.convolutional.convolve_()`
* `imgaug.augmenters.convolutional.convolve()`",3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class Test_convolve(unittest.TestCase):', 'class Test_convolve_(unittest.TestCase):']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug is not image', 'image_aug.dtype.name == ', 'image_aug.shape == (2, 3)', 'np.array_equal(image_aug, image)', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'np.array_equal(image_aug, image)', 'image_aug.dtype.name == ', 'image_aug.shape == (2, 3)', 'np.array_equal(image_aug, image)', 'image_aug.dtype.name == ', 'image_aug.shape == (2, 4)', 'np.array_equal(image_aug, image)', 'image_aug.dtype.name == ', 'image_aug.shape == (2, 3)', 'np.array_equal(image_aug, image)', 'image_aug.dtype.name == ', 'image_aug.shape == (3, 3)', 'np.array_equal(image_aug, expected)', 'image_aug.dtype.name == ', 'image_aug.shape == (2, 3, 2)', 'np.array_equal(image_aug, 2*image)', 'image_aug.dtype.name == ', 'image_aug.shape == (2, 3, 2)', 'np.array_equal(image_aug[:, :, 0], image[:, :, 0])', 'np.array_equal(image_aug[:, :, 1], 2*image[:, :, 1])', 'image_aug.dtype.name == ', 'image_aug.shape == (2, 3, 2)', 'np.array_equal(image_aug[:, :, 0], image[:, :, 0])', 'np.array_equal(image_aug[:, :, 1], 2*image[:, :, 1])', 'image_aug.dtype.name == ', 'image_aug.shape == (2, 3, 2)', 'np.array_equal(image_aug[:, :, 0], image[:, :, 0])', 'np.array_equal(image_aug[:, :, 1], image[:, :, 1])', 'image_aug.dtype.name == ', 'image_aug.shape == (2, 3, nb_channels)', 'np.array_equal(image_aug, 2*image)', 'image_aug.shape == image.shape', 'image_view.flags[] is False', 'image_aug.dtype.name == ', 'image_aug.shape == (2, 3)', 'np.array_equal(image_aug, 2*image)', 'image_view.flags[] is False', 'image_view.base.shape == (1, 2, 3)', 'image_aug.dtype.name == ', 'image_aug.shape == (2, 3, 1)', 'np.array_equal(image_aug, 2*image[:, :, 1:2])', 'image_view.flags[] is False', 'image_view.base.shape == (4, 2, 3)', 'image_aug.dtype.name == ', 'image_aug.shape == (2, 3, 4)', 'np.array_equal(image_aug, 2*image[:, :, mask])', 'image_nonc.flags[] is False', 'image_aug.dtype.name == ', 'image_aug.shape == (2, 3)', 'np.array_equal(image_aug, 2*image)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2596,Alexander Jung,kontakt@ajung.name,2020-04-27 20:16:50+02:00,c8c7c3bf2a9dd5c6ce528fc4c51b0279eb75f2c3,https://github.com/aleju/imgaug/commit/c8c7c3bf2a9dd5c6ce528fc4c51b0279eb75f2c3,"Improve performance of multiply_scalar() (#614)

This patch improves the performance of
`imgaug.augmenters.arithmetic.multiply_scalar()` for
`uint8` inputs. The function is now between 1.2x and 7x
faster (more for smaller images and channelwise
multipliers). This change affects `Multiply`.

Add functions:
* `imgaug.augmenters.arithmetic.multiply_scalar_()`.",4,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,['class Test__multiply_scalar_to_uint8_cv2_mul_(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, expected)', 'observed.shape == image.shape', 'observed.dtype.name == ', 'observed is image_cp', 'np.array_equal(observed, expected)', 'observed.shape == image.shape', 'observed.dtype.name == ', 'observed is image_cp', 'np.array_equal(observed, expected)', 'observed.shape == image.shape', 'observed.dtype.name == ', 'observed is image_cp', 'np.array_equal(observed, expected)', 'observed.shape == image.shape', 'observed.dtype.name == ', 'observed is image_cp', 'np.array_equal(observed, expected)', 'observed.shape == image.shape', 'observed.dtype.name == ', 'observed is image_cp', 'np.array_equal(observed, expected)', 'observed.shape == (3, 3)', 'observed.dtype.name == ', 'np.array_equal(observed, expected)', 'observed.shape == image.shape', 'observed.dtype.name == ', 'np.allclose(image_aug, expected, rtol=0, atol=1.01)', 'np.allclose(image_aug, expected, rtol=0, atol=1.01)']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(image_aug, expected)', 'np.array_equal(image_aug, expected)']",[],[],[],[],[],[],[],[],[],[],[],[]
2597,Alexander Jung,kontakt@ajung.name,2020-04-28 19:39:49+02:00,ee400756f1fcfde972aac6046c3b66fa5f908fcf,https://github.com/aleju/imgaug/commit/ee400756f1fcfde972aac6046c3b66fa5f908fcf,"Refactor blur_gaussian_() (#626)

This patch cleans up the code of
imgaug.augmenters.blur.blur_gaussian_(). A very small
performance improvement (factor ~1.03x) is expected.",3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image_aug.shape == (5, 5)', 'image_aug.dtype.name == ', 'np.all(image_aug[image_cp == 0] > 0)', 'np.all(image_aug[image_cp == 255] < 255)', 'image_aug.shape == (5, 5)', 'image_aug.dtype.name == ', 'np.all(image_aug[image_cp == 0] > 0)', 'np.all(image_aug[image_cp == 255] < 255)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2598,Alexander Jung,kontakt@ajung.name,2020-05-02 21:17:07+02:00,f39b93c7279f52421885c7cee90de153add0bff6,https://github.com/aleju/imgaug/commit/f39b93c7279f52421885c7cee90de153add0bff6,"Improve Performance of invert_() (#631)

This patch improves the performance of
`imgaug.augmenters.arithmetic.invert_()` for `uint8`
images. The update is expected to improve the
performance by a factor of 4.5x to 5.3x (more for
smaller images) if no threshold is provided and by
1.5x to 2.7x (more for smaller images) if a threshold
is provided.

In both cases these improvements are only realised
if either no custom minimum and maximum for the
value range is provided or only a custom maximum
is provided. (This is expected to be the case for most
users.)

These improvements also affect `Invert` and `Solarize`.",3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class Test__invert_uint8_subtract_(unittest.TestCase):'],"[('Raises', '(cv2.error):')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['observed.dtype.name == ', 'np.array_equal(observed, expected)', 'observed.dtype.name == ', 'np.array_equal(observed, expected)', 'observed.dtype.name == ', 'np.array_equal(observed, expected)', 'zeros.flags[] is False', 'observed.dtype.name == ', 'np.array_equal(observed, expected)', 'zeros_view.flags[] is False', 'zeros_view.base is not None', '(', 'observed.dtype.name == ', 'np.array_equal(observed, expected)', 'zeros_view.flags[] is False', 'observed.dtype.name == ', 'np.array_equal(observed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2599,Alexander Jung,kontakt@ajung.name,2020-05-02 22:36:36+02:00,faf33525a5dc4c8d9c04337a73840c8fd594db9e,https://github.com/aleju/imgaug/commit/faf33525a5dc4c8d9c04337a73840c8fd594db9e,"Improve Performance of Elementwise Multiplication (#615)

This patch improves the performance of
`imgaug.augmenters.arithmetic.multiply_elementwise()`. The
performance improvement is roughly between 1.5x and 10x.
The effect is stronger for smaller images and denser
matrices of multipliers (i.e. `(H,W,C)` instead of `(H,W)`).
This change affects `MultiplyElementwise`.

Add functions:
* `imgaug.augmenters.arithmetic.multiply_elementwise_()`.",3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class Test_multiply_elementwise_to_non_uint8(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.array_equal(observed, expected)', 'observed.shape == (4, 3)', 'observed.dtype.name == ', 'observed is image_cp', 'np.array_equal(observed, expected)', 'observed.shape == (4, 3, nb_channels)', 'observed.dtype.name == ', 'observed is image_cp', 'np.array_equal(observed, expected)', 'observed.shape == (4, 3, nb_channels)', 'observed.dtype.name == ', 'observed is image_cp', 'np.array_equal(observed, expected)', 'observed.shape == (4, 3, nb_channels)', 'observed.dtype.name == ', 'observed is image_cp', 'np.array_equal(observed, expected)', 'observed.shape == (4, 3, 3)', 'observed.dtype.name == ', 'observed is image_cp', 'np.array_equal(observed, expected)', 'observed.shape == (4, 3, 3)', 'observed.dtype.name == ', 'observed is image_cp', 'image_cp.flags[] is False', 'image_cp.flags[] is True', 'np.array_equal(observed, expected)', 'observed.shape == (3, 3, nb_channels)', 'observed.dtype.name == ', 'image.flags[] is True', 'image.flags[] is False', 'np.array_equal(observed, expected)', 'observed.shape == (4, 3, nb_channels)', 'observed.dtype.name == ']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2600,Alexander Jung,kontakt@ajung.name,2020-05-02 22:40:42+02:00,e4db0b00d7a5df297cb384e7baea358730ee8dcb,https://github.com/aleju/imgaug/commit/e4db0b00d7a5df297cb384e7baea358730ee8dcb,"Refactor Affine (#639)

This patch refactors affine to make the code more
readable and change the matrix generation routine to
a numpy-based one. It also merges the matrix
generation of `Affine` and `pillike.Affine` and lays
the foundation for adding a `center` parameter to
`Affine`.

This patch also changes the shear mechanic in
`Affine`. When shearing on the x-axis, the points at
the top are now only moved to the left/right and no
longer up/down. Previously, they were also slightly
moved up/down. (Analogous for the y-axis.)",4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['hm_aug.shape == (56, 48)', 'hm_aug.arr_0to1.shape == (28, 24, 1)', '(same / img_aug_mask.size) >= 0.9', 'np.isclose(y1, 10.0)', 'np.isclose(y2, 10.0)', 'np.isclose(y3, 40.0)', 'np.isclose(y4, 40.0)', 'np.isclose(x1, 10.0)', 'np.isclose(x4, 10.0)', 'np.isclose(x2, 40.0)', 'np.isclose(x3, 40.0)']",[],[],[],[],[],[],[],[],[],[],[],[],"['hm_aug.shape == (56, 48)', 'hm_aug.arr_0to1.shape == (28, 24, 1)', '(same / img_aug_mask.size) >= 0.9', 'y1 > 10', 'y2 > 10', 'np.isclose(y1, y2)', 'y3 < 40', 'y4 < 40', 'np.isclose(y3, y4)', 'x1 > 10', 'x4 > 10', 'np.isclose(x1, x4)', 'x2 < 40', 'x3 < 40', 'np.isclose(x2, x3)']",[],[],[],[],[],[],[],[],[],[],[],[]
2601,Alexander Jung,kontakt@ajung.name,2020-05-03 11:47:53+02:00,7b27fbe7d8ce64b99a8be08878f337e0b7f0c62f,https://github.com/aleju/imgaug/commit/7b27fbe7d8ce64b99a8be08878f337e0b7f0c62f,"Improve Performance of Segment Replacement (#640)

This patch improves the performance of segment
replacement (by average colors within the segments),
used in `Superpixels` and `segment_voronoi()`.
The new method is up to around 7x faster, more for
smaller images and more segments. It can be slightly
slower in some cases for large images (512x512 and
larger).

This change seems to improve the overall performance
of `Superpixels` by a factor of around 1.1x to 1.4x
(more for smaller images).
It improves the overall performance of
`segment_voronoi()` by about 1.1x to 2.0x and can
reach much higher improvements in the case of very few
segments that have to be replaced.

Note that `segment_voronoi()` is used in `Voronoi`.

Added functions:
* `imgaug.augmenters.segmentation.replace_segments_`

Added classes:
* `imgaug.testutils.temporary_constants` (context)",5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['use_np_replace == ', 'np.allclose(observed, expected)', 'self._array_equals_tolerant(observed, expected, 2)', 'self._array_equals_tolerant(observed, expected, 2)', '(', 'np.all(seen.values())', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'img_aug.dtype == img.dtype', 'np.all(img_aug == img)', 'img_aug.dtype == img.dtype', 'np.all(img_aug)', 'img_aug.dtype.name == dtype.name', 'np.array_equal(img_aug, img)', 'img_aug.dtype.name == dtype.name', 'np.all(img_aug == int((7/8)*v2 + (1/8)*v1))']",[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(observed, expected)', 'self._array_equals_tolerant(observed, expected, 2)', 'self._array_equals_tolerant(observed, expected, 2)', '(', 'np.all(seen.values())', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'image_aug.dtype.name == ', 'image_aug.shape == shape', 'img_aug.dtype == img.dtype', 'np.all(img_aug == img)', 'img_aug.dtype == img.dtype', 'np.all(img_aug)', 'img_aug.dtype == np.dtype(dtype)', 'np.array_equal(img_aug, img)', 'img_aug.dtype == np.dtype(dtype)', 'np.all(img_aug == int(np.round((7/8)*v2 + (1/8)*v1)))']",[],[],[],[],[],[],[],[],[],[],[],[]
2602,Alexander Jung,kontakt@ajung.name,2020-05-03 11:51:54+02:00,e67fc6c828cc9d60975bfe65d870f73b1d0993a3,https://github.com/aleju/imgaug/commit/e67fc6c828cc9d60975bfe65d870f73b1d0993a3,"Improve Performance of FrequencyNoise (#651)

This patch improves the performance of
`imgaug.parameters.FrequencyNoise`, which is used in some
weather augmenters. The parameter now samples `HxW` arrays
about 1.3x to 1.5x faster (more improvement for larger
images).",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2603,Alexander Jung,kontakt@ajung.name,2020-05-03 14:58:56+02:00,18d3f0bb7988f6445ec6c61b63061335adb4fa73,https://github.com/aleju/imgaug/commit/18d3f0bb7988f6445ec6c61b63061335adb4fa73,"Improve Performance of ElasticTransformation (#624)

This patch applies various performance-related changes to
`ElasticTransformation`. These cover: (a) the re-use of
generated random samples for multiple images in the same
batch (with some adjustments so that they are not identical),
(b) the caching of generated and re-useable arrays,
(c) a performance-optimized smoothing method for the
underlying displacement maps and (d) the use of nearest
neighbour interpolation (`order=0`) instead of cubic
interpolation (`order=3`) as the new default parameter
for `order`.

These changes lead to a speedup of about 3x to 4x (more
for larger images) at a slight loss of visual
quality (mainly from `order=0`) and variety (due to the
re-use of random samples within each batch).
The new smoothing method leads to slightly stronger
displacements for larger `sigma` values.",7,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['seen[0] > 10', 'seen[1] > 10', 'hm_aug.shape == (80, 80)', 'hm_aug.arr_0to1.shape == (80, 80, 1)', '(same / img_aug_mask.size) >= 0.97', 'hm_aug.shape == (80, 80)', 'hm_aug.arr_0to1.shape == (40, 40, 1)', '(same / img_aug_mask.size) >= 0.9', '(same / img_aug_mask.size) >= 0.93']",[],[],[],[],[],[],[],[],[],[],[],[],"['seen[0] > 10', 'seen[1] > 10', 'hm_aug.shape == (80, 80)', 'hm_aug.arr_0to1.shape == (80, 80, 1)', '(same / img_aug_mask.size) >= 0.99', 'hm_aug.shape == (80, 80)', 'hm_aug.arr_0to1.shape == (40, 40, 1)', '(same / img_aug_mask.size) >= 0.94', '(same / img_aug_mask.size) >= 0.94']",[],[],[],[],[],[],[],[],[],[],[],[]
2604,Alexander Jung,kontakt@ajung.name,2020-05-16 11:38:59+02:00,814893041ee269d7f9b36940c099f9ad9ecee54d,https://github.com/aleju/imgaug/commit/814893041ee269d7f9b36940c099f9ad9ecee54d,"Add Automatic Prefetching of Random Number Samples (#634)

This patch adds automatic prefetching of random samples,
which performs a single large random sampling call instead
of many smaller ones. This seems to improve the
performance of most augmenters by 5% to 40% for longer
augmentation sessions (50+ consecutive batches of 128
examples each). A few augmenters seem to have gotten
slightly slower, though these might be measuring errors.

The prefetching is done by adding a new parameter,
`imgaug.parameters.AutoPrefetcher`, which prefetches
samples from a child parameter.

The change is expected to have for most augmenters a
slight negative performance impact if the augmenters
are used only once and not for multiple batches. For a
few augmenters there might be sizeable negative
peformance impact (due to prefetching falsely being
performed). The negative impact can be avoided in
these cases by wrapping the augmentation calls in
`with imgaug.parameters.no_prefetching(): ...`.

This patch also adds the property `prefetchable` to
`StochasticParameter`, which defaults to `False` and
determines whether the parameter's outputs may be
prefetched.

It further adds to
`handle_continuous_param()`, `handle_discrete_param()`.
`handle_categorical_string_param()`,
`handle_discrete_kernel_size_param()` and
`handle_probability_param()` in `imgaug.parameters` the
new argument `prefetch`. If set to `True` (the default),
these functions may now partially or fully wrap their
results in `AutoPrefetcher`.

Add functions:
* `imgaug.random.RNG.create_if_not_rng_()`
* `imgaug.parameters.toggle_prefetching()`
* `imgaug.testutils.is_parameter_instance()`
* `imgaug.testutils.remove_prefetching()`

Add properties:
* `imgaug.parameters.StochasticParameter.prefetchable`

Add classes:
* `imgaug.parameters.toggled_prefetching()` (context)
* `imgaug.parameters.no_prefetching()` (context)
* `imgaug.parameters.AutoPrefetcher`",29,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,395,0,0,0,0,0,0,0,0,0,0,0,0,324,0,0,0,0,0,0,0,0,0,0,0,0,['class TestAutoPrefetcher(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['is_parameter_instance(aug.position[0], iap.Uniform)', 'is_parameter_instance(aug.position[1], iap.Uniform)', 'is_parameter_instance(aug.p, iap.Binomial)', 'is_parameter_instance(aug.p, iap.Binomial)', 'is_parameter_instance(aug.p, iap.Binomial)', 'is_parameter_instance(aug.p, iap.Binomial)', 'is_parameter_instance(aug.compression, iap.Choice)', 'params[0] is aug.factor', 'params[1] is aug.per_channel', 'is_parameter_instance(gen.class_ids, iap.Choice)', 'is_parameter_instance(gen.nb_sample_classes, iap.Deterministic)', 'is_parameter_instance(gen.labels, iap.Choice)', 'is_parameter_instance(gen.nb_sample_labels, iap.Deterministic)', 'is_parameter_instance(aug.children[0].mul, iap.Uniform)', 'is_parameter_instance(aug.children[0].per_channel,', 'is_parameter_instance(aug.children[0].children[0].mul,', 'is_parameter_instance(aug.children[0].children[0].mul,', 'is_parameter_instance(aug.children[0].children[0].mul,', 'is_parameter_instance(aug.children[1].children[0].mul,', 'is_parameter_instance(aug.children[0].children[0].mul,', 'is_parameter_instance(aug.children[0].children[0].mul,', 'is_parameter_instance(aug.value, iap.DiscreteUniform)', 'is_parameter_instance(aug.per_channel, iap.Deterministic)', 'is_parameter_instance(aug.value_hue, iap.DiscreteUniform)', 'is_parameter_instance(aug.value_saturation, iap.Choice)', 'is_parameter_instance(aug.per_channel, iap.Deterministic)', 'is_parameter_instance(aug.per_channel, iap.Binomial)', 'is_parameter_instance(params[0], iap.DiscreteUniform)', 'is_parameter_instance(params[3], iap.Binomial)', 'is_parameter_instance(params[1], iap.DiscreteUniform)', 'is_parameter_instance(params[2], iap.Deterministic)', 'is_parameter_instance(params[3], iap.Deterministic)', 'is_parameter_instance(aug.value_hue, iap.DiscreteUniform)', 'is_parameter_instance(aug.value_saturation, iap.DiscreteUniform)', 'is_parameter_instance(aug.kelvin, iap.Uniform)', 'is_parameter_instance(aug.kelvin, iap.Uniform)', 'is_parameter_instance(aug.kelvin, iap.Choice)', 'is_parameter_instance(aug.kelvin, iap.Deterministic)', 'aug.kelvin.value == 5000', 'is_parameter_instance(aug.n_colors, iap.DiscreteUniform)', 'is_parameter_instance(aug.n_colors, iap.DiscreteUniform)', 'is_parameter_instance(params[0], iap.DiscreteUniform)', 'is_parameter_instance(aug.n_colors, iap.DiscreteUniform)', 'is_parameter_instance(aug.n_colors, iap.DiscreteUniform)', 'is_parameter_instance(aug.counts, iap.DiscreteUniform)', 'is_parameter_instance(aug.counts, iap.DiscreteUniform)', 'is_parameter_instance(aug.params1d[0], iap.Uniform)', 'is_parameter_instance(aug.params1d[0].a, iap.Deterministic)', 'is_parameter_instance(aug.params1d[0].b, iap.Deterministic)', 'is_parameter_instance(aug.params1d[0], iap.Choice)', 'is_parameter_instance(aug.params1d[0], iap.Uniform)', 'is_parameter_instance(aug.params1d[0].a, iap.Deterministic)', 'is_parameter_instance(aug.params1d[0].b, iap.Deterministic)', 'is_parameter_instance(aug.params1d[1], iap.Uniform)', 'is_parameter_instance(aug.params1d[1].a, iap.Deterministic)', 'is_parameter_instance(aug.params1d[1].b, iap.Deterministic)', 'is_parameter_instance(aug.params1d[0], iap.Choice)', 'is_parameter_instance(aug.params1d[1], iap.Choice)', 'is_parameter_instance(aug.params1d[0], iap.Uniform)', 'is_parameter_instance(aug.params1d[0].a, iap.Deterministic)', 'is_parameter_instance(aug.params1d[0].b, iap.Deterministic)', 'is_parameter_instance(aug.params1d[0], iap.Choice)', 'is_parameter_instance(aug.params1d[0], iap.Uniform)', 'is_parameter_instance(aug.params1d[0].a, iap.Deterministic)', 'is_parameter_instance(aug.params1d[0].b, iap.Deterministic)', 'is_parameter_instance(aug.params1d[0], iap.Choice)', 'is_parameter_instance(aug.clip_limit, iap.Deterministic)', 'is_parameter_instance(aug.tile_grid_size_px[0],', 'is_parameter_instance(aug.per_channel, iap.Deterministic)', 'is_parameter_instance(aug.clip_limit, iap.Uniform)', 'is_parameter_instance(aug.tile_grid_size_px[0],', 'is_parameter_instance(aug.per_channel, iap.Binomial)', 'is_parameter_instance(aug.clip_limit, iap.Choice)', 'is_parameter_instance(aug.tile_grid_size_px[0], iap.Choice)', 'is_parameter_instance(aug.tile_grid_size_px[0], iap.DiscreteUniform)', 'is_parameter_instance(aug.tile_grid_size_px[1], iap.Choice)', 'is_parameter_instance(colorizer.color_true, iap.DiscreteUniform)', 'is_parameter_instance(colorizer.color_false, iap.DiscreteUniform)', 'is_parameter_instance(colorizer.color_true, iap.Deterministic)', 'is_parameter_instance(colorizer.color_false, iap.Deterministic)', 'is_parameter_instance(colorizer.color_true, iap.DiscreteUniform)', 'is_parameter_instance(colorizer.color_false, iap.Choice)', 'is_parameter_instance(colorizer.color_true, iap.DiscreteUniform)', 'is_parameter_instance(colorizer.color_false, iap.Choice)', 'is_parameter_instance(aug.alpha, iap.Uniform)', 'is_parameter_instance(aug.sobel_kernel_size, iap.DiscreteUniform)', 'is_parameter_instance(aug.hysteresis_thresholds[0],', 'is_parameter_instance(aug.hysteresis_thresholds[1],', 'is_parameter_instance(aug.colorizer.color_true,', 'is_parameter_instance(aug.colorizer.color_false,', 'is_parameter_instance(aug.alpha, iap.Deterministic)', 'is_parameter_instance(aug.sobel_kernel_size, iap.Choice)', 'is_parameter_instance(aug.hysteresis_thresholds[0], iap.Choice)', 'is_parameter_instance(aug.hysteresis_thresholds[1],', 'is_parameter_instance(aug.sobel_kernel_size, iap.Choice)', 'is_parameter_instance(aug.colorizer.color_true,', 'is_parameter_instance(aug.colorizer.color_false,', 'is_parameter_instance(aug.alpha, iap.Deterministic)', 'is_parameter_instance(aug.hysteresis_thresholds, iap.Choice)', 'is_parameter_instance(aug.sobel_kernel_size, iap.Choice)', 'is_parameter_instance(aug.sobel_kernel_size, iap.Choice)', 'is_parameter_instance(aug.colorizer.color_true,', 'is_parameter_instance(aug.colorizer.color_false,', 'params[0] is aug.alpha', 'params[1] is aug.hysteresis_thresholds', 'params[2] is aug.sobel_kernel_size', 'is_parameter_instance(params[0], iap.Binomial)', 'is_parameter_instance(params[0].p, iap.Deterministic)', 'is_parameter_instance(params[0], iap.Deterministic)  # scale', 'is_parameter_instance(params[2], iap.Deterministic)  # rotate', 'is_parameter_instance(params[3], iap.Deterministic)  # shear', 'is_parameter_instance(aug.scale, iap.Uniform)', 'is_parameter_instance(aug.scale.a, iap.Deterministic)', 'is_parameter_instance(aug.scale.b, iap.Deterministic)', 'is_parameter_instance(aug.translate[0], iap.Uniform)', 'is_parameter_instance(aug.translate[0].a, iap.Deterministic)', 'is_parameter_instance(aug.translate[0].b, iap.Deterministic)', 'is_parameter_instance(aug.translate[0], iap.DiscreteUniform)', 'is_parameter_instance(aug.translate[0].a, iap.Deterministic)', 'is_parameter_instance(aug.translate[0].b, iap.Deterministic)', 'is_parameter_instance(aug.rotate, iap.Uniform)', 'is_parameter_instance(aug.rotate.a, iap.Deterministic)', 'is_parameter_instance(aug.rotate.b, iap.Deterministic)', 'is_parameter_instance(aug.shear, iap.Uniform)', 'is_parameter_instance(aug.shear.a, iap.Deterministic)', 'is_parameter_instance(aug.shear.b, iap.Deterministic)', 'is_parameter_instance(aug.cval, iap.Uniform)', 'is_parameter_instance(aug.cval.a, iap.Deterministic)', 'is_parameter_instance(aug.cval.b, iap.Deterministic)', 'is_parameter_instance(aug.cval, iap.DiscreteUniform)', 'is_parameter_instance(aug.cval.a, iap.Deterministic)', 'is_parameter_instance(aug.cval.b, iap.Deterministic)', 'is_parameter_instance(aug.mode, iap.Choice)', 'is_parameter_instance(aug.mode, iap.Deterministic)', 'is_parameter_instance(aug.mode, iap.Choice)', 'is_parameter_instance(aug.mode, iap.Choice)', 'is_parameter_instance(aug.scale, iap.Uniform)', 'is_parameter_instance(aug.scale.a, iap.Deterministic)', 'is_parameter_instance(aug.scale.b, iap.Deterministic)', 'is_parameter_instance(aug.translate, iap.Uniform)', 'is_parameter_instance(aug.translate.a, iap.Deterministic)', 'is_parameter_instance(aug.translate.b, iap.Deterministic)', 'is_parameter_instance(aug.translate, iap.DiscreteUniform)', 'is_parameter_instance(aug.translate.a, iap.Deterministic)', 'is_parameter_instance(aug.translate.b, iap.Deterministic)', 'is_parameter_instance(aug.rotate, iap.Uniform)', 'is_parameter_instance(aug.rotate.a, iap.Deterministic)', 'is_parameter_instance(aug.rotate.b, iap.Deterministic)', 'is_parameter_instance(aug.shear, iap.Uniform)', 'is_parameter_instance(aug.shear.a, iap.Deterministic)', 'is_parameter_instance(aug.shear.b, iap.Deterministic)', 'is_parameter_instance(aug.cval, iap.DiscreteUniform)', 'is_parameter_instance(aug.cval.a, iap.Deterministic)', 'is_parameter_instance(aug.cval.b, iap.Deterministic)', 'is_parameter_instance(aug.cval, iap.DiscreteUniform)', 'is_parameter_instance(aug.cval.a, iap.Deterministic)', 'is_parameter_instance(aug.cval.b, iap.Deterministic)', 'is_parameter_instance(aug.mode, iap.Choice)', 'is_parameter_instance(aug.mode, iap.Deterministic)', 'is_parameter_instance(aug.mode, iap.Choice)', 'is_parameter_instance(aug.mode, iap.Choice)', 'is_parameter_instance(params[0], iap.Deterministic)  # scale', 'is_parameter_instance(params[1], iap.Deterministic)  # translate', 'is_parameter_instance(params[2], iap.Deterministic)  # rotate', 'is_parameter_instance(params[3], iap.Deterministic)  # shear', 'is_parameter_instance(aug.scale, iap.Choice)', 'is_parameter_instance(aug.jitter.scale, iap.Uniform)', 'is_parameter_instance(aug.jitter.scale.a, iap.Deterministic)', 'is_parameter_instance(aug.jitter.scale.b, iap.Deterministic)', 'is_parameter_instance(aug.jitter.scale, iap.Uniform)', 'is_parameter_instance(aug.jitter.scale.a, iap.Deterministic)', 'is_parameter_instance(aug.jitter.scale.b, iap.Deterministic)', 'is_parameter_instance(aug.nb_rows, iap.Choice)', 'is_parameter_instance(aug.nb_rows, iap.DiscreteUniform)', 'is_parameter_instance(aug.nb_rows.a, iap.Deterministic)', 'is_parameter_instance(aug.nb_rows.b, iap.Deterministic)', 'is_parameter_instance(aug.nb_rows, iap.DiscreteUniform)', 'is_parameter_instance(aug.nb_rows.a, iap.Deterministic)', 'is_parameter_instance(aug.nb_rows.b, iap.Deterministic)', 'is_parameter_instance(aug.nb_cols, iap.Choice)', 'is_parameter_instance(aug.nb_cols, iap.DiscreteUniform)', 'is_parameter_instance(aug.nb_cols.a, iap.Deterministic)', 'is_parameter_instance(aug.nb_cols.b, iap.Deterministic)', 'is_parameter_instance(aug.nb_cols, iap.DiscreteUniform)', 'is_parameter_instance(aug.nb_cols.a, iap.Deterministic)', 'is_parameter_instance(aug.nb_cols.b, iap.Deterministic)', 'is_parameter_instance(aug.order, iap.Deterministic)', 'is_parameter_instance(aug.order, iap.Choice)', 'is_parameter_instance(aug.order, iap.Choice)', 'is_parameter_instance(aug.order, iap.Choice)', 'is_parameter_instance(aug.cval, iap.Choice)', 'is_parameter_instance(aug.cval, iap.Uniform)', 'is_parameter_instance(aug.cval.a, iap.Deterministic)', 'is_parameter_instance(aug.cval.b, iap.Deterministic)', 'is_parameter_instance(aug.cval, iap.DiscreteUniform)', 'is_parameter_instance(aug.cval.a, iap.Deterministic)', 'is_parameter_instance(aug.cval.b, iap.Deterministic)', 'is_parameter_instance(aug.cval, iap.Uniform)', 'is_parameter_instance(aug.cval.a, iap.Deterministic)', 'is_parameter_instance(aug.cval.b, iap.Deterministic)', 'is_parameter_instance(aug.mode, iap.Deterministic)', 'is_parameter_instance(aug.mode, iap.Choice)', 'is_parameter_instance(aug.mode, iap.Choice)', 'is_parameter_instance(aug.mode, iap.Choice)', 'kpsoi_aug.shape == (200, 300, 3)', 'params[0] is aug.jitter.scale', 'params[1] is aug.nb_rows', 'params[2] is aug.nb_cols', 'params[3] is aug.order', 'params[4] is aug.cval', 'params[5] is aug.mode', 'is_parameter_instance(aug.jitter.scale, iap.Uniform)', 'is_parameter_instance(aug.jitter.scale.a, iap.Deterministic)', 'is_parameter_instance(aug.jitter.scale.b, iap.Deterministic)', 'is_parameter_instance(aug.jitter.scale, iap.Choice)', 'is_parameter_instance(aug.jitter.scale, iap.Choice)', 'is_parameter_instance(aug.mode, iap.Choice)', 'is_parameter_instance(aug.mode, iap.Deterministic)', 'is_parameter_instance(aug.mode, iap.Choice)', 'is_parameter_instance(aug.mode, iap.Choice)', 'is_parameter_instance(params[0], iap.Normal)', 'is_parameter_instance(params[0].scale, iap.Deterministic)', 'is_parameter_instance(aug.alpha, iap.Uniform)', 'is_parameter_instance(aug.alpha.a, iap.Deterministic)', 'is_parameter_instance(aug.alpha.b, iap.Deterministic)', 'is_parameter_instance(aug.sigma, iap.Uniform)', 'is_parameter_instance(aug.sigma.a, iap.Deterministic)', 'is_parameter_instance(aug.sigma.b, iap.Deterministic)', 'is_parameter_instance(aug.order, iap.Choice)', 'is_parameter_instance(aug.order, iap.Deterministic)', 'is_parameter_instance(aug.order, iap.Choice)', 'is_parameter_instance(aug.order, iap.Choice)', 'is_parameter_instance(aug.cval, iap.Uniform)', 'is_parameter_instance(aug.cval.a, iap.Deterministic)', 'is_parameter_instance(aug.cval.b, iap.Deterministic)', 'is_parameter_instance(aug.cval, iap.Deterministic)', 'is_parameter_instance(aug.cval, iap.Choice)', 'is_parameter_instance(aug.cval, iap.Choice)', 'is_parameter_instance(aug.cval, iap.Uniform)', 'is_parameter_instance(aug.cval.a, iap.Deterministic)', 'is_parameter_instance(aug.cval.b, iap.Deterministic)', 'is_parameter_instance(aug.mode, iap.Choice)', 'is_parameter_instance(aug.mode, iap.Deterministic)', 'is_parameter_instance(aug.mode, iap.Choice)', 'is_parameter_instance(aug.mode, iap.Choice)', 'params[0] is aug.alpha', 'params[1] is aug.sigma', 'params[2] is aug.order', 'params[3] is aug.cval', 'params[4] is aug.mode', 'is_parameter_instance(aug.k, iap.Choice)', 'is_parameter_instance(aug.k, iap.Choice)', 'is_parameter_instance(params[0], iap.Binomial)', 'is_parameter_instance(params[0].p, iap.Deterministic)', 'is_parameter_instance(aug.p, iap.Binomial)', 'is_parameter_instance(aug.p.p, iap.Deterministic)', 'is_parameter_instance(params[0][0], iap.Deterministic)', 'is_parameter_instance(aug.kernel_size[0], iap.Deterministic)', 'is_parameter_instance(aug.kernel_size[0], iap.DiscreteUniform)', 'is_parameter_instance(aug.kernel_size[1], iap.DiscreteUniform)', 'params[0] is aug.p_replace', 'is_parameter_instance(params[0].p, iap.Deterministic)', 'params[1] is aug.n_segments', 'is_parameter_instance(aug.p_replace, iap.Deterministic)', 'is_parameter_instance(aug.p_replace, iap.Binomial)', 'is_parameter_instance(params[1], iap.Binomial)', 'is_parameter_instance(', 'is_parameter_instance(ps.other_points_sampler.n_cols_frac,', 'is_parameter_instance(sampler.n_rows, iap.DiscreteUniform)', 'is_parameter_instance(sampler.n_rows_frac, iap.Uniform)', 'is_parameter_instance(sampler.n_points, iap.Deterministic)', 'is_parameter_instance(param, iap.Uniform)', 'is_parameter_instance(param.a, iap.Deterministic)', 'is_parameter_instance(param.b, iap.Deterministic)', '0.0 - 1e-4 < param.a.value < 0.0 + 1e-4', '1.0 - 1e-4 < param.b.value < 1.0 + 1e-4', 'is_parameter_instance(observed[i], iap.Deterministic)', 'is_parameter_instance(param, iap.Clip)', 'is_parameter_instance(param.other_param, iap.Normal)', 'is_parameter_instance(param.other_param.loc,', 'is_parameter_instance(param.other_param.scale,', '0.5 - 1e-4 < param.other_param.loc.value < 0.5 + 1e-4', '0.35/2 - 1e-4 < param.other_param.scale.value < 0.35/2 + 1e-4', 'is_parameter_instance(observed[0], iap.Deterministic)', 'is_parameter_instance(observed[1], iap.Deterministic)', 'is_parameter_instance(observed, iap.Poisson)', 'is_parameter_instance(observed[0], iap.Deterministic)', 'is_parameter_instance(observed[1], iap.Deterministic)', 'is_parameter_instance(observed[0], iap.Poisson)', 'is_parameter_instance(observed[0].lam, iap.Deterministic)', 'is_parameter_instance(observed[1], iap.Poisson)', 'is_parameter_instance(observed[1].lam, iap.Deterministic)', 'is_parameter_instance(observed[0], iap.Deterministic)', 'is_parameter_instance(observed[1], iap.Poisson)', 'is_parameter_instance(observed[1].lam, iap.Deterministic)', 'is_parameter_instance(params[0], iap.Deterministic)', 'is_parameter_instance(params[1], iap.Deterministic)', 'is_parameter_instance(aug.pad_mode, iap.Choice)', 'is_parameter_instance(aug.pad_mode, iap.Choice)', 'is_parameter_instance(aug.pad_cval, iap.Choice)', 'is_parameter_instance(aug.lightness_threshold, iap.Choice)', 'is_parameter_instance(aug.lightness_multiplier, iap.Choice)', 'len(batches_aug1) == nb_batches', 'len(batches_aug2) == nb_batches', 'len(batches_aug3) == nb_batches', 'is_parameter_instance(param, iap.Choice)', 'is_parameter_instance(param, iap.Deterministic)', 'is_parameter_instance(param, iap.Deterministic)', 'is_parameter_instance(param, iap.Choice)', 'is_parameter_instance(param, iap.Choice)', 'is_parameter_instance(p, iap.Binomial)', 'is_parameter_instance(p.p, iap.Deterministic)', 'other_param.draw_samples.call_count == 1', 'other_param.draw_samples.call_args_list[0][0][0] == (1,)', 'other_param.draw_samples.call_args_list[0][0][1].equals(rng)', 'param.samples is None', 'param.index == 0', 'param.last_rng_idx == rng._idx', 'other_param.draw_samples.call_count == 2', 'other_param.draw_samples.call_args_list[0][0][0] == (1,)', 'other_param.draw_samples.call_args_list[0][0][1].equals(rng)', 'other_param.draw_samples.call_args_list[1][0][0] == (10,)', 'other_param.draw_samples.call_args_list[1][0][1].equals(rng)', 'param.samples.shape == (100,)', 'param.index == 1', 'param.last_rng_idx == rng._idx', 'np.array_equal(samples1, np.arange(50))', 'np.array_equal(samples2, np.arange(50))', 'np.array_equal(samples3, 50 + np.arange(50))', 'np.array_equal(samples4, np.arange(50))', 'np.array_equal(samples1, np.arange(40))', 'np.array_equal(samples2, np.arange(40))', 'np.array_equal(samples3, 40 + np.arange(40))', 'np.array_equal(', 'np.array_equal(samples1, np.arange(40))', 'np.array_equal(samples2, np.arange(40))', 'np.array_equal(samples3, np.arange(40))', 'np.array_equal(samples1, np.arange(40))', 'np.array_equal(samples2, np.arange(40))', 'np.array_equal(samples3, np.arange(40))', 'np.array_equal(samples1, np.arange(2*3*4).reshape((2, 3, 4)))', 'np.array_equal(samples2, np.arange(1*5*2).reshape((1, 5, 2)))', 'np.array_equal(samples3,', 'str(param) == repr(param) == expected', 'str(param) == repr(param) == expected', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param.a)', 'in str(param.b)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param.other_param)', 'in str(param.other_param)', 'in str(param.val)', 'in str(param.other_param)', 'in str(param.val)', 'in str(param.other_param)', 'in str(param.val)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)', 'in str(param)']",[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'isinstance(aug.position[0], iap.Uniform)', 'isinstance(aug.position[1], iap.Uniform)', 'isinstance(aug.p, iap.Binomial)', 'isinstance(aug.p, iap.Binomial)', 'isinstance(aug.p, iap.Binomial)', 'isinstance(params[0], iap.Binomial)', 'isinstance(aug.p, iap.Binomial)', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'isinstance(params[2], iap.Deterministic)', 'isinstance(aug.compression, iap.Choice)', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'isinstance(gen.class_ids, iap.Choice)', 'isinstance(gen.nb_sample_classes, iap.Deterministic)', 'isinstance(gen.labels, iap.Choice)', 'isinstance(gen.nb_sample_labels, iap.Deterministic)', 'isinstance(aug.children[0].mul, iap.Uniform)', 'isinstance(aug.children[0].per_channel, iap.Deterministic)', 'isinstance(aug.children[0].children[0].mul, iap.Uniform)', 'isinstance(aug.children[0].children[0].mul, iap.Uniform)', 'isinstance(aug.children[0].children[0].mul, iap.Uniform)', 'isinstance(aug.children[1].children[0].mul, iap.Uniform)', 'isinstance(aug.children[0].children[0].mul, iap.Uniform)', 'isinstance(aug.children[0].children[0].mul, iap.Uniform)', 'isinstance(aug.value, iap.DiscreteUniform)', 'isinstance(aug.per_channel, iap.Deterministic)', 'isinstance(aug.value_hue, iap.DiscreteUniform)', 'isinstance(aug.value_saturation, iap.Choice)', 'isinstance(aug.per_channel, iap.Deterministic)', 'isinstance(aug.per_channel, iap.Binomial)', 'isinstance(params[0], iap.DiscreteUniform)', 'isinstance(params[3], iap.Binomial)', 'isinstance(params[1], iap.DiscreteUniform)', 'isinstance(params[2], iap.Deterministic)', 'isinstance(params[3], iap.Deterministic)', 'isinstance(aug.value_hue, iap.DiscreteUniform)', 'isinstance(aug.value_saturation, iap.DiscreteUniform)', 'isinstance(aug.kelvin, iap.Uniform)', 'isinstance(aug.kelvin, iap.Uniform)', 'isinstance(aug.kelvin, iap.Choice)', 'aug.kelvin is param', 'isinstance(aug.n_colors, iap.DiscreteUniform)', 'isinstance(aug.n_colors, iap.DiscreteUniform)', 'isinstance(params[0], iap.DiscreteUniform)', 'isinstance(aug.n_colors, iap.DiscreteUniform)', 'isinstance(aug.n_colors, iap.DiscreteUniform)', 'isinstance(aug.counts, iap.DiscreteUniform)', 'isinstance(aug.counts, iap.DiscreteUniform)', 'isinstance(aug.params1d[0], iap.Uniform)', 'isinstance(aug.params1d[0].a, iap.Deterministic)', 'isinstance(aug.params1d[0].b, iap.Deterministic)', 'isinstance(aug.params1d[0], iap.Choice)', 'isinstance(aug.params1d[0], iap.Uniform)', 'isinstance(aug.params1d[0].a, iap.Deterministic)', 'isinstance(aug.params1d[0].b, iap.Deterministic)', 'isinstance(aug.params1d[1], iap.Uniform)', 'isinstance(aug.params1d[1].a, iap.Deterministic)', 'isinstance(aug.params1d[1].b, iap.Deterministic)', 'isinstance(aug.params1d[0], iap.Choice)', 'isinstance(aug.params1d[1], iap.Choice)', 'isinstance(aug.params1d[0], iap.Uniform)', 'isinstance(aug.params1d[0].a, iap.Deterministic)', 'isinstance(aug.params1d[0].b, iap.Deterministic)', 'isinstance(aug.params1d[0], iap.Choice)', 'isinstance(aug.params1d[0], iap.Uniform)', 'isinstance(aug.params1d[0].a, iap.Deterministic)', 'isinstance(aug.params1d[0].b, iap.Deterministic)', 'isinstance(aug.params1d[0], iap.Choice)', 'isinstance(aug.clip_limit, iap.Deterministic)', 'isinstance(aug.tile_grid_size_px[0], iap.Deterministic)', 'isinstance(aug.per_channel, iap.Deterministic)', 'isinstance(aug.clip_limit, iap.Uniform)', 'isinstance(aug.tile_grid_size_px[0], iap.DiscreteUniform)', 'isinstance(aug.per_channel, iap.Binomial)', 'isinstance(aug.clip_limit, iap.Choice)', 'isinstance(aug.tile_grid_size_px[0], iap.Choice)', 'isinstance(aug.tile_grid_size_px[0], iap.DiscreteUniform)', 'isinstance(aug.tile_grid_size_px[1], iap.Choice)', 'isinstance(colorizer.color_true, iap.DiscreteUniform)', 'isinstance(colorizer.color_false, iap.DiscreteUniform)', 'isinstance(colorizer.color_true, iap.Deterministic)', 'isinstance(colorizer.color_false, iap.Deterministic)', 'isinstance(colorizer.color_true, iap.DiscreteUniform)', 'isinstance(colorizer.color_false, iap.Choice)', 'isinstance(colorizer.color_true, iap.DiscreteUniform)', 'isinstance(colorizer.color_false, iap.Choice)', 'isinstance(aug.alpha, iap.Uniform)', 'isinstance(aug.sobel_kernel_size, iap.DiscreteUniform)', 'isinstance(aug.hysteresis_thresholds[0], iap.DiscreteUniform)', 'isinstance(aug.hysteresis_thresholds[1], iap.DiscreteUniform)', 'isinstance(aug.colorizer.color_true, iap.DiscreteUniform)', 'isinstance(aug.colorizer.color_false, iap.DiscreteUniform)', 'isinstance(aug.alpha, iap.Deterministic)', 'isinstance(aug.sobel_kernel_size, iap.Choice)', 'isinstance(aug.hysteresis_thresholds[0], iap.Choice)', 'isinstance(aug.hysteresis_thresholds[1], iap.DiscreteUniform)', 'isinstance(aug.sobel_kernel_size, iap.Choice)', 'isinstance(aug.colorizer.color_true, iap.Deterministic)', 'isinstance(aug.colorizer.color_false, iap.Deterministic)', 'isinstance(aug.alpha, iap.Deterministic)', 'isinstance(aug.hysteresis_thresholds, iap.Choice)', 'isinstance(aug.sobel_kernel_size, iap.Choice)', 'isinstance(aug.sobel_kernel_size, iap.Choice)', 'isinstance(aug.colorizer.color_true, iap.Deterministic)', 'isinstance(aug.colorizer.color_false, iap.Deterministic)', 'params[0] is alpha', 'params[1] is hysteresis_thresholds', 'params[2] is sobel_kernel_size', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', 'isinstance(params[0], iap.Deterministic)  # scale', 'isinstance(params[2], iap.Deterministic)  # rotate', 'isinstance(params[3], iap.Deterministic)  # shear', 'isinstance(aug.scale, iap.Uniform)', 'isinstance(aug.scale.a, iap.Deterministic)', 'isinstance(aug.scale.b, iap.Deterministic)', 'isinstance(aug.translate[0], iap.Uniform)', 'isinstance(aug.translate[0].a, iap.Deterministic)', 'isinstance(aug.translate[0].b, iap.Deterministic)', 'isinstance(aug.translate[0], iap.DiscreteUniform)', 'isinstance(aug.translate[0].a, iap.Deterministic)', 'isinstance(aug.translate[0].b, iap.Deterministic)', 'isinstance(aug.rotate, iap.Uniform)', 'isinstance(aug.rotate.a, iap.Deterministic)', 'isinstance(aug.rotate.b, iap.Deterministic)', 'isinstance(aug.shear, iap.Uniform)', 'isinstance(aug.shear.a, iap.Deterministic)', 'isinstance(aug.shear.b, iap.Deterministic)', 'isinstance(aug.cval, iap.Uniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'isinstance(aug.mode, iap.Choice)', 'isinstance(aug.mode, iap.Deterministic)', 'isinstance(aug.mode, iap.Choice)', 'isinstance(aug.mode, iap.Choice)', 'isinstance(aug.scale, iap.Uniform)', 'isinstance(aug.scale.a, iap.Deterministic)', 'isinstance(aug.scale.b, iap.Deterministic)', 'isinstance(aug.translate, iap.Uniform)', 'isinstance(aug.translate.a, iap.Deterministic)', 'isinstance(aug.translate.b, iap.Deterministic)', 'isinstance(aug.translate, iap.DiscreteUniform)', 'isinstance(aug.translate.a, iap.Deterministic)', 'isinstance(aug.translate.b, iap.Deterministic)', 'isinstance(aug.rotate, iap.Uniform)', 'isinstance(aug.rotate.a, iap.Deterministic)', 'isinstance(aug.rotate.b, iap.Deterministic)', 'isinstance(aug.shear, iap.Uniform)', 'isinstance(aug.shear.a, iap.Deterministic)', 'isinstance(aug.shear.b, iap.Deterministic)', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'isinstance(aug.mode, iap.Choice)', 'isinstance(aug.mode, iap.Deterministic)', 'isinstance(aug.mode, iap.Choice)', 'isinstance(aug.mode, iap.Choice)', 'isinstance(params[0], iap.Deterministic)  # scale', 'isinstance(params[1], iap.Deterministic)  # translate', 'isinstance(params[2], iap.Deterministic)  # rotate', 'isinstance(params[3], iap.Deterministic)  # shear', 'isinstance(aug.scale, iap.Choice)', 'isinstance(aug.jitter.scale, iap.Uniform)', 'isinstance(aug.jitter.scale.a, iap.Deterministic)', 'isinstance(aug.jitter.scale.b, iap.Deterministic)', 'isinstance(aug.jitter.scale, iap.Uniform)', 'isinstance(aug.jitter.scale.a, iap.Deterministic)', 'isinstance(aug.jitter.scale.b, iap.Deterministic)', 'isinstance(aug.nb_rows, iap.Choice)', 'isinstance(aug.nb_rows, iap.DiscreteUniform)', 'isinstance(aug.nb_rows.a, iap.Deterministic)', 'isinstance(aug.nb_rows.b, iap.Deterministic)', 'isinstance(aug.nb_rows, iap.DiscreteUniform)', 'isinstance(aug.nb_rows.a, iap.Deterministic)', 'isinstance(aug.nb_rows.b, iap.Deterministic)', 'isinstance(aug.nb_cols, iap.Choice)', 'isinstance(aug.nb_cols, iap.DiscreteUniform)', 'isinstance(aug.nb_cols.a, iap.Deterministic)', 'isinstance(aug.nb_cols.b, iap.Deterministic)', 'isinstance(aug.nb_cols, iap.DiscreteUniform)', 'isinstance(aug.nb_cols.a, iap.Deterministic)', 'isinstance(aug.nb_cols.b, iap.Deterministic)', 'isinstance(aug.order, iap.Deterministic)', 'isinstance(aug.order, iap.Choice)', 'isinstance(aug.order, iap.Choice)', 'isinstance(aug.order, iap.Choice)', 'isinstance(aug.cval, iap.Choice)', 'isinstance(aug.cval, iap.Uniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'isinstance(aug.cval, iap.DiscreteUniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'isinstance(aug.cval, iap.Uniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'isinstance(aug.mode, iap.Deterministic)', 'isinstance(aug.mode, iap.Choice)', 'isinstance(aug.mode, iap.Choice)', 'isinstance(aug.mode, iap.Choice)', 'kpsoi_aug.shape == (24, 30, 3)', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'isinstance(params[2], iap.Deterministic)', 'isinstance(params[3], iap.Deterministic)', 'isinstance(params[4], iap.Deterministic)', 'isinstance(params[5], iap.Deterministic)', 'isinstance(aug.jitter.scale, iap.Uniform)', 'isinstance(aug.jitter.scale.a, iap.Deterministic)', 'isinstance(aug.jitter.scale.b, iap.Deterministic)', 'isinstance(aug.jitter.scale, iap.Choice)', 'isinstance(aug.jitter.scale, iap.Choice)', 'isinstance(aug.mode, iap.Choice)', 'isinstance(aug.mode, iap.Deterministic)', 'isinstance(aug.mode, iap.Choice)', 'isinstance(aug.mode, iap.Choice)', 'isinstance(params[0], iap.Normal)', 'isinstance(params[0].scale, iap.Deterministic)', 'isinstance(aug.alpha, iap.Uniform)', 'isinstance(aug.alpha.a, iap.Deterministic)', 'isinstance(aug.alpha.b, iap.Deterministic)', 'isinstance(aug.sigma, iap.Uniform)', 'isinstance(aug.sigma.a, iap.Deterministic)', 'isinstance(aug.sigma.b, iap.Deterministic)', 'isinstance(aug.order, iap.Choice)', 'isinstance(aug.order, iap.Deterministic)', 'isinstance(aug.order, iap.Choice)', 'isinstance(aug.order, iap.Choice)', 'isinstance(aug.cval, iap.Uniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'isinstance(aug.cval, iap.Deterministic)', 'isinstance(aug.cval, iap.Choice)', 'isinstance(aug.cval, iap.Choice)', 'isinstance(aug.cval, iap.Uniform)', 'isinstance(aug.cval.a, iap.Deterministic)', 'isinstance(aug.cval.b, iap.Deterministic)', 'isinstance(aug.mode, iap.Choice)', 'isinstance(aug.mode, iap.Deterministic)', 'isinstance(aug.mode, iap.Choice)', 'isinstance(aug.mode, iap.Choice)', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'isinstance(params[2], iap.Deterministic)', 'isinstance(params[3], iap.Deterministic)', 'isinstance(params[4], iap.Deterministic)', 'isinstance(aug.k, iap.Choice)', 'isinstance(aug.k, iap.Choice)', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', 'isinstance(aug.p, iap.Binomial)', 'isinstance(aug.p.p, iap.Deterministic)', 'isinstance(params[0][0], iap.Deterministic)', 'isinstance(aug.kernel_size[0], iap.Deterministic)', 'isinstance(aug.kernel_size[0], iap.DiscreteUniform)', 'isinstance(aug.kernel_size[1], iap.DiscreteUniform)', 'isinstance(params[0], iap.Binomial)', 'isinstance(params[0].p, iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'isinstance(aug.p_replace, iap.Deterministic)', 'isinstance(aug.p_replace, iap.Binomial)', 'isinstance(params[1], iap.Binomial)', 'isinstance(aug.points_sampler.other_points_sampler.n_cols,', 'isinstance(ps.other_points_sampler.n_cols_frac, iap.Uniform)', 'isinstance(sampler.n_rows, iap.DiscreteUniform)', 'isinstance(sampler.n_rows_frac, iap.Uniform)', 'isinstance(sampler.n_points, iap.Deterministic)', 'isinstance(observed[i], iap.Uniform)', 'isinstance(observed[i].a, iap.Deterministic)', 'isinstance(observed[i].b, iap.Deterministic)', '0.0 - 1e-4 < observed[i].a.value < 0.0 + 1e-4', '1.0 - 1e-4 < observed[i].b.value < 1.0 + 1e-4', 'isinstance(observed[i], iap.Deterministic)', 'isinstance(observed[i], iap.Clip)', 'isinstance(observed[i].other_param, iap.Normal)', 'isinstance(observed[i].other_param.loc, iap.Deterministic)', 'isinstance(observed[i].other_param.scale, iap.Deterministic)', '0.5 - 1e-4 < observed[i].other_param.loc.value < 0.5 + 1e-4', '0.35/2 - 1e-4 < observed[i].other_param.scale.value < 0.35/2 + 1e-4', 'isinstance(observed[0], iap.Deterministic)', 'isinstance(observed[1], iap.Deterministic)', 'isinstance(observed, iap.Poisson)', 'isinstance(observed[0], iap.Deterministic)', 'isinstance(observed[1], iap.Deterministic)', 'isinstance(observed[0], iap.Poisson)', 'isinstance(observed[0].lam, iap.Deterministic)', 'isinstance(observed[1], iap.Poisson)', 'isinstance(observed[1].lam, iap.Deterministic)', 'isinstance(observed[0], iap.Deterministic)', 'isinstance(observed[1], iap.Poisson)', 'isinstance(observed[1].lam, iap.Deterministic)', 'isinstance(params[0], iap.Deterministic)', 'isinstance(params[1], iap.Deterministic)', 'isinstance(aug.pad_mode, iap.Choice)', 'isinstance(aug.pad_mode, iap.Choice)', 'isinstance(aug.pad_cval, iap.Choice)', 'isinstance(aug.lightness_threshold, iap.Choice)', 'isinstance(aug.lightness_multiplier, iap.Choice)', 'len(batches_aug1) == 60', 'len(batches_aug2) == 60', 'len(batches_aug3) == 60', 'isinstance(param, iap.Choice)', 'isinstance(param, iap.Deterministic)', 'isinstance(param, iap.Deterministic)', 'isinstance(param, iap.Choice)', 'isinstance(param, iap.Choice)', 'isinstance(p, iap.Binomial)', 'isinstance(p.p, iap.Deterministic)']",[],[],[],[],[],[],[],[],[],[],[],[]
2605,Alexander Jung,kontakt@ajung.name,2020-05-17 14:12:30+02:00,7d2bc502c013768bcc6a0b34a8c90f38cd20de87,https://github.com/aleju/imgaug/commit/7d2bc502c013768bcc6a0b34a8c90f38cd20de87,"Fix travis build for python 3.6 failing (#664)

This fixes a build error in python 3.6 in travis.",1,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2606,Alexander Jung,kontakt@ajung.name,2020-05-21 21:46:07+02:00,6f917acb3c2b96ed9ec1f07cda9a6f6432dc8a1a,https://github.com/aleju/imgaug/commit/6f917acb3c2b96ed9ec1f07cda9a6f6432dc8a1a,"Improve CI/CD testing via github actions (#670)

This patch improves the CI/CD environment by adding
github actions. The library is now automatically tested
in Ubuntu with python 2.7, 3.5, 3.6, 3.7 and 3.8,
as well as MacOS with the same python versions.
(Previously, only Ubuntu with python <=3.7 was
automatically tested in the CI/CD chain).

Additionally, the CI/CD pipeline now also generates
wheel files (sdist, bdist) for every patch merged
into master.",5,False,False,False,False,False,True,True,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2607,Alexander Jung,kontakt@ajung.name,2020-05-22 14:19:13+02:00,680301e9ae727806008393c360a57052ec6ab584,https://github.com/aleju/imgaug/commit/680301e9ae727806008393c360a57052ec6ab584,"Fix multicore aug error on Mac + python 3.7 (#673)

This patch fixes an error on MacOS in python 3.7 that could appear
when using multicore augmentation. The library will now
use `spawn` mode in that situation. The error can thus
still appear when using a custom multiprocessing
implementation. It is recommended to use python 3.8 on
Mac.",3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],"['IS_SUPPORTING_CONTEXTS,']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2608,Alexander Jung,kontakt@ajung.name,2020-05-22 14:56:09+02:00,17b9407d261d701751626f9333fd0ebb5301bdcf,https://github.com/aleju/imgaug/commit/17b9407d261d701751626f9333fd0ebb5301bdcf,"Add timeouts to ci/cd jobs (#676)

This patch adds timeouts to all github action jobs.
This prevents them from running essentially forever (up
until the default maximum of 6 hours) upon endless loops.",3,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2609,Alexander Jung,kontakt@ajung.name,2020-05-22 14:57:58+02:00,b14b1f436cc916a78e2a14bdf1fdd4b1ddce934c,https://github.com/aleju/imgaug/commit/b14b1f436cc916a78e2a14bdf1fdd4b1ddce934c,"Extend printed system infos in github jobs (#674)

This patch extends the information printed by
the CI/CD pipeline's github jobs.",3,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2610,Alexander Jung,kontakt@ajung.name,2020-05-22 15:01:19+02:00,fb7ba71776115e75d06229de4d0d175ff8a63a82,https://github.com/aleju/imgaug/commit/fb7ba71776115e75d06229de4d0d175ff8a63a82,"Remove leftover print statement (#665)

This patch removes a print() statement that was left over
from debugging work.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2611,Alexander Jung,kontakt@ajung.name,2020-05-22 16:42:26+02:00,6421033c98e568ec9d6115f9b898bba5a5a8d76c,https://github.com/aleju/imgaug/commit/6421033c98e568ec9d6115f9b898bba5a5a8d76c,"Fix deprecation warning in Superpixels (#672)

This patch fixes an skimage deprecation warning produced
in Superpixels starting with skimage 1.17.",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2612,Alexander Jung,kontakt@ajung.name,2020-05-22 16:43:42+02:00,b5c563a90f07c86b6939aad71e9506020f8b4eb6,https://github.com/aleju/imgaug/commit/b5c563a90f07c86b6939aad71e9506020f8b4eb6,"Improve performance of dtype checks (#663)

This patch improves the performance of dtype checks
throughout the library. The new method verifies input
arrays around 10x to 100x faster than the previous one.

Add functions:
* `imgaug.dtypes.gate_dtypes_strs()`
* `imgaug.dtypes.allow_only_uint8()`

Add decorators:
* `imgaug.testutils.ensure_deprecation_warning`

Deprecate functions:
* `imgaug.dtypes.gate_dtypes()`",24,False,True,True,True,False,True,True,True,False,False,False,False,False,False,False,[],2,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class Test_gate_dtypes_strs(unittest.TestCase):', 'class Test__gate_dtypes(unittest.TestCase):']","[('Raises', '(ValueError) as context:'), ('Raises', '(KeyError):'), ('Raises', '(KeyError):'), ('Raises', '(AssertionError) as context:'), ('Raises', '(ValueError) as context:'), ('Raises', '(ValueError) as context:'), ('Raises', '(ValueError) as context:'), ('Raises', '(ValueError) as context:'), ('Raises', '(ValueError) as context:'), ('Raises', '(ValueError) as context:')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(caught_warnings) == 1, (', '(', 'in str(context.exception)', '(', 'in str(context.exception)', 'in str(context.exception)', 'in str(context.exception)', 'in str(context.exception)', 'in str(context.exception)', 'in str(context.exception)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2613,Alexander Jung,kontakt@ajung.name,2020-05-22 18:45:23+02:00,8d870fe71460daa6670a052ef15b1569acddd9bf,https://github.com/aleju/imgaug/commit/8d870fe71460daa6670a052ef15b1569acddd9bf,"Remove f128 requirement from tests (#677)

This patch modifies all tests so that they can be run on
systems that do not support the dtype float128, such
as Windows.",11,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[''],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['image.flat[0] <= high_res_dt(min_value) + 1.0', 'image.flat[4] >= high_res_dt(max_value) - 1.0', 'image_min_aug.dtype == np.dtype(dtype)', 'image_center_aug.dtype == np.dtype(dtype)', 'image_max_aug.dtype == np.dtype(dtype)', 'np.all(image_min_aug == image_min)', 'np.all(image_max_aug == image_max)', 'np.array_equal(image_min_aug, image_min)', 'np.array_equal(image_center_aug, image_center)', 'np.array_equal(image_max_aug, image_max)', 'np.allclose(image_min_aug, image_min)', 'np.allclose(image_center_aug, image_center)', 'np.allclose(image_max_aug, image_max)', 'image_min_aug.dtype == np.dtype(dtype)', 'image_center_aug.dtype == np.dtype(dtype)', 'image_max_aug.dtype == np.dtype(dtype)', 'np.all(image_min_aug == image_max)', 'np.all(image_max_aug == image_min)', 'np.array_equal(image_min_aug, image_max)', 'np.allclose(image_center_aug, image_center, atol=1.0+1e-4, rtol=0)', 'np.array_equal(image_max_aug, image_min)', 'np.allclose(image_min_aug, image_max)', 'np.allclose(image_center_aug, image_center)', 'np.allclose(image_max_aug, image_min)', 'not np.all(_isclose(image_aug, value))', 'not np.all(_isclose(image_aug, value))', 'np.any(_isclose(image_aug[~mask], value))', '_allclose(image_aug[2, 2], high_res_dt(value))', '_allclose(arr_pooled, high_res_dt(value))', '_allclose(arr_pooled, high_res_dt(value))']",[],[],[],[],[],[],[],[],[],[],[],[],"['image.flat[0] <= np.float128(min_value) + 1.0', 'image.flat[4] >= np.float128(max_value) - 1.0', 'image_min_aug.dtype == np.dtype(dtype)', 'image_center_aug.dtype == np.dtype(dtype)', 'image_max_aug.dtype == np.dtype(dtype)', 'np.all(image_min_aug == image_min)', 'np.all(image_max_aug == image_max)', 'np.array_equal(image_min_aug, image_min)', 'np.array_equal(image_center_aug, image_center)', 'np.array_equal(image_max_aug, image_max)', 'np.allclose(image_min_aug, image_min)', 'np.allclose(image_center_aug, image_center)', 'np.allclose(image_max_aug, image_max)', 'image_min_aug.dtype == np.dtype(dtype)', 'image_center_aug.dtype == np.dtype(dtype)', 'image_max_aug.dtype == np.dtype(dtype)', 'np.all(image_min_aug == image_max)', 'np.all(image_max_aug == image_min)', 'np.array_equal(image_min_aug, image_max)', 'np.allclose(image_center_aug, image_center, atol=1.0+1e-4, rtol=0)', 'np.array_equal(image_max_aug, image_min)', 'np.allclose(image_min_aug, image_max)', 'np.allclose(image_center_aug, image_center)', 'np.allclose(image_max_aug, image_min)', 'not np.all(_isclose(image_aug, np.float128(value)))', 'not np.all(_isclose(image_aug, np.float128(value)))', 'np.any(_isclose(image_aug[~mask],', '_allclose(image_aug[2, 2], np.float128(value))', '_allclose(arr_pooled, np.float128(value))', '_allclose(arr_pooled, np.float128(value))']",[],[],[],[],[],[],[],[],[],[],[],[]
2614,aleju,kontakt@ajung.name,2020-05-22 18:48:56+02:00,1194b33d7e45e3905453200094106a4aa6d5d877,https://github.com/aleju/imgaug/commit/1194b33d7e45e3905453200094106a4aa6d5d877,"Activate CI/CD testing of windows

This patch changes all github action jobs to also test the
library in Windows (and build the corresponding wheels).",4,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2615,aleju,kontakt@ajung.name,2020-05-22 19:07:46+02:00,007ff3c8719f2c87862936e47f8311353c803a02,https://github.com/aleju/imgaug/commit/007ff3c8719f2c87862936e47f8311353c803a02,"Fix bad float128 checks crashing

This patch fixes padding and alpha blending failing on
systems that do not support float128 due to dtype
comparisons that unexpectedly equate to True.",4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2616,aleju,kontakt@ajung.name,2020-05-22 19:25:46+02:00,1dc4e60641fd07bfdf504843b16ac443b4617857,https://github.com/aleju/imgaug/commit/1dc4e60641fd07bfdf504843b16ac443b4617857,Fix two tests failing in Windows,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['arr_pad.dtype.name == dtype.name', 'arr_pad.dtype.name == dtype.name', 'arr_pad.dtype.name == dtype.name', 'arr_pad.dtype.name == dtype.name', 'arr_pad.dtype.name == dtype.name', 'arr_pad.dtype.name == dtype.name', 'arr_pad.dtype.name == dtype.name', 'arr_pad.dtype.name == dtype.name']",[],[],[],[],[],[],[],[],[],[],[],[],"['arr_pad.dtype.type == dtype', 'arr_pad.dtype.type == dtype', 'arr_pad.dtype.type == dtype', 'arr_pad.dtype.type == dtype', 'arr_pad.dtype.type == dtype', 'arr_pad.dtype.type == dtype', 'arr_pad.dtype.type == dtype', 'arr_pad.dtype.type == dtype']",[],[],[],[],[],[],[],[],[],[],[],[]
2617,aleju,kontakt@ajung.name,2020-05-22 21:11:49+02:00,d84997926d1cb1b0a1de8fc7f17abfb413c4433c,https://github.com/aleju/imgaug/commit/d84997926d1cb1b0a1de8fc7f17abfb413c4433c,"Limit alpha blend img dtypes in Windows

This patch marks the dtypes uint64, int64 and float64
as 'only supported to a limited degree' in blend_alpha().
The dtypes require float128 for accurate output
computations, which is not supported in Windows.

Additionally, a better error message is provided if one
of these dtypes is used and float128 is not supported.

Tests are adjusted accordingly.",4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2618,aleju,kontakt@ajung.name,2020-05-22 21:30:37+02:00,2e4a4934f2de73b565b46566a2524dd07f4b85b8,https://github.com/aleju/imgaug/commit/2e4a4934f2de73b565b46566a2524dd07f4b85b8,"Fix permission denied error in Windows

This patch fixes a 'permission denied' error when
calling 'StochasticParameter.draw_distribution_graph()'
in Windows. The bug was caused by a missing 'mode'
argument for a named temporary file.",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2619,Alexander Jung,kontakt@ajung.name,2020-05-23 11:52:47+02:00,f57820cdbe916150b30140d2da7e6af8ac99be58,https://github.com/aleju/imgaug/commit/f57820cdbe916150b30140d2da7e6af8ac99be58,"Fix prefetchers wrapping prefetchers (#666)

This patch fixes AutoPrefetcher wrapping other instances of
AutoPrefetcher, leading sometimes to endlessly growing
cascades of prefetchers.",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['nb_skipped <= 3'],[],[],[],[],[],[],[],[],[],[],[],[],['nb_skipped <= 2'],[],[],[],[],[],[],[],[],[],[],[],[]
2620,Alexander Jung,kontakt@ajung.name,2020-05-25 21:47:03+02:00,014e23111b445c6e1a5aeacedfc792c96493d52f,https://github.com/aleju/imgaug/commit/014e23111b445c6e1a5aeacedfc792c96493d52f,"Fix Affine always casting cvals to int (#680)

This patch fixes `Affine` casting float cvals to
int, even when the image has a float dtype,
making it impossible to properly use cvals for
images with value range `[0.0, 1.0]`.",3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['np.allclose(image_aug, 0.25)', 'np.allclose(image_aug, 2)  # cval is casted to int, no rounding']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2621,Alexander Jung,kontakt@ajung.name,2020-05-31 11:40:01+02:00,fda7bfbf4a15e2a1e72685e45a738e6c14e46412,https://github.com/aleju/imgaug/commit/fda7bfbf4a15e2a1e72685e45a738e6c14e46412,"Improve performance of glass blur (#683)

This patch improves the performance of
`imgaug.augmenters.imgcorruptplike.apply_glass_blur()`
and the corresponding augmenter. The improvement is
around 14x to 45x, depending on the image size
(larger images have more speedup).

Added dependencies:
* `numba`",4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2622,Alexander Jung,kontakt@ajung.name,2020-06-01 15:38:25+02:00,cf8833b9b9b2f49f3fe1d4cbad93100c2e0b6efd,https://github.com/aleju/imgaug/commit/cf8833b9b9b2f49f3fe1d4cbad93100c2e0b6efd,"Incorporate numba into segment replacement (#684)

This patch makes use of numba in segment
replacement used in Superpixels and Voronoi.
This leads to a decent performance improvement,
especially for smaller images.",6,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['use_np_replace == '],[],[],[],[],[],[],[],[],[],[],[],[]
2623,Alexander Jung,kontakt@ajung.name,2020-06-01 16:34:10+02:00,6c73eaa30f635e48ae177ec2df8c084900187b4d,https://github.com/aleju/imgaug/commit/6c73eaa30f635e48ae177ec2df8c084900187b4d,"Move example data functions to new module (#606)

This patch moves the example data functions from `imgaug.imgaug` to
the new module `imgaug.data`.

Add Modules:
* `imgaug.data`

Add Functions:
* `imgaug.data.quokka()`
* `imgaug.data.quokka_square()`
* `imgaug.data.quokka_heatmap()`
* `imgaug.data.quokka_segmentation_map()`
* `imgaug.data.quokka_keypoints()`
* `imgaug.data.quokka_bounding_boxes()`
* `imgaug.data.quokka_polygons()`

Deprecated Functions:
* `imgaug.imgaug.quokka()`.
  Use `imgaug.data.quokka()` instead.
* `imgaug.imgaug.quokka_square()`.
  Use `imgaug.data.quokka_square()` instead.
* `imgaug.imgaug.quokka_heatmap()`.
  Use `imgaug.data.quokka_heatmap()` instead.
* `imgaug.imgaug.quokka_segmentation_map()`.
  Use `imgaug.data.quokka_segmentation_map()` instead.
* `imgaug.imgaug.quokka_keypoints()`.
  Use `imgaug.data.quokka_keypoints()` instead.
* `imgaug.imgaug.quokka_bounding_boxes()`.
  Use `imgaug.data.quokka_bounding_boxes()` instead.
* `imgaug.imgaug.quokka_polygons()`.
  Use `imgaug.data.quokka_polygons()` instead.

Removed Constants:
* [rarely breaking] `imgaug.imgaug.FILE_DIR`
* [rarely breaking] `imgaug.imgaug.QUOKKA_FP`
* [rarely breaking] `imgaug.imgaug.QUOKKA_ANNOTATIONS_FP`
* [rarely breaking] `imgaug.imgaug.QUOKKA_DEPTH_MAP_HALFRES_FP`",35,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],9,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,0,"['class Test__quokka_normalize_extract(unittest.TestCase):', 'class Test__compute_resized_shape(unittest.TestCase):', 'class Test_quokka(unittest.TestCase):', 'class Test_quokka_square(unittest.TestCase):', 'class Test_quokka_heatmap(unittest.TestCase):', 'class Test_quokka_segmentation_map(unittest.TestCase):', 'class Test_quokka_keypoints(unittest.TestCase):', 'class Test_quokka_bounding_boxes(unittest.TestCase):', 'class TestDeprecatedDataFunctions(unittest.TestCase):']",[],[],[],[],[],[],[],[],[' unittest.mock '],"['import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['isinstance(observed, ia.BoundingBox)', 'observed.x1 == 0', 'observed.y1 == 0', 'observed.x2 == 643', 'observed.y2 == 643', 'isinstance(observed, ia.BoundingBox)', 'observed.x1 == 1', 'observed.y1 == 1', 'observed.x2 == 644', 'observed.y2 == 642', 'isinstance(observed, ia.BoundingBox)', 'observed.x1 == 1', 'observed.y1 == 1', 'observed.x2 == 644', 'observed.y2 == 642', 'isinstance(observed, ia.BoundingBox)', 'observed.x1 == 1', 'observed.y1 == 1', 'observed.x2 == 644', 'observed.y2 == 642', 'in str(exc)', 'got_exception', 'observed == (20, 30, 3)', 'observed == (20, 30, 3)', 'observed == (20, 45, 3)', 'observed == (20, 25, 3)', 'observed == (15, 34, 3)', 'observed == from_shape', 'observed == (20, 15, 3)', 'observed == (10, 25, 3)', 'observed == (20, 20, 3)', 'observed == (20, 30, 3)', 'observed == to_shape', 'observed == to_shape', 'observed == (20, 30, 3)', 'img.shape == (643, 960, 3)', 'np.allclose(', 'img.shape == (643, 643, 3)', 'np.allclose(', 'img.shape == (642, 959, 3)', 'np.allclose(', 'img.shape == (643, 643, 3)', 'np.allclose(', 'hm.shape == (643, 960, 3)', 'hm.arr_0to1.shape == (643, 960, 1)', 'np.allclose(', 'hm.shape == (643, 643, 3)', 'hm.arr_0to1.shape == (643, 643, 1)', 'np.allclose(', 'hm.shape == (642, 959, 3)', 'hm.arr_0to1.shape == (642, 959, 1)', 'np.allclose(', 'segmap.shape == (643, 960, 3)', 'segmap.arr.shape == (643, 960, 1)', 'np.allclose(np.average(segmap.arr), 0.3016427, rtol=0, atol=1e-3)', 'segmap.shape == (643, 643, 3)', 'segmap.arr.shape == (643, 643, 1)', 'np.allclose(np.average(segmap.arr), 0.450353, rtol=0, atol=1e-3)', 'segmap.shape == (642, 959, 3)', 'segmap.arr.shape == (642, 959, 1)', 'np.allclose(np.average(segmap.arr), 0.30160266, rtol=0, atol=1e-3)', 'len(kpsoi.keypoints) > 0', 'np.allclose(kpsoi.keypoints[0].x, 163.0)', 'np.allclose(kpsoi.keypoints[0].y, 78.0)', 'kpsoi.shape == (643, 960, 3)', 'len(kpsoi.keypoints) == len(kpsoi_square.keypoints)', 'kpsoi_square.shape == (643, 643, 3)', 'np.average(', 'kpsoi_resized.shape == (642, 959, 3)', 'len(kpsoi.keypoints) == len(kpsoi_resized.keypoints)', 'd < 1.0', 'len(bbsoi.bounding_boxes) > 0', 'np.allclose(bb0.x1, 148.0)', 'np.allclose(bb0.y1, 50.0)', 'np.allclose(bb0.x2, 550.0)', 'np.allclose(bb0.y2, 642.0)', 'bbsoi.shape == (643, 960, 3)', 'len(bbsoi.bounding_boxes) == len(bbsoi_square.bounding_boxes)', 'bbsoi_square.shape == (643, 643, 3)', 'np.average(', 'bbsoi_resized.shape == (642, 959, 3)', 'len(bbsoi.bounding_boxes) == len(bbsoi_resized.bounding_boxes)', 'd < 1.0', 'ia.is_np_array(img)', 'ia.is_np_array(img)', 'isinstance(result, ia.HeatmapsOnImage)', 'isinstance(result, ia.SegmentationMapsOnImage)', 'isinstance(result, ia.KeypointsOnImage)', 'isinstance(result, ia.BoundingBoxesOnImage)']",[],[],[],[],[],[],[],[],[],[],[],[],"['isinstance(observed, ia.BoundingBox)', 'observed.x1 == 0', 'observed.y1 == 0', 'observed.x2 == 643', 'observed.y2 == 643', 'isinstance(observed, ia.BoundingBox)', 'observed.x1 == 1', 'observed.y1 == 1', 'observed.x2 == 644', 'observed.y2 == 642', 'isinstance(observed, ia.BoundingBox)', 'observed.x1 == 1', 'observed.y1 == 1', 'observed.x2 == 644', 'observed.y2 == 642', 'isinstance(observed, ia.BoundingBox)', 'observed.x1 == 1', 'observed.y1 == 1', 'observed.x2 == 644', 'observed.y2 == 642', 'in str(exc)', 'got_exception', 'observed == (20, 30, 3)', 'observed == (20, 30, 3)', 'observed == (20, 45, 3)', 'observed == (20, 25, 3)', 'observed == (15, 34, 3)', 'observed == from_shape', 'observed == (20, 15, 3)', 'observed == (10, 25, 3)', 'observed == (20, 20, 3)', 'observed == (20, 30, 3)', 'observed == to_shape', 'observed == to_shape', 'observed == (20, 30, 3)', 'img.shape == (643, 960, 3)', 'np.allclose(', 'img.shape == (643, 643, 3)', 'np.allclose(', 'img.shape == (642, 959, 3)', 'np.allclose(', 'img.shape == (643, 643, 3)', 'np.allclose(', 'hm.shape == (643, 960, 3)', 'hm.arr_0to1.shape == (643, 960, 1)', 'np.allclose(np.average(hm.arr_0to1), 0.57618505, rtol=0, atol=1e-3)', 'hm.shape == (643, 643, 3)', 'hm.arr_0to1.shape == (643, 643, 1)', 'np.allclose(np.average(hm.arr_0to1), 0.48026952, rtol=0, atol=1e-3)', 'hm.shape == (642, 959, 3)', 'hm.arr_0to1.shape == (642, 959, 1)', 'np.allclose(np.average(hm.arr_0to1), 0.5762454, rtol=0, atol=1e-3)', 'segmap.shape == (643, 960, 3)', 'segmap.arr.shape == (643, 960, 1)', 'np.allclose(np.average(segmap.arr), 0.3016427, rtol=0, atol=1e-3)', 'segmap.shape == (643, 643, 3)', 'segmap.arr.shape == (643, 643, 1)', 'np.allclose(np.average(segmap.arr), 0.450353, rtol=0, atol=1e-3)', 'segmap.shape == (642, 959, 3)', 'segmap.arr.shape == (642, 959, 1)', 'np.allclose(np.average(segmap.arr), 0.30160266, rtol=0, atol=1e-3)', 'len(kpsoi.keypoints) > 0', 'np.allclose(kpsoi.keypoints[0].x, 163.0)', 'np.allclose(kpsoi.keypoints[0].y, 78.0)', 'kpsoi.shape == (643, 960, 3)', 'len(kpsoi.keypoints) == len(kpsoi_square.keypoints)', 'kpsoi_square.shape == (643, 643, 3)', 'np.average(np.abs(patch.astype(np.float32) - patch_square.astype(np.float32))) < 1.0', 'kpsoi_resized.shape == (642, 959, 3)', 'len(kpsoi.keypoints) == len(kpsoi_resized.keypoints)', 'd < 1.0', 'len(bbsoi.bounding_boxes) > 0', 'np.allclose(bb0.x1, 148.0)', 'np.allclose(bb0.y1, 50.0)', 'np.allclose(bb0.x2, 550.0)', 'np.allclose(bb0.y2, 642.0)', 'bbsoi.shape == (643, 960, 3)', 'len(bbsoi.bounding_boxes) == len(bbsoi_square.bounding_boxes)', 'bbsoi_square.shape == (643, 643, 3)', 'np.average(np.abs(patch.astype(np.float32) - patch_square.astype(np.float32))) < 1.0', 'bbsoi_resized.shape == (642, 959, 3)', 'len(bbsoi.bounding_boxes) == len(bbsoi_resized.bounding_boxes)', 'd < 1.0']",[],[],[],[],[],[],[],[],[],[],[],[]
2624,Alexander Jung,kontakt@ajung.name,2020-06-01 16:58:26+02:00,0101108d4fed06bc5056c4a03e2bcb0216dac326,https://github.com/aleju/imgaug/commit/0101108d4fed06bc5056c4a03e2bcb0216dac326,"Fix Affine deprecation warning (#685)

This patch fixes a deprecation warning in
`Affine` that would be caused when providing
boolean images and `order != 0`.",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
