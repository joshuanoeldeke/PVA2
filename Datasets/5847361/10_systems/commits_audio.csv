commit_index,author_name,author_email,date,commit_hash,commit_link,commit_message,files_changed,are_we_interested,has_test_file,unittest_in_code,unittest_in_added_diffs,unittest_in_removed_diffs,pytest_in_code,pytest_in_added_diffs,pytest_in_removed_diffs,Mig: assert,Mig: fixture,Mig: import,Mig: skip,Mig: failure,Mig: testcase,Mig: add Param,tags,u_added_count_testcase_subclass,u_added_count_self_assert,u_added_count_setup,u_added_count_setupClass,u_added_count_teardown,u_added_count_teardownClass,u_added_count_unittest_skip,u_added_count_unittest_self_skip,u_added_count_unittest_expected_failure,u_added_count_unittest_mock_pattern,u_added_count_import_unittest,u_removed_count_testcase_subclass,u_removed_count_self_assert,u_removed_count_setup,u_removed_count_setupClass,u_removed_count_teardown,u_removed_count_teardownClass,u_removed_count_unittest_skip,u_removed_count_unittest_self_skip,u_removed_count_unittest_expected_failure,u_removed_count_unittest_mock_pattern,u_removed_count_import_unittest,p_added_count_native_assert,p_added_count_pytest_raises,p_added_count_simple_skip,p_added_count_mark_skip,p_added_count_pytest_expected_failure,p_added_count_fixture,p_added_count_usefixtures,p_added_count_parametrize,p_added_count_generic_mark,p_added_count_generic_pytest,p_added_count_monkeypatch,p_added_count_pytest_mock,p_added_count_import_pytest,p_removed_count_native_assert,p_removed_count_pytest_raises,p_removed_count_simple_skip,p_removed_count_mark_skip,p_removed_count_pytest_expected_failure,p_removed_count_fixture,p_removed_count_usefixtures,p_removed_count_parametrize,p_removed_count_generic_mark,p_removed_count_generic_pytest,p_removed_count_monkeypatch,p_removed_count_pytest_mock,p_removed_count_import_pytest,u_added_matches_testcase_subclass,u_added_matches_self_assert,u_added_matches_setup,u_added_matches_setupClass,u_added_matches_teardown,u_added_matches_teardownClass,u_added_matches_unittest_skip,u_added_matches_unittest_self_skip,u_added_matches_unittest_expected_failure,u_added_matches_unittest_mock_pattern,u_added_matches_import_unittest,u_removed_matches_testcase_subclass,u_removed_matches_self_assert,u_removed_matches_setup,u_removed_matches_setupClass,u_removed_matches_teardown,u_removed_matches_teardownClass,u_removed_matches_unittest_skip,u_removed_matches_unittest_self_skip,u_removed_matches_unittest_expected_failure,u_removed_matches_unittest_mock_pattern,u_removed_matches_import_unittest,p_added_matches_native_assert,p_added_matches_pytest_raises,p_added_matches_simple_skip,p_added_matches_mark_skip,p_added_matches_pytest_expected_failure,p_added_matches_fixture,p_added_matches_usefixtures,p_added_matches_parametrize,p_added_matches_generic_mark,p_added_matches_generic_pytest,p_added_matches_monkeypatch,p_added_matches_pytest_mock,p_added_matches_import_pytest,p_removed_matches_native_assert,p_removed_matches_pytest_raises,p_removed_matches_simple_skip,p_removed_matches_mark_skip,p_removed_matches_pytest_expected_failure,p_removed_matches_fixture,p_removed_matches_usefixtures,p_removed_matches_parametrize,p_removed_matches_generic_mark,p_removed_matches_generic_pytest,p_removed_matches_monkeypatch,p_removed_matches_pytest_mock,p_removed_matches_import_pytest
0,Soumith Chintala,soumith@gmail.com,2017-05-04 20:37:43-04:00,094651bd7ec5443c8ef7fe32778c06b788af4192,https://github.com/pytorch/audio/commit/094651bd7ec5443c8ef7fe32778c06b788af4192,first commit,10,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
1,Soumith Chintala,soumith@gmail.com,2017-05-04 20:39:11-04:00,15d772fe8bda5461aa45cc5f05588590f31a9a85,https://github.com/pytorch/audio/commit/15d772fe8bda5461aa45cc5f05588590f31a9a85,Create LICENSE,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
2,Soumith Chintala,soumith@gmail.com,2017-05-04 21:25:55-04:00,3510919632242d58f4be14dc9107252b175eed59,https://github.com/pytorch/audio/commit/3510919632242d58f4be14dc9107252b175eed59,Update README.md,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
3,SeanNaren,seannaren@hotmail.com,2017-05-27 13:15:40+01:00,97623fc164213edc894eecf069fbe1223ecc77ed,https://github.com/pytorch/audio/commit/97623fc164213edc894eecf069fbe1223ecc77ed,Added ability to save tensors,5,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
4,SeanNaren,seannaren@hotmail.com,2017-05-27 15:43:12+01:00,d02dff76c1e8fcfcff277a4ea0a65f9c8259605e,https://github.com/pytorch/audio/commit/d02dff76c1e8fcfcff277a4ea0a65f9c8259605e,Refactors for better error checking/case checks,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
5,SeanNaren,seannaren@hotmail.com,2017-05-27 15:58:13+01:00,1fdb6eae3aae10d0a823c9710c23d60d77d960a1,https://github.com/pytorch/audio/commit/1fdb6eae3aae10d0a823c9710c23d60d77d960a1,Fixed space indent,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
6,David Pollack,david@da3.net,2017-06-12 18:08:34+02:00,f80d6e37386122da2cb3983afad8a5a229571814,https://github.com/pytorch/audio/commit/f80d6e37386122da2cb3983afad8a5a229571814,bytes function requires type,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
7,SeanNaren,seannaren@hotmail.com,2017-06-21 13:34:28+01:00,3ed8a594f896ff75cd7040374d4bc3dfbd506b3b,https://github.com/pytorch/audio/commit/3ed8a594f896ff75cd7040374d4bc3dfbd506b3b,fix load str for 2.7 compat,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
8,Taras Sereda,taras.sereda@ring.com,2017-07-24 17:07:53+03:00,c975ee250801f5a418222ddace6b255069e3232a,https://github.com/pytorch/audio/commit/c975ee250801f5a418222ddace6b255069e3232a,"cffi dependency

ImportError: No module named 'cffi'. Necessary for both mac and linux installations",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
9,Adam Paszke,adam.paszke@gmail.com,2017-07-24 10:29:25-04:00,04f882c514cec8b940ff3fd83f5cd54a0bac2722,https://github.com/pytorch/audio/commit/04f882c514cec8b940ff3fd83f5cd54a0bac2722,Update README.md,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
10,David Pollack,david@da3.net,2017-07-31 15:43:25+02:00,c9b1797160d5642b873ab8a2006f7258e619c4bc,https://github.com/pytorch/audio/commit/c9b1797160d5642b873ab8a2006f7258e619c4bc,add gitignore,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
11,David Pollack,david@da3.net,2017-08-06 16:26:39+02:00,3433b9b69e1858becbe7309faaf198ec26b0d33f,https://github.com/pytorch/audio/commit/3433b9b69e1858becbe7309faaf198ec26b0d33f,"basic transforms

vctk dataset

add label processing

added tests

chunk dataset

simple caching scheme

caching fixed

vctk downsample

yesno dataset",10,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,8,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class Tester(unittest.TestCase):'],"[('True', '(result.min() >= -1. and result.max() <= 1.,'), ('True', '((result.min() == -1. or result.max() == 1.) and'), ('True', '(result.size(0) == length_new,'), ('True', '(result.size(0) == length_new,'), ('True', '(audio_Stereo.size(1) == 2)'), ('True', '(result.size(1) == 1)'), ('True', '(np.abs([result.min(), result.max()]).max() == 1.)'), ('True', '(result.size(0) == length_new)')]",[],[],[],[],[],[],[],[],['import unittest'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
12,David Pollack,david@da3.net,2017-08-18 13:24:56+02:00,ff47955cfb832263dc45d8b259f8e15d7e274f17,https://github.com/pytorch/audio/commit/ff47955cfb832263dc45d8b259f8e15d7e274f17,change to downsample in VCTK,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
13,David Pollack,david@da3.net,2017-08-19 15:12:48+02:00,740c5a860a741d1507174a71fb6e51d6f65d9c41,https://github.com/pytorch/audio/commit/740c5a860a741d1507174a71fb6e51d6f65d9c41,"update save/load
.gitignore _ext/",3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,15,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class Test_LoadSave(unittest.TestCase):'],"[('Equal', '(sr, 44100)'), ('Equal', '(x.size(), (278756,2))'), ('True', '(x.min() >= -1.0)'), ('True', '(x.max() <= 1.0)'), ('Raises', '(OSError):'), ('Raises', '(OSError):'), ('True', '(os.path.isfile(new_filepath))'), ('True', '(os.path.isfile(new_filepath))'), ('True', '(os.path.isfile(new_filepath))'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('True', '(os.path.isfile(new_filepath))'), ('Raises', '(TypeError):'), ('True', '(os.path.isfile(new_filepath))'), ('Raises', '(OSError):')]",[],[],[],[],[],[],[],[],['import unittest'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
14,Soumith Chintala,soumith@gmail.com,2017-08-29 14:22:31-04:00,697f46210a3e477e7be0cbcc249c1188129c6b55,https://github.com/pytorch/audio/commit/697f46210a3e477e7be0cbcc249c1188129c6b55,fix setup.py metadata,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
15,David Pollack,david@da3.net,2017-09-03 11:41:54+02:00,5bbc2ee2fdaab1dd92379c84fbbea17be9d9abad,https://github.com/pytorch/audio/commit/5bbc2ee2fdaab1dd92379c84fbbea17be9d9abad,add MEL spectrograms with librosa and fixed a few tests.,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(os.path.isfile(sinewave_filepath))'), ('True', '(result.size()[::-1] == audio.size())'), ('True', '(len(audio.size()) == 2)'), ('True', '(len(result.size()) == 3)'), ('True', '(len(result.size()) == 3)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
16,David Pollack,david@da3.net,2017-09-15 00:19:21+02:00,38de2cb66b75f94a7679185c5f2ae4c33d85d506,https://github.com/pytorch/audio/commit/38de2cb66b75f94a7679185c5f2ae4c33d85d506,mu-law companding transform,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(sig.min() >= -1. and sig.max() <= 1.)'), ('True', '(sig_mu.min() >= 0. and sig.max() <= quantization_channels)'), ('True', '(sig_exp.min() >= -1. and sig_exp.max() <= 1.)'), ('True', '(sig.min() >= -1. and sig.max() <= 1.)'), ('True', '(sig_mu.min() >= 0. and sig.max() <= quantization_channels)'), ('True', '(sig_exp.min() >= -1. and sig_exp.max() <= 1.)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
17,Raffaele Sena,raff367@gmail.com,2017-10-09 18:15:56-07:00,20f34c6cc7105a14412186c9275d39edeeff4388,https://github.com/pytorch/audio/commit/20f34c6cc7105a14412186c9275d39edeeff4388,"Quick and dirty fix for ""bytes"" not available in python2",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
18,Raffaele Sena,raff367@gmail.com,2017-10-23 11:27:10-07:00,f010e165603c6934d7e1e66910a43e982531f663,https://github.com/pytorch/audio/commit/f010e165603c6934d7e1e66910a43e982531f663,A couple of places that are not completely python2 compatible (missing 'from __future__' import print_function,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
19,Soumith Chintala,soumith@gmail.com,2017-12-17 22:40:42-05:00,6e8045ea0eb11db9204883923e0f34c351403646,https://github.com/pytorch/audio/commit/6e8045ea0eb11db9204883923e0f34c351403646,add docstrings for save and load,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
20,Soumith Chintala,soumith@gmail.com,2017-12-17 22:48:19-05:00,e7eb0be27a01f564f462f42050c706fd88fb4a23,https://github.com/pytorch/audio/commit/e7eb0be27a01f564f462f42050c706fd88fb4a23,fix lint,7,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(x.size(), (278756, 2))')]",[],[],[],[],[],[],[],[],[],[],"[('Equal', '(x.size(), (278756,2))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
21,Soumith Chintala,soumith@gmail.com,2017-12-17 23:12:13-05:00,088d5674cb5ab0e8a4a52c49f7585d258ddb61fd,https://github.com/pytorch/audio/commit/088d5674cb5ab0e8a4a52c49f7585d258ddb61fd,improve README and add sphinx docs generator,13,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
22,Soumith Chintala,soumith@gmail.com,2017-12-17 23:16:10-05:00,9e7e5fda5289f7f68ce11f4d642e0bc15e5b8e6e,https://github.com/pytorch/audio/commit/9e7e5fda5289f7f68ce11f4d642e0bc15e5b8e6e,fix header,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
23,David Pollack,david@da3.net,2018-01-15 15:34:40+01:00,41390a8ca3426812e57619220fb60197eacc625c,https://github.com/pytorch/audio/commit/41390a8ca3426812e57619220fb60197eacc625c,mel spectrograms in pytorch (no longer req librosa),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,5,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(audio.dim() == 2)'), ('True', '(result.dim() == 3)'), ('True', '(result.dim() == 3)'), ('True', '(spectrogram_torch.dim() == 3)'), ('True', '(spectrogram_torch.max() <= 0.)')]",[],[],[],[],[],[],[],[],[],[],"[('True', '(len(audio.size()) == 2)'), ('True', '(len(result.size()) == 3)'), ('True', '(len(result.size()) == 3)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
24,Soumith Chintala,soumith@gmail.com,2018-01-23 00:16:07-05:00,03bb7dea94b4c3bf84e30f27fe612b5a2bc7a0af,https://github.com/pytorch/audio/commit/03bb7dea94b4c3bf84e30f27fe612b5a2bc7a0af,"Revert ""pytorch implementation of MEL spectrograms (no librosa req'd)""",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,3,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(len(audio.size()) == 2)'), ('True', '(len(result.size()) == 3)'), ('True', '(len(result.size()) == 3)')]",[],[],[],[],[],[],[],[],[],[],"[('True', '(audio.dim() == 2)'), ('True', '(result.dim() == 3)'), ('True', '(result.dim() == 3)'), ('True', '(spectrogram_torch.dim() == 3)'), ('True', '(spectrogram_torch.max() <= 0.)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
25,vishwakftw,cs15btech11043@iith.ac.in,2018-01-23 15:51:44+05:18,ac0c94be58300d66b7bb188a67515e80e0fbfff9,https://github.com/pytorch/audio/commit/ac0c94be58300d66b7bb188a67515e80e0fbfff9,Add __repr__ for transforms and tests,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
26,Peter Goldsborough,peter@goldsborough.me,2018-03-06 11:03:30-08:00,c844ac637e44fac0441dd958ae929e3657290c9a,https://github.com/pytorch/audio/commit/c844ac637e44fac0441dd958ae929e3657290c9a,Fixes after tensor/variable merge (#33),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
27,PG_LoLo,novgosh@gmail.com,2018-04-09 16:03:58+03:00,cedeaf340a9ae895512ca2cb16c26d7d6be94eca,https://github.com/pytorch/audio/commit/cedeaf340a9ae895512ca2cb16c26d7d6be94eca,VCTK dataset download fix,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
28,PG_LoLo,novgosh@gmail.com,2018-04-09 16:06:42+03:00,0fe0305a54d84161008d84492268d279279fb3bb,https://github.com/pytorch/audio/commit/0fe0305a54d84161008d84492268d279279fb3bb,YESNO dataset download fix,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
29,David Pollack,david@da3.net,2018-01-15 15:34:40+01:00,78be73b7372e2bdaf452e3b642e6059d0f3ad252,https://github.com/pytorch/audio/commit/78be73b7372e2bdaf452e3b642e6059d0f3ad252,mel spectrograms in pytorch (no longer req librosa),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,5,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(audio.dim() == 2)'), ('True', '(result.dim() == 3)'), ('True', '(result.dim() == 3)'), ('True', '(spectrogram_torch.dim() == 3)'), ('True', '(spectrogram_torch.max() <= 0.)')]",[],[],[],[],[],[],[],[],[],[],"[('True', '(len(audio.size()) == 2)'), ('True', '(len(result.size()) == 3)'), ('True', '(len(result.size()) == 3)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
30,Peter Goldsborough,psag@fb.com,2018-03-12 15:27:25-07:00,8a41ecdc1ba365fb9d51e12b8ab793bc2a3f67fa,https://github.com/pytorch/audio/commit/8a41ecdc1ba365fb9d51e12b8ab793bc2a3f67fa,Rewrote C code with C++ extensions,13,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Greater', '(x.sum(), 0)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
31,Peter Goldsborough,psag@fb.com,2018-03-12 16:36:41-07:00,cba11009e23a6b11fcf2c1a28a3f43de53d91251,https://github.com/pytorch/audio/commit/cba11009e23a6b11fcf2c1a28a3f43de53d91251,Added test to make sure loading and saving gives the same file,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(tensor.allclose(tensor2))'), ('Equal', '(sample_rate, sample_rate2)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
32,Peter Goldsborough,psag@fb.com,2018-03-12 21:24:45-07:00,c340a8d1684a71e655628c567d7f4f1bc3666b46,https://github.com/pytorch/audio/commit/c340a8d1684a71e655628c567d7f4f1bc3666b46,Conform to sox library a bit better,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
33,Peter Goldsborough,psag@fb.com,2018-03-12 21:33:17-07:00,2db284c41b484382ab71dc0054ae54c81959fe4e,https://github.com/pytorch/audio/commit/2db284c41b484382ab71dc0054ae54c81959fe4e,Nits,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
34,Soumith Chintala,soumith@gmail.com,2018-04-26 18:53:56-04:00,7236e3f4b97eaeb942f07d75501e9626e80e7f85,https://github.com/pytorch/audio/commit/7236e3f4b97eaeb942f07d75501e9626e80e7f85,"Revert ""Rewrote C code with C++ extensions"" (#39)

* Revert ""Nits""

This reverts commit 2db284c41b484382ab71dc0054ae54c81959fe4e.

* Revert ""Conform to sox library a bit better""

This reverts commit c340a8d1684a71e655628c567d7f4f1bc3666b46.

* Revert ""Added test to make sure loading and saving gives the same file""

This reverts commit cba11009e23a6b11fcf2c1a28a3f43de53d91251.

* Revert ""Rewrote C code with C++ extensions""

This reverts commit 8a41ecdc1ba365fb9d51e12b8ab793bc2a3f67fa.",13,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],"[('Greater', '(x.sum(), 0)'), ('True', '(tensor.allclose(tensor2))'), ('Equal', '(sample_rate, sample_rate2)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
35,Soumith Chintala,soumith@gmail.com,2018-04-26 19:07:32-04:00,5787787edcc82ce505a5d8869b5d09022b46503e,https://github.com/pytorch/audio/commit/5787787edcc82ce505a5d8869b5d09022b46503e,fixes for 0.4 (#40),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
36,Soumith Chintala,soumith@gmail.com,2018-05-02 07:34:22-07:00,af82e616a05bafbf27222c507b3d13e8ddbd019a,https://github.com/pytorch/audio/commit/af82e616a05bafbf27222c507b3d13e8ddbd019a,add torch >=0.4 as explicit dependency in setup.py,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
37,Edward Z. Yang,ezyang@mit.edu,2018-05-08 00:10:32-04:00,cfe3f29686673fecc5d4b05ab2ed1b9bca476950,https://github.com/pytorch/audio/commit/cfe3f29686673fecc5d4b05ab2ed1b9bca476950,"Bring back cpp_extension rewrite of torchaudio (#45)

* Revert ""Revert ""Rewrote C code with C++ extensions"" (#39)""

This reverts commit 7236e3f4b97eaeb942f07d75501e9626e80e7f85.

* Fix import error of C extension

Signed-off-by: Edward Z. Yang <ezyang@fb.com>",13,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Greater', '(x.sum(), 0)'), ('True', '(tensor.allclose(tensor2))'), ('Equal', '(sample_rate, sample_rate2)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
38,Soumith Chintala,soumith@gmail.com,2018-05-08 01:15:06-04:00,d5eadbdc28a751aba10b57cbad52f90dbbf64938,https://github.com/pytorch/audio/commit/d5eadbdc28a751aba10b57cbad52f90dbbf64938,"Revert ""Bring back cpp_extension rewrite of torchaudio (#45)"" (#46)

This reverts commit cfe3f29686673fecc5d4b05ab2ed1b9bca476950.",13,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],"[('Greater', '(x.sum(), 0)'), ('True', '(tensor.allclose(tensor2))'), ('Equal', '(sample_rate, sample_rate2)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
39,Peter Goldsborough,peter@goldsborough.me,2018-05-09 08:46:14-07:00,18c01bef0b65cc5b11799bda7b19f4856fdfeac3,https://github.com/pytorch/audio/commit/18c01bef0b65cc5b11799bda7b19f4856fdfeac3,Bring back C++ extensions again (#47),11,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Greater', '(x.sum(), 0)'), ('Equal', '(x.dtype, torch.float32)'), ('True', '(tensor.allclose(tensor2))'), ('Equal', '(sample_rate, sample_rate2)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
40,Tongzhou Wang,SsnL@users.noreply.github.com,2018-07-27 00:52:49-04:00,1bd3dbb913a1fc962d53e71820dc1686098aacd0,https://github.com/pytorch/audio/commit/1bd3dbb913a1fc962d53e71820dc1686098aacd0,update torch audio for new stft signature (#55),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
41,Soumith Chintala,soumith@gmail.com,2018-08-07 15:11:39-04:00,24bcf559bbe8f47bfd1efc1f87a22bf0bf650d28,https://github.com/pytorch/audio/commit/24bcf559bbe8f47bfd1efc1f87a22bf0bf650d28,Update README.md,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
42,David Pollack,sent@da3.net,2018-08-19 21:01:44+02:00,0b93ff06f7cfb22a27daa0d146d1b8cff6a20225,https://github.com/pytorch/audio/commit/0b93ff06f7cfb22a27daa0d146d1b8cff6a20225,torch.cos not implemented for LongTensor fix (#58),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
43,David Pollack,sent@da3.net,2018-08-21 00:40:05+02:00,7314b36dd5f4205826ff9570068b23cd405abd50,https://github.com/pytorch/audio/commit/7314b36dd5f4205826ff9570068b23cd405abd50,allow loading with offsets and number of samples and saving specified bit precisions (#59),4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(bp, 32)'), ('Equal', '(bp16, 16)'), ('Equal', '(x_sine_part.size(0), num_frames)'), ('Equal', '(l1_error, 0.)'), ('Equal', '(l1_error, 0.)'), ('Equal', '(x_2ch_part.size(0), num_frames)'), ('Equal', '(l1_error, 0.)'), ('Equal', '(x_ns.size(0), x_sine_full.size(0) - offset_ns)'), ('Raises', '(RuntimeError):'), ('Equal', '(info_load, info_expected)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
44,David Pollack,david@da3.net,2018-08-28 14:45:04+02:00,db0da559e43900785b0c1f2354f54defdde79a55,https://github.com/pytorch/audio/commit/db0da559e43900785b0c1f2354f54defdde79a55,sox effects test commit,9,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],3,55,0,0,0,0,0,0,0,0,3,0,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class Test_LoadSave(unittest.TestCase):', 'class Test_LoadSave(unittest.TestCase):', 'class Test_SoxEffects(unittest.TestCase):']","[('Equal', '(si.precision, 16)'), ('Equal', '(si32.precision, new_precision)'), ('Equal', '(sr, 44100)'), ('Equal', '(x.size(), (2, 278756))'), ('Equal', '(x.dtype, torch.float32)'), ('True', '(x.min() >= -1.0)'), ('True', '(x.max() <= 1.0)'), ('Raises', '(OSError):'), ('Raises', '(OSError):'), ('Equal', '(x_sine_part.size(1), num_frames)'), ('Equal', '(x_2ch_part.size(1), num_frames)'), ('Equal', '(x_ns.size(1), x_sine_full.size(1) - offset_ns)'), ('Equal', '(si.channels, channels)'), ('Equal', '(si.length, samples)'), ('Equal', '(si.rate, rate)'), ('Equal', '(ei.bits_per_sample, precision)'), ('True', '(x.size() == expected_size)'), ('Equal', '(sr, 44100)'), ('Equal', '(x.size(), (278756, 2))'), ('Greater', '(x.sum(), 0)'), ('Equal', '(x.dtype, torch.float32)'), ('True', '(x.min() >= -1.0)'), ('True', '(x.max() <= 1.0)'), ('Raises', '(OSError):'), ('Raises', '(OSError):'), ('True', '(os.path.isfile(new_filepath))'), ('True', '(os.path.isfile(new_filepath))'), ('True', '(os.path.isfile(new_filepath))'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('True', '(os.path.isfile(new_filepath))'), ('Raises', '(OSError):'), ('True', '(os.path.isfile(sinewave_filepath))'), ('Equal', '(si.precision, 32)'), ('Equal', '(si16.precision, 16)'), ('True', '(tensor.allclose(tensor2))'), ('Equal', '(sample_rate, sample_rate2)'), ('Equal', '(x_sine_part.size(0), num_frames)'), ('Equal', '(l1_error, 0.)'), ('Equal', '(l1_error, 0.)'), ('Equal', '(x_2ch_part.size(0), num_frames)'), ('Equal', '(l1_error, 0.)'), ('Equal', '(x_ns.size(0), x_sine_full.size(0) - offset_ns)'), ('Raises', '(RuntimeError):'), ('Equal', '(si.channels, channels)'), ('Equal', '(si.length, samples)'), ('Equal', '(si.rate, rate)'), ('Equal', '(ei.bits_per_sample, precision)'), ('Equal', '(sr, target_rate)'), ('Equal', '(x.size(0), target_channels)'), ('Equal', '(x.size(1), int((si.length / si.channels) / speed))'), ('Less', '(x.unique().size(0), 2**8)'), ('Equal', '(x.size(0), si_in.channels)'), ('Equal', '(sr, si_out.rate)'), ('Equal', '(x.numel(), si_in.length)')]",[],[],[],[],[],[],[],[],"['import unittest', 'import unittest', 'import unittest']",[],"[('Equal', '(sr, 44100)'), ('Equal', '(x.size(), (278756, 2))'), ('Greater', '(x.sum(), 0)'), ('Equal', '(x.dtype, torch.float32)'), ('True', '(x.min() >= -1.0)'), ('True', '(x.max() <= 1.0)'), ('Raises', '(OSError):'), ('Raises', '(OSError):'), ('True', '(os.path.isfile(new_filepath))'), ('Raises', '(TypeError):'), ('True', '(os.path.isfile(new_filepath))'), ('Equal', '(bp, 32)'), ('Equal', '(bp16, 16)'), ('Equal', '(x_sine_part.size(0), num_frames)'), ('Equal', '(x_2ch_part.size(0), num_frames)'), ('Equal', '(x_ns.size(0), x_sine_full.size(0) - offset_ns)'), ('Equal', '(info_load, info_expected)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
45,David Pollack,david@da3.net,2018-09-11 17:03:44+02:00,301e2e9802d29352cbc6c4824ef44614cb6bd0cb,https://github.com/pytorch/audio/commit/301e2e9802d29352cbc6c4824ef44614cb6bd0cb,sox effects and documentation,14,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],1,18,0,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class Test_SoxEffectsChain(unittest.TestCase):'],"[('True', '(x.min() <= -1.0)'), ('True', '(x.max() >= 1.0)'), ('True', '(x[:,offset:].allclose(x_offset))'), ('True', '(x.size(), (2, n))'), ('Equal', '(x.size(), (278756, 2))'), ('True', '(isinstance(x, torch.LongTensor))'), ('True', '(x.abs().max().item(), 1.)'), ('Less', '(x.abs().max().item(), 1.)'), ('True', '(x.abs().max().item(), 1.)'), ('Less', '(x.abs().max().item(), 1.)'), ('Equal', '(x.size(1), int((si.length / si.channels) / tempo))'), ('True', '(x.allclose(x_orig[:,offset_int:(offset_int+num_frames_int)], rtol=1e-4, atol=1e-4))'), ('Less', '(x.numel(), si.length)'), ('True', '(x_orig.allclose(x_rev[:, rev_idx], rtol=1e-5, atol=2e-5))'), ('True', '(x.size(1) == (si.length / si.channels) + 15000)'), ('Raises', '(LookupError):'), ('Raises', '(NotImplementedError):'), ('Raises', '(RuntimeError):')]",[],[],[],[],[],[],[],[],[],['class Test_SoxEffects(unittest.TestCase):'],"[('Equal', '(x.dtype, torch.float32)'), ('True', '(x.min() >= -1.0)'), ('True', '(x.max() <= 1.0)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
46,David Pollack,david@da3.net,2018-10-02 02:09:49+02:00,e95c8f5af41024257442358ee1f9f98b6301de2b,https://github.com/pytorch/audio/commit/e95c8f5af41024257442358ee1f9f98b6301de2b,"fixes for OSX, behavior still inconsistent",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],"[('Equal', '(x.size(0), si_in.channels)'), ('Equal', '(sr, si_out.rate)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
47,David Pollack,david@da3.net,2018-12-13 16:05:06+01:00,948b5a5c74fbfdeb6e071254e510624f4fcd208c,https://github.com/pytorch/audio/commit/948b5a5c74fbfdeb6e071254e510624f4fcd208c,fixed temp file effects bug for mac,3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Greater', '(x.size(1) * x.size(0), si_in.length)'), ('Equal', '(si_in.length, x.size(0) * x.size(1))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
48,David Pollack,david@da3.net,2018-12-13 16:14:51+01:00,a4df8caf7fc9e6f746c10b7fdf06542ef0d214b8,https://github.com/pytorch/audio/commit/a4df8caf7fc9e6f746c10b7fdf06542ef0d214b8,added a few more tests,1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(x.size(0), si_in.channels)'), ('GreaterEqual', '(x.size(1) * x.size(0), si_in.length)'), ('Equal', '(x.size(0), si_in.channels)')]",[],[],[],[],[],[],[],[],[],[],"[('Greater', '(x.size(1) * x.size(0), si_in.length)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
49,David Pollack,david@da3.net,2018-12-20 12:27:43+01:00,8647f9031fe3e77e1955e639ffe2b4f09fa1693f,https://github.com/pytorch/audio/commit/8647f9031fe3e77e1955e639ffe2b4f09fa1693f,modified tests for speed and tempo,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,5,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Less', '(x.unique().size(0), 2**8 + 1)'), ('AlmostEqual', '(x.size(1), math.ceil((si.length / si.channels) / tempo), delta=1)'), ('AlmostEqual', '(x.size(1), math.ceil((si.length / si.channels) / tempo), delta=1)'), ('AlmostEqual', '(x.size(1), math.ceil((si.length / si.channels) / speed), delta=1)'), ('AlmostEqual', '(x.size(1), math.ceil((si.length / si.channels) / speed), delta=1)')]",[],[],[],[],[],[],[],[],[],[],"[('Less', '(x.unique().size(0), 2**8)'), ('Equal', '(x.size(1), int((si.length / si.channels) / tempo))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
50,David Pollack,david@da3.net,2018-12-24 15:53:41+01:00,0e0d1e590e8cdae50d04a96617ea6601446f99fb,https://github.com/pytorch/audio/commit/0e0d1e590e8cdae50d04a96617ea6601446f99fb,docs update and fixes from pr comments,11,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],1,3,0,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class Test_DataLoader(unittest.TestCase):'],"[('True', '(result.min() >= -1. and result.max() <= 1.)'), ('Equal', '(result.size(0), length_new)'), ('Equal', '(result.size(0), length_new)')]",[],[],[],[],[],[],[],[],[],['class Test_LoadSave(unittest.TestCase):'],"[('True', '(result.min() >= -1. and result.max() <= 1.,'), ('True', '(result.size(0) == length_new,'), ('True', '(result.size(0) == length_new,')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
51,David Pollack,david@da3.net,2019-01-03 13:22:14+01:00,3bd4db86630b75bbbfb6c5c0a1a85603097bf9b2,https://github.com/pytorch/audio/commit/3bd4db86630b75bbbfb6c5c0a1a85603097bf9b2,refactoring and clearning up code,14,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,3,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(x[:, offset:].allclose(x_offset))'), ('True', '(x.allclose(x_orig[:, offset_int:(offset_int + num_frames_int)], rtol=1e-4, atol=1e-4))'), ('Equal', '(result.size(1), length_new)')]",[],[],[],[],[],[],[],[],[],[],"[('True', '(x[:,offset:].allclose(x_offset))'), ('True', '(x.allclose(x_orig[:,offset_int:(offset_int+num_frames_int)], rtol=1e-4, atol=1e-4))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
52,David Pollack,david@da3.net,2019-01-04 11:15:35+01:00,a8d6a41b8d8c2a3865f3018ad48d8b4c10aa900e,https://github.com/pytorch/audio/commit/a8d6a41b8d8c2a3865f3018ad48d8b4c10aa900e,optimization to MEL2 and fixes to filter bank conversion function,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,17,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(repr_test.__repr__())'), ('True', '(repr_test.__repr__())'), ('True', '(repr_test.__repr__())'), ('True', '(repr_test.__repr__())'), ('True', '(repr_test.__repr__())'), ('True', '(repr_test.__repr__())'), ('True', '(repr_test.__repr__())'), ('True', '(repr_test.__repr__())'), ('True', '(repr_test.__repr__())'), ('True', '(spectrogram_torch.le(0.).all())'), ('True', '(spectrogram_torch.ge(mel_transform.top_db).all())'), ('Equal', '(spectrogram_torch.size(-1), mel_transform.n_mels)'), ('True', '(spectrogram_stereo.dim() == 3)'), ('True', '(spectrogram_stereo.size(0) == 2)'), ('True', '(spectrogram_stereo.le(0.).all())'), ('True', '(spectrogram_stereo.ge(mel_transform.top_db).all())'), ('Equal', '(spectrogram_stereo.size(-1), mel_transform.n_mels)')]",[],[],[],[],[],[],[],[],[],[],"[('True', '(spectrogram_torch.max() <= 0.)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
53,David Pollack,david@da3.net,2019-01-05 16:38:25+01:00,8b616bce943a16f9ecbf85ebb98301f62e8f3aba,https://github.com/pytorch/audio/commit/8b616bce943a16f9ecbf85ebb98301f62e8f3aba,fix MEL2 and update filterbank conversion matrix,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(mel_transform.fm.fb.sum(1).le(1.).all())'), ('True', '(mel_transform.fm.fb.sum(1).ge(0.).all())'), ('True', '(spectrogram2_torch.dim() == 3)'), ('True', '(spectrogram2_torch.le(0.).all())'), ('True', '(spectrogram2_torch.ge(mel_transform.top_db).all())'), ('Equal', '(spectrogram2_torch.size(-1), mel_transform2.n_mels)'), ('True', '(mel_transform2.fm.fb.sum(1).le(1.).all())'), ('True', '(mel_transform2.fm.fb.sum(1).ge(0.).all())'), ('True', '(fb_matrix_transform.fb.sum(1).le(1.).all())'), ('True', '(fb_matrix_transform.fb.sum(1).ge(0.).all())'), ('Equal', '(fb_matrix_transform.fb.size(), (400, 100))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
54,Jeremy Howard,info@fast.ai,2019-02-03 18:22:59+00:00,3c3ce998e57206e5f0afb286a2ba8507e7f71557,https://github.com/pytorch/audio/commit/3c3ce998e57206e5f0afb286a2ba8507e7f71557,stringify filename on load for compatibility with pathlib,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
55,Jeremy Howard,info@fast.ai,2019-02-03 18:55:14+00:00,a14c299267bd356e89d1dea6b4673bf33c771a99,https://github.com/pytorch/audio/commit/a14c299267bd356e89d1dea6b4673bf33c771a99,accept f_max and f_min for better compatibility with librosa,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
56,Jeremy Howard,github@jhoward.fastmail.fm,2019-02-04 08:39:07-07:00,d62d3c0b1ade8478e3a9b77031517de1fd48ed62,https://github.com/pytorch/audio/commit/d62d3c0b1ade8478e3a9b77031517de1fd48ed62,"Bug fix: ff top_db is None then can not check `top_db>0` (#75)

* Bug fix: ff top_db is None then can not check `top_db>0`

* fix formatting",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
57,Jeremy Howard,github@jhoward.fastmail.fm,2019-02-04 18:03:47-07:00,b311c4cc3ca8e2f58af84d694276c50d1ba8a907,https://github.com/pytorch/audio/commit/b311c4cc3ca8e2f58af84d694276c50d1ba8a907,Bug fix: Use correct device for MEL2 functions so MEL2 works on CUDA tensors (#77),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
58,Jeremy Howard,github@jhoward.fastmail.fm,2019-02-07 00:36:20-07:00,7e15d2f906afa7e932b6741456c8a278f421ae67,https://github.com/pytorch/audio/commit/7e15d2f906afa7e932b6741456c8a278f421ae67,"Rename classes in line with PyTorch standards. Remove redundent slow librosa-based `MEL`. Add missing docstring params. (#78)

* Bug fix: Use correct device for MEL2 functions so MEL2 works on CUDA tensors

* Rename classes in line with PyTorch standards. Remove redundent
slow librosa-based `MEL`. Add missing docstring params.

* fix param names",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],"[('True', '(audio.dim() == 2)'), ('True', '(result.dim() == 3)'), ('True', '(result.dim() == 3)'), ('True', '(repr_test.__repr__())'), ('True', '(repr_test.__repr__())')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
59,David Pollack,sent@da3.net,2019-02-11 18:32:56+00:00,e868060d36db186a1597b45702ca2c8702ce12ef,https://github.com/pytorch/audio/commit/e868060d36db186a1597b45702ca2c8702ce12ef,add friendly deprecation message (#81),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
60,Charles Coulombe,ccoulombe@users.noreply.github.com,2019-02-12 00:51:53-05:00,e874ef045b074b4a61d1f44aa0922b2de4706f92,https://github.com/pytorch/audio/commit/e874ef045b074b4a61d1f44aa0922b2de4706f92,Added torch requirement to setup.py (#82),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
61,PCerles,philip.cerles@gmail.com,2019-02-21 05:40:20-08:00,54d1cede9662349195734d6be6dfc740fbf4c8ab,https://github.com/pytorch/audio/commit/54d1cede9662349195734d6be6dfc740fbf4c8ab,"Librosa consistency (#83)

* saving commit

* more fixes

* Update test.py

* flake8 style, tests moved

* typo

* DCT now a method of MFCC class. Changed DCT impelementation to @dhpollack suggestion""

* changes to address pr comments

* ordering

* fix dct docstring

* fix dct docstring

* DCT matrix needs to go on same device

* DCT matrix needs to go on same device

* log mfcc option",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,13,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(spectrogram_torch.ge(spectrogram_torch.max() - top_db).all())'), ('True', '(spectrogram_torch.ge(spectrogram_torch.max() - top_db).all())'), ('True', '(spectrogram_torch.ge(spectrogram_torch.max() - top_db).all())'), ('True', '(torch_mfcc.dim() == 3)'), ('True', '(torch_mfcc.shape[2] == n_mfcc)'), ('True', '(torch_mfcc.shape[1] == 321)'), ('True', '(torch_mfcc2.shape[1] == 641)'), ('True', '(torch_mfcc_norm_none.allclose(norm_check))'), ('True', '(np.allclose(out_torch, out_librosa, atol=1e-5))'), ('True', '(np.allclose(torch_mel, librosa_mel, atol=5e-3))'), ('True', '(np.allclose(db_torch, db_librosa, atol=5e-3))'), ('True', '(np.allclose(db_torch, db_librosa, atol=5e-3))'), ('True', '(np.allclose(torch_mfcc, librosa_mfcc, atol=5e-3))')]",[],[],[],[],[],[],[],[],[],[],"[('True', '(spectrogram_torch.le(0.).all())'), ('True', '(spectrogram_torch.ge(mel_transform.top_db).all())'), ('True', '(spectrogram2_torch.le(0.).all())'), ('True', '(spectrogram2_torch.ge(mel_transform.top_db).all())'), ('True', '(spectrogram_stereo.le(0.).all())'), ('True', '(spectrogram_stereo.ge(mel_transform.top_db).all())')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
62,Fabian-Robert Stöter,faroit@users.noreply.github.com,2019-03-06 20:52:45+01:00,11486f78d714d4b480ab75c383677c77da494107,https://github.com/pytorch/audio/commit/11486f78d714d4b480ab75c383677c77da494107,clarify sox length (#86),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
63,thirdformant,thirdformant@gmail.com,2019-03-06 19:53:59+00:00,7212f245ab738b2f65f398f8da92ba2cc43858e2,https://github.com/pytorch/audio/commit/7212f245ab738b2f65f398f8da92ba2cc43858e2,Bug fix: if top_db is None then checking `top_db < 0` fails (#85),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
64,Krishna Kalyan,kkalyan@apache.org,2019-03-20 21:20:45+05:18,ea7fcf080020f27da2f7675f01f94b84bae4c922,https://github.com/pytorch/audio/commit/ea7fcf080020f27da2f7675f01f94b84bae4c922,fix doc string (#90),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
65,chaask,chandrahas93@gmail.com,2019-04-10 20:21:27+05:18,9f7d51de72179901bc83c09e3d9a8c4573effde6,https://github.com/pytorch/audio/commit/9f7d51de72179901bc83c09e3d9a8c4573effde6,"Update documentation for SoxEffectsChain. (#95)

Fix error ""cannot open file"", when the audiodir_path is different from where the code is run.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
66,Hagen Wierstorf,hagen.wierstorf@posteo.de,2019-05-04 16:33:22+02:00,acdedc4af1d615049077623f45e6cfecd63dd180,https://github.com/pytorch/audio/commit/acdedc4af1d615049077623f45e6cfecd63dd180,TST: add travis config (#100),1,False,False,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
67,Jason Lian,jamarshon@fb.com,2019-05-16 09:39:58-07:00,101e0d5f3843d144fb704ab93b11ac3b17d239a2,https://github.com/pytorch/audio/commit/101e0d5f3843d144fb704ab93b11ac3b17d239a2,adding file,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
68,Jason Lian,jamarshon@fb.com,2019-05-16 10:22:05-07:00,3d21b4374d5b840dc61d772570989bf7caa52b91,https://github.com/pytorch/audio/commit/3d21b4374d5b840dc61d772570989bf7caa52b91,more,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
69,Jason Lian,jamarshon@fb.com,2019-05-16 10:46:17-07:00,23ecb7722c1f8572056ff66be0eb5a52401fdd7e,https://github.com/pytorch/audio/commit/23ecb7722c1f8572056ff66be0eb5a52401fdd7e,more,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
70,Jason Lian,jamarshon@fb.com,2019-05-16 12:34:23-07:00,95803cf96d7de815a976f55bc9e0c4694ed16356,https://github.com/pytorch/audio/commit/95803cf96d7de815a976f55bc9e0c4694ed16356,add docs,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
71,Jason Lian,jamarshon@fb.com,2019-05-16 13:35:10-07:00,1059c7cad61c26ef888ac60b14ca64c3d1986686,https://github.com/pytorch/audio/commit/1059c7cad61c26ef888ac60b14ca64c3d1986686,pre,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
72,Jason Lian,jamarshon@fb.com,2019-05-16 14:43:58-07:00,ec0b29f57221b6691843681a45085ab65f0b2ff3,https://github.com/pytorch/audio/commit/ec0b29f57221b6691843681a45085ab65f0b2ff3,update doc,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
73,Jason Lian,jamarshon@fb.com,2019-05-20 06:16:57-07:00,3f89b7ceeb9321daa3e6742a2810836ee47f578b,https://github.com/pytorch/audio/commit/3f89b7ceeb9321daa3e6742a2810836ee47f578b,Remove numpy support in transforms.py and functional.py,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
74,Jason Lian,jamarshon@fb.com,2019-05-20 06:21:05-07:00,bcba18143131f18664ac3123e0b855acf07da71f,https://github.com/pytorch/audio/commit/bcba18143131f18664ac3123e0b855acf07da71f,Add assertion to check type of input,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
75,Jason Lian,jamarshon@fb.com,2019-05-20 06:30:15-07:00,2870d248a6df9722a3ec38971deb11cec622676f,https://github.com/pytorch/audio/commit/2870d248a6df9722a3ec38971deb11cec622676f,Fixing a test in test_transforms.py which passes in a numpy array,2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],"[('True', '(sig.min() >= -1. and sig.max() <= 1.)'), ('True', '(sig_mu.min() >= 0. and sig.max() <= quantization_channels)'), ('True', '(sig_exp.min() >= -1. and sig_exp.max() <= 1.)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
76,Jason Lian,jamarshon@fb.com,2019-05-20 07:33:34-07:00,1e23d21433f630185b75bc3eb29d468f11e14f01,https://github.com/pytorch/audio/commit/1e23d21433f630185b75bc3eb29d468f11e14f01,Apply feedback,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
77,Jason Lian,jamarshon@fb.com,2019-05-20 08:33:09-07:00,51e2793395bcd6ffc7c81f75f0b8dec06b9a7313,https://github.com/pytorch/audio/commit/51e2793395bcd6ffc7c81f75f0b8dec06b9a7313,Use default type instead of float32,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
78,Hong Xu,hong@topbug.net,2019-05-21 14:36:33-07:00,33dac6ac6181b6e9ed07fb43b00b1b46c0cef7f7,https://github.com/pytorch/audio/commit/33dac6ac6181b6e9ed07fb43b00b1b46c0cef7f7,Add classifiers to setup.py (#108),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
79,jamarshon,jamarshon@fb.com,2019-05-22 10:53:54-04:00,a422f3fe6e6e3ee9503fea687b5fc467fcd03d70,https://github.com/pytorch/audio/commit/a422f3fe6e6e3ee9503fea687b5fc467fcd03d70,Add Kaldi IO as a dependency + put  a wrapper to convert to Tensor + add test to check correct type (#111),8,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,4,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class KaldiIOTest(unittest.TestCase):'],"[('True', '(key in expected_output)'), ('True', '(isinstance(vec, torch.Tensor))'), ('Equal', '(vec.dtype, expected_dtype)'), ('True', '(torch.all(torch.eq(vec, expected_output[key])))')]",[],[],[],[],[],[],[],[],['import unittest'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
80,jamarshon,jamarshon@fb.com,2019-05-22 15:15:19-04:00,af2c2bf7dc00ddade0916b41de6e2aca3a0b2753,https://github.com/pytorch/audio/commit/af2c2bf7dc00ddade0916b41de6e2aca3a0b2753,"Remove numpy dependency from test_transforms.py, skip tests with missing dependencies. (#112)",2,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,6,0,0,0,0,1,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(max(abs(result.min()), abs(result.max())) == 1.)'), ('True', '(torch.allclose(out_torch, torch.from_numpy(out_librosa), atol=1e-5))'), ('True', '(torch.allclose(torch_mel.type(torch.double), torch.from_numpy(librosa_mel), atol=5e-3))'), ('True', '(torch.allclose(db_torch, torch.from_numpy(db_librosa), atol=5e-3))'), ('True', '(torch.allclose(db_torch.type(torch.double), torch.from_numpy(db_librosa), atol=5e-3))'), ('True', '(torch.allclose(torch_mfcc.type(torch.double), torch.from_numpy(librosa_mfcc), atol=5e-3))')]",[],[],[],[],"['not IMPORT_LIBROSA or not IMPORT_SCIPY, )']",[],[],[],[],[],"[('True', '(np.abs([result.min(), result.max()]).max() == 1.)'), ('True', '(np.allclose(out_torch, out_librosa, atol=1e-5))'), ('True', '(np.allclose(torch_mel, librosa_mel, atol=5e-3))'), ('True', '(np.allclose(db_torch, db_librosa, atol=5e-3))'), ('True', '(np.allclose(db_torch, db_librosa, atol=5e-3))'), ('True', '(np.allclose(torch_mfcc, librosa_mfcc, atol=5e-3))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
81,jamarshon,jamarshon@fb.com,2019-05-22 16:44:28-04:00,883f2428626a06e9d0dee5baf4af6cfb4aaca54f,https://github.com/pytorch/audio/commit/883f2428626a06e9d0dee5baf4af6cfb4aaca54f,Use common_utils to check for correct import in torchaudio/kaldi_io.py (#114),3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
82,jamarshon,jamarshon@fb.com,2019-05-24 15:45:39-04:00,d92de5b97fc6204db4b1e3ed20c03ac06f5d53f0,https://github.com/pytorch/audio/commit/d92de5b97fc6204db4b1e3ed20c03ac06f5d53f0,Setup Travis CI so that unit tests are run automatically (#117),12,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],0,1,0,2,0,2,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(x.size() == expected_size)')]",[],"[('Class', '(cls)'), ('Class', '(cls)')]",[],"[('Class', '(cls)'), ('Class', '(cls)')]",[],[],[],[],[],[],"[('True', '(x.size() == expected_size)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
83,jamarshon,jamarshon@fb.com,2019-06-06 11:44:49-04:00,a420cced7e60fcf9ba6efcff3a2e8bee3ac67d05,https://github.com/pytorch/audio/commit/a420cced7e60fcf9ba6efcff3a2e8bee3ac67d05,Modifying modules and functions to support JIT and cuda (#118),8,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],2,12,0,0,0,0,12,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class Test_JIT(unittest.TestCase):', 'class Test_KaldiIO(unittest.TestCase):']","[('True', '(torch.allclose(jit_out, py_out))'), ('True', '(torch.allclose(jit_out, py_out))'), ('True', '(torch.allclose(jit_out, py_out))'), ('True', '(torch.allclose(jit_out, py_out))'), ('True', '(torch.allclose(jit_out, py_out))'), ('True', '(torch.allclose(jit_out, py_out))'), ('True', '(torch.allclose(jit_out, py_out))'), ('True', '(torch.allclose(jit_out, py_out))'), ('True', '(torch.allclose(jit_out, py_out))'), ('True', '(torch.allclose(jit_out, py_out))'), ('True', '(torch.allclose(jit_out, py_out))'), ('True', '(torch.allclose(jit_out, py_out))')]",[],[],[],[],"['not RUN_CUDA, )', 'not RUN_CUDA, )', 'not RUN_CUDA, )', 'not RUN_CUDA, )', 'not RUN_CUDA, )', 'not RUN_CUDA, )', 'not RUN_CUDA, )', 'not RUN_CUDA, )', 'not RUN_CUDA, )', 'not RUN_CUDA, )', 'not RUN_CUDA, )', 'not RUN_CUDA, )']",[],[],[],['import unittest'],['class KaldiIOTest(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
84,jamarshon,jamarshon@fb.com,2019-06-18 16:19:31-04:00,9bd633e3f92f4bbfb6bc2eb46f407018703ef75e,https://github.com/pytorch/audio/commit/9bd633e3f92f4bbfb6bc2eb46f407018703ef75e,Implementing Kaldi Spectrogram (#119),138,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,7,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class Test_Kaldi(unittest.TestCase):'],"[('True', '(output.dim() == 2)'), ('True', '(output.shape[0] == m and output.shape[1] == n)'), ('True', '(torch.allclose(window, output))'), ('True', '(sample_rate == sr)'), ('True', '(torch.allclose(y, sound))'), ('True', '(spec_output.shape, kaldi_output.shape)'), ('True', '(torch.allclose(spec_output, kaldi_output, atol=1e-3, rtol=0))')]",[],[],[],[],[],[],[],[],['import unittest'],[],[],[],[],[],[],[],[],[],[],[],"['len(kaldi_output_dict) == 1 and ', 'len(args) == 13, ']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
85,jamarshon,jamarshon@fb.com,2019-07-02 10:46:01-04:00,4f7886d1e07972b964547f318847a18a77f7aa97,https://github.com/pytorch/audio/commit/4f7886d1e07972b964547f318847a18a77f7aa97,Kaldi Fbank (#127),102,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,2,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(output.shape, kaldi_output.shape)'), ('True', '(torch.allclose(output, kaldi_output, atol=1e-3, rtol=1e-1))')]",[],[],[],[],[],[],[],[],[],[],"[('True', '(spec_output.shape, kaldi_output.shape)'), ('True', '(torch.allclose(spec_output, kaldi_output, atol=1e-3, rtol=0))')]",[],[],[],[],[],[],[],[],[],"['len(fn_split) == len(arr), ( % (len(fn_split), len(arr)))', 'f.endswith() and dash_idx != -1', 'key in test_filepaths', 'len(files) == expected_num_files, ( % (filepath_key, len(files)))', 'len(args) == expected_num_args, ']",[],[],[],[],[],[],[],[],[],[],[],[],"['len(args) == 13, ']",[],[],[],[],[],[],[],[],[],[],[],[]
86,jamarshon,jamarshon@fb.com,2019-07-03 10:20:52-04:00,bd00146de89c542da35406dcf80bb0668bc428df,https://github.com/pytorch/audio/commit/bd00146de89c542da35406dcf80bb0668bc428df,Quick cleanup of kaldi fbank,2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
87,jamarshon,jamarshon@fb.com,2019-07-10 11:18:59-04:00,cf6ce7dc59e6955fb81f6eb721a6814a017b16e6,https://github.com/pytorch/audio/commit/cf6ce7dc59e6955fb81f6eb721a6814a017b16e6,CI build fix (#132),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,3,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(torch.allclose(torch_mel.type(librosa_mel_tensor.dtype), librosa_mel_tensor, atol=5e-3))'), ('True', '(torch.allclose(db_torch.type(db_librosa_tensor.dtype), db_librosa_tensor, atol=5e-3))'), ('True', '(torch.allclose(torch_mfcc.type(librosa_mfcc_tensor.dtype), librosa_mfcc_tensor, atol=5e-3))')]",[],[],[],[],[],[],[],[],[],[],"[('True', '(torch.allclose(torch_mel.type(torch.double), torch.from_numpy(librosa_mel), atol=5e-3))'), ('True', '(torch.allclose(db_torch.type(torch.double), torch.from_numpy(db_librosa), atol=5e-3))'), ('True', '(torch.allclose(torch_mfcc.type(torch.double), torch.from_numpy(librosa_mfcc), atol=5e-3))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
88,jamarshon,jamarshon@fb.com,2019-07-10 15:21:37-04:00,56e2835eb4dc13aadae86ee2de8ecb8415579424,https://github.com/pytorch/audio/commit/56e2835eb4dc13aadae86ee2de8ecb8415579424,ISTFT (#135),3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,6,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestFunctional(unittest.TestCase):'],"[('True', '(sound.shape == estimate.shape, (sound.shape, estimate.shape))'), ('True', '(torch.allclose(sound, estimate, atol=atol, rtol=rtol))'), ('Raises', '(AssertionError, torchaudio.functional.istft, stft, n_fft=4,'), ('Raises', '(AssertionError, torchaudio.functional.istft, stft, **kwargs_not_ok)'), ('Raises', '(AssertionError, torchaudio.functional.istft, torch.zeros((3, 0, 2)), 2)'), ('Raises', '(AssertionError, torchaudio.functional.istft, torch.zeros((0, 3, 2)), 2)')]",[],[],[],[],[],[],[],[],['import unittest'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
89,jamarshon,jamarshon@fb.com,2019-07-11 13:15:14-04:00,48707255575cb2175517aa86f77a87598d6ca5ea,https://github.com/pytorch/audio/commit/48707255575cb2175517aa86f77a87598d6ca5ea,Add Kaldi docs (#136),3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
90,Vincent QB,vincentqb@users.noreply.github.com,2019-07-11 20:13:58-04:00,c569b40f44ec6ba0d2670efa70d72f0f8f70ab00,https://github.com/pytorch/audio/commit/c569b40f44ec6ba0d2670efa70d72f0f8f70ab00,README: nightly version needed for development. (#133),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
91,jamarshon,jamarshon@fb.com,2019-07-16 11:51:35-04:00,0902494e374beb8465d97172cad5ddefae38381a,https://github.com/pytorch/audio/commit/0902494e374beb8465d97172cad5ddefae38381a,torch.functional Docs (#140),5,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
92,jamarshon,jamarshon@fb.com,2019-07-16 16:21:07-04:00,616663ffefad40953daf8481b1d45df368dbd2b1,https://github.com/pytorch/audio/commit/616663ffefad40953daf8481b1d45df368dbd2b1,Kaldi Resample (#134),38,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,8,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(torch.allclose(output, kaldi_output, atol=atol, rtol=rtol))'), ('True', '(upsample_sound.size(-1) == sound.size(-1) * 2)'), ('True', '(downsample_sound.size(-1) == sound.size(-1) // 2)'), ('True', '(downsample_sound.size(-1) == sound.size(-1))'), ('True', '(torch.allclose(ground_truth, estimate, atol=atol, rtol=rtol))'), ('Raises', '(ValueError, invalid_resample, sound)'), ('True', '(up_sampled.size(-1) == sound.size(-1) * 2)'), ('True', '(down_sampled.size(-1) == sound.size(-1) // 2)')]",[],[],[],[],[],[],[],[],[],[],"[('True', '(torch.allclose(output, kaldi_output, atol=1e-3, rtol=1e-1))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
93,jamarshon,jamarshon@fb.com,2019-07-16 17:09:56-04:00,92eaca7c52b2b27db916b7607e97a835389f48b5,https://github.com/pytorch/audio/commit/92eaca7c52b2b27db916b7607e97a835389f48b5,Fix vctk.read_audio #143 (#145),4,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,10,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestVCTK(unittest.TestCase):'],"[('True', '(vctk.is_audio_file())'), ('True', '(vctk.is_audio_file())'), ('False', '(vctk.is_audio_file())'), ('Equal', '(files, audios, msg= % (files, audios))'), ('Equal', '(sr, 16000, msg= % (sr))'), ('Equal', '(s.shape, (1, 20), msg= % (str(s.shape)))'), ('Equal', '(sr, 16000, msg= % (sr))'), ('Equal', '(s.shape, (1, 20), msg= % (str(s.shape)))'), ('Equal', '(utterences, expected_utterances,'), ('Raises', '(RuntimeError, vctk.VCTK, self.test_dirpath, download=False)')]",['def setUp(self):'],[],[],[],[],[],[],[],['import unittest'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
94,Jason Lian,jamarshon@fb.com,2019-07-17 08:20:30-07:00,5ebf78b3eb8a55ce0e1d100ca55eecde1bbce4f5,https://github.com/pytorch/audio/commit/5ebf78b3eb8a55ce0e1d100ca55eecde1bbce4f5,more,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
95,Jason Lian,jamarshon@fb.com,2019-07-17 08:26:47-07:00,628419a1c6153f9782606307b053fde3368370c3,https://github.com/pytorch/audio/commit/628419a1c6153f9782606307b053fde3368370c3,more,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
96,Jason Lian,jamarshon@fb.com,2019-07-17 08:37:07-07:00,804afe8b9a045f8a09bf5e605a5f8470f75fae57,https://github.com/pytorch/audio/commit/804afe8b9a045f8a09bf5e605a5f8470f75fae57,more,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
97,Jason Lian,jamarshon@fb.com,2019-07-17 08:57:46-07:00,5533028328d55a61a5cd7c063a0b844590c6b66f,https://github.com/pytorch/audio/commit/5533028328d55a61a5cd7c063a0b844590c6b66f,more,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
98,Jason Lian,jamarshon@fb.com,2019-07-17 09:03:42-07:00,622c46397c1aeae92d8bf970567910b9f2acdb58,https://github.com/pytorch/audio/commit/622c46397c1aeae92d8bf970567910b9f2acdb58,more,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
99,Jason Lian,jamarshon@fb.com,2019-07-17 11:11:43-07:00,2a7164681d35dcdfe0b8d516ed5ab37d18c38127,https://github.com/pytorch/audio/commit/2a7164681d35dcdfe0b8d516ed5ab37d18c38127,more,1,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
100,Vincent QB,vincentqb@users.noreply.github.com,2019-07-17 14:29:22-04:00,4beb982f5e7fd70358f2eaf9fe2f02887e2262dd,https://github.com/pytorch/audio/commit/4beb982f5e7fd70358f2eaf9fe2f02887e2262dd,Install sox through Anaconda. (#151),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
101,Jason Lian,jamarshon@fb.com,2019-07-18 07:54:31-07:00,1ef6de08343ad62b306b88ebb38aa6b7f8c008ca,https://github.com/pytorch/audio/commit/1ef6de08343ad62b306b88ebb38aa6b7f8c008ca,more,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
102,Jason Lian,jamarshon@fb.com,2019-07-18 09:29:24-07:00,5033fdd009f2969ebdf4bfaa71f4c52b8d47a858,https://github.com/pytorch/audio/commit/5033fdd009f2969ebdf4bfaa71f4c52b8d47a858,add comment,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
103,jamarshon,jamarshon@fb.com,2019-07-22 15:21:30-04:00,629db65de2947982afd93703e3222d735230b54d,https://github.com/pytorch/audio/commit/629db65de2947982afd93703e3222d735230b54d,CI Fix (#158),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
104,jamarshon,jamarshon@fb.com,2019-07-22 16:17:16-04:00,dc452aabbfb6695ddd37b593ce5bbd69e0d9614b,https://github.com/pytorch/audio/commit/dc452aabbfb6695ddd37b593ce5bbd69e0d9614b,Multichannel Resample (#154),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(torch.allclose(multi_sound_sampled[i, :], single_channel_sampled, rtol=1e-4))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
105,Kiran Sanjeevan,ksanjeevancabeza@gmail.com,2019-07-24 08:44:38-07:00,2271a7ae86d92d2a8f2ac69c6c7db3fb15b0f408,https://github.com/pytorch/audio/commit/2271a7ae86d92d2a8f2ac69c6c7db3fb15b0f408,torchaudio-contrib: Adding (some) functionals  (#131),5,False,True,True,True,True,True,True,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,1,0,0,9,10,9,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],"['not IMPORT_LIBROSA, )', 'not IMPORT_LIBROSA, )']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['complex_spec.dim() == waveform.dim() + 2', 'complex_spec.size() == torch.Size(expected_size)', 'np.allclose(complex_spec, expected_complex_spec, atol=1e-5)', 'np.allclose(mag_spec.numpy(), expected_mag_spec, atol=1e-5)', 'complex_specgrams.dim() == complex_specgrams_stretch.dim()', 'complex_specgrams_stretch.size() == torch.Size(expected_size)', 'np.allclose(complex_stretch, expected_complex_stretch, atol=1e-5)', 'torch.allclose(expected_norm_tensor, norm_tensor, atol=1e-5)']",[],[],[],[''],[],[],"['(, [512])', '(, [256])', '', '', '(, [0.5, 1.01, 1.3])', '', '(, [256])', '', '(, [1, 2, 0.7])']","['xfail', 'parametrize(, [512])', 'parametrize(, [256])', 'parametrize(, [', 'parametrize(, [', 'parametrize(, [0.5, 1.01, 1.3])', 'parametrize(, [', 'parametrize(, [256])', 'parametrize(, [', 'parametrize(, [1, 2, 0.7])']","['mark.parametrize(, [512])', 'mark.parametrize(, [256])', 'mark.parametrize(, [', 'mark.parametrize(, [', 'mark.parametrize(, [0.5, 1.01, 1.3])', 'mark.parametrize(, [', 'mark.parametrize(, [256])', 'mark.parametrize(, [', 'mark.parametrize(, [1, 2, 0.7])']",[],[],['import pytest'],[],[],[],[],[],[],[],[],[],[],[],[],[]
106,jamarshon,jamarshon@fb.com,2019-07-24 13:56:55-04:00,b29a4639f4e585a579d48b56bfe2597c9dabb86b,https://github.com/pytorch/audio/commit/b29a4639f4e585a579d48b56bfe2597c9dabb86b,[BC] Standardization of Transforms/Functionals (#152),5,False,True,True,False,True,True,True,True,False,False,False,False,False,False,False,[],0,17,0,0,0,0,0,0,0,0,0,0,36,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,0,0,0,1,0,0,4,5,4,0,0,1,[],"[('Equal', '(result.size(1), length_new)'), ('True', '(waveform.min() >= -1. and waveform.max() <= 1.)'), ('True', '(waveform_mu.min() >= 0. and waveform_mu.max() <= quantization_channels)'), ('True', '(waveform_exp.min() >= -1. and waveform_exp.max() <= 1.)'), ('Equal', '(spectrogram_torch.size(1), mel_transform.n_mels)'), ('True', '(mel_transform.mel_scale.fb.sum(1).le(1.).all())'), ('True', '(mel_transform.mel_scale.fb.sum(1).ge(0.).all())'), ('Equal', '(spectrogram2_torch.size(1), mel_transform2.n_mels)'), ('True', '(mel_transform2.mel_scale.fb.sum(1).le(1.).all())'), ('True', '(mel_transform2.mel_scale.fb.sum(1).ge(0.).all())'), ('Equal', '(spectrogram_stereo.size(1), mel_transform.n_mels)'), ('True', '(torch_mfcc.shape[1] == n_mfcc)'), ('True', '(torch_mfcc.shape[2] == 321)'), ('True', '(torch_mfcc2.shape[2] == 641)'), ('Raises', '(ValueError, invalid_resample, waveform)'), ('True', '(up_sampled.size(-1) == waveform.size(-1) * 2)'), ('True', '(down_sampled.size(-1) == waveform.size(-1) // 2)')]",[],[],[],[],[],[],[],[],[],[],"[('True', '(torch.allclose(jit_out, py_out))'), ('True', '(torch.allclose(jit_out, py_out))'), ('True', '(torch.allclose(jit_out, py_out))'), ('True', '(torch.allclose(jit_out, py_out))'), ('True', '(result.min() >= -1. and result.max() <= 1.)'), ('True', '((result.min() == -1. or result.max() == 1.) and'), ('True', '(repr_test.__repr__())'), ('Equal', '(result.size(0), length_new)'), ('Equal', '(result.size(0), length_new)'), ('True', '(repr_test.__repr__())'), ('True', '(audio_Stereo.size(1) == 2)'), ('True', '(result.size(1) == 1)'), ('True', '(repr_test.__repr__())'), ('True', '(result.size()[::-1] == audio.size())'), ('True', '(repr_test.__repr__())'), ('True', '(max(abs(result.min()), abs(result.max())) == 1.)'), ('True', '(result.size(0) == length_new)'), ('True', '(repr_test.__repr__())'), ('True', '(sig.min() >= -1. and sig.max() <= 1.)'), ('True', '(sig_mu.min() >= 0. and sig.max() <= quantization_channels)'), ('True', '(sig_exp.min() >= -1. and sig_exp.max() <= 1.)'), ('True', '(repr_test.__repr__())'), ('True', '(repr_test.__repr__())'), ('Equal', '(spectrogram_torch.size(-1), mel_transform.n_mels)'), ('True', '(mel_transform.fm.fb.sum(1).le(1.).all())'), ('True', '(mel_transform.fm.fb.sum(1).ge(0.).all())'), ('Equal', '(spectrogram2_torch.size(-1), mel_transform2.n_mels)'), ('True', '(mel_transform2.fm.fb.sum(1).le(1.).all())'), ('True', '(mel_transform2.fm.fb.sum(1).ge(0.).all())'), ('Equal', '(spectrogram_stereo.size(-1), mel_transform.n_mels)'), ('True', '(torch_mfcc.shape[2] == n_mfcc)'), ('True', '(torch_mfcc.shape[1] == 321)'), ('True', '(torch_mfcc2.shape[1] == 641)'), ('Raises', '(ValueError, invalid_resample, sound)'), ('True', '(up_sampled.size(-1) == sound.size(-1) * 2)'), ('True', '(down_sampled.size(-1) == sound.size(-1) // 2)')]",[],[],[],[],"['not IMPORT_LIBROSA, )', 'not RUN_CUDA, )', 'not RUN_CUDA, )', 'not RUN_CUDA, )', 'not RUN_CUDA, )']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['import pytest'],"['complex_spec.dim() == waveform.dim() + 2', 'complex_spec.size() == torch.Size(expected_size)', 'np.allclose(complex_spec, expected_complex_spec, atol=1e-5)', 'np.allclose(mag_spec.numpy(), expected_mag_spec, atol=1e-5)']",[],[],[],[''],[],[],"['(, [512])', '(, [256])', '', '']","['xfail', 'parametrize(, [512])', 'parametrize(, [256])', 'parametrize(, [', 'parametrize(, [']","['mark.parametrize(, [512])', 'mark.parametrize(, [256])', 'mark.parametrize(, [', 'mark.parametrize(, [']",[],[],['import pytest']
107,jamarshon,jamarshon@fb.com,2019-07-24 14:57:36-04:00,6a43e9eb71b42ce553f5720aa3fbc86c79baaa7a,https://github.com/pytorch/audio/commit/6a43e9eb71b42ce553f5720aa3fbc86c79baaa7a,Renaming MuLawExpanding to MuLawDecoding (#159),4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
108,jamarshon,jamarshon@fb.com,2019-07-24 16:21:10-04:00,289f08af6af01e7d89644ed334435333fdd769b3,https://github.com/pytorch/audio/commit/289f08af6af01e7d89644ed334435333fdd769b3,more (#160),4,False,True,True,False,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],"[('True', '(torch.allclose(jit_out, py_out))'), ('Equal', '(result.size(1), length_new)'), ('Equal', '(result.size(1), length_new)')]",[],[],[],[],"['not RUN_CUDA, )']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
109,Edward Z. Yang,ezyang@fb.com,2019-07-24 17:14:28-04:00,51401084103d9791c43943d5bf756f80ab1b1713,https://github.com/pytorch/audio/commit/51401084103d9791c43943d5bf756f80ab1b1713,"Put packaging scripts from 0.2.0 branch to master. (#161)

Signed-off-by: Edward Z. Yang <ezyang@fb.com>",6,False,False,False,False,False,True,True,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
110,jamarshon,jamarshon@fb.com,2019-07-25 09:30:53-04:00,2f62e57384da27a6933bfaa54f494de53b542fb5,https://github.com/pytorch/audio/commit/2f62e57384da27a6933bfaa54f494de53b542fb5,A quick update of docstrings of kaldi.py and transforms.py (#163),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
111,jamarshon,jamarshon@fb.com,2019-07-25 11:24:36-04:00,3f122ae1a1267771d987bc0810237f6456cef867,https://github.com/pytorch/audio/commit/3f122ae1a1267771d987bc0810237f6456cef867,Reorder transforms.py and functional.py + add __all__,2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
112,jamarshon,jamarshon@fb.com,2019-07-26 11:48:37-04:00,e354062580c5ec83805712e53c1c54f72771707b,https://github.com/pytorch/audio/commit/e354062580c5ec83805712e53c1c54f72771707b,Merge branch 'v0.2.0' into master (#162),5,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
113,Edward Z. Yang,ezyang@fb.com,2019-07-26 11:35:45-07:00,d3fe2a77854e4b45867a7353a8d135eedf785b9f,https://github.com/pytorch/audio/commit/d3fe2a77854e4b45867a7353a8d135eedf785b9f,"Small README tweak.

Signed-off-by: Edward Z. Yang <ezyang@fb.com>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
114,jamarshon,jamarshon@fb.com,2019-07-26 14:49:44-04:00,873af3133563afcdb0d6f68f1c88dfbe962fa59c,https://github.com/pytorch/audio/commit/873af3133563afcdb0d6f68f1c88dfbe962fa59c,Rename SpectrogramToDB to AmplitudeToDB (#170),4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
115,Edward Z. Yang,ezyang@fb.com,2019-07-29 10:52:40-04:00,fddd3f2c91edf611e9f88c8a9442059cf8bd79ef,https://github.com/pytorch/audio/commit/fddd3f2c91edf611e9f88c8a9442059cf8bd79ef,Fix segfault passing null to sox_close (#174),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
116,Vincent QB,vincentqb@users.noreply.github.com,2019-07-29 11:30:50-04:00,645ba860b950ae41a65f3defaf1a75edba37a984,https://github.com/pytorch/audio/commit/645ba860b950ae41a65f3defaf1a75edba37a984,Adding Manifesto to README (#169),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
117,jamarshon,jamarshon@fb.com,2019-07-29 11:50:20-04:00,143f667fb89a70f7d3d483091d4d0084ea725127,https://github.com/pytorch/audio/commit/143f667fb89a70f7d3d483091d4d0084ea725127,Creating an Issue Template (#173),4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
118,jamarshon,jamarshon@fb.com,2019-07-29 12:20:45-04:00,95235f31837f62be4fd9348a2633018f61c4ace3,https://github.com/pytorch/audio/commit/95235f31837f62be4fd9348a2633018f61c4ace3,Large re-amp on the torchaudio/docs (#166),17,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
119,Edward Z. Yang,ezyang@fb.com,2019-07-29 15:36:53-04:00,9bc3cedbd2235231fdf6647fc5afc567f20bd39b,https://github.com/pytorch/audio/commit/9bc3cedbd2235231fdf6647fc5afc567f20bd39b,"Make it possible to change the name of torch (e.g., to torch_nightly) (#176)

Signed-off-by: Edward Z. Yang <ezyang@fb.com>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
120,Edward Z. Yang,ezyang@fb.com,2019-07-29 16:11:04-04:00,476a7bdf3e363f18ae74bec6480285487aec5597,https://github.com/pytorch/audio/commit/476a7bdf3e363f18ae74bec6480285487aec5597,"Build mad as part of dependency build process of packaging. (#179)

Signed-off-by: Edward Z. Yang <ezyang@fb.com>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
121,Edward Z. Yang,ezyang@fb.com,2019-07-29 17:13:05-04:00,33bc3581a2c53272c1fecfce5eddd33e9a3e2e5f,https://github.com/pytorch/audio/commit/33bc3581a2c53272c1fecfce5eddd33e9a3e2e5f,"Link against mad in setup.py (#182)

Signed-off-by: Edward Z. Yang <ezyang@fb.com>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
122,jamarshon,jamarshon@fb.com,2019-07-30 10:57:11-04:00,ae3070ccb14fc7f65c8391fd24aafa73f39ce653,https://github.com/pytorch/audio/commit/ae3070ccb14fc7f65c8391fd24aafa73f39ce653,README updates (#180),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
123,jamarshon,jamarshon@fb.com,2019-07-30 11:45:05-04:00,2d82a1ea7a9f0b31a6c6a098664dc47652b8efea,https://github.com/pytorch/audio/commit/2d82a1ea7a9f0b31a6c6a098664dc47652b8efea,README updates (quick cleanup) #184,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
124,Edward Z. Yang,ezyang@fb.com,2019-07-30 17:35:16-04:00,07b9b9baae36d7e78c2c58a8796aaa8644ed85b1,https://github.com/pytorch/audio/commit/07b9b9baae36d7e78c2c58a8796aaa8644ed85b1,"Make test scripts runnable without being modules. (#186)

This makes it easier to test against an installed wheel, as the
torchaudio folder is no longer preferentially picked up when
you run a test module.

I had to move all tests in subfolders into the top level test
directory to make this work, since you can't access .. modules
without mucking around with sys.path (which I don't want to do.)

NB: this BREAKS the syntax where you can run a test by
saying `python -m test.test`.  Instead, do `python test/test.py`
or use the pytest runner.

Signed-off-by: Edward Z. Yang <ezyang@fb.com>",10,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
125,jamarshon,jamarshon@fb.com,2019-07-31 13:54:23-04:00,53a9fd1350a3a82a4a668d409cd3a86c2dc5bb68,https://github.com/pytorch/audio/commit/53a9fd1350a3a82a4a668d409cd3a86c2dc5bb68,Binary install instructions (#191),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
126,Edward Z. Yang,ezyang@fb.com,2019-07-31 11:26:04-07:00,817c1cd6ba7b03bb777b8b2335dc0520f1992076,https://github.com/pytorch/audio/commit/817c1cd6ba7b03bb777b8b2335dc0520f1992076,"Bump setup.py past 0.3.0 branch cut.

Signed-off-by: Edward Z. Yang <ezyang@fb.com>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
127,Edward Z. Yang,ezyang@fb.com,2019-07-31 16:17:45-04:00,3d4f256a54bbed5812dd4f331af94001911f5b24,https://github.com/pytorch/audio/commit/3d4f256a54bbed5812dd4f331af94001911f5b24,"Support for building nightlies on master. (#193)

Signed-off-by: Edward Z. Yang <ezyang@fb.com>",3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
128,jamarshon,jamarshon@fb.com,2019-08-01 09:58:21-04:00,d8a47f4a08c6ca4599a86d3f3a6f06ee6a75b113,https://github.com/pytorch/audio/commit/d8a47f4a08c6ca4599a86d3f3a6f06ee6a75b113,Removal of torchaudio.legacy,6,False,True,False,False,True,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,1,31,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],['class Test_LoadSave(unittest.TestCase):'],"[('Equal', '(sr, 44100)'), ('Equal', '(x.size(), (278756, 2))'), ('Greater', '(x.sum(), 0)'), ('Equal', '(x.dtype, torch.float32)'), ('True', '(x.min() >= -1.0)'), ('True', '(x.max() <= 1.0)'), ('Raises', '(OSError):'), ('Raises', '(OSError):'), ('True', '(os.path.isfile(new_filepath))'), ('True', '(os.path.isfile(new_filepath))'), ('True', '(os.path.isfile(new_filepath))'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('True', '(os.path.isfile(new_filepath))'), ('Raises', '(OSError):'), ('True', '(os.path.isfile(sinewave_filepath))'), ('Equal', '(si.precision, 32)'), ('Equal', '(si16.precision, 16)'), ('True', '(tensor.allclose(tensor2))'), ('Equal', '(sample_rate, sample_rate2)'), ('Equal', '(x_sine_part.size(0), num_frames)'), ('Equal', '(l1_error, 0.)'), ('Equal', '(l1_error, 0.)'), ('Equal', '(x_2ch_part.size(0), num_frames)'), ('Equal', '(l1_error, 0.)'), ('Equal', '(x_ns.size(0), x_sine_full.size(0) - offset_ns)'), ('Raises', '(RuntimeError):'), ('Equal', '(si.channels, channels)'), ('Equal', '(si.length, samples)'), ('Equal', '(si.rate, rate)'), ('Equal', '(ei.bits_per_sample, precision)')]",[],[],[],[],[],[],[],[],['import unittest'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
129,Edward Z. Yang,ezyang@fb.com,2019-08-01 16:23:07-04:00,25504ad60a10347d9123d7ea237b9d4acd0209ec,https://github.com/pytorch/audio/commit/25504ad60a10347d9123d7ea237b9d4acd0209ec,"Add missing from __future__ import division, delete Unicode (#201)

Signed-off-by: Edward Z. Yang <ezyang@fb.com>",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
130,Edward Z. Yang,ezyang@fb.com,2019-08-01 16:36:28-04:00,45423323ec10a4de166e1f2ee6f27cef47a5275c,https://github.com/pytorch/audio/commit/45423323ec10a4de166e1f2ee6f27cef47a5275c,"Packaging improvements for nightlies (#198)

* Packaging improvements for nightlies

- Instructions for how to install stable and master binaries,
  without hardcoding wheel filenames
- Turn on Python 2 build (numba is only needed for testing)
- Make builds a little more hermetic
- Prefer building against nightly CPU-only torch build
- Don't install all of requirements.txt, it's not necessary
- Updates for OS X too, including portability issues

Signed-off-by: Edward Z. Yang <ezyang@fb.com>",4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
131,Vincent QB,vincentqb@users.noreply.github.com,2019-08-02 16:26:43+02:00,67f9f302f0fb422b56a4ae1bb6cce871d9f55b08,https://github.com/pytorch/audio/commit/67f9f302f0fb422b56a4ae1bb6cce871d9f55b08,Mention complex number support in README. (#197),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
132,Edward Z. Yang,ezyang@fb.com,2019-08-02 18:46:57-04:00,a424509dda5b57c932fa8b5b780de93e60ed7ee2,https://github.com/pytorch/audio/commit/a424509dda5b57c932fa8b5b780de93e60ed7ee2,"Make torchaudio work on Python 2. (#209)

- Apply __future__ imports uniformly (future division is the biggy, but absolute
  imports mattered too)
- Hotfix use of tempfile.TemporaryDirectory using a BC library (DO NOT
  add this library as a dependency to torchaudio; it's only for testing)
- Replace math.gcd with fractions.gcd
- Fix a weird pytest collection bug involving parametrized tests
- Turn on Python 2 and Python 3.7 in Travis.

Signed-off-by: Edward Z. Yang <ezyang@fb.com>",25,False,True,True,True,True,True,True,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,[],[],[],[],[],[],[],['()'],[],[],[],[],[],[],[],[],[],"['not IMPORT_LIBROSA, )']",[],[],[],[],[],[],[],[],[],[],[],"['(, [0.5, 1.01, 1.3])']","['parametrize(, [0.5, 1.01, 1.3])']","['mark.parametrize(, [0.5, 1.01, 1.3])']",[],[],[],[],[],[],[],[],[],[],"['(, [0.5, 1.01, 1.3])']","['parametrize(, [0.5, 1.01, 1.3])']","['mark.parametrize(, [0.5, 1.01, 1.3])']",[],[],[]
133,Edward Z. Yang,ezyang@fb.com,2019-08-02 18:49:51-04:00,a9bee3ed3c8f798c0f2c31d4290758069b7dcd35,https://github.com/pytorch/audio/commit/a9bee3ed3c8f798c0f2c31d4290758069b7dcd35,"Conda nightly packaging updates. (#203)

Billing of changes:

* Can now toggle what branch is built using BRANCH envvar
* PyTorch nightly we were built against is hardcoded into conda meta.yaml
* Disable Conda Python 3.5 builds as we don't have nightlies for torch at the moment
* No more torchaudio-cpu or torchaudio-nightly suffix
* Remove librosa from testing stanza, so that conda build works with stock anaconda channel
* Change convention on PREFIX to be what we previously called $PREFIX/audio
* Make build_from_source.sh cd-neutral

Signed-off-by: Edward Z. Yang ezyang@fb.com",7,False,True,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
134,Edward Z. Yang,ezyang@fb.com,2019-08-02 15:53:26-07:00,a8bd18dab1d3527da835d4ace72f43c94997abaf,https://github.com/pytorch/audio/commit/a8bd18dab1d3527da835d4ace72f43c94997abaf,"Add missing build script.

Signed-off-by: Edward Z. Yang <ezyang@fb.com>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
135,Edward Z. Yang,ezyang@fb.com,2019-08-06 13:08:46-04:00,77a69ee3e5aaa418eed1b13519c59c747b392fad,https://github.com/pytorch/audio/commit/77a69ee3e5aaa418eed1b13519c59c747b392fad,"Remove nightly suffix from torchaudio nightly wheels.

Signed-off-by: Edward Z. Yang <ezyang@fb.com>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
136,Edward Z. Yang,ezyang@fb.com,2019-08-06 16:15:02-04:00,dc1d7a43120b71520417fb53b991dfd3f4a03314,https://github.com/pytorch/audio/commit/dc1d7a43120b71520417fb53b991dfd3f4a03314,"Add CircleCI pipeline for Linux binary builds. (#214)

Signed-off-by: Edward Z. Yang <ezyang@fb.com>",6,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
137,Edward Z. Yang,ezyang@fb.com,2019-08-06 13:18:14-07:00,7bee68345a68e24c2a619af127cba88a01439e26,https://github.com/pytorch/audio/commit/7bee68345a68e24c2a619af127cba88a01439e26,Manually trigger build,0,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
138,Edward Z. Yang,ezyang@fb.com,2019-08-06 13:25:45-07:00,c2fc079fc5b939a8129582ea0f2e3fa11c391c99,https://github.com/pytorch/audio/commit/c2fc079fc5b939a8129582ea0f2e3fa11c391c99,"Attempt OS X binaries

Signed-off-by: Edward Z. Yang <ezyang@fb.com>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
139,Edward Z. Yang,ezyang@fb.com,2019-08-06 13:34:40-07:00,3db30836240e46b7d1857e86388f8fa43a5eec66,https://github.com/pytorch/audio/commit/3db30836240e46b7d1857e86388f8fa43a5eec66,"Add to workflow

Signed-off-by: Edward Z. Yang <ezyang@fb.com>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
140,Edward Z. Yang,ezyang@fb.com,2019-08-06 13:39:21-07:00,5ad6d2ef7def3e9d8ddaa35c29f4c498f137d6fc,https://github.com/pytorch/audio/commit/5ad6d2ef7def3e9d8ddaa35c29f4c498f137d6fc,"Revert ""Add to workflow""

This reverts commit 3db30836240e46b7d1857e86388f8fa43a5eec66.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
141,Edward Z. Yang,ezyang@fb.com,2019-08-06 13:39:22-07:00,0e64ab6831a90dbd0101c66a0dba718531bd6c7c,https://github.com/pytorch/audio/commit/0e64ab6831a90dbd0101c66a0dba718531bd6c7c,"Revert ""Attempt OS X binaries""

This reverts commit c2fc079fc5b939a8129582ea0f2e3fa11c391c99.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
142,Edward Z. Yang,ezyang@fb.com,2019-08-07 00:18:45-04:00,cd185d1f93136431f1e6c6cd6bea956301995dd6,https://github.com/pytorch/audio/commit/cd185d1f93136431f1e6c6cd6bea956301995dd6,"Rewrite our packaging from scratch (#217)

* New entry points are packaging/build_wheel.sh and packaging/build_conda.sh. The only mandatory environment variable you have to set is PYTHON_VERSION
* CircleCI configuration uses 2.1-style parametrized builds to let you toggle python version, etc. as you do builds. We create a separate job per build configuration for maximum parallelism
* build_tools/packaging got moved to packaging, to be in-line with directory structure in torchvision
* The build_conda.sh and build_wheel.sh delegate most of the heavy lifting to pkg_helpers.bash, which defines a number of bash functions for performing common operations. The intent is that I'll copy-paste this file between other domain API projects.
* TORCHAUDIO_ prefix removed from envvars, so that I can more easily share packaging scripts between projects
* BUILD_VERSION is completely gone; just change the version number if you need to rebuild
* No more logic for cloning and checking out a fresh copy of torchaudio",15,False,True,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
143,Edward Z. Yang,ezyang@fb.com,2019-08-07 10:06:44-04:00,636e1499fcf93b6aced186d863404da1f3340060,https://github.com/pytorch/audio/commit/636e1499fcf93b6aced186d863404da1f3340060,"Setup cuda_suffix (#218)

Signed-off-by: Edward Z. Yang <ezyang@fb.com>",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
144,Edward Z. Yang,ezyang@fb.com,2019-08-08 08:38:00-04:00,1e1a7a4ab296d0d9aac7eb9b7761af9fe59b335b,https://github.com/pytorch/audio/commit/1e1a7a4ab296d0d9aac7eb9b7761af9fe59b335b,"Add uploading support (#220)

Also bugfixes and updates to the packaging scripts.",5,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
145,Edward Z. Yang,ezyang@fb.com,2019-08-08 12:31:50-04:00,2e4dc8c446731db600fb170143712c25841b2428,https://github.com/pytorch/audio/commit/2e4dc8c446731db600fb170143712c25841b2428,"Updates from vision (#222)

Signed-off-by: Edward Z. Yang <ezyang@fb.com>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
146,Edward Z. Yang,ezyang@fb.com,2019-08-08 15:24:28-04:00,886f586303c7a59c3ca48b3f7dc63aa8fa891256,https://github.com/pytorch/audio/commit/886f586303c7a59c3ca48b3f7dc63aa8fa891256,"Refactor version suffix so conda packages don't get suffixes. (#223)

* Refactor version suffix so conda packages don't get suffixes.

Signed-off-by: Edward Z. Yang <ezyang@fb.com>

* typofix

Signed-off-by: Edward Z. Yang <ezyang@fb.com>",3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
147,jamarshon,jamarshon@fb.com,2019-08-13 14:09:11-04:00,b38698ba3363ebd08b1db9e9e8be55bb6a5ad7b2,https://github.com/pytorch/audio/commit/b38698ba3363ebd08b1db9e9e8be55bb6a5ad7b2,Update README.md,1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
148,jamarshon,jamarshon@fb.com,2019-08-13 16:47:24-04:00,c67f2fe53ef7da68bf85abeb303fe58a3df0a2ae,https://github.com/pytorch/audio/commit/c67f2fe53ef7da68bf85abeb303fe58a3df0a2ae,CI Fix: upgrade to torch 1.2.0 (#231),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
149,jamarshon,jamarshon@fb.com,2019-08-13 17:11:09-04:00,7b54714d47aa56ae0e621e39638ecf1e2c56ebac,https://github.com/pytorch/audio/commit/7b54714d47aa56ae0e621e39638ecf1e2c56ebac,CI Fix: Remove Python 3.7 (#232),3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
150,jamarshon,jamarshon@fb.com,2019-08-15 14:24:57-04:00,3589909530c3310fab4407350dbd405330d1c527,https://github.com/pytorch/audio/commit/3589909530c3310fab4407350dbd405330d1c527,"Revert ""CI Fix: Remove Python 3.7"" (#238)

* Revert ""CI Fix: Remove Python 3.7 (#232)""

This reverts commit 7b54714d47aa56ae0e621e39638ecf1e2c56ebac.

* apply feedback",3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
151,jamarshon,jamarshon@fb.com,2019-08-16 12:18:41-04:00,fd9684c8d9b7e68baaa12216f3d4c2cbacc613b3,https://github.com/pytorch/audio/commit/fd9684c8d9b7e68baaa12216f3d4c2cbacc613b3,ISTFT window device for #240 (#242),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
152,jamarshon,jamarshon@fb.com,2019-08-16 19:21:33-04:00,a450cf81c11d206983f209586f38db06e8df2801,https://github.com/pytorch/audio/commit/a450cf81c11d206983f209586f38db06e8df2801,Kaldi MFCC (#228),150,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Raises', '(AssertionError, kaldi.mfcc, torch.empty(0))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
153,cpuhrsch,cpuhrsch@fb.com,2019-08-19 11:48:52-04:00,fc9fb931516e99de465987223066362851612b56,https://github.com/pytorch/audio/commit/fc9fb931516e99de465987223066362851612b56,"Interactive speech recognition demo (#229)

Interactive speech recognition demo based on PySpeech's new model, Jason Lian's PR, and Vincent QB's VAD PR.",4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
154,jamarshon,jamarshon@fb.com,2019-08-20 16:03:17-04:00,42a705d51eeea34242ec54e902a90728e0d10e72,https://github.com/pytorch/audio/commit/42a705d51eeea34242ec54e902a90728e0d10e72,MelSpectrogram: Use given n_fft to initialize fb immediately (#246),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(fb_copy.size(), (1000, 128))'), ('True', '(torch.allclose(fb, fb_copy))'), ('True', '(torch.allclose(window, window_copy))'), ('Equal', '(fb_copy.size(), (201, 128))'), ('True', '(torch.allclose(fb, fb_copy))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
155,jamarshon,jamarshon@fb.com,2019-08-21 14:22:50-04:00,ed175137faec87ed308216754a115d3db96c1852,https://github.com/pytorch/audio/commit/ed175137faec87ed308216754a115d3db96c1852,Increasing test coverage (ASR demo) (#248),10,False,True,True,True,False,True,False,False,False,False,False,False,False,False,False,[],1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class ASRTest(unittest.TestCase):'],"[('Equal', '(transcription, expected_transcription, msg=str(transcription))')]",[],[],[],[],[],[],[],[],['import unittest'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
156,Vincent QB,vincentqb@users.noreply.github.com,2019-08-26 22:00:16+02:00,8528ac78cd0522c37216b18ef7ec1822d126d633,https://github.com/pytorch/audio/commit/8528ac78cd0522c37216b18ef7ec1822d126d633,"Dataset disclaimer (#247)

Adding disclaimer about dataset. https://github.com/pytorch/pytorch/issues/24865",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
157,Will Feng,yf225@cornell.edu,2019-08-29 15:41:11-04:00,860edcdb13e07d017ae0d081d4e2e3034b5e455f,https://github.com/pytorch/audio/commit/860edcdb13e07d017ae0d081d4e2e3034b5e455f,Change Tensor.data<T> to Tensor.data_ptr<T> (#261),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
158,Fabrizio Milo,Mistobaan@users.noreply.github.com,2019-08-29 12:47:45-07:00,17b54118b5cab52e951911a0ce9011a7eb04783f,https://github.com/pytorch/audio/commit/17b54118b5cab52e951911a0ce9011a7eb04783f,Update broken link (#253),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
159,Fabrizio Milo,Mistobaan@users.noreply.github.com,2019-08-29 12:57:49-07:00,d26e112d8b2171ceb78f4c2566245c977b2ff7d1,https://github.com/pytorch/audio/commit/d26e112d8b2171ceb78f4c2566245c977b2ff7d1,"add asound for linux. fix deprecated torch type. (#254)

* fix deprecated torch type.
* don't link alsa on linux.",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
160,Vincent QB,vincentqb@users.noreply.github.com,2019-09-03 16:53:58-04:00,962c6b0f7f6efbd17349e4cf2fedfe6d2450aad1,https://github.com/pytorch/audio/commit/962c6b0f7f6efbd17349e4cf2fedfe6d2450aad1,"Revert ""Change Tensor.data<T> to Tensor.data_ptr<T> (#261)"" (#265)

This reverts commit 860edcdb13e07d017ae0d081d4e2e3034b5e455f.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
161,Vincent QB,vincentqb@users.noreply.github.com,2019-09-06 10:49:52-04:00,f720aec079afa4eb59b887e1452c8047bb66f7d7,https://github.com/pytorch/audio/commit/f720aec079afa4eb59b887e1452c8047bb66f7d7,lint. (#266),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
162,Vincent QB,vincentqb@users.noreply.github.com,2019-09-11 15:34:04-04:00,55778e46eabd560b5f61f3cee5a108e0445d45f6,https://github.com/pytorch/audio/commit/55778e46eabd560b5f61f3cee5a108e0445d45f6,fix version import. (#276),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
163,Antoine Liutkus,antoine.liutkus@inria.fr,2019-09-16 20:32:34+02:00,cfee9b6e8b8af388ddee2a8de539206ac7b2ecc5,https://github.com/pytorch/audio/commit/cfee9b6e8b8af388ddee2a8de539206ac7b2ecc5,"fixed resample to work with cuda tensors (#277)

* fixed resample to work with cuda tensors

* adding comment",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
164,engineerchuan,engineerchuan@gmail.com,2019-09-16 15:26:51-04:00,a2d35df2e4d1013f3a58b2726f7b92074d842c78,https://github.com/pytorch/audio/commit/a2d35df2e4d1013f3a58b2726f7b92074d842c78,"Add a retry and change timeout to adjust for network failures when downloading from sourceforge (#280)

* Add a retry to adjust for network failures when downloading from sourceforge

* try to fix packaging by adding longer connection timeout",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
165,engineerchuan,engineerchuan@gmail.com,2019-09-17 14:17:39-04:00,aa4772ed0b8e58176e24fc01ca2b240a7b581d4b,https://github.com/pytorch/audio/commit/aa4772ed0b8e58176e24fc01ca2b240a7b581d4b,"Small documentation tweak of [0, 1] to [-1, 1] (#283)",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
166,engineerchuan,engineerchuan@gmail.com,2019-09-18 11:03:23-04:00,4e80df79d5821ba90ba370b77922f854ee222919,https://github.com/pytorch/audio/commit/4e80df79d5821ba90ba370b77922f854ee222919,"Curl Settings for Build Script (#284)

* Add a retry to adjust for network failures when downloading from sourceforge
* fix packaging by adding longer connection timeout",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
167,engineerchuan,engineerchuan@gmail.com,2019-09-18 13:13:45-04:00,8273c3f4500ac9c01e95f1d78fa3f5752aafdca7,https://github.com/pytorch/audio/commit/8273c3f4500ac9c01e95f1d78fa3f5752aafdca7,"Make lfilter, and related filters, available (#275)

* Add basic low pass filtering
* Add highpass filtering
* More tests of IIR vs FIR
* Implement convolve function, add tests
* Move lfilter and convolve into functional, more tests
* added additional documentation for convolve and lfilter, renamed functional_filtering to functional_sox_convenience
* Follow naming convention for sample rate in functional
* fix failing vctk manifest test to account for adding more test audios into assets
* Adding documentation for lfilter, biquad, highpass_biquad, lowpass_biquad
* added matrix based implementation of lfilter
* adding python lfilter implementation
* factor out biquad, lowpass, highpass to sox compatibility",7,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestFunctionalFiltering(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],['import unittest'],[],[],[],[],[],[],[],[],[],[],[],"['torch.allclose(', 'len(output_waveform.size()) == 2', 'output_waveform.size(0) == waveform.size(0)', 'output_waveform.size(1) == waveform.size(1)', 'torch.allclose(sox_output_waveform, output_waveform, atol=1e-4)', 'torch.allclose(sox_output_waveform, output_waveform, atol=1e-3)', 'torch.allclose(waveform_sox_out, waveform_lfilter_out, atol=1e-4)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
168,Vincent QB,vincentqb@users.noreply.github.com,2019-09-19 12:59:18-04:00,401e7aeea6776cd2b50334614d3002d6c4d8984c,https://github.com/pytorch/audio/commit/401e7aeea6776cd2b50334614d3002d6c4d8984c,"Compute deltas (#268)

* compute deltas.
* multichannel, and random test.
* documentation.
* feedback. changing name of window to win_length.
* passing padding mode.",5,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(computed.shape == expected.shape, (computed.shape, expected.shape))'), ('True', '(computed.shape == specgram.shape, (computed.shape, specgram.shape))'), ('True', '(computed.shape == specgram.shape, (computed.shape, specgram.shape))'), ('True', '(computed.shape == specgram.shape, (computed.shape, specgram.shape))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
169,engineerchuan,engineerchuan@gmail.com,2019-09-19 17:53:55-04:00,e302434106d43d9f38a0360211421bc468b9291d,https://github.com/pytorch/audio/commit/e302434106d43d9f38a0360211421bc468b9291d,"Fix lfilter for GPU machine (#291)

* Ensure that lfilter works with GPU
* Add option to load on different device
* Debugging tests of lfilter on GPU
* allowing arbitrary types into lfilter",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['torch.allclose(waveform[:, 0:-3], output_waveform[:, 3:], atol=1e-5)']",[],[],[],[],[],[],[],[],[],[],[],[],['torch.allclose('],[],[],[],[],[],[],[],[],[],[],[],[]
170,Kiran Sanjeevan,ksanjeevancabeza@gmail.com,2019-09-20 07:30:12-07:00,5c0773f634803b2ce4180ef57a9c655cd36c6eaf,https://github.com/pytorch/audio/commit/5c0773f634803b2ce4180ef57a9c655cd36c6eaf,"torchaudio-contrib: some augmentations (#285)

* TimeStretch and Masking
* Doc stuff and naming",4,False,True,True,False,False,True,True,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['mask_specgram.size() == specgram.size()', 'num_masked_columns < mask_param', 'mask_specgrams.size() == specgrams.size()', '(num_masked_columns < mask_param).sum() == num_masked_columns.numel()']",[],[],[],[],[],[],"['', '(, [100])', '(, [0., 30.])', '(, [1, 2])', '', '(, [100])', '(, [0., 30.])', '(, [2, 3])']","['parametrize(, [', 'parametrize(, [100])', 'parametrize(, [0., 30.])', 'parametrize(, [1, 2])', 'parametrize(, [', 'parametrize(, [100])', 'parametrize(, [0., 30.])', 'parametrize(, [2, 3])']","['mark.parametrize(, [', 'mark.parametrize(, [100])', 'mark.parametrize(, [0., 30.])', 'mark.parametrize(, [1, 2])', 'mark.parametrize(, [', 'mark.parametrize(, [100])', 'mark.parametrize(, [0., 30.])', 'mark.parametrize(, [2, 3])']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
171,engineerchuan,engineerchuan@gmail.com,2019-09-20 14:34:12-04:00,4fe81eea1065545d39a1dd8485a66a0a3e8ed759,https://github.com/pytorch/audio/commit/4fe81eea1065545d39a1dd8485a66a0a3e8ed759,"Add explicit signature for Sphinx autodoc when function wrapped by @t… (#282)

* Add explicit signature for Sphinx autodoc when function wrapped by @torch.jit.script",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
172,engineerchuan,engineerchuan@gmail.com,2019-09-25 14:35:45-04:00,e8b27c80d32b4938948211cc5cbb42d0ab943b60,https://github.com/pytorch/audio/commit/e8b27c80d32b4938948211cc5cbb42d0ab943b60,"Updated URL for downloading flac, changed http to https download (#297)

* Updated URL for downloading flac, changed http to https download
* Removed comments that are documented in the code",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
173,engineerchuan,engineerchuan@gmail.com,2019-09-25 15:36:47-04:00,02ce049c8824a2d63945136ef0b70990946da600,https://github.com/pytorch/audio/commit/02ce049c8824a2d63945136ef0b70990946da600,"Fix mel filter bank (#294)

* Fixed create_fb_matrix filter bank behavior for fmin/fmax
* add better test for f_min close to f_max
* added one more test for f_min > f_max
* adding one more test",4,False,True,True,True,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],['()'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['torch.allclose(fb[:, i_mel_bank], torch.tensor(librosa_fb[i_mel_bank]), atol=1e-4)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
174,Edward Z. Yang,ezyang@fb.com,2019-10-11 10:26:02-07:00,ce1f8aafe63f7d579c74ce54d2a85d452d55c881,https://github.com/pytorch/audio/commit/ce1f8aafe63f7d579c74ce54d2a85d452d55c881,"Push-based nightlies (#305)

Signed-off-by: Edward Z. Yang <ezyang@fb.com>",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
175,Vincent QB,vincentqb@users.noreply.github.com,2019-10-21 15:20:09-04:00,b8203182704c59303c62ccfd0a810b6e4060ba14,https://github.com/pytorch/audio/commit/b8203182704c59303c62ccfd0a810b6e4060ba14,standardizing n_* (#298),3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
176,Vincent QB,vincentqb@users.noreply.github.com,2019-10-23 13:55:38-04:00,8920802dc676c5eb3341268a11488b02c58c74de,https://github.com/pytorch/audio/commit/8920802dc676c5eb3341268a11488b02c58c74de,"new dataset format with librispeech and commonvoice (#303)

* new dataset format.
* add basic test.
* files for testing.
* serialization using torch.
* add diskcache.
* adding deprecation warnings.
* removing legacy.
* warning about transforms.
* detecting file format using reader.",17,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,1,1,10,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestDatasets(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],['import unittest'],['class TestVCTK(unittest.TestCase):'],"[('True', '(vctk.is_audio_file())'), ('True', '(vctk.is_audio_file())'), ('False', '(vctk.is_audio_file())'), ('Equal', '(files, audios, msg= % (files, audios))'), ('Equal', '(sr, 16000, msg= % (sr))'), ('Equal', '(s.shape, (1, 20), msg= % (str(s.shape)))'), ('Equal', '(sr, 16000, msg= % (sr))'), ('Equal', '(s.shape, (1, 20), msg= % (str(s.shape)))'), ('Equal', '(utterences, expected_utterances,'), ('Raises', '(RuntimeError, vctk.VCTK, self.test_dirpath, download=False)')]",['def setUp(self):'],[],[],[],[],[],[],[],['import unittest'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
177,Vincent QB,vincentqb@users.noreply.github.com,2019-10-23 16:03:37-04:00,5023bd276d9d1e84de585eb482170595d1e14694,https://github.com/pytorch/audio/commit/5023bd276d9d1e84de585eb482170595d1e14694,"Revert ""Revert ""Change Tensor.data<T> to Tensor.data_ptr<T> (#261)"" (#265)"" (#312)

This reverts commit 962c6b0f7f6efbd17349e4cf2fedfe6d2450aad1.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
178,Vincent QB,vincentqb@users.noreply.github.com,2019-10-29 13:13:52-04:00,d88c2449621c5c41b7454a0eea3a430df3ae8642,https://github.com/pytorch/audio/commit/d88c2449621c5c41b7454a0eea3a430df3ae8642,"dataset path. (#316)

Fix test for datasets.",3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
179,Vincent QB,vincentqb@users.noreply.github.com,2019-10-30 09:56:05-04:00,26237c8b28a37be2501c9136beae95bc84683f6e,https://github.com/pytorch/audio/commit/26237c8b28a37be2501c9136beae95bc84683f6e,"Pitch detection (#313)

* pitch detection validation.
* make torchscriptable.",2,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('False', '(s)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
180,Vincent QB,vincentqb@users.noreply.github.com,2019-10-30 17:46:49-04:00,91fcd2f9d954b710d857f605e01c9ea48ae191bd,https://github.com/pytorch/audio/commit/91fcd2f9d954b710d857f605e01c9ea48ae191bd,assets for testing. (#322),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
181,swchen1234,swchen0215@gmail.com,2019-10-31 18:28:48-04:00,2489cbbe42733112037f3bd81c92dde1a9e82090,https://github.com/pytorch/audio/commit/2489cbbe42733112037f3bd81c92dde1a9e82090,"add linearity test for istft (#279)

* add linearity test for istft
* one test needs to be relaxed from atol=1e-6 to atol=1e-5",1,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
182,xinyang0,xw886@nyu.edu,2019-11-01 09:14:24-04:00,6d5f0b435032fc74672a7a4985a3799760238c17,https://github.com/pytorch/audio/commit/6d5f0b435032fc74672a7a4985a3799760238c17,"Add peaking equalizer filter (#315)

Add peaking equalizer filter in functional.py and test it in test_functional_filter.py.",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['torch.allclose(sox_output_waveform, output_waveform, atol=1e-4)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
183,Vincent QB,vincentqb@users.noreply.github.com,2019-11-05 15:27:28-05:00,99c5260014ab411d78caa9b3a076b159882bbb94,https://github.com/pytorch/audio/commit/99c5260014ab411d78caa9b3a076b159882bbb94,make all functional torchscriptable. (#326),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
184,Vincent QB,vincentqb@users.noreply.github.com,2019-11-06 09:43:12-05:00,6db2ad1c2def699eec6f66a1928f825f079b588f,https://github.com/pytorch/audio/commit/6db2ad1c2def699eec6f66a1928f825f079b588f,"Background generator (#323)

* BackgroundGenerator
* renaming disk cache.",4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
185,Vincent QB,vincentqb@users.noreply.github.com,2019-11-06 14:58:31-05:00,ffcda23fa00eb4a16d5b8b06bbef9fc02d947582,https://github.com/pytorch/audio/commit/ffcda23fa00eb4a16d5b8b06bbef9fc02d947582,follow convention for dimension. (#333),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
186,Vincent QB,vincentqb@users.noreply.github.com,2019-11-06 18:06:54-05:00,38d1a9b6325d8b69e9b26ce28b1f1a8e0040c51b,https://github.com/pytorch/audio/commit/38d1a9b6325d8b69e9b26ce28b1f1a8e0040c51b,"Data points remain tuples (#330)

* close file.

* staying with datapoints as tuples until further notice.

* loading tsv as dict.",5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
187,Facebook Community Bot,facebook-github-bot@users.noreply.github.com,2019-11-10 21:50:20-08:00,82027bb9df42c44411ba3e281e9d6f76145dea86,https://github.com/pytorch/audio/commit/82027bb9df42c44411ba3e281e9d6f76145dea86,OSS Automated Fix: Addition of Code of Conduct (#335),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
188,Facebook Community Bot,facebook-github-bot@users.noreply.github.com,2019-11-10 21:57:21-08:00,3dcf812b76a70282ed2679f41bb9cd6ae9d89a4a,https://github.com/pytorch/audio/commit/3dcf812b76a70282ed2679f41bb9cd6ae9d89a4a,"Adding Contributing file (#334)

* OSS Automated Fix: Addition of Contributing",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
189,Vincent QB,vincentqb@users.noreply.github.com,2019-11-13 17:13:37-08:00,e0407b51bf96eeb74de7aeacf98e9b67a7cac580,https://github.com/pytorch/audio/commit/e0407b51bf96eeb74de7aeacf98e9b67a7cac580,"Resume download (#320)

* resume download, validate with md5 or sha256.

* split stream from saving. detect filename.

* validate at end too. check file size again.

* validate now operates on file object.

* expose choices of hash.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
190,Soumith Chintala,sc3104@nyu.edu,2019-11-15 12:31:26-05:00,33bcdcc741c93fd469a5efc42ded6879f2bdc606,https://github.com/pytorch/audio/commit/33bcdcc741c93fd469a5efc42ded6879f2bdc606,soumith -> pytorch for docker images (#339),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
191,Vincent QB,vincentqb@users.noreply.github.com,2019-11-18 11:27:17-05:00,256458fc5710a0498c1cf0d3d3753a5644afbaaa,https://github.com/pytorch/audio/commit/256458fc5710a0498c1cf0d3d3753a5644afbaaa,fix python 2 flake8 error with character encoding. (#340),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
192,Vincent QB,vincentqb@users.noreply.github.com,2019-11-18 17:22:46-05:00,5211b843f63053053eb4d1d1e00dc2ad578a5dc1,https://github.com/pytorch/audio/commit/5211b843f63053053eb4d1d1e00dc2ad578a5dc1,Remove CODE_OF_CONDUCT and CONTRIBUTING for now (#341),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
193,Vincent QB,vincentqb@users.noreply.github.com,2019-11-18 17:30:46-05:00,1500d4efddd21ee9eb2300c028da828d9b2ca5bb,https://github.com/pytorch/audio/commit/1500d4efddd21ee9eb2300c028da828d9b2ca5bb,"Complex STFT transform from spectrogram (#327)

* STFT transform and function from #285

* merge options in existing functionality.

* remove dimension 2 check. add test.

* using ...

* update spectrogram test.",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(computed.shape == expected.shape, (computed.shape, expected.shape))'), ('True', '(torch.allclose(computed, expected))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
194,Vincent QB,vincentqb@users.noreply.github.com,2019-11-18 18:03:11-05:00,f5f79d1d5756240854bd524a55fb5d34180473fa,https://github.com/pytorch/audio/commit/f5f79d1d5756240854bd524a55fb5d34180473fa,"Batching for transforms (#337)

* batching for transforms.

* test for batching.

* update readme.",4,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(computed.shape == expected.shape, (computed.shape, expected.shape))'), ('True', '(torch.allclose(computed, expected))'), ('True', '(computed.shape == expected.shape, (computed.shape, expected.shape))'), ('True', '(torch.allclose(computed, expected))'), ('True', '(computed.shape == expected.shape, (computed.shape, expected.shape))'), ('True', '(torch.allclose(computed, expected))'), ('True', '(computed.shape == expected.shape, (computed.shape, expected.shape))'), ('True', '(torch.allclose(computed, expected))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['torch.allclose(freq, freq2, atol=1e-5)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
195,Vincent QB,vincentqb@users.noreply.github.com,2019-11-19 11:07:12-05:00,ef7c55ce3124f5a117fd432ba65d237968dbe4e6,https://github.com/pytorch/audio/commit/ef7c55ce3124f5a117fd432ba65d237968dbe4e6,decorating equalizer_biquad too. (#342),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
196,Vincent QB,vincentqb@users.noreply.github.com,2019-11-20 13:37:43-05:00,909e445b8fc3ecd6692ed0628344a3b9d956d026,https://github.com/pytorch/audio/commit/909e445b8fc3ecd6692ed0628344a3b9d956d026,"Make jit compilation optional for function and use nn.Module (#314)

* nn.Module.

* generalizing spectrogram test.

* adding test to compile functionals.

* add cuda/cpu compilation test.

* adding transform test.

* remove standalone jit file.

* update mel scale.

* remove script decorator.

* apply to augmentations too.",7,True,True,True,False,True,True,False,False,True,False,False,False,False,True,False,"['assert_migration', 'testcase_migration']",0,0,0,0,0,0,0,0,0,0,0,1,7,0,0,0,0,7,0,0,0,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],['class Test_JIT(unittest.TestCase):'],"[('True', '(torch.allclose(jit_out, py_out))'), ('True', '(torch.allclose(jit_out, py_out))'), ('True', '(torch.allclose(jit_out, py_out))'), ('True', '(torch.allclose(jit_out, py_out))'), ('True', '(torch.allclose(jit_out, py_out))'), ('True', '(torch.allclose(jit_out, py_out))'), ('True', '(torch.allclose(jit_out, py_out))')]",[],[],[],[],"['not RUN_CUDA, )', 'not RUN_CUDA, )', 'not RUN_CUDA, )', 'not RUN_CUDA, )', 'not RUN_CUDA, )', 'not RUN_CUDA, )', 'not RUN_CUDA, )']",[],[],[],['import unittest'],"['torch.allclose(jit_out, py_out)', 'torch.allclose(jit_out, py_out)', 'torch.allclose(jit_out, py_out)', 'torch.allclose(jit_out, py_out)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
197,Vincent QB,vincentqb@users.noreply.github.com,2019-11-21 11:15:13-05:00,13e50da9641b99615cf15b47f225ca9f99a3c748,https://github.com/pytorch/audio/commit/13e50da9641b99615cf15b47f225ca9f99a3c748,remove explicit signature. (#345),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
198,Vincent QB,vincentqb@users.noreply.github.com,2019-11-21 13:05:00-05:00,a61b6472d25bf9e69365f30f6784d4019f4c578f,https://github.com/pytorch/audio/commit/a61b6472d25bf9e69365f30f6784d4019f4c578f,recommend conda installation. (#347),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
199,Vincent QB,vincentqb@users.noreply.github.com,2019-11-21 13:19:32-05:00,99ed052163dcd787d05b326b4443d6d379ceb994,https://github.com/pytorch/audio/commit/99ed052163dcd787d05b326b4443d6d379ceb994,"Move augmentations in transforms (#348)

* sync docs with functionals.

* Adding transforms to documentations. Moving augmentations in transforms.",5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
200,Vincent QB,vincentqb@users.noreply.github.com,2019-11-21 17:15:04-05:00,c74e580f92c11419a9a3c02fd2d0e301e3347597,https://github.com/pytorch/audio/commit/c74e580f92c11419a9a3c02fd2d0e301e3347597,"Remove _docs.py (#349)

* since we no longer use decoration, this fixes #165.

* remove import of _docs.",3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
201,Vincent QB,vincentqb@users.noreply.github.com,2019-11-22 13:48:58-05:00,c90c18d73d4c5c0917d0b4dc7d35bb338ced2f65,https://github.com/pytorch/audio/commit/c90c18d73d4c5c0917d0b4dc7d35bb338ced2f65,"Move batch from vocoder transform to functional (#350)

* fixing errors in docstring.

* move batch to functional.",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
202,Mingbo Wan,2181364+mingbowan@users.noreply.github.com,2019-11-25 10:55:42-08:00,89a108c7ec5b33162c2e743ac9143c028adef831,https://github.com/pytorch/audio/commit/89a108c7ec5b33162c2e743ac9143c028adef831,"Smoke test  (#346)

* adding smoke test

* adding smoke test

* fix config.yml

* trigger smoke test

* test aws erc credential

* test aws erc credential

* test aws erc credential

* test aws erc credential

* adding ecr cred

* test aws erc credential

* test aws erc credential

* test aws erc credential - different way

* test aws erc credential - different way #2

* test aws erc credential - different way #3

* test aws erc credential - different way #4

* test aws #1

* test aws erc credential, after enabling circleci setting

* fixing conda init

* add verbose output for smoke test

* add docker image build workflow

* add docker image build workflow

* fix aws ecr login

* use images build from circelci

* ready for review

* updated Readme with instructions on nightly install, also updated docker image which can make nightlies installed via pip pass

* nit

* reduce size",4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
203,Vincent QB,vincentqb@users.noreply.github.com,2019-11-25 14:55:38-05:00,bdf925532d6ab3f75469671a5fd0a618ecab6c6e,https://github.com/pytorch/audio/commit/bdf925532d6ab3f75469671a5fd0a618ecab6c6e,correct file_obj reference. (#352),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
204,Cami Williams,cwillycs@gmail.com,2019-12-02 18:08:29-05:00,2c7fdcc862b0efba64d113c26e95fa57fb624008,https://github.com/pytorch/audio/commit/2c7fdcc862b0efba64d113c26e95fa57fb624008,"Add functionals gain, dither, scale_to_interval (#319)

* Initial commit for SoX logic in VCTK

* change to train whistle file for tests

* apply probability",3,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(waveform_gain.abs().max().item(), 1.)'), ('True', '(torch.allclose(waveform_gain, sox_gain_waveform, atol=1e-04))'), ('True', '(torch.max(waveform_scaled) <= scaled)'), ('True', '(torch.min(waveform_scaled) >= -scaled)'), ('True', '(torch.allclose(waveform_dithered, sox_dither_waveform, atol=1e-04))'), ('True', '(torch.allclose(waveform_dithered_noiseshaped, sox_dither_waveform_ns, atol=1e-02))'), ('True', '(torch.allclose(wf_vctk, wf_vctk_sox, rtol=1e-03, atol=1e-03))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
205,Mingbo Wan,2181364+mingbowan@users.noreply.github.com,2019-12-03 12:40:13-08:00,38f1e8709ad35e02730cdf2d937026d7fd96c369,https://github.com/pytorch/audio/commit/38f1e8709ad35e02730cdf2d937026d7fd96c369,remove smoke test support for python2.7 (#359),3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
206,Vincent QB,vincentqb@users.noreply.github.com,2019-12-03 16:18:14-05:00,703285275d68f68579915b20905fb96036a65903,https://github.com/pytorch/audio/commit/703285275d68f68579915b20905fb96036a65903,remove scale to interval from #319 (#360),2,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],"[('True', '(torch.max(waveform_scaled) <= scaled)'), ('True', '(torch.min(waveform_scaled) >= -scaled)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
207,Mingbo Wan,2181364+mingbowan@users.noreply.github.com,2019-12-11 11:31:10-08:00,9ab5dd71b0f526914996730594f739639e824f92,https://github.com/pytorch/audio/commit/9ab5dd71b0f526914996730594f739639e824f92,"Better smoke test (#364)

* use binaries just built for smoke test

* to trigger tests on PR

* trigger tests

* different build has different test

* test good, now move to official

* test good, now move to official",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
208,Charles J.Y. Yoon,1242029+jaeyeun97@users.noreply.github.com,2019-12-14 10:15:18+09:00,d1825985e2e5f9a99f2555cdc9bfbbbd758c33dc,https://github.com/pytorch/audio/commit/d1825985e2e5f9a99f2555cdc9bfbbbd758c33dc,"Simpler amplitude_to_DB (#367)

* Simpler amplitude_to_DB

* flake8",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
209,Vincent QB,vincentqb@users.noreply.github.com,2019-12-18 15:09:58-05:00,55f61d1524d2b51bdcb3be51404abc91609c9665,https://github.com/pytorch/audio/commit/55f61d1524d2b51bdcb3be51404abc91609c9665,"deactivate failing test (#372)

Skip librosa consistency test. unittest need one-line skip condition.",1,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[''],[],[],[],[],[],[],[],[],[],[],"['not IMPORT_LIBROSA or not IMPORT_SCIPY, )']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
210,Charles J.Y. Yoon,1242029+jaeyeun97@users.noreply.github.com,2019-12-19 07:38:28+09:00,4887ff416b2ba5a42267c8f37b835d5387dea895,https://github.com/pytorch/audio/commit/4887ff416b2ba5a42267c8f37b835d5387dea895,"Fix MelScale test and documentation (#370)

* Fix MelScale test and documentation

* revert change to tests",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
211,Vincent QB,vincentqb@users.noreply.github.com,2019-12-19 10:48:06-05:00,774ebc78a779834581be6313cf5b53511104b5fc,https://github.com/pytorch/audio/commit/774ebc78a779834581be6313cf5b53511104b5fc,"Backend switch (#355)

* move sox inside function calls.

* add backend switch mechanism.

* import sox at runtime, not import.

* add backend list.

* backend tests.

* creating hidden modules for backend.

* naming backend same as file: soundfile.

* remove docstring in backend file.

* test soundfile info.

* soundfile doesn't support int64.

* adding test for wav file.

* error with incorrect parameter instead of silent ignore.

* adding test across backend. using float32 as done in sox.

* backend guard decorator.",7,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,7,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(x.size(), (2, length))'), ('Equal', '(x.size(), (length, 2))'), ('True', '(x.min() <= -1.0)'), ('True', '(x.max() >= 1.0)'), ('True', '(isinstance(x, torch.LongTensor))'), ('True', '(tensor1.allclose(tensor2))'), ('Equal', '(sample_rate1, sample_rate2)')]",[],[],[],[],[],[],[],[],[],[],"[('Equal', '(x.size(), (2, 278756))'), ('True', '(x.min() <= -1.0)'), ('True', '(x.max() >= 1.0)'), ('Equal', '(x.size(), (278756, 2))'), ('True', '(isinstance(x, torch.LongTensor))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
212,David Pollack,david@da3.net,2019-12-20 20:34:26+01:00,f3365ecf806cdc6877d5eeaaad99475ab57f527e,https://github.com/pytorch/audio/commit/f3365ecf806cdc6877d5eeaaad99475ab57f527e,"Improve lfilter functional (#374)

* Simplify lfilter functional

* use `torch.clamp` instead of `torch.min(..., torch.max(...))`
* remove unneeded creation of ones tensor for previous method

The current lfilter function uses min and max to essentially do a clamp
function.  I changed the code to use clamp instead.  It is more readable
than the previous version.

FYI, if you want to keep the previous way, you could make a
broadcastable tensor of size 1 instead of creating a tensor the size of
the input.

Signed-off-by: David Pollack <david@da3.net>

* Parallelize waveform windows calculation

I've parallelized the calculation of the waveform windows and also
removed the inefficient calculation within the for-loop.

Signed-off-by: David Pollack <david@da3.net>

* Refactoring and minor readability changes

Signed-off-by: David Pollack <david@da3.net>

* Remove one more creation of a temporary tensor

Signed-off-by: David Pollack <david@da3.net>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
213,Charles J.Y. Yoon,1242029+jaeyeun97@users.noreply.github.com,2019-12-24 01:53:31+09:00,34f3c12e0ab9db75b827221dbd135c50c3f03e22,https://github.com/pytorch/audio/commit/34f3c12e0ab9db75b827221dbd135c50c3f03e22,"Module GPU test fixes (#369)

* Fixed GPU tests",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
214,Charles J.Y. Yoon,1242029+jaeyeun97@users.noreply.github.com,2019-12-27 01:19:24+09:00,4a9346939b36addd2c0bdf60707658a15cbbea05,https://github.com/pytorch/audio/commit/4a9346939b36addd2c0bdf60707658a15cbbea05,"Griffin-Lim Transformation Implementation (#365)

* Griffin-Lim Transformation Implementation

* Griffin-Lim Docs

* Remove f-string from backwards compatibility

* iSTFT is now jit-able.

* Comment changes

* Functional Implementation & now jitable

* flake8

* Doc & GPU Fix

* Librosa comparison test

* test directly griffinlim's output. tighter atol.

* matching signature to docstring.

Co-authored-by: Vincent QB <vincentqb@users.noreply.github.com>",5,False,True,True,True,False,True,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(torch.allclose(ta_out, lr_out, atol=5e-5))')]",[],[],[],[],"['not IMPORT_LIBROSA, )']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
215,Oktai Tatanov,oktai.tatanov@gmail.com,2019-12-26 23:58:36+03:00,9409824f6ab98b05246bc688305a4a03bd3eb5c0,https://github.com/pytorch/audio/commit/9409824f6ab98b05246bc688305a4a03bd3eb5c0,"JIT resample waveform (#362)

* test with jit.

* test passed after adding annotation, and removing get_default_dtype

* fix conversion error.

* moving test to transform.

* reverting to original test.

* move type.

* math.gcd added in python 3.5.

Co-authored-by: Vincent QB <vincentqb@users.noreply.github.com>",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
216,Vincent QB,vincentqb@users.noreply.github.com,2019-12-26 15:59:16-05:00,805d7922e0128c8a160e4f828cda258e615bb4d3,https://github.com/pytorch/audio/commit/805d7922e0128c8a160e4f828cda258e615bb4d3,create tensor directly on device. (#377),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
217,Karl Ostmo,kostmo@gmail.com,2019-12-27 12:15:38-08:00,9801caf6799004adf8e4a28eb2230674811469c7,https://github.com/pytorch/audio/commit/9801caf6799004adf8e4a28eb2230674811469c7,"Fix several errors in tests run by Travis (#380)

* Declare file encoding to support special characters

* fix missing utf_8_encoder error in Travis tests

* Py 2.7 backwards-compat iterator

* ensure integer argument to torch.nn.functional.pad

* cast match.ceil result as integer",3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
218,Karl Ostmo,kostmo@gmail.com,2019-12-27 14:46:10-08:00,42ffaf62acd07ce9977c9f1f9995c8c9bd50c9b3,https://github.com/pytorch/audio/commit/42ffaf62acd07ce9977c9f1f9995c8c9bd50c9b3,"Adopt native-Python code generation convention (#378)

Closes #304

See rationale writeup: https://github.com/pytorch/vision/pull/1321#issuecomment-531033978",4,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
219,Karl Ostmo,kostmo@gmail.com,2020-01-02 08:14:53-08:00,e0f261f358005e61282f4fdaf2ec99cfa9a7b40d,https://github.com/pytorch/audio/commit/e0f261f358005e61282f4fdaf2ec99cfa9a7b40d,"Apply 'nightly' branch filter to binary uploads (#385)

Remove suspect logic.",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
220,Karl Ostmo,kostmo@gmail.com,2020-01-02 08:17:02-08:00,479e666bd32c408f2833206f76d63e3cf6c2c700,https://github.com/pytorch/audio/commit/479e666bd32c408f2833206f76d63e3cf6c2c700,"Fix random seed for flaky test_griffinlim test (#388)

closes #382",1,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
221,Karl Ostmo,kostmo@gmail.com,2020-01-02 08:19:16-08:00,cdf5c83d406748c717fafabe09c3026a971b2d48,https://github.com/pytorch/audio/commit/cdf5c83d406748c717fafabe09c3026a971b2d48,"conditionally skip unsupported subTest tests for Python 2 (#386)

closes #387",1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],"['sys.version_info < (3, 4), )', 'sys.version_info < (3, 4), )', 'sys.version_info < (3, 4), )', 'sys.version_info < (3, 4), )', 'sys.version_info < (3, 4), )', 'sys.version_info < (3, 4), )', 'sys.version_info < (3, 4), )', 'sys.version_info < (3, 4), )']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
222,Vincent QB,vincentqb@users.noreply.github.com,2020-01-02 16:36:22-05:00,719a39de292e26712e9f661219a2ee003abb03ab,https://github.com/pytorch/audio/commit/719a39de292e26712e9f661219a2ee003abb03ab,use standard naming. (#393),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
223,peterjc123,peterghost86@gmail.com,2020-01-09 06:56:19+08:00,be5b2d5640b5b7637f99c2a8bfd4293a3d5b0a69,https://github.com/pytorch/audio/commit/be5b2d5640b5b7637f99c2a8bfd4293a3d5b0a69,"Add Windows CI (#394)

* [WIP] Add Windows CI

* Remove cu_version

* checkout_merge -> checkout

* Add build script

* Switch backend to soundfile

* Remove soundfile as dependency

* Rename jobs

* Fix lint",5,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
224,peterjc123,peterghost86@gmail.com,2020-01-10 00:11:30+08:00,7324309033a2d6c70dcbf5d31cac15cd09eafa6f,https://github.com/pytorch/audio/commit/7324309033a2d6c70dcbf5d31cac15cd09eafa6f,Update requirements for Windows (#398),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
225,Eli Uriegas,github@terriblecode.com,2020-01-09 15:33:36-05:00,7e07693f16479caeebee30f1224c60961ec0abd8,https://github.com/pytorch/audio/commit/7e07693f16479caeebee30f1224c60961ec0abd8,".circleci: Remove if block, wasn't doing anything (#399)

With the introduction of the `filter_branch` parameter to the `workflows`
function we no longer have a need to have this if block anymore per
@ezyang's assessment.

Signed-off-by: Eli Uriegas <eliuriegas@fb.com>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
226,Vincent QB,vincentqb@users.noreply.github.com,2020-01-09 17:03:02-05:00,343d0220e282d904ecadf7231b8b9f5d0d824e47,https://github.com/pytorch/audio/commit/343d0220e282d904ecadf7231b8b9f5d0d824e47,"Move jitability test (#395)

* move test for scriptmodule.

* avoiding code duplication.",1,False,True,True,True,True,True,True,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,3,3,3,0,0,0,3,0,0,0,0,0,0,3,3,3,0,0,0,[],[],[],[],[],[],[],['()'],[],[],[],[],[],[],[],[],[],[],['()'],[],[],[],"['jit_out.shape == py_out.shape', 'complex_specgrams.dim() == complex_specgrams_stretch.dim()', 'complex_specgrams_stretch.size() == torch.Size(expected_size)', 'np.allclose(complex_stretch, expected_complex_stretch, atol=1e-5)']",[],[],[],[],[],[],"['', '(, [0.5, 1.01, 1.3])', '(, [256])']","['parametrize(, [', 'parametrize(, [0.5, 1.01, 1.3])', 'parametrize(, [256])']","['mark.parametrize(, [', 'mark.parametrize(, [0.5, 1.01, 1.3])', 'mark.parametrize(, [256])']",[],[],[],"['complex_specgrams.dim() == complex_specgrams_stretch.dim()', 'complex_specgrams_stretch.size() == torch.Size(expected_size)', 'np.allclose(complex_stretch, expected_complex_stretch, atol=1e-5)']",[],[],[],[],[],[],"['', '(, [0.5, 1.01, 1.3])', '(, [256])']","['parametrize(, [', 'parametrize(, [0.5, 1.01, 1.3])', 'parametrize(, [256])']","['mark.parametrize(, [', 'mark.parametrize(, [0.5, 1.01, 1.3])', 'mark.parametrize(, [256])']",[],[],[]
227,Vincent QB,vincentqb@users.noreply.github.com,2020-01-13 11:34:31-05:00,79b33187ed384f8788652d1de9355fb5f84d60da,https://github.com/pytorch/audio/commit/79b33187ed384f8788652d1de9355fb5f84d60da,"[Bug Fix] fix power of spectrogram. makes power a float (#392)

* fix power of spectrogram. makes power a float.

closes #389

* commenting out failing test.

* change skip test logic for librosa.
closes #373",3,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],"['not IMPORT_LIBROSA or not IMPORT_SCIPY, )']",[],[],[],[],[],[],[],[],[],[],[''],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
228,Vincent QB,vincentqb@users.noreply.github.com,2020-01-13 13:05:01-05:00,45498f2615a45e308615ca447d9e63ec159d29db,https://github.com/pytorch/audio/commit/45498f2615a45e308615ca447d9e63ec159d29db,Upgrading to UserWarning so that the user gets the warning. (#402),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
229,Vincent QB,vincentqb@users.noreply.github.com,2020-01-13 15:38:39-05:00,c456524516e049b9a146b20c8f6f9efb4dc79fbd,https://github.com/pytorch/audio/commit/c456524516e049b9a146b20c8f6f9efb4dc79fbd,"extend batch support (#391)

* extend batch support

closes #383

* function for batch test.

* set seed.

* adjust tolerance for griffinlim.",4,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,6,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(computed.shape == expected.shape, (computed.shape, expected.shape))'), ('True', '(torch.allclose(computed, expected))'), ('True', '(computed.shape == expected.shape, (computed.shape, expected.shape))'), ('True', '(torch.allclose(computed, expected))'), ('True', '(computed.shape == expected.shape, (computed.shape, expected.shape))'), ('True', '(torch.allclose(computed, expected, atol=1e-5))')]",[],[],[],[],[],[],[],[],[],[],"[('True', '(computed.shape == expected.shape, (computed.shape, expected.shape))'), ('True', '(torch.allclose(computed, expected))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['torch.allclose(freq, freq2, atol=1e-5)']",[],[],[],[],[],[],[],[],[],[],[],[]
230,Eli Uriegas,eliuriegas@fb.com,2020-01-15 17:22:00-08:00,2e4c2a1f1a3d7a1a0aa6dc236ab434543c430089,https://github.com/pytorch/audio/commit/2e4c2a1f1a3d7a1a0aa6dc236ab434543c430089,"packaging: Install correct version of pytorch for pip (#412)

CUDA_SUFFIX was still being used here when it should've been swapped out
for PYTORCH_VERSION_SUFFIX, which is what's being used for conda below.

Signed-off-by: Eli Uriegas <eliuriegas@fb.com>
(cherry picked from commit 009b115d074ac5fcca2cc34662fe814df63324c1)
Signed-off-by: Eli Uriegas <eliuriegas@fb.com>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
231,Vincent QB,vincentqb@users.noreply.github.com,2020-01-16 15:35:14-05:00,b0f180bcbf91d912d48207e35349c958013bd92c,https://github.com/pytorch/audio/commit/b0f180bcbf91d912d48207e35349c958013bd92c,move master to 0.5.0 (#414),3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
232,Eli Uriegas,eliuriegas@fb.com,2020-01-16 12:36:15-08:00,b32606d6d25fe1be95854bd055300abb436bf76e,https://github.com/pytorch/audio/commit/b32606d6d25fe1be95854bd055300abb436bf76e,"ci: Remove 2.7 tests (#413)

Python 2.7 was EOL on January 1, 2020

The last torchaudio release to support Python 2.7 was 0.4.0

Signed-off-by: Eli Uriegas <eliuriegas@fb.com>",3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
233,Vincent QB,vincentqb@users.noreply.github.com,2020-01-17 11:30:14-05:00,60fd113c6e90defd45fd62d8a38b573f9ccf826c,https://github.com/pytorch/audio/commit/60fd113c6e90defd45fd62d8a38b573f9ccf826c,replace reshape by view. (#409),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
234,Vincent QB,vincentqb@users.noreply.github.com,2020-01-22 16:37:53-05:00,5894928d540319bda15b416b8ced40dec50db55c,https://github.com/pytorch/audio/commit/5894928d540319bda15b416b8ced40dec50db55c,"Revert ""conditionally skip unsupported subTest tests for Python 2 (#386)"" (#420)

This reverts commit cdf5c83d406748c717fafabe09c3026a971b2d48.",1,False,True,True,False,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sys.version_info < (3, 4), )', 'sys.version_info < (3, 4), )', 'sys.version_info < (3, 4), )', 'sys.version_info < (3, 4), )', 'sys.version_info < (3, 4), )', 'sys.version_info < (3, 4), )', 'sys.version_info < (3, 4), )', 'sys.version_info < (3, 4), )']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
235,Vincent QB,vincentqb@users.noreply.github.com,2020-01-22 17:05:56-05:00,f4f714364f44670fd2e75bac9aa28f96d59fc79f,https://github.com/pytorch/audio/commit/f4f714364f44670fd2e75bac9aa28f96d59fc79f,jit/cuda test for complex norm. (#421),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
236,Eli Uriegas,eliuriegas@fb.com,2020-01-29 07:34:47-08:00,add9495e7fa53fec3274d2405427ef722a6383f0,https://github.com/pytorch/audio/commit/add9495e7fa53fec3274d2405427ef722a6383f0,".circleci: Bump python3.7 -> python3.8 (#397)

Signed-off-by: Eli Uriegas <eliuriegas@fb.com>",5,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
237,Vincent QB,vincentqb@users.noreply.github.com,2020-01-29 14:05:39-05:00,ac5dd79f42260756260af53e103d4599954ae915,https://github.com/pytorch/audio/commit/ac5dd79f42260756260af53e103d4599954ae915,"dither jit test (#417)

* workaround for bartlett_window https://github.com/pytorch/pytorch/issues/32358#issuecomment-576909755

* only change dtype.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
238,Vincent QB,vincentqb@users.noreply.github.com,2020-02-12 17:21:08-05:00,ffeee199ca12f041f15235186d3b20a364849a9f,https://github.com/pytorch/audio/commit/ffeee199ca12f041f15235186d3b20a364849a9f,adding dev-other. (#433),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
239,Vincent QB,vincentqb@users.noreply.github.com,2020-02-14 14:00:00-05:00,445e14d1feb3ec4620598a3bc3f1ee3236aa87de,https://github.com/pytorch/audio/commit/445e14d1feb3ec4620598a3bc3f1ee3236aa87de,batch resample transform (#435),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(computed.shape == expected.shape, (computed.shape, expected.shape))'), ('True', '(torch.allclose(computed, expected))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
240,Taras Sereda,taras.y.sereda@gmail.com,2020-02-20 21:47:08+02:00,32bae85cf65bfd5736f4a61e906747429bcc3e12,https://github.com/pytorch/audio/commit/32bae85cf65bfd5736f4a61e906747429bcc3e12,"LJ Speech dataset (#439)

* LJ Speech dataset

* refactoring

as per @vincentqb's suggestions",5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
241,Tomás Osório,tomas.s.osorio@gmail.com,2020-02-22 19:51:35+00:00,4d58bc46064bbaec77548aa001b56219bc7727c1,https://github.com/pytorch/audio/commit/4d58bc46064bbaec77548aa001b56219bc7727c1,"Adding Speech Command Dataset (#437)

* add speechcommand dataset and test

* prepend the full path to each result

* add missing param on docstring in walk_files

* add file to run tests on SpeechCommand Dataset

* reduce logic

* update test on SpeechCommands

* correct the indentation on docstring walk_files

* flake8 compliance

* change tuple type returned. move path split logic in load item.

* typo in name.

* redundant file path.

* filter background noise.

Co-authored-by: Vincent QB <vincentqb@users.noreply.github.com>",5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
242,Vincent QB,vincentqb@users.noreply.github.com,2020-02-24 11:39:18-05:00,3549c57bc3745cb4e372a526386bcd1b69fc2d61,https://github.com/pytorch/audio/commit/3549c57bc3745cb4e372a526386bcd1b69fc2d61,remove custom gcd command since python2.7 is deprecated. testing resample. (#441),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
243,moto,855818+mthrok@users.noreply.github.com,2020-02-25 16:46:01-05:00,2cf59c41a50dd042402ffdf1d7c18dc50109d316,https://github.com/pytorch/audio/commit/2cf59c41a50dd042402ffdf1d7c18dc50109d316,Add allpass filter to functional (#444),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['torch.allclose(sox_output_waveform, output_waveform, atol=1e-4)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
244,moto,855818+mthrok@users.noreply.github.com,2020-02-28 18:31:33-05:00,babc24af6d9bc55c62a4be83f27295961ee0cb42,https://github.com/pytorch/audio/commit/babc24af6d9bc55c62a4be83f27295961ee0cb42,"Add test for InverseMelScale (#448)

* Inverse Mel Scale Implementation

* Inverse Mel Scale Docs

* Better working version.

* GPU fix

* These shouldn't go on git..

* Even better one, but does not support JITability.

* Remove JITability test

* Flake8

* n_stft is a must

* minor clean up of initialization

* Add librosa consistency test

This PR follows up #366 and adds test for `InverseMelScale` (and `MelScale`) for librosa compatibility.

For `MelScale` compatibility test;
1. Generate spectrogram
2. Feed the spectrogram to `torchaudio.transforms.MelScale` instance
3. Feed the spectrogram to `librosa.feature.melspectrogram` function.
4. Compare the result from 2 and 3 elementwise.
Element-wise numerical comparison is possible because under the hood their implementations use the same algorith.

For `InverseMelScale` compatibility test, it is more elaborated than that.
1. Generate the original spectrogram
2. Convert the original spectrogram to Mel scale using `torchaudio.transforms.MelScale` instance
3. Reconstruct spectrogram using torchaudio implementation
3.1. Feed the Mel spectrogram to `torchaudio.transforms.InverseMelScale` instance and get reconstructed spectrogram.
3.2. Compute the sum of element-wise P1 distance of the original spectrogram and that from 3.1.
4. Reconstruct spectrogram using librosa
4.1. Feed the Mel spectrogram to `librosa.feature.inverse.mel_to_stft` function and get reconstructed spectrogram.
4.2. Compute the sum of element-wise P1 distance of the original spectrogram and that from 4.1. (this is the reference.)
5. Check that resulting P1 distance are in a roughly same value range.

Element-wise numerical comparison is not possible due to the difference algorithms used to compute the inverse. The reconstructed spectrograms can have some values vary in magnitude.
Therefore the strategy here is to check that P1 distance (reconstruction loss) is not that different from the value obtained using `librosa`. For this purpose, threshold was empirically chosen

```
print('p1 dist (orig <-> ta):', torch.dist(spec_orig, spec_ta, p=1))
print('p1 dist (orig <-> lr):', torch.dist(spec_orig, spec_lr, p=1))
>>> p1 dist (orig <-> ta): tensor(1482.1917)
>>> p1 dist (orig <-> lr): tensor(1420.7103)
```

This value can vary based on the length and the kind of the signal being processed, so it was handpicked.

* Address review feedbacks

* Support arbitrary batch dimensions.

* Add batch test

* Use view for batch

* fix sgd

* Use negative indices and update docstring

* Update threshold

Co-authored-by: Charles J.Y. Yoon <jaeyeun97@gmail.com>",3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,2,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestLibrosaConsistency(unittest.TestCase):'],"[('True', '(computed.shape == expected.shape, (computed.shape, expected.shape))'), ('True', '(torch.allclose(computed, expected, atol=1.0))')]",[],"[('Class', '(cls)')]",[],[],"['not IMPORT_LIBROSA, )', 'not IMPORT_LIBROSA, )']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['torch.allclose(melspec_ta, torch.from_numpy(melspec_lr[None, ...]), rtol=1e-3)', 'torch.allclose(spec_ta, spec_lr, atol=threshold)', 'torch.dist(spec_orig, spec_ta, p=1) < threshold']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
245,Vincent QB,vincentqb@users.noreply.github.com,2020-03-05 11:46:31-05:00,db1e7da9b309e69ab719155de9521d0c00c6e1c4,https://github.com/pytorch/audio/commit/db1e7da9b309e69ab719155de9521d0c00c6e1c4,"Migrate TimeStretch and AmplitudeToDB to torch.nn.Module (#456)

* AmplitudeToDB to torch.nn.Module

* TimeStretch use torch.nn.Module",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
246,Vincent QB,vincentqb@users.noreply.github.com,2020-03-05 14:01:21-05:00,f1a5503e033632a7e57884df7972eabe6e770623,https://github.com/pytorch/audio/commit/f1a5503e033632a7e57884df7972eabe6e770623,"phase_advance should be a buffer so it moves device correctly (#457)

* phase_advance should be a buffer so it moves device correctly

* flake8

Co-authored-by: Vincent QB <vincentqb@users.noreply.github.com>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
247,Vincent QB,vincentqb@users.noreply.github.com,2020-03-05 15:11:53-05:00,4936c9eb4914830f516e4142133e8a1dee395be6,https://github.com/pytorch/audio/commit/4936c9eb4914830f516e4142133e8a1dee395be6,"Improve Docstrings in transfroms (#442)

* get typing on Docstrings right

* Improve Documentation standardise",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
248,Vincent QB,vincentqb@users.noreply.github.com,2020-03-06 09:41:27-05:00,e108fe2a4aea885e9db586a6c204b74b7fd4f823,https://github.com/pytorch/audio/commit/e108fe2a4aea885e9db586a6c204b74b7fd4f823,"Change default value of dither (#453)

* change default value of dither.

* update doc.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
249,Tomás Osório,tomas.s.osorio@gmail.com,2020-03-10 15:45:25+00:00,9efc3503742fa942865c2e5662147209087d2ef4,https://github.com/pytorch/audio/commit/9efc3503742fa942865c2e5662147209087d2ef4,"Add fade (#449)

* add basics for Fade

* add fade possibilities: at start, end or both

* add different types of fade

* add docstrings, add overriding possibility

* remove unnecessary logic

* correct typing

* agnostic to batch size or n_channels

* add batch test to Fade

* add transform to options

* add test_script_module

* add coherency with test batch

* remove extra step for waveform_length

* update docstring

* add test to compare fade with sox

* change name of fade_shape

* update test fade vs sox with new nomenclature for fade_shape

* add Documentation

Co-authored-by: Vincent QB <vincentqb@users.noreply.github.com>",5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(x.allclose(fade(x_orig), rtol=1e-4, atol=1e-4))'), ('True', '(computed.shape == expected.shape, (computed.shape, expected.shape))'), ('True', '(torch.allclose(computed, expected))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
250,Tomás Osório,tomas.s.osorio@gmail.com,2020-03-10 22:04:17+00:00,d3f967e92685e5730c85848c2c305bd8b74ea571,https://github.com/pytorch/audio/commit/d3f967e92685e5730c85848c2c305bd8b74ea571,add batch test to TimeStretch (#459),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(computed.shape == expected.shape, (computed.shape, expected.shape))'), ('True', '(torch.allclose(computed, expected, atol=1e-5))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
251,Eli Uriegas,eliuriegas@fb.com,2020-03-10 15:05:20-07:00,74de2992151a9c98269c1238a2050f7376120d17,https://github.com/pytorch/audio/commit/74de2992151a9c98269c1238a2050f7376120d17,".circleci: Switch to use token for conda uploads (#460)

pjh5 is a former employee so we should switch over to using a bot token.

Should resolve nightly pipeline failing on upload.

Signed-off-by: Eli Uriegas <eliuriegas@fb.com>",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
252,Tomás Osório,tomas.s.osorio@gmail.com,2020-03-13 14:38:58+00:00,61bbd1339d26d6a85031e2a9138e72e56399696e,https://github.com/pytorch/audio/commit/61bbd1339d26d6a85031e2a9138e72e56399696e,Ignore pycharm and OSX files (#461),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
253,Bhargav Kathivarapu,bhargavkathivarapu31@gmail.com,2020-03-17 23:13:27+05:18,933f6037e0b9bbe51c7720c5d3ba4174dc4f67f9,https://github.com/pytorch/audio/commit/933f6037e0b9bbe51c7720c5d3ba4174dc4f67f9,"Add bandpass and bandreject to functional (#464)

* Add bandpass to functional.py

* Add bandpass and bandreject to functional

* change name to const_skirt_gain

Co-authored-by: Bhargav Kathivarapu <ka387861@L-156168835.local>
Co-authored-by: Vincent Quenneville-Belair <vincentqb@gmail.com>",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['torch.allclose(sox_output_waveform, output_waveform, atol=1e-4)', 'torch.allclose(sox_output_waveform, output_waveform, atol=1e-4)', 'torch.allclose(sox_output_waveform, output_waveform, atol=1e-4)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
254,Tomás Osório,tomas.s.osorio@gmail.com,2020-03-23 15:31:14+00:00,d7c79b39e1a96dd63937f054bd7a9de7ae3e0610,https://github.com/pytorch/audio/commit/d7c79b39e1a96dd63937f054bd7a9de7ae3e0610,Add test transform and functional AmplitudeToDB (#463),2,False,True,True,True,False,True,False,False,False,False,False,False,False,False,False,[],0,8,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(torch.allclose(ta_out, lr_out, atol=5e-5))'), ('True', '(torch.allclose(ta_out, lr_out, atol=5e-5))'), ('True', '(computed.shape == expected.shape, (computed.shape, expected.shape))'), ('True', '(torch.allclose(computed, expected))'), ('True', '(torch.allclose(mag_to_db_torch, power_to_db_torch))'), ('True', '(torch.allclose(power_to_db_torch, torch.from_numpy(power_to_db_librosa), atol=5e-3))'), ('True', '('), ('True', '(')]",[],[],[],[],"['not IMPORT_LIBROSA, )']",[],[],[],[],[],"[('True', '(torch.allclose(db_torch, torch.from_numpy(db_librosa), atol=5e-3))'), ('True', '(torch.allclose(db_torch.type(db_librosa_tensor.dtype), db_librosa_tensor, atol=5e-3))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
255,tuxzz,dorazzsoft@gmail.com,2020-03-24 23:55:44+08:00,fcc9a51a9267a13e142138974ae3050bf94b2163,https://github.com/pytorch/audio/commit/fcc9a51a9267a13e142138974ae3050bf94b2163,make istft fast again (#472),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
256,Tomás Osório,tomas.s.osorio@gmail.com,2020-03-24 16:27:28+00:00,11fb22aae80a60fd867ce87ff8795256b0f733cd,https://github.com/pytorch/audio/commit/11fb22aae80a60fd867ce87ff8795256b0f733cd,"Add Vol Transformation (#468)

* Add Vol with gain_type amplitude

* add gain in db and add tests

* add gain_type ""power"" and tests

* add functional DB_to_amplitude

* simplify

* remove functional

* improve docstring

* add to documentation",5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(x.allclose(vol(x_orig), rtol=1e-4, atol=1e-4))'), ('True', '(computed.shape == expected.shape, (computed.shape, expected.shape))'), ('True', '(torch.allclose(computed, expected))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
257,Bhargav Kathivarapu,bhargavkathivarapu31@gmail.com,2020-03-24 21:49:12+05:18,df9a0417bf4b3c621ae2d846f5f8a056be2f7939,https://github.com/pytorch/audio/commit/df9a0417bf4b3c621ae2d846f5f8a056be2f7939,"Add band,treble,deemph,riaa to functional.py (#470)",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['torch.allclose(sox_output_waveform, output_waveform, atol=1e-4)', 'torch.allclose(sox_output_waveform, output_waveform, atol=1e-4)', 'torch.allclose(sox_output_waveform, output_waveform, atol=1e-4)', 'torch.allclose(sox_output_waveform, output_waveform, atol=1e-4)', 'torch.allclose(sox_output_waveform, output_waveform, atol=1e-4)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
258,rvdmaazen,36233431+rvdmaazen@users.noreply.github.com,2020-03-25 16:20:38+01:00,3cffddbd25022b3eab884d8aa300e74e44a376b4,https://github.com/pytorch/audio/commit/3cffddbd25022b3eab884d8aa300e74e44a376b4,Spelling correction (#474),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
259,Tomás Osório,tomas.s.osorio@gmail.com,2020-03-25 15:32:56+00:00,7da61a4beeec7b7ff9ff5f1532b2adf99220a9b1,https://github.com/pytorch/audio/commit/7da61a4beeec7b7ff9ff5f1532b2adf99220a9b1,"Add Functional DB_to_amplitude (#469)

* add functional DB_to_amplitude

* add test scriptmodule

* add test db_to_amplitude

* add tests

* improve docstrings, move ref for easier use",2,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(torch.allclose(torch.abs(x), x2, atol=5e-5))'), ('True', '(torch.allclose(spec, x2, atol=5e-5))'), ('True', '(torch.allclose(torch.abs(x), x2, atol=5e-5))'), ('True', '(torch.allclose(spec, x2, atol=5e-5))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
260,moto,855818+mthrok@users.noreply.github.com,2020-03-30 15:35:17-04:00,beb6e530c782389314c37b1236e3c72b0ee0b64e,https://github.com/pytorch/audio/commit/beb6e530c782389314c37b1236e3c72b0ee0b64e,Remove PY2 related stuff from test (#478),12,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
261,moto,855818+mthrok@users.noreply.github.com,2020-03-30 16:09:35-04:00,dbed5b119ab3ebcfd88e785d2cf19a4a0deda8df,https://github.com/pytorch/audio/commit/dbed5b119ab3ebcfd88e785d2cf19a4a0deda8df,"Remove __future__ from torachaudio (#479)

* Remove __future__ from torachaudio

* remove double space

Co-authored-by: Vincent QB <vincentqb@users.noreply.github.com>",7,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
262,Vincent QB,vincentqb@users.noreply.github.com,2020-03-30 17:41:21-04:00,d63d851ea8d3744a9b2b5b21ec07e6c6dcb97f96,https://github.com/pytorch/audio/commit/d63d851ea8d3744a9b2b5b21ec07e6c6dcb97f96,"testing with sox only when sox is available (#419)

* testing with sox only when sox is available.

* use wav instead of mp3 for testing functions.

* typo.

* guard against not sox.

* backends definition.

* grouping backend functions into a separate file.

* remove duplicated code.

* requires sox.

* replace by wav, requires sox.

* require with scope.

* undo alignment.

* requires sox for these two, because of mp3.

* no longer need first mp3.

* cleaning.

* new wav version of file.

* flake8.

* remove unnecessary load.

* flake8.

* lint.

* lint.

* revert formatting of file.

* merging into common_utils.

* docstring.

* rename to common_utils.",9,False,True,True,True,True,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],"['set([)', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
263,moto,855818+mthrok@users.noreply.github.com,2020-03-30 17:47:03-04:00,b95d60c24ef7a2a8f2441a602a375f14e6b4bc6d,https://github.com/pytorch/audio/commit/b95d60c24ef7a2a8f2441a602a375f14e6b4bc6d,Extract JIT tests from test_functional to the dedicated test module (#480),2,False,True,True,True,False,True,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,['class TestFunctional(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],['import unittest'],[],"[('True', '(computed.shape == specgram.shape, (computed.shape, specgram.shape))')]",[],[],[],[],[],[],[],[],[],"['jit_out.shape == py_out.shape', 'torch.allclose(jit_out, py_out)']",[],[],[],[],[],[],[],[],[],[],[],[],"['jit_out.shape == py_out.shape', 'torch.allclose(jit_out, py_out)']",[],[],[],[],[],[],[],[],[],[],[],[]
264,moto,855818+mthrok@users.noreply.github.com,2020-03-31 13:21:16-04:00,a72dd83623d1aa67df5f856283d8f40f1bd18ff3,https://github.com/pytorch/audio/commit/a72dd83623d1aa67df5f856283d8f40f1bd18ff3,Extract librosa tests from test_functional to the dedicated test module (#481),2,False,True,True,True,True,True,True,True,False,False,False,False,False,False,False,[],1,0,1,0,0,0,0,3,0,0,2,0,3,0,0,0,0,2,2,0,0,1,7,0,0,0,0,0,0,3,3,3,0,0,1,4,0,0,0,0,0,0,3,3,3,0,0,0,['class TestFunctional(unittest.TestCase):'],[],['def setUp(self):'],[],[],[],[],"['()', '()', '()']",[],[],"['import unittest', 'import unittest']",[],"[('True', '(torch.allclose(ta_out, lr_out, atol=5e-5))'), ('True', '(torch.allclose(ta_out, lr_out, atol=5e-5))'), ('True', '(torch.allclose(ta_out, lr_out, atol=5e-5))')]",[],[],[],[],"['not IMPORT_LIBROSA, )', 'not IMPORT_LIBROSA, )']","['()', '()']",[],[],['import unittest'],"['torch.allclose(ta_out, lr_out, atol=5e-5)', 'torch.allclose(fb[:, i_mel_bank], torch.tensor(librosa_fb[i_mel_bank]), atol=1e-4)', 'torch.allclose(ta_out, lr_out, atol=5e-5)', 'torch.allclose(ta_out, lr_out, atol=5e-5)', 'complex_specgrams.dim() == complex_specgrams_stretch.dim()', 'complex_specgrams_stretch.size() == torch.Size(expected_size)', 'np.allclose(complex_stretch, expected_complex_stretch, atol=1e-5)']",[],[],[],[],[],[],"['', '(, [0.5, 1.01, 1.3])', '(, [256])']","['parametrize(, [', 'parametrize(, [0.5, 1.01, 1.3])', 'parametrize(, [256])']","['mark.parametrize(, [', 'mark.parametrize(, [0.5, 1.01, 1.3])', 'mark.parametrize(, [256])']",[],[],['import pytest'],"['torch.allclose(fb[:, i_mel_bank], torch.tensor(librosa_fb[i_mel_bank]), atol=1e-4)', 'complex_specgrams.dim() == complex_specgrams_stretch.dim()', 'complex_specgrams_stretch.size() == torch.Size(expected_size)', 'np.allclose(complex_stretch, expected_complex_stretch, atol=1e-5)']",[],[],[],[],[],[],"['', '(, [0.5, 1.01, 1.3])', '(, [256])']","['parametrize(, [', 'parametrize(, [0.5, 1.01, 1.3])', 'parametrize(, [256])']","['mark.parametrize(, [', 'mark.parametrize(, [0.5, 1.01, 1.3])', 'mark.parametrize(, [256])']",[],[],[]
265,Tomás Osório,tomas.s.osorio@gmail.com,2020-03-31 22:14:30+01:00,4c221140911f417c7d78ee2944492340f8a57f84,https://github.com/pytorch/audio/commit/4c221140911f417c7d78ee2944492340f8a57f84,"Add inline typing to functional (#482)

* add typing to functional

* fix minor things

* fix flake8",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
266,Bhargav Kathivarapu,bhargavkathivarapu31@gmail.com,2020-04-01 20:31:05+05:18,d069fb9f677c7770364f590490325d2d90cacc09,https://github.com/pytorch/audio/commit/d069fb9f677c7770364f590490325d2d90cacc09,Replace six with python3 version (#486),4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
267,Tomás Osório,tomas.s.osorio@gmail.com,2020-04-01 16:23:10+01:00,2bce489868ff696eadc7169e069116a353f64889,https://github.com/pytorch/audio/commit/2bce489868ff696eadc7169e069116a353f64889,"Inline typing transforms (#487)

* add inline typing

* update type hinting

* update typing

* sync the docstrings typing

* reorder imports, add typing to missing method

* add missing parenthesis",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
268,peterjc123,peterghost86@gmail.com,2020-04-01 12:00:18-05:00,2554f826f78c263b6c18f4c97a5d0fd64b6b89e6,https://github.com/pytorch/audio/commit/2554f826f78c263b6c18f4c97a5d0fd64b6b89e6,Only test with cpu-only binaries (#489),1,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
269,moto,855818+mthrok@users.noreply.github.com,2020-04-01 14:35:26-04:00,c6bca70296effc489df88aad8f77b91c063b217c,https://github.com/pytorch/audio/commit/c6bca70296effc489df88aad8f77b91c063b217c,Extract librosa tests from test_transforms to the dedicated test module (#485),2,False,True,True,True,True,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,2,0,0,0,1,2,6,0,1,0,0,4,1,0,0,1,9,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],"['', ')']",[],[],[],['import unittest'],"['class TestFunctional(unittest.TestCase):', 'class TestLibrosaConsistency(unittest.TestCase):']","[('True', '(torch.allclose(out_torch, torch.from_numpy(out_librosa), atol=1e-5))'), ('True', '(torch.allclose(torch_mel.type(librosa_mel_tensor.dtype), librosa_mel_tensor, atol=5e-3))'), ('True', '(torch.allclose(power_to_db_torch, torch.from_numpy(power_to_db_librosa), atol=5e-3))'), ('True', '('), ('True', '('), ('True', '(torch.allclose(torch_mfcc.type(librosa_mfcc_tensor.dtype), librosa_mfcc_tensor, atol=5e-3))')]",[],"[('Class', '(cls)')]",[],[],"['not IMPORT_LIBROSA or not IMPORT_SCIPY, )', 'not IMPORT_LIBROSA, )', ')', 'not IMPORT_LIBROSA, )']",['()'],[],[],['import unittest'],"['torch.allclose(out_torch, torch.from_numpy(out_librosa), atol=1e-5)', 'torch.allclose(', 'torch.allclose(power_to_db_torch, torch.from_numpy(power_to_db_librosa), atol=5e-3)', 'torch.allclose(mag_to_db_torch, torch.from_numpy(mag_to_db_librosa), atol=5e-3)', 'torch.allclose(', 'torch.allclose(', 'torch.allclose(melspec_ta, torch.from_numpy(melspec_lr[None, ...]), rtol=1e-3)', 'torch.allclose(spec_ta, spec_lr, atol=threshold)', 'torch.dist(spec_orig, spec_ta, p=1) < threshold']",[],[],[],[],[],[],[],[],[],[],[],[],"['torch.allclose(melspec_ta, torch.from_numpy(melspec_lr[None, ...]), rtol=1e-3)', 'torch.allclose(spec_ta, spec_lr, atol=threshold)', 'torch.dist(spec_orig, spec_ta, p=1) < threshold']",[],[],[],[],[],[],[],[],[],[],[],[]
270,Tomás Osório,tomas.s.osorio@gmail.com,2020-04-01 21:37:02+01:00,e9f8ba9d34cb00ed5dde43b33bcb4c51c248a479,https://github.com/pytorch/audio/commit/e9f8ba9d34cb00ed5dde43b33bcb4c51c248a479,"Add inline typing to SoxEffects (#490)

* add inline typing

* correct typing and docstring

* remove inline typing Any on SoxEffect",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
271,Tomás Osório,tomas.s.osorio@gmail.com,2020-04-02 18:49:02+01:00,eb5b5a02f7f0c94342a69f9eaba73c0d462bed49,https://github.com/pytorch/audio/commit/eb5b5a02f7f0c94342a69f9eaba73c0d462bed49,"[BC breaking] fix issue with VCTK dataset (#484)

* fix issue with VCTK dataset

* update docstring

* filter out folder p315

* add hidden except_folder has hidden variable

* maintain structure

* lint

* remove space

Co-authored-by: Vincent QB <vincentqb@users.noreply.github.com>",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
272,moto,855818+mthrok@users.noreply.github.com,2020-04-02 15:55:22-04:00,413bd18e06b5ea6b77ef15e421c9ec8290f5e44f,https://github.com/pytorch/audio/commit/413bd18e06b5ea6b77ef15e421c9ec8290f5e44f,Extract JIT tests from test_transforms to the dedicated test module (#496),2,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,['class TestTransforms(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['torch.allclose(jit_out, py_out)', 'torch.allclose(jit_out, py_out)']",[],[],[],[],[],[],[],[],[],[],[],[],"['torch.allclose(jit_out, py_out)', 'torch.allclose(jit_out, py_out)']",[],[],[],[],[],[],[],[],[],[],[],[]
273,moto,855818+mthrok@users.noreply.github.com,2020-04-02 18:09:15-04:00,a91cae7c7bf965ecddec0dac77d44543d393da53,https://github.com/pytorch/audio/commit/a91cae7c7bf965ecddec0dac77d44543d393da53,Extract batch test from test_functional and move to the dedicated module (#491),2,False,True,True,True,False,True,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestFunctional(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],['import unittest'],[],[],[],[],[],[],[],[],[],[],[],"['expected.shape == computed.shape, (expected.shape, computed.shape)', 'torch.allclose(expected, computed, **kwargs_compare)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
274,Tomás Osório,tomas.s.osorio@gmail.com,2020-04-02 23:10:59+01:00,0f8fa5f82af47543a68f1d3fb8921f8f9b6b15f8,https://github.com/pytorch/audio/commit/0f8fa5f82af47543a68f1d3fb8921f8f9b6b15f8,"Inline typing Compliance Kaldi (#497)

* first stage

* add inline typing

* Fix typing and Flake8",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
275,moto,855818+mthrok@users.noreply.github.com,2020-04-03 10:23:52-04:00,5cf3e56f8311c6968f5774576a0e3ce314926541,https://github.com/pytorch/audio/commit/5cf3e56f8311c6968f5774576a0e3ce314926541,Extract batch test from test_transforms and move to the dedicated module (#501),2,True,True,True,True,True,False,False,False,True,False,False,False,False,False,False,['assert_migration'],1,0,0,0,0,0,1,0,0,0,0,0,26,0,0,0,0,1,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestTransforms(unittest.TestCase):'],[],[],[],[],[],[')'],[],[],[],[],[],"[('True', '(computed.shape == expected.shape, (computed.shape, expected.shape))'), ('True', '(torch.allclose(computed, expected))'), ('True', '(computed.shape == expected.shape, (computed.shape, expected.shape))'), ('True', '(torch.allclose(computed, expected))'), ('True', '(computed.shape == expected.shape, (computed.shape, expected.shape))'), ('True', '(torch.allclose(computed, expected))'), ('True', '(computed.shape == expected.shape, (computed.shape, expected.shape))'), ('True', '(torch.allclose(computed, expected, atol=1.0))'), ('True', '(computed.shape == expected.shape, (computed.shape, expected.shape))'), ('True', '(torch.allclose(computed, expected))'), ('True', '(computed.shape == expected.shape, (computed.shape, expected.shape))'), ('True', '(torch.allclose(computed, expected))'), ('True', '(computed.shape == expected.shape, (computed.shape, expected.shape))'), ('True', '(torch.allclose(computed, expected))'), ('True', '(computed.shape == expected.shape, (computed.shape, expected.shape))'), ('True', '(torch.allclose(computed, expected))'), ('True', '(computed.shape == expected.shape, (computed.shape, expected.shape))'), ('True', '(torch.allclose(computed, expected))'), ('True', '(computed.shape == expected.shape, (computed.shape, expected.shape))'), ('True', '(torch.allclose(computed, expected, atol=1e-5))'), ('True', '(computed.shape == expected.shape, (computed.shape, expected.shape))'), ('True', '(torch.allclose(computed, expected, atol=1e-5))'), ('True', '(computed.shape == expected.shape, (computed.shape, expected.shape))'), ('True', '(torch.allclose(computed, expected))'), ('True', '(computed.shape == expected.shape, (computed.shape, expected.shape))'), ('True', '(torch.allclose(computed, expected))')]",[],[],[],[],[')'],[],[],[],[],"['computed.shape == expected.shape, (computed.shape, expected.shape)', 'torch.allclose(computed, expected)', 'computed.shape == expected.shape, (computed.shape, expected.shape)', 'torch.allclose(computed, expected)', 'computed.shape == expected.shape, (computed.shape, expected.shape)', 'torch.allclose(computed, expected)', 'computed.shape == expected.shape, (computed.shape, expected.shape)', 'torch.allclose(computed, expected, atol=1.0)', 'computed.shape == expected.shape, (computed.shape, expected.shape)', 'torch.allclose(computed, expected)', 'computed.shape == expected.shape, (computed.shape, expected.shape)', 'torch.allclose(computed, expected)', 'computed.shape == expected.shape, (computed.shape, expected.shape)', 'torch.allclose(computed, expected)', 'computed.shape == expected.shape, (computed.shape, expected.shape)', 'torch.allclose(computed, expected)', 'computed.shape == expected.shape, (computed.shape, expected.shape)', 'torch.allclose(computed, expected)', 'computed.shape == expected.shape, (computed.shape, expected.shape)', 'torch.allclose(computed, expected, atol=1e-5)', 'computed.shape == expected.shape, (computed.shape, expected.shape)', 'torch.allclose(computed, expected, atol=1e-5)', 'computed.shape == expected.shape, (computed.shape, expected.shape)', 'torch.allclose(computed, expected)', 'computed.shape == expected.shape, (computed.shape, expected.shape)', 'torch.allclose(computed, expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
276,moto,855818+mthrok@users.noreply.github.com,2020-04-03 11:20:50-04:00,78a4a027fc75ca4ebc509f051a0930c79e16339e,https://github.com/pytorch/audio/commit/78a4a027fc75ca4ebc509f051a0930c79e16339e,Move SoX filter test to test_functional_filtering (#502),2,False,True,True,True,True,True,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,3,0,0,0,1,0,5,0,0,0,0,3,0,0,0,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(waveform_gain.abs().max().item(), 1.)')]",[],[],[],[],"[')', ')', ')']",[],[],[],['import unittest'],[],"[('True', '(waveform_gain.abs().max().item(), 1.)'), ('True', '(torch.allclose(waveform_gain, sox_gain_waveform, atol=1e-04))'), ('True', '(torch.allclose(waveform_dithered, sox_dither_waveform, atol=1e-04))'), ('True', '(torch.allclose(waveform_dithered_noiseshaped, sox_dither_waveform_ns, atol=1e-02))'), ('True', '(torch.allclose(wf_vctk, wf_vctk_sox, rtol=1e-03, atol=1e-03))')]",[],[],[],[],"[')', ')', ')']",[],[],[],['import unittest'],"['torch.allclose(waveform_gain, sox_gain_waveform, atol=1e-04)', 'torch.allclose(waveform_dithered, sox_dither_waveform, atol=1e-04)', 'torch.allclose(waveform_dithered_noiseshaped, sox_dither_waveform_ns, atol=1e-02)', 'torch.allclose(wf_vctk, wf_vctk_sox, rtol=1e-03, atol=1e-03)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
277,moto,855818+mthrok@users.noreply.github.com,2020-04-03 13:27:47-04:00,606ae3248e2a553aa14fbc69a632dd3db5092b1c,https://github.com/pytorch/audio/commit/606ae3248e2a553aa14fbc69a632dd3db5092b1c,Fix flake8-bugbear lint errors (#505),5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
278,Tomás Osório,tomas.s.osorio@gmail.com,2020-04-03 19:07:32+01:00,9b288109e4691191c024294a55dbe0585c375d72,https://github.com/pytorch/audio/commit/9b288109e4691191c024294a55dbe0585c375d72,"Fix common voice dataset (#498)

* fix download

* fix reading tsv archive

* add new languages

* maintain same structure as other datasets

* update CommonVoice Tests

* fix

* change directory name

* remove extra line",4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
279,moto,855818+mthrok@users.noreply.github.com,2020-04-03 14:26:30-04:00,7ef1178e4b2193a84431c4848aac7c4713e4163c,https://github.com/pytorch/audio/commit/7ef1178e4b2193a84431c4848aac7c4713e4163c,Refactor test_functional module (#503),1,True,True,True,True,True,True,False,False,True,False,False,False,False,False,False,['assert_migration'],4,0,0,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestComputeDeltas(unittest.TestCase):', 'class TestIstft(unittest.TestCase):', 'class TestDetectPitchFrequency(unittest.TestCase):', 'class TestDB_to_amplitude(unittest.TestCase):']",[],[],[],[],[],[],[],[],[],[],['class TestFunctional(unittest.TestCase):'],"[('True', '(computed.shape == expected.shape, (computed.shape, expected.shape))'), ('True', '(sound.shape == estimate.shape, (sound.shape, estimate.shape))'), ('True', '(torch.allclose(sound, estimate, atol=atol, rtol=rtol))')]",[],[],[],[],[],[],[],[],[],"['computed.shape == expected.shape, (computed.shape, expected.shape)', 'torch.allclose(computed, expected)', 'computed.shape == expected.shape, (computed.shape, expected.shape)', 'torch.allclose(computed, expected)', 'sound.shape == estimate.shape, (sound.shape, estimate.shape)', 'torch.allclose(sound, estimate, atol=atol, rtol=rtol)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
280,moto,855818+mthrok@users.noreply.github.com,2020-04-03 14:42:16-04:00,d1adb7f667db69b4ffab99d97ce48d3b3a389800,https://github.com/pytorch/audio/commit/d1adb7f667db69b4ffab99d97ce48d3b3a389800,Enforce flake8 E841 and E821 (#504),6,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(x.allclose(z, rtol=1e-4, atol=1e-4))')]",[],[],[],[],[],[],[],[],[],[],"[('True', '(x.allclose(vol(x_orig), rtol=1e-4, atol=1e-4))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
281,moto,855818+mthrok@users.noreply.github.com,2020-04-03 15:17:40-04:00,21269247f0881c155ffab6910731edca771119c8,https://github.com/pytorch/audio/commit/21269247f0881c155ffab6910731edca771119c8,"Fix incomplete tests in batch and transforms (#506)

* Fix test_compute_deltas_twochannels

* Fix 3batch test helper",2,True,True,True,False,False,False,False,False,True,False,False,False,False,False,False,['assert_migration'],0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],"[('True', '(computed.shape == specgram.shape, (computed.shape, specgram.shape))')]",[],[],[],[],[],[],[],[],[],"['expected.shape == computed.shape, (expected.shape, computed.shape)', 'torch.allclose(expected, computed, **kwargs_compare)', 'computed.shape == expected.shape, (computed.shape, expected.shape)', 'torch.allclose(computed, expected, atol=1e-6, rtol=1e-8)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
282,moto,855818+mthrok@users.noreply.github.com,2020-04-03 15:54:27-04:00,4875007def12f8365724c22e948f87766f6011c4,https://github.com/pytorch/audio/commit/4875007def12f8365724c22e948f87766f6011c4,Extract JIT tests from filter test module and put in JIT test module. (#507),2,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],"['not torch.cuda.is_available(), )']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['torch.allclose(jit_out, py_out)']",[],[],[],[],[],[],[],[],[],[],[],[]
283,Vincent QB,vincentqb@users.noreply.github.com,2020-04-03 18:02:59-04:00,adef7b94531c6a64c8cdb813af0fa300f60b9c53,https://github.com/pytorch/audio/commit/adef7b94531c6a64c8cdb813af0fa300f60b9c53,run tests again. (#509),3,False,True,True,True,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
284,moto,855818+mthrok@users.noreply.github.com,2020-04-03 18:15:39-04:00,04e68471f8f4c480904fbea2c1ee4013556bff27,https://github.com/pytorch/audio/commit/04e68471f8f4c480904fbea2c1ee4013556bff27,"Fix Fade device compatibility (#508)

* Fix Fade device compatibility",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
285,Tomás Osório,tomas.s.osorio@gmail.com,2020-04-06 14:34:20+01:00,3695a0eff1988e2083fc851c8b55784eb17ca4ad,https://github.com/pytorch/audio/commit/3695a0eff1988e2083fc851c8b55784eb17ca4ad,"Datasets inline typing (#511)

* add CommonDataset Inline typing

* inline Typing librispeech

* add inline typing ljspeech

* add inline typing speechcommands

* add inline typing to vctk

* add inline typing yesno

* apply type to __getitem__

Co-authored-by: Vincent QB <vincentqb@users.noreply.github.com>",6,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
286,moto,855818+mthrok@users.noreply.github.com,2020-04-06 14:49:50-04:00,bc1ffb11327251d3dcc29e4693805162d9ead585,https://github.com/pytorch/audio/commit/bc1ffb11327251d3dcc29e4693805162d9ead585,Simplify helper function (#514),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['torch.allclose(expected, computed, atol=atol, rtol=rtol)', 'torch.allclose(expected, computed, atol=atol, rtol=rtol)']",[],[],[],[],[],[],[],[],[],[],[],[],"['torch.allclose(expected, computed, **kwargs_compare)', 'torch.allclose(expected, computed, **kwargs_compare)']",[],[],[],[],[],[],[],[],[],[],[],[]
287,moto,855818+mthrok@users.noreply.github.com,2020-04-06 15:36:21-04:00,5f5df1d649de8504c68ec532195ab1ba3fb54680,https://github.com/pytorch/audio/commit/5f5df1d649de8504c68ec532195ab1ba3fb54680,"Use torch.testing.assert_allclose (#513)

* grep -l 'torch.allclose' -r test | xargs sed -i 's/assert torch.allclose/torch.testing.assert_allclose/g'

* grep -l 'torch.allclose' -r test | xargs sed -i 's/self.assertTrue(torch.allclose(\(.*\)))/torch.testing.assert_allclose(\1)/g'

* Fix missing atol/rtol, wrong shape, argument order. Remove redundant shape assertions",7,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,71,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],"[('True', '(torch.allclose(window, output))'), ('True', '(torch.allclose(y, sound))'), ('True', '(output.shape, kaldi_output.shape)'), ('True', '(torch.allclose(output, kaldi_output, atol=atol, rtol=rtol))'), ('True', '(torch.allclose(ground_truth, estimate, atol=atol, rtol=rtol))'), ('True', '(torch.allclose(multi_sound_sampled[i, :], single_channel_sampled, rtol=1e-4))'), ('True', '(torch.allclose(torch.abs(x), x2, atol=5e-5))'), ('True', '(torch.allclose(spec, x2, atol=5e-5))'), ('True', '(torch.allclose(torch.abs(x), x2, atol=5e-5))'), ('True', '(torch.allclose(spec, x2, atol=5e-5))'), ('True', '(torch.allclose(mag_to_db_torch, power_to_db_torch))'), ('True', '(torch.allclose(fb, fb_copy))'), ('True', '(torch.allclose(window, window_copy))'), ('True', '(torch.allclose(fb, fb_copy))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['expected.shape == computed.shape, (expected.shape, computed.shape)', 'torch.allclose(expected, computed, atol=atol, rtol=rtol)', 'expected.shape == computed.shape, (expected.shape, computed.shape)', 'torch.allclose(expected, computed, atol=atol, rtol=rtol)', 'computed.shape == expected.shape, (computed.shape, expected.shape)', 'torch.allclose(computed, expected)', 'computed.shape == expected.shape, (computed.shape, expected.shape)', 'torch.allclose(computed, expected)', 'computed.shape == expected.shape, (computed.shape, expected.shape)', 'torch.allclose(computed, expected)', 'computed.shape == expected.shape, (computed.shape, expected.shape)', 'torch.allclose(computed, expected, atol=1.0)', 'computed.shape == expected.shape, (computed.shape, expected.shape)', 'torch.allclose(computed, expected)', 'computed.shape == expected.shape, (computed.shape, expected.shape)', 'torch.allclose(computed, expected)', 'computed.shape == expected.shape, (computed.shape, expected.shape)', 'torch.allclose(computed, expected)', 'computed.shape == expected.shape, (computed.shape, expected.shape)', 'torch.allclose(computed, expected)', 'computed.shape == expected.shape, (computed.shape, expected.shape)', 'torch.allclose(computed, expected)', 'computed.shape == expected.shape, (computed.shape, expected.shape)', 'torch.allclose(computed, expected, atol=1e-5)', 'computed.shape == expected.shape, (computed.shape, expected.shape)', 'torch.allclose(computed, expected, atol=1e-5)', 'computed.shape == expected.shape, (computed.shape, expected.shape)', 'torch.allclose(computed, expected)', 'computed.shape == expected.shape, (computed.shape, expected.shape)', 'torch.allclose(computed, expected)', 'computed.shape == expected.shape, (computed.shape, expected.shape)', 'torch.allclose(computed, expected)', 'computed.shape == expected.shape, (computed.shape, expected.shape)', 'torch.allclose(computed, expected)', 'sound.shape == estimate.shape, (sound.shape, estimate.shape)', 'torch.allclose(sound, estimate, atol=atol, rtol=rtol)', 'torch.allclose(expected_norm_tensor, norm_tensor, atol=1e-5)', 'torch.allclose(waveform[:, 0:-3], output_waveform[:, 3:], atol=1e-5)', 'torch.allclose(waveform_gain, sox_gain_waveform, atol=1e-04)', 'torch.allclose(waveform_dithered, sox_dither_waveform, atol=1e-04)', 'torch.allclose(waveform_dithered_noiseshaped, sox_dither_waveform_ns, atol=1e-02)', 'torch.allclose(wf_vctk, wf_vctk_sox, rtol=1e-03, atol=1e-03)', 'torch.allclose(sox_output_waveform, output_waveform, atol=1e-4)', 'torch.allclose(sox_output_waveform, output_waveform, atol=1e-3)', 'torch.allclose(sox_output_waveform, output_waveform, atol=1e-4)', 'torch.allclose(sox_output_waveform, output_waveform, atol=1e-4)', 'torch.allclose(sox_output_waveform, output_waveform, atol=1e-4)', 'torch.allclose(sox_output_waveform, output_waveform, atol=1e-4)', 'torch.allclose(sox_output_waveform, output_waveform, atol=1e-4)', 'torch.allclose(sox_output_waveform, output_waveform, atol=1e-4)', 'torch.allclose(sox_output_waveform, output_waveform, atol=1e-4)', 'torch.allclose(sox_output_waveform, output_waveform, atol=1e-4)', 'torch.allclose(sox_output_waveform, output_waveform, atol=1e-4)', 'torch.allclose(sox_output_waveform, output_waveform, atol=1e-4)', 'torch.allclose(waveform_sox_out, waveform_lfilter_out, atol=1e-4)', 'torch.allclose(ta_out, lr_out, atol=5e-5)', 'torch.allclose(fb[:, i_mel_bank], torch.tensor(librosa_fb[i_mel_bank]), atol=1e-4)', 'torch.allclose(ta_out, lr_out, atol=5e-5)', 'torch.allclose(ta_out, lr_out, atol=5e-5)', 'torch.allclose(out_torch, torch.from_numpy(out_librosa), atol=1e-5)', 'torch.allclose(', 'torch.allclose(power_to_db_torch, torch.from_numpy(power_to_db_librosa), atol=5e-3)', 'torch.allclose(mag_to_db_torch, torch.from_numpy(mag_to_db_librosa), atol=5e-3)', 'torch.allclose(', 'torch.allclose(', 'torch.allclose(melspec_ta, torch.from_numpy(melspec_lr[None, ...]), rtol=1e-3)', 'torch.allclose(spec_ta, spec_lr, atol=threshold)', 'torch.allclose(jit_out, py_out)', 'torch.allclose(jit_out, py_out)', 'torch.allclose(jit_out, py_out)', 'torch.allclose(computed, expected, atol=1e-6, rtol=1e-8)']",[],[],[],[],[],[],[],[],[],[],[],[]
288,moto,855818+mthrok@users.noreply.github.com,2020-04-06 17:24:03-04:00,f37d37d628f507003eee7564facbf28e0bb9536d,https://github.com/pytorch/audio/commit/f37d37d628f507003eee7564facbf28e0bb9536d,Fix GPU test skip logic (#516),1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],"['not torch.cuda.is_available(), )', 'not torch.cuda.is_available(), )']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
289,moto,855818+mthrok@users.noreply.github.com,2020-04-07 09:35:03-04:00,86d54160fbf94f1385952a35d832be86d5ba9be8,https://github.com/pytorch/audio/commit/86d54160fbf94f1385952a35d832be86d5ba9be8,"Use fused op in lfilter (#517)

This improves the speed of `lfilter` (and functions that use `lfilter`, such as `biquad`) by 10%.

* Before (23.4369 seconds for `lfilter` call)

Breakdown

```
   720|    220501|       4.4464|   2.0165e-05| 18.97%|    for i_sample, o0 in enumerate(input_signal_windows.t()):
(call)|         1|  7.86781e-05|  7.86781e-05|  0.00%|# /scratch/moto/pytorch/torch/tensor.py:460 __iter__
(call)|    220500|      2.72458|  1.23564e-05| 11.62%|# /scratch/moto/pytorch/torch/tensor.py:474 <lambda>
   721|    220500|      2.80982|   1.2743e-05| 11.99%|        windowed_output_signal = padded_output_waveform[:, i_sample:(i_sample + n_order)]
   722|    220500|      4.92106|  2.23177e-05| 21.00%|        o0.sub_(torch.mv(windowed_output_signal, a_coeffs_flipped))
   723|    220500|      3.72974|  1.69149e-05| 15.91%|        o0.div_(a_coeffs[0])
   724|         0|            0|            0|  0.00%|
   725|    220500|      4.77714|   2.1665e-05| 20.38%|        padded_output_waveform[:, i_sample + n_order - 1] = o0
```

* After (20.8405 seconds for `lfilter` call)

Breakdown

```
   720|    220501|      4.40834|  1.99924e-05| 21.15%|    for i_sample, o0 in enumerate(input_signal_windows.t()):
(call)|         1|  7.31945e-05|  7.31945e-05|  0.00%|# /scratch/moto/pytorch/torch/tensor.py:460 __iter__
(call)|    220500|      2.68595|  1.21812e-05| 12.89%|# /scratch/moto/pytorch/torch/tensor.py:474 <lambda>
   721|    220500|      2.97357|  1.34856e-05| 14.27%|        windowed_output_signal = padded_output_waveform[:, i_sample:(i_sample + n_order)]
   722|    220500|      2.63567|  1.19531e-05| 12.65%|        o0.addmv_(windowed_output_signal, a_coeffs_flipped)
   723|    220500|       3.4228|  1.55229e-05| 16.42%|        o0.div_(a_coeffs[0])
   724|         0|            0|            0|  0.00%|
   725|    220500|      4.68726|  2.12574e-05| 22.49%|        padded_output_waveform[:, i_sample + n_order - 1] = o0
```

* Script

```python
import pprofile

import torch
import torchaudio
import torchaudio.functional as F

def profile_biquad():
    waveform, sr = torchaudio.load('test/assets/100Hz_44100Hz_16bit_05sec.wav', normalization=True)

    prof = pprofile.Profile()
    with prof():
        F.equalizer_biquad(waveform, sr, 3000, 1, 0.707)
    prof.print_stats()

profile_biquad()
```

* See also

https://github.com/pytorch/audio/issues/260#issuecomment-610074110",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
290,moto,855818+mthrok@users.noreply.github.com,2020-04-07 11:22:58-04:00,657f0a0271c5e7f1ae86e2ab6a2a26305b8fc198,https://github.com/pytorch/audio/commit/657f0a0271c5e7f1ae86e2ab6a2a26305b8fc198,Refactor batch test helper function (#519),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
291,moto,855818+mthrok@users.noreply.github.com,2020-04-07 15:21:34-04:00,a9c4d0a8b0cd94a3a812786d5354314a6c081700,https://github.com/pytorch/audio/commit/a9c4d0a8b0cd94a3a812786d5354314a6c081700,Refactor torchscript test helper function (#521),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['jit_out.shape == py_out.shape, (jit_out.shape, py_out.shape)']",[],[],[],[],[],[],[],[],[],[],[],[],['jit_out.shape == py_out.shape'],[],[],[],[],[],[],[],[],[],[],[],[]
292,Tomás Osório,tomas.s.osorio@gmail.com,2020-04-07 23:09:55+01:00,4e5ee9f17d68a07ce40116b4c1b51b56100688e6,https://github.com/pytorch/audio/commit/4e5ee9f17d68a07ce40116b4c1b51b56100688e6,"Inline typing utils dataset (#522)

* add inline typing to utils Dataset

* add inline typing to common_utils

* add missing inline typing

* add typing to kwarg

* add missing inline typing

* update docstring

* undo indentation

Co-authored-by: Vincent QB <vincentqb@users.noreply.github.com>",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
293,Tomás Osório,tomas.s.osorio@gmail.com,2020-04-08 22:44:55+01:00,98fe8b46af5582f602f58ca9f9633393f6a931a7,https://github.com/pytorch/audio/commit/98fe8b46af5582f602f58ca9f9633393f6a931a7,"Add mypy Config File (#524)

* add config

* remove unnecessary",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
294,Tomás Osório,tomas.s.osorio@gmail.com,2020-04-09 19:45:07+01:00,c29598d54185d73b4ed04103330573e190bbdb69,https://github.com/pytorch/audio/commit/c29598d54185d73b4ed04103330573e190bbdb69,"Inline typing _backend (#527)

* add inline typing

* fix error

* minor change

* minor fix",3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
295,moto,855818+mthrok@users.noreply.github.com,2020-04-09 15:27:47-04:00,b5b6d30f88116bb1b71dc3f158f0607825c6b37f,https://github.com/pytorch/audio/commit/b5b6d30f88116bb1b71dc3f158f0607825c6b37f,Separate CPU and GPU tests for Transforms torchscript test (#520),1,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],"['not torch.cuda.is_available(), )']",[],[],[],[],['class TestTransforms(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
296,Joseph Spisak,spisakjo@gmail.com,2020-04-09 12:50:46-07:00,d47f42a35ccc54c19e9adcd4dff2b6ad8f568c01,https://github.com/pytorch/audio/commit/d47f42a35ccc54c19e9adcd4dff2b6ad8f568c01,Create CODE_OF_CONDUCT.md (#450),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
297,moto,855818+mthrok@users.noreply.github.com,2020-04-09 17:06:36-04:00,d41d30abb91962742df8518e2dcdd49520e14375,https://github.com/pytorch/audio/commit/d41d30abb91962742df8518e2dcdd49520e14375,"Separate CPU and GPU tests for functions torchscript test + Fix devices in two functionals (#528)

* Separate CPU and GPU tests for functions torchscript test

* fix indentation

Co-authored-by: Vincent QB <vincentqb@users.noreply.github.com>",2,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,1,2,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],"['not torch.cuda.is_available(), )']","['()', '()']",[],[],[],['class TestFunctional(unittest.TestCase):'],[],[],[],[],[],"['not torch.cuda.is_available(), )']",[],[],[],[],"['ts_output.shape == output.shape, (ts_output.shape, output.shape)']",[],[],[],[],[],[],[],[],[],[],[],[],"['jit_out.shape == py_out.shape, (jit_out.shape, py_out.shape)']",[],[],[],[],[],[],[],[],[],[],[],[]
298,moto,855818+mthrok@users.noreply.github.com,2020-04-09 17:07:24-04:00,60a5b27308989e5ccd2bd4154b583f233d348d71,https://github.com/pytorch/audio/commit/60a5b27308989e5ccd2bd4154b583f233d348d71,Set manual seed in mask_along_axis_iid (#529),1,False,True,True,False,False,True,False,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[''],"['parametrize(, [']","['mark.parametrize(, [']",[],[],[]
299,Tomás Osório,tomas.s.osorio@gmail.com,2020-04-13 15:57:07+01:00,9bdaefc8a685389c26b9775e219a785ba5d7e1cc,https://github.com/pytorch/audio/commit/9bdaefc8a685389c26b9775e219a785ba5d7e1cc,add inline Typing (#530),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
300,moto,855818+mthrok@users.noreply.github.com,2020-04-13 13:22:07-04:00,21558490114b9560af17b113b423e21b90f6fcc3,https://github.com/pytorch/audio/commit/21558490114b9560af17b113b423e21b90f6fcc3,Fix test backend initialization (#537),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
301,moto,855818+mthrok@users.noreply.github.com,2020-04-13 14:58:20-04:00,d45699f4a5ee67884f44c2862ea59b43a2c0430c,https://github.com/pytorch/audio/commit/d45699f4a5ee67884f44c2862ea59b43a2c0430c,"Make test module name descriptive (#532)

* Make test module name descriptive

* Rename test_functional_filtering to test_sox_compatibility",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
302,moto,855818+mthrok@users.noreply.github.com,2020-04-14 10:40:15-04:00,f3217257decdf2f26568b54207beaffd7bc4c439,https://github.com/pytorch/audio/commit/f3217257decdf2f26568b54207beaffd7bc4c439,"Run test against PyTorch nightly on Travis CI (#538)

* Update requirements and travis installation

* Drop support for 3.5 and add test for 3.8",4,False,False,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
303,moto,855818+mthrok@users.noreply.github.com,2020-04-14 10:40:48-04:00,6304db75ddbca36b1ec1affc198b735c816d8a7c,https://github.com/pytorch/audio/commit/6304db75ddbca36b1ec1affc198b735c816d8a7c,"Call torch.stft directly (#531)

* Update requirements and travis installation

* Drop support for 3.5 and add test for 3.8

* Call torch.stft directly",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
304,moto,855818+mthrok@users.noreply.github.com,2020-04-14 10:42:29-04:00,af88b9259c284e6d8dc2973514aa826aa293ba96,https://github.com/pytorch/audio/commit/af88b9259c284e6d8dc2973514aa826aa293ba96,Move lfilter basic test to test_functional (#539),2,False,True,True,True,True,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],"['not torch.cuda.is_available(), )']",[],[],[],[],[],[],[],[],[],[],"['not torch.cuda.is_available(), )']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
305,Tomás Osório,tomas.s.osorio@gmail.com,2020-04-14 15:48:15+01:00,3383a2d93ea5e60fae692863f1c472d9d845dffe,https://github.com/pytorch/audio/commit/3383a2d93ea5e60fae692863f1c472d9d845dffe,"Inline typing init (#526)

* inline typing first iteration

* fix issue with mypy

* change docstring

* add more typing

* fix to not break BC

* update docstrings",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
306,moto,855818+mthrok@users.noreply.github.com,2020-04-14 10:50:00-04:00,0fa0759530204840b4a399911b6064d29630ec4d,https://github.com/pytorch/audio/commit/0fa0759530204840b4a399911b6064d29630ec4d,"Remove duplicated lfilter tests (#541)

This lfilter tests were moved to `test_torchscript_consistency.py` in #507 and GPU tests were added in #528.
We can safely remove this tests from `test_functional_filtering.py`.",1,False,True,True,False,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['not torch.cuda.is_available(), )']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(output_waveform.size()) == 2', 'output_waveform.size(0) == waveform.size(0)', 'output_waveform.size(1) == waveform.size(1)']",[],[],[],[],[],[],[],[],[],[],[],[]
307,moto,855818+mthrok@users.noreply.github.com,2020-04-14 11:42:08-04:00,0e5581cb2a9616205a00cbabf4c9a30613a1037f,https://github.com/pytorch/audio/commit/0e5581cb2a9616205a00cbabf4c9a30613a1037f,"Simplify and abstract away asset access in test (#542)

This PR aims the following things;
1. Introduce and adopt helper function `get_asset_path` that abstract the logic to construct path to test assets.
2. Remove `create_temp_assets_dir` anywhere except `test_io`.

The benefits of doing so are,
a. the test code becomes simpler (no manual construction of asset path with `os.path.join`)
b. No unnecessary directory creation and file copies.

For 2. and b. tests in `test_io.py` (or tests that use `torchaudio.save`) are the only tests that need to write file to the disc, where the use of temporary directory makes it cleaner, therefore, `create_temp_assets_dir` is not necessary elsewhere. (still, `test_io` does not need to copy the entire asset directory, but that's not the point here.)

Also if any test is accidentally overwriting an asset data, not using a copy will make us aware of such behavior, so it is better to get rid of `create_temp_assets_dir`.",12,False,True,True,True,True,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],['import unittest'],[],[],[],[],[],[],[],[],[],[],['import unittest'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
308,Vincent QB,vincentqb@users.noreply.github.com,2020-04-14 19:21:14-04:00,8c05bfab593a976f41733790dd7c51c75b07e86d,https://github.com/pytorch/audio/commit/8c05bfab593a976f41733790dd7c51c75b07e86d,Fixes #545 (#547),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
309,Vincent QB,vincentqb@users.noreply.github.com,2020-04-15 10:30:56-04:00,5a75b63f1a6b4fcfe7f500bf2f6955607018d313,https://github.com/pytorch/audio/commit/5a75b63f1a6b4fcfe7f500bf2f6955607018d313,add pre flag. (#552),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
310,moto,855818+mthrok@users.noreply.github.com,2020-04-16 11:26:37-04:00,0fafcb3eeca2c260c83366f585c1398ad6b7a6b7,https://github.com/pytorch/audio/commit/0fafcb3eeca2c260c83366f585c1398ad6b7a6b7,Bump master version to 0.6.0 (#556),3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
311,Bhargav Kathivarapu,bhargavkathivarapu31@gmail.com,2020-04-17 01:07:11+05:18,8a742e0f5588a5901ff5b20cbd809d295ffb1848,https://github.com/pytorch/audio/commit/8a742e0f5588a5901ff5b20cbd809d295ffb1848,"Add contrast to functional (#551)

* Add contrast to functional

* add tests for contrast and update functional.rst

* Minor changes to sox and batch tests for contrast",5,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[')'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
312,wanglong001,406134592@qq.com,2020-04-17 23:23:08+08:00,b42d61002091b7387078943be1a9594125787d10,https://github.com/pytorch/audio/commit/b42d61002091b7387078943be1a9594125787d10,"add cmvn (#540)

* add cmvn

* Update transforms.rst

add cmvn

* Correct the format

* Correct the format

* Correct the format

* add test unit and cmvn change to cmn

* fix bug

Co-authored-by: Vincent QB <vincentqb@users.noreply.github.com>",5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
313,Bhargav Kathivarapu,bhargavkathivarapu31@gmail.com,2020-04-17 21:38:33+05:18,84c494dd51797201b47159885a6c0d1a35fc8fb8,https://github.com/pytorch/audio/commit/84c494dd51797201b47159885a6c0d1a35fc8fb8,Fix sox tests variable names (#559),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
314,moto,855818+mthrok@users.noreply.github.com,2020-04-17 13:38:54-04:00,fc2537e7f928e3d7e5d836b6e5d910bc31e11d6f,https://github.com/pytorch/audio/commit/fc2537e7f928e3d7e5d836b6e5d910bc31e11d6f,Make batch test backend-agnostic (#561),1,False,True,True,False,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[')'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
315,Bhargav Kathivarapu,bhargavkathivarapu31@gmail.com,2020-04-20 19:27:13+05:18,91e59231381e33be2b0c9b69b1878cb84eb815f2,https://github.com/pytorch/audio/commit/91e59231381e33be2b0c9b69b1878cb84eb815f2,"Add dcshift to functional (#558)

* Add dcshift to functional

* Doc string change and remove inplace clamp

* Minor Fix to dcshit and separate sox test refactoring

* Minor change to limiter_gain type

* adding dcshift to __all__ in functional",5,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],"[')', ')']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
316,moto,855818+mthrok@users.noreply.github.com,2020-04-20 11:05:09-04:00,66d3e3fa9625b6e92acf18e41306d776ac384f8c,https://github.com/pytorch/audio/commit/66d3e3fa9625b6e92acf18e41306d776ac384f8c,Remove unused helper function (#565),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
317,moto,855818+mthrok@users.noreply.github.com,2020-04-20 11:08:21-04:00,27a0f7653bc2918e314b4225782d2b29ef31ae4a,https://github.com/pytorch/audio/commit/27a0f7653bc2918e314b4225782d2b29ef31ae4a,"Improve lfilter speed (#564)

Before

Total time: 13.7078

```
   722|    220501|      2.44247|  1.10769e-05| 17.82%|    for i_sample, o0 in enumerate(input_signal_windows.t()):
(call)|         1|  6.36578e-05|  6.36578e-05|  0.00%|# /scratch/moto/pytorch/torch/tensor.py:460 __iter__
(call)|    220500|      1.60566|  7.28191e-06| 11.71%|# /scratch/moto/pytorch/torch/tensor.py:474 <lambda>
   723|    220500|      1.86697|  8.46698e-06| 13.62%|        windowed_output_signal = padded_output_waveform[:, i_sample:(i_sample + n_order)]
   724|    220500|      1.94628|  8.82669e-06| 14.20%|        o0.addmv_(windowed_output_signal, a_coeffs_flipped, alpha=-1)
   725|    220500|         2.46|  1.11565e-05| 17.94%|        o0.div_(a_coeffs[0])
   726|         0|            0|            0|  0.00%|
   727|    220500|      3.37869|  1.53229e-05| 24.64%|        padded_output_waveform[:, i_sample + n_order - 1] = o0
```

After

Total time: 10.9667

```
   722|         1|   9.2268e-05|   9.2268e-05|  0.00%|    input_signal_windows.div_(a_coeffs[0])
   723|         1|  2.14577e-05|  2.14577e-05|  0.00%|    a_coeffs_flipped.div_(a_coeffs[0])
   724|    220501|      2.40216|  1.08941e-05| 21.90%|    for i_sample, o0 in enumerate(input_signal_windows.t()):
(call)|         1|  5.84126e-05|  5.84126e-05|  0.00%|# /scratch/moto/pytorch/torch/tensor.py:460 __iter__
(call)|    220500|      1.59821|   7.2481e-06| 14.57%|# /scratch/moto/pytorch/torch/tensor.py:474 <lambda>
   725|    220500|      1.82273|  8.26633e-06| 16.62%|        windowed_output_signal = padded_output_waveform[:, i_sample:(i_sample + n_order)]
   726|    220500|      1.84074|  8.34802e-06| 16.78%|        o0.addmv_(windowed_output_signal, a_coeffs_flipped, alpha=-1)
   727|    220500|       3.2952|  1.49442e-05| 30.05%|        padded_output_waveform[:, i_sample + n_order - 1] = o0
```",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
318,Bhargav Kathivarapu,bhargavkathivarapu31@gmail.com,2020-04-21 07:27:31+05:18,c53ceb843b4fa893ef81659a0d8838e12622caaf,https://github.com/pytorch/audio/commit/c53ceb843b4fa893ef81659a0d8838e12622caaf,"Add datasets checksum (#499)

* add checksums

* checksum function changes

* function Docstring change

* checksums moved to Dataset Modules",6,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
319,Tomás Osório,tomas.s.osorio@gmail.com,2020-04-21 15:57:52+01:00,9d40302d5b6684c7bbfdc4017764c324a556ecc5,https://github.com/pytorch/audio/commit/9d40302d5b6684c7bbfdc4017764c324a556ecc5,"Fix inline typing for mypy (#544)

* fix inline typing for mypy

* fix flake8

* change check position

* fix for py3.5

* fix for py3.5

* change to inline typing

* add inline typing",6,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
320,moto,855818+mthrok@users.noreply.github.com,2020-04-22 10:13:01-04:00,38287a753826aa7f841823220230e521974a40b8,https://github.com/pytorch/audio/commit/38287a753826aa7f841823220230e521974a40b8,Only initialize sox once and never shutdown in test (#562),3,False,True,True,False,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"[('Class', '(cls)'), ('Class', '(cls)')]",[')'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
321,moto,855818+mthrok@users.noreply.github.com,2020-04-22 14:22:21-04:00,954d5121ca3236fdae3702becb76cb5b78d6e163,https://github.com/pytorch/audio/commit/954d5121ca3236fdae3702becb76cb5b78d6e163,Make sliding_window_cmn batch-aware (#570),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
322,Bhargav Kathivarapu,bhargavkathivarapu31@gmail.com,2020-04-23 02:34:59+05:18,e7cb18c10b7b15e11b4c0f7994ad62379debdc38,https://github.com/pytorch/audio/commit/e7cb18c10b7b15e11b4c0f7994ad62379debdc38,"Add overdrive to functional (#569)

* Add overdrive to functional

* Minor change to overdrive

* Minor change to overdrive

* minor flake8 changes

* changes to make overdrive generic

Co-authored-by: Vincent QB <vincentqb@users.noreply.github.com>",5,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[')'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
323,moto,855818+mthrok@users.noreply.github.com,2020-04-23 13:08:08-04:00,33414c74d698e6e7565798c01026940b182f5578,https://github.com/pytorch/audio/commit/33414c74d698e6e7565798c01026940b182f5578,Remove Python2.7 related code from CircleCI settings (#575),3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
324,moto,855818+mthrok@users.noreply.github.com,2020-04-23 19:34:27-04:00,14cc5c0599c01d1406a1a5edcab944ad436cfaba,https://github.com/pytorch/audio/commit/14cc5c0599c01d1406a1a5edcab944ad436cfaba,Stop build binary for Python3.5 (#577),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
325,moto,855818+mthrok@users.noreply.github.com,2020-04-24 10:18:02-04:00,a47dca4f4e6297396ea863554f820ecc85db1300,https://github.com/pytorch/audio/commit/a47dca4f4e6297396ea863554f820ecc85db1300,"Run unit test on CCI (#576)

* wip

* Add test

* add caching

* fixup! add caching

* fixup! fixup! add caching",8,False,True,True,True,True,True,True,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[')'],[],[],[],[],[],[],[],[],[],[],[''],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
326,Vincent QB,vincentqb@users.noreply.github.com,2020-04-24 11:50:23-04:00,9cd126a9ac823d05b59f3e7bda9e6ef3c5fd4fab,https://github.com/pytorch/audio/commit/9cd126a9ac823d05b59f3e7bda9e6ef3c5fd4fab,do not offer sox as a backend in windows. (#579),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
327,moto,855818+mthrok@users.noreply.github.com,2020-04-24 12:07:31-04:00,fe55a83b2df685b86095d1adb72b0b9be256a862,https://github.com/pytorch/audio/commit/fe55a83b2df685b86095d1adb72b0b9be256a862,"Fix smoke test image (#582)

Nightly smoke test is failing for Python 3.8 as conda environment does not exist.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
328,moto,855818+mthrok@users.noreply.github.com,2020-04-24 13:00:00-04:00,b7dbdc6d92410dd4d272e956eeed3757e2f20094,https://github.com/pytorch/audio/commit/b7dbdc6d92410dd4d272e956eeed3757e2f20094,Fix misconfigured nightly job (#583),2,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
329,moto,855818+mthrok@users.noreply.github.com,2020-04-24 15:41:46-04:00,60f0916ee1ebac03b62a9cd132859eae7c2a5f2c,https://github.com/pytorch/audio/commit/60f0916ee1ebac03b62a9cd132859eae7c2a5f2c,Store test result on CCI (#584),3,False,False,True,False,False,True,True,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
330,moto,855818+mthrok@users.noreply.github.com,2020-04-24 16:41:26-04:00,e5d99ed31a6aa0169777ea60fa3ffd3422558356,https://github.com/pytorch/audio/commit/e5d99ed31a6aa0169777ea60fa3ffd3422558356,"Handle SoX init/shutdown automatically (#572)

* Add safeguard to SoX initialization/shutdown

* Initialize SoX automatically when it's needed",5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],"[('Class', '(cls)'), ('Class', '(cls)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
331,moto,855818+mthrok@users.noreply.github.com,2020-04-24 20:43:17-04:00,6bc591ec7995481a483079a8b71f5c923e8e0ace,https://github.com/pytorch/audio/commit/6bc591ec7995481a483079a8b71f5c923e8e0ace,Enable coverage report (#585),5,False,False,True,True,False,True,True,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
332,Vincent QB,vincentqb@users.noreply.github.com,2020-04-27 10:42:42-04:00,3012050d4dfaafcaffbe9ee9a8512f6e89136f7e,https://github.com/pytorch/audio/commit/3012050d4dfaafcaffbe9ee9a8512f6e89136f7e,"Update documentation (#568)

* formatting.

* update datasets.",3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
333,moto,855818+mthrok@users.noreply.github.com,2020-04-28 09:24:25-04:00,bc82ffe2b468d1966d5088ef40256cf58cfdf41b,https://github.com/pytorch/audio/commit/bc82ffe2b468d1966d5088ef40256cf58cfdf41b,Move smoke test Dockerfile to dedicated directory (#591),3,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
334,Artyom Astafurov,artyom.astafurov@gmail.com,2020-04-28 13:09:07-04:00,3ecc7016d2afcee2dd9e6ebbc1351ad2dd30a6a5,https://github.com/pytorch/audio/commit/3ecc7016d2afcee2dd9e6ebbc1351ad2dd30a6a5,"Port sox::vad (#578)

* initial test, stub function, transform and docstring

* add draft working implementation, update docstrings

* merge VadSate into Vad calss, move Channel into Vad class

* remove functional stub for vad

* add wav file for test

* refactor _measure() to improve performance

* rename argument

* replace copy_ with assignment

* refactor init, update documentation, update test for readability

* clean up default values

* move code from transforms.py to funtional.py and integrate state into a function

* remove Channel state class

* fix calcuation of a flush point

* make multiple channels work

* clean up multi-channel, update test

* rename variables and re-org arguments for _measure

* fix linting errors

* add torchscript consistency test and fix errors

* support and test batch consistency, fix normalization

* update documentation, switch torchscript consistancy test to use transform to improve coverage

* fix linting errors

* remove un-used imports

* address PR comments

* add doc references into rst",9,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(x.allclose(y, rtol=1e-4, atol=1e-4))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
335,Tomás Osório,tomas.s.osorio@gmail.com,2020-04-28 20:53:59+01:00,d678357f06ff45eaf020f31c0147cd4c113347de,https://github.com/pytorch/audio/commit/d678357f06ff45eaf020f31c0147cd4c113347de,"Add model Wav2Letter (#462)

* add wav2letter model

* add unit_test to model

* add docstrings

* add documentation

* fix minor error, change logic on forward

* update padding same with ceil

* add inline typing and minor fixes to docstrings

* remove python2

* add formula do docstrings, change param name

* add test with mfcc, add pytest

* fix bug, update docstrings

* change parameter name",4,False,True,False,False,False,True,True,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,8,8,8,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['out.size() == (batch_size, num_classes, 2)', 'out.size() == (batch_size, num_classes, 2)']",[],[],[],[],[],[],"['(, [2])', '(, [1])', '(, [40])', '(, [320])', '(, [2])', '(, [13])', '(, [40])', '(, [2])']","['parametrize(, [2])', 'parametrize(, [1])', 'parametrize(, [40])', 'parametrize(, [320])', 'parametrize(, [2])', 'parametrize(, [13])', 'parametrize(, [40])', 'parametrize(, [2])']","['mark.parametrize(, [2])', 'mark.parametrize(, [1])', 'mark.parametrize(, [40])', 'mark.parametrize(, [320])', 'mark.parametrize(, [2])', 'mark.parametrize(, [13])', 'mark.parametrize(, [40])', 'mark.parametrize(, [2])']",[],[],['import pytest'],[],[],[],[],[],[],[],[],[],[],[],[],[]
336,cpuhrsch,cpuhrsch@fb.com,2020-04-29 01:17:40-04:00,1305782983c2b86024dd09033fbe65c7de964d79,https://github.com/pytorch/audio/commit/1305782983c2b86024dd09033fbe65c7de964d79,"Revert ""replace reshape by view. (#409)"" (#594)

This reverts commit 60fd113c6e90defd45fd62d8a38b573f9ccf826c.",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
337,moto,855818+mthrok@users.noreply.github.com,2020-04-29 12:08:25-04:00,9ceb96c0c5edbae4b5f5e2701f4bc702af96b087,https://github.com/pytorch/audio/commit/9ceb96c0c5edbae4b5f5e2701f4bc702af96b087,"Add base test image with Kaldi featbin and codecs (#581)

* Add test image with Kaldi executable and third_parties

* Use Ubuntu as bese image since pytorch/many-linux is huge",14,False,False,True,True,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
338,moto,855818+mthrok@users.noreply.github.com,2020-04-29 12:40:05-04:00,20689b7fdd2588efc401c1786f104a9a119f47fc,https://github.com/pytorch/audio/commit/20689b7fdd2588efc401c1786f104a9a119f47fc,Add Kaldi compatibility tests for sliding_window_cmn (#560),1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],['_exe_exists()'],[],[],[],['import unittest'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
339,moto,855818+mthrok@users.noreply.github.com,2020-04-29 17:37:38-04:00,2ebbbf511fb1e6c47b59fd32ad7e66023fa0dff1,https://github.com/pytorch/audio/commit/2ebbbf511fb1e6c47b59fd32ad7e66023fa0dff1,Run flake8 in CCI unittest (#598),1,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
340,Artyom Astafurov,asta@fb.com,2020-04-30 10:09:04-04:00,b457cb711a9a849b1226ede93ae247cd1e06eddf,https://github.com/pytorch/audio/commit/b457cb711a9a849b1226ede93ae247cd1e06eddf,update audio samples for vad testing (#599),7,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
341,Jan Schlüter,github@jan-schlueter.de,2020-04-30 17:44:43+02:00,fe30f30f319bf3edd0b70d9b5a1e44a84f99f3f3,https://github.com/pytorch/audio/commit/fe30f30f319bf3edd0b70d9b5a1e44a84f99f3f3,"Allow zero momentum in Griffin-Lim (#601)

* Allow zero momentum in Griffin-Lim

* Skip momentum in Griffin-Lim if zero",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
342,Ryuichi Yamamoto,zryuichi@gmail.com,2020-05-01 00:57:45+09:00,0fcb0c07537c0c2fd7294b9c5b3c4a30d4190268,https://github.com/pytorch/audio/commit/0fcb0c07537c0c2fd7294b9c5b3c4a30d4190268,"lfilter: add an optional arg `clamp` (#600)

* lfilter: add an optional arg `clamp`

to give users control on the clamping behavior within the range [-1, 1],
which was hardcoded before.

Fixes #596

* doc string formatting

* lint

* doc string again

Co-authored-by: Vincent QB <vincentqb@users.noreply.github.com>",2,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(output_signal.max() <= 1)'), ('True', '(output_signal.max() > 1)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
343,moto,855818+mthrok@users.noreply.github.com,2020-05-01 12:57:26-04:00,ff1c6537d3d19c7c82d26ee0b9ff615a3eeb3276,https://github.com/pytorch/audio/commit/ff1c6537d3d19c7c82d26ee0b9ff615a3eeb3276,"Add README for test (#566)

* Add README for test

* Apply review feedback

* Add description to test_dataloader",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
344,Bhargav Kathivarapu,bhargavkathivarapu31@gmail.com,2020-05-01 23:51:21+05:18,8e8135965d9ff4e3feb881ed087c970bf65c7b0c,https://github.com/pytorch/audio/commit/8e8135965d9ff4e3feb881ed087c970bf65c7b0c,"Add phaser to functional (#587)

Signed-off-by: Bhargav Kathivarapu <bhargavkathivarapu31@gmail.com>",5,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],"[')', ')']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
345,moto,855818+mthrok@users.noreply.github.com,2020-05-01 19:55:56-04:00,51a67867fbce20992ead55e57ea90345c63681f1,https://github.com/pytorch/audio/commit/51a67867fbce20992ead55e57ea90345c63681f1,"Add compatibility test for `compute-fbank-feats` (#602)

* Add one fbank compatibility test

* Update util",1,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],"['_not_available()', '_not_available()']",[],[],[],[],[],[],[],[],[],[],['_exe_exists()'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
346,moto,855818+mthrok@users.noreply.github.com,2020-05-02 11:05:28-04:00,be18755b27024cd9784c471af6ad4d479439f2e8,https://github.com/pytorch/audio/commit/be18755b27024cd9784c471af6ad4d479439f2e8,"Tweak CCI config (#603)

* Bust cache weekly

* Rename directory for utility

* Show 20 slowest tests

* fixup! Show 20 slowest tests",3,False,False,True,False,False,True,True,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
347,peterjc123,peterghost86@gmail.com,2020-05-04 21:05:02+08:00,4a24ed729ffc7a6d7df668bdb524536ffdef8cd9,https://github.com/pytorch/audio/commit/4a24ed729ffc7a6d7df668bdb524536ffdef8cd9,"Enable unittest jobs for windows (#604)

* Turn on tests when building through conda-build

* skip one failling test on windows.

* Switch to unittest

* Fix conda env activation

* add linux only condition

* Fix librosa installation

* conda-forge channel as a fallback

* Revert ""conda-forge channel as a fallback""

This reverts commit 8c15f6638e34792640a3de3e057d9c2995425180.

* Try the pytorch way

* Use conda-forge

* Disable conda-forge

* Install future at setup env

* Move linux unittest CI job tools to dedicated directory

* Restore Linux scripts and move the updated souces to a new subdir

* Add back future

* Remove comments

Co-authored-by: Vincent Quenneville-Belair <vincentqb@gmail.com>
Co-authored-by: moto <855818+mthrok@users.noreply.github.com>",26,False,True,True,True,True,True,True,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],"['platform.system() == )', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')']",[],[],[],[],[],[],[],[],[],[],"[')', ')']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
348,moto,855818+mthrok@users.noreply.github.com,2020-05-04 12:46:54-04:00,79eecb0ff89dfda608afa81ffcbd2d9b7949167a,https://github.com/pytorch/audio/commit/79eecb0ff89dfda608afa81ffcbd2d9b7949167a,Fix phaser for GPU (#607),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
349,moto,855818+mthrok@users.noreply.github.com,2020-05-04 18:28:38-04:00,b4998409224f53d9f04c84c2d5a445f35f49d30f,https://github.com/pytorch/audio/commit/b4998409224f53d9f04c84c2d5a445f35f49d30f,Reduce tolerance for MFCC (#608),1,False,True,True,False,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['platform.system() == )'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
350,Tomás Osório,tomas.s.osorio@gmail.com,2020-05-05 21:17:24+01:00,b71b5ee56c7be8b7cecd58b7d44b2707c1e4f5af,https://github.com/pytorch/audio/commit/b71b5ee56c7be8b7cecd58b7d44b2707c1e4f5af,fix mypy error (#590),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
351,moto,855818+mthrok@users.noreply.github.com,2020-05-06 11:45:41-04:00,867d669bc2b492faab7455846f783cc1758b4f61,https://github.com/pytorch/audio/commit/867d669bc2b492faab7455846f783cc1758b4f61,"Add CUDA test on CCI (#586)

* Add GPU test

* Run only on master",7,False,False,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
352,moto,855818+mthrok@users.noreply.github.com,2020-05-06 12:05:30-04:00,c80d9a719eddb66e41873de70d950b91e8dbbf2d,https://github.com/pytorch/audio/commit/c80d9a719eddb66e41873de70d950b91e8dbbf2d,Fix docstring of masking behavior (#612),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
353,kunalb6,kunal.bhandari6@gmail.com,2020-05-06 16:37:00-07:00,7a0d4192f06565f09905240567df006fa465960c,https://github.com/pytorch/audio/commit/7a0d4192f06565f09905240567df006fa465960c,"make seed parameterized (#614)

Co-authored-by: Kunal Bhandari <bkunal@fb.com>

Closes #610",1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
354,moto,855818+mthrok@users.noreply.github.com,2020-05-08 11:55:33-04:00,00d38203e401b8d9472a8f8394a10e2c309be02c,https://github.com/pytorch/audio/commit/00d38203e401b8d9472a8f8394a10e2c309be02c,"Introduce common utility for defining test matrix for device/dtype (#616)

* Introduce common utility for defining test matrix for device/dtype

* Make resample_waveform support float64

* Mark lfilter related test as xfail when float64

* fix",4,True,True,True,False,True,True,True,False,True,False,False,True,False,False,False,"['assert_migration', 'skip_migration']",0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,0,0,0,0,2,0,0,1,14,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],"[('True', '(output_signal.max() <= 1)'), ('True', '(output_signal.max() > 1)')]",[],[],[],[],"['not torch.cuda.is_available(), )', 'not torch.cuda.is_available(), )', 'not torch.cuda.is_available(), )']",[],[],[],[],"['output_signal.max() <= 1', 'output_signal.max() > 1']",[],[],[''],"['()', '()', '()', '()', '()', '()', '()', '()', '()', '()', '()', '()', '()', '()']",[],[],[],['skipif('],[],[],[],"['import pytest', 'import pytest']",[],[],[],[],[],[],[],[],[],[],[],[],[]
355,moto,855818+mthrok@users.noreply.github.com,2020-05-12 17:42:47-04:00,3a4f356952e93a38b8f249e16b5bc97998f27462,https://github.com/pytorch/audio/commit/3a4f356952e93a38b8f249e16b5bc97998f27462,"Make Kaldi fbank support cuda (#619)

* Make fbank support cuda

* Reduce rtol for kaldi

* fix test

* fix flake8",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
356,Fangjun Kuang,csukuangfj@gmail.com,2020-05-14 02:09:41+08:00,0c046675a28be32be1992db4559c6e6b8b92b27e,https://github.com/pytorch/audio/commit/0c046675a28be32be1992db4559c6e6b8b92b27e,"Remove multiple definitions of `SoxEffect`. (#635)

Fix #628",3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
357,moto,855818+mthrok@users.noreply.github.com,2020-05-13 14:10:55-04:00,b7f192fa07f7a9cf8ab4bd76d0e311bdb71bbc9b,https://github.com/pytorch/audio/commit/b7f192fa07f7a9cf8ab4bd76d0e311bdb71bbc9b,Remove travis unittest jobs (#636),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
358,tbright17,mingtu@asu.edu,2020-05-13 11:13:32-07:00,36a1e90ec17c416c702cd39c3c240e210dfb9866,https://github.com/pytorch/audio/commit/36a1e90ec17c416c702cd39c3c240e210dfb9866,Make power and normalized configurable for torchaudio.transforms.MelSpectrogram (#633),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
359,peterjc123,peterghost86@gmail.com,2020-05-14 04:58:13+08:00,2dd04029e572db578cb550856f26e500b2cb8117,https://github.com/pytorch/audio/commit/2dd04029e572db578cb550856f26e500b2cb8117,"Enable CUDA tests for Windows (#637)

* Enable CUDA tests for Windows

* Add back branch filters",4,False,False,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
360,moto,855818+mthrok@users.noreply.github.com,2020-05-13 17:24:09-04:00,9835db752d73441d9c9fe4ba16d2c09de1ab956d,https://github.com/pytorch/audio/commit/9835db752d73441d9c9fe4ba16d2c09de1ab956d,Use istft from torch (#523),2,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,4,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Raises', '(RuntimeError, torchaudio.functional.istft, stft, n_fft=4,'), ('Raises', '(RuntimeError, torchaudio.functional.istft, stft, **kwargs_not_ok)'), ('Raises', '(RuntimeError, torchaudio.functional.istft, torch.zeros((3, 0, 2)), 2)'), ('Raises', '(RuntimeError, torchaudio.functional.istft, torch.zeros((0, 3, 2)), 2)')]",[],[],[],[],[],[],[],[],[],[],"[('Raises', '(AssertionError, torchaudio.functional.istft, stft, n_fft=4,'), ('Raises', '(AssertionError, torchaudio.functional.istft, stft, **kwargs_not_ok)'), ('Raises', '(AssertionError, torchaudio.functional.istft, torch.zeros((3, 0, 2)), 2)'), ('Raises', '(AssertionError, torchaudio.functional.istft, torch.zeros((0, 3, 2)), 2)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
361,Vincent QB,vincentqb@users.noreply.github.com,2020-05-14 14:27:14-04:00,adb3d3dadae4dfbebb51daf74f0f5c37ec00ce2a,https://github.com/pytorch/audio/commit/adb3d3dadae4dfbebb51daf74f0f5c37ec00ce2a,"backend change instructions in readme (#553)

* backend change instructions in readme.

* link to installation instructions.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
362,Vincent QB,vincentqb@users.noreply.github.com,2020-05-14 16:27:55-04:00,995b75f85c89a71e022300a04371a08801262c4b,https://github.com/pytorch/audio/commit/995b75f85c89a71e022300a04371a08801262c4b,"add slaney normalization (#589)

* add slaney normalization.

* add torchscript.

* convert to string for torchscript compatibility.

* flake8.

* use string as default.",3,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
363,moto,855818+mthrok@users.noreply.github.com,2020-05-14 18:16:29-04:00,2c28b743b04d94f5cae7cdaef7fa21ede7adb4f6,https://github.com/pytorch/audio/commit/2c28b743b04d94f5cae7cdaef7fa21ede7adb4f6,Adopt PyTorch's test util to torchscript test (#640),3,False,True,True,True,False,True,False,True,False,False,False,False,False,False,False,[],0,3,0,0,0,0,1,14,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,14,0,0,0,1,0,0,0,2,[],"[('Equal', '(output_waveform[:, 3:], waveform[:, 0:-3], atol=1e-5, rtol=1e-5)'), ('Equal', '(ts_output, output)'), ('Equal', '(ts_output, output)')]",[],[],[],[],"['not torch.cuda.is_available(), reason=)']","['()', '()', '()', '()', '()', '()', '()', '()', '()', '()', '()', '()', '()', '()']",[],[],['import unittest'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['ts_output.shape == output.shape, (ts_output.shape, output.shape)']",[],[],[''],"['()', '()', '()', '()', '()', '()', '()', '()', '()', '()', '()', '()', '()', '()']",[],[],[],['skipif('],[],[],[],"['import pytest', 'import pytest']"
364,moto,855818+mthrok@users.noreply.github.com,2020-05-15 11:25:46-04:00,44af0dea5db89d7de95b1e377fbf275441b9e3e4,https://github.com/pytorch/audio/commit/44af0dea5db89d7de95b1e377fbf275441b9e3e4,"[BC Breaking] Reorganize C++ resources (#630)

This PR
 - Changes the location of C++ codes from
     - from `torchaudio/torch_sox.cpp` to `torchaudio/csrc/sox.cpp`
     - from `torchaudio/torch_sox.h` to `torchaudio/csrc/sox.h`
 - Changes the location where the resulting library is placed
     - from `_torch_sox.so` (outside of `torchaudio` module)
        to `torchaudio/_torchaudio.so`.",6,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
365,moto,855818+mthrok@users.noreply.github.com,2020-05-15 11:32:39-04:00,b8187b4cec9db9657c9b6174e433c47fb9563bd9,https://github.com/pytorch/audio/commit/b8187b4cec9db9657c9b6174e433c47fb9563bd9,Adopt PyTorch's test util to batch consistency test (#643),1,False,True,True,False,True,False,False,False,False,False,False,False,False,False,False,[],2,28,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestFunctional(TestCase):', 'class TestTransforms(TestCase):']","[('Equal', '(computed, expected, rtol=rtol, atol=atol)'), ('_batch_consistency', '('), ('_batch_consistency', '('), ('_batch_consistencies', '('), ('_batch_consistencies', '(F.detect_pitch_frequency, waveform, sample_rate)'), ('_batch_consistencies', '(F.istft, stft, n_fft=4, length=4)'), ('_batch_consistencies', '(F.contrast, waveform, enhancement_amount=80.)'), ('_batch_consistencies', '(F.dcshift, waveform, shift=0.5, limiter_gain=0.05)'), ('_batch_consistencies', '(F.overdrive, waveform, gain=45, colour=30)'), ('_batch_consistencies', '(F.phaser, waveform, sample_rate)'), ('_batch_consistencies', '(F.sliding_window_cmn, waveform, center=True, norm_vars=True)'), ('_batch_consistencies', '(F.sliding_window_cmn, waveform, center=True, norm_vars=False)'), ('_batch_consistencies', '(F.sliding_window_cmn, waveform, center=False, norm_vars=True)'), ('_batch_consistencies', '(F.sliding_window_cmn, waveform, center=False, norm_vars=False)'), ('_batch_consistencies', '(F.vad, waveform, sample_rate=sample_rate)'), ('Equal', '(computed, expected)'), ('Equal', '(computed, expected)'), ('Equal', '(computed, expected)'), ('Equal', '(computed, expected, atol=1.0, rtol=1e-5)'), ('Equal', '(computed, expected)'), ('Equal', '(computed, expected)'), ('Equal', '(computed, expected)'), ('Equal', '(computed, expected)'), ('Equal', '(computed, expected)'), ('Equal', '(computed, expected, atol=1e-4, rtol=1e-5)'), ('Equal', '(computed, expected, atol=1e-5, rtol=1e-5)'), ('Equal', '(computed, expected)'), ('Equal', '(computed, expected)')]",[],[],[],[],[],[],[],[],[],"['class TestFunctional(unittest.TestCase):', 'class TestTransforms(unittest.TestCase):']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
366,moto,855818+mthrok@users.noreply.github.com,2020-05-15 12:40:51-04:00,c960b1198503cba0ad07fa85a5696391df986201,https://github.com/pytorch/audio/commit/c960b1198503cba0ad07fa85a5696391df986201,"Split CUDA and CPU tests of torchscript_consistency (#644)

Currently there is no CUDA device for regular FB's infra, where `torchaudio`'s tests are ran.
Skipping these tests consistently raises a flag so we decided to split the tests into runnable and not-runnable on file-level.",3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
367,moto,855818+mthrok@users.noreply.github.com,2020-05-15 14:38:01-04:00,6fc8953c8f0df8cd8d70b99cacc4f5b6cce8a8c5,https://github.com/pytorch/audio/commit/6fc8953c8f0df8cd8d70b99cacc4f5b6cce8a8c5,Adopt PyTorch's test util to SoX compatibility test (#645),1,False,True,True,False,True,False,False,False,False,False,False,False,False,False,False,[],1,23,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestFunctionalFiltering(TestCase):'],"[('Equal', '(waveform_gain, sox_gain_waveform, atol=1e-04, rtol=1e-5)'), ('Equal', '(waveform_dithered, sox_dither_waveform, atol=1e-04, rtol=1e-5)'), ('Equal', '(waveform_dithered_noiseshaped, sox_dither_waveform_ns, atol=1e-02, rtol=1e-5)'), ('Equal', '(wf_vctk, wf_vctk_sox, rtol=1e-03, atol=1e-03)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-3, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(waveform_lfilter_out, waveform_sox_out, atol=1e-4, rtol=1e-5)')]",[],[],[],[],[],[],[],[],[],['class TestFunctionalFiltering(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
368,moto,855818+mthrok@users.noreply.github.com,2020-05-15 14:39:10-04:00,93cc6da7771baf4c7beae0b6373efbe9dc16485d,https://github.com/pytorch/audio/commit/93cc6da7771baf4c7beae0b6373efbe9dc16485d,Adopt PyTorch's test util to librosa compatibilities test (#646),1,False,True,True,True,True,True,False,False,False,False,False,False,False,False,False,[],2,16,0,0,0,0,2,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"['class TestFunctional(TestCase):', 'class TestTransforms(TestCase):']","[('Equal', '(ta_out, lr_out, atol=5e-5, rtol=1e-5)'), ('Equal', '('), ('Equal', '(ta_out, lr_out, atol=5e-5, rtol=1e-5)'), ('Equal', '(ta_out, lr_out, atol=5e-5, rtol=1e-5)'), ('Equal', '(out_torch, torch.from_numpy(out_librosa), atol=1e-5, rtol=1e-5)'), ('Equal', '('), ('Equal', '(power_to_db_torch, torch.from_numpy(power_to_db_librosa), atol=5e-3, rtol=1e-5)'), ('Equal', '(mag_to_db_torch, torch.from_numpy(mag_to_db_librosa), atol=5e-3, rtol=1e-5)'), ('Equal', '('), ('Equal', '('), ('_compatibilities', '(**kwargs)'), ('_compatibilities', '(**kwargs)'), ('_compatibilities', '(**kwargs)'), ('_compatibilities', '(**kwargs)'), ('Equal', '(melspec_ta, torch.from_numpy(melspec_lr[None, ...]), atol=1e-8, rtol=1e-3)'), ('Equal', '(spec_ta, spec_lr, atol=threshold, rtol=1e-5)')]",[],[],[],[],"['not IMPORT_LIBROSA, )', 'not IMPORT_LIBROSA, )']",[],[],[],[],[],[],['def setUp(self):'],[],[],[],[],['()'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
369,peterjc123,peterghost86@gmail.com,2020-05-16 09:57:26+08:00,e3a470807cdfc06b446daddc91708b30bf6527e4,https://github.com/pytorch/audio/commit/e3a470807cdfc06b446daddc91708b30bf6527e4,"Add windows binary jobs (#642)

* Add windows binary jobs

* Make wheel package platform-specific and python-version-specific",5,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
370,moto,855818+mthrok@users.noreply.github.com,2020-05-18 15:02:21-04:00,ac7c052f94e5bc6b8feb665b67e1452de4b95437,https://github.com/pytorch/audio/commit/ac7c052f94e5bc6b8feb665b67e1452de4b95437,"Update smoke test docker image and tag new images latest (#647)

1. Docker image used for smoke test is old (No Python 3.8). Updating this to the latest one. build [here](https://app.circleci.com/pipelines/github/pytorch/audio/1763/workflows/56c846a5-acaa-41a7-92f5-46ec66186c61/jobs/44484)
2. Add `latest` tag to the newly built docker so that later we can always use `latest` version and we do not have to update docker image tag manually.",2,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
371,moto,855818+mthrok@users.noreply.github.com,2020-05-20 17:19:47-04:00,bc6b7f97706f66d5121aa816df8640339ab10906,https://github.com/pytorch/audio/commit/bc6b7f97706f66d5121aa816df8640339ab10906,Adopt PyTorch's test util to transforms test (#652),1,False,True,True,False,True,False,False,False,False,False,False,False,False,False,False,[],1,6,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class Tester(TestCase):'],"[('Equal', '(mag_to_db_torch, power_to_db_torch)'), ('Equal', '(fb, fb_copy)'), ('Equal', '(window, window_copy)'), ('Equal', '(fb, fb_copy)'), ('Equal', '(computed_functional, computed_transform, atol=atol, rtol=rtol)'), ('Equal', '(computed, expected, atol=1e-6, rtol=1e-8)')]",[],[],[],[],[],[],[],[],[],['class Tester(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
372,moto,855818+mthrok@users.noreply.github.com,2020-05-20 17:21:18-04:00,faefe689f82beeea32c4f36980ab8af536125018,https://github.com/pytorch/audio/commit/faefe689f82beeea32c4f36980ab8af536125018,"Adopt PyTorch's test utility on kaldi compatibility test (#650)

* Adopt PyTorch's test utility on kaldi compatibility test

 - Adopt PyTorch's test utility on kaldi compatibility test
 - Separate CPU test and GPU test

* Fix device/dtype conversion",3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(output, expected, rtol=rtol, atol=atol)'), ('_equal', '(result, expected=kaldi_result)'), ('_equal', '(result, expected=kaldi_result, rtol=1e-4, atol=1e-8)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
373,moto,855818+mthrok@users.noreply.github.com,2020-05-21 14:18:05-04:00,2f2319d6bf5e0a925af1cddfaa6a05961bdb50e0,https://github.com/pytorch/audio/commit/2f2319d6bf5e0a925af1cddfaa6a05961bdb50e0,Fix io test (#653),1,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],['any(be not in BACKENDS for be in [)'],[],[],[],[],[],[],[],[],[],[],['set([)'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
374,moto,855818+mthrok@users.noreply.github.com,2020-05-21 17:01:07-04:00,313f4f5ca65b82ff81e62165ee2328a4c10de013,https://github.com/pytorch/audio/commit/313f4f5ca65b82ff81e62165ee2328a4c10de013,"Add util to generate whitenoise (#654)

* Add util to generate whitenoise

* Use sinusoid for pitch and revert vad",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
375,guyang3532,62738430+guyang3532@users.noreply.github.com,2020-05-26 21:54:00+08:00,241ab1e8284e589262f510ee9411baf2bc374ded,https://github.com/pytorch/audio/commit/241ab1e8284e589262f510ee9411baf2bc374ded,Add windows smoke test job to CI (#655),3,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
376,Vincent QB,vincentqb@users.noreply.github.com,2020-05-27 11:13:50-04:00,b985609bc1d8bd4bd5f02619f67c4533ddc88421,https://github.com/pytorch/audio/commit/b985609bc1d8bd4bd5f02619f67c4533ddc88421,"Make parameter optional string (#641)

* make parameter optional string.

* raise error if incorrect parameter choice.

* test with slaney.",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
377,moto,855818+mthrok@users.noreply.github.com,2020-05-27 15:17:51-04:00,d3c83eaa680dead87a121552c0f9a323c4526620,https://github.com/pytorch/audio/commit/d3c83eaa680dead87a121552c0f9a323c4526620,"Self-contain codecs library (#625)

* Clean up extension build mechanism and extension location

* Add back the switch to depend on external sox

* Remove print

* Fix",17,False,False,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
378,moto,855818+mthrok@users.noreply.github.com,2020-05-27 15:25:43-04:00,da59f597db519ccd559e9f661b8479b026d39acc,https://github.com/pytorch/audio/commit/da59f597db519ccd559e9f661b8479b026d39acc,Apply tweaks required for running test in fbcode (#663),18,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['install()'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
379,moto,855818+mthrok@users.noreply.github.com,2020-05-28 11:31:00-04:00,6c3cc16ddb2e5dd5da1dcc5bceec6b1e10e9003a,https://github.com/pytorch/audio/commit/6c3cc16ddb2e5dd5da1dcc5bceec6b1e10e9003a,"Separate style check from unit test (#664)

* Separate style check from unit test

* TEST flake8 fail

* TEST clang-format fail

* Revert ""TEST flake8 fail""

This reverts commit 88d90185cefe294b9a662129a05c2e26a9844fe4.

* Revert ""TEST clang-format fail""

This reverts commit 93517d1ccba650a6ccd813268fd73a4fd63b252c.",6,False,False,True,True,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
380,Emmanouil Theofanis Chourdakis,eruyome@gmail.com,2020-05-29 22:20:44+03:00,17bc15f6370b56ffac02de6c7e1e8eda0edc641c,https://github.com/pytorch/audio/commit/17bc15f6370b56ffac02de6c7e1e8eda0edc641c,"Add info on README.md for #666 (#667)

* Add info on README.md for #666

Added a simple command what to do when coming
across undefined reference errors when trying to build
from specific linux+anaconda configurations.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
381,moto,855818+mthrok@users.noreply.github.com,2020-06-01 12:44:31-04:00,449b6abfe7f778fed107da74a6443b390f27d112,https://github.com/pytorch/audio/commit/449b6abfe7f778fed107da74a6443b390f27d112,"Use environment variable for switching SoX dep (#669)

* Use env var for switching SoX build and default to not

* Update README

* Fix packaging/CI script",6,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
382,moto,855818+mthrok@users.noreply.github.com,2020-06-01 13:37:07-04:00,2ed97b611125247908878de69046cab986d75e84,https://github.com/pytorch/audio/commit/2ed97b611125247908878de69046cab986d75e84,"Limit the number of downloads par workflow for reliable build (#670)

* Add caching to binary build for more reliable build

* Apply same logic to unittest workflow",5,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
383,Bhargav Kathivarapu,bhargavkathivarapu31@gmail.com,2020-06-02 23:47:30+05:18,9e27cf3d0f3a99fa784278eed4058dd0a86c554e,https://github.com/pytorch/audio/commit/9e27cf3d0f3a99fa784278eed4058dd0a86c554e,"Add flanger to functional.py (#651)

* Add flanger to functional

Signed-off-by: Bhargav Kathivarapu <bhargavkathivarapu31@gmail.com>

* Add random seed

Signed-off-by: Bhargav Kathivarapu <bhargavkathivarapu31@gmail.com>

* fix flanger

Signed-off-by: Bhargav Kathivarapu <bhargavkathivarapu31@gmail.com>

* shape

* Change bool arguments to strings

Signed-off-by: Bhargav Kathivarapu <bhargavkathivarapu31@gmail.com>

* Refactor tests

Signed-off-by: Bhargav Kathivarapu <bhargavkathivarapu31@gmail.com>

Co-authored-by: Vincent QB <vincentqb@users.noreply.github.com>",5,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_batch_consistencies', '(F.flanger, waveform, sample_rate)')]",[],[],[],[],"[')', ')', ')', ')']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
384,Mike Ruberry,38511765+mruberry@users.noreply.github.com,2020-06-02 14:32:24-07:00,1a297ef28731770d52c3a41234f231cd921192d1,https://github.com/pytorch/audio/commit/1a297ef28731770d52c3a41234f231cd921192d1,"Updates test_transform.py to no longer perform floor division (#677)

* Updates test_transform.py to no longer perform floor division using torch.div

This will prevent this test from breaking when torch.div is updating to throw a runtime error when it would have performed floor division.

* flake8

Co-authored-by: Vincent QB <vincentqb@users.noreply.github.com>",1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
385,Emmanouil Theofanis Chourdakis,e.t.chourdakis@qmul.ac.uk,2020-06-03 01:02:01+03:00,b036725166ffc2803c0d4156f7abd859b45e92b3,https://github.com/pytorch/audio/commit/b036725166ffc2803c0d4156f7abd859b45e92b3,"Added the popular GTZAN dataset: (#668)

* Added the popular GTZAN dataset:

* Added the GTZAN class in torchaudio.datasets using the same format as the rest of the datasets.
* Added the appropriate test function in test_datasets.py.
* Added the GTZAN class in the datasets.rst documentation file.

* Addressed review issues in PR #668

* Added dummy noise .wav in `test/assets/`
* Removed transforms of input and output from the dataset
  `__init__` function, as well as the corresponding methods.
* Replaced rendundant `filtered` and `subset` methods from
  class initialization and also changed the corresponding
  assertion message.

* Fixed E303: too many blank lines error

* Added GTZAN to __init__.__all__

* Fixed incorrectly not importing GTZAN

* removed duplicate warning

* lint

Co-authored-by: Vincent QB <vincentqb@users.noreply.github.com>",5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
386,Bhargav Kathivarapu,bhargavkathivarapu31@gmail.com,2020-06-03 19:21:18+05:18,8a03087ede7d5b58e6562e4d2ac78dc904303b56,https://github.com/pytorch/audio/commit/8a03087ede7d5b58e6562e4d2ac78dc904303b56,"Migrate kaldi fbank (#672)

* Migrate fbank tests

* Update CCI job environment

* Remove invalid test cases

Signed-off-by: Bhargav Kathivarapu <bhargavkathivarapu31@gmail.com>",4,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
387,moto,855818+mthrok@users.noreply.github.com,2020-06-03 12:36:01-04:00,53e5074c33bf7820fa39f470b070aaabddbd8f17,https://github.com/pytorch/audio/commit/53e5074c33bf7820fa39f470b070aaabddbd8f17,Run GPU test on nightly (#678),2,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
388,jimchen90,65626796+jimchen90@users.noreply.github.com,2020-06-03 17:03:03-04:00,a466b3c2fe22c866523afea8cffbee242f4489a5,https://github.com/pytorch/audio/commit/a466b3c2fe22c866523afea8cffbee242f4489a5,"Add Bass with Biquad (#661)

* Add bass with biquad

* Update functional.py

Add the normalization coefficients

* Update test_sox_compatibility.py

In test_sox_compatibility.py file, I add two bass tests: one test sets gain = 30, atol = 1e-4, the other sets gain = 40, atol = 1.5e-4. The details can be seen in pytorch#676

* Update torchscript_consistency_impl.py

Add torchscript test

* Add flake8 test

Co-authored-by: Ji Chen <jimchen90@devfair0160.h2.fair>",4,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(output_waveform, sox_output_waveform, atol=1.5e-4, rtol=1e-5)')]",[],[],[],[],[')'],['()'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
389,Bhargav Kathivarapu,bhargavkathivarapu31@gmail.com,2020-06-04 18:41:54+05:18,b4284de01f69e72653da6e509270865bf444482d,https://github.com/pytorch/audio/commit/b4284de01f69e72653da6e509270865bf444482d,"Fix Kaldi mfcc device/dtype and migrate test (#681)

* Fix device/dtype compatibility of Kaldi mfcc

* Migrate Kaldi mfcc test

* Remove failing tests

Signed-off-by: Bhargav Kathivarapu <bhargavkathivarapu31@gmail.com>",3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_equal', '(result, expected=kaldi_result, rtol=1e-4, atol=1e-8)')]",[],[],[],[],['_not_available()'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
390,moto,855818+mthrok@users.noreply.github.com,2020-06-04 11:54:57-04:00,cfe151c73353622e1bb00c62240c1a4989924331,https://github.com/pytorch/audio/commit/cfe151c73353622e1bb00c62240c1a4989924331,Update badges (#683),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
391,moto,855818+mthrok@users.noreply.github.com,2020-06-04 11:57:22-04:00,87ca9e99868d69403f75210ae59d3a7b5c6c4a39,https://github.com/pytorch/audio/commit/87ca9e99868d69403f75210ae59d3a7b5c6c4a39,"Add version compatibility matrix (#685)

* Add version compatibility matrix",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
392,moto,855818+mthrok@users.noreply.github.com,2020-06-04 13:30:30-04:00,b56a27b568aa666de89bf1a5e79eabcc72e11be2,https://github.com/pytorch/audio/commit/b56a27b568aa666de89bf1a5e79eabcc72e11be2,Remove Py2 code from common_utils (#691),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
393,Bhargav Kathivarapu,bhargavkathivarapu31@gmail.com,2020-06-05 00:07:03+05:18,ddb8577d8ca1fe9949a94f4a0d2b3328cb2a471b,https://github.com/pytorch/audio/commit/ddb8577d8ca1fe9949a94f4a0d2b3328cb2a471b,"Migrate kaldi spectrogram (#687)

* Migrate spectrogram

* Update spectrogram in kaldi.py to support device and dtype

* Remove failing tests

Signed-off-by: Bhargav Kathivarapu <bhargavkathivarapu31@gmail.com>",3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_equal', '(result, expected=kaldi_result, rtol=1e-4, atol=1e-8)')]",[],[],[],[],['_not_available()'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
394,moto,855818+mthrok@users.noreply.github.com,2020-06-04 16:00:33-04:00,2416e5d05476e7575ce5e9a82c59b2f998f08209,https://github.com/pytorch/audio/commit/2416e5d05476e7575ce5e9a82c59b2f998f08209,Clean up common_utils (#690),3,False,True,True,True,True,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],"['not LIBROSA_AVAILABLE, )', 'not LIBROSA_AVAILABLE, )', 'not LIBROSA_AVAILABLE, )']",[],[],[],[],[],[],[],[],[],[],"['not IMPORT_LIBROSA, )', 'not IMPORT_LIBROSA, )']",['()'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
395,moto,855818+mthrok@users.noreply.github.com,2020-06-05 13:21:49-04:00,e61b77dc1c599871d933d6de989910309268529c,https://github.com/pytorch/audio/commit/e61b77dc1c599871d933d6de989910309268529c,"Base guard logic on module availability (#692)

* Replace `backed_guard` with `requires_module`

* Remove backend_guard",9,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
396,moto,855818+mthrok@users.noreply.github.com,2020-06-05 15:03:24-04:00,9f3075c1578822337fc5800d6d2c7cfcd5bd7da5,https://github.com/pytorch/audio/commit/9f3075c1578822337fc5800d6d2c7cfcd5bd7da5,"Move sox effect init/shut down to sox_effects module

For better cohesion and coupling, move sox_effects related functions to sox_effects module.
Then perform initialization in __init__.py.

See the following for cohesion and coupling.
https://en.wikipedia.org/wiki/Coupling_(computer_programming)",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
397,moto,855818+mthrok@users.noreply.github.com,2020-06-05 17:14:02-04:00,e5eb485726088fb3a3f61750b66b2660ba91643d,https://github.com/pytorch/audio/commit/e5eb485726088fb3a3f61750b66b2660ba91643d,"Move utility Tensor functions to misc_ops module (#694)

* also deletes duplicated func",6,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
398,moto,855818+mthrok@users.noreply.github.com,2020-06-05 17:35:05-04:00,4d52106f5db2b9f169ac2077b603a6092d899754,https://github.com/pytorch/audio/commit/4d52106f5db2b9f169ac2077b603a6092d899754,Move all SoX I/O functions to _sox_backend for better modularity (#695),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
399,moto,855818+mthrok@users.noreply.github.com,2020-06-05 17:52:13-04:00,f1ed19ad286236d1749a3ae036f1e0bd939a5fcf,https://github.com/pytorch/audio/commit/f1ed19ad286236d1749a3ae036f1e0bd939a5fcf,Apply module availability guard to soundfile backend (#696),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
400,Bhargav Kathivarapu,bhargavkathivarapu31@gmail.com,2020-06-08 19:18:38+05:18,0bd91484f6e0af44be4e293e77b254282e551b1a,https://github.com/pytorch/audio/commit/0bd91484f6e0af44be4e293e77b254282e551b1a,"Clean up migrated Kaldi compliance test files (#703)

* kaldi compliance files cleanup for spec, fbank, mfcc

* kaldi compliance tests removal for spec, fbank, mfcc

Signed-off-by: Bhargav Kathivarapu <bhargavkathivarapu31@gmail.com>",375,False,True,True,False,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"[')', ')', ')']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
401,Bhargav Kathivarapu,bhargavkathivarapu31@gmail.com,2020-06-08 21:21:25+05:18,e3247e30d58c9ac36cede1a037009eeff9f861ba,https://github.com/pytorch/audio/commit/e3247e30d58c9ac36cede1a037009eeff9f861ba,"Fix flanger and phaser for GPU (#702)

* Make `_generate_wave_table` device and dtype aware.

Signed-off-by: Bhargav Kathivarapu <bhargavkathivarapu31@gmail.com>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
402,moto,855818+mthrok@users.noreply.github.com,2020-06-08 16:56:00-04:00,2fd32dd017c0332956e913bb08c20867bfbe3abe,https://github.com/pytorch/audio/commit/2fd32dd017c0332956e913bb08c20867bfbe3abe,List backends dynamically based on availability (#697),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
403,moto,855818+mthrok@users.noreply.github.com,2020-06-08 18:27:44-04:00,e364289677d3cedffbc7b3b3f783c8c09ae1df1f,https://github.com/pytorch/audio/commit/e364289677d3cedffbc7b3b3f783c8c09ae1df1f,Add backend module and isolate backend-related functionalities (#700),6,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
404,moto,855818+mthrok@users.noreply.github.com,2020-06-09 11:56:13-04:00,b788db3d2014708cd05df12b1ec5f74c134db77f,https://github.com/pytorch/audio/commit/b788db3d2014708cd05df12b1ec5f74c134db77f,"Put structs common to backends in backend.common (#706)

It is strange that `sox_backend` depends on custom classes defined in `soudfile_backend`. This PR introduces `backend.common` module where these custom classes are defined and have both `sox_backend` and `soundfile_backend` depend on it.",4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
405,moto,855818+mthrok@users.noreply.github.com,2020-06-09 14:38:08-04:00,829656831d6ef6b0cec782cc944a015813faba65,https://github.com/pytorch/audio/commit/829656831d6ef6b0cec782cc944a015813faba65,Initialize backend in backend.__init__ (#707),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
406,moto,855818+mthrok@users.noreply.github.com,2020-06-10 11:39:16-04:00,c82a7f9c49613117221fb844c4d04e1f628cbced,https://github.com/pytorch/audio/commit/c82a7f9c49613117221fb844c4d04e1f628cbced,"Add sox_effects submodule and delegate sox_effects init/shutdown (#708)

There are couple of aspects of this PR that overall improves the maintainability of the code base, based on ""decoupling"" and ""separation of concerns"".

First, `sox_effects` functionalities can be either available or unavailable. From the viewpoint of `torchaudio` main module, the looser the connection between the `torchaudio` module and `torchaudio.sox_effects`, the more manageable the code base become because you can change the two modules independently. This is mostly accomplished when the definitions of `initialize_sox` and `shutdown_sox` were moved from `torchaudio.__init__` to `torchaudio.sox_effects`, but the initialization of sox effects are still happening in `torchaudio.__init__`. If we move the initialization to `sox_effects` module, the responsibility of sox initialization is moved to `sox_effects` module, along with the required module availability check etc. The main `torchaudio` module can be carefree about how the `sox_effects` module should work.

In addition to that, I found that `initialize_sox` and `shutdown_sox` are confusing because it sound like they are required for `libsox` based I/O. To make it clear, I renamed them to include `sox_effect` in function name.

Also moving functions from the original places are BC breaking itself, therefore, these functions are re-imported in `torchaudio.__init__` and renamed to match the original names. Therefore the PR is not BC breaking.",3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
407,jimchen90,65626796+jimchen90@users.noreply.github.com,2020-06-10 16:19:55-04:00,55b5c80c51fd1d20e6729ce67bf66ea489ea2727,https://github.com/pytorch/audio/commit/55b5c80c51fd1d20e6729ce67bf66ea489ea2727,"Add cmu_arctic dataset (#710)

* Add cmu_arctic dataset

* add dataset name

* update audio test file with whitenoise.wav file

* add test text file

* update text method and file name

* update comment

* change datasets order in doc

* add line length

Co-authored-by: Ji Chen <jimchen90@devfair0160.h2.fair>",6,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
408,moto,855818+mthrok@users.noreply.github.com,2020-06-11 14:05:48-04:00,d2724481cd8db32e0460bb8ca96ae32d71fb1ad4,https://github.com/pytorch/audio/commit/d2724481cd8db32e0460bb8ca96ae32d71fb1ad4,"Change parameterized testing system to be compatible with unittest (#712)

* Change parameterized testing system to be compatible with unittest

Summary: The previous implementation of parameterized testing worked by modifying test.common_utils inplace.  This doesn't work in general because unittest's contract with test modules is such that it must be able to load the module and run the test itself.  Because the previous implementation needed to load the module and modify it, it is incompatible.

Reviewed By: mthrok

Differential Revision: D21964676

Co-authored-by: Ben Mehne <bmehne@fb.com>",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
409,moto,855818+mthrok@users.noreply.github.com,2020-06-11 14:06:21-04:00,50939b757f9405b31687a2b1c7269b3cc1c356e7,https://github.com/pytorch/audio/commit/50939b757f9405b31687a2b1c7269b3cc1c356e7,Fix integer division (#714),2,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
410,moto,855818+mthrok@users.noreply.github.com,2020-06-11 17:58:58-04:00,082171218e29ff8a7e6f15694ac6fca82e83820e,https://github.com/pytorch/audio/commit/082171218e29ff8a7e6f15694ac6fca82e83820e,"Get rid of dynamic test suite generation (#716)

`type` used in `common_utils` generates test class definition in `common_utils` and
this modifies the module state after it's imported. This is anti-pattern.
This PR get rid of the related utility functions and define test suite manually.",8,False,True,True,True,True,True,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(output_waveform[:, 3:], waveform[:, 0:-3], atol=1e-5, rtol=1e-5)')]",[],[],[],[],"['not torch.cuda.is_available(), reason=)']",[],[],[],[],[],"[('Equal', '(output_waveform[:, 3:], waveform[:, 0:-3], atol=1e-5, rtol=1e-5)')]",[],[],[],[],"['not torch.cuda.is_available(), reason=)']",[],[],[],[],"['output_signal.max() <= 1', 'output_signal.max() > 1']",[],[],[],[],[],[],[],[],[],[],[],[],"['output_signal.max() <= 1', 'output_signal.max() > 1']",[],[],[],[],[],[],[],[],[],[],[],[]
411,moto,855818+mthrok@users.noreply.github.com,2020-06-11 19:46:33-04:00,b82258078fdd4cffce77d8ebd00965405bb89046,https://github.com/pytorch/audio/commit/b82258078fdd4cffce77d8ebd00965405bb89046,Add deprecation warning to initialize/shutdown_sox (#709),3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
412,peterjc123,peterghost86@gmail.com,2020-06-15 23:13:39+08:00,87a761d676181af19feeb94f8436683503ed3c31,https://github.com/pytorch/audio/commit/87a761d676181af19feeb94f8436683503ed3c31,Fix unit tests by pinning the version of numba (#720),2,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
413,moto,855818+mthrok@users.noreply.github.com,2020-06-15 22:31:31-04:00,e9f19c35bc2997584406b85ca50a10939891aa33,https://github.com/pytorch/audio/commit/e9f19c35bc2997584406b85ca50a10939891aa33,"Refactor backend and not rely on global variables on switching (#698)

* Refactor backend switching

1. Do not rely on global variables for backend switch
   So that load/save/info/load_wav functions will be torchscript-able
2. Add no_backend module to for the case there is no backend module available
   [bonus] This allows the whole codebase importable on systems that do not have torchaudio C++ extension nor soundfile.",9,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],"['', 'not is_module_available()']",[],[],[],['import unittest'],[],[],[],[],[],[],[],[],[],[],[],"['torchaudio.get_audio_backend() is None', 'torchaudio.get_audio_backend() == self.backend', 'torchaudio.load == self.backend_module.load', 'torchaudio.load_wav == self.backend_module.load_wav', 'torchaudio.save == self.backend_module.save', 'torchaudio.info == self.backend_module.info']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
414,jimchen90,65626796+jimchen90@users.noreply.github.com,2020-06-16 10:13:10-04:00,ab733e7b392c00b063f92f0b6097493203def7e9,https://github.com/pytorch/audio/commit/ab733e7b392c00b063f92f0b6097493203def7e9,"update wav2letter test (#722)

Co-authored-by: Ji Chen <jimchen90@devfair0160.h2.fair>",1,False,True,False,False,False,False,False,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,0,0,1,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['(, [2])', '(, [1])', '(, [40])', '(, [320])', '(, [2])', '(, [13])', '(, [40])', '(, [2])']","['parametrize(, [2])', 'parametrize(, [1])', 'parametrize(, [40])', 'parametrize(, [320])', 'parametrize(, [2])', 'parametrize(, [13])', 'parametrize(, [40])', 'parametrize(, [2])']","['mark.parametrize(, [2])', 'mark.parametrize(, [1])', 'mark.parametrize(, [40])', 'mark.parametrize(, [320])', 'mark.parametrize(, [2])', 'mark.parametrize(, [13])', 'mark.parametrize(, [40])', 'mark.parametrize(, [2])']",[],[],['import pytest']
415,jimchen90,65626796+jimchen90@users.noreply.github.com,2020-06-16 18:04:52-04:00,4318fc5c7238af4ec36f8e1c9fe858d75ef7c21d,https://github.com/pytorch/audio/commit/4318fc5c7238af4ec36f8e1c9fe858d75ef7c21d,"Add MelResNet Block (#705)

* Add MelResNet Block

* add default value

* update model and test

* rebase and small changes

* add pad variable

* update format

* update reference in docstrings

* add underscore name

Co-authored-by: Ji Chen <jimchen90@devfair0160.h2.fair>",3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['out.size() == (batch_size, output_dims, num_features - pad * 2)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
416,jimchen90,65626796+jimchen90@users.noreply.github.com,2020-06-17 15:23:37-04:00,03da871ffa00e39e6e6f8f6a9d4b011200ee6661,https://github.com/pytorch/audio/commit/03da871ffa00e39e6e6f8f6a9d4b011200ee6661,"MelResNet spacing and typing adjustment (#725)

* spacing and typing adjustment

* remove import list

Co-authored-by: Ji Chen <jimchen90@devfair0160.h2.fair>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
417,moto,855818+mthrok@users.noreply.github.com,2020-06-18 10:51:07-04:00,b17da7a4603f717d5fb24a36df3da196f3c815be,https://github.com/pytorch/audio/commit/b17da7a4603f717d5fb24a36df3da196f3c815be,"Make TestCases backend-aware (#719)

* Make tests backend aware by introducing TorchaudioTestCase and reset backend for each TestCase.

* Set backends for the test cases that require specific backend.",21,False,True,True,True,True,True,False,False,False,False,False,False,False,False,False,[],0,0,1,0,0,0,3,1,0,0,1,15,0,0,0,0,0,53,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],['def setUp(self):'],[],[],[],"[')', 'not torch.cuda.is_available(), reason=)', 'not common_utils.BACKENDS_MP3, )']",['()'],[],[],['import unittest'],"['class TestComputeDeltas(unittest.TestCase):', 'class TestIstft(unittest.TestCase):', 'class TestDetectPitchFrequency(unittest.TestCase):', 'class TestDB_to_amplitude(unittest.TestCase):', 'class TestFunctional(TestCase):', 'class TestTransforms(TestCase):', 'class Test_Kaldi(unittest.TestCase):', 'class Test_DataLoader(unittest.TestCase):', 'class TestDatasets(unittest.TestCase):', 'class Test_KaldiIO(unittest.TestCase):', 'class TestFunctional(TestCase):', 'class TestTransforms(TestCase):', 'class TestFunctionalFiltering(TestCase):', 'class Test_SoxEffectsChain(unittest.TestCase):', 'class Tester(TestCase):']",[],[],[],[],[],"['not torch.cuda.is_available(), reason=)', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', ')']",[],[],[],['import unittest'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
418,Peter Massey-Plantinga,plantinga.peter@protonmail.com,2020-06-18 17:48:47-04:00,bc1df4882b967d55d8544e572ef16abeee9f45b5,https://github.com/pytorch/audio/commit/bc1df4882b967d55d8544e572ef16abeee9f45b5,Remove in-place operations from GriffinLim for backprop (#730),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
419,moto,855818+mthrok@users.noreply.github.com,2020-06-18 18:03:46-04:00,f8eac89bb46c5602c1a259ddd1ac15055ce5ba63,https://github.com/pytorch/audio/commit/f8eac89bb46c5602c1a259ddd1ac15055ce5ba63,"Add SignalInfo typedef, and extension module (#718)

This is a part of PRs to add new ""sox_io"" backend. https://github.com/pytorch/audio/pull/726

This PR adds `SignalInfo` structure, which is data exchange interface between Python and C++ in coming TorchScript-based sox IO backend.
For the case, where C++ extension is not available (i.e. Windows), this PR also adds dummy class and module that will be substituted.
This logic is implemented in `torchaudio.extension` moduel.",6,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
420,moto,855818+mthrok@users.noreply.github.com,2020-06-19 16:22:39-04:00,88fccd145eda3938a83945b64ab6f811afbdd3c6,https://github.com/pytorch/audio/commit/88fccd145eda3938a83945b64ab6f811afbdd3c6,"Add TorchScript-able ""info"" func to sox_io backend (#728)

This is a part of PRs to add new ""sox_io"" backend #726, and depends on #718.

This PR adds `info` function to ""sox_io"" backend, which allows users to fetch some metadata of an audio file. 
At this moment, the information retrieved are;

 - Number of samples in the audio file
 - Sampling rate
 - Number of channels",14,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],0,0,1,0,1,0,2,0,0,0,0,0,0,0,0,0,0,6,0,0,0,1,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],['def setUp(self):'],[],['def tearDown(self):'],[],"['shutil.which(cmd) is None, f)', 'not is_module_available(module), f)']",[],[],[],[],[],[],[],[],[],[],"['_not_available()', '_not_available()', '_not_available()', '_not_available()', '', 'not is_module_available()']",[],[],[],['import unittest'],"['info.get_sample_rate() == sample_rate', 'info.get_num_samples() == sample_rate * duration', 'info.get_num_channels() == num_channels', 'info.get_sample_rate() == sample_rate', 'info.get_num_samples() == sample_rate * duration', 'info.get_num_channels() == num_channels', 'info.get_sample_rate() == sample_rate', 'info.get_num_channels() == num_channels', 'info.get_sample_rate() == sample_rate', 'info.get_num_samples() == sample_rate * duration', 'info.get_num_channels() == num_channels', 'info.get_sample_rate() == sample_rate', 'info.get_num_samples() == sample_rate * duration', 'info.get_num_channels() == num_channels', 'py_info.get_sample_rate() == ts_info.get_sample_rate()', 'py_info.get_num_samples() == ts_info.get_num_samples()', 'py_info.get_num_channels() == ts_info.get_num_channels()']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
421,Eli Uriegas,1700823+seemethere@users.noreply.github.com,2020-06-22 14:31:50-07:00,7427bf56f193515f10eea54d003318a18729bac2,https://github.com/pytorch/audio/commit/7427bf56f193515f10eea54d003318a18729bac2,.circleci: Add functionality to run on tags (#738),3,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
422,moto,855818+mthrok@users.noreply.github.com,2020-06-23 11:15:40-04:00,e0f4c0ecf7c08f76081053fd0cdc5b0c3e893cd8,https://github.com/pytorch/audio/commit/e0f4c0ecf7c08f76081053fd0cdc5b0c3e893cd8,"Fix SignalInfo member name to frame (#734)

This PR fixes the wrong member name of SignalInfo introduced in #718. 

 - `num_samples` == `num_frames` * `num_channels`.",6,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['info.get_num_frames() == sample_rate * duration', 'info.get_num_frames() == sample_rate * duration', 'info.get_num_frames() == sample_rate * duration', 'info.get_num_frames() == sample_rate * duration', 'py_info.get_num_frames() == ts_info.get_num_frames()']",[],[],[],[],[],[],[],[],[],[],[],[],"['info.get_num_samples() == sample_rate * duration', 'info.get_num_samples() == sample_rate * duration', 'info.get_num_samples() == sample_rate * duration', 'info.get_num_samples() == sample_rate * duration', 'py_info.get_num_samples() == ts_info.get_num_samples()']",[],[],[],[],[],[],[],[],[],[],[],[]
423,jimchen90,65626796+jimchen90@users.noreply.github.com,2020-06-23 12:35:06-04:00,b8ddeb35eff986582516cb0ce7700bf93fba9d1c,https://github.com/pytorch/audio/commit/b8ddeb35eff986582516cb0ce7700bf93fba9d1c,"Add subclass in model test classes (#727)

* add unittest in test_models

* update test method

* remove unittest main function

Co-authored-by: Ji Chen <jimchen90@devfair0160.h2.fair>",1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
424,moto,855818+mthrok@users.noreply.github.com,2020-06-23 15:24:47-04:00,d9e6ce45fcf89c12a275e66eb5dd9617556f70b5,https://github.com/pytorch/audio/commit/d9e6ce45fcf89c12a275e66eb5dd9617556f70b5,"Refactor Cache bust mechanism and bust on daily basis (#742)

This PR refactors cache generation mechanism by introducing dedicated command
and bust cache on daily basis.

At this moment, Windows unittest job for 3.6 and 3.7 are broken because of
broken scipy but the environment is cached this persists until the next week.

As we have nightly build, we do not need to keep cache for one week.",2,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
425,moto,855818+mthrok@users.noreply.github.com,2020-06-23 15:49:07-04:00,80bfb28b8e2cb33855d9869b96f8d610b175f6a0,https://github.com/pytorch/audio/commit/80bfb28b8e2cb33855d9869b96f8d610b175f6a0,"Bake libsox in test base Docker image (#739)

In #728, linux unit test switches to libsox provided by apt.
For CPU jobs this is fine because all the job steps share the same Docker container,
but on CPU job, each job step runs a script in a new Docker container, so
libsox installed in a step is not available to the subsequent steps.

To fix this, this PR moves the installation of libsox and sox to Docker build.",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
426,moto,855818+mthrok@users.noreply.github.com,2020-06-23 18:54:55-04:00,37e194f48a56723b4bc8d9e9674236cc7f90db3c,https://github.com/pytorch/audio/commit/37e194f48a56723b4bc8d9e9674236cc7f90db3c,Pin SciPy version to 1.4.1 in Windows unittest job (#743),1,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
427,Eli Uriegas,1700823+seemethere@users.noreply.github.com,2020-06-24 12:50:25-07:00,fd6e3b4aa70552160a16fbdd105303b2ca2bc22f,https://github.com/pytorch/audio/commit/fd6e3b4aa70552160a16fbdd105303b2ca2bc22f,"bump nightly versions to 0.7.0 (#745)

Signed-off-by: Eli Uriegas <eliuriegas@fb.com>",3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
428,Eli Uriegas,1700823+seemethere@users.noreply.github.com,2020-06-24 12:52:09-07:00,0c847aaaf5331a49446038511e3733b1f3705b24,https://github.com/pytorch/audio/commit/0c847aaaf5331a49446038511e3733b1f3705b24,"Cherry picking changes for release improvements (#746)

* packaging: Add test channels to pytorch dependency resolution

Signed-off-by: Eli Uriegas <eliuriegas@fb.com>

* .circleci: Add test channel to smoke tests

Signed-off-by: Eli Uriegas <eliuriegas@fb.com>

* .circleci: Put pytorch-test into a higher priority

pytorch-nightly was getting prioritized over pytorch-nightly which
shouldn't be the case

Signed-off-by: Eli Uriegas <eliuriegas@fb.com>",3,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
429,moto,855818+mthrok@users.noreply.github.com,2020-06-25 18:57:04-04:00,0f0d0af3a2776a725ff46717724326b8632f7be5,https://github.com/pytorch/audio/commit/0f0d0af3a2776a725ff46717724326b8632f7be5,Replace sox_effects init/list/shutdown with TS binding (#748),7,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
430,moto,855818+mthrok@users.noreply.github.com,2020-06-25 19:16:56-04:00,793eeab8745e17faac6ba0df85ceca39c9c20782,https://github.com/pytorch/audio/commit/793eeab8745e17faac6ba0df85ceca39c9c20782,"Add load function (#731)

This is a part of PRs to add new ""sox_io"" backend. #726 and depends on #718 and #728 .

This PR adds `load` function to ""sox_io"" backend, which is  tested on the following audio formats;
 - `wav`
 - `mp3`
 - `flac`
 - `ogg/vorbis` *

By default, ""sox_io"" backend returns Tensor with `float32` dtype and the shape of `[channel, time]`. The samples are normalized to fit in the range of `[-1.0, 1.0]`.

Unlike existing ""sox"" backend, the new `load` function can handle WAV file natively, when the input format is WAV with integer type, (such as 32-bit signed integer, 16-bit signed integer and 8-bit unsigned integer) by providing `normalize=False`, this function can return integer Tensor, where the samples are expressed within the whole range of the corresponding dtype, that is, `int32` tensor for `32-bit PCM`, `int16` for `16-bit PCM` and `uint8` for `8-bit PCM`. This behavior follows [scipy.io.wavfile.read](https://docs.scipy.org/doc/scipy/reference/generated/scipy.io.wavfile.read.html). `normalize` parameter has no effect for other formats and the load function always return normalized value with `float32` Tensor.

__* Note__ The current binary distribution of torchaudio does not contain `ogg/vorbis` and `opus` codecs. To handle these files, one needs to build torchaudio from the source with proper codecs in the system.

__Note 2__ Since this PR, `scipy` becomes required module for running test.",11,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,17,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(data, expected)'), ('Equal', '(data, data_ref, atol=3e-03, rtol=1.3e-06)'), ('Equal', '(data, data_ref, atol=4e-05, rtol=1.3e-06)'), ('Equal', '(data, data_ref, atol=4e-05, rtol=1.3e-06)'), ('_wav', '(dtype, sample_rate, num_channels, normalize, duration=1)'), ('_wav', '(dtype, sample_rate, num_channels, normalize, two_hours)'), ('_wav', '(dtype, sample_rate, num_channels, normalize, duration=1)'), ('_mp3', '(sample_rate, num_channels, bit_rate, duration=1)'), ('_mp3', '(sample_rate, num_channels, bit_rate, two_hours)'), ('_flac', '(sample_rate, num_channels, compression_level, duration=1)'), ('_flac', '(sample_rate, num_channels, compression_level, two_hours)'), ('_vorbis', '(sample_rate, num_channels, quality_level, duration=1)'), ('_vorbis', '(sample_rate, num_channels, quality_level, two_hours)'), ('Equal', '(found, self.original[:, frame_offset:frame_end])'), ('Equal', '(found, expected)'), ('Equal', '(py_sr, ts_sr)'), ('Equal', '(py_data, ts_data)')]",['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sr == sample_rate', 'sr == sample_rate', 'sr == sample_rate', 'sr == sample_rate']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
431,lbjcom,lbjcom@gmail.com,2020-06-26 23:55:25+09:00,66f4cdf9a95af341da23645f00b308d2caf9a905,https://github.com/pytorch/audio/commit/66f4cdf9a95af341da23645f00b308d2caf9a905,"rollback torch.norm() in spectrogram() (#747)

* Update functional.py

rollback torch.norm() in spectrogram() to v0.4.0.

* Update functional.py

comment out `spec_f = complex_norm(spec_f, power=power)`.

* fixed complex_norm() instead of spectrogram() for torch.norm() issue.

* lint

Co-authored-by: bongjin.lee <bongjin.lee@navercorp.com>
Co-authored-by: Vincent QB <vincentqb@users.noreply.github.com>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
432,moto,855818+mthrok@users.noreply.github.com,2020-06-26 13:19:23-04:00,4daf2fb70b61dc2588dc7abc3f214c34d811e162,https://github.com/pytorch/audio/commit/4daf2fb70b61dc2588dc7abc3f214c34d811e162,Add vorbis to binary build (#750),6,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
433,jimchen90,65626796+jimchen90@users.noreply.github.com,2020-06-29 11:41:56-04:00,878d3dacba2426ffaa6b1045bc09d6e6d17c202b,https://github.com/pytorch/audio/commit/878d3dacba2426ffaa6b1045bc09d6e6d17c202b,"Update MelResNet (#751)

* update varible names and docstring

* update format

* update docsting and output value

Co-authored-by: Ji Chen <jimchen90@devfair0160.h2.fair>",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['out.size() == (n_batch, n_output, n_time - kernel_size + 1)']",[],[],[],[],[],[],[],[],[],[],[],[],"['out.size() == (batch_size, output_dims, num_features - pad * 2)']",[],[],[],[],[],[],[],[],[],[],[],[]
434,Artyom Astafurov,asta@fb.com,2020-06-30 11:08:42-04:00,d71661aadceabd56e175543f8bf14af6d1d36f90,https://github.com/pytorch/audio/commit/d71661aadceabd56e175543f8bf14af6d1d36f90,add probot (#737),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
435,moto,855818+mthrok@users.noreply.github.com,2020-07-01 11:15:40-04:00,ea42513fbad825f870d87e94a0f187a5b543176c,https://github.com/pytorch/audio/commit/ea42513fbad825f870d87e94a0f187a5b543176c,"Use cmake for third party (#753)

* Use cmake for third party

* Apply patch to libmad

* Update gitignore

* Update docker test image",11,False,False,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
436,moto,855818+mthrok@users.noreply.github.com,2020-07-01 14:41:45-04:00,3324283cbd72bafbd240089296135911e5197f10,https://github.com/pytorch/audio/commit/3324283cbd72bafbd240089296135911e5197f10,"Add TorchScript-able ""save"" func to sox_io backend (#732)

This is a part of PRs to add new ""sox_io"" backend. #726 and depends on #718, #728 and #731.

This PR adds `save` function to ""sox_io"" backend, which can save Tensor to a file with the following audio formats;
 - `wav`
 - `mp3`
 - `flac`
 - `ogg/vorbis`",13,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,26,1,1,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(original, data)'), ('Equal', '(original, data)'), ('Equal', '(found, expected)'), ('Equal', '(found, expected)'), ('Equal', '(found, expected)'), ('Equal', '(found, expected, atol=atol, rtol=1.3e-6)'), ('_wav', '(dtype, sample_rate, num_channels, num_frames=None)'), ('_wav', '(dtype, sample_rate, num_channels, num_frames=two_hours)'), ('_wav', '(dtype, sample_rate, num_channels, num_frames=None)'), ('_mp3', '(sample_rate, num_channels, bit_rate, duration=1)'), ('_mp3', '(sample_rate, num_channels, bit_rate, duration=two_hours)'), ('_flac', '(sample_rate, num_channels, compression_level, duration=1)'), ('_flac', '(sample_rate, num_channels, compression_level, duration=two_hours)'), ('_vorbis', '(sample_rate, num_channels, quality_level, duration=20)'), ('_vorbis', '(sample_rate, num_channels, quality_level, two_hours)'), ('Equal', '(found, expected)'), ('Equal', '(found, expected)'), ('Equal', '(data, expected)'), ('Equal', '(sample_rate, py_sr)'), ('Equal', '(sample_rate, ts_sr)'), ('Equal', '(expected, py_data)'), ('Equal', '(expected, ts_data)'), ('Equal', '(sample_rate, py_sr)'), ('Equal', '(sample_rate, ts_sr)'), ('Equal', '(expected, py_data)'), ('Equal', '(expected, ts_data)')]",['def setUp(self):'],"[('Class', '(cls)')]",[],"[('Class', '(cls)')]",[],[],[],[],[],[],[],['def setUp(self):'],[],['def tearDown(self):'],[],[],[],[],[],[],"['sr == sample_rate', 'sr == sample_rate', 'sample_rate == sr', 'not expected.is_contiguous()']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
437,jimchen90,65626796+jimchen90@users.noreply.github.com,2020-07-01 15:00:03-04:00,6b159054882e0385b3578d6499f68d1dad25950a,https://github.com/pytorch/audio/commit/6b159054882e0385b3578d6499f68d1dad25950a,"UpsampleNetwork (#724)

* upsamplenetwork

* update name

* update name and docstring

* update format

* rebase

* update docstring

* update docstring

* remove transpose and update docstring

Co-authored-by: Ji Chen <jimchen90@devfair0160.h2.fair>",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['out1.size() == (n_batch, n_freq, total_scale * (n_time - kernel_size + 1))', 'out2.size() == (n_batch, n_output, total_scale * (n_time - kernel_size + 1))']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
438,moto,855818+mthrok@users.noreply.github.com,2020-07-01 16:53:56-04:00,a20da5e3c5d3e3cb438c96491b10e044dda89db8,https://github.com/pytorch/audio/commit/a20da5e3c5d3e3cb438c96491b10e044dda89db8,Refactor test utilities (#756),17,False,True,True,True,True,True,False,False,False,False,False,False,False,False,False,[],0,0,2,1,0,1,4,1,0,0,2,0,0,2,1,0,1,4,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],"['def setUp(self):', 'def setUp(self):']","[('Class', '(cls)')]",[],"[('Class', '(cls)')]","['shutil.which(cmd) is None, f)', 'not is_module_available(module), f)', '', 'not torch.cuda.is_available(), reason=)']",['()'],[],[],"['import unittest', 'import unittest']",[],[],"['def setUp(self):', 'def setUp(self):']","[('Class', '(cls)')]",[],"[('Class', '(cls)')]","['shutil.which(cmd) is None, f)', 'not is_module_available(module), f)', ')', 'not torch.cuda.is_available(), reason=)']",['()'],[],[],['import unittest'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
439,moto,855818+mthrok@users.noreply.github.com,2020-07-01 19:41:03-04:00,894959a7bd69ae9c4a50723ad128c734c64e6da2,https://github.com/pytorch/audio/commit/894959a7bd69ae9c4a50723ad128c734c64e6da2,Add opus support (#755),16,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(expected, found)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['info.get_sample_rate() == 48000', 'info.get_num_frames() == 32768', 'info.get_num_channels() == num_channels', 'sample_rate == sr']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
440,moto,855818+mthrok@users.noreply.github.com,2020-07-01 19:42:48-04:00,4b583eab6afbd98af9c0a57bce65f5affdc3b027,https://github.com/pytorch/audio/commit/4b583eab6afbd98af9c0a57bce65f5affdc3b027,Add sox_io_backend (#726),4,False,True,True,False,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['import unittest'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
441,moto,855818+mthrok@users.noreply.github.com,2020-07-06 09:49:05-04:00,e43ee196402c71911357911801c65c40b6b4dde6,https://github.com/pytorch/audio/commit/e43ee196402c71911357911801c65c40b6b4dde6,Replace torchaudio.load in test with scipy func  (#762),5,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
442,moto,855818+mthrok@users.noreply.github.com,2020-07-06 11:47:12-04:00,ad7f43fed2b85cdbe0713d25c6eb804e9cf98b69,https://github.com/pytorch/audio/commit/ad7f43fed2b85cdbe0713d25c6eb804e9cf98b69,"Fix CI: Cannot uninstall a distutils installed project (#766)

* Pin llvmlite

* Add comments",1,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
443,jimchen90,65626796+jimchen90@users.noreply.github.com,2020-07-07 20:16:04-04:00,68cc72da6383b97899033454313e62cd170963eb,https://github.com/pytorch/audio/commit/68cc72da6383b97899033454313e62cd170963eb,"Add WaveRNN Model (#735)

* upsamplenetwork

* update variable names

* update variable name

* add wavernn model

* update test

* update format

* update format

* update format

* fix conflicts and add transpose

* import update

* update transpose

* update format

* update docstring

* add n_channel in input

* add comment

* update docstring

* update docstring

Co-authored-by: Ji Chen <jimchen90@devfair0160.h2.fair>",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['out.size() == (n_batch, 1, hop_length * (n_time - kernel_size + 1), 2 ** n_bits)', 'out.size() == (n_batch, 1, hop_length * (n_time - kernel_size + 1), 30)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
444,moto,855818+mthrok@users.noreply.github.com,2020-07-08 12:21:04-04:00,180ede8ec692cb2b8b30e1fccb0e8ee77488913b,https://github.com/pytorch/audio/commit/180ede8ec692cb2b8b30e1fccb0e8ee77488913b,Get rid of typedefs/SignalInfo and replace AudioMetaData (#761),10,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['info.sample_rate == sample_rate', 'info.num_frames == sample_rate * duration', 'info.num_channels == num_channels', 'info.sample_rate == sample_rate', 'info.num_frames == sample_rate * duration', 'info.num_channels == num_channels', 'info.sample_rate == sample_rate', 'info.num_channels == num_channels', 'info.sample_rate == sample_rate', 'info.num_frames == sample_rate * duration', 'info.num_channels == num_channels', 'info.sample_rate == sample_rate', 'info.num_frames == sample_rate * duration', 'info.num_channels == num_channels', 'info.sample_rate == 48000', 'info.num_frames == 32768', 'info.num_channels == num_channels', 'py_info.sample_rate == ts_info.sample_rate', 'py_info.num_frames == ts_info.num_frames', 'py_info.num_channels == ts_info.num_channels']",[],[],[],[],[],[],[],[],[],[],[],[],"['info.get_sample_rate() == sample_rate', 'info.get_num_frames() == sample_rate * duration', 'info.get_num_channels() == num_channels', 'info.get_sample_rate() == sample_rate', 'info.get_num_frames() == sample_rate * duration', 'info.get_num_channels() == num_channels', 'info.get_sample_rate() == sample_rate', 'info.get_num_channels() == num_channels', 'info.get_sample_rate() == sample_rate', 'info.get_num_frames() == sample_rate * duration', 'info.get_num_channels() == num_channels', 'info.get_sample_rate() == sample_rate', 'info.get_num_frames() == sample_rate * duration', 'info.get_num_channels() == num_channels', 'info.get_sample_rate() == 48000', 'info.get_num_frames() == 32768', 'info.get_num_channels() == num_channels', 'py_info.get_sample_rate() == ts_info.get_sample_rate()', 'py_info.get_num_frames() == ts_info.get_num_frames()', 'py_info.get_num_channels() == ts_info.get_num_channels()']",[],[],[],[],[],[],[],[],[],[],[],[]
445,Artyom Astafurov,asta@fb.com,2020-07-08 14:57:10-04:00,c375490f4f6d0fe90156767995cfdba14812a95f,https://github.com/pytorch/audio/commit/c375490f4f6d0fe90156767995cfdba14812a95f,"Add Waveforms for Testing Purposes section to test/README.md (#759)

* add Waveforms for Testing Purposes section

* Update test/README.md

use wrapper function for scipy.io.wavfile.read

Co-authored-by: moto <855818+mthrok@users.noreply.github.com>

* remove un-used files from the doc

* Update test/README.md

Rename variable

Co-authored-by: moto <855818+mthrok@users.noreply.github.com>

* fix indent; remove mentions of unused files

* remove whitenoise* files from README.md

Co-authored-by: moto <855818+mthrok@users.noreply.github.com>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
446,engineerchuan,engineerchuan@gmail.com,2020-07-11 21:56:38-04:00,26941fa3777618dfc659e638e524b65f22dd32a6,https://github.com/pytorch/audio/commit/26941fa3777618dfc659e638e524b65f22dd32a6,"Convert CommonVoice test asset to wav, and remove unused test asset (#772)

* converted CommonVoice tartar mp3 to wav using rate 8000 Hz

* Remove Unused dtmf_30s_stereo.mp3",5,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
447,engineerchuan,engineerchuan@gmail.com,2020-07-13 14:40:53-04:00,c9142fd5fe4341fa3491fe07060775f0ed45cd4e,https://github.com/pytorch/audio/commit/c9142fd5fe4341fa3491fe07060775f0ed45cd4e,"Use default backend for TestCommonVoice (#775)

* Change 'sox' to 'default'",1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
448,moto,855818+mthrok@users.noreply.github.com,2020-07-14 12:45:41-04:00,f6dc2f67783082b433dfa99d4b0a8992ba64be9d,https://github.com/pytorch/audio/commit/f6dc2f67783082b433dfa99d4b0a8992ba64be9d,Add macOS CPU unittest (#777),5,False,False,True,True,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
449,moto,855818+mthrok@users.noreply.github.com,2020-07-14 12:46:12-04:00,4b3e9052052c47f5fb367bc2500cc53c9946a2ed,https://github.com/pytorch/audio/commit/4b3e9052052c47f5fb367bc2500cc53c9946a2ed,"Remove frames_per_chunk argument from save (#780)

In #779, we plan to remove `frames_per_chunk` parameter from `save` function, but it will take some time before we can land #779, so we go ahead and remove the parameter first to reduce the conflict caused by interface change.",4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
450,engineerchuan,engineerchuan@gmail.com,2020-07-14 13:14:50-04:00,d11ad6bb3f8bf4be53f696f1211b5ed1cfb675f5,https://github.com/pytorch/audio/commit/d11ad6bb3f8bf4be53f696f1211b5ed1cfb675f5,"Stop using whitenoise.wav, mp3 and torchaudio.load in sox effect test

Part of #764

 - Replace `whitenoise.wav` with on-the-fly data generation
 - Replace `torchaudio.load` with `common_utils.load_wav`
 - Replace `steam-train-whistle-daniel_simon.mp3` with `.wav`",3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(output_waveform, sox_output_waveform, atol=1.5e-3, rtol=1e-5)')]",['def setUp(self):'],[],[],[],[],[],[],[],[],[],"[('Equal', '(output_waveform, sox_output_waveform, atol=1e-3, rtol=1e-5)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
451,moto,855818+mthrok@users.noreply.github.com,2020-07-14 16:00:17-04:00,131e48b665d6c1aef8a48fb0e0ecaed3dd78e63b,https://github.com/pytorch/audio/commit/131e48b665d6c1aef8a48fb0e0ecaed3dd78e63b,"Skip lowpass_speed on macOS (#782)

`test/test_sox_effects.py::Test_SoxEffectsChain::test_lowpass_speed` has some issue on our macOS CI, even though there was no issue at #777 .

While we figure out the fix, we disable this test for macOS.",1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],['sys.platform == )'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
452,moto,855818+mthrok@users.noreply.github.com,2020-07-14 18:37:58-04:00,db8f2bf3f632b642ee05c5ea710ada5bdd0fdc4d,https://github.com/pytorch/audio/commit/db8f2bf3f632b642ee05c5ea710ada5bdd0fdc4d,"Do not use SoxEffectsChain in sox compatibility test (#781)

This PR replaces `torchaudio.sox_effects.SoxEffectsChain` in `test_sox_compatibility` with bare `sox` command.

The parity of `torchaudio.sox_effects.SoxEffectsChain` against `sox` command is not tested and it has known issues https://github.com/pytorch/audio/issues/771, therefore it is not appropriate to use this class for testing other functions.",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,28,0,0,0,0,0,0,0,0,0,0,25,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(result, expected, atol=atol, rtol=rtol)'), ('_sox_effect', '(result, path, [, 3])'), ('_sox_effect', '(result, path, [])'), ('_sox_effect', '(result, path, [], atol=1.5e-4)'), ('_sox_effect', '(result, path, [, cutoff_freq], atol=1.5e-4)'), ('_sox_effect', '(result, path, [, cutoff_freq], atol=1.5e-4)'), ('_sox_effect', '(result, path, [])'), ('_sox_effect', '(result, path, [])'), ('_sox_effect', '(result, path, [])'), ('_sox_effect', '(result, path, [])'), ('_sox_effect', '(result, path, [])'), ('_sox_effect', '(result, path, [])'), ('_sox_effect', '(result, path, [])'), ('_sox_effect', '(result, path, [], atol=1.5e-4)'), ('_sox_effect', '(result, path, [])'), ('_sox_effect', '(result, path, [])'), ('_sox_effect', '(result, path, [, enhancement_amount])'), ('_sox_effect', '(result, path, [, shift, limiter_gain])'), ('_sox_effect', '(result, path, [, shift])'), ('_sox_effect', '(result, path, [, gain, colour])'), ('_sox_effect', '(result, path, [])'), ('_sox_effect', '(result, path, [])'), ('_sox_effect', '('), ('_sox_effect', '('), ('_sox_effect', '('), ('_sox_effect', '('), ('_sox_effect', '(result, path, [, center_freq, q, gain])'), ('_sox_effect', '(result, path, [, b0, b1, b2, a0, a1, a2])')]",[],[],[],[],[],[],[],[],[],[],"[('True', '(waveform_gain.abs().max().item(), 1.)'), ('Equal', '(waveform_gain, sox_gain_waveform, atol=1e-04, rtol=1e-5)'), ('Equal', '(waveform_dithered, sox_dither_waveform, atol=1e-04, rtol=1e-5)'), ('Equal', '(waveform_dithered_noiseshaped, sox_dither_waveform_ns, atol=1e-02, rtol=1e-5)'), ('Equal', '(wf_vctk, wf_vctk_sox, rtol=1e-03, atol=1e-03)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1.5e-3, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1.5e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(output_waveform, sox_output_waveform, atol=1e-4, rtol=1e-5)'), ('Equal', '(waveform_lfilter_out, waveform_sox_out, atol=1e-4, rtol=1e-5)')]",['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
453,moto,855818+mthrok@users.noreply.github.com,2020-07-15 22:48:32-04:00,60a8e23d0171a809a08caf6cd4823ed7db4c50db,https://github.com/pytorch/audio/commit/60a8e23d0171a809a08caf6cd4823ed7db4c50db,"Add Torchscript sox effects (#760)

* Add sox_utils module

* Make init/shutdown thread safe

* Add sox effects implementation

* Add test for sox effects

* Update docstrings and add examples",27,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,11,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(original, expected)'), ('Equal', '(expected, found)'), ('Equal', '(expected, found)'), ('Equal', '(expected, found)'), ('Equal', '(found, expected)'), ('Equal', '(found, expected)'), ('Equal', '(found, expected, atol=1e-4, rtol=1e-8)'), ('Equal', '(found, expected)'), ('Equal', '(found, expected)'), ('Equal', '(expected, found)'), ('Equal', '(expected, found)')]",[],[],[],[],[],[],[],[],[],[],[],['def setUp(self):'],"[('Class', '(cls)')]",[],[],[],[],[],[],[],"['batch.shape == (32, 2, 2 * sample_rate)', 'batch.shape == (32, 2, 2 * sample_rate)', 'output_sample_rate == sample_rate', 'expected is not found', 'sr == expected_sr', 'output_sample_rate == sample_rate', 'sr == expected_sr', 'sr == expected_sr', 'sr == expected_sr', 'sr == expected_sr', 'sr == expected_sr', 'sr_found == sr_expected', 'sr_found == sr_expected', 'in effects', 'in effects', 'in effects', 'in formats']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
454,moto,855818+mthrok@users.noreply.github.com,2020-07-16 12:27:16-04:00,8181a83b5276dc38c4d1fa3201485f75cb41d7ca,https://github.com/pytorch/audio/commit/8181a83b5276dc38c4d1fa3201485f75cb41d7ca,Add deprication warnings to SoxEffect and SoxEffectsChain (#787),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
455,engineerchuan,engineerchuan@gmail.com,2020-07-16 18:10:46-04:00,02b898fffc3a078438f0aa9f8596001af6d28c47,https://github.com/pytorch/audio/commit/02b898fffc3a078438f0aa9f8596001af6d28c47,"Get rid of whitenoise and sinewave files from test (#783)

* Get rid of sine wave files and whitenoise files
* Refactor integer encoding
* Relax rtol from 1e-8 to 1e-7 for compliance kaldi
* relax waveform multi channel resample atol to 1e-7 from 1e-8
* relax tolerance for length consistency for speed effect

Co-authored-by: moto <855818+mthrok@users.noreply.github.com>",9,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,6,1,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('False', '(s)'), ('_batch_consistencies', '(F.detect_pitch_frequency, waveform, sample_rate)'), ('True', '(upsample_sound.size(-1) == self.test1_signal.size(-1) * 2)'), ('True', '(downsample_sound.size(-1) == self.test1_signal.size(-1) // 2)'), ('True', '(downsample_sound.size(-1) == self.test1_signal.size(-1))'), ('Equal', '(x.size(1), int((si.length / si.channels) / speed), atol=1, rtol=1e-8)')]",['def setUp(self):'],[],[],[],[],[],[],[],[],[],"[('False', '(s)'), ('_batch_consistencies', '(F.detect_pitch_frequency, waveform, sample_rate)'), ('True', '(upsample_sound.size(-1) == sound.size(-1) * 2)'), ('True', '(downsample_sound.size(-1) == sound.size(-1) // 2)'), ('True', '(downsample_sound.size(-1) == sound.size(-1))'), ('Equal', '(x.size(1), int((si.length / si.channels) / speed))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
456,moto,855818+mthrok@users.noreply.github.com,2020-07-16 18:54:22-04:00,102174e968e6365a527e34ebffc31d5c674eff0c,https://github.com/pytorch/audio/commit/102174e968e6365a527e34ebffc31d5c674eff0c,Generate YESNO dataset on-the-fly for test (#792),4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(expected_data, waveform, atol=5e-5, rtol=1e-8)')]",[],"[('Class', '(cls)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample_rate == 8000', 'label == expected_label']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
457,Emmanouil Theofanis Chourdakis,eruyome@gmail.com,2020-07-17 23:22:15+03:00,47eb1e6a8fabda4b784367be9babfd30345ee590,https://github.com/pytorch/audio/commit/47eb1e6a8fabda4b784367be9babfd30345ee590,"Changed GTZAN so that it only traverses filenames belonging to the dataset (#791)

* Addressed review issues in PR #668

* Changed GTZAN so that it only traverses filenames belonging to the dataset

Now, instead of walking the whole directory and subdirectories of the dataset
GTZAN only looks for files under a `genre`/`genre`.`5 digit number`.wav format, where `genre` is an allowed GTZAN genre label.
This allows moving or removing files from the dataset (e.g. for fixing duplication or mislabeling issues).",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
458,jimchen90,65626796+jimchen90@users.noreply.github.com,2020-07-17 17:14:35-04:00,209858ea2eddd33e1a8f677ebd13d98b3d864906,https://github.com/pytorch/audio/commit/209858ea2eddd33e1a8f677ebd13d98b3d864906,"Update variable names in wavernn model (#797)

* Change the name of  n_output and n_hidden

* Replace the mode by n_classes and sample_rate

* Change the definition of n_output and n_hidden

Co-authored-by: Ji Chen <jimchen90@devfair0160.h2.fair>",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['out.size() == (n_batch, 1, hop_length * (n_time - kernel_size + 1), n_classes)']",[],[],[],[],[],[],[],[],[],[],[],[],"['out.size() == (n_batch, 1, hop_length * (n_time - kernel_size + 1), 2 ** n_bits)', 'out.size() == (n_batch, 1, hop_length * (n_time - kernel_size + 1), 30)']",[],[],[],[],[],[],[],[],[],[],[],[]
459,jimchen90,65626796+jimchen90@users.noreply.github.com,2020-07-20 15:46:54-04:00,4b8aad7a1a8b39521e66c967f1b976e73a763c7d,https://github.com/pytorch/audio/commit/4b8aad7a1a8b39521e66c967f1b976e73a763c7d,"Add LibriTTS dataset (#790)

* Add libritts

Add LibriTTS dataset draft

* Add libritts

Use two separate ids for utterance_id.

* Update output form

Use full_id as utterance_id.

* Update format

Add space and test black format

* Update test method

* Add audio and text test

Generate audio and test files on-the-fly in test 

* Update format

* Fix test error and remove assets libritts

The test error is fixed by sorting the file in 4th element instead of 2nd element in samples. Since the files are generated on-the-fly, so the the libritts files in assets are removed.

* Add seed in `get_whitenoise` function

* Change utterance to text

Change `_utterance` to `_text`.

Co-authored-by: Ji Chen <jimchen90@devfair0160.h2.fair>",4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(expected_data, waveform, atol=5e-5, rtol=1e-8)')]",[],"[('Class', '(cls)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample_rate == 8000', 'speaker_id == expected_ids[0]', 'chapter_id == expected_ids[1]', 'original_text == self.original_text', 'normalized_text == self.normalized_text', 'utterance_id == f']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
460,jimchen90,65626796+jimchen90@users.noreply.github.com,2020-07-20 16:59:26-04:00,e82cc350d89d31963009f0d0d9c708adef84eafb,https://github.com/pytorch/audio/commit/e82cc350d89d31963009f0d0d9c708adef84eafb,"Update default form in docstring (#802)

* Update default form in docstring
Co-authored-by: Ji Chen <jimchen90@devfair0160.h2.fair>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
461,jimchen90,65626796+jimchen90@users.noreply.github.com,2020-07-20 17:00:48-04:00,937d52f87de157aec6fbd5bccde962b468201ebb,https://github.com/pytorch/audio/commit/937d52f87de157aec6fbd5bccde962b468201ebb,"Fix output type of upsampling (#801)

Fix output type of upsampling
Co-authored-by: Ji Chen <jimchen90@devfair0160.h2.fair>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
462,moto,855818+mthrok@users.noreply.github.com,2020-07-20 18:31:51-04:00,2381dd89f1959b8931c692c6406fa6813cddfb1f,https://github.com/pytorch/audio/commit/2381dd89f1959b8931c692c6406fa6813cddfb1f,"Update documentation and fix docstrings (#788)

- Addresses #549 #638 #786 
- Add `torchaudio` top level module doc
- Separate `torchaudio` top level module doc from `index.html`
- Add `backend` module doc.
- Remove `-> None` from function signature as it adds noise to documentation
- Changed function argument name of `torchaudio.backend.sox_io_backend.save` from `tensor` to `src`, so that it matches with the reset of backends.
- Tweak bunch of docstrings",14,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
463,jimchen90,65626796+jimchen90@users.noreply.github.com,2020-07-21 09:37:13-04:00,fac1bba916e7474262bff34fda897ad45c836c7e,https://github.com/pytorch/audio/commit/fac1bba916e7474262bff34fda897ad45c836c7e,"Add wavernn example pipeline (#749)

* Add WaveRNN example

This is the pipeline example based on [WaveRNN model](https://github.com/pytorch/audio/pull/735) in torchaudio. The design of this pipeline is inspired by [#632](https://github.com/pytorch/audio/pull/632). It offers a standardized implementation of WaveRNN vocoder in torchaudio.

* Add utils and readme

The metric logger is added based on the Wav2letter pipeline [#632](https://github.com/pytorch/audio/pull/632). It offers the way to parse the standard output as described in readme.

* Add channel dimension

The channel dimension of waveform in datasets is added to match the input dimensions of WaveRNN model because the channel dimensions of waveform and spectrogram are added in [this part] (https://github.com/pytorch/audio/blob/master/torchaudio/models/_wavernn.py#L281) of WaveRNN model.

* Update date split and transform

The design of dataset structure is discussed in [this comment](https://github.com/pytorch/audio/pull/749#discussion_r454627027). Now the dataset file has a clearer workflow after using the random-split function instead of walking through all the files. All transform functions are put together inside the transforms block.

Co-authored-by: Ji Chen <jimchen90@devfair0160.h2.fair>",6,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
464,top0coder,58798841+top0coder@users.noreply.github.com,2020-07-21 16:45:40-04:00,3781cb2339d52744b6dd93179d09d27c2885d573,https://github.com/pytorch/audio/commit/3781cb2339d52744b6dd93179d09d27c2885d573,"Remove if __name__ == __main__ from test code (#804)

Co-authored-by: Jeff Zhang <jeffzhang@fb.com>",11,False,True,True,False,True,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
465,moto,855818+mthrok@users.noreply.github.com,2020-07-22 12:38:46-04:00,daa0007aac69de35b45c15194444e4bfc09fef03,https://github.com/pytorch/audio/commit/daa0007aac69de35b45c15194444e4bfc09fef03,"Add smoke tests to sox_io and sox_effects (#806)

Currently all the tests in `sox_io_backend` and `sox_effects` (for new SoX effects implementation) requires additional `sox`, and this prevents running test in environment where `sox` command is not available even though `torchaudio` extension is available (such as fb internal). This PR adds smoke tests for these modules, which just runs functions to see if they do not crash.",7,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['info.sample_rate == sample_rate', 'info.num_channels == num_channels', 'sr == sample_rate', 'loaded.shape[0] == num_channels']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
466,moto,855818+mthrok@users.noreply.github.com,2020-07-22 12:39:30-04:00,057460425f7b937037ffa517174852f5df83ebc3,https://github.com/pytorch/audio/commit/057460425f7b937037ffa517174852f5df83ebc3,"Refactor test_sox_effects (#805)

1. Move misplaced sox compatibility test (T,Fade, T.Vol, T.Vad) to test/test_sox_compatibility.py
2. Move test_sox_effects to test/sox_effect/ where all the other functionalities from torchaudio.sox_effects are tested",3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,3,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_sox_effect', '(result, path, [])'), ('_sox_effect', '(result, path, [, gain_type])'), ('_sox_effect', '(result, path, [])')]",[],[],[],[],[],[],[],[],[],[],"[('True', '(x.allclose(fade(x_orig), rtol=1e-4, atol=1e-4))'), ('True', '(x.allclose(z, rtol=1e-4, atol=1e-4))'), ('True', '(x.allclose(y, rtol=1e-4, atol=1e-4))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
467,moto,855818+mthrok@users.noreply.github.com,2020-07-22 13:02:39-04:00,00cc000e35880b280bb681cba2c53b40ec1a52de,https://github.com/pytorch/audio/commit/00cc000e35880b280bb681cba2c53b40ec1a52de,"Rename test_case_utils to case_utils (#808)

buck gets confused with utility module name with `test_` prefix.",2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
468,moto,855818+mthrok@users.noreply.github.com,2020-07-22 14:50:26-04:00,d346cacb0e375bcb2b9eaec61563c3c5592c27d6,https://github.com/pytorch/audio/commit/d346cacb0e375bcb2b9eaec61563c3c5592c27d6,Remove unused files from CCI (#809),3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
469,moto,855818+mthrok@users.noreply.github.com,2020-07-22 17:24:12-04:00,f16f74afc1841389506b41bd96da603063c3c90e,https://github.com/pytorch/audio/commit/f16f74afc1841389506b41bd96da603063c3c90e,"[BC Breaking] Split `list_formats()` for read and write (#811)

* Separate sox list format function for read and write

* Guard MP3 smoke test",6,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[''],[],[],[],['import unittest'],[],[],[],[],[],[],[],[],[],[],[],['not in formats'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
470,moto,855818+mthrok@users.noreply.github.com,2020-07-22 18:56:11-04:00,0812f22a9a5c9f9823a7d4e06dc1f1993e54fd7a,https://github.com/pytorch/audio/commit/0812f22a9a5c9f9823a7d4e06dc1f1993e54fd7a,"Get rid of whitenoise_1min.mp3 (#813)

Part of #764",2,False,True,True,False,True,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['not common_utils.BACKENDS_MP3, )']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
471,moto,855818+mthrok@users.noreply.github.com,2020-07-22 19:04:18-04:00,0406d30df6be7f24ad4fdc9a2dc72d3ddc9f3e3c,https://github.com/pytorch/audio/commit/0406d30df6be7f24ad4fdc9a2dc72d3ddc9f3e3c,"Replace sox_io save/load with sox effects chain in C++ (#779)

* Replace save/load function with sox effects chain",3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
472,moto,855818+mthrok@users.noreply.github.com,2020-07-23 12:40:53-04:00,3cdcd7ba97cffc5c947242f4320d58e089896030,https://github.com/pytorch/audio/commit/3cdcd7ba97cffc5c947242f4320d58e089896030,Refactor datasets test (#817),5,False,True,False,False,True,False,False,False,False,False,False,False,False,False,False,[],0,2,0,2,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,1,8,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(expected_data, waveform, atol=5e-5, rtol=1e-8)'), ('Equal', '(expected_data, waveform, atol=5e-5, rtol=1e-8)')]",[],"[('Class', '(cls)'), ('Class', '(cls)')]",[],[],[],[],[],[],[],[],"[('Equal', '(expected_data, waveform, atol=5e-5, rtol=1e-8)'), ('Equal', '(expected_data, waveform, atol=5e-5, rtol=1e-8)')]",[],"[('Class', '(cls)'), ('Class', '(cls)')]",[],[],[],[],[],[],['import unittest'],"['sample_rate == 8000', 'speaker_id == expected_ids[0]', 'chapter_id == expected_ids[1]', 'original_text == self.original_text', 'normalized_text == self.normalized_text', 'utterance_id == f', 'sample_rate == 8000', 'label == expected_label']",[],[],[],[],[],[],[],[],[],[],[],[],"['sample_rate == 8000', 'label == expected_label', 'sample_rate == 8000', 'speaker_id == expected_ids[0]', 'chapter_id == expected_ids[1]', 'original_text == self.original_text', 'normalized_text == self.normalized_text', 'utterance_id == f']",[],[],[],[],[],[],[],[],[],[],[],[]
473,moto,855818+mthrok@users.noreply.github.com,2020-07-23 14:50:21-04:00,68f6a6a05a5a25fbb7d5d11fde5bf9248e6bc3de,https://github.com/pytorch/audio/commit/68f6a6a05a5a25fbb7d5d11fde5bf9248e6bc3de,Make GTZAN dataset sorted and use on-the-fly data in GTZAN test (#819),5,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,4,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(waveform, self.samples[i][0], atol=5e-5, rtol=1e-8)'), ('Equal', '(waveform, self.training[i][0], atol=5e-5, rtol=1e-8)'), ('Equal', '(waveform, self.validation[i][0], atol=5e-5, rtol=1e-8)'), ('Equal', '(waveform, self.testing[i][0], atol=5e-5, rtol=1e-8)')]",[],"[('Class', '(cls)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample_rate == self.samples[i][1]', 'label == self.samples[i][2]', 'n_ite == len(self.samples)', 'sample_rate == self.training[i][1]', 'label == self.training[i][2]', 'n_ite == len(self.training)', 'sample_rate == self.validation[i][1]', 'label == self.validation[i][2]', 'n_ite == len(self.validation)', 'sample_rate == self.testing[i][1]', 'label == self.testing[i][2]', 'n_ite == len(self.testing)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
474,moto,855818+mthrok@users.noreply.github.com,2020-07-23 14:52:48-04:00,1def3fa99867e45728c908e2ca557eb02681aad1,https://github.com/pytorch/audio/commit/1def3fa99867e45728c908e2ca557eb02681aad1,Make walk_files traverse in alphabetical and breadth-first order (#814),4,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['n_ites == len(self.utterance_ids)', 'found == self.expected[i]', 'n_ites == len(self.expected)', 'n_ite == len(self.data)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
475,moto,855818+mthrok@users.noreply.github.com,2020-07-23 18:17:32-04:00,6897aff1acaf52dc0bb06ac63f4cd62647d00a90,https://github.com/pytorch/audio/commit/6897aff1acaf52dc0bb06ac63f4cd62647d00a90,"Avoid ""-"" symbol in generated test name (#822)

Buck fails to run tests if they contain ""-"" symbol.",1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
476,jimchen90,65626796+jimchen90@users.noreply.github.com,2020-07-24 09:35:38-04:00,45761f0afb0dce1fb0088ebb2906ca6e36c1b454,https://github.com/pytorch/audio/commit/45761f0afb0dce1fb0088ebb2906ca6e36c1b454,"Update sample rate (#820)

* Update sample rate of libritts test
Co-authored-by: Ji Chen <jimchen90@devfair0160.h2.fair>",1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['sample_rate == 24000'],[],[],[],[],[],[],[],[],[],[],[],[],['sample_rate == 8000'],[],[],[],[],[],[],[],[],[],[],[],[]
477,Edward Lu,edwardhdlu@gmail.com,2020-07-27 05:46:10-07:00,577796ba112228a7965c3b1ffc277c692e7b8ce9,https://github.com/pytorch/audio/commit/577796ba112228a7965c3b1ffc277c692e7b8ce9,"Add test for LibriSpeech dataset (#825)

Co-authored-by: Edward Lu <edlu@fb.com>",4,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(data, self.samples[i][0], atol=5e-5, rtol=1e-8)')]",[],"[('Class', '(cls)')]",[],"[('Class', '(cls)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample_rate == self.samples[i][1]', 'utterance == self.samples[i][2]', 'speaker_id == self.samples[i][3]', 'chapter_id == self.samples[i][4]', 'utterance_id == self.samples[i][5]', 'num_samples == len(self.samples)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
478,Lawrence Chen,lawrencechen98@gmail.com,2020-07-27 11:37:46-07:00,6fcbff9c54e17c6ec3083ae0f35d8226ee3cb7d0,https://github.com/pytorch/audio/commit/6fcbff9c54e17c6ec3083ae0f35d8226ee3cb7d0,"Add unit test for LJSpeech dataset (#826)

Co-authored-by: lawrencechen <lawrencechen@devvm3189.vll0.facebook.com>",5,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(expected_data, waveform, atol=5e-5, rtol=1e-8)')]",[],"[('Class', '(cls)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample_rate == sample_rate', 'transcript == expected_transcript', 'normalized_transcript == expected_normalized_transcript', 'n_ite == len(self.data)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
479,Brandon Lin,brandbest1@gmail.com,2020-07-27 17:53:54-04:00,0a5e29dbcc46b52bad5a5148cd8fb1bce5028a4d,https://github.com/pytorch/audio/commit/0a5e29dbcc46b52bad5a5148cd8fb1bce5028a4d,Add test for Speech Commands dataset (#824),3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(data, self.samples[i][0], atol=5e-5, rtol=1e-8)')]",['def setUp(cls):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample_rate == self.samples[i][1]', 'label == self.samples[i][2]', 'speaker_id == self.samples[i][3]', 'utterance_number == self.samples[i][4]', 'num_samples == len(self.samples)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
480,Yazhi Gao,leon.gao19@gmail.com,2020-07-28 10:34:22-07:00,db38fc881a7271986b78f9a2c9441cfffadd29f3,https://github.com/pytorch/audio/commit/db38fc881a7271986b78f9a2c9441cfffadd29f3,"Add test for CommonVoice dataset (#827)

* Add test for CommonVoice dataset

* Migrate the existing tests for `bg_iterator` and `diskcache_iterator` to `test/datasets/utils_test.py`

Co-authored-by: Leon Gao <legao@linkedin.com>",3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(expected_data, waveform, atol=5e-5, rtol=1e-8)')]",[],"[('Class', '(cls)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample_rate == TestCommonVoice.sample_rate', 'dictionary == expected_dictionary', 'n_ite == len(self.data)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
481,suraj813,suraj813@gmail.com,2020-07-28 19:18:23-04:00,33f762f64441c1d63e3045fa89716786c8dad432,https://github.com/pytorch/audio/commit/33f762f64441c1d63e3045fa89716786c8dad432,Added test for CMUArctic Dataset (#829),4,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(expected_sample[0], waveform, atol=5e-5, rtol=1e-8)')]",[],"[('Class', '(cls)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample_rate == expected_sample[1]', 'utterance == expected_sample[2]', 'utterance_id == expected_sample[3]', 'n_ite == len(self.samples)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
482,jimchen90,65626796+jimchen90@users.noreply.github.com,2020-07-28 21:01:45-04:00,f75497308bfe59e68ba657d61d41a0c88705d7f9,https://github.com/pytorch/audio/commit/f75497308bfe59e68ba657d61d41a0c88705d7f9,"Remove underscore of wavernn model (#810)

* Remove underscore of model name

Co-authored-by: Ji Chen <jimchen90@devfair0160.h2.fair>",4,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
483,jimchen90,65626796+jimchen90@users.noreply.github.com,2020-07-29 10:34:36-04:00,de1cb83d8ba7ab1a7b99d9b711ca53c18e607440,https://github.com/pytorch/audio/commit/de1cb83d8ba7ab1a7b99d9b711ca53c18e607440,"Add model name in docs (#836)

Co-authored-by: Ji Chen <jimchen90@devfair0160.h2.fair>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
484,moto,855818+mthrok@users.noreply.github.com,2020-07-29 13:59:23-04:00,4253efe265c08976bad1acc389174974aab18ad6,https://github.com/pytorch/audio/commit/4253efe265c08976bad1acc389174974aab18ad6,Add 0.6.0 to version matrix in README (#833),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
485,moto,855818+mthrok@users.noreply.github.com,2020-07-29 13:59:40-04:00,ec2323ced630edf05bce7e60a3c65a36d4fa0b8f,https://github.com/pytorch/audio/commit/ec2323ced630edf05bce7e60a3c65a36d4fa0b8f,Fix seed of yesno dataset test (#832),1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
486,moto,855818+mthrok@users.noreply.github.com,2020-07-29 14:00:04-04:00,8fdb8df2000258cae6f11c21b19de4a62b48aaac,https://github.com/pytorch/audio/commit/8fdb8df2000258cae6f11c21b19de4a62b48aaac,"Move BACKEDNS and BACKENDS_MP3 to test module from common_utils (#831)

Now that most of our test cases are backend aware/agnostic,
the use of BACKENDS and BACKENDS_MP3 is anti-pattern.

This change moves these definitions to the legacy test module `test_io`.

If a new backend is added in future, that backend should have separate test suite,
(like the ones in `test/sox_io_backend`) so instead of dynamically listing available
backend in `test_io`, the changed code only checks ""sox"" backend and ""soundfile"" backend.",3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
487,moto,855818+mthrok@users.noreply.github.com,2020-07-29 18:14:55-04:00,1ecbc249b5eed3a2e0e765ac0046e2bf9c231884,https://github.com/pytorch/audio/commit/1ecbc249b5eed3a2e0e765ac0046e2bf9c231884,"Run tests in parallel with pytest-xdist (#807)

Currently macOS CI job takes twice the time of linux unit tests.
This PR uses `pytest-xdist` to run unit tests in parallel on macOS CI job. 

Interestingly applying the same technique to linux unit tests make the test execution longer.
So the change is only applied to macOS.

macOS 27 mins -> 17 mins 😸
linux 14 mins -> 1 hours 😾",2,False,False,False,False,False,True,True,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
488,jimchen90,65626796+jimchen90@users.noreply.github.com,2020-07-30 11:11:01-04:00,870811c7222b6e417779567fab27dedcf5a9e4ba,https://github.com/pytorch/audio/commit/870811c7222b6e417779567fab27dedcf5a9e4ba,"Add libritts dataset option (#818)

Co-authored-by: Ji Chen <jimchen90@devfair0160.h2.fair>",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
489,Jeremy Chen,asdftwinkie@gmail.com,2020-07-30 12:16:21-07:00,dab7f64b2bea96974b19e31ad346b4fea231d654,https://github.com/pytorch/audio/commit/dab7f64b2bea96974b19e31ad346b4fea231d654,"Remove istft (#841)

* `istft` has been migrated to `pytorch`, and `torchaudio.functional.istft` has been deprecated in 0.6.0 release. This PR removes it

Co-authored-by: Jeremy Chen <jeremyyy@fb.com>",4,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],"[('Raises', '(RuntimeError, torchaudio.functional.istft, stft, n_fft=4,'), ('Raises', '(RuntimeError, torchaudio.functional.istft, stft, **kwargs_not_ok)'), ('Raises', '(RuntimeError, torchaudio.functional.istft, torch.zeros((3, 0, 2)), 2)'), ('Raises', '(RuntimeError, torchaudio.functional.istft, torch.zeros((0, 3, 2)), 2)'), ('_batch_consistencies', '(F.istft, stft, n_fft=4, length=4)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
490,moto,855818+mthrok@users.noreply.github.com,2020-07-31 14:24:52-04:00,9c56d88df7c41ea4c3606678d6d3f429897d356d,https://github.com/pytorch/audio/commit/9c56d88df7c41ea4c3606678d6d3f429897d356d,"Update test/README.md (#843)

* Update links
* Add how to run tests
* Update asset info",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
491,moto,855818+mthrok@users.noreply.github.com,2020-07-31 17:11:08-04:00,7f99271d096a7fa8574962b4d8349ddcb07d9799,https://github.com/pytorch/audio/commit/7f99271d096a7fa8574962b4d8349ddcb07d9799,"Fix import order to supress the setuptools warning; (#846)

setuptools warns that it should be imported before Distutils

```
site-packages/setuptools/distutils_patch.py:25: UserWarning: Distutils was imported before Setuptools. This usage is discouraged and may exhibit undesirable behaviors or errors. Please use Setuptools' objects directly or at least import Setuptools first.
```",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
492,moto,855818+mthrok@users.noreply.github.com,2020-07-31 17:12:21-04:00,3bab2b291d969972fbf7a403f1a285befc7c1cbb,https://github.com/pytorch/audio/commit/3bab2b291d969972fbf7a403f1a285befc7c1cbb,"[CI] Make *nix unit test fail if C++ extension is not available (#847)

Currently our test suites automatically/silently skip tests on C++ extension
if it is not available. This is nice in local env, but in CI these tests should be
enforced and reported as failure if C++ extension is not available.

This PR adds switch for making tests fail if C++ extension is not available,
and make CI for *nix fail if that's the case.",2,False,True,True,True,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[')(test_item)'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
493,gmagogsfm,gmagogsfm@users.noreply.github.com,2020-08-03 12:22:39-07:00,08a71271b2c778fb79cc47b8213203432bf1dc1e,https://github.com/pytorch/audio/commit/08a71271b2c778fb79cc47b8213203432bf1dc1e,Switch string formatting to str.format to be TorchScript friendly. (#850),5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(fn_split) == len(arr), (.format(len(fn_split), len(arr)))', 'len(files) == expected_num_files, \\']",[],[],[],[],[],[],[],[],[],[],[],[],"['len(fn_split) == len(arr), ( % (len(fn_split), len(arr)))', 'len(files) == expected_num_files, ( % (filepath_key, len(files)))']",[],[],[],[],[],[],[],[],[],[],[],[]
494,moto,855818+mthrok@users.noreply.github.com,2020-08-04 14:42:39-04:00,11b00d5cabe9a2996cf8893d043a5f1a20ac4b2b,https://github.com/pytorch/audio/commit/11b00d5cabe9a2996cf8893d043a5f1a20ac4b2b,Fix skipIfNoExtension (#849),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
495,moto,855818+mthrok@users.noreply.github.com,2020-08-04 16:08:20-04:00,3b055890e58add3b8984dca7e67013a49fecd112,https://github.com/pytorch/audio/commit/3b055890e58add3b8984dca7e67013a49fecd112,"Set zip_safe = False to disable egg installation (#842)

Currently `setuptools` assumes that torhcaudio is zip safe and performs
egg (zip) installation when `python setup.py install` (or `pip install .`).

When `torchaudio` loads extension module written with Torchscript, 
the corresponding loading function requires the `so` file to be present as 
an actual file, and this does not work well with egg installation.

This CC fixes this by setting `zip_safe=False` in setup.py and disable egg
installation, so that `python setup.py install` installs uncompressed files
with regular directory structure.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
496,moto,855818+mthrok@users.noreply.github.com,2020-08-04 21:11:27-04:00,9ba02d5b0edcf5d20f2eec15a188a7669ae2f725,https://github.com/pytorch/audio/commit/9ba02d5b0edcf5d20f2eec15a188a7669ae2f725,"[CI] Run unit test with non-editable installation (#845)

We have been running unit test with editable installation. (i.e. `python setup.py develop`), with which we missed issues like #842. 

This CC makes installation in CI non-editable, and change test directory structure so that the source code will not shadow the installed version of `torchaudio`. With simple `pytest test`, `pytest` modifies `sys.path` and prepend checked out repository, which shadows the installed version.

To remedy this, the whole test suites has been moved from `./test` to `./test/torchaudio_unittest`. This adds nice module structure to our test code and we can do absolute import in each test module, which makes it possible again to run test with `python -m unittest torchaudio_unittest/XXX.py`

This change does not affect the regular development process (`python setup.py develop` && `pytest test`)",123,False,True,True,True,False,True,True,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
497,Eli Uriegas,1700823+seemethere@users.noreply.github.com,2020-08-05 11:56:14-07:00,4a8610fd65945d6205d0930f173a36004ab17671,https://github.com/pytorch/audio/commit/4a8610fd65945d6205d0930f173a36004ab17671,.circleci: Only install the binaries from the channel we want (#859),2,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
498,moto,855818+mthrok@users.noreply.github.com,2020-08-06 14:37:25-04:00,e808225f1859fbf47e778b73c64e82669d1c1e94,https://github.com/pytorch/audio/commit/e808225f1859fbf47e778b73c64e82669d1c1e94,"Add test to validate torchscript backward compatibility (#838)

This CC adds CI test to check the backward compatibility of Torchscript functions/object dumps.

The job first dumps Torchscript objects into file from torchaudio 0.6.0 release environment (x Python 3.6, 3.7, 3,8), then load & run the function in master build (in Python 3.6, 3.7, 3.8).

If there is a BC-breaking change in master build, (registration schema change), then the test should fail.

At this moment, `info` function does not work due to suspected bug in torch side, so the test is disabled for `info` function. See https://github.com/pytorch/pytorch/issues/42258 for the detail. Once https://github.com/pytorch/pytorch/issues/42258 is resolved we can enable it.",14,False,True,True,False,False,True,True,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
499,jimchen90,65626796+jimchen90@users.noreply.github.com,2020-08-07 12:30:16-04:00,6aafbb6d5ba35aafed6796306f5f90285e258248,https://github.com/pytorch/audio/commit/6aafbb6d5ba35aafed6796306f5f90285e258248,"Add spectrogram normalization option (#863)

* Add spectrogram normalization option
Co-authored-by: Ji Chen <jimchen90@devfair0160.h2.fair>",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
500,moto,855818+mthrok@users.noreply.github.com,2020-08-07 15:13:27-04:00,e344e45f2d8fa5d8b1024bc2e8b740b873652dd4,https://github.com/pytorch/audio/commit/e344e45f2d8fa5d8b1024bc2e8b740b873652dd4,Simplify C++ registration with TORCH_LIBRARY (#840),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
501,moto,855818+mthrok@users.noreply.github.com,2020-08-07 18:47:49-04:00,b2f912ccecf8c33197fa96fb9fb3b283e4a5d9f2,https://github.com/pytorch/audio/commit/b2f912ccecf8c33197fa96fb9fb3b283e4a5d9f2,"Update librosa/numba in CI (#864)

librosa 0.8.0 has been released which include fix for
https://github.com/librosa/librosa/issues/1160 at
https://github.com/librosa/librosa/pull/1164",2,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
502,moto,855818+mthrok@users.noreply.github.com,2020-08-07 18:50:58-04:00,2a6b6b555cb0bf24d26e43a1734a4867bd89082e,https://github.com/pytorch/audio/commit/2a6b6b555cb0bf24d26e43a1734a4867bd89082e,Fix dither with noise_shaping = True (#865),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
503,moto,855818+mthrok@users.noreply.github.com,2020-08-11 09:57:26-04:00,a6efd4973430000b8c5d25e487047191e0d7e81c,https://github.com/pytorch/audio/commit/a6efd4973430000b8c5d25e487047191e0d7e81c,Add SPHERE format support (#871),5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(data, data_ref, atol=4e-05, rtol=1.3e-06)'), ('_sphere', '(sample_rate, num_channels, duration=1)'), ('Equal', '(found, expected)'), ('_sphere', '(sample_rate, num_channels, duration=1)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['info.sample_rate == sample_rate', 'info.num_frames == sample_rate * duration', 'info.num_channels == num_channels', 'sr == sample_rate']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
504,moto,855818+mthrok@users.noreply.github.com,2020-08-12 07:31:14-04:00,06feab58d81c4fce135e35f3264df1d874baeabe,https://github.com/pytorch/audio/commit/06feab58d81c4fce135e35f3264df1d874baeabe,[CI] Increase resource class to prevent OOM (#873),2,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
505,moto,855818+mthrok@users.noreply.github.com,2020-08-12 07:31:24-04:00,c692fe99ac353f0e2fc7b5ad7162f037a70a35fe,https://github.com/pytorch/audio/commit/c692fe99ac353f0e2fc7b5ad7162f037a70a35fe,[CI] Fix macOS unittest env setup (#872),1,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
506,Abhishek Dubey,abhi.dubey011999@gmail.com,2020-08-19 23:47:07+05:18,4bfebd857d9b94dff98e88c8cc59880f8fa54ec7,https://github.com/pytorch/audio/commit/4bfebd857d9b94dff98e88c8cc59880f8fa54ec7,"Add VCTK_092 dataset (#812)

* Added version 0.92 of VCTK dataset

Signed-off-by: Abhishek Dubey <abhi.dubey011999@gmail.com>",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
507,JianwuXu,jwxu08@gmail.com,2020-08-20 12:38:32-04:00,2205cc9e1ab15eee51ae5c6c54c258de8afefe26,https://github.com/pytorch/audio/commit/2205cc9e1ab15eee51ae5c6c54c258de8afefe26,"Update VCTK_092 interface and add tests (#875)

* Tweak docstring, audio_ext, load method signature and constructor of VCTK_092

* Add test for VCTK_092 dataset.",4,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(data, self.samples[i][0], atol=5e-5, rtol=1e-8)')]",[],"[('Class', '(cls)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample_rate == self.samples[i][1]', 'utterance == self.samples[i][2]', 'speaker_id == self.samples[i][3]', 'int(utterance_id) == self.samples[i][4]', 'num_samples == len(self.samples)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
508,Tejasvi S Tomar,45873379+tejasvi@users.noreply.github.com,2020-08-23 23:30:36+05:18,080cd3033436679702dc4446b98f9d10b35c9ae1,https://github.com/pytorch/audio/commit/080cd3033436679702dc4446b98f9d10b35c9ae1,"Fix incorrect extension parsing in sox_io_backend.save(#885)

* Fix incorrect extension parsing in sox_io_backend.save
* Add tests for compression=None",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
509,moto,855818+mthrok@users.noreply.github.com,2020-08-23 20:26:54-04:00,52a18a9e4faea5317c6c57770f75cc3c5fb6040f,https://github.com/pytorch/audio/commit/52a18a9e4faea5317c6c57770f75cc3c5fb6040f,Remove default compression level test for mp3 (#886),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
510,moto,855818+mthrok@users.noreply.github.com,2020-08-28 18:13:23-04:00,ef01e245c20407d962908eb97a1f6cda28e2a90a,https://github.com/pytorch/audio/commit/ef01e245c20407d962908eb97a1f6cda28e2a90a,"[CI] Install conda package from workspace (#881)

When running smoke test, proper way to install conda package is to
install from workspace, instead of installing from archive.
Otherwise the dependencies are not properly installed

https://github.com/conda/conda/issues/1884

For this, we pass the whole `conda-bld` directory from
conda package build job to upload job then smoke test job.

`torchaudio` does not have a mandatory third-party python package dependency,
so this was not an issue.

See also https://github.com/pytorch/text/pull/803",2,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
511,Eli Uriegas,1700823+seemethere@users.noreply.github.com,2020-09-02 17:08:19-07:00,c388ec2b5e6b4d0b99f9c5274d597858e90f5789,https://github.com/pytorch/audio/commit/c388ec2b5e6b4d0b99f9c5274d597858e90f5789,".circleci: Bump xcode workers to 9.4.1 (#898)

Upstream is on 9.4.1 and we were experiencing issues when conda-build
was attempting to check for overlinking and failed out due to some files
not existing in xcode 9.0

Signed-off-by: Eli Uriegas <eliuriegas@fb.com>",3,False,False,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
512,sdarkhovsky,sdarkhovsky@users.noreply.github.com,2020-09-11 16:26:43-07:00,b6a61c3f7d0267c77f8626167cc1eda0335f2753,https://github.com/pytorch/audio/commit/b6a61c3f7d0267c77f8626167cc1eda0335f2753,"Fix interactive asr (#900)

* updated the build_generator call to include the models argument

* fixed RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
513,Jaime Ferrando Huertas,fhjaime96@gmail.com,2020-09-15 20:06:25+02:00,914a846d313fe4ca38e52d9249166e6ee150f607,https://github.com/pytorch/audio/commit/914a846d313fe4ca38e52d9249166e6ee150f607,Add tedlium dataset (#882),4,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,3,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(data, self.samples[release][i][0], atol=5e-5, rtol=1e-8)'), ('Equal', '(data, self.samples[release][i][0], atol=5e-5, rtol=1e-8)'), ('Equal', '(data, self.samples[release][i][0], atol=5e-5, rtol=1e-8)')]",[],"[('Class', '(cls)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample_rate == self.samples[release][i][1]', 'transcript == self.samples[release][i][2]', 'talk_id == self.samples[release][i][3]', 'speaker_id == self.samples[release][i][4]', 'identifier == self.samples[release][i][5]', 'num_samples == len(self.samples[release])', 'phoenemes == PHONEME', 'sample_rate == self.samples[release][i][1]', 'transcript == self.samples[release][i][2]', 'talk_id == self.samples[release][i][3]', 'speaker_id == self.samples[release][i][4]', 'identifier == self.samples[release][i][5]', 'num_samples == len(self.samples[release])', 'phoenemes == PHONEME', 'sample_rate == self.samples[release][i][1]', 'transcript == self.samples[release][i][2]', 'talk_id == self.samples[release][i][3]', 'speaker_id == self.samples[release][i][4]', 'identifier == self.samples[release][i][5]', 'num_samples == len(self.samples[release])', 'phoenemes == PHONEME']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
514,moto,855818+mthrok@users.noreply.github.com,2020-09-15 14:27:54-04:00,92b027b00d05c7c97fc23fc2dfb845b86d8bb3a0,https://github.com/pytorch/audio/commit/92b027b00d05c7c97fc23fc2dfb845b86d8bb3a0,"Add deprecation warning to sox backend (#904)

* Add deprecation warning to sox backend

Refer to https://github.com/pytorch/audio/issues/903",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
515,moto,855818+mthrok@users.noreply.github.com,2020-09-15 14:28:40-04:00,5418d93770f50eed571f2d267f9afdc71d9c3cd1,https://github.com/pytorch/audio/commit/5418d93770f50eed571f2d267f9afdc71d9c3cd1,Add deprecation warnings to load_wav functions (#905),3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
516,Eli Uriegas,1700823+seemethere@users.noreply.github.com,2020-09-15 11:28:56-07:00,4cdd8cad395a7d218945d1a4d033733bc227b091,https://github.com/pytorch/audio/commit/4cdd8cad395a7d218945d1a4d033733bc227b091,"packaging: Use cpu directory by default (#909)

Default to using the `cpu` directory since the base one is not reliable

Signed-off-by: Eli Uriegas <eliuriegas@fb.com>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
517,Tim Loderhose,timlod@users.noreply.github.com,2020-09-18 19:12:21+02:00,e7161acf824de1f207f8e261bdc1bb209cf1a2b5,https://github.com/pytorch/audio/commit/e7161acf824de1f207f8e261bdc1bb209cf1a2b5,Add pathlib.Path support to sox_io backend (#907),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
518,toddstep,71510807+toddstep@users.noreply.github.com,2020-09-21 16:58:33-04:00,77df44e3bcd93e77e6637c1c05fd485858b312b3,https://github.com/pytorch/audio/commit/77df44e3bcd93e77e6637c1c05fd485858b312b3,"Issue warning when a Mel filter is all zero (#914)

* Warn if create_fb_matrix produces a column whose weights are all zeros

See also https://github.com/librosa/librosa/issues/478",2,False,True,True,False,False,True,True,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(w) == 0', 'len(w) == 0', 'len(w) == 1']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
519,moto,855818+mthrok@users.noreply.github.com,2020-09-23 14:25:48-04:00,95d9f2d272b2814010db7fc803a7d4dc6cf0c3b4,https://github.com/pytorch/audio/commit/95d9f2d272b2814010db7fc803a7d4dc6cf0c3b4,"Revert ""Run tests in parallel with pytest-xdist (#807)"" (#915)

This reverts commit 1ecbc249b5eed3a2e0e765ac0046e2bf9c231884.

Reason: The macOS CI jobs are stuck with xdist recently.",2,False,False,True,True,True,True,True,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
520,Vincent QB,vincentqb@users.noreply.github.com,2020-09-24 14:59:28-04:00,9c274228ccac862e2f330bed1fd7c0b3d8b05c67,https://github.com/pytorch/audio/commit/9c274228ccac862e2f330bed1fd7c0b3d8b05c67,"Example pipeline with wav2letter (#632)

* example pipeline, initial commit.

* removing notebook conversion artifacts.

* remove extra comments. lint.

* addressing some feedback.

* main function.

* defining args in function.

* refactor.

* lint.

* checkpoint.

* clean version to start with.

* adding more parameters.

* lint.

* cleaning full version.

* check for not None.

* cleaning.

* back -l 160

* black.

* fix runtime error.

* removing some print statements.

* add help to command line. add progress bar option.

* grouping librispeech-specific transform in subclass.

* typo.

* fix concatenation.

* typo.

* black. tqdm.

* missing transpose.

* renaming variables.

* sum cer and wer

* clip norm.

* second signal handler removed.

* cosmetic.

* default to no checkpoint.

* remove non_blocking.

* adadelta works better than sgd.

* anomaly detection.

* moving dataset to separate file.

* lint.

* move to separate module: languagemodel, decoder, metric.

* flush=True.

* renaming decoder.

* CTC Decoders.

* flush=True.

* pass length for viterbi decoder.

* progress bar. relative path.

* generalize transition matrix to n-gram. progress bar.

* choice of decoder.

* collate func.

* remove signal handling.

* adding distributed.

* lint.

* normalize w/r to length of dataset, and w/r to total number characters.

* relative cer/wer.

* clip grad parameter. momentum back but not yet used.

* Switch to SGD.

* choice of optimizer.

* scheduler.

* move to utils file.

* metric log, and utils file.

* rename metric_logger.

* stderr and stdout. simpler metric logger.

* replace by logging.

* adding time measurement in metric logger.

* fix duplicate name. remove tqdm. keep track of epoch instead and iteration instead.

* rename main file. and add readme.

* refactor distributed.

* swap example and output in readme.

* remove time from logger.

* check non-empty tensor input.

* typo in variable name and log update.

* typo.

* compute cer/wer in training too.

* typo.

* add back slurm signal capture to resubmit job.

* update levinstein distance.

* adding tests for levenstein distance.

* record error rate during iteration.

* metric logger using setitem.

* moving signal break to end of loop and return loss so far.

* typo.

* add citation.

* change default to best run.

* adding other experiment with decoders.

* remove other decoders than greedy.

* Revert ""remove other decoders than greedy.""

This reverts commit fb114372e89e317bf48d0b1f846c60bca8efe1ac.

* changing name of folfder.

* remove other decoders, and unused dataset class.

* rename functions to align with other pipeline.

* pick which parts to train with.

* adding specaugment to validation. note that caching prevents randomization from happening in validation.

* updating readme.

* typo in metric logging.

* Revert ""typo in metric logging.""

This reverts commit acac245eec250f61d2039a67933d3c01f1975ce9.

* Revert ""Revert ""typo in metric logging.""""

This reverts commit 2c80d9691ed401044da734c40df3715dba92d0db.

* update metric logger.

* simplify metric logger implementation.

* use json dumps instead.

* group metric together.

* move function.

* lint.

* quick summary of files in folder.

* pass clip_grad explictly.

* typo in default dataset name.

* option to disable logger.

* ergonomics for distributed.

* reminder about signal handler.

* minor refactor of main in main.

* replace by not_main_rank.

* raising error if parameter not supported.

* move model before invoking DDP.

* changing log level. using python 2 style string for logging.

* dynamic augmentations.

* update metric log.

batch cer/wer metric. correct typo in time. adding other dimensions in metric.

* save learning rate even if function not available.

* add type option to model.

* add adamw.

* reduce lr on validation step or training step.

* specify hop-length and win-length.

* normalize option.

* rename parameter.

* add dropout and tweak to number of channels.

* copy model in pipeline folder for experimentation.

* fix scheduler stepping.

* fix input_type and num_features.

* waveform mode changes shape more.

* adding best character error rate with current implementation of model with mfcc.

* comment update.

* remove signal. remove custom wav2letter model.

* remove comment.

* simpler import with pandas.",8,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
521,moto,855818+mthrok@users.noreply.github.com,2020-09-28 08:58:15-04:00,8e37055993c423ba11dd7b470ec959381db796c4,https://github.com/pytorch/audio/commit/8e37055993c423ba11dd7b470ec959381db796c4,Add ConvTasNet model (#920),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['output.shape == (batch_size, num_sources, num_frames)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
522,moto,855818+mthrok@users.noreply.github.com,2020-09-28 13:19:02-04:00,2c723e8c2569bd79a07f8ca8e6e5676a8f338479,https://github.com/pytorch/audio/commit/2c723e8c2569bd79a07f8ca8e6e5676a8f338479,"Add ""soundfile"" backend compatible to ""sox_io"" (#922)

As a part of the ""sox"" backend sunset plan (#903), we add a ""soundfile"" backend that is compatible with the ""sox_io"" backend. No new public backend name is added. We provide a switch to change the interface/behavior of ""soundfile"" backend.

This commit contains;
 - The implementation of the new ""soundfile"" backend.
 - The flag to switch the behavior of ""soundfile"" backend. (`torchaudio.USE_SOUNDFILE_LEGACY_INTERFACE`)
 - Test for the new backend and switching mechanism.

The default behavior of ""soundfile"" backend is not changed. The users who want to opt-in the new ""soundfile"" interface can do so by `torchaudio.USE_SOUNDFILE_LEGACY_INTERFACE = False` before changing the backend to ""soundfile"".

In 0.8.0 release, the ""soundfile"" backend will use this interface by default, and users can still use the legacy one with `torchaudio.USE_SOUNDFILE_LEGACY_INTERFACE = True`. In 0.9.0, the legacy interface is removed and `torchaudio.USE_SOUNDFILE_LEGACY_INTERFACE` flag will be eventually removed.",13,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,24,2,0,1,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_dtype', '('), ('_dtype', '('), ('_dtype', '('), ('_dtype', '('), ('Equal', '(data, expected)'), ('Equal', '(data, expected, atol=1e-4, rtol=1e-8)'), ('Equal', '(data, expected, atol=1e-4, rtol=1e-8)'), ('_wav', '(dtype, sample_rate, num_channels, normalize, channels_first)'), ('_wav', '(dtype, sample_rate, num_channels, normalize, duration=two_hours)'), ('_wav', '(dtype, sample_rate, num_channels, normalize, channels_first)'), ('_sphere', '(dtype, sample_rate, num_channels, channels_first)'), ('_flac', '(dtype, sample_rate, num_channels, channels_first)'), ('Equal', '('), ('Equal', '(args[], expected_data)'), ('_non_wav', '(fmt, dtype, sample_rate, num_channels, channels_first)'), ('_non_wav', '(, dtype, sample_rate, num_channels, channels_first)'), ('_non_wav', '(, dtype, sample_rate, num_channels, channels_first)'), ('Equal', '(found, expected)'), ('_wav', '(dtype, sample_rate, num_channels, num_frames=None)'), ('_wav', '(dtype, sample_rate, num_channels, num_frames=None)'), ('_sphere', '(dtype, sample_rate, num_channels)'), ('_flac', '(, sample_rate, num_channels)'), ('_ogg', '(, sample_rate, num_channels)'), ('Equal', '(found, expected, atol=1e-4, rtol=1e-8)')]","['def setUp(self):', 'def setUp(self):']",[],['def tearDown(self):'],[],[],[],[],"[' unittest.mock ', ' unittest.mock ']",[],[],[],[],[],[],[],[],[],[],[],[],"['info.sample_rate == sample_rate', 'info.num_frames == sample_rate * duration', 'info.num_channels == num_channels', 'info.sample_rate == sample_rate', 'info.num_frames == sample_rate * duration', 'info.num_channels == num_channels', 'info.sample_rate == sample_rate', 'info.num_frames == num_frames', 'info.num_channels == num_channels', 'info.sample_rate == sample_rate', 'info.num_frames == sample_rate * duration', 'info.num_channels == num_channels', 'info.sample_rate == sample_rate', 'info.num_frames == sample_rate * duration', 'info.num_channels == num_channels', 'mode == ', 'stop is None', 'always_2d', 'found.dtype == expected_dtype', 'sample_rate == sr', 'sr == sample_rate', 'sr == sample_rate', 'sr == sample_rate', 'args[] == filepath', 'args[] == sample_rate', 'args[] == dtype2subtype(dtype)', 'args[] is None', 'args[] == filepath', 'args[] == sample_rate', 'args[] is None', 'args[', 'args[] is None', 'sample_rate == sr', 'sinfo.format == fmt.upper()', 'sinfo.frames == num_frames', 'sinfo.channels == num_channels', 'sinfo.samplerate == sample_rate']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
523,cpuhrsch,cpuhrsch@fb.com,2020-09-29 17:57:21-04:00,3250d3df168c956389bd16956aa458ce111570d0,https://github.com/pytorch/audio/commit/3250d3df168c956389bd16956aa458ce111570d0,"Suggested changes to speed up phaser (#660)

* Suggested changes to speed up phaser

* Checkpoint

* Checkpoint

* Checkpoint

* Checkpoint

* removing todo items

Co-authored-by: Vincent QB <vincentqb@users.noreply.github.com>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
524,moto,855818+mthrok@users.noreply.github.com,2020-10-01 19:10:59-04:00,1df9e20179948d712ddd86e26ce935c9cb64b86d,https://github.com/pytorch/audio/commit/1df9e20179948d712ddd86e26ce935c9cb64b86d,Update model documentation (#933),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
525,Vincent QB,vincentqb@users.noreply.github.com,2020-10-01 19:26:20-04:00,963224f50b28ac2996610e38127f4b569c8c36da,https://github.com/pytorch/audio/commit/963224f50b28ac2996610e38127f4b569c8c36da,"remove * in import of models (#932)

* remove * in import of models.

* only importing WaveRNN in tests.",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
526,moto,855818+mthrok@users.noreply.github.com,2020-10-02 12:50:25-04:00,e3d1d746f2f1c741ef4be9f8cf9cc55e8276806c,https://github.com/pytorch/audio/commit/e3d1d746f2f1c741ef4be9f8cf9cc55e8276806c,Update docstrings/documentations of all the datasets (#931),11,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
527,peterjc123,peterghost86@gmail.com,2020-10-07 01:04:52+08:00,9871219d503397b5d43c1b86819d69ed4445ccc3,https://github.com/pytorch/audio/commit/9871219d503397b5d43c1b86819d69ed4445ccc3,Fix Windows unit tests (#937),1,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
528,moto,855818+mthrok@users.noreply.github.com,2020-10-06 15:08:25-04:00,725f8b0667c82cebe631cb0948e296c976072fc1,https://github.com/pytorch/audio/commit/725f8b0667c82cebe631cb0948e296c976072fc1,Add metrics to source separation example(#894),6,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestSDR(TestCase):'],"[('Equal', '(sdr, sdr_ref)'), ('Equal', '(batch_sdr, batch_sdr_ref)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['batch_size_est == batch_size_ori, ', 'nsource_est == nsource_ori, ', 'nsample_est == nsample_ori, ', 'nsource_est < nsample_est, ']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
529,Vincent QB,vincentqb@users.noreply.github.com,2020-10-09 13:30:15-04:00,4f0acc588347333e53cc29e76956f001d54df973,https://github.com/pytorch/audio/commit/4f0acc588347333e53cc29e76956f001d54df973,"fix tedlium load_audio (#934)

and add test on other backend.",3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],['import unittest'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
530,moto,855818+mthrok@users.noreply.github.com,2020-10-09 14:05:48-04:00,e17c26343df156c78de7887d95566c36624d2e35,https://github.com/pytorch/audio/commit/e17c26343df156c78de7887d95566c36624d2e35,[doc] Update backend docstring/documentation (#935),4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
531,moto,855818+mthrok@users.noreply.github.com,2020-10-09 14:06:16-04:00,61cb8f266ba7f4841067f3f8c1498c3eb827932c,https://github.com/pytorch/audio/commit/61cb8f266ba7f4841067f3f8c1498c3eb827932c,[doc] Update librosa link (#940),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
532,Vincent QB,vincentqb@users.noreply.github.com,2020-10-09 14:55:15-04:00,ba7b7a2fe648e0df14909228a56f8c8292d25a0b,https://github.com/pytorch/audio/commit/ba7b7a2fe648e0df14909228a56f8c8292d25a0b,lint. (#945),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
533,moto,855818+mthrok@users.noreply.github.com,2020-10-12 16:26:58-04:00,2d8791324db0a764ff7088ba63741ad4f801abb4,https://github.com/pytorch/audio/commit/2d8791324db0a764ff7088ba63741ad4f801abb4,Add wsj0-mix dataset to source separation example (#895),5,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,7,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(sample_mix, expected_mix, atol=5e-5, rtol=1e-8)'), ('Equal', '(sample_src[0], expected_src[0], atol=5e-5, rtol=1e-8)'), ('Equal', '(sample_src[1], expected_src[1], atol=5e-5, rtol=1e-8)'), ('Equal', '(sample_mix, expected_mix, atol=5e-5, rtol=1e-8)'), ('Equal', '(sample_src[0], expected_src[0], atol=5e-5, rtol=1e-8)'), ('Equal', '(sample_src[1], expected_src[1], atol=5e-5, rtol=1e-8)'), ('Equal', '(sample_src[2], expected_src[2], atol=5e-5, rtol=1e-8)')]",[],"[('Class', '(cls)'), ('Class', '(cls)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['n_ite == len(self.expected)', 'n_ite == len(self.expected)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
534,lawlict,35951198+lawlict@users.noreply.github.com,2020-10-14 02:15:52+08:00,c92392fc7cedd6ed958745e82ab6233b59c993ef,https://github.com/pytorch/audio/commit/c92392fc7cedd6ed958745e82ab6233b59c993ef,"Improve the speed of kaldi.fbank with fused operator (#947)

Co-authored-by: linqj3 <linqj3@lenovo.com>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
535,moto,855818+mthrok@users.noreply.github.com,2020-10-13 15:04:08-04:00,2c07658b371f12ff67b176c5e348f78a39453f7b,https://github.com/pytorch/audio/commit/2c07658b371f12ff67b176c5e348f78a39453f7b,Make VCTK_092 return regular type for the consistency (#949),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
536,moto,855818+mthrok@users.noreply.github.com,2020-10-13 15:05:05-04:00,4e97213b48e152344b7429c7d1067e7525bfa4b9,https://github.com/pytorch/audio/commit/4e97213b48e152344b7429c7d1067e7525bfa4b9,Add Conv-TasNet training script to example (#896),9,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
537,moto,855818+mthrok@users.noreply.github.com,2020-10-14 18:04:36-04:00,8e8c5277557d781c70ddad4da3e95d9ad1313f27,https://github.com/pytorch/audio/commit/8e8c5277557d781c70ddad4da3e95d9ad1313f27,Run GPU test on release/* branch (#958),2,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
538,moto,855818+mthrok@users.noreply.github.com,2020-10-15 17:03:44-04:00,6a0053e98988a063f61ce130b45767667dde6a1b,https://github.com/pytorch/audio/commit/6a0053e98988a063f61ce130b45767667dde6a1b,"Upload to ""test"" channel on release branch (#952) (#954)",2,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
539,moto,855818+mthrok@users.noreply.github.com,2020-10-16 12:06:38-04:00,ba00419a5788d6625ad46a42206caaf89ef0e4b6,https://github.com/pytorch/audio/commit/ba00419a5788d6625ad46a42206caaf89ef0e4b6,Update package script to use UPLOAD_CHANNEL env (#962),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
540,moto,855818+mthrok@users.noreply.github.com,2020-10-16 13:18:10-04:00,b8402baa258e1d755e1ff1256db96f63def2a878,https://github.com/pytorch/audio/commit/b8402baa258e1d755e1ff1256db96f63def2a878,Cherry-pick 'Use PyTorch RC for unittest (#953)' (#963),4,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
541,moto,855818+mthrok@users.noreply.github.com,2020-10-19 15:35:08-04:00,dc9f1fca99e9c423f0af7643540e7d90d8de6d7c,https://github.com/pytorch/audio/commit/dc9f1fca99e9c423f0af7643540e7d90d8de6d7c,Cherry-pick 'Fix binary smoke test (#964)' (#965),2,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
542,Brian Johnson,brianjo@fb.com,2020-10-19 14:39:49-07:00,ba1698ba1e92eae01b4efff16db68cf25e7e296b,https://github.com/pytorch/audio/commit/ba1698ba1e92eae01b4efff16db68cf25e7e296b,"Update index.rst (#968)

Adds introductory context and links to the PyTorch Libraries to audio docs.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
543,Vasilis Vryniotis,datumbox@users.noreply.github.com,2020-10-22 18:29:07+01:00,04733c05900ed8fd71981b2a47b3793642e6471b,https://github.com/pytorch/audio/commit/04733c05900ed8fd71981b2a47b3793642e6471b,Fixing clang-format version to what PyTorch uses. (#981),3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
544,Vincent QB,vincentqb@users.noreply.github.com,2020-10-26 10:33:08-04:00,b56c9448e4d72445b8c2896684b7bc0d6581d8f5,https://github.com/pytorch/audio/commit/b56c9448e4d72445b8c2896684b7bc0d6581d8f5,add .7 to compatibility matrix. (#979),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
545,moto,855818+mthrok@users.noreply.github.com,2020-10-26 13:03:49-04:00,fd6e0441b647aee7201e2e673890a592f042b3a9,https://github.com/pytorch/audio/commit/fd6e0441b647aee7201e2e673890a592f042b3a9,Cherry-pick 'Fix doc rendering by using Sphinx 2.4.4 (#972)' (#974),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
546,moto,855818+mthrok@users.noreply.github.com,2020-10-26 13:57:44-04:00,0f80bcf9d69cd2d387188c4ebd001cc4dae1016f,https://github.com/pytorch/audio/commit/0f80bcf9d69cd2d387188c4ebd001cc4dae1016f,Add deprecation warnings to libsox internal functions (#975),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
547,moto,855818+mthrok@users.noreply.github.com,2020-10-26 16:13:01-04:00,51e77964756107c430c095688c29436d291aca8b,https://github.com/pytorch/audio/commit/51e77964756107c430c095688c29436d291aca8b,Bump version to 0.8.0 (#976),3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
548,Vincent QB,vincentqb@users.noreply.github.com,2020-10-27 13:11:36-04:00,b34bc7d33d07fce4b62070eeb58c5eee89b2b7a9,https://github.com/pytorch/audio/commit/b34bc7d33d07fce4b62070eeb58c5eee89b2b7a9,Add SpeechCommands train/valid/test split (#966),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,4,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(data, self.samples[i][0], atol=5e-5, rtol=1e-8)'), ('Equal', '(data, self.train_samples[i][0], atol=5e-5, rtol=1e-8)'), ('Equal', '(data, self.valid_samples[i][0], atol=5e-5, rtol=1e-8)'), ('Equal', '(data, self.test_samples[i][0], atol=5e-5, rtol=1e-8)')]",[],"[('Class', '(cls)')]",[],[],[],[],[],[],[],[],[],['def setUp(cls):'],[],[],[],[],[],[],[],[],"['sample_rate == self.samples[i][1]', 'label == self.samples[i][2]', 'speaker_id == self.samples[i][3]', 'utterance_number == self.samples[i][4]', 'num_samples == len(self.samples)', 'sample_rate == self.train_samples[i][1]', 'label == self.train_samples[i][2]', 'speaker_id == self.train_samples[i][3]', 'utterance_number == self.train_samples[i][4]', 'num_samples == len(self.train_samples)', 'sample_rate == self.valid_samples[i][1]', 'label == self.valid_samples[i][2]', 'speaker_id == self.valid_samples[i][3]', 'utterance_number == self.valid_samples[i][4]', 'num_samples == len(self.valid_samples)', 'sample_rate == self.test_samples[i][1]', 'label == self.test_samples[i][2]', 'speaker_id == self.test_samples[i][3]', 'utterance_number == self.test_samples[i][4]', 'num_samples == len(self.test_samples)', 'len(dataset_train) + len(dataset_valid) + len(dataset_test) == len(dataset_all)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
549,moto,855818+mthrok@users.noreply.github.com,2020-10-27 13:46:10-04:00,fa2e4fd46998bb5970158dd29c9cf65584c49b4f,https://github.com/pytorch/audio/commit/fa2e4fd46998bb5970158dd29c9cf65584c49b4f,"Switch the default backend to the ones with new interfaces (#978)

Refer to #903 for the overview of planned I/O changes.

* Change the default backend from `""sox""(deprecated)` to `""sox_io""`
* Change the default interface of `""soundfile""` backend to the one identical to `""sox_io""` backend.
* Deprecate torchaudio.USE_SOUNDFILE_LEGACY_INTERFACE
* Update documentations
    * Re-order backends (default first)
    * Update overhaul timeline (removed 0.7.0)
    * Simplify `""soundfile""` backend description",4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,1,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],['def setUp(self):'],[],['def tearDown(self):'],[],[],[],[],[],[],[],[],['def setUp(self):'],[],['def tearDown(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
550,moto,855818+mthrok@users.noreply.github.com,2020-10-27 13:46:58-04:00,0076ab073d1ee6160efbc239e075196b35ed850b,https://github.com/pytorch/audio/commit/0076ab073d1ee6160efbc239e075196b35ed850b,Remove legacy sox effects (#977),8,False,True,False,False,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],"[('True', '(x.size() == expected_size)'), ('Equal', '(sr, target_rate)'), ('Equal', '(x.size(0), target_channels)'), ('Equal', '(x.size(1), int((si.length / si.channels) / speed), atol=1, rtol=1e-8)'), ('Less', '(x.unique().size(0), 2**8 + 1)'), ('Equal', '(x.numel(), si_in.length)'), ('Equal', '(x.size(0), si_in.channels)'), ('GreaterEqual', '(x.size(1) * x.size(0), si_in.length)'), ('Equal', '(x.size(0), si_in.channels)'), ('Equal', '(si_in.length, x.size(0) * x.size(1))'), ('True', '(x.abs().max().item(), 1.)'), ('Less', '(x.abs().max().item(), 1.)'), ('True', '(x.abs().max().item(), 1.)'), ('Less', '(x.abs().max().item(), 1.)'), ('AlmostEqual', '(x.size(1), math.ceil((si.length / si.channels) / tempo), delta=1)'), ('AlmostEqual', '(x.size(1), math.ceil((si.length / si.channels) / tempo), delta=1)'), ('AlmostEqual', '(x.size(1), math.ceil((si.length / si.channels) / speed), delta=1)'), ('AlmostEqual', '(x.size(1), math.ceil((si.length / si.channels) / speed), delta=1)'), ('True', '(x.allclose(x_orig[:, offset_int:(offset_int + num_frames_int)], rtol=1e-4, atol=1e-4))'), ('Less', '(x.numel(), si.length)'), ('True', '(x_orig.allclose(x_rev[:, rev_idx], rtol=1e-5, atol=2e-5))'), ('True', '(x.size(1) == (si.length / si.channels) + 15000)'), ('Raises', '(LookupError):'), ('Raises', '(NotImplementedError):'), ('Raises', '(RuntimeError):')]",[],[],[],[],['sys.platform == )'],[],[],[],"['import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
551,moto,855818+mthrok@users.noreply.github.com,2020-10-30 12:24:20-04:00,23804a365b33b6a02f8d35bd74dbcfc8041631f4,https://github.com/pytorch/audio/commit/23804a365b33b6a02f8d35bd74dbcfc8041631f4,Fix CI unittest job setup (#987),9,False,False,True,False,False,True,True,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
552,moto,855818+mthrok@users.noreply.github.com,2020-11-02 12:33:19-05:00,758f6c2a8d922b8980ca28380c803ebd8f7a31b2,https://github.com/pytorch/audio/commit/758f6c2a8d922b8980ca28380c803ebd8f7a31b2,"Sync fbcode (#996)

fbshipit-source-id: 4fb853c391900d3070b936e5a3e4609eb78a780d

* 20200428 pytorch/audio import

Summary: [10:30:47: cpuhrsch@devvm3140 pytorch]$ ./fb_build/import_audio.sh

Reviewed By: vincentqb

Differential Revision: D21282421

fbshipit-source-id: 9bde1455ca6a19defbf33dbbfc5f0d49a8e4dc6a

* Import torchaudio 20200528

Summary: Import Up to #664

Reviewed By: cpuhrsch

Differential Revision: D21728204

fbshipit-source-id: 648dd622087fa762194ca5f89a310500e777263d

* Remove unnecessary config file from torchaudio

Summary: Turned out .use_external_sox is not necessary for building torchaudio in fbcode.

Reviewed By: vincentqb

Differential Revision: D21792939

fbshipit-source-id: c0fb5173c6533e67114f50ddc8e9425bd129574f

* Import torchaudio 20200605

Summary: import torchaudio 0.5.0 in fbcode using import_audio.sh:

Reviewed By: vincentqb

Differential Revision: D21884426

fbshipit-source-id: b6f2cc308e597caef2dd767c315b167c09fb0d4c

* Change parameterized testing system to be compatible with unittest

Summary: The previous implementation of parameterized testing worked by modifying test.common_utils inplace.  This doesn't work in general because unittest's contract with test modules is such that it must be able to load the module and run the test itself.  Because the previous implementation needed to load the module and modify it, it is incompatible.

Reviewed By: mthrok

Differential Revision: D21964676

fbshipit-source-id: 9bb71e8c3f9fab074239b22306f3bbddb0f3975b

* Import torchaudio 20200618 #718

Summary: Import torchaudio up to #719

Reviewed By: zhangguanheng66

Differential Revision: D22119491

fbshipit-source-id: e14842278a32c9373179fc132e8111a0ffe66d93

* Import torchaudio 20200714 #782 (#784)

Summary:
Pull Request resolved: https://github.com/pytorch/audio/pull/784

 - Import torchaudio.
 - Change test util module name from test_case_utils to case_utils

Reviewed By: cpuhrsch

Differential Revision: D22261638

fbshipit-source-id: eb4df500c1d7db0a60baa100dd22795a63851438

* remediation of S205607

fbshipit-source-id: 5113fe0c527595e4227ff827253b7414abbdf7ac

* remediation of S205607

fbshipit-source-id: 798decc90db4f13770e97cdce3c0df7d5421b2a3

* Import torchaudio 20200723

Summary: Import torchaudio 20200723 #814

Reviewed By: fmassa

Differential Revision: D22666393

fbshipit-source-id: 50df07b5c158fe4e95ada7ea54381b2e26f6aecd

* Support custom exception message (#41907)

Summary:
Raise and assert used to have a hard-coded error message ""Exception"". User provided error message was ignored. This PR adds support to represent user's error message in TorchScript.

This breaks backward compatibility because now we actually need to script the user's error message, which can potentially contain unscriptable expressions. Such programs can break when scripting, but saved models can still continue to work.

Increased an op count in test_mobile_optimizer.py because now we need aten::format to form the actual exception message.

This is built upon an WIP PR:  https://github.com/pytorch/pytorch/pull/34112 by driazati

Pull Request resolved: https://github.com/pytorch/pytorch/pull/41907

Reviewed By: ngimel

Differential Revision: D22778301

Pulled By: gmagogsfm

fbshipit-source-id: 2b94f0db4ae9fe70c4cd03f4048e519ea96323ad

* Import torchaudio 20200804

Summary: Up to #804

Reviewed By: vincentqb

Differential Revision: D22947671

fbshipit-source-id: d1a005cec2f1a00913c41eda380b9f4b993ef779

* Remove .python3 markers

Reviewed By: ashwinp-fb

Differential Revision: D22955630

fbshipit-source-id: f00ef17a905e4c7cd9196c8924db39f9cdfe8cfa

* Import torchaudio 20200821

Reviewed By: cpuhrsch

Differential Revision: D23273584

fbshipit-source-id: 2fe7effa11b7f7cdf0cee1da6b1cac5556e9f55b

* Import torchaudio 20200922

Summary: Up to #914

Reviewed By: vincentqb, cpuhrsch

Differential Revision: D23846718

fbshipit-source-id: 9feb4e58563b900965467bd9ff66c979211c50df

* replace max-sentences with batch-size for dependencies

Summary: this fixes some regressions introduced by D24121305. fairseq configuration is changing from command line to dataclasses (via hydra eventually) which no longer supports option aliases. one such alias is --max-sentences / --batch-size, and D24121305 removed --max-sentences as --batch-size is more appropriate (fairseq is not just an nlp framework dealing with sentences). unfortunately it seems some existing flows broke and this diff attempts to fix this

Differential Revision: D24142488

fbshipit-source-id: 075180ea10a9d706a3f8d64b978d66dfd83c3d2b

Co-authored-by: Vincent Quenneville-Belair <vincentqb@gmail.com>
Co-authored-by: cpuhrsch <cpuhrsch@fb.com>
Co-authored-by: Ji Chen <jimchen90@fb.com>
Co-authored-by: Ben Mehne <bmehne@fb.com>
Co-authored-by: Stanislau Hlebik <stash@fb.com>
Co-authored-by: Yanan Cao <gmagogsfm@gmail.com>
Co-authored-by: Andres Suarez <asuarez@fb.com>
Co-authored-by: Alexei Baevski <abaevski@fb.com>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
553,moto,855818+mthrok@users.noreply.github.com,2020-11-03 13:03:58-05:00,538e5605b2e0bb780a9e45122e351d4ccb986387,https://github.com/pytorch/audio/commit/538e5605b2e0bb780a9e45122e351d4ccb986387,Fix GPU CI setup (#998),2,False,False,True,True,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
554,moto,855818+mthrok@users.noreply.github.com,2020-11-03 13:04:35-05:00,b7c17f80b8f8f5cd25a167dc1589ada4c5b0c7cc,https://github.com/pytorch/audio/commit/b7c17f80b8f8f5cd25a167dc1589ada4c5b0c7cc,Skip failing tests on macOS Python 3.6/3.7 (#970) (#999),1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
555,moto,855818+mthrok@users.noreply.github.com,2020-11-05 12:16:42-05:00,48d2b57255862a393e553df5bd1fe7a480f99b72,https://github.com/pytorch/audio/commit/48d2b57255862a393e553df5bd1fe7a480f99b72,Migrate torch.rfft to torch.fft.rfft and cfloat (#941),3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
556,moto,855818+mthrok@users.noreply.github.com,2020-11-05 13:04:46-05:00,076052f12eef6c2c64be85ca9c89054167cc1f24,https://github.com/pytorch/audio/commit/076052f12eef6c2c64be85ca9c89054167cc1f24,[Doc] Remove sox_effects util from top level module (#1001),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
557,Vincent QB,vincentqb@users.noreply.github.com,2020-11-06 12:35:38-05:00,70fc197be274f053fa6b2226f70cbec9e88110c6,https://github.com/pytorch/audio/commit/70fc197be274f053fa6b2226f70cbec9e88110c6,remove print-freq option and compute validation loss at each epoch. (#997),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
558,moto,855818+mthrok@users.noreply.github.com,2020-11-06 15:08:57-05:00,f04b3628f7bee64e4bc1760fb7dda5164e9de534,https://github.com/pytorch/audio/commit/f04b3628f7bee64e4bc1760fb7dda5164e9de534,Introduce `functional` submodule (#1003),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
559,moto,855818+mthrok@users.noreply.github.com,2020-11-06 15:52:35-05:00,4b4b8bf69acc2cbc3248518a2b1c7a52c9cf7a91,https://github.com/pytorch/audio/commit/4b4b8bf69acc2cbc3248518a2b1c7a52c9cf7a91,[Doc] Group filtering in functinal.rst (#1005),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
560,moto,855818+mthrok@users.noreply.github.com,2020-11-06 18:28:26-05:00,5e54c770b41bbdb7b228fe511b364f3f2aa96a88,https://github.com/pytorch/audio/commit/5e54c770b41bbdb7b228fe511b364f3f2aa96a88,Extract filtering functions from functional.py (#1004),3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
561,moto,855818+mthrok@users.noreply.github.com,2020-11-09 17:30:31-05:00,3b9e93372dd48649624ac2bbf660bb2e3384820e,https://github.com/pytorch/audio/commit/3b9e93372dd48649624ac2bbf660bb2e3384820e,Run GPU test for all PRs and fix setup (#1014),5,False,False,True,True,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
562,Bhargav Kathivarapu,bhargavkathivarapu31@gmail.com,2020-11-10 20:38:59+05:18,0e1d814b76725f50b76d938b474b616a15009b45,https://github.com/pytorch/audio/commit/0e1d814b76725f50b76d938b474b616a15009b45,Fix noise_down_time arg in VAD (#1017),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
563,Matti Picus,matti.picus@gmail.com,2020-11-13 03:39:41+02:00,8d0c08dbc97bdbb9033a7de25f779abfcf971ee9,https://github.com/pytorch/audio/commit/8d0c08dbc97bdbb9033a7de25f779abfcf971ee9,[Doc] Build docs and push to branch in CI (#1006),6,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
564,Kshiteej K,kshitijkalambarkar@gmail.com,2020-11-13 23:11:32+05:18,5630fe353b4027c53f282e5143ef183c437658a8,https://github.com/pytorch/audio/commit/5630fe353b4027c53f282e5143ef183c437658a8,Add pathlib.Path support to `cmuarctic` (#1025),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
565,Bhargav Kathivarapu,bhargavkathivarapu31@gmail.com,2020-11-13 23:13:46+05:18,b9ee0139f455a1b897e08c0b127df3e14751702f,https://github.com/pytorch/audio/commit/b9ee0139f455a1b897e08c0b127df3e14751702f,"YesNo Dataset Pathlib change (#1015)



Co-authored-by: Vincent QB <vincentqb@users.noreply.github.com>",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
566,moto,855818+mthrok@users.noreply.github.com,2020-11-13 13:18:14-05:00,f1142e655f04b8f62bf8abbbfaf799227625e35f,https://github.com/pytorch/audio/commit/f1142e655f04b8f62bf8abbbfaf799227625e35f,"Fbsync (#1020)

* Import torchaudio #996 758f6c2

Reviewed By: cpuhrsch

Differential Revision: D24606263

fbshipit-source-id: 4301b1df84d20c671783ec34c52d5b257374abf1

* Import torchaudio #1004 5e54c77

Summary: Import torchaudio up to #1004 5e54c77

Reviewed By: vincentqb, cpuhrsch

Differential Revision: D24841498

fbshipit-source-id: 3829130636f36779d84f01ff0d0120b80b2396d7",2,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
567,Kshiteej K,kshitijkalambarkar@gmail.com,2020-11-14 01:03:52+05:18,0cf4b8a9ec35ba0048051d0bc9d0ca8de5f085fe,https://github.com/pytorch/audio/commit/0cf4b8a9ec35ba0048051d0bc9d0ca8de5f085fe,Add pathlib.Path support to `commonvoice` (#1027),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
568,Bhargav Kathivarapu,bhargavkathivarapu31@gmail.com,2020-11-16 21:18:16+05:18,551750031e0797b68af81a89dffd08aad89abcdd,https://github.com/pytorch/audio/commit/551750031e0797b68af81a89dffd08aad89abcdd,Pathlib support for VCTK and LJSPEECH (#1028),4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
569,Kshiteej K,kshitijkalambarkar@gmail.com,2020-11-16 22:04:54+05:18,edaeda4f017760cac9e2745b1bf94318e3340869,https://github.com/pytorch/audio/commit/edaeda4f017760cac9e2745b1bf94318e3340869,"Add pathlib.Path support to `gtzan` (#1032)

Co-authored-by: Vincent QB <vincentqb@users.noreply.github.com>",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
570,Yusuke Mori,mori@mi.t.u-tokyo.ac.jp,2020-11-17 02:35:43+09:00,20a41549cb486f043bf509f5adaa25123cd0bf44,https://github.com/pytorch/audio/commit/20a41549cb486f043bf509f5adaa25123cd0bf44,Correct notation fluctuation in README.md (#1029),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
571,Matti Picus,matti.picus@gmail.com,2020-11-16 19:37:39+02:00,70f429a419dc0bab700b576beaf1f6f0b02da40a,https://github.com/pytorch/audio/commit/70f429a419dc0bab700b576beaf1f6f0b02da40a,fix typos in commit_docs.sh script (#1034),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
572,Jcaw,toastedjcaw@gmail.com,2020-11-16 23:56:27+00:00,619da1f291981d08604abd41030b8ad4e32f06c3,https://github.com/pytorch/audio/commit/619da1f291981d08604abd41030b8ad4e32f06c3,Fix links to documentation in README (#1037),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
573,Bhargav Kathivarapu,bhargavkathivarapu31@gmail.com,2020-11-18 03:17:41+05:18,550b6a306564a06b821d76bebe6768e3c707c766,https://github.com/pytorch/audio/commit/550b6a306564a06b821d76bebe6768e3c707c766,Add pathlib support for SPEECHCOMMANDS (#1039),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(data, data_samples[i][0], atol=5e-5, rtol=1e-8)')]",[],[],[],[],[],[],[],[],[],[],"[('Equal', '(data, self.samples[i][0], atol=5e-5, rtol=1e-8)'), ('Equal', '(data, self.samples[i][0], atol=5e-5, rtol=1e-8)'), ('Equal', '(data, self.train_samples[i][0], atol=5e-5, rtol=1e-8)'), ('Equal', '(data, self.valid_samples[i][0], atol=5e-5, rtol=1e-8)'), ('Equal', '(data, self.test_samples[i][0], atol=5e-5, rtol=1e-8)')]",[],[],[],[],[],[],[],[],[],"['sample_rate == data_samples[i][1]', 'label == data_samples[i][2]', 'speaker_id == data_samples[i][3]', 'utterance_number == data_samples[i][4]', 'num_samples == len(data_samples)']",[],[],[],[],[],[],[],[],[],[],[],[],"['sample_rate == self.samples[i][1]', 'label == self.samples[i][2]', 'speaker_id == self.samples[i][3]', 'utterance_number == self.samples[i][4]', 'num_samples == len(self.samples)', 'sample_rate == self.samples[i][1]', 'label == self.samples[i][2]', 'speaker_id == self.samples[i][3]', 'utterance_number == self.samples[i][4]', 'num_samples == len(self.samples)', 'sample_rate == self.train_samples[i][1]', 'label == self.train_samples[i][2]', 'speaker_id == self.train_samples[i][3]', 'utterance_number == self.train_samples[i][4]', 'num_samples == len(self.train_samples)', 'sample_rate == self.valid_samples[i][1]', 'label == self.valid_samples[i][2]', 'speaker_id == self.valid_samples[i][3]', 'utterance_number == self.valid_samples[i][4]', 'num_samples == len(self.valid_samples)', 'sample_rate == self.test_samples[i][1]', 'label == self.test_samples[i][2]', 'speaker_id == self.test_samples[i][3]', 'utterance_number == self.test_samples[i][4]', 'num_samples == len(self.test_samples)']",[],[],[],[],[],[],[],[],[],[],[],[]
574,Matti Picus,matti.picus@gmail.com,2020-11-18 00:03:38+02:00,f3b9208f8ab970ce8bcf16b6137ade282053c4b1,https://github.com/pytorch/audio/commit/f3b9208f8ab970ce8bcf16b6137ade282053c4b1,fix doc commit script 2 (#1041),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
575,Bhargav Kathivarapu,bhargavkathivarapu31@gmail.com,2020-11-19 01:02:28+05:18,37b4e136e1824e86644540571af29d87fe528dc7,https://github.com/pytorch/audio/commit/37b4e136e1824e86644540571af29d87fe528dc7,Add pathlib support for TEDLIUM (#1045),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],"[('Equal', '(data, self.samples[release][i][0], atol=5e-5, rtol=1e-8)'), ('Equal', '(data, self.samples[release][i][0], atol=5e-5, rtol=1e-8)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample_rate == self.samples[release][i][1]', 'transcript == self.samples[release][i][2]', 'talk_id == self.samples[release][i][3]', 'speaker_id == self.samples[release][i][4]', 'identifier == self.samples[release][i][5]', 'num_samples == len(self.samples[release])', 'phoenemes == PHONEME', 'sample_rate == self.samples[release][i][1]', 'transcript == self.samples[release][i][2]', 'talk_id == self.samples[release][i][3]', 'speaker_id == self.samples[release][i][4]', 'identifier == self.samples[release][i][5]', 'num_samples == len(self.samples[release])', 'phoenemes == PHONEME']",[],[],[],[],[],[],[],[],[],[],[],[]
576,Bhargav Kathivarapu,bhargavkathivarapu31@gmail.com,2020-11-19 01:03:21+05:18,b5c16d33148b84155ed46d35fb2d783d9c1f2625,https://github.com/pytorch/audio/commit/b5c16d33148b84155ed46d35fb2d783d9c1f2625,Add pathlib support for LIBRITTS and LIBRISPEECH (#1046),4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
577,Krishna Kalyan,kkalyan@apache.org,2020-11-18 20:48:17+01:00,34696b141ac624ac4c5bc0ed99517bcbe7e9dca7,https://github.com/pytorch/audio/commit/34696b141ac624ac4c5bc0ed99517bcbe7e9dca7,"Argument in griffinlim is not used (#1036)

Co-authored-by: krishnakalyan3 <skalyan@cloudera.com>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
578,Bhargav Kathivarapu,bhargavkathivarapu31@gmail.com,2020-11-20 20:20:59+05:18,dc3c5c51ae43f82d5634c3bc5827f343f0c4f872,https://github.com/pytorch/audio/commit/dc3c5c51ae43f82d5634c3bc5827f343f0c4f872,Add Pathlib support for 'apply_effects_file' (#1048),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(found, expected)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['sr == expected_sr'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
579,Vincent QB,vincentqb@users.noreply.github.com,2020-11-20 11:07:54-05:00,e121022ed0e4692c7948aae9b207c098f3acb41f,https://github.com/pytorch/audio/commit/e121022ed0e4692c7948aae9b207c098f3acb41f,remove unused imports. (#1052),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
580,moto,855818+mthrok@users.noreply.github.com,2020-11-20 11:52:23-05:00,7580485904d32c9c7d88f6457759c990318d796b,https://github.com/pytorch/audio/commit/7580485904d32c9c7d88f6457759c990318d796b,"Temporarily Disable OpenMP support for libsox (#1026)

Currently `libsox` on Linux is compiled with GPU OpenMP and it interferes with the version PyTorch uses (Intel in case of binary distribution). This PR disables OpenMP support for `libsox`, while we investigate the way to use the same OpenMP as PyTorch's version.",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
581,Matti Picus,matti.picus@gmail.com,2020-11-20 19:09:38+02:00,e498036d1ff26f7381473fc1fe70070130a691f8,https://github.com/pytorch/audio/commit/e498036d1ff26f7381473fc1fe70070130a691f8,add org-member context and generate a .netrc file for git push (#1049),4,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
582,Jcaw,toastedjcaw@gmail.com,2020-11-20 20:58:58+00:00,fb3ef9ba427acd7db3084f988ab55169fab14854,https://github.com/pytorch/audio/commit/fb3ef9ba427acd7db3084f988ab55169fab14854,"Fix typo in docstring - double ""a"" (#1056)",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
583,moto,855818+mthrok@users.noreply.github.com,2020-12-01 15:14:46-05:00,1fe0a40c2b9bb7183b2a2e07d337af1cb4cea16c,https://github.com/pytorch/audio/commit/1fe0a40c2b9bb7183b2a2e07d337af1cb4cea16c,Clean up handling of optional args in C++ with c10:optional (#1043),4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
584,ProGamerGov,ProGamerGov@users.noreply.github.com,2020-12-02 11:15:04-07:00,9ad450acb61ca46a6b444673a51ea5dac5038944,https://github.com/pytorch/audio/commit/9ad450acb61ca46a6b444673a51ea5dac5038944,Fix multiple grammar and spelling mistakes in README (#1062),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
585,Vincent QB,vincentqb@users.noreply.github.com,2020-12-03 14:02:12-05:00,09a6fca18a9de33bb8e3c365d171bc82bbc5ee2b,https://github.com/pytorch/audio/commit/09a6fca18a9de33bb8e3c365d171bc82bbc5ee2b,"no longer download CommonVoice directly (#1018)

no longer allow to download the dataset directly. deprecate: download and url. add language.",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
586,Krishna Kalyan,kkalyan@apache.org,2020-12-04 02:49:03+01:00,2a02d7f5396ef6b1d0ad40535238092e6a4bc1a9,https://github.com/pytorch/audio/commit/2a02d7f5396ef6b1d0ad40535238092e6a4bc1a9,"[Doc] Add missing modules and minor fixes (#1022)

* Add griffinlim and DB_to_amplitude
* Fix Dataset docstring
* Fix other formatting
Co-authored-by: krishnakalyan3 <skalyan@cloudera.com>",6,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
587,moto,855818+mthrok@users.noreply.github.com,2020-12-04 13:17:42-05:00,4406a6bbb2e40a39b44fb5d9714e1357b7815673,https://github.com/pytorch/audio/commit/4406a6bbb2e40a39b44fb5d9714e1357b7815673,"Add AMB/AMR-NB/AMR-WB support to ""sox_io"" backend (#1066)",8,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(data, data_ref, atol=4e-05, rtol=1.3e-06)'), ('Equal', '(data, data_ref, atol=4e-05, rtol=1.3e-06)'), ('_amb', '(dtype, sample_rate, num_channels, normalize, duration=1)'), ('_amr_nb', '(duration=1)'), ('Equal', '(found, expected)'), ('Equal', '(found, expected)'), ('_amb', '(dtype, sample_rate, num_channels, duration=1)'), ('_amr_nb', '(duration=1)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['info.sample_rate == sample_rate', 'info.num_frames == sample_rate * duration', 'info.num_channels == num_channels', 'info.sample_rate == sample_rate', 'info.num_frames == sample_rate * duration', 'info.num_channels == num_channels', 'sr == sample_rate', 'sr == sample_rate']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
588,moto,855818+mthrok@users.noreply.github.com,2020-12-07 19:26:24-05:00,69d716c913552380862612c797a75d4466eebadc,https://github.com/pytorch/audio/commit/69d716c913552380862612c797a75d4466eebadc,Add support to extension less mp3 file (#1042),5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(found, expected)'), ('Equal', '(found, self.original)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
589,moto,855818+mthrok@users.noreply.github.com,2020-12-08 14:04:37-05:00,a2085b85f04d693222297bf614a5e5b34de04986,https://github.com/pytorch/audio/commit/a2085b85f04d693222297bf614a5e5b34de04986,"Fbsync (#1038)

* Import torchaudio #1034 70f429a

Summary: Import torchaudio #1027 0cf4b8a

Reviewed By: vincentqb, cpuhrsch

Differential Revision: D24958707

fbshipit-source-id: d06dd6b59197cc2c16bec5a9012cbf33a172b6b3

* Import torchaudio #1066 4406a6b

Summary: Import up to #1066

Reviewed By: cpuhrsch

Differential Revision: D25373068

fbshipit-source-id: 890d36a25259b93428b3037c3123ff5a2cacfa04",5,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
590,moto,855818+mthrok@users.noreply.github.com,2020-12-11 16:44:15-05:00,366cef836ad01dbceb060d0ecea445667f9dcfb2,https://github.com/pytorch/audio/commit/366cef836ad01dbceb060d0ecea445667f9dcfb2,"Revert ""no longer download CommonVoice directly (#1018)"" (#1079)

This reverts commit 09a6fca18a9de33bb8e3c365d171bc82bbc5ee2b.",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
591,moto,855818+mthrok@users.noreply.github.com,2020-12-11 17:01:03-05:00,19fc580da97baf179395bb257647c5c25b993e42,https://github.com/pytorch/audio/commit/19fc580da97baf179395bb257647c5c25b993e42,Cherry-pick 'Disallow download=True in CommonVoice (#1076)' (#1080),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
592,ILJI CHOI,choiilji@gmail.com,2020-12-15 05:49:09+09:00,3691b8efb98e0e9d585034e16250885272326ddb,https://github.com/pytorch/audio/commit/3691b8efb98e0e9d585034e16250885272326ddb,"Remove duplicated ""detect_pitch_frequency"" from __all__ (#1085)",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
593,Matti Picus,matti.picus@gmail.com,2020-12-15 18:49:57+02:00,79c97fb0832ade9fd81d90283bc424d0b4fa2f1f,https://github.com/pytorch/audio/commit/79c97fb0832ade9fd81d90283bc424d0b4fa2f1f,Remove checkout step from doc upload (#1091),3,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
594,Krishna Kalyan,kkalyan@apache.org,2020-12-15 20:25:13+01:00,d25a4ddff30095270032bda0cbcf4f61e65e531f,https://github.com/pytorch/audio/commit/d25a4ddff30095270032bda0cbcf4f61e65e531f,"Using Path and glob instead of walk_files (#1069)

- yesno
- librispeech
- libritts
- speechcommands

Co-authored-by: krishnakalyan3 <skalyan@cloudera.com>
Co-authored-by: Vincent Quenneville-Belair <vincentqb@gmail.com>",4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
595,moto,855818+mthrok@users.noreply.github.com,2020-12-16 23:04:38-05:00,3ace59327286938ac474d14d0ffd883eb2f334e9,https://github.com/pytorch/audio/commit/3ace59327286938ac474d14d0ffd883eb2f334e9,"Update calls to torch.stft to have return_complex=True (#1096)

* Resolves https://github.com/pytorch/audio/issues/1095",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
596,Matti Picus,matti.picus@gmail.com,2020-12-17 06:06:30+02:00,c9b64dc8fd90d08f72ba516420880b3f82b280ec,https://github.com/pytorch/audio/commit/c9b64dc8fd90d08f72ba516420880b3f82b280ec,Remove buggy debug cruft from build workflow (#1093),2,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
597,Matti Picus,matti.picus@gmail.com,2020-12-17 17:19:06+02:00,3616961b634015da96ac634478cb76765bda88d5,https://github.com/pytorch/audio/commit/3616961b634015da96ac634478cb76765bda88d5,Fix doc push job (#1098),2,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
598,Matti Picus,matti.picus@gmail.com,2020-12-17 21:07:49+02:00,80c97e6a78b6f1ead85d04c40badaa1014d8a24d,https://github.com/pytorch/audio/commit/80c97e6a78b6f1ead85d04c40badaa1014d8a24d,[Doc] force https push by adding a https remote (#1100),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
599,moto,855818+mthrok@users.noreply.github.com,2020-12-18 14:29:57-05:00,6b8102408453c4f7cec0a806b24930e60477c132,https://github.com/pytorch/audio/commit/6b8102408453c4f7cec0a806b24930e60477c132,"[BC-Breaking] Remove download and subdir from CommonVoice (#1082)

* Removes code for download logics 
* [BC-breaking] Changes the meaning of `root` argument to the exact directory of the dataset
* Deprecates the constructor arguments for download and subdirectory construction",3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
600,Krishna Kalyan,kkalyan@apache.org,2020-12-19 18:37:36+01:00,7a3e15bc54d42081699da186e58d76143a30fae9,https://github.com/pytorch/audio/commit/7a3e15bc54d42081699da186e58d76143a30fae9,"Replace wakl_files with glob in VCTK (#1101)

Co-authored-by: krishnakalyan3 <skalyan@cloudera.com>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
601,Krishna Kalyan,kkalyan@apache.org,2020-12-19 22:01:54+01:00,3cd5eed63785d5a62de45b4eeca6bcd24d7fcf76,https://github.com/pytorch/audio/commit/3cd5eed63785d5a62de45b4eeca6bcd24d7fcf76,"Remove redundant dataset utilities  (#1086)

Co-authored-by: krishnakalyan3 <skalyan@cloudera.com>",5,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
602,Jcaw,toastedjcaw@gmail.com,2020-12-19 21:03:04+00:00,e01724c41214faefb6126d8e0d7078df0113a250,https://github.com/pytorch/audio/commit/e01724c41214faefb6126d8e0d7078df0113a250,Fix path to sox_effects tests in docs (#1110),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
603,Eli Uriegas,1700823+seemethere@users.noreply.github.com,2020-12-21 09:46:52-08:00,37692d8d3f262d8b5562f64136eea8e7066729c2,https://github.com/pytorch/audio/commit/37692d8d3f262d8b5562f64136eea8e7066729c2,"[CCI] Install the CPU package for pytorch (#1105)

There's an issue with the CUDA 11.0 package for conda with
conda-package-handling that relates to https://github.com/conda/conda-package-handling/issues/71

This should fix issues with the conda smoke testing we encountered previously.

Signed-off-by: Eli Uriegas <eliuriegas@fb.com>",2,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
604,Aziz,azizbenothman76@gmail.com,2020-12-21 23:02:23+01:00,8187dc0aba7b40d61f447382075689a9cebf23e4,https://github.com/pytorch/audio/commit/8187dc0aba7b40d61f447382075689a9cebf23e4,"Remove walk_files (#1111)

The use of `walk_files` made it ambiguous who is responsible to locate 
the correct set of files. (Dataset class? or utility?)
In fact, just glob-ing everything is not the right problem being solved in implementing
Dataset, because if you have a specific dataset you consider to access, then
the directory structure and file locations are determined. No need to do arbitral number of recursions.
Each Dataset implementation should be glob-ing the right set of files it requires.",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],['def setUp(self):'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['found == self.expected[i]', 'n_ites == len(self.expected)']",[],[],[],[],[],[],[],[],[],[],[],[]
605,Samuel Marks,807580+SamuelMarks@users.noreply.github.com,2020-12-23 00:13:55+11:00,c4f0a11b7d2b52c1a31685716d05ee8bbec65733,https://github.com/pytorch/audio/commit/c4f0a11b7d2b52c1a31685716d05ee8bbec65733,"[Doc] Rename ""Arguments:"" to ""Args:"" (#1117)",1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
606,moto,855818+mthrok@users.noreply.github.com,2020-12-22 13:39:22-05:00,be442561a538b1ecc73394eeba610c8a7e2b7f4a,https://github.com/pytorch/audio/commit/be442561a538b1ecc73394eeba610c8a7e2b7f4a,Add format override to load and related I/O functions (#1104),14,True,True,True,False,False,False,False,False,True,False,False,False,False,False,False,['assert_migration'],0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],"[('Equal', '(found, self.original)')]",[],[],[],[],[],[],[],[],[],"['sr == 16000', 'sinfo.sample_rate == 16000', 'sr == 16000']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
607,moto,855818+mthrok@users.noreply.github.com,2020-12-22 17:03:51-05:00,47c2040ef433ce92533ee96711cf9b96bd1945b6,https://github.com/pytorch/audio/commit/47c2040ef433ce92533ee96711cf9b96bd1945b6,"Fbsync (#1121)

* Import torchaudio #1105 37692d8

Summary: Import torchaudio up to #1105 37692d8

Reviewed By: datumbox

Differential Revision: D25671497

fbshipit-source-id: 5af11c801321f2bb964245ac6ed74979310f4b5f",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
608,Aziz,azizbenothman76@gmail.com,2020-12-23 15:51:03+01:00,58ef8fb633fef1fe7cee19000d0d8aed108c4554,https://github.com/pytorch/audio/commit/58ef8fb633fef1fe7cee19000d0d8aed108c4554,Remove deprecated transform from Dataset (#1120),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
609,Aziz,azizbenothman76@gmail.com,2020-12-23 23:07:20+01:00,9c484027147cf90a253ad52c4f24a814b74125d7,https://github.com/pytorch/audio/commit/9c484027147cf90a253ad52c4f24a814b74125d7,[Doc] Fix the return type for load functions (#1122),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
610,Aziz,azizbenothman76@gmail.com,2020-12-27 18:43:56+01:00,aa56d30c937ab48c0e93234046e19f0e128a03fc,https://github.com/pytorch/audio/commit/aa56d30c937ab48c0e93234046e19f0e128a03fc,"Fix CommonVoice for French (#1126)

Resolves #1125 where dataset metadata does not contain an extension.",3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,2,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(expected_data, waveform, atol=5e-5, rtol=1e-8)')]",[],"[('Class', '(cls)'), ('Class', '(cls)')]",[],"[('Class', '(cls)'), ('Class', '(cls)'), ('Class', '(cls)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample_rate == _SAMPLE_RATE', 'sample_rate == _SAMPLE_RATE', 'dictionary == expected_dictionary', 'n_ite == len(self.data)']",[],[],[],[],[],[],[],[],[],[],[],[],['sample_rate == TestCommonVoice.sample_rate'],[],[],[],[],[],[],[],[],[],[],[],[]
611,Aziz,azizbenothman76@gmail.com,2020-12-27 18:45:04+01:00,71214b48548b1dcb6ebd581dd36a9d0e60af6837,https://github.com/pytorch/audio/commit/71214b48548b1dcb6ebd581dd36a9d0e60af6837,Add `format` arg in new soundfile backend (#1129),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
612,Aziz,azizbenothman76@gmail.com,2020-12-30 20:45:57+01:00,93c3025f935b9dae47ba8b8f78a8003eb3bb1ffd,https://github.com/pytorch/audio/commit/93c3025f935b9dae47ba8b8f78a8003eb3bb1ffd,Make Dataset utility test independent of CommonVoice (#1132),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],"[('Class', '(cls)')]",[],"[('Class', '(cls)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
613,Aziz,azizbenothman76@gmail.com,2020-12-30 21:17:12+01:00,70fd2f3dc973ed03fb8cabd566cbf0bd54dfda87,https://github.com/pytorch/audio/commit/70fd2f3dc973ed03fb8cabd566cbf0bd54dfda87,Refactor vctk unittest (#1134),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
614,Aziz,azizbenothman76@gmail.com,2020-12-30 21:18:57+01:00,5bf6b146cda2b06888d1c9b6b60eb86eaf159c64,https://github.com/pytorch/audio/commit/5bf6b146cda2b06888d1c9b6b60eb86eaf159c64,Refactor speechcommands unittest (#1136),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
615,Aziz,azizbenothman76@gmail.com,2020-12-30 21:28:28+01:00,cf11427643edc4bf7681c0e425f0409eb21a7d28,https://github.com/pytorch/audio/commit/cf11427643edc4bf7681c0e425f0409eb21a7d28,Refactor librispeech unittest (#1140),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
616,Vincent QB,vincentqb@users.noreply.github.com,2021-01-04 14:35:59-05:00,24e5b557207a05cf3f828c02546106a356907ac2,https://github.com/pytorch/audio/commit/24e5b557207a05cf3f828c02546106a356907ac2,Use clean function to clean (#1142),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
617,Aziz,azizbenothman76@gmail.com,2021-01-05 16:27:36+01:00,8f02af5f692cd5ecaa995fd1cebeb97838001a8f,https://github.com/pytorch/audio/commit/8f02af5f692cd5ecaa995fd1cebeb97838001a8f,"Clean up Dataset test CommonVoice and YesNo (#1133)

* improve commonvoice test

* update yesno test

* refactor commonvoice dataset unittest",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],"[('Class', '(cls)')]",[],[],[],[],[],[],[],[],"[('Equal', '(expected_data, waveform, atol=5e-5, rtol=1e-8)')]",[],[],[],"[('Class', '(cls)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample_rate == _SAMPLE_RATE', 'dictionary == expected_dictionary', 'n_ite == len(self.data)']",[],[],[],[],[],[],[],[],[],[],[],[]
618,Aziz,azizbenothman76@gmail.com,2021-01-05 16:29:25+01:00,64956d54b2b2be9681da01fe214277a0eef05be2,https://github.com/pytorch/audio/commit/64956d54b2b2be9681da01fe214277a0eef05be2,Refactor TEDLIUM unittest (#1135),1,False,True,True,False,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['import unittest'],['phoenemes == _PHONEME'],[],[],[],[],[],[],[],[],[],[],[],[],['phoenemes == PHONEME'],[],[],[],[],[],[],[],[],[],[],[],[]
619,Aziz,azizbenothman76@gmail.com,2021-01-05 16:30:51+01:00,1838f927d4813a4e2c8f04f7e9f9e5b214f1ac0c,https://github.com/pytorch/audio/commit/1838f927d4813a4e2c8f04f7e9f9e5b214f1ac0c,Refactor LJSpeech unittest (#1138),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
620,Aziz,azizbenothman76@gmail.com,2021-01-05 16:32:15+01:00,02e4f6d2d0c02552483e6f541cfdef57b6fbbe30,https://github.com/pytorch/audio/commit/02e4f6d2d0c02552483e6f541cfdef57b6fbbe30,Refactor LibriTTS unittest (#1139),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['original_text == self._original_text', 'normalized_text == self._normalized_text', 'n_ites == len(self._utterance_ids)']",[],[],[],[],[],[],[],[],[],[],[],[],"['original_text == self.original_text', 'normalized_text == self.normalized_text', 'n_ites == len(self.utterance_ids)']",[],[],[],[],[],[],[],[],[],[],[],[]
621,Krishna Kalyan,kkalyan@apache.org,2021-01-05 20:51:50+05:18,6edb33558c0c76d136bf3a8091e57621d2c5227c,https://github.com/pytorch/audio/commit/6edb33558c0c76d136bf3a8091e57621d2c5227c,"Refactor CMUARCTIC unittest (#1147)

Co-authored-by: krishnakalyan3 <skalyan@cloudera.com>",1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
622,Krishna Kalyan,kkalyan@apache.org,2021-01-05 20:53:00+05:18,2067d03485993c34980d51c4d0a9b95a55296c6f,https://github.com/pytorch/audio/commit/2067d03485993c34980d51c4d0a9b95a55296c6f,"Refactor GTZAN unittest (#1148)

Co-authored-by: krishnakalyan3 <skalyan@cloudera.com>",1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
623,moto,855818+mthrok@users.noreply.github.com,2021-01-05 13:01:46-05:00,7d00504d53f9f7cc53bd610f338c14a19e09384f,https://github.com/pytorch/audio/commit/7d00504d53f9f7cc53bd610f338c14a19e09384f,Explicitly disable audio devices in sox build (#1153),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
624,Vincent QB,vincentqb@users.noreply.github.com,2021-01-05 14:48:26-05:00,6b07bcf80fafd77cb8bee32c316ce8b55323b868,https://github.com/pytorch/audio/commit/6b07bcf80fafd77cb8bee32c316ce8b55323b868,Add RNN Transducer Loss for CPU (#1137),16,False,True,True,True,False,True,False,False,False,False,False,False,False,False,False,[],0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Raises', '('), ('Equal', '(costs, ref_costs, atol=atol, rtol=rtol)'), ('Equal', '(logits_shape, gradients.shape)'), ('Equal', '(gradients, ref_gradients, atol=atol, rtol=rtol)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
625,moto,855818+mthrok@users.noreply.github.com,2021-01-06 11:13:30-05:00,a7797d5caeec205b06e4e4bc24cd38bf4122011f,https://github.com/pytorch/audio/commit/a7797d5caeec205b06e4e4bc24cd38bf4122011f,Fix nan gradient by using native complex abs op (#1013),4,False,True,True,False,True,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['import unittest'],['not x.grad.isnan().sum()'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
626,moto,855818+mthrok@users.noreply.github.com,2021-01-06 12:14:24-05:00,f2da58619b803bc12fc737edf903fd67219bc2d3,https://github.com/pytorch/audio/commit/f2da58619b803bc12fc737edf903fd67219bc2d3,Refactor sox source files (#1106),12,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
627,Vincent QB,vincentqb@users.noreply.github.com,2021-01-07 10:14:45-05:00,422edb183f25ab91eb967381d328384e48c7a4a0,https://github.com/pytorch/audio/commit/422edb183f25ab91eb967381d328384e48c7a4a0,update data pointer (#1160),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
628,moto,855818+mthrok@users.noreply.github.com,2021-01-07 16:29:37-05:00,463a8b2c83653ce01698f542e2ff07f4947dce7e,https://github.com/pytorch/audio/commit/463a8b2c83653ce01698f542e2ff07f4947dce7e,Support file-like object in load function (#1158),16,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,7,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(expected, found)'), ('Equal', '(expected, found)'), ('Equal', '(expected, found)'), ('Equal', '(expected, found)'), ('Equal', '(expected, found)'), ('Equal', '(expected, found)'), ('Equal', '(expected, found)')]",[],"[('Class', '(cls)')]",[],"[('Class', '(cls)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sr == sample_rate', 'sr == sample_rate', 'sr == sample_rate', 'sr == sample_rate', 'sr == sample_rate', 'sr == sample_rate', 'sr == sample_rate']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
629,Vincent QB,vincentqb@users.noreply.github.com,2021-01-07 17:28:27-05:00,df48ba36826b838ec8d986343ad0ac42964314d0,https://github.com/pytorch/audio/commit/df48ba36826b838ec8d986343ad0ac42964314d0,Fix small typo in transducer (#1162),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
630,Krishna Kalyan,kkalyan@apache.org,2021-01-08 19:58:24+05:18,1e7d8d20f9284a4812035d6c8df27a47de13d483,https://github.com/pytorch/audio/commit/1e7d8d20f9284a4812035d6c8df27a47de13d483,"Replace pytest's paremeterization with parameterized  (#1157)

Also replaces `assert_allclose` with `assertEqual`.

Co-authored-by: krishnakalyan3 <skalyan@cloudera.com>",2,False,True,True,False,False,True,False,True,False,False,False,False,False,False,False,[],0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,12,12,12,0,0,0,[],"[('Equal', '(computed, expected)'), ('Equal', '(computed, expected)'), ('Equal', '(x2, torch.abs(x), atol=5e-5, rtol=1e-5)'), ('Equal', '(x2, spec, atol=5e-5, rtol=1e-5)'), ('Equal', '(x2, torch.abs(x), atol=5e-5, rtol=1e-5)'), ('Equal', '(x2, spec, atol=5e-5, rtol=1e-5)'), ('Equal', '(norm_tensor, expected_norm_tensor, atol=1e-5, rtol=1e-5)'), ('Equal', '(complex_stretch, torch.from_numpy(expected_complex_stretch), atol=1e-5, rtol=1e-5)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['mask_specgram.size() == specgram.size()', 'num_masked_columns < mask_param', 'mask_specgrams.size() == specgrams.size()', '(num_masked_columns < mask_param).sum() == num_masked_columns.numel()', 'complex_specgrams.dim() == complex_specgrams_stretch.dim()', 'complex_specgrams_stretch.size() == torch.Size(expected_size)']",[],[],[],[],[],[],[],[],[],[],[],[],"['mask_specgram.size() == specgram.size()', 'num_masked_columns < mask_param', 'mask_specgrams.size() == specgrams.size()', '(num_masked_columns < mask_param).sum() == num_masked_columns.numel()', 'complex_specgrams.dim() == complex_specgrams_stretch.dim()', 'complex_specgrams_stretch.size() == torch.Size(expected_size)', 'np.allclose(complex_stretch, expected_complex_stretch, atol=1e-5)']",[],[],[],[],[],[],"['', '(, [1, 2, 0.7])', '', '(, [100])', '(, [0., 30.])', '(, [1, 2])', '(, [100])', '(, [0., 30.])', '(, [2, 3])', '', '(, [0.5, 1.01, 1.3])', '(, [256])']","['parametrize(, [', 'parametrize(, [1, 2, 0.7])', 'parametrize(, [', 'parametrize(, [100])', 'parametrize(, [0., 30.])', 'parametrize(, [1, 2])', 'parametrize(, [100])', 'parametrize(, [0., 30.])', 'parametrize(, [2, 3])', 'parametrize(, [', 'parametrize(, [0.5, 1.01, 1.3])', 'parametrize(, [256])']","['mark.parametrize(, [', 'mark.parametrize(, [1, 2, 0.7])', 'mark.parametrize(, [', 'mark.parametrize(, [100])', 'mark.parametrize(, [0., 30.])', 'mark.parametrize(, [1, 2])', 'mark.parametrize(, [100])', 'mark.parametrize(, [0., 30.])', 'mark.parametrize(, [2, 3])', 'mark.parametrize(, [', 'mark.parametrize(, [0.5, 1.01, 1.3])', 'mark.parametrize(, [256])']",[],[],[]
631,Nicolas Hug,contact@nicolas-hug.com,2021-01-08 14:52:38+00:00,d4fe76e7e44e0887c8d0e4e0ed0b6f0a876adfd9,https://github.com/pytorch/audio/commit/d4fe76e7e44e0887c8d0e4e0ed0b6f0a876adfd9,DOC Add instruction to install parametrized package (#1164),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
632,moto,855818+mthrok@users.noreply.github.com,2021-01-08 14:16:35-05:00,84966ae132f8c04ede2a9365324388f3948a1841,https://github.com/pytorch/audio/commit/84966ae132f8c04ede2a9365324388f3948a1841,Temporarily disable fileobj tests (#1168),1,False,False,False,False,True,True,True,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
633,moto,855818+mthrok@users.noreply.github.com,2021-01-08 19:28:49-05:00,9690e8e185eacc3c81b285ac9f250e07a9c3a61f,https://github.com/pytorch/audio/commit/9690e8e185eacc3c81b285ac9f250e07a9c3a61f,Clean up transducer build (#1159),6,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
634,moto,855818+mthrok@users.noreply.github.com,2021-01-08 20:46:59-05:00,7a36c5573d4fac310d694ab758052f8d5aa55ed3,https://github.com/pytorch/audio/commit/7a36c5573d4fac310d694ab758052f8d5aa55ed3,Clean up libsox source and build directory (#1161),7,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
635,Krishna Kalyan,kkalyan@apache.org,2021-01-11 20:42:35+05:18,1bb1115fad9e85a6dcb62f158d78f46babbb78ab,https://github.com/pytorch/audio/commit/1bb1115fad9e85a6dcb62f158d78f46babbb78ab,"Merge flake8 configurations (#1172)

Co-authored-by: krishnakalyan3 <skalyan@cloudera.com>",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
636,Vincent QB,vincentqb@users.noreply.github.com,2021-01-11 15:01:05-05:00,b57f05c404d8e352a563bce4db9c339509b13491,https://github.com/pytorch/audio/commit/b57f05c404d8e352a563bce4db9c339509b13491,add doc for rnnt loss (#1171),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
637,moto,855818+mthrok@users.noreply.github.com,2021-01-12 11:49:29-05:00,9513d4290da48f530f25d6b9777718ad15499503,https://github.com/pytorch/audio/commit/9513d4290da48f530f25d6b9777718ad15499503,Fix CircleCI third party download cache config (#1176),2,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
638,moto,855818+mthrok@users.noreply.github.com,2021-01-12 11:57:53-05:00,092a786984d4e69812e4de538c7a40921d5d1281,https://github.com/pytorch/audio/commit/092a786984d4e69812e4de538c7a40921d5d1281,"Revert ""Temporarily disable fileobj tests (#1168)"" (#1174)

This reverts commit 84966ae132f8c04ede2a9365324388f3948a1841.",1,False,False,True,True,False,True,True,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
639,moto,855818+mthrok@users.noreply.github.com,2021-01-12 14:06:37-05:00,72b768033c5a3910f619550100d248d96eb7aefa,https://github.com/pytorch/audio/commit/72b768033c5a3910f619550100d248d96eb7aefa,"[Build] Disable C++11 ABI when necessary for libtorch compatibility (#880)

With this change, `BUILD_TRANSDUCER=1 python setup.py build_ext` now sees `-D_GLIBCXX_USE_CXX11_ABI=` in the compilation command. (Note: sox is C-only so it is not relevant to sox build process)

See also:
 - https://github.com/pytorch/text/pull/931
 - https://stackoverflow.com/a/55406930",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
640,moto,855818+mthrok@users.noreply.github.com,2021-01-15 18:32:02-05:00,f1d8d1e0da44f6503c01ddcae2e40772b400ea2d,https://github.com/pytorch/audio/commit/f1d8d1e0da44f6503c01ddcae2e40772b400ea2d,"Support file-like object in save func (#1141)

* Support file-like object in save func

* Disable CircleCI cache for TP artifacts for cleaner build",14,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(expected, found)'), ('Equal', '(expected_data, data)'), ('Equal', '(expected_data, data)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sr == sample_rate', 'sample_rate == sr', 'sample_rate == sr']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
641,Alexandre Défossez,adefossez@users.noreply.github.com,2021-01-19 15:42:04+01:00,e43a8e7688ddc69e68fabae79c27ff0d53449fd5,https://github.com/pytorch/audio/commit/e43a8e7688ddc69e68fabae79c27ff0d53449fd5,Make resampling simpler and faster (#1087),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
642,Krishna Kalyan,kkalyan@apache.org,2021-01-19 16:29:58+01:00,f5aced81810a7f823b6dab54549a1ac01111a39c,https://github.com/pytorch/audio/commit/f5aced81810a7f823b6dab54549a1ac01111a39c,"Refactor YesNo dataset (#1127)

Co-authored-by: krishnakalyan3 <skalyan@cloudera.com>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
643,Eli Uriegas,1700823+seemethere@users.noreply.github.com,2021-01-19 14:07:01-08:00,107718c8feea52d250404f466d5d4cd781a27b59,https://github.com/pytorch/audio/commit/107718c8feea52d250404f466d5d4cd781a27b59,"packaging: Always strip version suffix for pytorch (#1185)

torchaudio can work with any version of pytorch so let's strip the
pytorch version suffix to denote that

Signed-off-by: Eli Uriegas <eliuriegas@fb.com>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
644,Nicolas Hug,nicolashug@fb.com,2021-01-20 15:59:42+00:00,0d40a52eec5351b113cf861d03b3041ababb1727,https://github.com/pytorch/audio/commit/0d40a52eec5351b113cf861d03b3041ababb1727,Remove use of pytest in test code (#1188),2,False,True,True,False,False,False,False,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['import pytest', 'import pytest']"
645,Nicolas Hug,nicolashug@fb.com,2021-01-20 16:01:00+00:00,d53e40423934f05bf76bd8a239d9fafdc61df0da,https://github.com/pytorch/audio/commit/d53e40423934f05bf76bd8a239d9fafdc61df0da,Remove Python 2.7 reference from setup.py (#1182),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
646,moto,855818+mthrok@users.noreply.github.com,2021-01-21 10:32:28-05:00,c257ee7dd5aa01981a1259b24d1046859bf3f915,https://github.com/pytorch/audio/commit/c257ee7dd5aa01981a1259b24d1046859bf3f915,"Disable torchscript BC test (#1192)

TorchScript BC test checks that if dumped object from the previous version is compatible with the latest master. However, PyTorch does not guarantee backward compatibility of serialized TorchScript object across versions. Domain libraries do not guarantee this either.",2,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
647,moto,855818+mthrok@users.noreply.github.com,2021-01-21 10:33:13-05:00,fe921bfae69712fecdba87b023bc950f319bd577,https://github.com/pytorch/audio/commit/fe921bfae69712fecdba87b023bc950f319bd577,"Update GPU test image for development (#1191)

Changing the test Docker image for GPU tests to use Nvidia Docker `devel` image. This is necessary for #1187.",3,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
648,moto,855818+mthrok@users.noreply.github.com,2021-01-21 10:34:20-05:00,90e753c97ab4fb8920fe6ddc4a3dc0572a097b47,https://github.com/pytorch/audio/commit/90e753c97ab4fb8920fe6ddc4a3dc0572a097b47,Clean up sox/CMakeLists.txt and its build log (#1190),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
649,moto,855818+mthrok@users.noreply.github.com,2021-01-21 10:37:35-05:00,7d503816232dcc91bae90eacc6e7a105e43aaf13,https://github.com/pytorch/audio/commit/7d503816232dcc91bae90eacc6e7a105e43aaf13,Disable CCI cache (#1189),2,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
650,moto,855818+mthrok@users.noreply.github.com,2021-01-21 15:00:25-05:00,5547f204859b4484fd518564a0b1f30cd3d4ccd2,https://github.com/pytorch/audio/commit/5547f204859b4484fd518564a0b1f30cd3d4ccd2,"Update unit test base Docker image (#1193)

* Do not install sox system-wide, so that it will never get mixed up with static one torchaudio builds
* Do not install cmake system-wide
* Move libsndfile installation to Docker image",4,False,False,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
651,Nicolas Hug,nicolashug@fb.com,2021-01-25 08:40:42+00:00,27031755fc17644ef3a97b1c1996573ebb4eb550,https://github.com/pytorch/audio/commit/27031755fc17644ef3a97b1c1996573ebb4eb550,Add SpectralCentroid transform (#1167),6,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(computed, expected)'), ('_compatibilities_spectral_centroid', '(sample_rate, n_fft, hop_length, sound, sound_librosa)'), ('Equal', '(out_torch.type(out_librosa.dtype), out_librosa, atol=1e-5, rtol=1e-5)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
652,Nicolas Hug,nicolashug@fb.com,2021-01-25 15:37:08+00:00,99ed7183df3df8278cc46de432c31b254e31573e,https://github.com/pytorch/audio/commit/99ed7183df3df8278cc46de432c31b254e31573e,Add bits_per_sample to info (#1177),9,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[' unittest.mock '],[],[],[],[],[],[],[],[],[],[],[],[],"['info.bits_per_sample == bits_per_sample', 'info.bits_per_sample == bits_per_sample', 'info.bits_per_sample == 16', 'info.bits_per_sample == 0', 'info.bits_per_sample == bits_per_sample', 'len(w) == 1', 'in str(w[-1].message)', 'info.bits_per_sample == 0', 'info.bits_per_sample == sox_utils.get_bit_depth(dtype)', 'info.bits_per_sample == sox_utils.get_bit_depth(dtype)', 'info.bits_per_sample == 0  # bit_per_sample is irrelevant for compressed formats', 'info.bits_per_sample == 24  # FLAC standard', 'info.bits_per_sample == 0  # bit_per_sample is irrelevant for compressed formats', 'info.bits_per_sample == bits_per_sample', 'info.bits_per_sample == bits_per_sample', 'info.bits_per_sample == 0', 'info.bits_per_sample == 0  # bit_per_sample is irrelevant for compressed formats', 'sinfo.bits_per_sample == 0  # bit_per_sample is irrelevant for compressed formats']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
653,moto,855818+mthrok@users.noreply.github.com,2021-01-26 10:21:08-05:00,b33c539cfcf3e33af5060b08279aa69400a6314b,https://github.com/pytorch/audio/commit/b33c539cfcf3e33af5060b08279aa69400a6314b,Fix clang-format CI job (#1198),12,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
654,Krishna Kalyan,kkalyan@apache.org,2021-01-26 23:16:34+01:00,a4d643ea8bd9117502c45cc0fd14457fcc2f15d1,https://github.com/pytorch/audio/commit/a4d643ea8bd9117502c45cc0fd14457fcc2f15d1,"Refactor LJSPEECH dataset (#1143)

Co-authored-by: krishnakalyan3 <skalyan@cloudera.com>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
655,Fabian-Robert Stöter,faroit@users.noreply.github.com,2021-01-26 23:58:34+01:00,22e7e877f1b50355e3e6f55e14d06f6574c4b951,https://github.com/pytorch/audio/commit/22e7e877f1b50355e3e6f55e14d06f6574c4b951,Expose additional stft arguments to spectrogram (#892),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
656,moto,855818+mthrok@users.noreply.github.com,2021-01-27 12:19:57-05:00,41c76a17c7a191752eada5346dc88ecfe690dcae,https://github.com/pytorch/audio/commit/41c76a17c7a191752eada5346dc88ecfe690dcae,Support file-like object in info (#1108),10,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['info.sample_rate == sample_rate', 'info.num_frames == num_frames', 'info.num_channels == num_channels', 'info.bits_per_sample == bits_per_sample', 'info.sample_rate == sample_rate', 'info.num_frames == num_frames', 'info.num_channels == num_channels', 'info.bits_per_sample == bits_per_sample', 'sinfo.sample_rate == sample_rate', 'sinfo.num_channels == num_channels', 'sinfo.num_frames == sample_rate * duration', 'sinfo.bits_per_sample == bits_per_sample', 'sinfo.sample_rate == sample_rate', 'sinfo.num_channels == num_channels', 'sinfo.num_frames == sample_rate * duration', 'sinfo.bits_per_sample == bits_per_sample', 'sinfo.sample_rate == sample_rate', 'sinfo.num_channels == num_channels', 'sinfo.num_frames == sample_rate * duration', 'sinfo.bits_per_sample == bits_per_sample', 'sinfo.sample_rate == sample_rate', 'sinfo.num_channels == num_channels', 'sinfo.num_frames == sample_rate * duration', 'sinfo.bits_per_sample == bits_per_sample']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
657,moto,855818+mthrok@users.noreply.github.com,2021-01-27 12:59:03-05:00,47d97e30c36d6b5baef166664cbfb057470c39fd,https://github.com/pytorch/audio/commit/47d97e30c36d6b5baef166664cbfb057470c39fd,Fix load from file object for small files and shorter bytes (#1181),4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(expected, found)'), ('Equal', '(expected, found)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sr == sample_rate', 'sr == sample_rate']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
658,Caroline Chen,carolinechen@fb.com,2021-01-28 08:48:29-08:00,674a71d1a239fd6bf48d5797053590f593efff08,https://github.com/pytorch/audio/commit/674a71d1a239fd6bf48d5797053590f593efff08,Add target `dtype` argument to `save` function for sox backend (#1204),6,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(found, expected.view(-1, 1))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
659,moto,855818+mthrok@users.noreply.github.com,2021-01-29 11:52:39-05:00,b152ee61e4b2ff443e0fd189a5a027735640048b,https://github.com/pytorch/audio/commit/b152ee61e4b2ff443e0fd189a5a027735640048b,Add encoding attribute to AudioMetaData (#1206),8,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['info.bits_per_sample == get_bits_per_sample(, dtype)', 'info.encoding == get_encoding(, dtype)', 'info.encoding == ', 'info.encoding == ', 'info.encoding == ', 'info.encoding == ', 'info.encoding == ', 'info.encoding == get_encoding(, dtype)', 'info.encoding == get_encoding(, dtype)', 'info.encoding == ', 'info.encoding == ', 'info.encoding == ', 'info.encoding == ', 'info.encoding == get_encoding(, dtype)', 'info.encoding == ', 'info.sample_rate == sample_rate', 'info.num_frames == sample_rate * duration', 'info.num_channels == num_channels', 'info.bits_per_sample == 8', 'info.encoding == ', 'info.sample_rate == sample_rate', 'info.num_frames == sample_rate * duration', 'info.num_channels == num_channels', 'info.bits_per_sample == 8', 'info.encoding == ', 'info.encoding == ', 'sinfo.num_frames == 81216', 'sinfo.num_channels == 1', 'sinfo.encoding == ', 'sinfo.num_frames == num_frames', 'sinfo.encoding == get_encoding(ext, dtype)', 'sinfo.num_frames == num_frames', 'sinfo.encoding == get_encoding(ext, dtype)', 'sinfo.sample_rate == sample_rate', 'sinfo.num_channels == num_channels', 'sinfo.num_frames == num_frames', 'sinfo.bits_per_sample == bits_per_sample', 'sinfo.encoding == get_encoding(ext, dtype)', 'sinfo.num_frames == num_frames', 'sinfo.encoding == get_encoding(ext, dtype)', 'sinfo.num_frames == num_frames', 'sinfo.encoding == get_encoding(ext, dtype)']",[],[],[],[],[],[],[],[],[],[],[],[],"['info.bits_per_sample == bits_per_sample', 'info.sample_rate == sample_rate', 'info.num_frames == sample_rate * duration', 'info.num_channels == num_channels', 'info.bits_per_sample == bits_per_sample', 'sinfo.num_frames == sample_rate * duration', 'sinfo.num_frames == sample_rate * duration', 'sinfo.num_frames == sample_rate * duration', 'sinfo.num_frames == sample_rate * duration']",[],[],[],[],[],[],[],[],[],[],[],[]
660,moto,855818+mthrok@users.noreply.github.com,2021-01-29 11:58:07-05:00,5085aeb95622c9444ce1197cd35c328363ccf02c,https://github.com/pytorch/audio/commit/5085aeb95622c9444ce1197cd35c328363ccf02c,Add smoke test for sox_io fileobj (#1165),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['info.sample_rate == sample_rate', 'info.num_channels == num_channels', 'sr == sample_rate', 'loaded.shape[0] == num_channels']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
661,moto,855818+mthrok@users.noreply.github.com,2021-01-29 12:43:28-05:00,ec1b3e36c5b606c91afc280d319f1fa5d46f4c7b,https://github.com/pytorch/audio/commit/ec1b3e36c5b606c91afc280d319f1fa5d46f4c7b,Support file-like object in apply_effects_file (#1166),4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(found, expected)'), ('Equal', '(found, expected)'), ('Equal', '(found, expected)'), ('Equal', '(found, expected)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sr == expected_sr', 'sr == expected_sr', 'sr == expected_sr', 'sr == expected_sr']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
662,Vincent QB,vincentqb@users.noreply.github.com,2021-01-29 14:36:23-05:00,af1e457e5349e66955ef3f1f1435d17863264ac5,https://github.com/pytorch/audio/commit/af1e457e5349e66955ef3f1f1435d17863264ac5,"Fix lint (#1209)

fix 'file-does-not-end-in-newline' and typo.",3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
663,jieruan,78098917+jieruan02@users.noreply.github.com,2021-01-29 16:09:12-08:00,114461cc2e934e6f35368abe12b07b3d525a8182,https://github.com/pytorch/audio/commit/114461cc2e934e6f35368abe12b07b3d525a8182,Expose stft arguments to MelSpectrogram (#1211),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(specgram.center, False)'), ('Equal', '(specgram.pad_mode, )'), ('Equal', '(specgram.onesided, False)'), ('Equal', '(specgram.center, True)'), ('Equal', '(specgram.pad_mode, )'), ('Equal', '(specgram.onesided, False)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
664,Nicolas Hug,nicolashug@fb.com,2021-02-01 11:29:43-05:00,17aa81ea69b8219a232b075aa2ae3af73525864c,https://github.com/pytorch/audio/commit/17aa81ea69b8219a232b075aa2ae3af73525864c,Update SpectralCentroid to accept window_fn and wkwargs (#1216),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
665,moto,855818+mthrok@users.noreply.github.com,2021-02-01 13:32:58-05:00,828df46a95310453dda13599a29fa22a1cc049da,https://github.com/pytorch/audio/commit/828df46a95310453dda13599a29fa22a1cc049da,"Fix segfault by calling ftell instead of tell_off (#1217)

[`sox_format_t.tell_off`](https://fossies.org/dox/sox-14.4.2/structsox__format__t.html#a2016a9fa839f3139e3c2f64381b0c445) should be representing current offset in file, but there are cases it does not. This was causing segmentation fault in some cases. This PR fixes it by replacing it with `ftell` call and add extra check so that if the same thing should happen, it will throw runtime error instead of segmentation fault.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
666,Vincent QB,vincentqb@users.noreply.github.com,2021-02-02 10:17:31-05:00,4608a5b21c990a60e1b876c9edd3947c810d08fd,https://github.com/pytorch/audio/commit/4608a5b21c990a60e1b876c9edd3947c810d08fd,use underscore in python filenames (#1222),2,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
667,Prabhat Roy,prabhatr@usc.edu,2021-02-02 19:08:46+00:00,08f188b2f93c1d69691f469482faa6c9df6747f9,https://github.com/pytorch/audio/commit/08f188b2f93c1d69691f469482faa6c9df6747f9,"Restructure C++ code to allow per file registration of custom ops (#1221)

Co-authored-by: Prabhat Roy <prabhatroy@fb.com>",12,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
668,Prabhat Roy,prabhatr@usc.edu,2021-02-02 20:56:33+00:00,a4c095a382c3a3650a9e03366b0fe5fb4aac7940,https://github.com/pytorch/audio/commit/a4c095a382c3a3650a9e03366b0fe5fb4aac7940,"Check unexpected effect name apply_effects_tensor (#1224)

Co-authored-by: Prabhat Roy <prabhatroy@fb.com>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
669,jieruan,78098917+jieruan02@users.noreply.github.com,2021-02-02 15:33:22-08:00,703614f26fc2de1c7d7f039bc2ac484c7b936e71,https://github.com/pytorch/audio/commit/703614f26fc2de1c7d7f039bc2ac484c7b936e71,Expose normalization method to Mel transforms (#1212),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
670,jieruan,78098917+jieruan02@users.noreply.github.com,2021-02-02 20:08:03-08:00,5de3a56d220e5bdc42e9f37ee397c0c881f1bd03,https://github.com/pytorch/audio/commit/5de3a56d220e5bdc42e9f37ee397c0c881f1bd03,Add explicit functional import in __init__.py (#1228),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
671,moto,855818+mthrok@users.noreply.github.com,2021-02-02 23:43:17-05:00,3651412bbcb0c4faf56bc7be7fe5e5ae2a7a63fd,https://github.com/pytorch/audio/commit/3651412bbcb0c4faf56bc7be7fe5e5ae2a7a63fd,"Print CPU info before running unit test (#1218)

So that when a test fails in flaky manner, we can look into the difference.",1,False,False,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
672,Prabhat Roy,prabhatroy@fb.com,2021-02-03 16:29:37+00:00,8b93bd68667187cfa4cffffe75dcb5fc49438007,https://github.com/pytorch/audio/commit/8b93bd68667187cfa4cffffe75dcb5fc49438007,"Simplified C++ interface for sox_io's get_info_file() (#1232)

Co-authored-by: Prabhat Roy <prabhatroy@fb.com>",3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
673,moto,855818+mthrok@users.noreply.github.com,2021-02-03 11:58:09-05:00,135e966dfd3520db4859854a6f109bfbec0970d6,https://github.com/pytorch/audio/commit/135e966dfd3520db4859854a6f109bfbec0970d6,"Refactor `get_encodinginfo` logic (#1233)

* Distinguish get_encodinginfo for Tensor I/O and save output

* Isolate get_tensor_encodinginfo so as not to use the same helper function",4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
674,moto,855818+mthrok@users.noreply.github.com,2021-02-04 10:50:17-05:00,f53779995aeb7b77f0c687ff9f016ea9f541e6a2,https://github.com/pytorch/audio/commit/f53779995aeb7b77f0c687ff9f016ea9f541e6a2,Fix mixed signed/un-signed comparison in effects_chain (#1236),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
675,Prabhat Roy,prabhatroy@fb.com,2021-02-04 15:52:16+00:00,c539ad7d8941443c4949004140807ff57a6892fc,https://github.com/pytorch/audio/commit/c539ad7d8941443c4949004140807ff57a6892fc,Refactored tests for backend (#1239),17,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
676,Jcaw,toastedjcaw@gmail.com,2021-02-04 16:38:28+00:00,4e99c12dc0ec327e5eb5b91a21f6d6b055bee991,https://github.com/pytorch/audio/commit/4e99c12dc0ec327e5eb5b91a21f6d6b055bee991,"Fix `amplitude_to_DB` clamping behaviour on batches (#1113)

modified amplitude_to_DB to clamp per-item when a batch is provided

Co-authored-by: Vincent QB <vincentqb@users.noreply.github.com>",4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,4,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_batch_consistencies', '(F.amplitude_to_DB, spec, amplitude_mult,'), ('_batch_consistencies', '(F.amplitude_to_DB, spec, amplitude_mult,'), ('Equal', '(batchwise_dbs, itemwise_dbs)'), ('Equal', '(x2, spec)')]",[],[],[],[],[],[],[],[],[],[],"[('Equal', '(x2, torch.abs(x), atol=5e-5, rtol=1e-5)'), ('Equal', '(x2, torch.abs(x), atol=5e-5, rtol=1e-5)'), ('Equal', '(x2, spec, atol=5e-5, rtol=1e-5)')]",[],[],[],[],[],[],[],[],[],"['(difference >= 1e-5).any()', 'not below_limit.any(), (', 'close_to_limit.any(), (']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
677,jieruan,78098917+jieruan02@users.noreply.github.com,2021-02-04 12:16:25-08:00,1e88731022bc13921f4ac50349edaa7f41a2ea2d,https://github.com/pytorch/audio/commit/1e88731022bc13921f4ac50349edaa7f41a2ea2d,Refactor tests for functional (#1237),6,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,17,0,0,1,0,1,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(ts_output, output)')]",[],[],[],[],[],"['()', '()', '()', '()', '()', '()', '()', '()', '()', '()', '()', '()', '()', '()', '()', '()', '()']",[],[],['import unittest'],[],"[('Equal', '(ts_output, output)')]",[],[],[],[],[],"['()', '()', '()', '()', '()', '()', '()', '()', '()', '()', '()', '()', '()', '()', '()', '()', '()']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
678,moto,855818+mthrok@users.noreply.github.com,2021-02-04 18:25:12-05:00,2c8aad97fc8d7647ee8b2df2de9312cce0355ef6,https://github.com/pytorch/audio/commit/2c8aad97fc8d7647ee8b2df2de9312cce0355ef6,"Switch to cmake for build (#1187)

* Switch to cmake for build
* Hide symbols",14,False,False,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
679,moto,855818+mthrok@users.noreply.github.com,2021-02-08 10:44:44-05:00,cd5a1247e93f149936ef5603b4cf32de6690d124,https://github.com/pytorch/audio/commit/cd5a1247e93f149936ef5603b4cf32de6690d124,Add -Wall back (#1246),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
680,Krishna Kalyan,krishnakalyan3@gmail.com,2021-02-08 18:42:29+01:00,0f23e6d3d49daee3ad8491d56aef4c90c8a89848,https://github.com/pytorch/audio/commit/0f23e6d3d49daee3ad8491d56aef4c90c8a89848,Improve Flake Rules  (#1214),22,False,True,True,False,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['import unittest', 'import unittest', 'import unittest', 'import unittest', 'import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
681,moto,855818+mthrok@users.noreply.github.com,2021-02-08 14:04:15-05:00,77de2b9616c47c114124a8e002447ad927799dbd,https://github.com/pytorch/audio/commit/77de2b9616c47c114124a8e002447ad927799dbd,Fix options for CMakeLists (#1249),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
682,Nicolas Hug,nicolashug@fb.com,2021-02-09 04:52:57-05:00,bb9e7588d2b043f66462513f97526cb6ccf9c908,https://github.com/pytorch/audio/commit/bb9e7588d2b043f66462513f97526cb6ccf9c908,"Added CONTRIBUTING.md (#1241)

Co-authored-by: moto <855818+mthrok@users.noreply.github.com>",3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
683,moto,855818+mthrok@users.noreply.github.com,2021-02-09 10:12:47-05:00,5a699111b6fedea8d10168f04ab5eb80b7a7cc5f,https://github.com/pytorch/audio/commit/5a699111b6fedea8d10168f04ab5eb80b7a7cc5f,List only one item par line in __all__ (#1250),9,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
684,Prabhat Roy,prabhatroy@fb.com,2021-02-09 19:05:55+00:00,9e58e75cfd8eae48b36165da1fd9812f3f595197,https://github.com/pytorch/audio/commit/9e58e75cfd8eae48b36165da1fd9812f3f595197,Refactor batch tests for functional (#1254),2,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,18,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(computed, expected, rtol=rtol, atol=atol)'), ('_batch_consistency', '('), ('_batch_consistency', '('), ('_batch_consistencies', '('), ('_batch_consistencies', '('), ('_batch_consistencies', '('), ('_batch_consistencies', '('), ('Equal', '(batchwise_dbs, itemwise_dbs)'), ('_batch_consistencies', '('), ('_batch_consistencies', '('), ('_batch_consistencies', '('), ('_batch_consistencies', '(F.phaser, waveform, sample_rate)'), ('_batch_consistencies', '(F.flanger, waveform, sample_rate)'), ('_batch_consistencies', '('), ('_batch_consistencies', '('), ('_batch_consistencies', '('), ('_batch_consistencies', '('), ('_batch_consistencies', '(')]",[],[],[],[],[],[],[],[],[],[],"[('Equal', '(computed, expected, rtol=rtol, atol=atol)'), ('_batch_consistency', '('), ('_batch_consistency', '('), ('_batch_consistencies', '('), ('_batch_consistencies', '(F.detect_pitch_frequency, waveform, sample_rate)'), ('_batch_consistencies', '(F.amplitude_to_DB, spec, amplitude_mult,'), ('_batch_consistencies', '(F.amplitude_to_DB, spec, amplitude_mult,'), ('Equal', '(batchwise_dbs, itemwise_dbs)'), ('_batch_consistencies', '(F.contrast, waveform, enhancement_amount=80.)'), ('_batch_consistencies', '(F.dcshift, waveform, shift=0.5, limiter_gain=0.05)'), ('_batch_consistencies', '(F.overdrive, waveform, gain=45, colour=30)'), ('_batch_consistencies', '(F.phaser, waveform, sample_rate)'), ('_batch_consistencies', '(F.flanger, waveform, sample_rate)'), ('_batch_consistencies', '(F.sliding_window_cmn, waveform, center=True, norm_vars=True)'), ('_batch_consistencies', '(F.sliding_window_cmn, waveform, center=True, norm_vars=False)'), ('_batch_consistencies', '(F.sliding_window_cmn, waveform, center=False, norm_vars=True)'), ('_batch_consistencies', '(F.sliding_window_cmn, waveform, center=False, norm_vars=False)'), ('_batch_consistencies', '(F.vad, waveform, sample_rate=sample_rate)')]",[],[],[],[],[],[],[],[],[],['(difference >= 1e-5).any()'],[],[],[],[],[],[],[],[],[],[],[],[],['(difference >= 1e-5).any()'],[],[],[],[],[],[],[],[],[],[],[],[]
685,moto,855818+mthrok@users.noreply.github.com,2021-02-09 18:46:53-05:00,7ee1c46b7831cdd5a66a46f23e4f32ffda1d0b52,https://github.com/pytorch/audio/commit/7ee1c46b7831cdd5a66a46f23e4f32ffda1d0b52,Add Kaldi Pitch feature (#1243),24,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,3,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_batch_consistencies', '(F.compute_kaldi_pitch, waveform, sample_rate=sample_rate)'), ('Equal', '(output, expected, rtol=rtol, atol=atol)'), ('_equal', '(result, expected=kaldi_result)')]",[],[],[],[],[],['()'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
686,jieruan,78098917+jieruan02@users.noreply.github.com,2021-02-10 07:43:52-08:00,7aac931eb67dd62eabc1f8fcd0fefabaff7c97a7,https://github.com/pytorch/audio/commit/7aac931eb67dd62eabc1f8fcd0fefabaff7c97a7,Fix transducer test skip logic (#1253),1,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[')(test_item)'],[],[],[],['import unittest'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
687,Vincent QB,vincentqb@users.noreply.github.com,2021-02-10 13:20:09-05:00,316daf7810103e647aa641c3862ff81b611747fc,https://github.com/pytorch/audio/commit/316daf7810103e647aa641c3862ff81b611747fc,Typos in deprecation message (#1256),5,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
688,Chih-Hsuan Yen,yan12125@gmail.com,2021-02-11 04:50:29+08:00,0f89dfaf3a614b2600fb9788ccf22807c7e35f85,https://github.com/pytorch/audio/commit/0f89dfaf3a614b2600fb9788ccf22807c7e35f85,"SpeechCommands: add reference for train/valid/test split and handle .wav.wav files (#1012)

Co-authored-by: Vincent QB <vincentqb@users.noreply.github.com>",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
689,Nicolas Hug,nicolashug@fb.com,2021-02-11 04:24:18-05:00,a7e93c15ce14c3ed39aa3016742660805e7875aa,https://github.com/pytorch/audio/commit/a7e93c15ce14c3ed39aa3016742660805e7875aa,DOC Fix sphinx warnings and turn warnings into errors (#1247),7,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
690,Nicolas Hug,nicolashug@fb.com,2021-02-11 04:24:38-05:00,5efb13e36b434a7d432dcc8486d8e8a2712288a7,https://github.com/pytorch/audio/commit/5efb13e36b434a7d432dcc8486d8e8a2712288a7,DOC Document undocumented parameters and add CI check(#1248),10,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
691,moto,855818+mthrok@users.noreply.github.com,2021-02-12 07:30:24-05:00,4f9b55201dea6d0dd5165a4f684d1160ee9ca94a,https://github.com/pytorch/audio/commit/4f9b55201dea6d0dd5165a4f684d1160ee9ca94a,Add compute_kaldi_pitch to doc (#1260),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
692,moto,855818+mthrok@users.noreply.github.com,2021-02-12 17:14:43-05:00,c3cb2015b13c92c1bf777ea251f42bf824f72209,https://github.com/pytorch/audio/commit/c3cb2015b13c92c1bf777ea251f42bf824f72209,Add encoding and bits_per_sample option to save function (#1226),14,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,10,0,0,0,0,0,1,0,0,1,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_save_consistency', '('), ('_save_consistency', '('), ('_save_consistency', '('), ('_save_consistency', '('), ('_save_consistency', '('), ('_save_consistency', '('), ('_save_consistency', '('), ('_save_consistency', '('), ('_save_consistency', '('), ('_save_consistency', '(')]",[],[],[],[],[],['('],[],[],['import unittest'],[],"[('Equal', '(found, expected)'), ('Equal', '(found, expected)'), ('Equal', '(found, expected)'), ('Equal', '(found, expected, atol=atol, rtol=1.3e-6)'), ('Equal', '(found, expected)'), ('Equal', '(found, expected)'), ('_wav', '(dtype, sample_rate, num_channels, num_frames=None)'), ('_wav', '(dtype, sample_rate, num_channels, num_frames=two_hours)'), ('_wav', '(dtype, sample_rate, num_channels, num_frames=None)'), ('_mp3', '(sample_rate, num_channels, bit_rate, duration=1)'), ('_mp3', '(sample_rate, num_channels, bit_rate, duration=two_hours)'), ('_flac', '(sample_rate, num_channels, compression_level, duration=1)'), ('_flac', '(sample_rate, num_channels, compression_level, duration=two_hours)'), ('_vorbis', '(sample_rate, num_channels, quality_level, duration=20)'), ('_vorbis', '(sample_rate, num_channels, quality_level, two_hours)'), ('_sphere', '(sample_rate, num_channels, duration=1)'), ('_amb', '(dtype, sample_rate, num_channels, duration=1)'), ('_amr_nb', '(duration=1)'), ('Equal', '(found, expected.view(-1, 1))'), ('Equal', '(expected_data, data)'), ('Equal', '(expected_data, data)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sample_rate == sr', 'sample_rate == sr', 'sample_rate == sr']",[],[],[],[],[],[],[],[],[],[],[],[]
693,parmeet,bhatia.parmeet@gmail.com,2021-02-12 18:31:15-05:00,05bff83fdec3e8f70f80bf7a1b89951bf7050114,https://github.com/pytorch/audio/commit/05bff83fdec3e8f70f80bf7a1b89951bf7050114,Add C++ lfilter core loop for CPU  (#1244),3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
694,moto,855818+mthrok@users.noreply.github.com,2021-02-15 03:55:50-05:00,4a3d20356cff0f0a15b826eaa51167df45d5ccf1,https://github.com/pytorch/audio/commit/4a3d20356cff0f0a15b826eaa51167df45d5ccf1,Fix test dependency name in README (#1261),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
695,Aziz,azizbenothman76@gmail.com,2021-02-15 16:18:42+01:00,6854020f423ed03daf1140428b141e228e03d2c5,https://github.com/pytorch/audio/commit/6854020f423ed03daf1140428b141e228e03d2c5,Apply codec-based data augmentation (#1200),3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['augmented.dtype == waveform.dtype', 'augmented.shape[0] == num_channels', 'augmented.shape[1] == num_frames']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
696,moto,855818+mthrok@users.noreply.github.com,2021-02-15 10:23:27-05:00,9222e4373fd128d7568b49cc3289d2f443722921,https://github.com/pytorch/audio/commit/9222e4373fd128d7568b49cc3289d2f443722921,Fix dev setup direction (#1263),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
697,George Harding,george.winton.harding@gmail.com,2021-02-15 15:31:25+00:00,d58ac213db1e361342b9b704b125b83214a7dcbb,https://github.com/pytorch/audio/commit/d58ac213db1e361342b9b704b125b83214a7dcbb,Improve MelSpectrogram librosa compatibility test (#1267),1,False,True,True,False,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,1,0,0,0,0,5,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],['()'],[],[],[],[],"[('_compatibilities_spectral_centroid', '(sample_rate, n_fft, hop_length, sound, sound_librosa)'), ('_compatibilities', '(**kwargs)'), ('_compatibilities', '(**kwargs)'), ('_compatibilities', '(**kwargs)'), ('_compatibilities', '(**kwargs)')]",[],[],[],[],[')'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
698,Prabhat Roy,prabhatroy@fb.com,2021-02-16 01:30:21+00:00,e5c4de87a0b530a4fed51aad33578ca4e642f5cb,https://github.com/pytorch/audio/commit/e5c4de87a0b530a4fed51aad33578ca4e642f5cb,Replace dtype if-elseif-else with switch (#1270),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
699,Matti Picus,matti.picus@gmail.com,2021-02-17 18:35:52+02:00,fa71c5e276940fbede4fd9749b2505218315bced,https://github.com/pytorch/audio/commit/fa71c5e276940fbede4fd9749b2505218315bced,Make the version a link to /versions.html (#1273),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
700,Prabhat Roy,prabhatroy@fb.com,2021-02-18 04:55:34+00:00,490a53e5601bd71dfddbb3789958f5a18a08f475,https://github.com/pytorch/audio/commit/490a53e5601bd71dfddbb3789958f5a18a08f475,Add GSM format support to sox_io's save function (#1275),5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_save_consistency', '(')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
701,Eli Uriegas,1700823+seemethere@users.noreply.github.com,2021-02-18 16:32:45-08:00,a70931f197216bfccbde194b000c6cb1d290a9a7,https://github.com/pytorch/audio/commit/a70931f197216bfccbde194b000c6cb1d290a9a7,"torchaudio: Fix c extension compilation (#1285)

After a9f5e7229 was merged into upstream pytorch the passing of
references within torch c extension functions is no longer allowed. This
just removes the reference and passes by value instead.

Signed-off-by: Eli Uriegas <eliuriegas@fb.com>",8,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
702,SJ,76181208+imaginary-person@users.noreply.github.com,2021-02-19 09:02:13-06:00,3488f3142c734326b54badfba4b166173647d1b2,https://github.com/pytorch/audio/commit/3488f3142c734326b54badfba4b166173647d1b2,Add HTK format support to sox_io's save & info (#1276),6,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_save_consistency', '(, test_mode=test_mode, num_channels=1)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['info.sample_rate == sample_rate', 'info.num_frames == sample_rate * duration', 'info.num_channels == num_channels', 'info.bits_per_sample == 16', 'info.encoding == ']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
703,Eli Uriegas,1700823+seemethere@users.noreply.github.com,2021-02-19 11:30:16-08:00,eb1b3f1f5a764964a92fb2b9086752b6d92e16ea,https://github.com/pytorch/audio/commit/eb1b3f1f5a764964a92fb2b9086752b6d92e16ea,"Add Python 3.9 support (#1242)

Signed-off-by: Eli Uriegas <eliuriegas@fb.com>",10,False,False,True,True,True,True,True,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
704,SJ,76181208+imaginary-person@users.noreply.github.com,2021-02-19 13:52:24-06:00,93950302cbcad5c94386f0e77c58c4ca77f0a0af,https://github.com/pytorch/audio/commit/93950302cbcad5c94386f0e77c58c4ca77f0a0af,"Remove duplicate --bits command line parameter (#1287)

Remove duplicate --bits command line parameter. It's producing a warning with sox.",1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
705,Vincent QB,vincentqb@users.noreply.github.com,2021-02-19 19:00:16-05:00,5c0179576ee8b527d17687eaefd044edd768f193,https://github.com/pytorch/audio/commit/5c0179576ee8b527d17687eaefd044edd768f193,"Revert ""Remove duplicate --bits command line parameter (#1287)"" (#1290)

This reverts commit 93950302cbcad5c94386f0e77c58c4ca77f0a0af.",1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
706,SJ,76181208+imaginary-person@users.noreply.github.com,2021-02-19 18:01:41-06:00,d2861fc20e51e2fd3747805fc63f6b188ab314d8,https://github.com/pytorch/audio/commit/d2861fc20e51e2fd3747805fc63f6b188ab314d8,Check for the number of channels in an htk file being 1 (#1291),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
707,SJ,76181208+imaginary-person@users.noreply.github.com,2021-02-19 20:55:14-06:00,f2b183ee9a8665d066a391ae691a8198298911c9,https://github.com/pytorch/audio/commit/f2b183ee9a8665d066a391ae691a8198298911c9,Add GSM encoding support to info (#1277),4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['info.sample_rate == sample_rate', 'info.num_channels == num_channels', 'info.bits_per_sample == 0', 'info.encoding == ']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
708,Aziz,azizbenothman76@gmail.com,2021-02-21 16:42:38+01:00,bec9047289028b7fb8b915c2d30b222138805f62,https://github.com/pytorch/audio/commit/bec9047289028b7fb8b915c2d30b222138805f62,Redactor librosa compatibility test (#1259),2,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],0,5,0,0,0,0,2,0,0,0,1,0,5,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(ta_out, lr_out, atol=5e-5, rtol=1e-5)'), ('Equal', '('), ('Equal', '(ta_out, lr_out, atol=5e-5, rtol=1e-5)'), ('Equal', '(ta_out, lr_out, atol=5e-5, rtol=1e-5)'), ('Equal', '(complex_stretch, torch.from_numpy(expected_complex_stretch), atol=1e-5, rtol=1e-5)')]",[],[],[],[],"['not LIBROSA_AVAILABLE, )', 'not LIBROSA_AVAILABLE, )']",[],[],[],['import unittest'],[],"[('Equal', '(ta_out, lr_out, atol=5e-5, rtol=1e-5)'), ('Equal', '('), ('Equal', '(ta_out, lr_out, atol=5e-5, rtol=1e-5)'), ('Equal', '(ta_out, lr_out, atol=5e-5, rtol=1e-5)'), ('Equal', '(complex_stretch, torch.from_numpy(expected_complex_stretch), atol=1e-5, rtol=1e-5)')]",[],[],[],[],"['not LIBROSA_AVAILABLE, )', 'not LIBROSA_AVAILABLE, )']",[],[],[],[],"['complex_specgrams.dim() == complex_specgrams_stretch.dim()', 'complex_specgrams_stretch.size() == torch.Size(expected_size)']",[],[],[],[],[],[],[],[],[],[],[],[],"['complex_specgrams.dim() == complex_specgrams_stretch.dim()', 'complex_specgrams_stretch.size() == torch.Size(expected_size)']",[],[],[],[],[],[],[],[],[],[],[],[]
709,Jcaw,toastedjcaw@gmail.com,2021-02-22 18:34:11+00:00,d0ae170ec1e8a6afbbaadc3851e186d9678db24c,https://github.com/pytorch/audio/commit/d0ae170ec1e8a6afbbaadc3851e186d9678db24c,Fix typo in CONTRIBUTING (#1293),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
710,Francisco Massa,fvsmassa@gmail.com,2021-02-23 16:02:16+01:00,e1bea2b7acdb9abfe9501644197b66108047c9a2,https://github.com/pytorch/audio/commit/e1bea2b7acdb9abfe9501644197b66108047c9a2,"Remove reference_cast in make_boxed_from_unboxed_functor (#1300)

Summary:
Pull Request resolved: https://github.com/pytorch/pytorch/pull/51319

We were going out of our way to accommodate `IValue::to<Tensor>` returning a copy of the inner Tensor. `IValue::toTensor` is capable of returning a reference without copying, so if we use it directly, we can allow kernels that want to take `Tensor &` to do so!
As a bonus, we get reduced build times.
ghstack-source-id: 121378961

Reviewed By: bhosmer

Differential Revision: D26138549

fbshipit-source-id: b0f830527da360c542c815bef2f7e1692615b32a

Co-authored-by: Scott Wolchok <swolchok@fb.com>",4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
711,Prabhat Roy,prabhatroy@fb.com,2021-02-23 15:02:58+00:00,b8fd5e9458e2bf2c9ad158df2d03b1db640c0f7b,https://github.com/pytorch/audio/commit/b8fd5e9458e2bf2c9ad158df2d03b1db640c0f7b,Added encoding and bits_per_sample to soundfile's backend save() (#1274),4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,3,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_non_wav', '(fmt, dtype, sample_rate, num_channels,'), ('_non_wav', '(, dtype, sample_rate, num_channels,'), ('Equal', '(expected, found, atol=1e-4, rtol=1e-8)')]",[],[],[],[],[],[],[],[],[],[],"[('_non_wav', '(fmt, dtype, sample_rate, num_channels, channels_first)'), ('_non_wav', '(, dtype, sample_rate, num_channels, channels_first)'), ('Equal', '(expected, found)')]",[],[],[],[],[],[],[],[],[],['args[] == fetch_wav_subtype('],[],[],[],[],[],[],[],[],[],[],[],[],"['args[] == dtype2subtype(dtype)', 'args[] is None']",[],[],[],[],[],[],[],[],[],[],[],[]
712,moto,855818+mthrok@users.noreply.github.com,2021-02-23 13:08:53-05:00,71486acf7938d82072b01de3428a36cba7939d9a,https://github.com/pytorch/audio/commit/71486acf7938d82072b01de3428a36cba7939d9a,"Fix fileobj I/O un-deterministic behavior (#1297)

* Fix fileobj I/O undeterministic behavior

Ever since the file-like object support was added in #1158, the test
was occasionally failing in CI. This PR fixes this.",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
713,Francisco Massa,fvsmassa@gmail.com,2021-02-23 21:12:18+01:00,3a055b559c57c585aa7f6735ad47fb8ddb3b2fd9,https://github.com/pytorch/audio/commit/3a055b559c57c585aa7f6735ad47fb8ddb3b2fd9,Fix unitialized variable (#1306),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
714,Eli Uriegas,1700823+seemethere@users.noreply.github.com,2021-02-23 15:48:01-08:00,e83d557a0d48249b20eba42952a2ed61a3d9644b,https://github.com/pytorch/audio/commit/e83d557a0d48249b20eba42952a2ed61a3d9644b,".circleci: Let numpy get installed as dependency (#1309)

Numpy is a dependency of pytorch so we should let it get resolved as it
install pytorch

Signed-off-by: Eli Uriegas <eliuriegas@fb.com>",2,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
715,Bhargav Kathivarapu,bhargavkathivarapu31@gmail.com,2021-02-24 22:51:50+05:18,23e9ed349f41fc2ec622855f554d4acc533b5bc2,https://github.com/pytorch/audio/commit/23e9ed349f41fc2ec622855f554d4acc533b5bc2,Implement faster CPU overdrive in C++ (#1299),3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
716,Prabhat Roy,prabhatroy@fb.com,2021-02-24 20:42:46+00:00,086467a17259dad2dd23ff5707b43e0dceb713ff,https://github.com/pytorch/audio/commit/086467a17259dad2dd23ff5707b43e0dceb713ff,"Removed check_length from validate_input_file() (#1312)

Some audio formats like `gsm` does not have valid frame numbers when opened. But `libsox` can properly handle these audios, so checking if `length > 0` is not necessary and too strict.",4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
717,Prabhat Roy,prabhatroy@fb.com,2021-02-24 21:22:37+00:00,33dc817c60b957e9c929ed6071d4d21fd00e4845,https://github.com/pytorch/audio/commit/33dc817c60b957e9c929ed6071d4d21fd00e4845,Remove legacy backends (#1311),22,False,True,True,False,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,1,34,2,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],['class Test_LoadSave(unittest.TestCase):'],"[('True', '(os.path.isfile(new_filepath))'), ('True', '(os.path.isfile(new_filepath))'), ('True', '(os.path.isfile(new_filepath))'), ('Raises', '(ValueError):'), ('Raises', '(ValueError):'), ('Raises', '(OSError):'), ('True', '(os.path.isfile(sinewave_filepath))'), ('Equal', '(si.precision, 16)'), ('Equal', '(si32.precision, new_precision)'), ('Equal', '(sr, 44100)'), ('Equal', '(x.size(), (2, length))'), ('True', '(x[:, offset:].allclose(x_offset))'), ('True', '(x.size(), (2, n))'), ('Equal', '(x.size(), (length, 2))'), ('Raises', '(OSError):'), ('Raises', '(OSError):'), ('True', '(x.min() <= -1.0)'), ('True', '(x.max() >= 1.0)'), ('True', '(isinstance(x, torch.LongTensor))'), ('True', '(tensor.allclose(tensor2))'), ('Equal', '(sample_rate, sample_rate2)'), ('True', '(tensor1.allclose(tensor2))'), ('Equal', '(sample_rate1, sample_rate2)'), ('Equal', '(x_sine_part.size(1), num_frames)'), ('Equal', '(l1_error, 0.)'), ('Equal', '(l1_error, 0.)'), ('Equal', '(x_2ch_part.size(1), num_frames)'), ('Equal', '(l1_error, 0.)'), ('Equal', '(x_ns.size(1), x_sine_full.size(1) - offset_ns)'), ('Raises', '(RuntimeError):'), ('Equal', '(si.channels, channels)'), ('Equal', '(si.length, samples)'), ('Equal', '(si.rate, rate)'), ('Equal', '(ei.bits_per_sample, precision)')]","['def setUp(self):', 'def setUp(self):']",[],['def tearDown(self):'],[],['any(be not in BACKENDS for be in [)'],[],[],[],['import unittest'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
718,chin yun yu,lolimaster.cs03@nctu.edu.tw,2021-02-26 11:17:59+08:00,49860425c418a90a211ead2d7fd7bccd78e354c6,https://github.com/pytorch/audio/commit/49860425c418a90a211ead2d7fd7bccd78e354c6,Replace indexing+matmul operation in lfilter with conv1d (#1318),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
719,Vincent QB,vincentqb@users.noreply.github.com,2021-02-26 10:28:50-05:00,457148ea932d9a1c622af73654e8d1200a256179,https://github.com/pytorch/audio/commit/457148ea932d9a1c622af73654e8d1200a256179,Fixes #1314 (#1316),3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
720,Nicolas Hug,nicolashug@fb.com,2021-02-26 10:49:29-05:00,48edb324b0739e23e3ec5edf98599c1e12baa85f,https://github.com/pytorch/audio/commit/48edb324b0739e23e3ec5edf98599c1e12baa85f,tell CircleCI to publish artifacts (#1321),2,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
721,Artyom Astafurov,asta@fb.com,2021-02-26 17:14:07-05:00,765fde0873ee52be9c1db1fdc7fddedb721f4d0c,https://github.com/pytorch/audio/commit/765fde0873ee52be9c1db1fdc7fddedb721f4d0c,Update AudioMetaData docstring with encoding values (#1322),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
722,Jcaw,toastedjcaw@gmail.com,2021-02-28 16:27:19+00:00,3047dc9b500266d8197139fad5ef3a8a4a459985,https://github.com/pytorch/audio/commit/3047dc9b500266d8197139fad5ef3a8a4a459985,"Apply functional batch consistency tests to batches of different items (#1315)

* Test with batches of differing items

Issues that occur when different items in a batch influence one another
will not present when a batch is composed of identical items. When
checking the consistency of batched behavior, in order to catch these
issues items should be different.

Thus, use different items for the `functional` batch consistency tests
wherever possible.

* Generate different white noise in each channel

Don't duplicate a single channel multiple times. Since this is used for
testing, generate different noise in each channel so data leakage
between channels can be detected.

* Parameterize batch size in batch consistency tests

Rather than creating a batch of 3 items in each test and slicing it to
test two different batch sizes at once, parameterize the batch size on
the TestFunctional class itself. This will generate a separate set of
tests for each batch size (better isolating failures) and removes a
leaky abstraction where the test calling `assert_batch_consistencies`
had to know to give it a batch size greater than 1.

* Check inputs too, to catch in-place operations

Check inputs to the batch consistency operations too, to ensure any
in-place operations operate the same on items as batches - not just that
they output the same result.

* Use much shorter sample for phaser test

Using a 5-second signal for the phaser test takes a long time on CPU,
much longer than the other batch consistency tests. Use a shorter signal
instead.

* Load dual-channel wav for VAD test

The stereo wav has two channels, slightly offset, so they'll count as
different items.

* Load wav using common_utils, not torchaudio.load

* Test pitch frequency with different freqs per item

The pitch frequency batch test was using the same frequency for each
item, which may not catch data leakage between items within a batch. Use
different frequencies so these kinds of issues would be triggered, just
like the other batch consistency tests.

* Explain justification for single-item batch",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,18,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(items_input, batch_input, rtol=rtol, atol=atol)'), ('Equal', '(items_result, batch_result, rtol=rtol, atol=atol)'), ('_batch_consistency', '('), ('_batch_consistency', '('), ('_batch_consistency', '('), ('_batch_consistency', '('), ('_batch_consistency', '('), ('_batch_consistency', '('), ('_batch_consistency', '('), ('_batch_consistency', '(F.phaser, batch, sample_rate)'), ('_batch_consistency', '(F.flanger, waveforms, sample_rate)'), ('_batch_consistency', '('), ('_batch_consistency', '('), ('_batch_consistency', '('), ('_batch_consistency', '('), ('_batch_consistency', '(F.vad, batch, sample_rate=sample_rate)'), ('_batch_consistency', '('), ('_batch_consistency', '(')]",[],[],[],[],[],[],[],[],[],[],"[('Equal', '(computed, expected, rtol=rtol, atol=atol)'), ('_batch_consistency', '('), ('_batch_consistency', '('), ('_batch_consistencies', '('), ('_batch_consistencies', '('), ('_batch_consistencies', '('), ('_batch_consistencies', '('), ('_batch_consistencies', '('), ('_batch_consistencies', '('), ('_batch_consistencies', '('), ('_batch_consistencies', '(F.phaser, waveform, sample_rate)'), ('_batch_consistencies', '(F.flanger, waveform, sample_rate)'), ('_batch_consistencies', '('), ('_batch_consistencies', '('), ('_batch_consistencies', '('), ('_batch_consistencies', '('), ('_batch_consistencies', '('), ('_batch_consistencies', '(F.compute_kaldi_pitch, waveform, sample_rate=sample_rate)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
723,moto,855818+mthrok@users.noreply.github.com,2021-03-01 11:02:41-05:00,53af9779fae66cade7870cf71a15e0abe4c7cd07,https://github.com/pytorch/audio/commit/53af9779fae66cade7870cf71a15e0abe4c7cd07,Add subcategories to functional documentation (#1325),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
724,Mike Decker,mrd999@gmail.com,2021-03-01 15:25:05-08:00,2777562a54c493bcc2ce7cdbb550651ec42f2c4d,https://github.com/pytorch/audio/commit/2777562a54c493bcc2ce7cdbb550651ec42f2c4d,Fix default backend for Linux (#1329),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
725,Jeff Yang,ydcjeff@outlook.com,2021-03-02 23:01:32+06:18,a66f4624b7f4161d253ea621006a94752cdfc8ec,https://github.com/pytorch/audio/commit/a66f4624b7f4161d253ea621006a94752cdfc8ec,Doc: allow navigation with left/right arrow keys (#1336),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
726,Vincent QB,vincentqb@users.noreply.github.com,2021-03-02 11:59:45-05:00,2209da277f284be4b6b1d6a3be83acf05f992f0e,https://github.com/pytorch/audio/commit/2209da277f284be4b6b1d6a3be83acf05f992f0e,Remove instructions to build without building sox from README (#1281),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
727,Maja Bojarska,majabojarska98@gmail.com,2021-03-02 22:29:31+01:00,98d0d593bb180050df78dffa744fdcf38a7438e1,https://github.com/pytorch/audio/commit/98d0d593bb180050df78dffa744fdcf38a7438e1,Add AudioMetaData.__str__ override (#1339),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
728,Caroline Chen,carolinechen@fb.com,2021-03-02 14:14:07-08:00,ecfed4d9098499c1acf7fa882debba7cc6c6d7a3,https://github.com/pytorch/audio/commit/ecfed4d9098499c1acf7fa882debba7cc6c6d7a3,Make sox selective (#1338),28,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],"['not is_sox_available(), reason=)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
729,Vincent QB,vincentqb@users.noreply.github.com,2021-03-02 17:41:07-05:00,5521f6c7ba89cd830c4eebb451c48f814faa9814,https://github.com/pytorch/audio/commit/5521f6c7ba89cd830c4eebb451c48f814faa9814,add mel_scale option for slaney/htk (#593),4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
730,Caroline Chen,carolinechen@fb.com,2021-03-03 09:30:55-08:00,3c44837460f99b91c05bd818980ca1f1156d6606,https://github.com/pytorch/audio/commit/3c44837460f99b91c05bd818980ca1f1156d6606,Make kaldi selective in build (#1342),9,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],"['not is_kaldi_available(), reason=)']",[],[],[],[],[],[],[],[],[],[],[')(test_item)'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
731,Prakashkumar Thiagarajan,prakashkumar1988@gmail.com,2021-03-03 17:31:25+00:00,720323c67dcbee798d9055091ad81b0b23512a88,https://github.com/pytorch/audio/commit/720323c67dcbee798d9055091ad81b0b23512a88,Refactor sox compatibility test (#1344),3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,4,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(result, expected, atol=atol, rtol=rtol)'), ('_sox_effect', '(result, path, [])'), ('_sox_effect', '(result, path, [, gain_type])'), ('_sox_effect', '(result, path, [])')]",[],[],[],[],[],[],[],[],[],[],"[('_sox_effect', '(result, path, [])'), ('_sox_effect', '(result, path, [, gain_type])'), ('_sox_effect', '(result, path, [])')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
732,chin yun yu,ya70201@gmail.com,2021-03-04 06:43:51+08:00,fd4ee2405dac3d4c9ad34b5a8152b20c92f711e0,https://github.com/pytorch/audio/commit/fd4ee2405dac3d4c9ad34b5a8152b20c92f711e0,Use c++ backend for lfilter when c++ extension is available (#1319),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
733,moto,855818+mthrok@users.noreply.github.com,2021-03-03 22:24:45-05:00,f458971429883cc9a71d9911c0782e63642f28f6,https://github.com/pytorch/audio/commit/f458971429883cc9a71d9911c0782e63642f28f6,Add libtorchaudio cpp example (#1349),10,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
734,Jcaw,toastedjcaw@gmail.com,2021-03-04 16:02:43+00:00,7de5f98c18bcf358178e8cae090b82ae3f76a338,https://github.com/pytorch/audio/commit/7de5f98c18bcf358178e8cae090b82ae3f76a338,"Parameterize librosa compatibility test (#1350)

Parameterize `test_create_fb` so each set of values are tested
independently. Also explicitly skip on older versions of librosa (< 0.7.2) when
`norm=""slaney""`.",1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],['()'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
735,Vincent QB,vincentqb@users.noreply.github.com,2021-03-04 15:58:07-05:00,63e33b92eb188ad0112dbeb0ea9c3b9044d0b497,https://github.com/pytorch/audio/commit/63e33b92eb188ad0112dbeb0ea9c3b9044d0b497,bump master version number. (#1296),3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
736,hwangjeff,hwangjeff@users.noreply.github.com,2021-03-04 14:42:05-08:00,9a96fb7e906eeed1466134d69d802372a9d8ca64,https://github.com/pytorch/audio/commit/9a96fb7e906eeed1466134d69d802372a9d8ca64,"Refactor transform tests (#1356)

[ghstack-poisoned]

Co-authored-by: Jeff Hwang <jeffhwang@fb.com>",7,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
737,Jcaw,toastedjcaw@gmail.com,2021-03-05 04:00:11+00:00,64551a69186d28db1f499ba373f1b19c6a7ed894,https://github.com/pytorch/audio/commit/64551a69186d28db1f499ba373f1b19c6a7ed894,"Apply misc updates to `functional/batch_consistency_test.py` (#1341)

* Parameterize `test_sliding_window_cmn`

* Extract test naming function

* Pass a spectrogram to `F.sliding_window_cmn`

* Set manual seed for remaining rand calls in suite",1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],"[('_batch_consistency', '('), ('_batch_consistency', '('), ('_batch_consistency', '(')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
738,hwangjeff,hwangjeff@users.noreply.github.com,2021-03-05 10:31:05-08:00,301a6e3d44b82b6b1039f88ab46158c0fd972162,https://github.com/pytorch/audio/commit/301a6e3d44b82b6b1039f88ab46158c0fd972162,"Refactor Kaldi compatibility tests (#1359)

* Refactor Kaldi compatibility tests

Co-authored-by: Jeff Hwang <jeffhwang@fb.com>",7,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(output, expected, rtol=rtol, atol=atol)'), ('_equal', '(result, expected=kaldi_result)')]",[],[],[],[],[],[],[],[],[],[],"[('_equal', '(result, expected=kaldi_result)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
739,Isaac Seessel,iseessel@oberlin.edu,2021-03-05 13:39:16-05:00,7ab08200a810153a55b6c3090a8b525b83040b54,https://github.com/pytorch/audio/commit/7ab08200a810153a55b6c3090a8b525b83040b54,Fix broken links in contribution guide (#1361),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
740,Aobo Yang,yangaobo@gmail.com,2021-03-05 14:20:21-05:00,e868d24c4d6c4689aa6f4a657e5c5d87268c6476,https://github.com/pytorch/audio/commit/e868d24c4d6c4689aa6f4a657e5c5d87268c6476,Add test for validating lfilter shape (#1360),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['shape == waveform.size() == output_waveform.size()'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
741,Caroline Chen,carolinechen@fb.com,2021-03-05 13:01:53-08:00,9395ad6433a56ca9a8d5642d7f5c5386d3cd086e,https://github.com/pytorch/audio/commit/9395ad6433a56ca9a8d5642d7f5c5386d3cd086e,enable C++ extension on Windows (#1345),14,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
742,Isaac Seessel,iseessel@oberlin.edu,2021-03-05 17:19:18-05:00,436470c245a81608940b6acecd9d6c6616a4d6e6,https://github.com/pytorch/audio/commit/436470c245a81608940b6acecd9d6c6616a4d6e6,Remove deprecated load_wav functions (#1362),9,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['torchaudio.load_wav == self.backend_module.load_wav'],[],[],[],[],[],[],[],[],[],[],[],[]
743,Caroline Chen,carolinechen@fb.com,2021-03-05 15:00:23-08:00,7b85f1c3751799eaf734443e773376b9a0873996,https://github.com/pytorch/audio/commit/7b85f1c3751799eaf734443e773376b9a0873996,remove instructions for building sox from source (#1365),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
744,moto,855818+mthrok@users.noreply.github.com,2021-03-08 10:06:49-05:00,f5ac116fd4be9ae52ae442abf697ed64523586a8,https://github.com/pytorch/audio/commit/f5ac116fd4be9ae52ae442abf697ed64523586a8,"Fix C++ extension for Windows (#1371)

* Fix install location and suffix for Windows",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
745,Krishna Kalyan,krishnakalyan3@gmail.com,2021-03-08 17:25:36+01:00,6d5e879c3b4d3b7e37eab172f02f0c2e687f8587,https://github.com/pytorch/audio/commit/6d5e879c3b4d3b7e37eab172f02f0c2e687f8587,BC-Breaking: Remove deprecated `normalized` argument from griffinlim (#1369),5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
746,moto,855818+mthrok@users.noreply.github.com,2021-03-08 13:00:26-05:00,0ea475afaed65d24bb90b05da83073519652870c,https://github.com/pytorch/audio/commit/0ea475afaed65d24bb90b05da83073519652870c,"Replace sox conversion macros with Tensor op (#1370)

`SOX_SIGNED_16BIT_TO_SAMPLE` and `SOX_SIGNED_32BIT_TO_SAMPLE` uses left shift on signed integers, (negative values) which is UB.
This PR replaces them (and other sox macros for `uint8` and `float` as well) with Tensor operations.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
747,Caroline Chen,carolinechen@fb.com,2021-03-08 13:35:00-08:00,2a1aaff317351ac94ccc34c6f374a91a63218fb2,https://github.com/pytorch/audio/commit/2a1aaff317351ac94ccc34c6f374a91a63218fb2,Fix invalid test names generation (#1374),5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
748,Vincent QB,vincentqb@users.noreply.github.com,2021-03-09 12:35:57-05:00,2593e2e8be8dfcb9ea3979658915c232a44b836a,https://github.com/pytorch/audio/commit/2593e2e8be8dfcb9ea3979658915c232a44b836a,[Release 0.8] Update compatibility matrix (#1084),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
749,Jcaw,toastedjcaw@gmail.com,2021-03-09 17:48:08+00:00,ea857940de9e3738166989ad3bf1726741a13f04,https://github.com/pytorch/audio/commit/ea857940de9e3738166989ad3bf1726741a13f04,"[BC-Breaking] Rename `sliding_window_cmn` arg for correctness (#1347)

* Change the name of the specgram named `waveform`

`F.sliding_window_cmn` takes a spectrogram as input (of shape
`(..., freq, time)`). However, this spectrogram is named `waveform`.
This appears to be an error, so rename this (and the output tensor) to
reflect that both are spectrograms.

* Correct tensor description in docstring

The output tensor of `F.sliding_window_cmn` is also a spectrogram.
Update the description to reflect this.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
750,pw2406,hehtihawa@gmail.com,2021-03-10 09:42:58-08:00,0b1d1f06595ec7897270f6b924aa76dcc13ffd7b,https://github.com/pytorch/audio/commit/0b1d1f06595ec7897270f6b924aa76dcc13ffd7b,Add TorchScript test for `F.phase_vocoder` (#1379),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
751,Mohamed Irfan,55240854+mohamedirfansh@users.noreply.github.com,2021-03-11 04:33:07+08:00,16de2b5b791bacfa8fb65b6fec3062d2e71fd725,https://github.com/pytorch/audio/commit/16de2b5b791bacfa8fb65b6fec3062d2e71fd725,Fix docstring of `sliding_window_cmn` (#1383),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
752,Rahul Amaram,amaramrahul@users.noreply.github.com,2021-03-12 04:26:36+00:00,6d81ab8bad9831daae467792a68ecd7f4531b070,https://github.com/pytorch/audio/commit/6d81ab8bad9831daae467792a68ecd7f4531b070,Fix Lint doc config (#1385),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
753,Jason Hurt,jleehurt@gmail.com,2021-03-11 20:46:13-08:00,47d000801573dad1ca6b627396fe4e985b489494,https://github.com/pytorch/audio/commit/47d000801573dad1ca6b627396fe4e985b489494,Reject saving GSM when not compatible (#1384),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Raises', '('), ('_save_consistency', '('), ('Raises', '('), ('_save_consistency', '(')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
754,Nicolas Hug,nicolashug@fb.com,2021-03-12 04:47:05+00:00,f2b754275dfd1bb7f9904f137fff8e29934196b2,https://github.com/pytorch/audio/commit/f2b754275dfd1bb7f9904f137fff8e29934196b2,Update contributing guide (#1372),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
755,discort,odiscort@gmail.com,2021-03-15 17:17:57+02:00,2897f366a9a0a599409844d5a4bf8956c382512d,https://github.com/pytorch/audio/commit/2897f366a9a0a599409844d5a4bf8956c382512d,Replace torch.assert_allclose with assertEqual (#1387),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(window, output)'), ('Equal', '(y, sound)'), ('Equal', '(output, kaldi_output, atol=atol, rtol=rtol)'), ('Equal', '(estimate, ground_truth, atol=atol, rtol=rtol)'), ('Equal', '(multi_sound_sampled[i, :], single_channel_sampled[0], rtol=1e-4, atol=1e-7)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
756,Isaac Seessel,iseessel@oberlin.edu,2021-03-15 12:22:37-04:00,ed9020c1558e6fe1249972539fc69bcfeaff3421,https://github.com/pytorch/audio/commit/ed9020c1558e6fe1249972539fc69bcfeaff3421,Add support for 24-bit signed LPCM wav in sox_io backend (#1389),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(data, data_ref, atol=3e-03, rtol=1.3e-06)'), ('_24bit_wav', '(sample_rate, num_channels, normalize, duration=1)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['sr == sample_rate'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
757,chin yun yu,ya70201@gmail.com,2021-03-16 01:11:11+08:00,2a3d52ffa5ab2304d38d107980cf8f007a807bfd,https://github.com/pytorch/audio/commit/2a3d52ffa5ab2304d38d107980cf8f007a807bfd,Add backprop support to lfilter (#1310),8,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(yhat, y, atol=1e-4, rtol=1e-5)')]",[],[],[],[],[],[],"['@unittest.expectedFailure', '@unittest.expectedFailure']",[],"['import unittest', 'import unittest']",[],[],[],[],[],[],[],[],[],[],[],"['gradcheck(F.lfilter, (x, a, b), eps=1e-10)', 'gradcheck(F.lfilter, (x, a, b), eps=1e-10)', 'gradcheck(F.lfilter, (x, a, b), eps=1e-10)', 'gradcheck(F.lfilter, (x, a, b), eps=1e-10)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
758,moto,855818+mthrok@users.noreply.github.com,2021-03-15 14:35:54-04:00,32cd700acf782104d4cdd0d602f78f5748c575d8,https://github.com/pytorch/audio/commit/32cd700acf782104d4cdd0d602f78f5748c575d8,Fix JSON Lines file extension (#1392),10,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
759,Caroline Chen,carolinechen@fb.com,2021-03-15 15:36:56-07:00,1ebfb3de1abe396b984cbf12ad1a9bda675be05a,https://github.com/pytorch/audio/commit/1ebfb3de1abe396b984cbf12ad1a9bda675be05a,Fix functional_cpu_test test name generation (#1393),1,False,True,True,False,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
760,Caroline Chen,carolinechen@fb.com,2021-03-16 06:45:34-07:00,f06074aa9693c68e1fda927395b153d40490ea42,https://github.com/pytorch/audio/commit/f06074aa9693c68e1fda927395b153d40490ea42,Migrate transducer input checks to C++ (#1391),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
761,Ankit Dobhal,dobhal.ankit@protonmail.com,2021-03-16 22:13:27+05:18,6bad3a66a7a1c7cc05755e9ee5931b7391d2b94c,https://github.com/pytorch/audio/commit/6bad3a66a7a1c7cc05755e9ee5931b7391d2b94c,Lint code style and remove PY2 compatibility (#1386),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
762,Caroline Chen,carolinechen@fb.com,2021-03-17 07:43:00-07:00,80a8739a713945b2207dbb4dc32b1fdf187d6a07,https://github.com/pytorch/audio/commit/80a8739a713945b2207dbb4dc32b1fdf187d6a07,Refactor sox_io load_test (#1394),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,12,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(data, data_ref, atol=atol, rtol=rtol)'), ('Equal', '(data, expected)'), ('_format', '(, sample_rate, num_channels, bit_depth=24, normalize=normalize, duration=1)'), ('_format', '(, sample_rate, num_channels, compression=bit_rate, duration=1, atol=5e-05)'), ('_format', '(, sample_rate, num_channels, compression=bit_rate, duration=two_hours, atol=5e-05)'), ('_format', '(, sample_rate, num_channels, compression=compression_level, bit_depth=16, duration=1)'), ('_format', '('), ('_format', '(, sample_rate, num_channels, compression=quality_level, bit_depth=16, duration=1)'), ('_format', '('), ('_format', '(, sample_rate, num_channels, bit_depth=32, duration=1)'), ('_format', '('), ('_format', '(, sample_rate=8000, num_channels=1, bit_depth=32, duration=1)')]",[],[],[],[],[],[],[],[],[],[],"[('Equal', '(data, expected)'), ('Equal', '(data, data_ref, atol=3e-03, rtol=1.3e-06)'), ('Equal', '(data, data_ref, atol=3e-03, rtol=1.3e-06)'), ('Equal', '(data, data_ref, atol=4e-05, rtol=1.3e-06)'), ('Equal', '(data, data_ref, atol=4e-05, rtol=1.3e-06)'), ('Equal', '(data, data_ref, atol=4e-05, rtol=1.3e-06)'), ('Equal', '(data, data_ref, atol=4e-05, rtol=1.3e-06)'), ('Equal', '(data, data_ref, atol=4e-05, rtol=1.3e-06)'), ('_24bit_wav', '(sample_rate, num_channels, normalize, duration=1)'), ('_mp3', '(sample_rate, num_channels, bit_rate, duration=1)'), ('_mp3', '(sample_rate, num_channels, bit_rate, two_hours)'), ('_flac', '(sample_rate, num_channels, compression_level, duration=1)'), ('_flac', '(sample_rate, num_channels, compression_level, two_hours)'), ('_vorbis', '(sample_rate, num_channels, quality_level, duration=1)'), ('_vorbis', '(sample_rate, num_channels, quality_level, two_hours)'), ('_sphere', '(sample_rate, num_channels, duration=1)'), ('_amb', '(dtype, sample_rate, num_channels, normalize, duration=1)'), ('_amr_nb', '(duration=1)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sr == sample_rate', 'sr == sample_rate', 'sr == sample_rate', 'sr == sample_rate', 'sr == sample_rate', 'sr == sample_rate']",[],[],[],[],[],[],[],[],[],[],[],[]
763,Vincent QB,vincentqb@users.noreply.github.com,2021-03-17 11:56:58-04:00,4100ad893ba595ac38ee1aec33347c1df0787328,https://github.com/pytorch/audio/commit/4100ad893ba595ac38ee1aec33347c1df0787328,fix a few typos/grammar (#1397),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
764,prarabdh9909,prarabdh9909@gmail.com,2021-03-17 13:29:15-07:00,dd76e9d45f616cb10485a1c4c68ff0b491b17dbb,https://github.com/pytorch/audio/commit/dd76e9d45f616cb10485a1c4c68ff0b491b17dbb,Remove unused helper function (#1396),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
765,Caroline Chen,carolinechen@fb.com,2021-03-22 13:08:24-07:00,14dd917ec60fa69ce3f7c6e3f2eaf520e67928b5,https://github.com/pytorch/audio/commit/14dd917ec60fa69ce3f7c6e3f2eaf520e67928b5,"Move resample to functional and add librosa comparison (#1402)

This PR additionally adds batching to kaldi compliance resample interface.",6,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(ta_upsampled, lr_upsampled, atol=1e-2, rtol=1e-5)'), ('Equal', '(ta_downsampled, lr_downsampled, atol=1e-2, rtol=1e-5)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
766,Krishna Kalyan,krishnakalyan3@gmail.com,2021-03-29 17:25:43+02:00,512c2fa46d112fde4b6a35fda20944d4bf33cec2,https://github.com/pytorch/audio/commit/512c2fa46d112fde4b6a35fda20944d4bf33cec2,"Remove skipIfNoSoxBackend (#1390)

Co-authored-by: krishnakalyan3 <skalyan@cloudera.com>",5,False,True,True,False,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[''],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
767,Daniel Di Sarli,danieleds0@gmail.com,2021-03-30 00:19:02+02:00,198f83e2c6f0aa5c1e0261fc5a199dba2568cab3,https://github.com/pytorch/audio/commit/198f83e2c6f0aa5c1e0261fc5a199dba2568cab3,Fix checksum for the YESNO dataset (#1405),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
768,parmeet,parmeetbhatia@fb.com,2021-03-30 17:20:59-04:00,c0bfb03af6e85d89f684497bea6e099e8d18216e,https://github.com/pytorch/audio/commit/c0bfb03af6e85d89f684497bea6e099e8d18216e,Fix .clang-tidy (#1412),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
769,moto,855818+mthrok@users.noreply.github.com,2021-03-30 21:10:31-04:00,e4a0bd2ceb6c80ec90194ce519bbd9589926034b,https://github.com/pytorch/audio/commit/e4a0bd2ceb6c80ec90194ce519bbd9589926034b,Add autograd test for T.Spectrogram/T.MelSpectrogram (#1340),3,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_grad', '(transform, [waveform], nondet_tol=1e-10)'), ('_grad', '(transform, [waveform], nondet_tol=1e-10)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['gradcheck(transform, inputs_)', 'gradgradcheck(transform, inputs_, nondet_tol=nondet_tol)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
770,chin yun yu,ya70201@gmail.com,2021-04-01 02:34:51+08:00,52decd2a4346f783a6229603716a08c2640aebe9,https://github.com/pytorch/audio/commit/52decd2a4346f783a6229603716a08c2640aebe9,add autograd to biquad filters (#1400),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['gradcheck(F.biquad, (x, b[0], b[1], b[2], a[0], a[1], a[2]), eps=1e-10)', 'gradcheck(F.band_biquad, (x, sr, central_freq, Q))', 'gradcheck(F.band_biquad, (x, sr, central_freq, Q, True))', 'gradcheck(F.bass_biquad, (x, sr, gain, central_freq, Q))', 'gradcheck(F.treble_biquad, (x, sr, gain, central_freq, Q))', 'gradcheck(F.allpass_biquad, (x, sr, central_freq, Q))', 'gradcheck(F.lowpass_biquad, (x, sr, cutoff_freq, Q))', 'gradcheck(F.highpass_biquad, (x, sr, cutoff_freq, Q))', 'gradcheck(F.bandpass_biquad, (x, sr, central_freq, Q))', 'gradcheck(F.bandpass_biquad, (x, sr, central_freq, Q, True))', 'gradcheck(F.equalizer_biquad, (x, sr, central_freq, gain, Q))', 'gradcheck(F.bandreject_biquad, (x, sr, central_freq, Q))']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
771,Krishna Kalyan,krishnakalyan3@gmail.com,2021-04-02 15:36:06+02:00,404fa12ab2acaa164fc82534e2d4d2ec467bee19,https://github.com/pytorch/audio/commit/404fa12ab2acaa164fc82534e2d4d2ec467bee19,"Autograd tests for Transforms MFCC (#1415)

Co-authored-by: krishnakalyan3 <skalyan@cloudera.com>",1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_grad', '(transform, [waveform])')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
772,Michael Melesse,micmelesse@gmail.com,2021-04-02 06:45:39-07:00,a6cdd6c734a9237cbf92198b852c95b748f09a6d,https://github.com/pytorch/audio/commit/a6cdd6c734a9237cbf92198b852c95b748f09a6d,[ROCM] Add ROCm support to source build (#1411),8,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],"['os.getenv(,']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
773,moto,855818+mthrok@users.noreply.github.com,2021-04-02 09:48:26-04:00,0433b7aa5e6fa177fd7e382c6fbfd0a4f902332a,https://github.com/pytorch/audio/commit/0433b7aa5e6fa177fd7e382c6fbfd0a4f902332a,"Make `F.phase_vocoder` and `T.TimeStretch` handle complex dtype (#1410)

1. `F.phase_vocoder` accepts Tensor with complex dtype.
    * The implementation path has been updated from #758 so that they share the same code path by internally converting the input Tensor to complex dtype and performing all the operation on top of it.
    * Adopted `torch.polar` for simpler Tensor generation from magnitude and angle.
2. Updated tests
    * librosa compatibility test for complex dtype and pseudo complex dtype
        * Extracted the output shape check test and moved it to functional so that it will be tested on all the combination of `{CPU | CUDA} x {complex64 | complex128}`
    * TorchScript compatibility test for `F.phase_vocoder` and `T.TimeStretch`.
    * batch consistency test for `T.TimeStretch`.",13,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '('), ('Equal', '(ts_output, output)'), ('Equal', '(ts_output, output)')]",[],[],[],[],[],[],[],[],[],[],"[('Equal', '(complex_stretch, torch.from_numpy(expected_complex_stretch), atol=1e-5, rtol=1e-5)')]",[],[],[],[],[],[],[],[],[],"['spec.dim() == spec_stretch.dim()', 'output_shape == expected_shape', 'tensor.is_complex()', 'tensor.is_complex()']",[],[],[],[],[],[],[],[],[],[],[],[],"['complex_specgrams.dim() == complex_specgrams_stretch.dim()', 'complex_specgrams_stretch.size() == torch.Size(expected_size)']",[],[],[],[],[],[],[],[],[],[],[],[]
774,moto,855818+mthrok@users.noreply.github.com,2021-04-02 15:32:39-04:00,6a677ac8bfa2fd97f6d30a1ec0308ded98ba8020,https://github.com/pytorch/audio/commit/6a677ac8bfa2fd97f6d30a1ec0308ded98ba8020,"Add `return_complex` to F.spectrogram and T.Spectrogram (#1366)

* Update spectrogram to use complex
* Update autograd test
* Update TS test
* Update librosa test",5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(out_torch.abs(), torch.from_numpy(out_librosa), atol=1e-5, rtol=1e-5)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
775,Krishna Kalyan,krishnakalyan3@gmail.com,2021-04-05 10:30:14-07:00,90311ed11ff88042b8ea5e849a746aedb10a0f42,https://github.com/pytorch/audio/commit/90311ed11ff88042b8ea5e849a746aedb10a0f42,Add Autograd test for T.Resample (#1416),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_grad', '(transform, [waveform])')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
776,Krishna Kalyan,krishnakalyan3@gmail.com,2021-04-05 13:06:47-07:00,7d034ea79f8f337f6636b7c481fb6e329bcd7988,https://github.com/pytorch/audio/commit/7d034ea79f8f337f6636b7c481fb6e329bcd7988,Add autograd test for T.Fade (#1424),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_grad', '(transform, [waveform], nondet_tol=1e-10)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
777,Caroline Chen,carolinechen@fb.com,2021-04-05 13:12:46-07:00,f0ab42ce68e3a3aabb22661ede5b7658e31aaf78,https://github.com/pytorch/audio/commit/f0ab42ce68e3a3aabb22661ede5b7658e31aaf78,Remove an invalid resample comparison unit test (#1426),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],"[('Equal', '(ta_upsampled, lr_upsampled, atol=1e-2, rtol=1e-5)'), ('Equal', '(ta_downsampled, lr_downsampled, atol=1e-2, rtol=1e-5)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
778,Chin-Yun Yu,ya70201@gmail.com,2021-04-06 04:13:44+08:00,e964f93c383a23092d357cf7ee2925ea6405c22b,https://github.com/pytorch/audio/commit/e964f93c383a23092d357cf7ee2925ea6405c22b,Add autograd test for T.ComputeDeltas (#1422),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_grad', '(transform, [spec])')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
779,Chin-Yun Yu,ya70201@gmail.com,2021-04-06 04:17:17+08:00,8d2eeb114e7f8a6659d132b98adb50d886108fb2,https://github.com/pytorch/audio/commit/8d2eeb114e7f8a6659d132b98adb50d886108fb2,Refactor implementation of F.compute_deltas (#1423),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
780,Krishna Kalyan,krishnakalyan3@gmail.com,2021-04-05 15:05:20-07:00,c6eeebeb7e39c84d5834372d5a5b3416688d8fd9,https://github.com/pytorch/audio/commit/c6eeebeb7e39c84d5834372d5a5b3416688d8fd9,Add autograd test for T.SpectralCentroid (#1425),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_grad', '(transform, [waveform], nondet_tol=1e-10)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
781,Chin-Yun Yu,ya70201@gmail.com,2021-04-06 22:18:02+08:00,b388d48e549322ebdeb9a32ed1d13b350529045a,https://github.com/pytorch/audio/commit/b388d48e549322ebdeb9a32ed1d13b350529045a,Remove unused normalized constant from T.GriffinLim (#1433),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
782,Chin-Yun Yu,ya70201@gmail.com,2021-04-06 22:23:15+08:00,69293315f230db5e873613fc599954a229461270,https://github.com/pytorch/audio/commit/69293315f230db5e873613fc599954a229461270,Add autograd test for T.GriffinLim (#1421),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_grad', '(transform, [spec], nondet_tol=1e-10)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
783,Mustafa Bal,5262061+mstfbl@users.noreply.github.com,2021-04-06 08:34:55-07:00,6d5e0ba6114034481205fe13aa1e051c7585c51c,https://github.com/pytorch/audio/commit/6d5e0ba6114034481205fe13aa1e051c7585c51c,Added select_autoescape for jinja2 env (#1428),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
784,Mustafa Bal,5262061+mstfbl@users.noreply.github.com,2021-04-06 08:35:50-07:00,488f36b4fa1bb8d28cc72ab6d55688d22caab7c8,https://github.com/pytorch/audio/commit/488f36b4fa1bb8d28cc72ab6d55688d22caab7c8,Fixed URLContext Leak (#1429),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
785,Mustafa Bal,5262061+mstfbl@users.noreply.github.com,2021-04-06 08:36:20-07:00,f21d168342ce58ab9be3978a8b40744457c9cea4,https://github.com/pytorch/audio/commit/f21d168342ce58ab9be3978a8b40744457c9cea4,"Added CodeQL and Bandit security checks as GitHub Actions (#1413)

* Added CodeQL and Bandit security checks as GitHub Actions

* Fixed renegerate jinja2 bug

* Removed specific Bandit fixes",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
786,Chin-Yun Yu,ya70201@gmail.com,2021-04-07 00:14:31+08:00,20469cfe01f90c0b7312f4537b4318af3de04ebb,https://github.com/pytorch/audio/commit/20469cfe01f90c0b7312f4537b4318af3de04ebb,"Revert ""Refactor implementation of F.compute_deltas (#1423)"" (#1432)

This reverts commit 8d2eeb114e7f8a6659d132b98adb50d886108fb2.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
787,steveplazafb,81383317+steveplazafb@users.noreply.github.com,2021-04-06 16:44:43-04:00,e9726f080a5af13de000d096e6b5273538b4c3d3,https://github.com/pytorch/audio/commit/e9726f080a5af13de000d096e6b5273538b4c3d3,"Refactors functional test (#1435)

Merges lfilter and spectrogram classes together in the common implementation and modifies the cpu and gpu test definitions accordingly",3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
788,moto,855818+mthrok@users.noreply.github.com,2021-04-06 16:55:02-04:00,52e2943cb7dc73ef35eb618fa00bcf2b165b7ece,https://github.com/pytorch/audio/commit/52e2943cb7dc73ef35eb618fa00bcf2b165b7ece,"Do not print CPU info before running tests (#1434)

This code was added as a part of investigation of inconsistent behavior
of file-like object support. Now the investigation is done and this code
does not provide much insight yet adding a bunch of lines to the log, so
this PR removes it.",1,False,False,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
789,moto,855818+mthrok@users.noreply.github.com,2021-04-06 20:34:03-04:00,9a0e70ea6699e311c8f4e0c7a52d7042ce16b8b9,https://github.com/pytorch/audio/commit/9a0e70ea6699e311c8f4e0c7a52d7042ce16b8b9,Run functional librosa compatibility test on CUDA as well (#1436),7,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],0,5,0,0,0,0,2,2,0,0,1,0,5,0,0,0,0,2,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(result, torch.from_numpy(expected), atol=5e-5, rtol=1e-07)'), ('Equal', '(result, torch.from_numpy(expected), atol=7e-5, rtol=1.3e-6)'), ('Equal', '(result, torch.from_numpy(expected))'), ('Equal', '(result, torch.from_numpy(expected))'), ('Equal', '(')]",[],[],[],[],"['not LIBROSA_AVAILABLE, )', 'not LIBROSA_AVAILABLE, )']","['()', '()']",[],[],['import unittest'],[],"[('Equal', '(ta_out, lr_out, atol=5e-5, rtol=1e-5)'), ('Equal', '('), ('Equal', '(ta_out, lr_out, atol=5e-5, rtol=1e-5)'), ('Equal', '(ta_out, lr_out, atol=5e-5, rtol=1e-5)'), ('Equal', '(')]",[],[],[],[],"['not LIBROSA_AVAILABLE, )', 'not LIBROSA_AVAILABLE, )']",['()'],[],[],['import unittest'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
790,Chin-Yun Yu,ya70201@gmail.com,2021-04-08 04:24:12+08:00,c1ef2edd61a7a5524ed81de17ca185d9e53346df,https://github.com/pytorch/audio/commit/c1ef2edd61a7a5524ed81de17ca185d9e53346df,Refactor `F.lfilter` and `F.*_biquad` autograd tests (#1438),1,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_grad', '(F.lfilter, (x, a, b), enable_all_grad=False)'), ('_grad', '(F.lfilter, (x, a, b), enable_all_grad=False)'), ('_grad', '(F.lfilter, (x, a, b), enable_all_grad=False)'), ('_grad', '(F.lfilter, (x, a, b))'), ('_grad', '(F.biquad, (x, b[0], b[1], b[2], a[0], a[1], a[2]))'), ('_grad', '(F.band_biquad, (x, sr, central_freq, Q, noise))'), ('_grad', '(F.bass_biquad, (x, sr, gain, central_freq, Q))'), ('_grad', '(F.treble_biquad, (x, sr, gain, central_freq, Q))'), ('_grad', '(F.allpass_biquad, (x, sr, central_freq, Q))'), ('_grad', '(F.lowpass_biquad, (x, sr, cutoff_freq, Q))'), ('_grad', '(F.highpass_biquad, (x, sr, cutoff_freq, Q))'), ('_grad', '(F.bandpass_biquad, (x, sr, central_freq, Q, const_skirt_gain))'), ('_grad', '(F.equalizer_biquad, (x, sr, central_freq, gain, Q))'), ('_grad', '(F.bandreject_biquad, (x, sr, central_freq, Q))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['gradcheck(transform, inputs_)']",[],[],[],[],[],[],[],[],[],[],[],[],"['gradcheck(F.lfilter, (x, a, b), eps=1e-10)', 'gradcheck(F.lfilter, (x, a, b), eps=1e-10)', 'gradcheck(F.lfilter, (x, a, b), eps=1e-10)', 'gradcheck(F.lfilter, (x, a, b), eps=1e-10)', 'gradcheck(F.biquad, (x, b[0], b[1], b[2], a[0], a[1], a[2]), eps=1e-10)', 'gradcheck(F.band_biquad, (x, sr, central_freq, Q))', 'gradcheck(F.band_biquad, (x, sr, central_freq, Q, True))', 'gradcheck(F.bass_biquad, (x, sr, gain, central_freq, Q))', 'gradcheck(F.treble_biquad, (x, sr, gain, central_freq, Q))', 'gradcheck(F.allpass_biquad, (x, sr, central_freq, Q))', 'gradcheck(F.lowpass_biquad, (x, sr, cutoff_freq, Q))', 'gradcheck(F.highpass_biquad, (x, sr, cutoff_freq, Q))', 'gradcheck(F.bandpass_biquad, (x, sr, central_freq, Q))', 'gradcheck(F.bandpass_biquad, (x, sr, central_freq, Q, True))', 'gradcheck(F.equalizer_biquad, (x, sr, central_freq, gain, Q))', 'gradcheck(F.bandreject_biquad, (x, sr, central_freq, Q))']",[],[],[],[],[],[],[],[],[],[],[],[]
791,moto,855818+mthrok@users.noreply.github.com,2021-04-07 16:59:05-04:00,6db8522ee1235564a023c07a41bb4532a2a6aa60,https://github.com/pytorch/audio/commit/6db8522ee1235564a023c07a41bb4532a2a6aa60,"Update InverseMelScale comparison test  (#1437)

* Remove an invalid InverseMel comparison unit test

Similar to #1426 `test_InverseMelScale` in `librosa_compatibility_test` is not
ensuring the comaptibility to librosa. Having this test can give a wrong statement
about the librosa numerical compatibility about the function.

* Add test for InverseMelScale

The new test compares the result of inverse mel scale against the reference spectrogram, so no need to use librosa.
This test serves as more like an insurance that the change to the implementation of InverseMelScale only improves the result, not the other way.",4,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],"[('Equal', '(spec_ta, spec_lr, atol=threshold, rtol=1e-5)')]",[],[],[],[],[],[],[],[],[],"['the difference between', '_get_ratio(relative_diff < 1e-1) > 0.2', '_get_ratio(relative_diff < 1e-3) > 5e-3', '_get_ratio(relative_diff < 1e-5) > 1e-5']",[],[],[],[],[],[],[],[],[],[],[],[],"['torch.dist(spec_orig, spec_ta, p=1) < threshold']",[],[],[],[],[],[],[],[],[],[],[],[]
792,moto,855818+mthrok@users.noreply.github.com,2021-04-07 20:46:11-04:00,de786192c9c0cdd5ccdfafe7e952ff3165a69792,https://github.com/pytorch/audio/commit/de786192c9c0cdd5ccdfafe7e952ff3165a69792,Run transform librosa compatibility test on CUDA as well (#1439),4,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],0,7,0,0,0,0,1,0,0,0,1,0,9,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(result, torch.from_numpy(expected), atol=1e-5, rtol=1e-5)'), ('Equal', '(result.abs(), torch.from_numpy(expected), atol=1e-5, rtol=1e-5)'), ('Equal', '(result, torch.from_numpy(expected), atol=5e-4, rtol=1e-5)'), ('Equal', '(result, torch.from_numpy(expected))'), ('Equal', '(result, torch.from_numpy(expected))'), ('Equal', '(result, torch.from_numpy(expected), atol=5e-4, rtol=1e-5)'), ('Equal', '(result, torch.from_numpy(expected), atol=5e-4, rtol=1e-5)')]",[],[],[],[],"['not LIBROSA_AVAILABLE, )']",[],[],[],['import unittest'],[],"[('Equal', '(out_torch, torch.from_numpy(out_librosa), atol=1e-5, rtol=1e-5)'), ('Equal', '(out_torch.abs(), torch.from_numpy(out_librosa), atol=1e-5, rtol=1e-5)'), ('Equal', '('), ('Equal', '(power_to_db_torch, torch.from_numpy(power_to_db_librosa), atol=5e-3, rtol=1e-5)'), ('Equal', '(mag_to_db_torch, torch.from_numpy(mag_to_db_librosa), atol=5e-3, rtol=1e-5)'), ('Equal', '('), ('Equal', '('), ('Equal', '(out_torch.type(out_librosa.dtype), out_librosa, atol=1e-5, rtol=1e-5)'), ('Equal', '(melspec_ta, torch.from_numpy(melspec_lr[None, ...]), atol=1e-8, rtol=1e-3)')]",[],[],[],[],"['not LIBROSA_AVAILABLE, )']",['()'],[],[],['import unittest'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
793,Mustafa Bal,5262061+mstfbl@users.noreply.github.com,2021-04-07 17:47:28-07:00,0fbfca5c2f4d9be3121ad2962e55179ba6208908,https://github.com/pytorch/audio/commit/0fbfca5c2f4d9be3121ad2962e55179ba6208908,Add Windows build instructions to README (#1440),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
794,Chin-Yun Yu,ya70201@gmail.com,2021-04-09 05:02:33+08:00,35d68fddc756b0717bfcba6048fc8e2e95efb465,https://github.com/pytorch/audio/commit/35d68fddc756b0717bfcba6048fc8e2e95efb465,"Shorten lfilter autograd tests input size (#1443)

Use shorter input sequences to avoid time out error on CI",1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
795,moto,855818+mthrok@users.noreply.github.com,2021-04-09 14:59:19-04:00,78c3480e3b86b971cc834f1d3cec162408ba1ba0,https://github.com/pytorch/audio/commit/78c3480e3b86b971cc834f1d3cec162408ba1ba0,Adopt native complex dtype in griffnlim (#1368),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_grad', '(transform, [spec])')]",[],[],[],[],[],[],[],[],[],[],"[('_grad', '(transform, [spec], nondet_tol=1e-10)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
796,Jcaw,toastedjcaw@gmail.com,2021-04-13 15:20:24+01:00,749c0e39a698f7c0684ca2cd18180dbec12cffc6,https://github.com/pytorch/audio/commit/749c0e39a698f7c0684ca2cd18180dbec12cffc6,"Remove VAD from batch consistency tests (#1451)

The VAD function trims the input tensor to the first instance of voice
activity on any channel or item. Trimming batches this way may be
undesirable as the item with earliest activity will dominate. Either
way, the batch behaviour does not match the itemwise behaviour.

The VAD batch consistency tests currently pass out of coincidence, but
they specify incorrect behaviour. This commit removes them.",1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],"[('_batch_consistency', '(F.vad, batch, sample_rate=sample_rate)'), ('_batch_consistency', '(')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
797,moto,855818+mthrok@users.noreply.github.com,2021-04-13 11:32:26-04:00,e911e5ebc43ab7b93be28304aaab31ceb5d6aecc,https://github.com/pytorch/audio/commit/e911e5ebc43ab7b93be28304aaab31ceb5d6aecc,Add deprecation warnings to functions for complex (#1445),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
798,Krishna Kalyan,krishnakalyan3@gmail.com,2021-04-13 10:48:53-07:00,931555c1b4ebddf74bb5d439ea197dc1d1691a05,https://github.com/pytorch/audio/commit/931555c1b4ebddf74bb5d439ea197dc1d1691a05,Add autograd test for T.AmplitudeToDB (#1447),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_grad', '(transform, [waveform])')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
799,moto,855818+mthrok@users.noreply.github.com,2021-04-14 12:37:10-04:00,5c696b50c772d1cdb8ff2bcbad6c2f0632380449,https://github.com/pytorch/audio/commit/5c696b50c772d1cdb8ff2bcbad6c2f0632380449,Save/load TorchScript object in test (#1446),2,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
800,moto,855818+mthrok@users.noreply.github.com,2021-04-15 16:04:21-04:00,ad534c1139d61aa9d9f05cb311fd64e6c4708f45,https://github.com/pytorch/audio/commit/ad534c1139d61aa9d9f05cb311fd64e6c4708f45,Add autograd test to T.TimeStretch (and F.phase_vocoder) (#1420),1,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,2,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_grad', '(transform, [spectrogram])'), ('_grad', '(transform, [spectrogram])')]",[],[],[],[],[],[],['@unittest.expectedFailure'],[],['import unittest'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
801,Prabhat Roy,prabhatroy@fb.com,2021-04-15 23:38:41+01:00,4863030259bc58bd00b4337f2b36f93c31c5d00b,https://github.com/pytorch/audio/commit/4863030259bc58bd00b4337f2b36f93c31c5d00b,"Fixed floor_divide deprecation warnings seen in pytest output (#1455)

* Fixed floor_divide deprecation warnings seen in pytest output

* Fixed warning in test_flanger_triangle_linear",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
802,discort,odiscort@gmail.com,2021-04-16 02:04:32+03:00,e061b268d284a6f43acc44314b83ec6ffe58e91a,https://github.com/pytorch/audio/commit/e061b268d284a6f43acc44314b83ec6ffe58e91a,"Use torchaudio melscale 'slaney' instead of librosa in WaveRNN pipeline preprocessing (#1444)

* Use torchaudio melscale instead of librosa",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
803,Tran N.M. Hoang,35718590+hoangtnm@users.noreply.github.com,2021-04-16 06:09:54+07:00,245da370c528b9596aa69b7f4062feec2f51f01b,https://github.com/pytorch/audio/commit/245da370c528b9596aa69b7f4062feec2f51f01b,fix: dataset-folder-in-archive flag is empty (#1060),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
804,moto,855818+mthrok@users.noreply.github.com,2021-04-16 11:57:41-04:00,a9d091d0e4537cdc3f4bb85ded554aed797c2a50,https://github.com/pytorch/audio/commit/a9d091d0e4537cdc3f4bb85ded554aed797c2a50,Fbsync: test sanitization and lint fix (#1457),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
805,dhthompson,50866666+dhthompson@users.noreply.github.com,2021-04-16 23:38:13+01:00,5cca0008a3f4388d961016e2e06e96206e378d2c,https://github.com/pytorch/audio/commit/5cca0008a3f4388d961016e2e06e96206e378d2c,Add missing transforms to __all__ (#1458),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
806,dhthompson,50866666+dhthompson@users.noreply.github.com,2021-04-19 15:43:39+01:00,48deca81d319fe76b64bff95f9a425aab16a85d8,https://github.com/pytorch/audio/commit/48deca81d319fe76b64bff95f9a425aab16a85d8,Add autograd test for T.Vol (#1460),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_grad', '(transform, [waveform])')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
807,moto,855818+mthrok@users.noreply.github.com,2021-04-19 12:33:47-04:00,7355d9fdb79bb0245ed87af8951d66f417664bc5,https://github.com/pytorch/audio/commit/7355d9fdb79bb0245ed87af8951d66f417664bc5,"Explicitly disable wavpack when building SoX (#1462)

`wavpack` is a format not supported/tested in torchaudio.
Leaving the option blank can cause the issue like #1461 in untested environment.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
808,dhthompson,50866666+dhthompson@users.noreply.github.com,2021-04-19 20:43:27+01:00,b059f08742e70700ce4c92296a1131118f67a588,https://github.com/pytorch/audio/commit/b059f08742e70700ce4c92296a1131118f67a588,"Refactor functional test (#1463)

- Put functional test logic into one place, `functional_impl.py`
- Tidy imports",3,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],0,6,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(computed, expected)'), ('Equal', '(computed, expected)'), ('False', '(s)'), ('Equal', '(x2, spec, atol=5e-5, rtol=1e-5)'), ('Equal', '(x2, spec)'), ('Equal', '(norm_tensor, expected_norm_tensor, atol=1e-5, rtol=1e-5)')]",[],[],[],[],[],[],[],[],[],[],"[('Equal', '(computed, expected)'), ('Equal', '(computed, expected)'), ('False', '(s)'), ('Equal', '(x2, spec, atol=5e-5, rtol=1e-5)'), ('Equal', '(x2, spec)'), ('Equal', '(norm_tensor, expected_norm_tensor, atol=1e-5, rtol=1e-5)')]",[],[],[],[],[],[],[],[],[],"['len(w) == 0', 'len(w) == 0', 'len(w) == 1', 'not below_limit.any(), (', 'close_to_limit.any(), (', 'mask_specgram.size() == specgram.size()', 'num_masked_columns < mask_param', 'mask_specgrams.size() == specgrams.size()', '(num_masked_columns < mask_param).sum() == num_masked_columns.numel()']",[],[],[],[],[],[],[],[],[],[],[],[],"['len(w) == 0', 'len(w) == 0', 'len(w) == 1', 'not below_limit.any(), (', 'close_to_limit.any(), (', 'mask_specgram.size() == specgram.size()', 'num_masked_columns < mask_param', 'mask_specgrams.size() == specgrams.size()', '(num_masked_columns < mask_param).sum() == num_masked_columns.numel()']",[],[],[],[],[],[],[],[],[],[],[],[]
809,Abhishek Anant,81291713+itsabhianant@users.noreply.github.com,2021-04-20 08:29:23+05:18,d707b6cd2c750ec948e8433ba5ffbe8e12c67d7d,https://github.com/pytorch/audio/commit/d707b6cd2c750ec948e8433ba5ffbe8e12c67d7d,"Removed misc_ops, unused internal module (#1465)",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
810,moto,855818+mthrok@users.noreply.github.com,2021-04-20 10:30:51-04:00,f177a8d5e14712756d7a2274b92b352f5cc0b42d,https://github.com/pytorch/audio/commit/f177a8d5e14712756d7a2274b92b352f5cc0b42d,Remove codecov and store coverage on CCI (#778),8,False,False,True,False,True,True,True,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
811,Nicolas Hug,nicolashug@fb.com,2021-04-21 16:42:33+01:00,9d50acf3970d9f0d2cb903c176f7d9523ba51b6a,https://github.com/pytorch/audio/commit/9d50acf3970d9f0d2cb903c176f7d9523ba51b6a,Add Google Analytics support (#1466),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
812,Krishna Kalyan,krishnakalyan3@gmail.com,2021-04-22 14:21:18-07:00,d08c4ed0b250e85e9908ae8556dcfa62dd2ef4ef,https://github.com/pytorch/audio/commit/d08c4ed0b250e85e9908ae8556dcfa62dd2ef4ef,Clarify `sox_effects.apply_effects_tensor` as CPU-only in Doc (#1459),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
813,Matthew Turnshek,matthewturnshek@gmail.com,2021-04-23 09:49:04-04:00,faf55235083522fbddea7473e8a35c9722ebffed,https://github.com/pytorch/audio/commit/faf55235083522fbddea7473e8a35c9722ebffed,Fix typo in README (#1471),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
814,Krishna Kalyan,krishnakalyan3@gmail.com,2021-04-23 06:49:57-07:00,ada50e4ee5ed9d88469e692c5ed2450157aee0eb,https://github.com/pytorch/audio/commit/ada50e4ee5ed9d88469e692c5ed2450157aee0eb,Add autograd test for T.MelScale (#1467),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_grad', '(transform, [spec])')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
815,Vincent QB,vincentqb@users.noreply.github.com,2021-04-23 07:17:44-07:00,acf82d0ccaddeaf34eb2103206bc394efef8b5fa,https://github.com/pytorch/audio/commit/acf82d0ccaddeaf34eb2103206bc394efef8b5fa,Add WER to readme in wav2letter pipeline (#1470),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
816,Nikita Shulga,nshulga@fb.com,2021-04-23 15:46:08-07:00,bdd7b33b0d84bd0682edce1e55a8c52c77b1aaea,https://github.com/pytorch/audio/commit/bdd7b33b0d84bd0682edce1e55a8c52c77b1aaea,"Move windows GPU images to previous tag (#1474)

Should be moved back to stable once
https://github.com/pytorch/pytorch/issues/56654 is closed",2,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
817,Mark Saroufim,marksaroufim@gmail.com,2021-04-26 15:15:06-07:00,b5d802795ffb381947e9fbbc1b1da40aa6c64b5f,https://github.com/pytorch/audio/commit/b5d802795ffb381947e9fbbc1b1da40aa6c64b5f,Run functional tests on GPU as well as CPU (#1475),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['spec.dim() == spec_stretch.dim()', 'output_shape == expected_shape', 'len(w) == 0', 'len(w) == 0', 'len(w) == 1']",[],[],[],[],[],[],[],[],[],[],[],[],"['spec.dim() == spec_stretch.dim()', 'output_shape == expected_shape', 'len(w) == 0', 'len(w) == 0', 'len(w) == 1']",[],[],[],[],[],[],[],[],[],[],[],[]
818,Caroline Chen,carolinechen@fb.com,2021-04-30 13:56:11-07:00,0c263a935f178490bda78c046e220e84b095447d,https://github.com/pytorch/audio/commit/0c263a935f178490bda78c046e220e84b095447d,"Replace existing prototype RNNT Loss (#1479)

Replace the prototype RNNT implementation (using warp-transducer) with one without external library dependencies",34,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,1,0,0,0,1,0,4,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(logits_shape, gradients.shape)')]",[],[],[],[],[')'],[],[],[],['import unittest'],[],"[('Raises', '('), ('Equal', '(costs, ref_costs, atol=atol, rtol=rtol)'), ('Equal', '(logits_shape, gradients.shape)'), ('Equal', '(gradients, ref_gradients, atol=atol, rtol=rtol)')]",[],[],[],[],[')(test_item)'],[],[],[],['import unittest'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
819,Pavithran Ramachandran,pavithranrao.1512@gmail.com,2021-05-03 13:50:50-07:00,b540e5d1b95bfd3a0380a8b4b7c6e6d6bdb07ef1,https://github.com/pytorch/audio/commit/b540e5d1b95bfd3a0380a8b4b7c6e6d6bdb07ef1,Add autograd test for T.SlidingWindowCmn (#1482),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_grad', '(transform, [spec_reshaped])')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
820,Caroline Chen,carolinechen@fb.com,2021-05-03 14:33:01-07:00,7fd5fce4b22a9e36c948b733bbcf1fba1321d1e8,https://github.com/pytorch/audio/commit/7fd5fce4b22a9e36c948b733bbcf1fba1321d1e8,"Ensure axis masking operations are not in-place (#1481)

It was reported in #1478 that spectrogram masking operations were done in-place and modified the original input tensors. This PR fixes this behavior and adds tests to ensure that the input tensor is not changed.",3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(specgram, specgram_copy)'), ('Equal', '(specgrams, specgrams_copy)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
821,moto,855818+mthrok@users.noreply.github.com,2021-05-04 15:06:06-04:00,3ab521fa2b26b6dbfdb87d36739f0e4191a500a1,https://github.com/pytorch/audio/commit/3ab521fa2b26b6dbfdb87d36739f0e4191a500a1,Refactor libtorchaudio example (#1486),7,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
822,moto,855818+mthrok@users.noreply.github.com,2021-05-05 10:49:06-04:00,a8fbbdac1de389cf7799b0abd0684f9b77c2f675,https://github.com/pytorch/audio/commit/a8fbbdac1de389cf7799b0abd0684f9b77c2f675,"Update xcode version to 12.0 (and macOS version 10.15 indirectly) (#1485)

All macOS CI jobs were failing at `brew`.
The issue was the macOS version `10.13`, which is no longer supported by `brew`.
The macOS version is indirectly controlled by `xcode` version as listed [here](https://circleci.com/docs/2.0/testing-ios/#supported-xcode-versions).

Updating the `xcode` to `""12.0""` as in PyTorch core bump macOS version to `10.15` and it resolves the issue.
`Python 3.9` is still failing but it's packaging issue on upstream, which needs to be resolved separately.",2,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
823,moto,855818+mthrok@users.noreply.github.com,2021-05-06 09:59:34-04:00,ddd2425ce20459bb7ec137686f3d87131596af6c,https://github.com/pytorch/audio/commit/ddd2425ce20459bb7ec137686f3d87131596af6c,Add deprecation warnings to magphase and ComplexNorm (#1492),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
824,moto,855818+mthrok@users.noreply.github.com,2021-05-06 10:00:43-04:00,7d45851d97d35a703817e2b037df03d57b748018,https://github.com/pytorch/audio/commit/7d45851d97d35a703817e2b037df03d57b748018,Merge test classes for complex (#1491),10,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,2,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(ts_output, output)'), ('Equal', '(ts_output, output)')]",[],[],[],[],[],[],[],[],[],[],"[('Equal', '(ts_output, output)'), ('Equal', '(ts_output, output)')]",[],[],[],[],[],[],[],[],[],"['tensor.is_complex()', 'tensor.is_complex()']",[],[],[],[],[],[],[],[],[],[],[],[],"['tensor.is_complex()', 'tensor.is_complex()']",[],[],[],[],[],[],[],[],[],[],[],[]
825,Caroline Chen,carolinechen@fb.com,2021-05-06 07:49:30-07:00,5417e4fb9657acfab7fe45b64ca85cf1366c1caf,https://github.com/pytorch/audio/commit/5417e4fb9657acfab7fe45b64ca85cf1366c1caf,Add GPU RNNT Loss (#1483),14,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
826,Chin-Yun Yu,ya70201@gmail.com,2021-05-07 02:15:30+08:00,723e9a52ebde0afd542b1cc8588598ad2c893c87,https://github.com/pytorch/audio/commit/723e9a52ebde0afd542b1cc8588598ad2c893c87,Support higher order derivatives for `F.lfilter` (#1441),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['gradgradcheck(transform, inputs_)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
827,Caroline Chen,carolinechen@fb.com,2021-05-06 14:54:59-07:00,32f661f015c34f7b6bc2131b8d71e13ba296030e,https://github.com/pytorch/audio/commit/32f661f015c34f7b6bc2131b8d71e13ba296030e,Migrate RNNTL input checks to C++ (#1494),3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
828,Caroline Chen,carolinechen@fb.com,2021-05-10 07:39:27-07:00,c2740644ee31d29861d3d9977a43af1e71779054,https://github.com/pytorch/audio/commit/c2740644ee31d29861d3d9977a43af1e71779054,Add rolloff param to resample (#1488),3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
829,Caroline Chen,carolinechen@fb.com,2021-05-11 07:40:23-07:00,4b2de71fcf667aca81d7b413f1d88466a3a77961,https://github.com/pytorch/audio/commit/4b2de71fcf667aca81d7b413f1d88466a3a77961,Add warning for non-integer resampling frequencies (#1490),2,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(w) == 0', 'len(w) == 1']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
830,discort,odiscort@gmail.com,2021-05-12 01:41:58+03:00,1f136671b84071a2fe1d5b762df64f3a76310c31,https://github.com/pytorch/audio/commit/1f136671b84071a2fe1d5b762df64f3a76310c31,"Add vanilla DeepSpeech model (#1399)

Co-authored-by: Vincent Quenneville-Belair <vincentqb@gmail.com>",4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['out.size() == (n_batch, n_time, n_class)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
831,Kirill Ignatev,kirill.ignatev@datarobot.com,2021-05-12 20:23:49+01:00,9d621fd3fdaf27fe6acc648712a5aa2f4171ec74,https://github.com/pytorch/audio/commit/9d621fd3fdaf27fe6acc648712a5aa2f4171ec74,Add autograd tests for TimeMasking/FrequencyMasking (#1498),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_grad', '(deterministic_transform, [spectrogram])'), ('_grad', '(deterministic_transform, [batch])')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['batch.ndim == 4'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
832,Borun Dev Chowdhury,borundev@gmail.com,2021-05-14 19:35:24+01:00,8a86c463113ebfed5a8941ff5503eaa17d4cc2f8,https://github.com/pytorch/audio/commit/8a86c463113ebfed5a8941ff5503eaa17d4cc2f8,Raise error when scripting invalid MelScale (#1505),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Raises', '(ValueError):')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
833,Caroline Chen,carolinechen@fb.com,2021-05-14 11:42:16-07:00,52e7bfd9d9d1db2ba339c5f72e6750c348ab3819,https://github.com/pytorch/audio/commit/52e7bfd9d9d1db2ba339c5f72e6750c348ab3819,Precompute transforms.Resample kernel (#1499),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
834,Krishna Kalyan,krishnakalyan3@gmail.com,2021-05-18 15:40:36+02:00,b8b732afe549e18d2dfc498cd3b8c28269225b46,https://github.com/pytorch/audio/commit/b8b732afe549e18d2dfc498cd3b8c28269225b46,Fix CodeQL failure (#1508),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
835,Caroline Chen,carolinechen@fb.com,2021-05-19 05:16:31-10:00,7078fcd3ee80daf9b2418a6d9d85a67f060bbaff,https://github.com/pytorch/audio/commit/7078fcd3ee80daf9b2418a6d9d85a67f060bbaff,Add kaiser window support to resampling (#1509),5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Raises', '(ValueError):')]",[],[],[],[],[],[],[],[],[],[],"[('Raises', '(ValueError, invalid_resample, waveform)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
836,moto,855818+mthrok@users.noreply.github.com,2021-05-19 12:30:58-04:00,025892464a3a334db84884133d617120afe843a3,https://github.com/pytorch/audio/commit/025892464a3a334db84884133d617120afe843a3,"Make HTTP fetch test more reliable (#1512)

Since the update of Xcode, some of HTTP tests are failing on macOS, due to `reqests.get` fails to establish a connection to local server. This change increase the wait time to 2 seconds before test starts.",1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
837,Brian White,brian@dogg.ie,2021-05-19 18:57:13+01:00,264ab15a9a502eee02e4b173a3bdd23842682291,https://github.com/pytorch/audio/commit/264ab15a9a502eee02e4b173a3bdd23842682291,Add deprecation warning to MelScale for unset weight (#1515),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(caught_warnings) == 1', 'len(caught_warnings) == 0']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
838,Caroline Chen,carolinechen@fb.com,2021-05-19 11:42:53-10:00,079b3f5d2a5c838e5ba2cb67c2142c0698868789,https://github.com/pytorch/audio/commit/079b3f5d2a5c838e5ba2cb67c2142c0698868789,"[BC-Breaking] Avoid moving resampling kernel device and dtype moves (#1514)

Precomputing and caching the resampling kernel in transforms provides speed improvements for resample, but no longer handles the automatic device and dtype recognition and construction based on input waveform. This is BC-breaking if users do not manually move the transforms object to the correct device and dtype, in which case calls to resample will fail if the input waveform is on gpu, or not of float32 dtype. Precomputing the kernel additionally results in very minor precision differences from previous implementation.",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
839,Caroline Chen,carolinechen@fb.com,2021-05-19 12:37:22-10:00,af7eb4d6c5f5620fca854d1487f9f7d4b58c585c,https://github.com/pytorch/audio/commit/af7eb4d6c5f5620fca854d1487f9f7d4b58c585c,Add torchscript support to RNNT Loss (#1507),9,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(ts_output, output)'), ('Equal', '(ts_output, output)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
840,Caroline Chen,carolinechen@fb.com,2021-05-19 14:28:05-10:00,a21b08e3d5b8bb39eddeaaaa2ba54bcdf72bd3eb,https://github.com/pytorch/audio/commit/a21b08e3d5b8bb39eddeaaaa2ba54bcdf72bd3eb,Remove unused RNNTL functions (#1518),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
841,Caroline Chen,carolinechen@fb.com,2021-05-20 08:04:05-10:00,7763ed8744da6bb19a21835c8864daaf86479ba3,https://github.com/pytorch/audio/commit/7763ed8744da6bb19a21835c8864daaf86479ba3,Add F.resample torchscript test (#1516),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
842,Caroline Chen,carolinechen@fb.com,2021-05-20 09:07:10-10:00,22fe802635d28b6ca5fdd15a66ac2cb871ad6881,https://github.com/pytorch/audio/commit/22fe802635d28b6ca5fdd15a66ac2cb871ad6881,Improve resampling documentation (#1519),3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
843,Artyom Astafurov,asta@fb.com,2021-05-20 21:24:19-04:00,08f2bde4ba1a5ee9f86580c763e39274081d260b,https://github.com/pytorch/audio/commit/08f2bde4ba1a5ee9f86580c763e39274081d260b,"Update VAD docstring and check for input shape length (#1513)

* Update VAD docstring and check for input shape length

* Update docstring in forward for transform

* Address review feedback: merge tests, update wording",3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(w) == 1', 'len(w) == 0', 'len(w) == 0']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
844,parmeet,parmeetbhatia@fb.com,2021-05-22 00:00:47-04:00,ae9560dabb462708fadcb9d5387c655e32a5399a,https://github.com/pytorch/audio/commit/ae9560dabb462708fadcb9d5387c655e32a5399a,"fbsync (#1524)

* Remove `class FunctionalComplex` header accidentally re-introduced in #1490",1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
845,jachymuv,17248068+jachymuv@users.noreply.github.com,2021-05-22 05:19:44+01:00,c4a17027be9060e97b7ab056a9fb00679038bf64,https://github.com/pytorch/audio/commit/c4a17027be9060e97b7ab056a9fb00679038bf64,Do not use IO functions in batch consistency test (#1521),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
846,Denis Kokarev,d_kokarev@mail.ru,2021-05-24 18:39:58-04:00,d272eb0f734e79f748bc48f5fb7797efcf4c1f4b,https://github.com/pytorch/audio/commit/d272eb0f734e79f748bc48f5fb7797efcf4c1f4b,Add file path to io error messages (#1523),7,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('RaisesRegex', '(RuntimeError, .format(path)):'), ('RaisesRegex', '(RuntimeError, .format(path)):'), ('RaisesRegex', '(RuntimeError, .format(path)):')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
847,Nikita Shulga,nshulga@fb.com,2021-05-24 20:51:37-07:00,b78bdde0931e46085397a0e445339079ed13b822,https://github.com/pytorch/audio/commit/b78bdde0931e46085397a0e445339079ed13b822,Use CUDA-10.2 for Windows GPU testing (#1526),2,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
848,Nikita Shulga,nshulga@fb.com,2021-05-24 20:51:55-07:00,ffe735bacfa918e6e21a5d751fd07afab3faaa15,https://github.com/pytorch/audio/commit/ffe735bacfa918e6e21a5d751fd07afab3faaa15,"Add CUDA binary builds (#1497)

* Add CUDA binary builds

* Add ""cuda_version"": ""cpu"" to doc build jobs

* Add required cu_versions to pkg_helpers

* Regenerate config.yml",4,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
849,moto,855818+mthrok@users.noreply.github.com,2021-05-25 14:28:04-04:00,838e1e0a5388995f60ce57d49ff97c4a479ba4bf,https://github.com/pytorch/audio/commit/838e1e0a5388995f60ce57d49ff97c4a479ba4bf,"Update config.guess for lame and libmad (#1484)

Replacing the config.guess with a newer version to support newer hardware, such as Nvidia Jetson.

Obtained from: https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD

See: https://www.gnu.org/software/gettext/manual/html_node/config_002eguess.html",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
850,moto,855818+mthrok@users.noreply.github.com,2021-05-27 09:12:41-04:00,e6886a4d86de47c95cf0e2512a86c74f1147aadd,https://github.com/pytorch/audio/commit/e6886a4d86de47c95cf0e2512a86c74f1147aadd,"Add wav2vec2.0 model (#1529)

- TorchScript-able `Wav2Vec2Model` class
- Factory functions for three configurations presented in the paper 
  - `wav2vec2_base`
  - `wav2vec2_large`
  - `wav2vec2_large_lv60k`",11,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,6,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(single_prob, batch_prob, atol=0.005, rtol=0)'), ('Equal', '(torch.zeros_like(output_lengths), output_lengths)'), ('Equal', '(hyp_out, ref_out)'), ('Equal', '(hyp_len, ref_len)'), ('Equal', '(hyp_out, ref_out)'), ('Equal', '(hyp_len, ref_len)')]",[],[],[],[],[''],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['features.ndim == 3', 'features.shape[0] == batch_size', 'lengths.shape == torch.Size([batch_size])', 'str(quantized) != str(model), ', 'str(quantized) != str(model), ']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
851,moto,855818+mthrok@users.noreply.github.com,2021-05-27 11:22:03-04:00,c8239c649ce04d3e4ab0b7bad2a5af1f0818d129,https://github.com/pytorch/audio/commit/c8239c649ce04d3e4ab0b7bad2a5af1f0818d129,Add wav2vec2 HuggingFace importer (#1530),18,False,True,True,True,False,True,True,True,False,False,False,False,False,False,False,[],0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(ref, hyp)'), ('Equal', '(ref, hyp)'), ('Equal', '(ref, hyp)'), ('Equal', '(ref, hyp)'), ('Equal', '(ref, hyp)'), ('Equal', '(ref, hyp)'), ('Equal', '(ref, hyp)'), ('Equal', '(ref, hyp)'), ('Equal', '(ref[i, :l, ...], hyp[i, :l, ...])'), ('Equal', '(ref, hyp)'), ('Equal', '(ref, hyp)'), ('Equal', '(ref, hyp)'), ('Equal', '(ref, hyp)'), ('Equal', '(ref, hyp)'), ('Equal', '(ref, hyp)'), ('Equal', '(ref, hyp)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
852,Michael Melesse,micmelesse@gmail.com,2021-05-27 17:51:58-07:00,3bb3287f49e0a389bcf3860fc595a5bca7b39a10,https://github.com/pytorch/audio/commit/3bb3287f49e0a389bcf3860fc595a5bca7b39a10,"[ROCm] add rocm wheels (#1477)

* add rocm binary

use the term cu_version

update pkg_helpers

add docker wheel option

update config yml

add force_cuda option

* update config.yml

* remove conda builds",3,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
853,moto,855818+mthrok@users.noreply.github.com,2021-05-31 14:48:54-04:00,87be920653295c3ee165e33b69038e79118cc5f8,https://github.com/pytorch/audio/commit/87be920653295c3ee165e33b69038e79118cc5f8,"Deprecate kaldi resample (#1533)

Deprecating `torchaudio.compliance.kaldi.resample_waveform`, which is exactly same as `torchaudio.functional.resample`.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
854,moto,855818+mthrok@users.noreply.github.com,2021-05-31 14:49:47-04:00,9d45c8c2abc9035304ee9fa709b5b88d56d2285c,https://github.com/pytorch/audio/commit/9d45c8c2abc9035304ee9fa709b5b88d56d2285c,Set removal release version for F.resample and T.MelScale (#1535),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
855,moto,855818+mthrok@users.noreply.github.com,2021-06-01 11:32:53-04:00,07d9bc217b1e70aa37cc606c5bb4b68d60c8197d,https://github.com/pytorch/audio/commit/07d9bc217b1e70aa37cc606c5bb4b68d60c8197d,"[BC-Breaking] Remove deprecated arguments from CommonVoice (#1534)

These arguments are deprecated in 0.8 release for legal reasons, and not used anymore. Now we can remove the arguments.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
856,moto,855818+mthrok@users.noreply.github.com,2021-06-01 12:04:09-04:00,f1a0b605044fc51db58c88a1ce8334c948aaefe5,https://github.com/pytorch/audio/commit/f1a0b605044fc51db58c88a1ce8334c948aaefe5,Add wav2vec2 fairseq importer (#1531),15,False,True,True,True,False,True,False,False,False,False,False,False,False,False,False,[],0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(ref, hyp)'), ('Equal', '(ref, hyp)'), ('Equal', '(ref, hyp)'), ('Equal', '(ref_lengths, hyp_lengths)'), ('Equal', '(ref, hyp)'), ('Equal', '(ref[i, :l, ...], hyp[i, :l, ...])'), ('Equal', '(ref, hyp)'), ('Equal', '(ref, hyp)'), ('Equal', '(ref_lengths, hyp_lengths)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
857,Caroline Chen,carolinechen@fb.com,2021-06-01 11:13:23-07:00,fad19fabd036879fc3e6a78d544b94c4440c1666,https://github.com/pytorch/audio/commit/fad19fabd036879fc3e6a78d544b94c4440c1666,Ensure resampling identity is unchanged (#1537),5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,5,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('True', '(upsample_sound.size(-1) == self.test_signal.size(-1) * 2)'), ('True', '(downsample_sound.size(-1) == self.test_signal.size(-1) // 2)'), ('True', '(downsample_sound.size(-1) == self.test_signal.size(-1))'), ('Equal', '(waveform, resampled)'), ('Equal', '(waveform, resampled)')]",[],[],[],[],[],[],[],[],[],[],"[('True', '(upsample_sound.size(-1) == self.test1_signal.size(-1) * 2)'), ('True', '(downsample_sound.size(-1) == self.test1_signal.size(-1) // 2)'), ('True', '(downsample_sound.size(-1) == self.test1_signal.size(-1))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
858,moto,855818+mthrok@users.noreply.github.com,2021-06-01 16:03:45-04:00,5d0b0642af055894c7f3a85a5f9857d6b4caf8a1,https://github.com/pytorch/audio/commit/5d0b0642af055894c7f3a85a5f9857d6b4caf8a1,Add speech recognition C++ example (#1538),14,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
859,moto,855818+mthrok@users.noreply.github.com,2021-06-01 18:04:49-04:00,b592708cab5b3e31430a6b80520eae85e8448215,https://github.com/pytorch/audio/commit/b592708cab5b3e31430a6b80520eae85e8448215,Remove codecov badge from README (#1543),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
860,moto,855818+mthrok@users.noreply.github.com,2021-06-01 22:39:21-04:00,347e1607153775a4c65a7083b9075e39d5e8997d,https://github.com/pytorch/audio/commit/347e1607153775a4c65a7083b9075e39d5e8997d,Update the master version to 0.10 (#1546),3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
861,moto,855818+mthrok@users.noreply.github.com,2021-06-01 22:49:55-04:00,c22d9bb89de2f14735b6d787ffed6f09d927492e,https://github.com/pytorch/audio/commit/c22d9bb89de2f14735b6d787ffed6f09d927492e,"Update README (#1544)

* Update compatibility matrix
* Remove some obsolete information",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
862,Caroline Chen,carolinechen@fb.com,2021-06-02 08:14:32-07:00,a87b33db263049991999209f986364a3445c40db,https://github.com/pytorch/audio/commit/a87b33db263049991999209f986364a3445c40db,Reformat resample docs (#1548),3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
863,moto,855818+mthrok@users.noreply.github.com,2021-06-03 09:40:37-04:00,0166a851b8205ed535b3cc238fb761642c772452,https://github.com/pytorch/audio/commit/0166a851b8205ed535b3cc238fb761642c772452,"Update docs (#1550)

* Use `bibtex` for paper citations.
  * add `override.css` for fixing back reference.
  * wav2vec2
  * wav2letter
  * convtasnet
  * deepspeech
  * rnnt-loss
  * griffinlim
* Fix broken references in `filtering`.
* Fix note in soundfile backends.
* Tweak wav2vec2 example.
* Removes unused `pytorch_theme.css`",21,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
864,moto,855818+mthrok@users.noreply.github.com,2021-06-03 14:08:16-04:00,688234235bcf77d333cd0128a8121b978678060d,https://github.com/pytorch/audio/commit/688234235bcf77d333cd0128a8121b978678060d,Ignore return_complex when returning real-valued tensor in spectrogram. (#1551),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
865,Caroline Chen,carolinechen@fb.com,2021-06-03 19:37:41-07:00,15a7f78c4ecb007f4d1dcf70da2dc8791376d9b9,https://github.com/pytorch/audio/commit/15a7f78c4ecb007f4d1dcf70da2dc8791376d9b9,Migrate resample tests from kaldi to functional (#1520),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,2,0,0,0,0,0,0,0,0,0,0,5,1,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_batch_consistency', '('), ('Equal', '(estimate, ground_truth, atol=atol, rtol=rtol)')]",[],[],[],[],[],[],[],[],[],[],"[('True', '(upsample_sound.size(-1) == self.test_signal.size(-1) * 2)'), ('True', '(downsample_sound.size(-1) == self.test_signal.size(-1) // 2)'), ('True', '(downsample_sound.size(-1) == self.test_signal.size(-1))'), ('Equal', '(estimate, ground_truth, atol=atol, rtol=rtol)'), ('Equal', '(multi_sound_sampled[i, :], single_channel_sampled[0], rtol=1e-4, atol=1e-7)')]",['def setUp(self):'],[],[],[],[],[],[],[],[],"['upsampled.size(-1) == waveform.size(-1) * 2', 'downsampled.size(-1) == waveform.size(-1) // 2', 'resampled.size(-1) == waveform.size(-1)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
866,Vincent QB,vincentqb@users.noreply.github.com,2021-06-04 10:58:58-04:00,d4d09074f4cd0b92f168836638b8ecd81186a4c9,https://github.com/pytorch/audio/commit/d4d09074f4cd0b92f168836638b8ecd81186a4c9,"Add autograd gradcheck test for RNN transducer loss (#1532)

* autograd test from carolineechen/audio#2

* fix numpy backward: be careful to not modify inplace.",4,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_grad', '(loss, inputs, enable_all_grad=False)'), ('_grad', '(rnnt_loss, inputs, enable_all_grad=False)'), ('_grad', '(loss, inputs, enable_all_grad=False)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['gradcheck(loss, inputs, eps=1e-3, atol=1e-3, nondet_tol=0.)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
867,moto,855818+mthrok@users.noreply.github.com,2021-06-04 14:36:15-04:00,f2a4aac0cc19ebfc296073bb309d4346b70862c9,https://github.com/pytorch/audio/commit/f2a4aac0cc19ebfc296073bb309d4346b70862c9,Set removal version of pseudo complex support (#1553),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
868,moto,855818+mthrok@users.noreply.github.com,2021-06-04 17:11:34-04:00,5432a3f5d5a1ac346af740d9b88bd5e14db7bb5a,https://github.com/pytorch/audio/commit/5432a3f5d5a1ac346af740d9b88bd5e14db7bb5a,"[BC-Breaking] Default to native complex type when returning raw spect… (#1549)

* [BC-Breaking] Default to native complex type when returning raw spectrogram

Part of https://github.com/pytorch/audio/issues/1337 .

- This code changes the return type of spectrogram to be native complex dtype,
when (and only when) returning raw (complex-valued) spectrogram.
- Change `return_complex=False` to `return_complex=True` in spectrogram ops.
- `return_complex` is only effective when `power` is `None`. It is ignored for
cases where `power` is not `None`. Because the returned Tensor is power spectrogram,
which is real-valued Tensors.",3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
869,moto,855818+mthrok@users.noreply.github.com,2021-06-04 18:32:21-04:00,30de797c38395b8d5072cdd6be6f979e521cf84b,https://github.com/pytorch/audio/commit/30de797c38395b8d5072cdd6be6f979e521cf84b,"[BC-Breaking] Remove kaldi.resample_waveform (#1555)

`torchaudio.compliance.kaldi.resample_waveform` has been replaced with `torchaudio.funcitonal.resample`.",39,False,True,True,False,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],"[('True', '(sample_rate == sr)'), ('Equal', '(y, sound)'), ('Equal', '(output, kaldi_output, atol=atol, rtol=rtol)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(fn_split) == len(arr), (.format(len(fn_split), len(arr)))', 'f.endswith() and dash_idx != -1', 'key in test_filepaths', 'len(files) == expected_num_files, \\', 'len(kaldi_output_dict) == 1 and ', 'len(args) == expected_num_args, ']",[],[],[],[],[],[],[],[],[],[],[],[]
870,moto,855818+mthrok@users.noreply.github.com,2021-06-04 18:33:00-04:00,afb6626c440e92423549818401afa54f4addfb39,https://github.com/pytorch/audio/commit/afb6626c440e92423549818401afa54f4addfb39,Remove unnecessary override CSS (#1554),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
871,Salil Desai,salilsdesai@gmail.com,2021-06-09 11:49:34-04:00,e9415df4f01fc56b3f898ccf67d5dcabd29355ab,https://github.com/pytorch/audio/commit/e9415df4f01fc56b3f898ccf67d5dcabd29355ab,Update skipIfNoCuda decorator/Force GPU tests run in GPU CIs (#1559),3,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[')(test_item)'],[],[],[],[],[],[],[],[],[],[],"['not torch.cuda.is_available(), reason=)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
872,moto,855818+mthrok@users.noreply.github.com,2021-06-09 14:25:29-04:00,aec0e8c9289920e4971fb0b4bbe5b5942a7103f4,https://github.com/pytorch/audio/commit/aec0e8c9289920e4971fb0b4bbe5b5942a7103f4,"Add dtype argument for kernel caching precision (#1556)

Since 0.9.0-RC1, `T.Resample` precomputes and caches resampling kernel for performance improvement. (10x improvement).

The implementation from 0.8.0 computed the kernel on-the-fly on the same `device`/`dtype` as the input Tensor, 
but in the newer version, the kernel is precomputed at the construction time and is cached with `float32` first.
This causes degradation if one wants to perform resampling on `float64`, because `sinc` values computed on `float32`s are not good enough for resampling in `float64`.

The reason why we decided to use `float32` for initial caching is to keep the UX disruption minimum, and there were no way to make it work for `float64`. This PR adds `dtype` argument, that can be used for overwriting the cache precision.",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['transform.kernel.dtype == dtype if dtype is not None else torch.float32'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
873,Caroline Chen,carolinechen@fb.com,2021-06-10 15:01:27-07:00,6f9c14bec787d952c2aa1b6a13d11509c7a38bed,https://github.com/pytorch/audio/commit/6f9c14bec787d952c2aa1b6a13d11509c7a38bed,Update docs (#1567),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
874,moto,855818+mthrok@users.noreply.github.com,2021-06-14 08:42:12-04:00,c5d0390c8d9a0356d350bfced1c2152ae308e9b9,https://github.com/pytorch/audio/commit/c5d0390c8d9a0356d350bfced1c2152ae308e9b9,"Annotate MelSpectrogram power as float only (#1572)

Mel scale frequency is in general defined/used on power spectrogram and as far as we know, it is not defined for raw (complex value) spectrogram. When `power=None` (when intermediate spectrogram is complex-valued), `MelSpectrogram` fails because of extra dimension (when using pseudo complex) or type mismatch between `torch.float` and torch.cfloat` (when using native complex).

This commit changes type annotation so that power is only float.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
875,Vincent QB,vincentqb@users.noreply.github.com,2021-06-14 17:42:55-04:00,e39ece66987b53d33f1976f37db9905370c892d4,https://github.com/pytorch/audio/commit/e39ece66987b53d33f1976f37db9905370c892d4,add name of paper before reference. (#1575),8,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
876,Matti Picus,matti.picus@gmail.com,2021-06-15 16:09:30+03:00,be903fa76483ef7f09bf9443052574ab0d80d003,https://github.com/pytorch/audio/commit/be903fa76483ef7f09bf9443052574ab0d80d003,Fix doc build on tag (#1577),2,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
877,moto,855818+mthrok@users.noreply.github.com,2021-06-17 15:21:01-04:00,7deea25948383fdaad63893b7f5676e06fd8a5ad,https://github.com/pytorch/audio/commit/7deea25948383fdaad63893b7f5676e06fd8a5ad,Remove NumPy dependency from README (#1582),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
878,moto,855818+mthrok@users.noreply.github.com,2021-06-18 10:53:51-04:00,3f0febc4d445711803ca29e2c38d6ba4d37be1d0,https://github.com/pytorch/audio/commit/3f0febc4d445711803ca29e2c38d6ba4d37be1d0,Fix HF wav2vec2 test (#1585),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
879,moto,855818+mthrok@users.noreply.github.com,2021-06-18 13:50:09-04:00,533c2d47f7c03370a26b9744f9ec2093857fc43a,https://github.com/pytorch/audio/commit/533c2d47f7c03370a26b9744f9ec2093857fc43a,Remove unused stuff (#1588),4,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
880,Salil Navgire,spn245@nyu.edu,2021-06-21 16:39:22-04:00,380800ce09ef9b31475d298eb3e60f096056caca,https://github.com/pytorch/audio/commit/380800ce09ef9b31475d298eb3e60f096056caca,Remove residuals for removed modules (#1599),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
881,moto,855818+mthrok@users.noreply.github.com,2021-06-22 12:59:54-04:00,6d9c04d8c6fe723a7d6c90e1cba4cb068fa14821,https://github.com/pytorch/audio/commit/6d9c04d8c6fe723a7d6c90e1cba4cb068fa14821,"Temporarily pin nightly version on Linux/macOS CPU unittest (#1598)

There are some issues on CMake-based integration after 2021-06-19.

```
  Imported target ""torch"" includes non-existent path
    ""/opt/conda/conda-bld/pytorch_1624259172741/work/torch/lib""
  in its INTERFACE_INCLUDE_DIRECTORIES.  Possible reasons include:
  * The path was deleted, renamed, or moved to another location.
  * An install or uninstall procedure did not complete successfully.
  * The installation package was faulty and references files it does not provide.
```

This is being worked on PR like https://github.com/pytorch/pytorch/pull/60403.
The nightly builds are still causing the error, so as a workaround, 
we pin the nightly build version for Linux/macOS unittest.
The issue still happens on Windows unittest and binary builds.",1,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
882,dgenzel2,63893845+dgenzel2@users.noreply.github.com,2021-06-22 12:23:37-07:00,9e36281637ac99b7d3ab2b8d555ad98b7ceee9b2,https://github.com/pytorch/audio/commit/9e36281637ac99b7d3ab2b8d555ad98b7ceee9b2,"Replace deprecated AutoNonVariableTypeMode (#1583)

Following https://github.com/pytorch/pytorch/blob/master/docs/cpp/source/notes/inference_mode.rst#migration-guide-from-autononvariabletypemode 

Resolves #1522",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
883,moto,855818+mthrok@users.noreply.github.com,2021-06-22 21:32:42-04:00,f25ca476070757be3bb1268b1b6c3c8f1193a08b,https://github.com/pytorch/audio/commit/f25ca476070757be3bb1268b1b6c3c8f1193a08b,Update unit test CUDA to 10.2 (#1605),2,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
884,moto,855818+mthrok@users.noreply.github.com,2021-06-23 08:34:09-04:00,be0a61e623a2f8602d0e94330c5b638f044db1fd,https://github.com/pytorch/audio/commit/be0a61e623a2f8602d0e94330c5b638f044db1fd,[HOT FIX] Temporarily pin nightly version on Linux GPU unit test (#1606),1,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
885,yangarbiter,yangarbiter@users.noreply.github.com,2021-06-23 12:30:21-07:00,89807cf7cdc9b40a398f2e74f15cb5a79084df60,https://github.com/pytorch/audio/commit/89807cf7cdc9b40a398f2e74f15cb5a79084df60,Update docs (#1584),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
886,Caroline Chen,carolinechen@fb.com,2021-06-24 09:40:16-07:00,6a8ecd98c6d86f7d4d3c289789d200b945e94f3e,https://github.com/pytorch/audio/commit/6a8ecd98c6d86f7d4d3c289789d200b945e94f3e,Add return type in doc for RNNT loss (#1591),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
887,Caroline Chen,carolinechen@fb.com,2021-06-24 14:32:37-07:00,2376e9c99881c87ef04105fb626a362e2f8d49a0,https://github.com/pytorch/audio/commit/2376e9c99881c87ef04105fb626a362e2f8d49a0,Rename RNNT loss C++ parameters (#1602),12,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
888,Caroline Chen,carolinechen@fb.com,2021-06-24 15:40:56-07:00,bac32ec1f777e4ed65a363e1c93ccd7f4beb990b,https://github.com/pytorch/audio/commit/bac32ec1f777e4ed65a363e1c93ccd7f4beb990b,Add reduction parameter for RNNT loss (#1590),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
889,yangarbiter,yangarbiter@users.noreply.github.com,2021-06-25 14:46:08-07:00,6bfd83b49d30436dadaef7579172b287e5d16c98,https://github.com/pytorch/audio/commit/6bfd83b49d30436dadaef7579172b287e5d16c98,Add edit_distance,5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['F.edit_distance(seq1, seq2) == distance', 'F.edit_distance(seq2, seq1) == distance']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
890,Nikita Shulga,nshulga@fb.com,2021-06-28 05:41:28-07:00,9b5a270438e8c91c49cffe45459ae3c63aea498f,https://github.com/pytorch/audio/commit/9b5a270438e8c91c49cffe45459ae3c63aea498f,"Update config.[sub|guess] for lame and libmad (#1613)

Needed to allow building on M1

Downloaded from https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD and https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD",3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
891,moto,855818+mthrok@users.noreply.github.com,2021-06-28 10:36:08-04:00,4b61ae3f56eb63a1c777254ecba329d3cd9650b4,https://github.com/pytorch/audio/commit/4b61ae3f56eb63a1c777254ecba329d3cd9650b4,Revert CI hot fix (#1614),1,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
892,Caroline Chen,carolinechen@fb.com,2021-06-28 09:10:53-07:00,76314a4b67f813191fe9f13a2afcce053a84839f,https://github.com/pytorch/audio/commit/76314a4b67f813191fe9f13a2afcce053a84839f,Expose USE_CUDA in build (#1609),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
893,Caroline Chen,carolinechen@fb.com,2021-06-28 11:10:56-07:00,a96238547dcde03ec2ed5986de2ac1c94887ce08,https://github.com/pytorch/audio/commit/a96238547dcde03ec2ed5986de2ac1c94887ce08,Rename transducer to RNNT (#1603),15,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
894,Eli Uriegas,1700823+seemethere@users.noreply.github.com,2021-06-28 11:29:56-07:00,284bd1014ad29fac9b3a6336a086681af6380923,https://github.com/pytorch/audio/commit/284bd1014ad29fac9b3a6336a086681af6380923,"ci: Remove mentions of conda-forge for Python 3.9 (#1597)

No longer needed for Python 3.9

Signed-off-by: Eli Uriegas <eliuriegas@fb.com>",5,False,False,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
895,Caroline Chen,carolinechen@fb.com,2021-07-07 15:23:25-04:00,7332dfab048e65baa0bf43b6c2b467fa48be97f3,https://github.com/pytorch/audio/commit/7332dfab048e65baa0bf43b6c2b467fa48be97f3,Fix CircleCI unittest environment (#1622),3,False,False,False,False,False,True,True,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
896,Caroline Chen,carolinechen@fb.com,2021-07-07 17:13:04-04:00,7f591c62588110155f723ce36d0c36e009383caa,https://github.com/pytorch/audio/commit/7f591c62588110155f723ce36d0c36e009383caa,Remove torchscript bc test references (#1623),7,False,False,False,False,False,False,False,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
897,Caroline Chen,carolinechen@fb.com,2021-07-08 11:57:07-04:00,d6ae55c6bcd620afda886bffac7d97256a2d87ae,https://github.com/pytorch/audio/commit/d6ae55c6bcd620afda886bffac7d97256a2d87ae,Remove gradient variable from RNNTL Python code (#1616),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
898,yangarbiter,yangarbiter@users.noreply.github.com,2021-07-12 11:03:58-07:00,886c59b1384c8e380621ec279ceedc925adea905,https://github.com/pytorch/audio/commit/886c59b1384c8e380621ec279ceedc925adea905,"[BC-Breaking] Default to PCM_16 for flac on soundfile backend (#1604)

* [BC-Breaking] Default to PCM_16 for flac on soundfile backend

Resolving https://github.com/pytorch/audio/issues/1592

The test backend/soundfile/save_test.py::TestFileObject::test_fileobj_flac
is failing due to the fact that when soundfile.write received
subtype=None (for flac files), it would fall back to 'PCM_16'.
But in the same time, torchaudio will use 'PCM_24', which would
result in distorted signal.

This commit fixed this issue by changing the default bit-per-sample
of for flac files from 24-bit to 16-bit.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
899,yangarbiter,yangarbiter@users.noreply.github.com,2021-07-12 14:13:27-07:00,0e51320809bb806f48ee20dc5710814c84b46833,https://github.com/pytorch/audio/commit/0e51320809bb806f48ee20dc5710814c84b46833,"Remove skipIfRocm from test_fileobj_flac in soundfile.save_test (#1626)

The test was broken from the beginning and for a reason unrelated to
ROCm, but was disabled for ROCm in https://github.com/pytorch/audio/pull/1411.
https://github.com/pytorch/audio/pull/1604 fixed the test so that we are re-enabling it.",1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
900,Joel Frank,joel.frank@rub.de,2021-07-14 03:34:45+02:00,56ab0368f295defbbb04de61f2677c7e86052630,https://github.com/pytorch/audio/commit/56ab0368f295defbbb04de61f2677c7e86052630,MFCC test refactor (#1618),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,5,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(torch_mfcc.dim(), 3)'), ('Equal', '(torch_mfcc.shape[1], n_mfcc)'), ('Equal', '(torch_mfcc.shape[2], 81)'), ('Equal', '(torch_mfcc.shape[2], 161)'), ('Equal', '(torch_mfcc_norm_none, norm_check)')]",[],[],[],[],[],[],[],[],[],[],"[('True', '(torch_mfcc.dim() == 3)'), ('True', '(torch_mfcc.shape[1] == n_mfcc)'), ('True', '(torch_mfcc.shape[2] == 321)'), ('True', '(torch_mfcc2.shape[2] == 641)'), ('True', '(torch_mfcc_norm_none.allclose(norm_check))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
901,Caroline Chen,carolinechen@fb.com,2021-07-15 14:12:49-04:00,0ea6d10d3cd5cd66b0831e218ac18f6b7d8cab3c,https://github.com/pytorch/audio/commit/0ea6d10d3cd5cd66b0831e218ac18f6b7d8cab3c,Refactor RNNT Loss Unit Tests (#1630),3,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(costs, ref_costs, atol=atol, rtol=rtol)'), ('Equal', '(gradients, ref_gradients, atol=atol, rtol=rtol)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
902,nateanl,nizhaoheng@gmail.com,2021-07-16 19:46:01+01:00,f5dbb0021b7c6b4681c55e9ebe9b601faa1fd4da,https://github.com/pytorch/audio/commit/f5dbb0021b7c6b4681c55e9ebe9b601faa1fd4da,Add PitchShift to functional and transform (#1629),8,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(computed, expected)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['waveform.size() == waveform_shift.size()'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
903,hwangjeff,hwangjeff@users.noreply.github.com,2021-07-16 16:15:02-04:00,83a312cee09ce94468eb7a6f595b18d456074c65,https://github.com/pytorch/audio/commit/83a312cee09ce94468eb7a6f595b18d456074c65,"Remove torchaudio._internal.fft module (#1631)

`torchaudio._internal.fft` was originally added to account for the introduction of module `torch.fft`, when `torch.fft` could refer to either a module or function. Now that `torch.fft` refers unambiguously to a module, we remove `torchaudio._internal.fft` and replace references to it with `torch.fft`.",3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
904,yangarbiter,yangarbiter@users.noreply.github.com,2021-07-20 14:07:16-07:00,394d617e5af4217f5642d37e4d58e4f5565d109e,https://github.com/pytorch/audio/commit/394d617e5af4217f5642d37e4d58e4f5565d109e,"Add Tacotron2 model (#1621)

Porting Tacotron2 from https://github.com/NVIDIA/DeepLearningExamples/blob/master/PyTorch/SpeechSynthesis/Tacotron2/tacotron2/model.py",6,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(ts_output, output)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['out.size() == (n_batch, n_seq, encoder_embedding_dim)', 'mel_outputs.size() == (n_batch, n_mels, n_time_steps)', 'gate_outputs.size() == (n_batch, n_time_steps)', 'alignments.size() == (n_batch, n_time_steps, n_seq)', 'mel_out.size() == (n_batch, n_mels, max_mel_specgram_length)', 'mel_out_postnet.size() == (n_batch, n_mels, max_mel_specgram_length)', 'gate_outputs.size() == (n_batch, max_mel_specgram_length)', 'alignments.size() == (n_batch, max_mel_specgram_length, max_text_length)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
905,yangarbiter,yangarbiter@users.noreply.github.com,2021-07-20 14:23:27-07:00,8ec6b873b24257a8d6c67df9213566fbbc738ebc,https://github.com/pytorch/audio/commit/8ec6b873b24257a8d6c67df9213566fbbc738ebc,Add pretrained weights for wavernn (#1612),3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
906,hwangjeff,hwangjeff@users.noreply.github.com,2021-07-20 19:04:10-04:00,e7b43dde906d86e2fb7205396e7d42ad1f3e4edd,https://github.com/pytorch/audio/commit/e7b43dde906d86e2fb7205396e7d42ad1f3e4edd,Make buffer size for function info configurable (#1634),6,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('RaisesRegex', '(RuntimeError, ):')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['sinfo.sample_rate == sample_rate', 'sinfo.num_channels == num_channels', 'sinfo.num_frames == num_frames', 'sinfo.bits_per_sample == bits_per_sample', 'sinfo.encoding == get_encoding(ext, dtype)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
907,Chin-Yun Yu,ya70201@gmail.com,2021-07-22 03:19:50+08:00,aa0dd03b07b9f20b4026e9652e9cdd543278ed8a,https://github.com/pytorch/audio/commit/aa0dd03b07b9f20b4026e9652e9cdd543278ed8a,Add filterbanks support to lfilter (#1587),4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_grad', '(F.lfilter, (x, a, b))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['input_shape == waveform.size()', 'target_shape == output_waveform.size()']",[],[],[],[],[],[],[],[],[],[],[],[],['shape == waveform.size() == output_waveform.size()'],[],[],[],[],[],[],[],[],[],[],[],[]
908,evanjscallan,83608345+evanjscallan@users.noreply.github.com,2021-07-22 10:32:20-05:00,8d374c4d935ce6cd9454235e05065b628e6ef0ef,https://github.com/pytorch/audio/commit/8d374c4d935ce6cd9454235e05065b628e6ef0ef,Fix typos and sentence structure in README.md (#1633),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
909,hwangjeff,hwangjeff@users.noreply.github.com,2021-07-22 17:53:22-04:00,32b9cf8084ff1325ffb66e665cee3212c63382f3,https://github.com/pytorch/audio/commit/32b9cf8084ff1325ffb66e665cee3212c63382f3,"Remove lazy behavior from MelScale (#1636)

Rebases #1571; addresses #1569:

""In 0.9.0 we are deprecating the lazy behavior of MelScale because it can make an invalid 
TorchScript object and it does not align with the design of torchaudio. Now in master 
branch, we can remove the implementation.""

Co-authored-by: Pankaj Patil <pankaj.patil2099@hotmail.com>
Co-authored-by: moto <855818+mthrok@users.noreply.github.com>
Co-authored-by: hwangjeff <jeffhwang@fb.com>",5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,1,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(fb_copy.size(), (201, 128))')]",[],[],[],[],[],[],[],[],[],[],"[('Raises', '(ValueError):'), ('Equal', '(fb_copy.size(), (1000, 128))')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['len(caught_warnings) == 1', 'len(caught_warnings) == 0']",[],[],[],[],[],[],[],[],[],[],[],[]
910,moto,855818+mthrok@users.noreply.github.com,2021-07-26 10:53:16-04:00,c49db7393a096ff18725603f5132707c7a3bef83,https://github.com/pytorch/audio/commit/c49db7393a096ff18725603f5132707c7a3bef83,[Fbsync] Reduce sample rate to avoid test time out (#1640),1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
911,yangarbiter,yangarbiter@users.noreply.github.com,2021-07-26 11:26:42-07:00,37dbf29f099a520fc46feafe51b68edcc873568e,https://github.com/pytorch/audio/commit/37dbf29f099a520fc46feafe51b68edcc873568e,Add text preprocessing utilities for TTS pipeline (#1639),4,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,['class TestTextPreprocessor(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],['import unittest'],[],[],[],[],[],[],[],[],[],[],[],['(text_to_sequence(sent) == seq)'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
912,yangarbiter,yangarbiter@users.noreply.github.com,2021-07-26 15:23:57-07:00,1b52e720743ef58670140441ea17f93b5a096523,https://github.com/pytorch/audio/commit/1b52e720743ef58670140441ea17f93b5a096523,Add Tacotron2 loss function (#1625),6,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(mel_loss.size(), torch.Size([]))'), ('Equal', '(mel_postnet_loss.size(), torch.Size([]))'), ('Equal', '(gate_loss.size(), torch.Size([]))'), ('Equal', '(ts_output, output)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
913,moto,855818+mthrok@users.noreply.github.com,2021-07-27 10:40:16-04:00,d49e6e454eca30912b06f0af7e2d5357afe430ec,https://github.com/pytorch/audio/commit/d49e6e454eca30912b06f0af7e2d5357afe430ec,Replace simple_ctc with Python greedy decoder (#1558),7,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
914,Zack Kneupper,zachary.kneupper@gmail.com,2021-07-27 10:41:38-04:00,d1d6dbc64a1dd7506ce6b2ff2f9969ae13a6b52d,https://github.com/pytorch/audio/commit/d1d6dbc64a1dd7506ce6b2ff2f9969ae13a6b52d,Simplify axis value checks (#1501),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
915,Arijit Roy,roy.arijit2001@gmail.com,2021-07-28 20:47:18+05:18,658e3a88b9061562bbb4ca2450593563c24bb916,https://github.com/pytorch/audio/commit/658e3a88b9061562bbb4ca2450593563c24bb916,Add example code for Resample (#1644),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
916,nateanl,nizhaoheng@gmail.com,2021-07-28 16:34:14+01:00,df7761509a13acc2222bb3a0ec32c15b7d70486a,https://github.com/pytorch/audio/commit/df7761509a13acc2222bb3a0ec32c15b7d70486a,Fix examples in transforms (#1646),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
917,yangarbiter,yangarbiter@users.noreply.github.com,2021-07-28 10:39:46-07:00,ec3ab9900d26372061d1c6117854f9de69bec6c0,https://github.com/pytorch/audio/commit/ec3ab9900d26372061d1c6117854f9de69bec6c0,Fix Tacotron2 Postnet forward (#1647),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
918,yangarbiter,yangarbiter@users.noreply.github.com,2021-07-28 14:35:30-07:00,e14a2e0ce72034068b69657e0936df3c80673853,https://github.com/pytorch/audio/commit/e14a2e0ce72034068b69657e0936df3c80673853,Refactor text preprocessing tests in Tacotron2 example (#1641),6,False,True,True,True,True,True,True,True,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,7,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],['class TestTextPreprocessor(unittest.TestCase):'],[],[],[],[],[],[],[],[],[],['import unittest'],"['(text_to_sequence(sent) == seq)', '(_remove_commas(sent) == truth)', '(_expand_pounds(sent) == truth)', '(_expand_dollars(sent) == truth)', '(_expand_decimal_point(sent) == truth)', '(_expand_ordinal(sent) == truth)', '(_expand_number(sent) == truth)']",[],[],[],[],[],[],[],[],[],[],[],[],['(text_to_sequence(sent) == seq)'],[],[],[],[],[],[],[],[],[],[],[],[]
919,yangarbiter,yangarbiter@users.noreply.github.com,2021-07-28 14:36:04-07:00,108a32d92cd77733841d6c61ab91f8e3ce995f35,https://github.com/pytorch/audio/commit/108a32d92cd77733841d6c61ab91f8e3ce995f35,Update and move convention section to CONTRIBUTING.md (#1635),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
920,Joel Frank,joel.frank@rub.de,2021-07-29 16:38:53+02:00,86370639baa21b4322ecf92bb03af8a78ffdcb51,https://github.com/pytorch/audio/commit/86370639baa21b4322ecf92bb03af8a78ffdcb51,"Add LFCC feature to transforms (#1611)

Summary:
- Add linear_fbank method
- Add LFCC in transforms",10,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,7,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_grad', '(transform, [waveform])'), ('Equal', '(computed, expected, atol=1e-4, rtol=1e-5)'), ('Equal', '(torch_lfcc.dim(), 3)'), ('Equal', '(torch_lfcc.shape[1], n_lfcc)'), ('Equal', '(torch_lfcc.shape[2], 81)'), ('Equal', '(torch_lfcc.shape[2], 161)'), ('Equal', '(torch_lfcc_norm_none, norm_check)')]",[],[],[],[],[],['()'],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
921,yangarbiter,yangarbiter@users.noreply.github.com,2021-07-29 08:53:48-07:00,47ccabbf9cf49a52cf177230fb7e6646a2c278dc,https://github.com/pytorch/audio/commit/47ccabbf9cf49a52cf177230fb7e6646a2c278dc,Add an inference example for wavernn (#1637),4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
922,yangarbiter,yangarbiter@users.noreply.github.com,2021-07-29 12:42:14-07:00,af8d3b97bae75591d18178b8c5fceac0d82ce85a,https://github.com/pytorch/audio/commit/af8d3b97bae75591d18178b8c5fceac0d82ce85a,Rename infer method to forward for WaveRNNInferenceWrapper (#1650),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
923,Nikita Shulga,nshulga@fb.com,2021-07-30 21:43:29-07:00,70bb4920343e733921f036bc813e0f100578b86c,https://github.com/pytorch/audio/commit/70bb4920343e733921f036bc813e0f100578b86c,"Pin MKL to 2021.2.0 (#1655)

* Pin MKL to 2021.2.0

Fixes https://github.com/pytorch/pytorch/issues/62424

* Apply the same  constraint for conda builds

Use less-than-equals constraint to avoid dependency conflicts for
python-3.6 environment",3,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
924,Nikita Shulga,nshulga@fb.com,2021-07-31 13:04:22-07:00,8a347b62cf5c907d2676bdc983354834e500a282,https://github.com/pytorch/audio/commit/8a347b62cf5c907d2676bdc983354834e500a282,Prep to rename default branch to `main` (#1659),8,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
925,Joel Frank,joel.frank@rub.de,2021-08-02 09:47:31+02:00,83dc5ec738e8c5eaea0e3cb187e19b2046e785b2,https://github.com/pytorch/audio/commit/83dc5ec738e8c5eaea0e3cb187e19b2046e785b2,"Add melscale_fbanks and deprecate create_fb_matrix (#1653)

- Renamed torchaudio.functional.create_fb_matrix to torchaudio.functional.melscale_fbanks.
- Added interface with a warning for create_fb_matrix",7,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
926,yangarbiter,yangarbiter@users.noreply.github.com,2021-08-02 11:00:09-07:00,077a5f4aef25b3164fbac11887b85a2ffc53f920,https://github.com/pytorch/audio/commit/077a5f4aef25b3164fbac11887b85a2ffc53f920,Add CMUDict dataset (#1627),4,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],"[('Class', '(cls)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['word == expected_word', 'phones == expected_phones', 'n_item == len(self.samples)', 'word == expected_word', 'phones == expected_phones', 'n_item == len(self.punc_samples)']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
927,yangarbiter,yangarbiter@users.noreply.github.com,2021-08-02 16:36:25-07:00,2e58f18acf0d672ef1214d7388e6dabed3b5723f,https://github.com/pytorch/audio/commit/2e58f18acf0d672ef1214d7388e6dabed3b5723f,Refactor coding style for wavernn example (#1663),4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
928,Arijit Roy,roy.arijit2001@gmail.com,2021-08-03 17:01:10+05:18,1b919530d409ac83b162d02d32b6742b0927a4c6,https://github.com/pytorch/audio/commit/1b919530d409ac83b162d02d32b6742b0927a4c6,Add example for ComplexNorm (#1658),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
929,nateanl,nizhaoheng@gmail.com,2021-08-03 16:43:13+01:00,430478653f73ec025f90c00b85be9162b69fc80b,https://github.com/pytorch/audio/commit/430478653f73ec025f90c00b85be9162b69fc80b,Fix models import (#1664),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
930,yangarbiter,yangarbiter@users.noreply.github.com,2021-08-03 08:46:26-07:00,ac1c9d5c83f3f0dab23132e1e57cfa4356d3ddd4,https://github.com/pytorch/audio/commit/ac1c9d5c83f3f0dab23132e1e57cfa4356d3ddd4,Fix encoding of CMUDict data reading (#1665),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
931,moto,855818+mthrok@users.noreply.github.com,2021-08-03 12:44:58-04:00,25ceee71ba66a0a02603dcd018a6f33ca4054bfe,https://github.com/pytorch/audio/commit/25ceee71ba66a0a02603dcd018a6f33ca4054bfe,Simplify extension initialization (#1649),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
932,Caroline Chen,carolinechen@fb.com,2021-08-03 13:59:58-04:00,16f3b2f943237f883956e82e3d71cf99622226b9,https://github.com/pytorch/audio/commit/16f3b2f943237f883956e82e3d71cf99622226b9,Remove reuse_logits_for_grads option for RNNTL (#1610),9,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,3,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('Equal', '(costs, ref_costs, atol=atol, rtol=rtol)'), ('Equal', '(logits_shape, gradients.shape)'), ('Equal', '(gradients, ref_gradients, atol=atol, rtol=rtol)')]",[],[],[],[],[],[],[],[],[],[],"[('Equal', '(costs, ref_costs, atol=atol, rtol=rtol)'), ('Equal', '(logits_shape, gradients.shape)'), ('Equal', '(gradients, ref_gradients, atol=atol, rtol=rtol)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
933,yangarbiter,yangarbiter@users.noreply.github.com,2021-08-03 11:35:27-07:00,9078c0b99e642943c193ee22b266f47fc21eda31,https://github.com/pytorch/audio/commit/9078c0b99e642943c193ee22b266f47fc21eda31,Add style checks on example files on CI (#1667),8,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
934,Caroline Chen,carolinechen@fb.com,2021-08-03 15:46:46-04:00,d74d0604d85a6963d14f649b3f20fe2ba5fa6e55,https://github.com/pytorch/audio/commit/d74d0604d85a6963d14f649b3f20fe2ba5fa6e55,Remove fused_log_softmax option from RNNT Loss (#1615),13,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
935,Caroline Chen,carolinechen@fb.com,2021-08-03 15:57:44-04:00,af652ca6f3f848ec6674736b18d727d5252c5887,https://github.com/pytorch/audio/commit/af652ca6f3f848ec6674736b18d727d5252c5887,Improve RNNT Loss docstrings (#1620),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
936,yangarbiter,yangarbiter@users.noreply.github.com,2021-08-03 13:27:56-07:00,9e7aeea1b5e9d02019f0596f9639905c968f7013,https://github.com/pytorch/audio/commit/9e7aeea1b5e9d02019f0596f9639905c968f7013,Add tacotron2 training script (#1642),4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
937,Caroline Chen,carolinechen@fb.com,2021-08-03 17:20:24-04:00,2cece69e1c9825d65b7cf556af380f55d0e94438,https://github.com/pytorch/audio/commit/2cece69e1c9825d65b7cf556af380f55d0e94438,Fix Python spacing (#1670),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
938,S Harish,46412734+harishsdev@users.noreply.github.com,2021-08-04 10:41:45+05:18,48b23c11dfc1614ac2f8dc0d5d3c475a6e4acdb4,https://github.com/pytorch/audio/commit/48b23c11dfc1614ac2f8dc0d5d3c475a6e4acdb4,Add example for MuLawEncoding   (#1586),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
939,S Harish,46412734+harishsdev@users.noreply.github.com,2021-08-04 10:43:19+05:18,1d6b15ea0439d84a0804c0bb645456b985e26696,https://github.com/pytorch/audio/commit/1d6b15ea0439d84a0804c0bb645456b985e26696,Add example for Spectrogram (#1566),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
940,S Harish,46412734+harishsdev@users.noreply.github.com,2021-08-04 20:51:12+05:18,17a3bbfe01badf31420af66cf19cdab8312bea4d,https://github.com/pytorch/audio/commit/17a3bbfe01badf31420af66cf19cdab8312bea4d,Add example for GriffinLim (#1671),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
941,moto,855818+mthrok@users.noreply.github.com,2021-08-04 14:57:30-04:00,ea394347f1e314ab4c7c03ca64307896fdbb8dc5,https://github.com/pytorch/audio/commit/ea394347f1e314ab4c7c03ca64307896fdbb8dc5,"[Fbsync] Move test initialization logic to dedicated directory (#1680)

D30080845",1,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],['install()'],[],[]
942,moto,855818+mthrok@users.noreply.github.com,2021-08-05 13:35:51-04:00,fb35077ae656cb04b7da7c347685a49bde24dca8,https://github.com/pytorch/audio/commit/fb35077ae656cb04b7da7c347685a49bde24dca8,"[Fbsync] Synchronize extension initialization mechanism with fbcode (#1682)

ref: D29989551",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
943,yangarbiter,yangarbiter@users.noreply.github.com,2021-08-05 10:52:02-07:00,2aad928903f2f0f9a05af9a68ac2ed203faf1093,https://github.com/pytorch/audio/commit/2aad928903f2f0f9a05af9a68ac2ed203faf1093,Add documentation for CMUDict's property (#1683),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
944,S Harish,46412734+harishsdev@users.noreply.github.com,2021-08-06 17:12:20+05:18,90c0edc5094279b59afc97cbb7d4ccb355ca294e,https://github.com/pytorch/audio/commit/90c0edc5094279b59afc97cbb7d4ccb355ca294e,Add example for MuLawDecoding (#1684),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
945,yangarbiter,yangarbiter@users.noreply.github.com,2021-08-10 12:29:28-07:00,15bc554f4458a8186bc7257f9c1b4749f928c1c2,https://github.com/pytorch/audio/commit/15bc554f4458a8186bc7257f9c1b4749f928c1c2,Add Tacotron2 inference method (#1648),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['mel_specgram.size() == (n_batch, n_mels, n_time_steps)', 'len(mel_specgram.size()) == 3', 'mel_specgram.size()[:-1] == (n_batch, n_mels, )', 'mel_specgram.size()[2] == mel_specgram_lengths.max().item()', 'len(mel_specgram_lengths.size()) == 1', 'mel_specgram_lengths.size()[0] == n_batch', 'mel_specgram_lengths.max().item() <= model.decoder_max_step', 'len(gate_outputs.size()) == 2', 'gate_outputs.size()[0] == n_batch', 'gate_outputs.size()[1] == mel_specgram_lengths.max().item()', 'len(alignments.size()) == 2', 'alignments.size()[0] == n_seq', 'alignments.size()[1] == mel_specgram_lengths.max().item() * n_batch', 'len(mel_out.size()) == 3', 'mel_out.size()[:2] == (n_batch, n_mels, )', 'mel_out.size()[2] == mel_specgram_lengths.max().item()', 'len(mel_specgram_lengths.size()) == 1', 'mel_specgram_lengths.size()[0] == n_batch', 'mel_specgram_lengths.max().item() <= model.decoder.decoder_max_step', 'len(alignments.size()) == 3', 'alignments.size()[0] == n_batch', 'alignments.size()[1] == mel_specgram_lengths.max().item()', 'alignments.size()[2] == max_text_length']",[],[],[],[],[],[],[],[],[],[],[],[],"['mel_outputs.size() == (n_batch, n_mels, n_time_steps)']",[],[],[],[],[],[],[],[],[],[],[],[]
946,Chin-Yun Yu,ya70201@gmail.com,2021-08-11 04:35:56+08:00,8094751f5536a13e60e7e1f19305d0bf4eb8cc22,https://github.com/pytorch/audio/commit/8094751f5536a13e60e7e1f19305d0bf4eb8cc22,Add batch support to lfilter (#1638),4,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_grad', '(partial(F.lfilter, batching=False), (x, a, b))'), ('Equal', '(batchwise_output, itemwise_output)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
947,yangarbiter,yangarbiter@users.noreply.github.com,2021-08-10 15:12:30-07:00,084455a3232c663406764518e82e82d5e4e73e77,https://github.com/pytorch/audio/commit/084455a3232c663406764518e82e82d5e4e73e77,Add phoneme text preprocessing for Tacotron2 (#1668),4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
948,nateanl,nizhaoheng@gmail.com,2021-08-11 18:50:29+01:00,6e0af71353a88b1d6e378b4d97a0b7a608600169,https://github.com/pytorch/audio/commit/6e0af71353a88b1d6e378b4d97a0b7a608600169,"Add InverseSpectrogram to transforms and functional (#1652)

- Provide InverseSpectrogram module that corresponds to Spectrogram module
- Add length parameter to the forward method in transforms

Co-authored-by: dgenzel <dgenzel@fb.com>
Co-authored-by: Zhaoheng Ni <zni@fb.com>",8,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_grad', '(inv_transform, [spectrogram, length])'), ('Equal', '(computed, expected)'), ('Equal', '(waveform, restored, atol=1e-6, rtol=1e-6)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
949,yangarbiter,yangarbiter@users.noreply.github.com,2021-08-11 11:31:17-07:00,2e1df525fcd52debf6ba2decb32801a1e825f968,https://github.com/pytorch/audio/commit/2e1df525fcd52debf6ba2decb32801a1e825f968,Add tacotron2 pretrained models (#1693),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
950,Eli Uriegas,1700823+seemethere@users.noreply.github.com,2021-08-11 15:09:38-07:00,4c57e1ba00a9c38e2503935f77e2e454281282b2,https://github.com/pytorch/audio/commit/4c57e1ba00a9c38e2503935f77e2e454281282b2,"packaging: Ensure we're propagating BUILD_VERSION (#1697)

BUILD_VERSION gets set by upstream scripts and should be available
whenever we're attempting to build audio in conda environments.

This solves the issue where conda packages appeared to be building a
development version instead of the actual version we were targeting

Signed-off-by: Eli Uriegas <eliuriegas@fb.com>",1,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
951,Chin-Yun Yu,ya70201@gmail.com,2021-08-12 21:41:30+08:00,9535d83ed24a3c7ef0bd2c5ed1abe8b63bade872,https://github.com/pytorch/audio/commit/9535d83ed24a3c7ef0bd2c5ed1abe8b63bade872,Refactor lfilter docs (#1698),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
952,yangarbiter,yangarbiter@users.noreply.github.com,2021-08-12 10:02:40-07:00,9c64184938b1523beee8006a51b311849116a796,https://github.com/pytorch/audio/commit/9c64184938b1523beee8006a51b311849116a796,Add prototype.tacotron2 page to docs (#1695),4,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
953,hwangjeff,hwangjeff@users.noreply.github.com,2021-08-12 14:29:46-04:00,1a64530d7401be4b03a7f62fb57973e1684d3f9c,https://github.com/pytorch/audio/commit/1a64530d7401be4b03a7f62fb57973e1684d3f9c,"[Fbsync] Update pitch shift batch consistency test (#1700)

* Reduce length of waveform in pitch_shift batch_consistency test

Summary: To address the test failure in T96406395

Reviewed By: carolineechen

Differential Revision: D30163741

fbshipit-source-id: f88d86b3da7b1ee52518934567b0b0a62700ee58

* Fix batch consistency test in transforms

Summary: The stress test still fails. Add n_fft to address it.

Reviewed By: mthrok

Differential Revision: D30218279

fbshipit-source-id: 7858efd3e5ac0073193a7883fd314486efc73814

Co-authored-by: Zhaoheng Ni <zni@fb.com>",1,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
954,nateanl,nizhaoheng@gmail.com,2021-08-14 12:19:53+01:00,ee74056fcafe19af9d3c59cbf81acf3c4e1df7d7,https://github.com/pytorch/audio/commit/ee74056fcafe19af9d3c59cbf81acf3c4e1df7d7,Add doc for InverseSpectrogram (#1706),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
955,yangarbiter,yangarbiter@users.noreply.github.com,2021-08-17 12:37:56-07:00,4ea80c56764e5d0a24e11a621d18384b58b6e635,https://github.com/pytorch/audio/commit/4ea80c56764e5d0a24e11a621d18384b58b6e635,Add an inference example for Tacotron2 (#1654),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
956,Caroline Chen,carolinechen@fb.com,2021-08-17 18:46:07-04:00,0f603eb9b385f6355a294423841b38d540a46668,https://github.com/pytorch/audio/commit/0f603eb9b385f6355a294423841b38d540a46668,RNNT loss resolve null gradient (#1707),3,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
957,yangarbiter,yangarbiter@users.noreply.github.com,2021-08-17 20:35:34-07:00,352d63c57858a8717eeece82c393072a1b7d701f,https://github.com/pytorch/audio/commit/352d63c57858a8717eeece82c393072a1b7d701f,Move Tacotron2 out of prototype (#1714),8,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
958,yangarbiter,yangarbiter@users.noreply.github.com,2021-08-17 21:24:32-07:00,a1567702defdd4984df1f51fc9fe9796e6202f1e,https://github.com/pytorch/audio/commit/a1567702defdd4984df1f51fc9fe9796e6202f1e,Fix Tacotron2 inference example (#1716),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
959,moto,855818+mthrok@users.noreply.github.com,2021-08-18 11:58:11-04:00,df9d0b474ed8cb4f4dff1aa7b196700c6e81c104,https://github.com/pytorch/audio/commit/df9d0b474ed8cb4f4dff1aa7b196700c6e81c104,"Guard Kaldi's version generation (#1715)

When building torchaudio from source, `get_version.sh` from kaldi is executed everytime,
which results in kaldi-bindings to be always rebuilt.

This commit add ""if"" guard to the part so that they are not always executed.",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
960,nateanl,nizhaoheng@gmail.com,2021-08-19 08:26:39+01:00,b7d44d97af5778012817bce06da7eec08ec2ffc3,https://github.com/pytorch/audio/commit/b7d44d97af5778012817bce06da7eec08ec2ffc3,[fbsync] (#1717),0,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
961,Caroline Chen,carolinechen@fb.com,2021-08-19 13:06:01-04:00,2c1158214f276e73f6d800d77e16a69931e2fa8e,https://github.com/pytorch/audio/commit/2c1158214f276e73f6d800d77e16a69931e2fa8e,Move RNNT Loss out of prototype (#1711),40,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],0,5,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_grad', '(F.rnnt_loss, inputs, enable_all_grad=False)'), ('Equal', '(costs, ref_costs, atol=atol, rtol=rtol)'), ('Equal', '(logits_shape, gradients.shape)'), ('Equal', '(gradients, ref_gradients, atol=atol, rtol=rtol)'), ('_grad', '(loss, inputs)')]",[],[],[],[],[],[],[],[],[],[],"[('_grad', '(loss, inputs, enable_all_grad=False)'), ('_grad', '(rnnt_loss, inputs, enable_all_grad=False)'), ('_grad', '(loss, inputs, enable_all_grad=False)'), ('Equal', '(costs, ref_costs, atol=atol, rtol=rtol)'), ('Equal', '(logits_shape, gradients.shape)'), ('Equal', '(gradients, ref_gradients, atol=atol, rtol=rtol)'), ('Equal', '(ts_output, output)'), ('Equal', '(ts_output, output)')]",[],[],[],[],[],[],[],[],[],"['gradcheck(transform, inputs, eps=1e-3, atol=1e-3, nondet_tol=0.)', 'gradcheck(transform, inputs, eps=1e-3, atol=1e-3, nondet_tol=0.)']",[],[],[],[],[],[],[],[],[],[],[],[],"['gradcheck(loss, inputs, eps=1e-3, atol=1e-3, nondet_tol=0.)']",[],[],[],[],[],[],[],[],[],[],[],[]
962,bowangbj,85639714+bowangbj@users.noreply.github.com,2021-08-20 08:43:54-07:00,d1ce29a04f14a67971630ca6b02e69fccf2e12b3,https://github.com/pytorch/audio/commit/d1ce29a04f14a67971630ca6b02e69fccf2e12b3,"Check if libsndfile is available by importing soundfile (#1718)

`torchaudio` treats `soundfile` as an optional dependency, and it assumes either `soundfile` is properly installed or it is not installed at all. However, there is a third state where `soundfile` is installed but the backing library `libsndfile` is not installed, and in this case, `import torchaudio` fails.

This commit resolves it by further checking if `soundfile` is importable. 

See also: https://github.com/pytorch/audio/issues/1687",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
963,hwangjeff,hwangjeff@users.noreply.github.com,2021-08-20 12:09:42-04:00,496b381a38af38f98f0e507a00a2e92c77df0fa9,https://github.com/pytorch/audio/commit/496b381a38af38f98f0e507a00a2e92c77df0fa9,"Add basic filtfilt implementation (#1681)

* Add basic filtfilt implementation

* Add filtfilt to functional package; add tests

Co-authored-by: V G <vladislav.goncharenko@phystech.edu>",7,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_grad', '(F.filtfilt, (x, a, b), enable_all_grad=False)'), ('_grad', '(F.filtfilt, (x, a, b), enable_all_grad=False)'), ('_grad', '(F.filtfilt, (x, a, b))'), ('_grad', '(F.filtfilt, (x, a, b))'), ('Equal', '(batchwise_output, itemwise_output)'), ('Equal', '(output_waveform, padded_waveform, atol=1e-5, rtol=1e-5)'), ('Equal', '(')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
964,Caroline Chen,carolinechen@fb.com,2021-08-20 13:27:21-04:00,ecfaac11f8e072f7aad0e419a5a0c5e01180dfda,https://github.com/pytorch/audio/commit/ecfaac11f8e072f7aad0e419a5a0c5e01180dfda,Add sections to transforms docs (#1720),2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
965,Arijit Roy,roy.arijit2001@gmail.com,2021-08-23 17:44:38+05:18,63f0614b3d12c28929e8dbae824bfbdc296d38ad,https://github.com/pytorch/audio/commit/63f0614b3d12c28929e8dbae824bfbdc296d38ad,Add example for Fade transform (#1719),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
966,yangarbiter,yangarbiter@users.noreply.github.com,2021-08-23 10:59:58-07:00,3bb5feb577d18431c782a61aa716ebd3fee134a1,https://github.com/pytorch/audio/commit/3bb5feb577d18431c782a61aa716ebd3fee134a1,Refactor WaveRNN infer and move it to the codebase (#1704),5,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['out.size() == (n_batch, 1, hop_length * (n_time - kernel_size + 1))']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
967,nateanl,nizhaoheng@gmail.com,2021-08-26 08:40:08+01:00,38528cf6805169223d815a0ef11ec4daa4045d5c,https://github.com/pytorch/audio/commit/38528cf6805169223d815a0ef11ec4daa4045d5c,[Docs] Update sphinx to 3.5.4 (#1685),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
968,nateanl,nizhaoheng@gmail.com,2021-08-26 18:56:59+01:00,4915524fa189651a1ab08b44690cc0cb8b772282,https://github.com/pytorch/audio/commit/4915524fa189651a1ab08b44690cc0cb8b772282,"Add MVDR module to example (#1708)

- Support three solutions for MVDR beamforming (""ref_channel"", ""stv_evd"", ""stv_power"").
- Support single-channel and multi-channel time-frequency masks
- Add unit tests",12,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,[],0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],"[('_grad', '(transform, [spectrogram])'), ('_grad', '(transform, [spectrogram, mask])'), ('_grad', '(transform, [spectrogram, mask])'), ('Equal', '(computed, expected)'), ('Equal', '(computed, expected)'), ('Equal', '(computed, expected)'), ('Equal', '(ts_output, output)'), ('Equal', '(psd, psd_np, atol=1e-5, rtol=1e-5)')]",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],"['gradcheck(transform, inputs_)', 'gradgradcheck(transform, inputs_, nondet_tol=nondet_tol)', 'tensors[0].is_complex()']",[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
969,moto,855818+mthrok@users.noreply.github.com,2021-08-26 16:23:39-04:00,560c082e7b2f8cd3f4561702b2b8add9aec01136,https://github.com/pytorch/audio/commit/560c082e7b2f8cd3f4561702b2b8add9aec01136,[Fbsync] Lint fix (#1726),2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
970,moto,855818+mthrok@users.noreply.github.com,2021-08-26 16:41:48-04:00,89ea6955eabf7708e1675d968b6958b9c1689376,https://github.com/pytorch/audio/commit/89ea6955eabf7708e1675d968b6958b9c1689376,"Default to BUILD_SOX=1 in non-Windows systems (#1725)

* Default to BUILD_SOX=1 in non-Windows systems

Since the adaptation of CMake and restricting to the static linking of libsox,
the build process has become much robust with libsox integration enabled.

This commit makes it default behavior to build libsox integration in non-Windows systems.
The build process still checks BUILD_SOX env var so, setting `BUILD_SOX=0` disables it.",8,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
971,moto,855818+mthrok@users.noreply.github.com,2021-08-27 11:46:20-04:00,ef7255bb2decb9f515f1e4e94beaf87f70662ee7,https://github.com/pytorch/audio/commit/ef7255bb2decb9f515f1e4e94beaf87f70662ee7,Remove unnecessary README (#1728),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
972,moto,855818+mthrok@users.noreply.github.com,2021-08-27 15:31:33-04:00,595b37b665db6b419969c59624ec15be15ff716c,https://github.com/pytorch/audio/commit/595b37b665db6b419969c59624ec15be15ff716c,"Refactor scripting in test (#1727)

Introduce a helper function `torch_script` that performs scripting in the recommended way.",10,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
973,Nikita Shulga,nshulga@fb.com,2021-08-28 09:18:43-07:00,a2efef1f14369caffaa09face21282165bf729ac,https://github.com/pytorch/audio/commit/a2efef1f14369caffaa09face21282165bf729ac,"Add `.gitattributes` (#1731)

That marks `.circleci/.config.yml` as auto-generated that excluding it
from code-reviews",1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
974,Nikita Shulga,nshulga@fb.com,2021-08-28 10:04:29-07:00,f13f211b2af0c28cebe30609b693ad0fe1eb28b8,https://github.com/pytorch/audio/commit/f13f211b2af0c28cebe30609b693ad0fe1eb28b8,"Add CUDA install step to Win Packaging jobs (#1732)

Copy `cuda_install.bat` from
https://github.com/pytorch/vision/blob/3d9d264198e2167030dc04bf453aeca47daa37db/packaging/windows/internal/cuda_install.bat

Add `windows_intall_cuda` step and include it in `binary_windows_conda`
and `binary_windows_wheel` workflows",3,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
975,Nikita Shulga,nshulga@fb.com,2021-08-29 22:01:26-07:00,8cbd56c2714f7747262255870e8b825b7c445fc9,https://github.com/pytorch/audio/commit/8cbd56c2714f7747262255870e8b825b7c445fc9,"setup.py should parse TORCH_CUDA_ARCH_LIST (#1733)

Needed to support CUDA builds on CPU machine

Parse `TORCH_CUDA_ARCH_LIST` as new-CUDA-language Cmake-3.18+ style [CMAKE_CUDA_ARCHITECTURES](https://cmake.org/cmake/help/latest/prop_tgt/CUDA_ARCHITECTURES.html#prop_tgt:CUDA_ARCHITECTURES)",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
976,Chin-Yun Yu,ya70201@gmail.com,2021-08-30 22:25:10+08:00,a525abbcbe7858ec22902666e90a5bbde5fefdce,https://github.com/pytorch/audio/commit/a525abbcbe7858ec22902666e90a5bbde5fefdce,Use `at::parallel_for` in lfilter core loop (#1557),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
977,moto,855818+mthrok@users.noreply.github.com,2021-08-30 13:05:45-04:00,e8cc7f9130135e8ab96d58b0225d5120da6a0804,https://github.com/pytorch/audio/commit/e8cc7f9130135e8ab96d58b0225d5120da6a0804,"Simplify the extension initialization process (#1734)

Calling `torch.[ops|classes].load_library(<PATH_TO_LIBRARY_FILE>)` is problematic in case `torchaudio`
is deployed with PEX format, because the library file does not exist as a file.

Our extension module, when it exists, is guaranteed to have PyBind11 binding even when no function is bound.
This allows to load the library using the regular `import` statement in Python, and it works even in PEX format.
When the library is loaded, the static initialization kicks in and the custom kernels bound via TorchScript also
become available. This removes the need to call `torch.[ops|classe].load_library`.

This works even when the implementation of custom kernel is stripped from `_torchaudio.so` so long as `_torchaudio.so` properly depend on the library that has the kernel implementations and static initialization.",3,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
978,Nikita Shulga,nshulga@fb.com,2021-08-31 11:34:36-07:00,e3c082b76778afe8a1e4cbd6630ef3be210a7027,https://github.com/pytorch/audio/commit/e3c082b76778afe8a1e4cbd6630ef3be210a7027,"Fix CUDA build logic for _torchaudio.so (#1737)

It's wrong to depend on `${TORCH_LIBRARIES}` as it pulls in explicit
`libcuda.so.1` dependency, which violates the assumption that GPU
accelerated libraries should be loadable with no NVIDIA drivers installed

Instead, make it depend on `torch` target, which includes all necessary
Torch C++ API dependences",2,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
979,Nikita Shulga,nshulga@fb.com,2021-08-31 11:40:54-07:00,0f8443050bd6ce402f939ef6876fccf1a2dacf16,https://github.com/pytorch/audio/commit/0f8443050bd6ce402f939ef6876fccf1a2dacf16,"Enable Linux wheel/conda GPU package builds (#1730)

* Remove some obsolete conditions about CUDA-10.0 from `pkg_helpers.bash`.
* Use `USE_CUDA` instead of `FORCE_CUDA` in `pkg_helpers.bash`
* Do not define `NO_CUDA_PACKAGE` in build_wheel.sh and build_cuda.sh
* Add conda-forge for Win cuda-11.1 builds
* Pass USE_CUDA / TORCH_CUDA_ARCH_LIST to conda build
* Add selected CUDA to path
* Don't define USE_CUDA for ROCM

TODO: Fix Windows CUDA builds",6,False,False,True,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
980,Nikita Shulga,nshulga@fb.com,2021-08-31 12:25:07-07:00,29c35626657082fa9667bbcb384894fffc348949,https://github.com/pytorch/audio/commit/29c35626657082fa9667bbcb384894fffc348949,"Increase no_output_timeout to 20m for WinConda (#1738)

Downloading CUDA-11.1 from conda-forge takes a while",2,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
981,yangarbiter,yangarbiter@users.noreply.github.com,2021-08-31 15:25:17-07:00,b4553de518104ed34d0bf683007042cf3a7eabf9,https://github.com/pytorch/audio/commit/b4553de518104ed34d0bf683007042cf3a7eabf9,Fix WaveRNN training example (#1740),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
982,yangarbiter,yangarbiter@users.noreply.github.com,2021-09-01 13:58:13-07:00,d579d4b293bdcafb08aa6422a529d4eaa39a9af8,https://github.com/pytorch/audio/commit/d579d4b293bdcafb08aa6422a529d4eaa39a9af8,Add edit_distance to documentation with a new category Metric (#1743),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
983,moto,855818+mthrok@users.noreply.github.com,2021-09-02 10:12:02-04:00,7e6e778b84493adf941e6d255179439254634a6b,https://github.com/pytorch/audio/commit/7e6e778b84493adf941e6d255179439254634a6b,Update the version of fairseq used for testing (#1745),2,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
984,Nikita Shulga,nshulga@fb.com,2021-09-02 09:50:53-07:00,a164477db8dbc137077ed270bcf2c061d96d497f,https://github.com/pytorch/audio/commit/a164477db8dbc137077ed270bcf2c061d96d497f,Build torchaudio for 11.3 as well (#1747),3,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
985,Nikita Shulga,nshulga@fb.com,2021-09-02 11:27:02-07:00,98435e595ade37ea0464b9e51311015d9c3a3dfc,https://github.com/pytorch/audio/commit/98435e595ade37ea0464b9e51311015d9c3a3dfc,"Upload wheels to respective folders (#1751)

Cherry-pick of
https://github.com/pytorch/vision/commit/d2460a75de237cfef8e5c3415f7bb0ad8467c0e5
into this repo

Fixes https://github.com/pytorch/audio/issues/1750",3,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
986,yangarbiter,yangarbiter@users.noreply.github.com,2021-09-02 13:06:00-07:00,d9bfb708b2238778bcdf8e9e6f82b40ee0883887,https://github.com/pytorch/audio/commit/d9bfb708b2238778bcdf8e9e6f82b40ee0883887,Add link to TTS colab example to README (#1748),1,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
987,Caroline Chen,carolinechen@fb.com,2021-09-02 17:09:08-04:00,768432c36619c116ee7c1844eb5fa9be8b028f3a,https://github.com/pytorch/audio/commit/768432c36619c116ee7c1844eb5fa9be8b028f3a,Standardize optional types in docstrings (#1746),21,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
988,jayleverett,jayleverett@fb.com,2021-09-02 18:16:30-04:00,feede97e1a0ba736a07d39570f8ddaddf798eed3,https://github.com/pytorch/audio/commit/feede97e1a0ba736a07d39570f8ddaddf798eed3,"Put output tensor on proper device in `get_whitenoise()` (#1744)

* put output tensor on device in `get_whitenoise()`

* Update `get_spectrogram()` so that window uses same device as waveform

* put window on proper device in `test_griffinlim()`",2,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,[],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]
